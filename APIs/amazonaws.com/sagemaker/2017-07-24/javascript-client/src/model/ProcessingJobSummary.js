/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProcessingJobStatus from './ProcessingJobStatus';

/**
 * The ProcessingJobSummary model module.
 * @module model/ProcessingJobSummary
 * @version 2017-07-24
 */
class ProcessingJobSummary {
    /**
     * Constructs a new <code>ProcessingJobSummary</code>.
     * Summary of information about a processing job.
     * @alias module:model/ProcessingJobSummary
     * @param processingJobName {String} 
     * @param processingJobArn {String} 
     * @param creationTime {Date} 
     * @param processingJobStatus {module:model/ProcessingJobStatus} 
     */
    constructor(processingJobName, processingJobArn, creationTime, processingJobStatus) { 
        
        ProcessingJobSummary.initialize(this, processingJobName, processingJobArn, creationTime, processingJobStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, processingJobName, processingJobArn, creationTime, processingJobStatus) { 
        obj['ProcessingJobName'] = processingJobName;
        obj['ProcessingJobArn'] = processingJobArn;
        obj['CreationTime'] = creationTime;
        obj['ProcessingJobStatus'] = processingJobStatus;
    }

    /**
     * Constructs a <code>ProcessingJobSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessingJobSummary} obj Optional instance to populate.
     * @return {module:model/ProcessingJobSummary} The populated <code>ProcessingJobSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessingJobSummary();

            if (data.hasOwnProperty('ProcessingJobName')) {
                obj['ProcessingJobName'] = ApiClient.convertToType(data['ProcessingJobName'], 'String');
            }
            if (data.hasOwnProperty('ProcessingJobArn')) {
                obj['ProcessingJobArn'] = ApiClient.convertToType(data['ProcessingJobArn'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('ProcessingEndTime')) {
                obj['ProcessingEndTime'] = ApiClient.convertToType(data['ProcessingEndTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('ProcessingJobStatus')) {
                obj['ProcessingJobStatus'] = ApiClient.convertToType(data['ProcessingJobStatus'], ProcessingJobStatus);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('ExitMessage')) {
                obj['ExitMessage'] = ApiClient.convertToType(data['ExitMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProcessingJobSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProcessingJobSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProcessingJobSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProcessingJobName`
        if (data['ProcessingJobName']) { // data not null
          String.validateJSON(data['ProcessingJobName']);
        }
        // validate the optional field `ProcessingJobArn`
        if (data['ProcessingJobArn']) { // data not null
          String.validateJSON(data['ProcessingJobArn']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `ProcessingEndTime`
        if (data['ProcessingEndTime']) { // data not null
          Date.validateJSON(data['ProcessingEndTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `ProcessingJobStatus`
        if (data['ProcessingJobStatus']) { // data not null
          ProcessingJobStatus.validateJSON(data['ProcessingJobStatus']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `ExitMessage`
        if (data['ExitMessage']) { // data not null
          String.validateJSON(data['ExitMessage']);
        }

        return true;
    }


}

ProcessingJobSummary.RequiredProperties = ["ProcessingJobName", "ProcessingJobArn", "CreationTime", "ProcessingJobStatus"];

/**
 * @member {String} ProcessingJobName
 */
ProcessingJobSummary.prototype['ProcessingJobName'] = undefined;

/**
 * @member {String} ProcessingJobArn
 */
ProcessingJobSummary.prototype['ProcessingJobArn'] = undefined;

/**
 * @member {Date} CreationTime
 */
ProcessingJobSummary.prototype['CreationTime'] = undefined;

/**
 * @member {Date} ProcessingEndTime
 */
ProcessingJobSummary.prototype['ProcessingEndTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
ProcessingJobSummary.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/ProcessingJobStatus} ProcessingJobStatus
 */
ProcessingJobSummary.prototype['ProcessingJobStatus'] = undefined;

/**
 * @member {String} FailureReason
 */
ProcessingJobSummary.prototype['FailureReason'] = undefined;

/**
 * @member {String} ExitMessage
 */
ProcessingJobSummary.prototype['ExitMessage'] = undefined;






export default ProcessingJobSummary;

