/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeLabelingJobResponseHumanTaskConfig from './DescribeLabelingJobResponseHumanTaskConfig';
import DescribeLabelingJobResponseInputConfig from './DescribeLabelingJobResponseInputConfig';
import DescribeLabelingJobResponseLabelCounters from './DescribeLabelingJobResponseLabelCounters';
import DescribeLabelingJobResponseLabelingJobAlgorithmsConfig from './DescribeLabelingJobResponseLabelingJobAlgorithmsConfig';
import DescribeLabelingJobResponseLabelingJobOutput from './DescribeLabelingJobResponseLabelingJobOutput';
import DescribeLabelingJobResponseOutputConfig from './DescribeLabelingJobResponseOutputConfig';
import DescribeLabelingJobResponseStoppingConditions from './DescribeLabelingJobResponseStoppingConditions';
import LabelingJobStatus from './LabelingJobStatus';

/**
 * The DescribeLabelingJobResponse model module.
 * @module model/DescribeLabelingJobResponse
 * @version 2017-07-24
 */
class DescribeLabelingJobResponse {
    /**
     * Constructs a new <code>DescribeLabelingJobResponse</code>.
     * @alias module:model/DescribeLabelingJobResponse
     * @param labelingJobStatus {module:model/LabelingJobStatus} 
     * @param labelCounters {module:model/DescribeLabelingJobResponseLabelCounters} 
     * @param creationTime {Date} 
     * @param lastModifiedTime {Date} 
     * @param jobReferenceCode {String} 
     * @param labelingJobName {String} 
     * @param labelingJobArn {String} 
     * @param inputConfig {module:model/DescribeLabelingJobResponseInputConfig} 
     * @param outputConfig {module:model/DescribeLabelingJobResponseOutputConfig} 
     * @param roleArn {String} 
     * @param humanTaskConfig {module:model/DescribeLabelingJobResponseHumanTaskConfig} 
     */
    constructor(labelingJobStatus, labelCounters, creationTime, lastModifiedTime, jobReferenceCode, labelingJobName, labelingJobArn, inputConfig, outputConfig, roleArn, humanTaskConfig) { 
        
        DescribeLabelingJobResponse.initialize(this, labelingJobStatus, labelCounters, creationTime, lastModifiedTime, jobReferenceCode, labelingJobName, labelingJobArn, inputConfig, outputConfig, roleArn, humanTaskConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, labelingJobStatus, labelCounters, creationTime, lastModifiedTime, jobReferenceCode, labelingJobName, labelingJobArn, inputConfig, outputConfig, roleArn, humanTaskConfig) { 
        obj['LabelingJobStatus'] = labelingJobStatus;
        obj['LabelCounters'] = labelCounters;
        obj['CreationTime'] = creationTime;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['JobReferenceCode'] = jobReferenceCode;
        obj['LabelingJobName'] = labelingJobName;
        obj['LabelingJobArn'] = labelingJobArn;
        obj['InputConfig'] = inputConfig;
        obj['OutputConfig'] = outputConfig;
        obj['RoleArn'] = roleArn;
        obj['HumanTaskConfig'] = humanTaskConfig;
    }

    /**
     * Constructs a <code>DescribeLabelingJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeLabelingJobResponse} obj Optional instance to populate.
     * @return {module:model/DescribeLabelingJobResponse} The populated <code>DescribeLabelingJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeLabelingJobResponse();

            if (data.hasOwnProperty('LabelingJobStatus')) {
                obj['LabelingJobStatus'] = ApiClient.convertToType(data['LabelingJobStatus'], LabelingJobStatus);
            }
            if (data.hasOwnProperty('LabelCounters')) {
                obj['LabelCounters'] = DescribeLabelingJobResponseLabelCounters.constructFromObject(data['LabelCounters']);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('JobReferenceCode')) {
                obj['JobReferenceCode'] = ApiClient.convertToType(data['JobReferenceCode'], 'String');
            }
            if (data.hasOwnProperty('LabelingJobName')) {
                obj['LabelingJobName'] = ApiClient.convertToType(data['LabelingJobName'], 'String');
            }
            if (data.hasOwnProperty('LabelingJobArn')) {
                obj['LabelingJobArn'] = ApiClient.convertToType(data['LabelingJobArn'], 'String');
            }
            if (data.hasOwnProperty('LabelAttributeName')) {
                obj['LabelAttributeName'] = ApiClient.convertToType(data['LabelAttributeName'], 'String');
            }
            if (data.hasOwnProperty('InputConfig')) {
                obj['InputConfig'] = DescribeLabelingJobResponseInputConfig.constructFromObject(data['InputConfig']);
            }
            if (data.hasOwnProperty('OutputConfig')) {
                obj['OutputConfig'] = DescribeLabelingJobResponseOutputConfig.constructFromObject(data['OutputConfig']);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('LabelCategoryConfigS3Uri')) {
                obj['LabelCategoryConfigS3Uri'] = ApiClient.convertToType(data['LabelCategoryConfigS3Uri'], 'String');
            }
            if (data.hasOwnProperty('StoppingConditions')) {
                obj['StoppingConditions'] = DescribeLabelingJobResponseStoppingConditions.constructFromObject(data['StoppingConditions']);
            }
            if (data.hasOwnProperty('LabelingJobAlgorithmsConfig')) {
                obj['LabelingJobAlgorithmsConfig'] = DescribeLabelingJobResponseLabelingJobAlgorithmsConfig.constructFromObject(data['LabelingJobAlgorithmsConfig']);
            }
            if (data.hasOwnProperty('HumanTaskConfig')) {
                obj['HumanTaskConfig'] = DescribeLabelingJobResponseHumanTaskConfig.constructFromObject(data['HumanTaskConfig']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('LabelingJobOutput')) {
                obj['LabelingJobOutput'] = DescribeLabelingJobResponseLabelingJobOutput.constructFromObject(data['LabelingJobOutput']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeLabelingJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeLabelingJobResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeLabelingJobResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `LabelingJobStatus`
        if (data['LabelingJobStatus']) { // data not null
          LabelingJobStatus.validateJSON(data['LabelingJobStatus']);
        }
        // validate the optional field `LabelCounters`
        if (data['LabelCounters']) { // data not null
          DescribeLabelingJobResponseLabelCounters.validateJSON(data['LabelCounters']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `JobReferenceCode`
        if (data['JobReferenceCode']) { // data not null
          String.validateJSON(data['JobReferenceCode']);
        }
        // validate the optional field `LabelingJobName`
        if (data['LabelingJobName']) { // data not null
          String.validateJSON(data['LabelingJobName']);
        }
        // validate the optional field `LabelingJobArn`
        if (data['LabelingJobArn']) { // data not null
          String.validateJSON(data['LabelingJobArn']);
        }
        // validate the optional field `LabelAttributeName`
        if (data['LabelAttributeName']) { // data not null
          String.validateJSON(data['LabelAttributeName']);
        }
        // validate the optional field `InputConfig`
        if (data['InputConfig']) { // data not null
          DescribeLabelingJobResponseInputConfig.validateJSON(data['InputConfig']);
        }
        // validate the optional field `OutputConfig`
        if (data['OutputConfig']) { // data not null
          DescribeLabelingJobResponseOutputConfig.validateJSON(data['OutputConfig']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `LabelCategoryConfigS3Uri`
        if (data['LabelCategoryConfigS3Uri']) { // data not null
          String.validateJSON(data['LabelCategoryConfigS3Uri']);
        }
        // validate the optional field `StoppingConditions`
        if (data['StoppingConditions']) { // data not null
          DescribeLabelingJobResponseStoppingConditions.validateJSON(data['StoppingConditions']);
        }
        // validate the optional field `LabelingJobAlgorithmsConfig`
        if (data['LabelingJobAlgorithmsConfig']) { // data not null
          DescribeLabelingJobResponseLabelingJobAlgorithmsConfig.validateJSON(data['LabelingJobAlgorithmsConfig']);
        }
        // validate the optional field `HumanTaskConfig`
        if (data['HumanTaskConfig']) { // data not null
          DescribeLabelingJobResponseHumanTaskConfig.validateJSON(data['HumanTaskConfig']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `LabelingJobOutput`
        if (data['LabelingJobOutput']) { // data not null
          DescribeLabelingJobResponseLabelingJobOutput.validateJSON(data['LabelingJobOutput']);
        }

        return true;
    }


}

DescribeLabelingJobResponse.RequiredProperties = ["LabelingJobStatus", "LabelCounters", "CreationTime", "LastModifiedTime", "JobReferenceCode", "LabelingJobName", "LabelingJobArn", "InputConfig", "OutputConfig", "RoleArn", "HumanTaskConfig"];

/**
 * @member {module:model/LabelingJobStatus} LabelingJobStatus
 */
DescribeLabelingJobResponse.prototype['LabelingJobStatus'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseLabelCounters} LabelCounters
 */
DescribeLabelingJobResponse.prototype['LabelCounters'] = undefined;

/**
 * @member {String} FailureReason
 */
DescribeLabelingJobResponse.prototype['FailureReason'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeLabelingJobResponse.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
DescribeLabelingJobResponse.prototype['LastModifiedTime'] = undefined;

/**
 * @member {String} JobReferenceCode
 */
DescribeLabelingJobResponse.prototype['JobReferenceCode'] = undefined;

/**
 * @member {String} LabelingJobName
 */
DescribeLabelingJobResponse.prototype['LabelingJobName'] = undefined;

/**
 * @member {String} LabelingJobArn
 */
DescribeLabelingJobResponse.prototype['LabelingJobArn'] = undefined;

/**
 * @member {String} LabelAttributeName
 */
DescribeLabelingJobResponse.prototype['LabelAttributeName'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseInputConfig} InputConfig
 */
DescribeLabelingJobResponse.prototype['InputConfig'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseOutputConfig} OutputConfig
 */
DescribeLabelingJobResponse.prototype['OutputConfig'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeLabelingJobResponse.prototype['RoleArn'] = undefined;

/**
 * @member {String} LabelCategoryConfigS3Uri
 */
DescribeLabelingJobResponse.prototype['LabelCategoryConfigS3Uri'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseStoppingConditions} StoppingConditions
 */
DescribeLabelingJobResponse.prototype['StoppingConditions'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseLabelingJobAlgorithmsConfig} LabelingJobAlgorithmsConfig
 */
DescribeLabelingJobResponse.prototype['LabelingJobAlgorithmsConfig'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseHumanTaskConfig} HumanTaskConfig
 */
DescribeLabelingJobResponse.prototype['HumanTaskConfig'] = undefined;

/**
 * @member {Array} Tags
 */
DescribeLabelingJobResponse.prototype['Tags'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseLabelingJobOutput} LabelingJobOutput
 */
DescribeLabelingJobResponse.prototype['LabelingJobOutput'] = undefined;






export default DescribeLabelingJobResponse;

