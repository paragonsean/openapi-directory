/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HyperParameterAlgorithmSpecification from './HyperParameterAlgorithmSpecification';
import TrainingInputMode from './TrainingInputMode';

/**
 * The HyperParameterTrainingJobDefinitionAlgorithmSpecification model module.
 * @module model/HyperParameterTrainingJobDefinitionAlgorithmSpecification
 * @version 2017-07-24
 */
class HyperParameterTrainingJobDefinitionAlgorithmSpecification {
    /**
     * Constructs a new <code>HyperParameterTrainingJobDefinitionAlgorithmSpecification</code>.
     * @alias module:model/HyperParameterTrainingJobDefinitionAlgorithmSpecification
     * @implements module:model/HyperParameterAlgorithmSpecification
     * @param trainingInputMode {module:model/TrainingInputMode} 
     */
    constructor(trainingInputMode) { 
        HyperParameterAlgorithmSpecification.initialize(this, trainingInputMode);
        HyperParameterTrainingJobDefinitionAlgorithmSpecification.initialize(this, trainingInputMode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, trainingInputMode) { 
        obj['TrainingInputMode'] = trainingInputMode;
    }

    /**
     * Constructs a <code>HyperParameterTrainingJobDefinitionAlgorithmSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperParameterTrainingJobDefinitionAlgorithmSpecification} obj Optional instance to populate.
     * @return {module:model/HyperParameterTrainingJobDefinitionAlgorithmSpecification} The populated <code>HyperParameterTrainingJobDefinitionAlgorithmSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperParameterTrainingJobDefinitionAlgorithmSpecification();
            HyperParameterAlgorithmSpecification.constructFromObject(data, obj);

            if (data.hasOwnProperty('TrainingImage')) {
                obj['TrainingImage'] = ApiClient.convertToType(data['TrainingImage'], 'String');
            }
            if (data.hasOwnProperty('TrainingInputMode')) {
                obj['TrainingInputMode'] = TrainingInputMode.constructFromObject(data['TrainingInputMode']);
            }
            if (data.hasOwnProperty('AlgorithmName')) {
                obj['AlgorithmName'] = ApiClient.convertToType(data['AlgorithmName'], 'String');
            }
            if (data.hasOwnProperty('MetricDefinitions')) {
                obj['MetricDefinitions'] = ApiClient.convertToType(data['MetricDefinitions'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperParameterTrainingJobDefinitionAlgorithmSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperParameterTrainingJobDefinitionAlgorithmSpecification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HyperParameterTrainingJobDefinitionAlgorithmSpecification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TrainingImage`
        if (data['TrainingImage']) { // data not null
          String.validateJSON(data['TrainingImage']);
        }
        // validate the optional field `AlgorithmName`
        if (data['AlgorithmName']) { // data not null
          String.validateJSON(data['AlgorithmName']);
        }
        // validate the optional field `MetricDefinitions`
        if (data['MetricDefinitions']) { // data not null
          Array.validateJSON(data['MetricDefinitions']);
        }

        return true;
    }


}

HyperParameterTrainingJobDefinitionAlgorithmSpecification.RequiredProperties = ["TrainingInputMode"];

/**
 * @member {String} TrainingImage
 */
HyperParameterTrainingJobDefinitionAlgorithmSpecification.prototype['TrainingImage'] = undefined;

/**
 * @member {module:model/TrainingInputMode} TrainingInputMode
 */
HyperParameterTrainingJobDefinitionAlgorithmSpecification.prototype['TrainingInputMode'] = undefined;

/**
 * @member {String} AlgorithmName
 */
HyperParameterTrainingJobDefinitionAlgorithmSpecification.prototype['AlgorithmName'] = undefined;

/**
 * @member {Array} MetricDefinitions
 */
HyperParameterTrainingJobDefinitionAlgorithmSpecification.prototype['MetricDefinitions'] = undefined;


// Implement HyperParameterAlgorithmSpecification interface:
/**
 * @member {String} TrainingImage
 */
HyperParameterAlgorithmSpecification.prototype['TrainingImage'] = undefined;
/**
 * @member {module:model/TrainingInputMode} TrainingInputMode
 */
HyperParameterAlgorithmSpecification.prototype['TrainingInputMode'] = undefined;
/**
 * @member {String} AlgorithmName
 */
HyperParameterAlgorithmSpecification.prototype['AlgorithmName'] = undefined;
/**
 * @member {Array} MetricDefinitions
 */
HyperParameterAlgorithmSpecification.prototype['MetricDefinitions'] = undefined;




export default HyperParameterTrainingJobDefinitionAlgorithmSpecification;

