/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClarifyTextGranularity from './ClarifyTextGranularity';
import ClarifyTextLanguage from './ClarifyTextLanguage';

/**
 * The ClarifyTextConfig model module.
 * @module model/ClarifyTextConfig
 * @version 2017-07-24
 */
class ClarifyTextConfig {
    /**
     * Constructs a new <code>ClarifyTextConfig</code>.
     * A parameter used to configure the SageMaker Clarify explainer to treat text features as text so that explanations are provided for individual units of text. Required only for natural language processing (NLP) explainability. 
     * @alias module:model/ClarifyTextConfig
     * @param language {module:model/ClarifyTextLanguage} 
     * @param granularity {module:model/ClarifyTextGranularity} 
     */
    constructor(language, granularity) { 
        
        ClarifyTextConfig.initialize(this, language, granularity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, language, granularity) { 
        obj['Language'] = language;
        obj['Granularity'] = granularity;
    }

    /**
     * Constructs a <code>ClarifyTextConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClarifyTextConfig} obj Optional instance to populate.
     * @return {module:model/ClarifyTextConfig} The populated <code>ClarifyTextConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClarifyTextConfig();

            if (data.hasOwnProperty('Language')) {
                obj['Language'] = ApiClient.convertToType(data['Language'], ClarifyTextLanguage);
            }
            if (data.hasOwnProperty('Granularity')) {
                obj['Granularity'] = ApiClient.convertToType(data['Granularity'], ClarifyTextGranularity);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClarifyTextConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClarifyTextConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClarifyTextConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Language`
        if (data['Language']) { // data not null
          ClarifyTextLanguage.validateJSON(data['Language']);
        }
        // validate the optional field `Granularity`
        if (data['Granularity']) { // data not null
          ClarifyTextGranularity.validateJSON(data['Granularity']);
        }

        return true;
    }


}

ClarifyTextConfig.RequiredProperties = ["Language", "Granularity"];

/**
 * @member {module:model/ClarifyTextLanguage} Language
 */
ClarifyTextConfig.prototype['Language'] = undefined;

/**
 * @member {module:model/ClarifyTextGranularity} Granularity
 */
ClarifyTextConfig.prototype['Granularity'] = undefined;






export default ClarifyTextConfig;

