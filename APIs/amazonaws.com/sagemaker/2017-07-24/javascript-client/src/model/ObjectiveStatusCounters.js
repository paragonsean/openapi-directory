/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObjectiveStatusCounters model module.
 * @module model/ObjectiveStatusCounters
 * @version 2017-07-24
 */
class ObjectiveStatusCounters {
    /**
     * Constructs a new <code>ObjectiveStatusCounters</code>.
     * Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.
     * @alias module:model/ObjectiveStatusCounters
     */
    constructor() { 
        
        ObjectiveStatusCounters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObjectiveStatusCounters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjectiveStatusCounters} obj Optional instance to populate.
     * @return {module:model/ObjectiveStatusCounters} The populated <code>ObjectiveStatusCounters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjectiveStatusCounters();

            if (data.hasOwnProperty('Succeeded')) {
                obj['Succeeded'] = ApiClient.convertToType(data['Succeeded'], 'Number');
            }
            if (data.hasOwnProperty('Pending')) {
                obj['Pending'] = ApiClient.convertToType(data['Pending'], 'Number');
            }
            if (data.hasOwnProperty('Failed')) {
                obj['Failed'] = ApiClient.convertToType(data['Failed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjectiveStatusCounters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjectiveStatusCounters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Succeeded`
        if (data['Succeeded']) { // data not null
          Number.validateJSON(data['Succeeded']);
        }
        // validate the optional field `Pending`
        if (data['Pending']) { // data not null
          Number.validateJSON(data['Pending']);
        }
        // validate the optional field `Failed`
        if (data['Failed']) { // data not null
          Number.validateJSON(data['Failed']);
        }

        return true;
    }


}



/**
 * @member {Number} Succeeded
 */
ObjectiveStatusCounters.prototype['Succeeded'] = undefined;

/**
 * @member {Number} Pending
 */
ObjectiveStatusCounters.prototype['Pending'] = undefined;

/**
 * @member {Number} Failed
 */
ObjectiveStatusCounters.prototype['Failed'] = undefined;






export default ObjectiveStatusCounters;

