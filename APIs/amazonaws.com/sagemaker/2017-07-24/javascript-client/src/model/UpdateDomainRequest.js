/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppSecurityGroupManagement from './AppSecurityGroupManagement';
import CreateUserProfileRequestUserSettings from './CreateUserProfileRequestUserSettings';
import UpdateDomainRequestDefaultSpaceSettings from './UpdateDomainRequestDefaultSpaceSettings';
import UpdateDomainRequestDomainSettingsForUpdate from './UpdateDomainRequestDomainSettingsForUpdate';

/**
 * The UpdateDomainRequest model module.
 * @module model/UpdateDomainRequest
 * @version 2017-07-24
 */
class UpdateDomainRequest {
    /**
     * Constructs a new <code>UpdateDomainRequest</code>.
     * @alias module:model/UpdateDomainRequest
     * @param domainId {String} 
     */
    constructor(domainId) { 
        
        UpdateDomainRequest.initialize(this, domainId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainId) { 
        obj['DomainId'] = domainId;
    }

    /**
     * Constructs a <code>UpdateDomainRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDomainRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDomainRequest} The populated <code>UpdateDomainRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDomainRequest();

            if (data.hasOwnProperty('DomainId')) {
                obj['DomainId'] = ApiClient.convertToType(data['DomainId'], 'String');
            }
            if (data.hasOwnProperty('DefaultUserSettings')) {
                obj['DefaultUserSettings'] = CreateUserProfileRequestUserSettings.constructFromObject(data['DefaultUserSettings']);
            }
            if (data.hasOwnProperty('DomainSettingsForUpdate')) {
                obj['DomainSettingsForUpdate'] = UpdateDomainRequestDomainSettingsForUpdate.constructFromObject(data['DomainSettingsForUpdate']);
            }
            if (data.hasOwnProperty('DefaultSpaceSettings')) {
                obj['DefaultSpaceSettings'] = UpdateDomainRequestDefaultSpaceSettings.constructFromObject(data['DefaultSpaceSettings']);
            }
            if (data.hasOwnProperty('AppSecurityGroupManagement')) {
                obj['AppSecurityGroupManagement'] = ApiClient.convertToType(data['AppSecurityGroupManagement'], AppSecurityGroupManagement);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDomainRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDomainRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateDomainRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DomainId`
        if (data['DomainId']) { // data not null
          String.validateJSON(data['DomainId']);
        }
        // validate the optional field `DefaultUserSettings`
        if (data['DefaultUserSettings']) { // data not null
          CreateUserProfileRequestUserSettings.validateJSON(data['DefaultUserSettings']);
        }
        // validate the optional field `DomainSettingsForUpdate`
        if (data['DomainSettingsForUpdate']) { // data not null
          UpdateDomainRequestDomainSettingsForUpdate.validateJSON(data['DomainSettingsForUpdate']);
        }
        // validate the optional field `DefaultSpaceSettings`
        if (data['DefaultSpaceSettings']) { // data not null
          UpdateDomainRequestDefaultSpaceSettings.validateJSON(data['DefaultSpaceSettings']);
        }
        // validate the optional field `AppSecurityGroupManagement`
        if (data['AppSecurityGroupManagement']) { // data not null
          AppSecurityGroupManagement.validateJSON(data['AppSecurityGroupManagement']);
        }

        return true;
    }


}

UpdateDomainRequest.RequiredProperties = ["DomainId"];

/**
 * @member {String} DomainId
 */
UpdateDomainRequest.prototype['DomainId'] = undefined;

/**
 * @member {module:model/CreateUserProfileRequestUserSettings} DefaultUserSettings
 */
UpdateDomainRequest.prototype['DefaultUserSettings'] = undefined;

/**
 * @member {module:model/UpdateDomainRequestDomainSettingsForUpdate} DomainSettingsForUpdate
 */
UpdateDomainRequest.prototype['DomainSettingsForUpdate'] = undefined;

/**
 * @member {module:model/UpdateDomainRequestDefaultSpaceSettings} DefaultSpaceSettings
 */
UpdateDomainRequest.prototype['DefaultSpaceSettings'] = undefined;

/**
 * @member {module:model/AppSecurityGroupManagement} AppSecurityGroupManagement
 */
UpdateDomainRequest.prototype['AppSecurityGroupManagement'] = undefined;






export default UpdateDomainRequest;

