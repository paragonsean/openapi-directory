/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EdgeModelStat model module.
 * @module model/EdgeModelStat
 * @version 2017-07-24
 */
class EdgeModelStat {
    /**
     * Constructs a new <code>EdgeModelStat</code>.
     * Status of edge devices with this model.
     * @alias module:model/EdgeModelStat
     * @param modelName {String} 
     * @param modelVersion {String} 
     * @param offlineDeviceCount {Number} 
     * @param connectedDeviceCount {Number} 
     * @param activeDeviceCount {Number} 
     * @param samplingDeviceCount {Number} 
     */
    constructor(modelName, modelVersion, offlineDeviceCount, connectedDeviceCount, activeDeviceCount, samplingDeviceCount) { 
        
        EdgeModelStat.initialize(this, modelName, modelVersion, offlineDeviceCount, connectedDeviceCount, activeDeviceCount, samplingDeviceCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, modelName, modelVersion, offlineDeviceCount, connectedDeviceCount, activeDeviceCount, samplingDeviceCount) { 
        obj['ModelName'] = modelName;
        obj['ModelVersion'] = modelVersion;
        obj['OfflineDeviceCount'] = offlineDeviceCount;
        obj['ConnectedDeviceCount'] = connectedDeviceCount;
        obj['ActiveDeviceCount'] = activeDeviceCount;
        obj['SamplingDeviceCount'] = samplingDeviceCount;
    }

    /**
     * Constructs a <code>EdgeModelStat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EdgeModelStat} obj Optional instance to populate.
     * @return {module:model/EdgeModelStat} The populated <code>EdgeModelStat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EdgeModelStat();

            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('ModelVersion')) {
                obj['ModelVersion'] = ApiClient.convertToType(data['ModelVersion'], 'String');
            }
            if (data.hasOwnProperty('OfflineDeviceCount')) {
                obj['OfflineDeviceCount'] = ApiClient.convertToType(data['OfflineDeviceCount'], 'Number');
            }
            if (data.hasOwnProperty('ConnectedDeviceCount')) {
                obj['ConnectedDeviceCount'] = ApiClient.convertToType(data['ConnectedDeviceCount'], 'Number');
            }
            if (data.hasOwnProperty('ActiveDeviceCount')) {
                obj['ActiveDeviceCount'] = ApiClient.convertToType(data['ActiveDeviceCount'], 'Number');
            }
            if (data.hasOwnProperty('SamplingDeviceCount')) {
                obj['SamplingDeviceCount'] = ApiClient.convertToType(data['SamplingDeviceCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EdgeModelStat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EdgeModelStat</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EdgeModelStat.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `ModelVersion`
        if (data['ModelVersion']) { // data not null
          String.validateJSON(data['ModelVersion']);
        }
        // validate the optional field `OfflineDeviceCount`
        if (data['OfflineDeviceCount']) { // data not null
          Number.validateJSON(data['OfflineDeviceCount']);
        }
        // validate the optional field `ConnectedDeviceCount`
        if (data['ConnectedDeviceCount']) { // data not null
          Number.validateJSON(data['ConnectedDeviceCount']);
        }
        // validate the optional field `ActiveDeviceCount`
        if (data['ActiveDeviceCount']) { // data not null
          Number.validateJSON(data['ActiveDeviceCount']);
        }
        // validate the optional field `SamplingDeviceCount`
        if (data['SamplingDeviceCount']) { // data not null
          Number.validateJSON(data['SamplingDeviceCount']);
        }

        return true;
    }


}

EdgeModelStat.RequiredProperties = ["ModelName", "ModelVersion", "OfflineDeviceCount", "ConnectedDeviceCount", "ActiveDeviceCount", "SamplingDeviceCount"];

/**
 * @member {String} ModelName
 */
EdgeModelStat.prototype['ModelName'] = undefined;

/**
 * @member {String} ModelVersion
 */
EdgeModelStat.prototype['ModelVersion'] = undefined;

/**
 * @member {Number} OfflineDeviceCount
 */
EdgeModelStat.prototype['OfflineDeviceCount'] = undefined;

/**
 * @member {Number} ConnectedDeviceCount
 */
EdgeModelStat.prototype['ConnectedDeviceCount'] = undefined;

/**
 * @member {Number} ActiveDeviceCount
 */
EdgeModelStat.prototype['ActiveDeviceCount'] = undefined;

/**
 * @member {Number} SamplingDeviceCount
 */
EdgeModelStat.prototype['SamplingDeviceCount'] = undefined;






export default EdgeModelStat;

