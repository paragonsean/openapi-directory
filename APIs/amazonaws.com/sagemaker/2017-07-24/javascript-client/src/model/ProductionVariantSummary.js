/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PendingProductionVariantSummaryCurrentServerlessConfig from './PendingProductionVariantSummaryCurrentServerlessConfig';
import ProductionVariantSummaryDesiredServerlessConfig from './ProductionVariantSummaryDesiredServerlessConfig';

/**
 * The ProductionVariantSummary model module.
 * @module model/ProductionVariantSummary
 * @version 2017-07-24
 */
class ProductionVariantSummary {
    /**
     * Constructs a new <code>ProductionVariantSummary</code>.
     * Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the &lt;code&gt;UpdateEndpointWeightsAndCapacities&lt;/code&gt; API and the endpoint status is &lt;code&gt;Updating&lt;/code&gt;, you get different desired and current values. 
     * @alias module:model/ProductionVariantSummary
     * @param variantName {String} 
     */
    constructor(variantName) { 
        
        ProductionVariantSummary.initialize(this, variantName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, variantName) { 
        obj['VariantName'] = variantName;
    }

    /**
     * Constructs a <code>ProductionVariantSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductionVariantSummary} obj Optional instance to populate.
     * @return {module:model/ProductionVariantSummary} The populated <code>ProductionVariantSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductionVariantSummary();

            if (data.hasOwnProperty('VariantName')) {
                obj['VariantName'] = ApiClient.convertToType(data['VariantName'], 'String');
            }
            if (data.hasOwnProperty('DeployedImages')) {
                obj['DeployedImages'] = ApiClient.convertToType(data['DeployedImages'], Array);
            }
            if (data.hasOwnProperty('CurrentWeight')) {
                obj['CurrentWeight'] = ApiClient.convertToType(data['CurrentWeight'], 'Number');
            }
            if (data.hasOwnProperty('DesiredWeight')) {
                obj['DesiredWeight'] = ApiClient.convertToType(data['DesiredWeight'], 'Number');
            }
            if (data.hasOwnProperty('CurrentInstanceCount')) {
                obj['CurrentInstanceCount'] = ApiClient.convertToType(data['CurrentInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('DesiredInstanceCount')) {
                obj['DesiredInstanceCount'] = ApiClient.convertToType(data['DesiredInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('VariantStatus')) {
                obj['VariantStatus'] = ApiClient.convertToType(data['VariantStatus'], Array);
            }
            if (data.hasOwnProperty('CurrentServerlessConfig')) {
                obj['CurrentServerlessConfig'] = PendingProductionVariantSummaryCurrentServerlessConfig.constructFromObject(data['CurrentServerlessConfig']);
            }
            if (data.hasOwnProperty('DesiredServerlessConfig')) {
                obj['DesiredServerlessConfig'] = ProductionVariantSummaryDesiredServerlessConfig.constructFromObject(data['DesiredServerlessConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductionVariantSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductionVariantSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductionVariantSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `VariantName`
        if (data['VariantName']) { // data not null
          String.validateJSON(data['VariantName']);
        }
        // validate the optional field `DeployedImages`
        if (data['DeployedImages']) { // data not null
          Array.validateJSON(data['DeployedImages']);
        }
        // validate the optional field `CurrentWeight`
        if (data['CurrentWeight']) { // data not null
          Number.validateJSON(data['CurrentWeight']);
        }
        // validate the optional field `DesiredWeight`
        if (data['DesiredWeight']) { // data not null
          Number.validateJSON(data['DesiredWeight']);
        }
        // validate the optional field `CurrentInstanceCount`
        if (data['CurrentInstanceCount']) { // data not null
          Number.validateJSON(data['CurrentInstanceCount']);
        }
        // validate the optional field `DesiredInstanceCount`
        if (data['DesiredInstanceCount']) { // data not null
          Number.validateJSON(data['DesiredInstanceCount']);
        }
        // validate the optional field `VariantStatus`
        if (data['VariantStatus']) { // data not null
          Array.validateJSON(data['VariantStatus']);
        }
        // validate the optional field `CurrentServerlessConfig`
        if (data['CurrentServerlessConfig']) { // data not null
          PendingProductionVariantSummaryCurrentServerlessConfig.validateJSON(data['CurrentServerlessConfig']);
        }
        // validate the optional field `DesiredServerlessConfig`
        if (data['DesiredServerlessConfig']) { // data not null
          ProductionVariantSummaryDesiredServerlessConfig.validateJSON(data['DesiredServerlessConfig']);
        }

        return true;
    }


}

ProductionVariantSummary.RequiredProperties = ["VariantName"];

/**
 * @member {String} VariantName
 */
ProductionVariantSummary.prototype['VariantName'] = undefined;

/**
 * @member {Array} DeployedImages
 */
ProductionVariantSummary.prototype['DeployedImages'] = undefined;

/**
 * @member {Number} CurrentWeight
 */
ProductionVariantSummary.prototype['CurrentWeight'] = undefined;

/**
 * @member {Number} DesiredWeight
 */
ProductionVariantSummary.prototype['DesiredWeight'] = undefined;

/**
 * @member {Number} CurrentInstanceCount
 */
ProductionVariantSummary.prototype['CurrentInstanceCount'] = undefined;

/**
 * @member {Number} DesiredInstanceCount
 */
ProductionVariantSummary.prototype['DesiredInstanceCount'] = undefined;

/**
 * @member {Array} VariantStatus
 */
ProductionVariantSummary.prototype['VariantStatus'] = undefined;

/**
 * @member {module:model/PendingProductionVariantSummaryCurrentServerlessConfig} CurrentServerlessConfig
 */
ProductionVariantSummary.prototype['CurrentServerlessConfig'] = undefined;

/**
 * @member {module:model/ProductionVariantSummaryDesiredServerlessConfig} DesiredServerlessConfig
 */
ProductionVariantSummary.prototype['DesiredServerlessConfig'] = undefined;






export default ProductionVariantSummary;

