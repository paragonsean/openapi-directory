/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchDescribeModelPackageError model module.
 * @module model/BatchDescribeModelPackageError
 * @version 2017-07-24
 */
class BatchDescribeModelPackageError {
    /**
     * Constructs a new <code>BatchDescribeModelPackageError</code>.
     * The error code and error description associated with the resource.
     * @alias module:model/BatchDescribeModelPackageError
     * @param errorCode {String} 
     * @param errorResponse {String} 
     */
    constructor(errorCode, errorResponse) { 
        
        BatchDescribeModelPackageError.initialize(this, errorCode, errorResponse);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, errorCode, errorResponse) { 
        obj['ErrorCode'] = errorCode;
        obj['ErrorResponse'] = errorResponse;
    }

    /**
     * Constructs a <code>BatchDescribeModelPackageError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchDescribeModelPackageError} obj Optional instance to populate.
     * @return {module:model/BatchDescribeModelPackageError} The populated <code>BatchDescribeModelPackageError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchDescribeModelPackageError();

            if (data.hasOwnProperty('ErrorCode')) {
                obj['ErrorCode'] = ApiClient.convertToType(data['ErrorCode'], 'String');
            }
            if (data.hasOwnProperty('ErrorResponse')) {
                obj['ErrorResponse'] = ApiClient.convertToType(data['ErrorResponse'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchDescribeModelPackageError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchDescribeModelPackageError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchDescribeModelPackageError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ErrorCode`
        if (data['ErrorCode']) { // data not null
          String.validateJSON(data['ErrorCode']);
        }
        // validate the optional field `ErrorResponse`
        if (data['ErrorResponse']) { // data not null
          String.validateJSON(data['ErrorResponse']);
        }

        return true;
    }


}

BatchDescribeModelPackageError.RequiredProperties = ["ErrorCode", "ErrorResponse"];

/**
 * @member {String} ErrorCode
 */
BatchDescribeModelPackageError.prototype['ErrorCode'] = undefined;

/**
 * @member {String} ErrorResponse
 */
BatchDescribeModelPackageError.prototype['ErrorResponse'] = undefined;






export default BatchDescribeModelPackageError;

