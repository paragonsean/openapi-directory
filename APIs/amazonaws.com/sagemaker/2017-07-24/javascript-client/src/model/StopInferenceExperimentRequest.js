/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InferenceExperimentStopDesiredState from './InferenceExperimentStopDesiredState';

/**
 * The StopInferenceExperimentRequest model module.
 * @module model/StopInferenceExperimentRequest
 * @version 2017-07-24
 */
class StopInferenceExperimentRequest {
    /**
     * Constructs a new <code>StopInferenceExperimentRequest</code>.
     * @alias module:model/StopInferenceExperimentRequest
     * @param name {String} 
     * @param modelVariantActions {Object} 
     */
    constructor(name, modelVariantActions) { 
        
        StopInferenceExperimentRequest.initialize(this, name, modelVariantActions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, modelVariantActions) { 
        obj['Name'] = name;
        obj['ModelVariantActions'] = modelVariantActions;
    }

    /**
     * Constructs a <code>StopInferenceExperimentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StopInferenceExperimentRequest} obj Optional instance to populate.
     * @return {module:model/StopInferenceExperimentRequest} The populated <code>StopInferenceExperimentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StopInferenceExperimentRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ModelVariantActions')) {
                obj['ModelVariantActions'] = ApiClient.convertToType(data['ModelVariantActions'], Object);
            }
            if (data.hasOwnProperty('DesiredModelVariants')) {
                obj['DesiredModelVariants'] = ApiClient.convertToType(data['DesiredModelVariants'], Array);
            }
            if (data.hasOwnProperty('DesiredState')) {
                obj['DesiredState'] = ApiClient.convertToType(data['DesiredState'], InferenceExperimentStopDesiredState);
            }
            if (data.hasOwnProperty('Reason')) {
                obj['Reason'] = ApiClient.convertToType(data['Reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StopInferenceExperimentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StopInferenceExperimentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StopInferenceExperimentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `ModelVariantActions`
        if (data['ModelVariantActions']) { // data not null
          Object.validateJSON(data['ModelVariantActions']);
        }
        // validate the optional field `DesiredModelVariants`
        if (data['DesiredModelVariants']) { // data not null
          Array.validateJSON(data['DesiredModelVariants']);
        }
        // validate the optional field `DesiredState`
        if (data['DesiredState']) { // data not null
          InferenceExperimentStopDesiredState.validateJSON(data['DesiredState']);
        }
        // validate the optional field `Reason`
        if (data['Reason']) { // data not null
          String.validateJSON(data['Reason']);
        }

        return true;
    }


}

StopInferenceExperimentRequest.RequiredProperties = ["Name", "ModelVariantActions"];

/**
 * @member {String} Name
 */
StopInferenceExperimentRequest.prototype['Name'] = undefined;

/**
 * @member {Object} ModelVariantActions
 */
StopInferenceExperimentRequest.prototype['ModelVariantActions'] = undefined;

/**
 * @member {Array} DesiredModelVariants
 */
StopInferenceExperimentRequest.prototype['DesiredModelVariants'] = undefined;

/**
 * @member {module:model/InferenceExperimentStopDesiredState} DesiredState
 */
StopInferenceExperimentRequest.prototype['DesiredState'] = undefined;

/**
 * @member {String} Reason
 */
StopInferenceExperimentRequest.prototype['Reason'] = undefined;






export default StopInferenceExperimentRequest;

