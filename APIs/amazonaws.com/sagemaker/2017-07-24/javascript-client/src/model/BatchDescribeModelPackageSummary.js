/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InferenceSpecification from './InferenceSpecification';
import ModelApprovalStatus from './ModelApprovalStatus';
import ModelPackageStatus from './ModelPackageStatus';

/**
 * The BatchDescribeModelPackageSummary model module.
 * @module model/BatchDescribeModelPackageSummary
 * @version 2017-07-24
 */
class BatchDescribeModelPackageSummary {
    /**
     * Constructs a new <code>BatchDescribeModelPackageSummary</code>.
     * Provides summary information about the model package.
     * @alias module:model/BatchDescribeModelPackageSummary
     * @param modelPackageGroupName {String} 
     * @param modelPackageArn {String} 
     * @param creationTime {Date} 
     * @param inferenceSpecification {module:model/InferenceSpecification} 
     * @param modelPackageStatus {module:model/ModelPackageStatus} 
     */
    constructor(modelPackageGroupName, modelPackageArn, creationTime, inferenceSpecification, modelPackageStatus) { 
        
        BatchDescribeModelPackageSummary.initialize(this, modelPackageGroupName, modelPackageArn, creationTime, inferenceSpecification, modelPackageStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, modelPackageGroupName, modelPackageArn, creationTime, inferenceSpecification, modelPackageStatus) { 
        obj['ModelPackageGroupName'] = modelPackageGroupName;
        obj['ModelPackageArn'] = modelPackageArn;
        obj['CreationTime'] = creationTime;
        obj['InferenceSpecification'] = inferenceSpecification;
        obj['ModelPackageStatus'] = modelPackageStatus;
    }

    /**
     * Constructs a <code>BatchDescribeModelPackageSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchDescribeModelPackageSummary} obj Optional instance to populate.
     * @return {module:model/BatchDescribeModelPackageSummary} The populated <code>BatchDescribeModelPackageSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchDescribeModelPackageSummary();

            if (data.hasOwnProperty('ModelPackageGroupName')) {
                obj['ModelPackageGroupName'] = ApiClient.convertToType(data['ModelPackageGroupName'], 'String');
            }
            if (data.hasOwnProperty('ModelPackageVersion')) {
                obj['ModelPackageVersion'] = ApiClient.convertToType(data['ModelPackageVersion'], 'Number');
            }
            if (data.hasOwnProperty('ModelPackageArn')) {
                obj['ModelPackageArn'] = ApiClient.convertToType(data['ModelPackageArn'], 'String');
            }
            if (data.hasOwnProperty('ModelPackageDescription')) {
                obj['ModelPackageDescription'] = ApiClient.convertToType(data['ModelPackageDescription'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('InferenceSpecification')) {
                obj['InferenceSpecification'] = InferenceSpecification.constructFromObject(data['InferenceSpecification']);
            }
            if (data.hasOwnProperty('ModelPackageStatus')) {
                obj['ModelPackageStatus'] = ApiClient.convertToType(data['ModelPackageStatus'], ModelPackageStatus);
            }
            if (data.hasOwnProperty('ModelApprovalStatus')) {
                obj['ModelApprovalStatus'] = ApiClient.convertToType(data['ModelApprovalStatus'], ModelApprovalStatus);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchDescribeModelPackageSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchDescribeModelPackageSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchDescribeModelPackageSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ModelPackageGroupName`
        if (data['ModelPackageGroupName']) { // data not null
          String.validateJSON(data['ModelPackageGroupName']);
        }
        // validate the optional field `ModelPackageVersion`
        if (data['ModelPackageVersion']) { // data not null
          Number.validateJSON(data['ModelPackageVersion']);
        }
        // validate the optional field `ModelPackageArn`
        if (data['ModelPackageArn']) { // data not null
          String.validateJSON(data['ModelPackageArn']);
        }
        // validate the optional field `ModelPackageDescription`
        if (data['ModelPackageDescription']) { // data not null
          String.validateJSON(data['ModelPackageDescription']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `InferenceSpecification`
        if (data['InferenceSpecification']) { // data not null
          InferenceSpecification.validateJSON(data['InferenceSpecification']);
        }
        // validate the optional field `ModelPackageStatus`
        if (data['ModelPackageStatus']) { // data not null
          ModelPackageStatus.validateJSON(data['ModelPackageStatus']);
        }
        // validate the optional field `ModelApprovalStatus`
        if (data['ModelApprovalStatus']) { // data not null
          ModelApprovalStatus.validateJSON(data['ModelApprovalStatus']);
        }

        return true;
    }


}

BatchDescribeModelPackageSummary.RequiredProperties = ["ModelPackageGroupName", "ModelPackageArn", "CreationTime", "InferenceSpecification", "ModelPackageStatus"];

/**
 * @member {String} ModelPackageGroupName
 */
BatchDescribeModelPackageSummary.prototype['ModelPackageGroupName'] = undefined;

/**
 * @member {Number} ModelPackageVersion
 */
BatchDescribeModelPackageSummary.prototype['ModelPackageVersion'] = undefined;

/**
 * @member {String} ModelPackageArn
 */
BatchDescribeModelPackageSummary.prototype['ModelPackageArn'] = undefined;

/**
 * @member {String} ModelPackageDescription
 */
BatchDescribeModelPackageSummary.prototype['ModelPackageDescription'] = undefined;

/**
 * @member {Date} CreationTime
 */
BatchDescribeModelPackageSummary.prototype['CreationTime'] = undefined;

/**
 * @member {module:model/InferenceSpecification} InferenceSpecification
 */
BatchDescribeModelPackageSummary.prototype['InferenceSpecification'] = undefined;

/**
 * @member {module:model/ModelPackageStatus} ModelPackageStatus
 */
BatchDescribeModelPackageSummary.prototype['ModelPackageStatus'] = undefined;

/**
 * @member {module:model/ModelApprovalStatus} ModelApprovalStatus
 */
BatchDescribeModelPackageSummary.prototype['ModelApprovalStatus'] = undefined;






export default BatchDescribeModelPackageSummary;

