/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CrossAccountFilterOption from './CrossAccountFilterOption';
import ResourceType from './ResourceType';
import SearchRequestSearchExpression from './SearchRequestSearchExpression';
import SearchSortOrder from './SearchSortOrder';

/**
 * The SearchRequest model module.
 * @module model/SearchRequest
 * @version 2017-07-24
 */
class SearchRequest {
    /**
     * Constructs a new <code>SearchRequest</code>.
     * @alias module:model/SearchRequest
     * @param resource {module:model/ResourceType} 
     */
    constructor(resource) { 
        
        SearchRequest.initialize(this, resource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resource) { 
        obj['Resource'] = resource;
    }

    /**
     * Constructs a <code>SearchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchRequest} obj Optional instance to populate.
     * @return {module:model/SearchRequest} The populated <code>SearchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchRequest();

            if (data.hasOwnProperty('Resource')) {
                obj['Resource'] = ApiClient.convertToType(data['Resource'], ResourceType);
            }
            if (data.hasOwnProperty('SearchExpression')) {
                obj['SearchExpression'] = SearchRequestSearchExpression.constructFromObject(data['SearchExpression']);
            }
            if (data.hasOwnProperty('SortBy')) {
                obj['SortBy'] = ApiClient.convertToType(data['SortBy'], 'String');
            }
            if (data.hasOwnProperty('SortOrder')) {
                obj['SortOrder'] = ApiClient.convertToType(data['SortOrder'], SearchSortOrder);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
            if (data.hasOwnProperty('CrossAccountFilterOption')) {
                obj['CrossAccountFilterOption'] = ApiClient.convertToType(data['CrossAccountFilterOption'], CrossAccountFilterOption);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Resource`
        if (data['Resource']) { // data not null
          ResourceType.validateJSON(data['Resource']);
        }
        // validate the optional field `SearchExpression`
        if (data['SearchExpression']) { // data not null
          SearchRequestSearchExpression.validateJSON(data['SearchExpression']);
        }
        // validate the optional field `SortBy`
        if (data['SortBy']) { // data not null
          String.validateJSON(data['SortBy']);
        }
        // validate the optional field `SortOrder`
        if (data['SortOrder']) { // data not null
          SearchSortOrder.validateJSON(data['SortOrder']);
        }
        // validate the optional field `NextToken`
        if (data['NextToken']) { // data not null
          String.validateJSON(data['NextToken']);
        }
        // validate the optional field `MaxResults`
        if (data['MaxResults']) { // data not null
          Number.validateJSON(data['MaxResults']);
        }
        // validate the optional field `CrossAccountFilterOption`
        if (data['CrossAccountFilterOption']) { // data not null
          CrossAccountFilterOption.validateJSON(data['CrossAccountFilterOption']);
        }

        return true;
    }


}

SearchRequest.RequiredProperties = ["Resource"];

/**
 * @member {module:model/ResourceType} Resource
 */
SearchRequest.prototype['Resource'] = undefined;

/**
 * @member {module:model/SearchRequestSearchExpression} SearchExpression
 */
SearchRequest.prototype['SearchExpression'] = undefined;

/**
 * @member {String} SortBy
 */
SearchRequest.prototype['SortBy'] = undefined;

/**
 * @member {module:model/SearchSortOrder} SortOrder
 */
SearchRequest.prototype['SortOrder'] = undefined;

/**
 * @member {String} NextToken
 */
SearchRequest.prototype['NextToken'] = undefined;

/**
 * @member {Number} MaxResults
 */
SearchRequest.prototype['MaxResults'] = undefined;

/**
 * @member {module:model/CrossAccountFilterOption} CrossAccountFilterOption
 */
SearchRequest.prototype['CrossAccountFilterOption'] = undefined;






export default SearchRequest;

