/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UiConfig model module.
 * @module model/UiConfig
 * @version 2017-07-24
 */
class UiConfig {
    /**
     * Constructs a new <code>UiConfig</code>.
     * &lt;p&gt;Provided configuration information for the worker UI for a labeling job. Provide either &lt;code&gt;HumanTaskUiArn&lt;/code&gt; or &lt;code&gt;UiTemplateS3Uri&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For named entity recognition, 3D point cloud and video frame labeling jobs, use &lt;code&gt;HumanTaskUiArn&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For all other Ground Truth built-in task types and custom task types, use &lt;code&gt;UiTemplateS3Uri&lt;/code&gt; to specify the location of a worker task template in Amazon S3.&lt;/p&gt;
     * @alias module:model/UiConfig
     */
    constructor() { 
        
        UiConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UiConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UiConfig} obj Optional instance to populate.
     * @return {module:model/UiConfig} The populated <code>UiConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UiConfig();

            if (data.hasOwnProperty('UiTemplateS3Uri')) {
                obj['UiTemplateS3Uri'] = ApiClient.convertToType(data['UiTemplateS3Uri'], 'String');
            }
            if (data.hasOwnProperty('HumanTaskUiArn')) {
                obj['HumanTaskUiArn'] = ApiClient.convertToType(data['HumanTaskUiArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UiConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UiConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `UiTemplateS3Uri`
        if (data['UiTemplateS3Uri']) { // data not null
          String.validateJSON(data['UiTemplateS3Uri']);
        }
        // validate the optional field `HumanTaskUiArn`
        if (data['HumanTaskUiArn']) { // data not null
          String.validateJSON(data['HumanTaskUiArn']);
        }

        return true;
    }


}



/**
 * @member {String} UiTemplateS3Uri
 */
UiConfig.prototype['UiTemplateS3Uri'] = undefined;

/**
 * @member {String} HumanTaskUiArn
 */
UiConfig.prototype['HumanTaskUiArn'] = undefined;






export default UiConfig;

