/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProcessingInputDatasetDefinition from './ProcessingInputDatasetDefinition';
import ProcessingInputS3Input from './ProcessingInputS3Input';

/**
 * The ProcessingInput model module.
 * @module model/ProcessingInput
 * @version 2017-07-24
 */
class ProcessingInput {
    /**
     * Constructs a new <code>ProcessingInput</code>.
     * The inputs for a processing job. The processing input must specify exactly one of either &lt;code&gt;S3Input&lt;/code&gt; or &lt;code&gt;DatasetDefinition&lt;/code&gt; types.
     * @alias module:model/ProcessingInput
     * @param inputName {String} 
     */
    constructor(inputName) { 
        
        ProcessingInput.initialize(this, inputName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inputName) { 
        obj['InputName'] = inputName;
    }

    /**
     * Constructs a <code>ProcessingInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessingInput} obj Optional instance to populate.
     * @return {module:model/ProcessingInput} The populated <code>ProcessingInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessingInput();

            if (data.hasOwnProperty('InputName')) {
                obj['InputName'] = ApiClient.convertToType(data['InputName'], 'String');
            }
            if (data.hasOwnProperty('AppManaged')) {
                obj['AppManaged'] = ApiClient.convertToType(data['AppManaged'], 'Boolean');
            }
            if (data.hasOwnProperty('S3Input')) {
                obj['S3Input'] = ProcessingInputS3Input.constructFromObject(data['S3Input']);
            }
            if (data.hasOwnProperty('DatasetDefinition')) {
                obj['DatasetDefinition'] = ProcessingInputDatasetDefinition.constructFromObject(data['DatasetDefinition']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProcessingInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProcessingInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProcessingInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InputName`
        if (data['InputName']) { // data not null
          String.validateJSON(data['InputName']);
        }
        // validate the optional field `AppManaged`
        if (data['AppManaged']) { // data not null
          Boolean.validateJSON(data['AppManaged']);
        }
        // validate the optional field `S3Input`
        if (data['S3Input']) { // data not null
          ProcessingInputS3Input.validateJSON(data['S3Input']);
        }
        // validate the optional field `DatasetDefinition`
        if (data['DatasetDefinition']) { // data not null
          ProcessingInputDatasetDefinition.validateJSON(data['DatasetDefinition']);
        }

        return true;
    }


}

ProcessingInput.RequiredProperties = ["InputName"];

/**
 * @member {String} InputName
 */
ProcessingInput.prototype['InputName'] = undefined;

/**
 * @member {Boolean} AppManaged
 */
ProcessingInput.prototype['AppManaged'] = undefined;

/**
 * @member {module:model/ProcessingInputS3Input} S3Input
 */
ProcessingInput.prototype['S3Input'] = undefined;

/**
 * @member {module:model/ProcessingInputDatasetDefinition} DatasetDefinition
 */
ProcessingInput.prototype['DatasetDefinition'] = undefined;






export default ProcessingInput;

