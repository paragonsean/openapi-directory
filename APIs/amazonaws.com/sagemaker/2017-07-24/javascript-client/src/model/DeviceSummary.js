/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceSummary model module.
 * @module model/DeviceSummary
 * @version 2017-07-24
 */
class DeviceSummary {
    /**
     * Constructs a new <code>DeviceSummary</code>.
     * Summary of the device.
     * @alias module:model/DeviceSummary
     * @param deviceName {String} 
     * @param deviceArn {String} 
     */
    constructor(deviceName, deviceArn) { 
        
        DeviceSummary.initialize(this, deviceName, deviceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deviceName, deviceArn) { 
        obj['DeviceName'] = deviceName;
        obj['DeviceArn'] = deviceArn;
    }

    /**
     * Constructs a <code>DeviceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceSummary} obj Optional instance to populate.
     * @return {module:model/DeviceSummary} The populated <code>DeviceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceSummary();

            if (data.hasOwnProperty('DeviceName')) {
                obj['DeviceName'] = ApiClient.convertToType(data['DeviceName'], 'String');
            }
            if (data.hasOwnProperty('DeviceArn')) {
                obj['DeviceArn'] = ApiClient.convertToType(data['DeviceArn'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DeviceFleetName')) {
                obj['DeviceFleetName'] = ApiClient.convertToType(data['DeviceFleetName'], 'String');
            }
            if (data.hasOwnProperty('IotThingName')) {
                obj['IotThingName'] = ApiClient.convertToType(data['IotThingName'], 'String');
            }
            if (data.hasOwnProperty('RegistrationTime')) {
                obj['RegistrationTime'] = ApiClient.convertToType(data['RegistrationTime'], 'Date');
            }
            if (data.hasOwnProperty('LatestHeartbeat')) {
                obj['LatestHeartbeat'] = ApiClient.convertToType(data['LatestHeartbeat'], 'Date');
            }
            if (data.hasOwnProperty('Models')) {
                obj['Models'] = ApiClient.convertToType(data['Models'], Array);
            }
            if (data.hasOwnProperty('AgentVersion')) {
                obj['AgentVersion'] = ApiClient.convertToType(data['AgentVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeviceSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DeviceName`
        if (data['DeviceName']) { // data not null
          String.validateJSON(data['DeviceName']);
        }
        // validate the optional field `DeviceArn`
        if (data['DeviceArn']) { // data not null
          String.validateJSON(data['DeviceArn']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `DeviceFleetName`
        if (data['DeviceFleetName']) { // data not null
          String.validateJSON(data['DeviceFleetName']);
        }
        // validate the optional field `IotThingName`
        if (data['IotThingName']) { // data not null
          String.validateJSON(data['IotThingName']);
        }
        // validate the optional field `RegistrationTime`
        if (data['RegistrationTime']) { // data not null
          Date.validateJSON(data['RegistrationTime']);
        }
        // validate the optional field `LatestHeartbeat`
        if (data['LatestHeartbeat']) { // data not null
          Date.validateJSON(data['LatestHeartbeat']);
        }
        // validate the optional field `Models`
        if (data['Models']) { // data not null
          Array.validateJSON(data['Models']);
        }
        // validate the optional field `AgentVersion`
        if (data['AgentVersion']) { // data not null
          String.validateJSON(data['AgentVersion']);
        }

        return true;
    }


}

DeviceSummary.RequiredProperties = ["DeviceName", "DeviceArn"];

/**
 * @member {String} DeviceName
 */
DeviceSummary.prototype['DeviceName'] = undefined;

/**
 * @member {String} DeviceArn
 */
DeviceSummary.prototype['DeviceArn'] = undefined;

/**
 * @member {String} Description
 */
DeviceSummary.prototype['Description'] = undefined;

/**
 * @member {String} DeviceFleetName
 */
DeviceSummary.prototype['DeviceFleetName'] = undefined;

/**
 * @member {String} IotThingName
 */
DeviceSummary.prototype['IotThingName'] = undefined;

/**
 * @member {Date} RegistrationTime
 */
DeviceSummary.prototype['RegistrationTime'] = undefined;

/**
 * @member {Date} LatestHeartbeat
 */
DeviceSummary.prototype['LatestHeartbeat'] = undefined;

/**
 * @member {Array} Models
 */
DeviceSummary.prototype['Models'] = undefined;

/**
 * @member {String} AgentVersion
 */
DeviceSummary.prototype['AgentVersion'] = undefined;






export default DeviceSummary;

