/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateLabelingJobRequestHumanTaskConfig from './CreateLabelingJobRequestHumanTaskConfig';
import CreateLabelingJobRequestInputConfig from './CreateLabelingJobRequestInputConfig';
import CreateLabelingJobRequestLabelingJobAlgorithmsConfig from './CreateLabelingJobRequestLabelingJobAlgorithmsConfig';
import CreateLabelingJobRequestOutputConfig from './CreateLabelingJobRequestOutputConfig';
import CreateLabelingJobRequestStoppingConditions from './CreateLabelingJobRequestStoppingConditions';

/**
 * The CreateLabelingJobRequest model module.
 * @module model/CreateLabelingJobRequest
 * @version 2017-07-24
 */
class CreateLabelingJobRequest {
    /**
     * Constructs a new <code>CreateLabelingJobRequest</code>.
     * @alias module:model/CreateLabelingJobRequest
     * @param labelingJobName {String} 
     * @param labelAttributeName {String} 
     * @param inputConfig {module:model/CreateLabelingJobRequestInputConfig} 
     * @param outputConfig {module:model/CreateLabelingJobRequestOutputConfig} 
     * @param roleArn {String} 
     * @param humanTaskConfig {module:model/CreateLabelingJobRequestHumanTaskConfig} 
     */
    constructor(labelingJobName, labelAttributeName, inputConfig, outputConfig, roleArn, humanTaskConfig) { 
        
        CreateLabelingJobRequest.initialize(this, labelingJobName, labelAttributeName, inputConfig, outputConfig, roleArn, humanTaskConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, labelingJobName, labelAttributeName, inputConfig, outputConfig, roleArn, humanTaskConfig) { 
        obj['LabelingJobName'] = labelingJobName;
        obj['LabelAttributeName'] = labelAttributeName;
        obj['InputConfig'] = inputConfig;
        obj['OutputConfig'] = outputConfig;
        obj['RoleArn'] = roleArn;
        obj['HumanTaskConfig'] = humanTaskConfig;
    }

    /**
     * Constructs a <code>CreateLabelingJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateLabelingJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateLabelingJobRequest} The populated <code>CreateLabelingJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateLabelingJobRequest();

            if (data.hasOwnProperty('LabelingJobName')) {
                obj['LabelingJobName'] = ApiClient.convertToType(data['LabelingJobName'], 'String');
            }
            if (data.hasOwnProperty('LabelAttributeName')) {
                obj['LabelAttributeName'] = ApiClient.convertToType(data['LabelAttributeName'], 'String');
            }
            if (data.hasOwnProperty('InputConfig')) {
                obj['InputConfig'] = CreateLabelingJobRequestInputConfig.constructFromObject(data['InputConfig']);
            }
            if (data.hasOwnProperty('OutputConfig')) {
                obj['OutputConfig'] = CreateLabelingJobRequestOutputConfig.constructFromObject(data['OutputConfig']);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('LabelCategoryConfigS3Uri')) {
                obj['LabelCategoryConfigS3Uri'] = ApiClient.convertToType(data['LabelCategoryConfigS3Uri'], 'String');
            }
            if (data.hasOwnProperty('StoppingConditions')) {
                obj['StoppingConditions'] = CreateLabelingJobRequestStoppingConditions.constructFromObject(data['StoppingConditions']);
            }
            if (data.hasOwnProperty('LabelingJobAlgorithmsConfig')) {
                obj['LabelingJobAlgorithmsConfig'] = CreateLabelingJobRequestLabelingJobAlgorithmsConfig.constructFromObject(data['LabelingJobAlgorithmsConfig']);
            }
            if (data.hasOwnProperty('HumanTaskConfig')) {
                obj['HumanTaskConfig'] = CreateLabelingJobRequestHumanTaskConfig.constructFromObject(data['HumanTaskConfig']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateLabelingJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateLabelingJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateLabelingJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `LabelingJobName`
        if (data['LabelingJobName']) { // data not null
          String.validateJSON(data['LabelingJobName']);
        }
        // validate the optional field `LabelAttributeName`
        if (data['LabelAttributeName']) { // data not null
          String.validateJSON(data['LabelAttributeName']);
        }
        // validate the optional field `InputConfig`
        if (data['InputConfig']) { // data not null
          CreateLabelingJobRequestInputConfig.validateJSON(data['InputConfig']);
        }
        // validate the optional field `OutputConfig`
        if (data['OutputConfig']) { // data not null
          CreateLabelingJobRequestOutputConfig.validateJSON(data['OutputConfig']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `LabelCategoryConfigS3Uri`
        if (data['LabelCategoryConfigS3Uri']) { // data not null
          String.validateJSON(data['LabelCategoryConfigS3Uri']);
        }
        // validate the optional field `StoppingConditions`
        if (data['StoppingConditions']) { // data not null
          CreateLabelingJobRequestStoppingConditions.validateJSON(data['StoppingConditions']);
        }
        // validate the optional field `LabelingJobAlgorithmsConfig`
        if (data['LabelingJobAlgorithmsConfig']) { // data not null
          CreateLabelingJobRequestLabelingJobAlgorithmsConfig.validateJSON(data['LabelingJobAlgorithmsConfig']);
        }
        // validate the optional field `HumanTaskConfig`
        if (data['HumanTaskConfig']) { // data not null
          CreateLabelingJobRequestHumanTaskConfig.validateJSON(data['HumanTaskConfig']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CreateLabelingJobRequest.RequiredProperties = ["LabelingJobName", "LabelAttributeName", "InputConfig", "OutputConfig", "RoleArn", "HumanTaskConfig"];

/**
 * @member {String} LabelingJobName
 */
CreateLabelingJobRequest.prototype['LabelingJobName'] = undefined;

/**
 * @member {String} LabelAttributeName
 */
CreateLabelingJobRequest.prototype['LabelAttributeName'] = undefined;

/**
 * @member {module:model/CreateLabelingJobRequestInputConfig} InputConfig
 */
CreateLabelingJobRequest.prototype['InputConfig'] = undefined;

/**
 * @member {module:model/CreateLabelingJobRequestOutputConfig} OutputConfig
 */
CreateLabelingJobRequest.prototype['OutputConfig'] = undefined;

/**
 * @member {String} RoleArn
 */
CreateLabelingJobRequest.prototype['RoleArn'] = undefined;

/**
 * @member {String} LabelCategoryConfigS3Uri
 */
CreateLabelingJobRequest.prototype['LabelCategoryConfigS3Uri'] = undefined;

/**
 * @member {module:model/CreateLabelingJobRequestStoppingConditions} StoppingConditions
 */
CreateLabelingJobRequest.prototype['StoppingConditions'] = undefined;

/**
 * @member {module:model/CreateLabelingJobRequestLabelingJobAlgorithmsConfig} LabelingJobAlgorithmsConfig
 */
CreateLabelingJobRequest.prototype['LabelingJobAlgorithmsConfig'] = undefined;

/**
 * @member {module:model/CreateLabelingJobRequestHumanTaskConfig} HumanTaskConfig
 */
CreateLabelingJobRequest.prototype['HumanTaskConfig'] = undefined;

/**
 * @member {Array} Tags
 */
CreateLabelingJobRequest.prototype['Tags'] = undefined;






export default CreateLabelingJobRequest;

