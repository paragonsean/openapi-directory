/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeviceSelectionConfig from './DeviceSelectionConfig';
import DeviceSubsetType from './DeviceSubsetType';

/**
 * The DeploymentStageDeviceSelectionConfig model module.
 * @module model/DeploymentStageDeviceSelectionConfig
 * @version 2017-07-24
 */
class DeploymentStageDeviceSelectionConfig {
    /**
     * Constructs a new <code>DeploymentStageDeviceSelectionConfig</code>.
     * @alias module:model/DeploymentStageDeviceSelectionConfig
     * @implements module:model/DeviceSelectionConfig
     * @param deviceSubsetType {module:model/DeviceSubsetType} 
     */
    constructor(deviceSubsetType) { 
        DeviceSelectionConfig.initialize(this, deviceSubsetType);
        DeploymentStageDeviceSelectionConfig.initialize(this, deviceSubsetType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deviceSubsetType) { 
        obj['DeviceSubsetType'] = deviceSubsetType;
    }

    /**
     * Constructs a <code>DeploymentStageDeviceSelectionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeploymentStageDeviceSelectionConfig} obj Optional instance to populate.
     * @return {module:model/DeploymentStageDeviceSelectionConfig} The populated <code>DeploymentStageDeviceSelectionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeploymentStageDeviceSelectionConfig();
            DeviceSelectionConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('DeviceSubsetType')) {
                obj['DeviceSubsetType'] = ApiClient.convertToType(data['DeviceSubsetType'], DeviceSubsetType);
            }
            if (data.hasOwnProperty('Percentage')) {
                obj['Percentage'] = ApiClient.convertToType(data['Percentage'], 'Number');
            }
            if (data.hasOwnProperty('DeviceNames')) {
                obj['DeviceNames'] = ApiClient.convertToType(data['DeviceNames'], Array);
            }
            if (data.hasOwnProperty('DeviceNameContains')) {
                obj['DeviceNameContains'] = ApiClient.convertToType(data['DeviceNameContains'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeploymentStageDeviceSelectionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeploymentStageDeviceSelectionConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeploymentStageDeviceSelectionConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DeviceSubsetType`
        if (data['DeviceSubsetType']) { // data not null
          DeviceSubsetType.validateJSON(data['DeviceSubsetType']);
        }
        // validate the optional field `Percentage`
        if (data['Percentage']) { // data not null
          Number.validateJSON(data['Percentage']);
        }
        // validate the optional field `DeviceNames`
        if (data['DeviceNames']) { // data not null
          Array.validateJSON(data['DeviceNames']);
        }
        // validate the optional field `DeviceNameContains`
        if (data['DeviceNameContains']) { // data not null
          String.validateJSON(data['DeviceNameContains']);
        }

        return true;
    }


}

DeploymentStageDeviceSelectionConfig.RequiredProperties = ["DeviceSubsetType"];

/**
 * @member {module:model/DeviceSubsetType} DeviceSubsetType
 */
DeploymentStageDeviceSelectionConfig.prototype['DeviceSubsetType'] = undefined;

/**
 * @member {Number} Percentage
 */
DeploymentStageDeviceSelectionConfig.prototype['Percentage'] = undefined;

/**
 * @member {Array} DeviceNames
 */
DeploymentStageDeviceSelectionConfig.prototype['DeviceNames'] = undefined;

/**
 * @member {String} DeviceNameContains
 */
DeploymentStageDeviceSelectionConfig.prototype['DeviceNameContains'] = undefined;


// Implement DeviceSelectionConfig interface:
/**
 * @member {module:model/DeviceSubsetType} DeviceSubsetType
 */
DeviceSelectionConfig.prototype['DeviceSubsetType'] = undefined;
/**
 * @member {Number} Percentage
 */
DeviceSelectionConfig.prototype['Percentage'] = undefined;
/**
 * @member {Array} DeviceNames
 */
DeviceSelectionConfig.prototype['DeviceNames'] = undefined;
/**
 * @member {String} DeviceNameContains
 */
DeviceSelectionConfig.prototype['DeviceNameContains'] = undefined;




export default DeploymentStageDeviceSelectionConfig;

