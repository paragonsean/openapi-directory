/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InferenceExperimentStatus from './InferenceExperimentStatus';
import InferenceExperimentSummarySchedule from './InferenceExperimentSummarySchedule';
import InferenceExperimentType from './InferenceExperimentType';

/**
 * The InferenceExperimentSummary model module.
 * @module model/InferenceExperimentSummary
 * @version 2017-07-24
 */
class InferenceExperimentSummary {
    /**
     * Constructs a new <code>InferenceExperimentSummary</code>.
     * Lists a summary of properties of an inference experiment.
     * @alias module:model/InferenceExperimentSummary
     * @param name {String} 
     * @param type {module:model/InferenceExperimentType} 
     * @param status {module:model/InferenceExperimentStatus} 
     * @param creationTime {Date} 
     * @param lastModifiedTime {Date} 
     */
    constructor(name, type, status, creationTime, lastModifiedTime) { 
        
        InferenceExperimentSummary.initialize(this, name, type, status, creationTime, lastModifiedTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, type, status, creationTime, lastModifiedTime) { 
        obj['Name'] = name;
        obj['Type'] = type;
        obj['Status'] = status;
        obj['CreationTime'] = creationTime;
        obj['LastModifiedTime'] = lastModifiedTime;
    }

    /**
     * Constructs a <code>InferenceExperimentSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InferenceExperimentSummary} obj Optional instance to populate.
     * @return {module:model/InferenceExperimentSummary} The populated <code>InferenceExperimentSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InferenceExperimentSummary();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], InferenceExperimentType);
            }
            if (data.hasOwnProperty('Schedule')) {
                obj['Schedule'] = InferenceExperimentSummarySchedule.constructFromObject(data['Schedule']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], InferenceExperimentStatus);
            }
            if (data.hasOwnProperty('StatusReason')) {
                obj['StatusReason'] = ApiClient.convertToType(data['StatusReason'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('CompletionTime')) {
                obj['CompletionTime'] = ApiClient.convertToType(data['CompletionTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InferenceExperimentSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InferenceExperimentSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InferenceExperimentSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          InferenceExperimentType.validateJSON(data['Type']);
        }
        // validate the optional field `Schedule`
        if (data['Schedule']) { // data not null
          InferenceExperimentSummarySchedule.validateJSON(data['Schedule']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          InferenceExperimentStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusReason`
        if (data['StatusReason']) { // data not null
          String.validateJSON(data['StatusReason']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `CompletionTime`
        if (data['CompletionTime']) { // data not null
          Date.validateJSON(data['CompletionTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }

        return true;
    }


}

InferenceExperimentSummary.RequiredProperties = ["Name", "Type", "Status", "CreationTime", "LastModifiedTime"];

/**
 * @member {String} Name
 */
InferenceExperimentSummary.prototype['Name'] = undefined;

/**
 * @member {module:model/InferenceExperimentType} Type
 */
InferenceExperimentSummary.prototype['Type'] = undefined;

/**
 * @member {module:model/InferenceExperimentSummarySchedule} Schedule
 */
InferenceExperimentSummary.prototype['Schedule'] = undefined;

/**
 * @member {module:model/InferenceExperimentStatus} Status
 */
InferenceExperimentSummary.prototype['Status'] = undefined;

/**
 * @member {String} StatusReason
 */
InferenceExperimentSummary.prototype['StatusReason'] = undefined;

/**
 * @member {String} Description
 */
InferenceExperimentSummary.prototype['Description'] = undefined;

/**
 * @member {Date} CreationTime
 */
InferenceExperimentSummary.prototype['CreationTime'] = undefined;

/**
 * @member {Date} CompletionTime
 */
InferenceExperimentSummary.prototype['CompletionTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
InferenceExperimentSummary.prototype['LastModifiedTime'] = undefined;

/**
 * @member {String} RoleArn
 */
InferenceExperimentSummary.prototype['RoleArn'] = undefined;






export default InferenceExperimentSummary;

