/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MonitoringAlertStatus from './MonitoringAlertStatus';
import MonitoringAlertSummaryActions from './MonitoringAlertSummaryActions';

/**
 * The MonitoringAlertSummary model module.
 * @module model/MonitoringAlertSummary
 * @version 2017-07-24
 */
class MonitoringAlertSummary {
    /**
     * Constructs a new <code>MonitoringAlertSummary</code>.
     * Provides summary information about a monitor alert.
     * @alias module:model/MonitoringAlertSummary
     * @param monitoringAlertName {String} 
     * @param creationTime {Date} 
     * @param lastModifiedTime {Date} 
     * @param alertStatus {module:model/MonitoringAlertStatus} 
     * @param datapointsToAlert {Number} 
     * @param evaluationPeriod {Number} 
     * @param actions {module:model/MonitoringAlertSummaryActions} 
     */
    constructor(monitoringAlertName, creationTime, lastModifiedTime, alertStatus, datapointsToAlert, evaluationPeriod, actions) { 
        
        MonitoringAlertSummary.initialize(this, monitoringAlertName, creationTime, lastModifiedTime, alertStatus, datapointsToAlert, evaluationPeriod, actions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, monitoringAlertName, creationTime, lastModifiedTime, alertStatus, datapointsToAlert, evaluationPeriod, actions) { 
        obj['MonitoringAlertName'] = monitoringAlertName;
        obj['CreationTime'] = creationTime;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['AlertStatus'] = alertStatus;
        obj['DatapointsToAlert'] = datapointsToAlert;
        obj['EvaluationPeriod'] = evaluationPeriod;
        obj['Actions'] = actions;
    }

    /**
     * Constructs a <code>MonitoringAlertSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonitoringAlertSummary} obj Optional instance to populate.
     * @return {module:model/MonitoringAlertSummary} The populated <code>MonitoringAlertSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonitoringAlertSummary();

            if (data.hasOwnProperty('MonitoringAlertName')) {
                obj['MonitoringAlertName'] = ApiClient.convertToType(data['MonitoringAlertName'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('AlertStatus')) {
                obj['AlertStatus'] = ApiClient.convertToType(data['AlertStatus'], MonitoringAlertStatus);
            }
            if (data.hasOwnProperty('DatapointsToAlert')) {
                obj['DatapointsToAlert'] = ApiClient.convertToType(data['DatapointsToAlert'], 'Number');
            }
            if (data.hasOwnProperty('EvaluationPeriod')) {
                obj['EvaluationPeriod'] = ApiClient.convertToType(data['EvaluationPeriod'], 'Number');
            }
            if (data.hasOwnProperty('Actions')) {
                obj['Actions'] = MonitoringAlertSummaryActions.constructFromObject(data['Actions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonitoringAlertSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonitoringAlertSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MonitoringAlertSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MonitoringAlertName`
        if (data['MonitoringAlertName']) { // data not null
          String.validateJSON(data['MonitoringAlertName']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `AlertStatus`
        if (data['AlertStatus']) { // data not null
          MonitoringAlertStatus.validateJSON(data['AlertStatus']);
        }
        // validate the optional field `DatapointsToAlert`
        if (data['DatapointsToAlert']) { // data not null
          Number.validateJSON(data['DatapointsToAlert']);
        }
        // validate the optional field `EvaluationPeriod`
        if (data['EvaluationPeriod']) { // data not null
          Number.validateJSON(data['EvaluationPeriod']);
        }
        // validate the optional field `Actions`
        if (data['Actions']) { // data not null
          MonitoringAlertSummaryActions.validateJSON(data['Actions']);
        }

        return true;
    }


}

MonitoringAlertSummary.RequiredProperties = ["MonitoringAlertName", "CreationTime", "LastModifiedTime", "AlertStatus", "DatapointsToAlert", "EvaluationPeriod", "Actions"];

/**
 * @member {String} MonitoringAlertName
 */
MonitoringAlertSummary.prototype['MonitoringAlertName'] = undefined;

/**
 * @member {Date} CreationTime
 */
MonitoringAlertSummary.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
MonitoringAlertSummary.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/MonitoringAlertStatus} AlertStatus
 */
MonitoringAlertSummary.prototype['AlertStatus'] = undefined;

/**
 * @member {Number} DatapointsToAlert
 */
MonitoringAlertSummary.prototype['DatapointsToAlert'] = undefined;

/**
 * @member {Number} EvaluationPeriod
 */
MonitoringAlertSummary.prototype['EvaluationPeriod'] = undefined;

/**
 * @member {module:model/MonitoringAlertSummaryActions} Actions
 */
MonitoringAlertSummary.prototype['Actions'] = undefined;






export default MonitoringAlertSummary;

