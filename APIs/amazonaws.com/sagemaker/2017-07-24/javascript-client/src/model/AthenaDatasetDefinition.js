/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AthenaResultCompressionType from './AthenaResultCompressionType';
import AthenaResultFormat from './AthenaResultFormat';

/**
 * The AthenaDatasetDefinition model module.
 * @module model/AthenaDatasetDefinition
 * @version 2017-07-24
 */
class AthenaDatasetDefinition {
    /**
     * Constructs a new <code>AthenaDatasetDefinition</code>.
     * Configuration for Athena Dataset Definition input.
     * @alias module:model/AthenaDatasetDefinition
     * @param catalog {String} The name of the data catalog used in Athena query execution.
     * @param database {String} The name of the database used in the Athena query execution.
     * @param queryString {String} The SQL query statements, to be executed.
     * @param outputS3Uri {String} 
     * @param outputFormat {module:model/AthenaResultFormat} 
     */
    constructor(catalog, database, queryString, outputS3Uri, outputFormat) { 
        
        AthenaDatasetDefinition.initialize(this, catalog, database, queryString, outputS3Uri, outputFormat);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, catalog, database, queryString, outputS3Uri, outputFormat) { 
        obj['Catalog'] = catalog;
        obj['Database'] = database;
        obj['QueryString'] = queryString;
        obj['OutputS3Uri'] = outputS3Uri;
        obj['OutputFormat'] = outputFormat;
    }

    /**
     * Constructs a <code>AthenaDatasetDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AthenaDatasetDefinition} obj Optional instance to populate.
     * @return {module:model/AthenaDatasetDefinition} The populated <code>AthenaDatasetDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AthenaDatasetDefinition();

            if (data.hasOwnProperty('Catalog')) {
                obj['Catalog'] = ApiClient.convertToType(data['Catalog'], 'String');
            }
            if (data.hasOwnProperty('Database')) {
                obj['Database'] = ApiClient.convertToType(data['Database'], 'String');
            }
            if (data.hasOwnProperty('QueryString')) {
                obj['QueryString'] = ApiClient.convertToType(data['QueryString'], 'String');
            }
            if (data.hasOwnProperty('WorkGroup')) {
                obj['WorkGroup'] = ApiClient.convertToType(data['WorkGroup'], 'String');
            }
            if (data.hasOwnProperty('OutputS3Uri')) {
                obj['OutputS3Uri'] = ApiClient.convertToType(data['OutputS3Uri'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('OutputFormat')) {
                obj['OutputFormat'] = AthenaResultFormat.constructFromObject(data['OutputFormat']);
            }
            if (data.hasOwnProperty('OutputCompression')) {
                obj['OutputCompression'] = AthenaResultCompressionType.constructFromObject(data['OutputCompression']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AthenaDatasetDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AthenaDatasetDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AthenaDatasetDefinition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Catalog'] && !(typeof data['Catalog'] === 'string' || data['Catalog'] instanceof String)) {
            throw new Error("Expected the field `Catalog` to be a primitive type in the JSON string but got " + data['Catalog']);
        }
        // ensure the json data is a string
        if (data['Database'] && !(typeof data['Database'] === 'string' || data['Database'] instanceof String)) {
            throw new Error("Expected the field `Database` to be a primitive type in the JSON string but got " + data['Database']);
        }
        // ensure the json data is a string
        if (data['QueryString'] && !(typeof data['QueryString'] === 'string' || data['QueryString'] instanceof String)) {
            throw new Error("Expected the field `QueryString` to be a primitive type in the JSON string but got " + data['QueryString']);
        }
        // ensure the json data is a string
        if (data['WorkGroup'] && !(typeof data['WorkGroup'] === 'string' || data['WorkGroup'] instanceof String)) {
            throw new Error("Expected the field `WorkGroup` to be a primitive type in the JSON string but got " + data['WorkGroup']);
        }
        // validate the optional field `OutputS3Uri`
        if (data['OutputS3Uri']) { // data not null
          String.validateJSON(data['OutputS3Uri']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }

        return true;
    }


}

AthenaDatasetDefinition.RequiredProperties = ["Catalog", "Database", "QueryString", "OutputS3Uri", "OutputFormat"];

/**
 * The name of the data catalog used in Athena query execution.
 * @member {String} Catalog
 */
AthenaDatasetDefinition.prototype['Catalog'] = undefined;

/**
 * The name of the database used in the Athena query execution.
 * @member {String} Database
 */
AthenaDatasetDefinition.prototype['Database'] = undefined;

/**
 * The SQL query statements, to be executed.
 * @member {String} QueryString
 */
AthenaDatasetDefinition.prototype['QueryString'] = undefined;

/**
 * The name of the workgroup in which the Athena query is being started.
 * @member {String} WorkGroup
 */
AthenaDatasetDefinition.prototype['WorkGroup'] = undefined;

/**
 * @member {String} OutputS3Uri
 */
AthenaDatasetDefinition.prototype['OutputS3Uri'] = undefined;

/**
 * @member {String} KmsKeyId
 */
AthenaDatasetDefinition.prototype['KmsKeyId'] = undefined;

/**
 * @member {module:model/AthenaResultFormat} OutputFormat
 */
AthenaDatasetDefinition.prototype['OutputFormat'] = undefined;

/**
 * @member {module:model/AthenaResultCompressionType} OutputCompression
 */
AthenaDatasetDefinition.prototype['OutputCompression'] = undefined;






export default AthenaDatasetDefinition;

