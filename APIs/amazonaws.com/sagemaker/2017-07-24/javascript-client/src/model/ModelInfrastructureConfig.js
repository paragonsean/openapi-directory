/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelInfrastructureConfigRealTimeInferenceConfig from './ModelInfrastructureConfigRealTimeInferenceConfig';
import ModelInfrastructureType from './ModelInfrastructureType';

/**
 * The ModelInfrastructureConfig model module.
 * @module model/ModelInfrastructureConfig
 * @version 2017-07-24
 */
class ModelInfrastructureConfig {
    /**
     * Constructs a new <code>ModelInfrastructureConfig</code>.
     * The configuration for the infrastructure that the model will be deployed to.
     * @alias module:model/ModelInfrastructureConfig
     * @param infrastructureType {module:model/ModelInfrastructureType} 
     * @param realTimeInferenceConfig {module:model/ModelInfrastructureConfigRealTimeInferenceConfig} 
     */
    constructor(infrastructureType, realTimeInferenceConfig) { 
        
        ModelInfrastructureConfig.initialize(this, infrastructureType, realTimeInferenceConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, infrastructureType, realTimeInferenceConfig) { 
        obj['InfrastructureType'] = infrastructureType;
        obj['RealTimeInferenceConfig'] = realTimeInferenceConfig;
    }

    /**
     * Constructs a <code>ModelInfrastructureConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelInfrastructureConfig} obj Optional instance to populate.
     * @return {module:model/ModelInfrastructureConfig} The populated <code>ModelInfrastructureConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelInfrastructureConfig();

            if (data.hasOwnProperty('InfrastructureType')) {
                obj['InfrastructureType'] = ApiClient.convertToType(data['InfrastructureType'], ModelInfrastructureType);
            }
            if (data.hasOwnProperty('RealTimeInferenceConfig')) {
                obj['RealTimeInferenceConfig'] = ModelInfrastructureConfigRealTimeInferenceConfig.constructFromObject(data['RealTimeInferenceConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelInfrastructureConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelInfrastructureConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModelInfrastructureConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InfrastructureType`
        if (data['InfrastructureType']) { // data not null
          ModelInfrastructureType.validateJSON(data['InfrastructureType']);
        }
        // validate the optional field `RealTimeInferenceConfig`
        if (data['RealTimeInferenceConfig']) { // data not null
          ModelInfrastructureConfigRealTimeInferenceConfig.validateJSON(data['RealTimeInferenceConfig']);
        }

        return true;
    }


}

ModelInfrastructureConfig.RequiredProperties = ["InfrastructureType", "RealTimeInferenceConfig"];

/**
 * @member {module:model/ModelInfrastructureType} InfrastructureType
 */
ModelInfrastructureConfig.prototype['InfrastructureType'] = undefined;

/**
 * @member {module:model/ModelInfrastructureConfigRealTimeInferenceConfig} RealTimeInferenceConfig
 */
ModelInfrastructureConfig.prototype['RealTimeInferenceConfig'] = undefined;






export default ModelInfrastructureConfig;

