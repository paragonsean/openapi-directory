/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class TransformInstanceType.
* @enum {}
* @readonly
*/
export default class TransformInstanceType {
    
        /**
         * value: "ml.m4.xlarge"
         * @const
         */
        "m4.xlarge" = "ml.m4.xlarge";

    
        /**
         * value: "ml.m4.2xlarge"
         * @const
         */
        "m4.2xlarge" = "ml.m4.2xlarge";

    
        /**
         * value: "ml.m4.4xlarge"
         * @const
         */
        "m4.4xlarge" = "ml.m4.4xlarge";

    
        /**
         * value: "ml.m4.10xlarge"
         * @const
         */
        "m4.10xlarge" = "ml.m4.10xlarge";

    
        /**
         * value: "ml.m4.16xlarge"
         * @const
         */
        "m4.16xlarge" = "ml.m4.16xlarge";

    
        /**
         * value: "ml.c4.xlarge"
         * @const
         */
        "c4.xlarge" = "ml.c4.xlarge";

    
        /**
         * value: "ml.c4.2xlarge"
         * @const
         */
        "c4.2xlarge" = "ml.c4.2xlarge";

    
        /**
         * value: "ml.c4.4xlarge"
         * @const
         */
        "c4.4xlarge" = "ml.c4.4xlarge";

    
        /**
         * value: "ml.c4.8xlarge"
         * @const
         */
        "c4.8xlarge" = "ml.c4.8xlarge";

    
        /**
         * value: "ml.p2.xlarge"
         * @const
         */
        "p2.xlarge" = "ml.p2.xlarge";

    
        /**
         * value: "ml.p2.8xlarge"
         * @const
         */
        "p2.8xlarge" = "ml.p2.8xlarge";

    
        /**
         * value: "ml.p2.16xlarge"
         * @const
         */
        "p2.16xlarge" = "ml.p2.16xlarge";

    
        /**
         * value: "ml.p3.2xlarge"
         * @const
         */
        "p3.2xlarge" = "ml.p3.2xlarge";

    
        /**
         * value: "ml.p3.8xlarge"
         * @const
         */
        "p3.8xlarge" = "ml.p3.8xlarge";

    
        /**
         * value: "ml.p3.16xlarge"
         * @const
         */
        "p3.16xlarge" = "ml.p3.16xlarge";

    
        /**
         * value: "ml.c5.xlarge"
         * @const
         */
        "c5.xlarge" = "ml.c5.xlarge";

    
        /**
         * value: "ml.c5.2xlarge"
         * @const
         */
        "c5.2xlarge" = "ml.c5.2xlarge";

    
        /**
         * value: "ml.c5.4xlarge"
         * @const
         */
        "c5.4xlarge" = "ml.c5.4xlarge";

    
        /**
         * value: "ml.c5.9xlarge"
         * @const
         */
        "c5.9xlarge" = "ml.c5.9xlarge";

    
        /**
         * value: "ml.c5.18xlarge"
         * @const
         */
        "c5.18xlarge" = "ml.c5.18xlarge";

    
        /**
         * value: "ml.m5.large"
         * @const
         */
        "m5.large" = "ml.m5.large";

    
        /**
         * value: "ml.m5.xlarge"
         * @const
         */
        "m5.xlarge" = "ml.m5.xlarge";

    
        /**
         * value: "ml.m5.2xlarge"
         * @const
         */
        "m5.2xlarge" = "ml.m5.2xlarge";

    
        /**
         * value: "ml.m5.4xlarge"
         * @const
         */
        "m5.4xlarge" = "ml.m5.4xlarge";

    
        /**
         * value: "ml.m5.12xlarge"
         * @const
         */
        "m5.12xlarge" = "ml.m5.12xlarge";

    
        /**
         * value: "ml.m5.24xlarge"
         * @const
         */
        "m5.24xlarge" = "ml.m5.24xlarge";

    
        /**
         * value: "ml.g4dn.xlarge"
         * @const
         */
        "g4dn.xlarge" = "ml.g4dn.xlarge";

    
        /**
         * value: "ml.g4dn.2xlarge"
         * @const
         */
        "g4dn.2xlarge" = "ml.g4dn.2xlarge";

    
        /**
         * value: "ml.g4dn.4xlarge"
         * @const
         */
        "g4dn.4xlarge" = "ml.g4dn.4xlarge";

    
        /**
         * value: "ml.g4dn.8xlarge"
         * @const
         */
        "g4dn.8xlarge" = "ml.g4dn.8xlarge";

    
        /**
         * value: "ml.g4dn.12xlarge"
         * @const
         */
        "g4dn.12xlarge" = "ml.g4dn.12xlarge";

    
        /**
         * value: "ml.g4dn.16xlarge"
         * @const
         */
        "g4dn.16xlarge" = "ml.g4dn.16xlarge";

    

    /**
    * Returns a <code>TransformInstanceType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/TransformInstanceType} The enum <code>TransformInstanceType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

