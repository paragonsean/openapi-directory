/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndpointOutputConfiguration from './EndpointOutputConfiguration';
import ProductionVariantInstanceType from './ProductionVariantInstanceType';
import ProductionVariantServerlessConfig from './ProductionVariantServerlessConfig';

/**
 * The InferenceRecommendationEndpointConfiguration model module.
 * @module model/InferenceRecommendationEndpointConfiguration
 * @version 2017-07-24
 */
class InferenceRecommendationEndpointConfiguration {
    /**
     * Constructs a new <code>InferenceRecommendationEndpointConfiguration</code>.
     * @alias module:model/InferenceRecommendationEndpointConfiguration
     * @implements module:model/EndpointOutputConfiguration
     * @param endpointName {String} 
     * @param variantName {String} 
     */
    constructor(endpointName, variantName) { 
        EndpointOutputConfiguration.initialize(this, endpointName, variantName);
        InferenceRecommendationEndpointConfiguration.initialize(this, endpointName, variantName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpointName, variantName) { 
        obj['EndpointName'] = endpointName;
        obj['VariantName'] = variantName;
    }

    /**
     * Constructs a <code>InferenceRecommendationEndpointConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InferenceRecommendationEndpointConfiguration} obj Optional instance to populate.
     * @return {module:model/InferenceRecommendationEndpointConfiguration} The populated <code>InferenceRecommendationEndpointConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InferenceRecommendationEndpointConfiguration();
            EndpointOutputConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('EndpointName')) {
                obj['EndpointName'] = ApiClient.convertToType(data['EndpointName'], 'String');
            }
            if (data.hasOwnProperty('VariantName')) {
                obj['VariantName'] = ApiClient.convertToType(data['VariantName'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], ProductionVariantInstanceType);
            }
            if (data.hasOwnProperty('InitialInstanceCount')) {
                obj['InitialInstanceCount'] = ApiClient.convertToType(data['InitialInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('ServerlessConfig')) {
                obj['ServerlessConfig'] = ProductionVariantServerlessConfig.constructFromObject(data['ServerlessConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InferenceRecommendationEndpointConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InferenceRecommendationEndpointConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InferenceRecommendationEndpointConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EndpointName`
        if (data['EndpointName']) { // data not null
          String.validateJSON(data['EndpointName']);
        }
        // validate the optional field `VariantName`
        if (data['VariantName']) { // data not null
          String.validateJSON(data['VariantName']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          ProductionVariantInstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `InitialInstanceCount`
        if (data['InitialInstanceCount']) { // data not null
          Number.validateJSON(data['InitialInstanceCount']);
        }
        // validate the optional field `ServerlessConfig`
        if (data['ServerlessConfig']) { // data not null
          ProductionVariantServerlessConfig.validateJSON(data['ServerlessConfig']);
        }

        return true;
    }


}

InferenceRecommendationEndpointConfiguration.RequiredProperties = ["EndpointName", "VariantName"];

/**
 * @member {String} EndpointName
 */
InferenceRecommendationEndpointConfiguration.prototype['EndpointName'] = undefined;

/**
 * @member {String} VariantName
 */
InferenceRecommendationEndpointConfiguration.prototype['VariantName'] = undefined;

/**
 * @member {module:model/ProductionVariantInstanceType} InstanceType
 */
InferenceRecommendationEndpointConfiguration.prototype['InstanceType'] = undefined;

/**
 * @member {Number} InitialInstanceCount
 */
InferenceRecommendationEndpointConfiguration.prototype['InitialInstanceCount'] = undefined;

/**
 * @member {module:model/ProductionVariantServerlessConfig} ServerlessConfig
 */
InferenceRecommendationEndpointConfiguration.prototype['ServerlessConfig'] = undefined;


// Implement EndpointOutputConfiguration interface:
/**
 * @member {String} EndpointName
 */
EndpointOutputConfiguration.prototype['EndpointName'] = undefined;
/**
 * @member {String} VariantName
 */
EndpointOutputConfiguration.prototype['VariantName'] = undefined;
/**
 * @member {module:model/ProductionVariantInstanceType} InstanceType
 */
EndpointOutputConfiguration.prototype['InstanceType'] = undefined;
/**
 * @member {Number} InitialInstanceCount
 */
EndpointOutputConfiguration.prototype['InitialInstanceCount'] = undefined;
/**
 * @member {module:model/ProductionVariantServerlessConfig} ServerlessConfig
 */
EndpointOutputConfiguration.prototype['ServerlessConfig'] = undefined;




export default InferenceRecommendationEndpointConfiguration;

