/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AthenaDatasetDefinition from './AthenaDatasetDefinition';
import DataDistributionType from './DataDistributionType';
import DatasetDefinition from './DatasetDefinition';
import InputMode from './InputMode';
import RedshiftDatasetDefinition from './RedshiftDatasetDefinition';

/**
 * The ProcessingInputDatasetDefinition model module.
 * @module model/ProcessingInputDatasetDefinition
 * @version 2017-07-24
 */
class ProcessingInputDatasetDefinition {
    /**
     * Constructs a new <code>ProcessingInputDatasetDefinition</code>.
     * @alias module:model/ProcessingInputDatasetDefinition
     * @implements module:model/DatasetDefinition
     */
    constructor() { 
        DatasetDefinition.initialize(this);
        ProcessingInputDatasetDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProcessingInputDatasetDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessingInputDatasetDefinition} obj Optional instance to populate.
     * @return {module:model/ProcessingInputDatasetDefinition} The populated <code>ProcessingInputDatasetDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessingInputDatasetDefinition();
            DatasetDefinition.constructFromObject(data, obj);

            if (data.hasOwnProperty('AthenaDatasetDefinition')) {
                obj['AthenaDatasetDefinition'] = AthenaDatasetDefinition.constructFromObject(data['AthenaDatasetDefinition']);
            }
            if (data.hasOwnProperty('RedshiftDatasetDefinition')) {
                obj['RedshiftDatasetDefinition'] = RedshiftDatasetDefinition.constructFromObject(data['RedshiftDatasetDefinition']);
            }
            if (data.hasOwnProperty('LocalPath')) {
                obj['LocalPath'] = ApiClient.convertToType(data['LocalPath'], 'String');
            }
            if (data.hasOwnProperty('DataDistributionType')) {
                obj['DataDistributionType'] = ApiClient.convertToType(data['DataDistributionType'], DataDistributionType);
            }
            if (data.hasOwnProperty('InputMode')) {
                obj['InputMode'] = ApiClient.convertToType(data['InputMode'], InputMode);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProcessingInputDatasetDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProcessingInputDatasetDefinition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AthenaDatasetDefinition`
        if (data['AthenaDatasetDefinition']) { // data not null
          AthenaDatasetDefinition.validateJSON(data['AthenaDatasetDefinition']);
        }
        // validate the optional field `RedshiftDatasetDefinition`
        if (data['RedshiftDatasetDefinition']) { // data not null
          RedshiftDatasetDefinition.validateJSON(data['RedshiftDatasetDefinition']);
        }
        // validate the optional field `LocalPath`
        if (data['LocalPath']) { // data not null
          String.validateJSON(data['LocalPath']);
        }
        // validate the optional field `DataDistributionType`
        if (data['DataDistributionType']) { // data not null
          DataDistributionType.validateJSON(data['DataDistributionType']);
        }
        // validate the optional field `InputMode`
        if (data['InputMode']) { // data not null
          InputMode.validateJSON(data['InputMode']);
        }

        return true;
    }


}



/**
 * @member {module:model/AthenaDatasetDefinition} AthenaDatasetDefinition
 */
ProcessingInputDatasetDefinition.prototype['AthenaDatasetDefinition'] = undefined;

/**
 * @member {module:model/RedshiftDatasetDefinition} RedshiftDatasetDefinition
 */
ProcessingInputDatasetDefinition.prototype['RedshiftDatasetDefinition'] = undefined;

/**
 * @member {String} LocalPath
 */
ProcessingInputDatasetDefinition.prototype['LocalPath'] = undefined;

/**
 * @member {module:model/DataDistributionType} DataDistributionType
 */
ProcessingInputDatasetDefinition.prototype['DataDistributionType'] = undefined;

/**
 * @member {module:model/InputMode} InputMode
 */
ProcessingInputDatasetDefinition.prototype['InputMode'] = undefined;


// Implement DatasetDefinition interface:
/**
 * @member {module:model/AthenaDatasetDefinition} AthenaDatasetDefinition
 */
DatasetDefinition.prototype['AthenaDatasetDefinition'] = undefined;
/**
 * @member {module:model/RedshiftDatasetDefinition} RedshiftDatasetDefinition
 */
DatasetDefinition.prototype['RedshiftDatasetDefinition'] = undefined;
/**
 * @member {String} LocalPath
 */
DatasetDefinition.prototype['LocalPath'] = undefined;
/**
 * @member {module:model/DataDistributionType} DataDistributionType
 */
DatasetDefinition.prototype['DataDistributionType'] = undefined;
/**
 * @member {module:model/InputMode} InputMode
 */
DatasetDefinition.prototype['InputMode'] = undefined;




export default ProcessingInputDatasetDefinition;

