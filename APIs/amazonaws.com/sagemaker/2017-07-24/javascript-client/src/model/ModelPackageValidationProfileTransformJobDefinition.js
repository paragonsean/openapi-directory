/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchStrategy from './BatchStrategy';
import DescribeTransformJobResponseTransformOutput from './DescribeTransformJobResponseTransformOutput';
import TransformJobDefinition from './TransformJobDefinition';
import TransformJobDefinitionTransformInput from './TransformJobDefinitionTransformInput';
import TransformJobDefinitionTransformResources from './TransformJobDefinitionTransformResources';

/**
 * The ModelPackageValidationProfileTransformJobDefinition model module.
 * @module model/ModelPackageValidationProfileTransformJobDefinition
 * @version 2017-07-24
 */
class ModelPackageValidationProfileTransformJobDefinition {
    /**
     * Constructs a new <code>ModelPackageValidationProfileTransformJobDefinition</code>.
     * @alias module:model/ModelPackageValidationProfileTransformJobDefinition
     * @implements module:model/TransformJobDefinition
     * @param transformInput {module:model/TransformJobDefinitionTransformInput} 
     * @param transformOutput {module:model/DescribeTransformJobResponseTransformOutput} 
     * @param transformResources {module:model/TransformJobDefinitionTransformResources} 
     */
    constructor(transformInput, transformOutput, transformResources) { 
        TransformJobDefinition.initialize(this, transformInput, transformOutput, transformResources);
        ModelPackageValidationProfileTransformJobDefinition.initialize(this, transformInput, transformOutput, transformResources);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transformInput, transformOutput, transformResources) { 
        obj['TransformInput'] = transformInput;
        obj['TransformOutput'] = transformOutput;
        obj['TransformResources'] = transformResources;
    }

    /**
     * Constructs a <code>ModelPackageValidationProfileTransformJobDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelPackageValidationProfileTransformJobDefinition} obj Optional instance to populate.
     * @return {module:model/ModelPackageValidationProfileTransformJobDefinition} The populated <code>ModelPackageValidationProfileTransformJobDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelPackageValidationProfileTransformJobDefinition();
            TransformJobDefinition.constructFromObject(data, obj);

            if (data.hasOwnProperty('MaxConcurrentTransforms')) {
                obj['MaxConcurrentTransforms'] = ApiClient.convertToType(data['MaxConcurrentTransforms'], 'Number');
            }
            if (data.hasOwnProperty('MaxPayloadInMB')) {
                obj['MaxPayloadInMB'] = ApiClient.convertToType(data['MaxPayloadInMB'], 'Number');
            }
            if (data.hasOwnProperty('BatchStrategy')) {
                obj['BatchStrategy'] = ApiClient.convertToType(data['BatchStrategy'], BatchStrategy);
            }
            if (data.hasOwnProperty('Environment')) {
                obj['Environment'] = ApiClient.convertToType(data['Environment'], Object);
            }
            if (data.hasOwnProperty('TransformInput')) {
                obj['TransformInput'] = TransformJobDefinitionTransformInput.constructFromObject(data['TransformInput']);
            }
            if (data.hasOwnProperty('TransformOutput')) {
                obj['TransformOutput'] = DescribeTransformJobResponseTransformOutput.constructFromObject(data['TransformOutput']);
            }
            if (data.hasOwnProperty('TransformResources')) {
                obj['TransformResources'] = TransformJobDefinitionTransformResources.constructFromObject(data['TransformResources']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelPackageValidationProfileTransformJobDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelPackageValidationProfileTransformJobDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModelPackageValidationProfileTransformJobDefinition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MaxConcurrentTransforms`
        if (data['MaxConcurrentTransforms']) { // data not null
          Number.validateJSON(data['MaxConcurrentTransforms']);
        }
        // validate the optional field `MaxPayloadInMB`
        if (data['MaxPayloadInMB']) { // data not null
          Number.validateJSON(data['MaxPayloadInMB']);
        }
        // validate the optional field `BatchStrategy`
        if (data['BatchStrategy']) { // data not null
          BatchStrategy.validateJSON(data['BatchStrategy']);
        }
        // validate the optional field `Environment`
        if (data['Environment']) { // data not null
          Object.validateJSON(data['Environment']);
        }
        // validate the optional field `TransformInput`
        if (data['TransformInput']) { // data not null
          TransformJobDefinitionTransformInput.validateJSON(data['TransformInput']);
        }
        // validate the optional field `TransformOutput`
        if (data['TransformOutput']) { // data not null
          DescribeTransformJobResponseTransformOutput.validateJSON(data['TransformOutput']);
        }
        // validate the optional field `TransformResources`
        if (data['TransformResources']) { // data not null
          TransformJobDefinitionTransformResources.validateJSON(data['TransformResources']);
        }

        return true;
    }


}

ModelPackageValidationProfileTransformJobDefinition.RequiredProperties = ["TransformInput", "TransformOutput", "TransformResources"];

/**
 * @member {Number} MaxConcurrentTransforms
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['MaxConcurrentTransforms'] = undefined;

/**
 * @member {Number} MaxPayloadInMB
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['MaxPayloadInMB'] = undefined;

/**
 * @member {module:model/BatchStrategy} BatchStrategy
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['BatchStrategy'] = undefined;

/**
 * @member {Object} Environment
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['Environment'] = undefined;

/**
 * @member {module:model/TransformJobDefinitionTransformInput} TransformInput
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['TransformInput'] = undefined;

/**
 * @member {module:model/DescribeTransformJobResponseTransformOutput} TransformOutput
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['TransformOutput'] = undefined;

/**
 * @member {module:model/TransformJobDefinitionTransformResources} TransformResources
 */
ModelPackageValidationProfileTransformJobDefinition.prototype['TransformResources'] = undefined;


// Implement TransformJobDefinition interface:
/**
 * @member {Number} MaxConcurrentTransforms
 */
TransformJobDefinition.prototype['MaxConcurrentTransforms'] = undefined;
/**
 * @member {Number} MaxPayloadInMB
 */
TransformJobDefinition.prototype['MaxPayloadInMB'] = undefined;
/**
 * @member {module:model/BatchStrategy} BatchStrategy
 */
TransformJobDefinition.prototype['BatchStrategy'] = undefined;
/**
 * @member {Object} Environment
 */
TransformJobDefinition.prototype['Environment'] = undefined;
/**
 * @member {module:model/TransformJobDefinitionTransformInput} TransformInput
 */
TransformJobDefinition.prototype['TransformInput'] = undefined;
/**
 * @member {module:model/DescribeTransformJobResponseTransformOutput} TransformOutput
 */
TransformJobDefinition.prototype['TransformOutput'] = undefined;
/**
 * @member {module:model/TransformJobDefinitionTransformResources} TransformResources
 */
TransformJobDefinition.prototype['TransformResources'] = undefined;




export default ModelPackageValidationProfileTransformJobDefinition;

