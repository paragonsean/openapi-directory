/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoMLJobCompletionCriteria from './AutoMLJobCompletionCriteria';
import TimeSeriesForecastingJobConfigTimeSeriesConfig from './TimeSeriesForecastingJobConfigTimeSeriesConfig';
import TimeSeriesForecastingJobConfigTransformations from './TimeSeriesForecastingJobConfigTransformations';

/**
 * The TimeSeriesForecastingJobConfig model module.
 * @module model/TimeSeriesForecastingJobConfig
 * @version 2017-07-24
 */
class TimeSeriesForecastingJobConfig {
    /**
     * Constructs a new <code>TimeSeriesForecastingJobConfig</code>.
     * &lt;p&gt;The collection of settings used by an AutoML job V2 for the time-series forecasting problem type.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The &lt;code&gt;TimeSeriesForecastingJobConfig&lt;/code&gt; problem type is only available in private beta. Contact Amazon Web Services Support or your account manager to learn more about access privileges.&lt;/p&gt; &lt;/note&gt;
     * @alias module:model/TimeSeriesForecastingJobConfig
     * @param forecastFrequency {String} 
     * @param forecastHorizon {Number} 
     * @param timeSeriesConfig {module:model/TimeSeriesForecastingJobConfigTimeSeriesConfig} 
     */
    constructor(forecastFrequency, forecastHorizon, timeSeriesConfig) { 
        
        TimeSeriesForecastingJobConfig.initialize(this, forecastFrequency, forecastHorizon, timeSeriesConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, forecastFrequency, forecastHorizon, timeSeriesConfig) { 
        obj['ForecastFrequency'] = forecastFrequency;
        obj['ForecastHorizon'] = forecastHorizon;
        obj['TimeSeriesConfig'] = timeSeriesConfig;
    }

    /**
     * Constructs a <code>TimeSeriesForecastingJobConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesForecastingJobConfig} obj Optional instance to populate.
     * @return {module:model/TimeSeriesForecastingJobConfig} The populated <code>TimeSeriesForecastingJobConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesForecastingJobConfig();

            if (data.hasOwnProperty('FeatureSpecificationS3Uri')) {
                obj['FeatureSpecificationS3Uri'] = ApiClient.convertToType(data['FeatureSpecificationS3Uri'], 'String');
            }
            if (data.hasOwnProperty('CompletionCriteria')) {
                obj['CompletionCriteria'] = AutoMLJobCompletionCriteria.constructFromObject(data['CompletionCriteria']);
            }
            if (data.hasOwnProperty('ForecastFrequency')) {
                obj['ForecastFrequency'] = ApiClient.convertToType(data['ForecastFrequency'], 'String');
            }
            if (data.hasOwnProperty('ForecastHorizon')) {
                obj['ForecastHorizon'] = ApiClient.convertToType(data['ForecastHorizon'], 'Number');
            }
            if (data.hasOwnProperty('ForecastQuantiles')) {
                obj['ForecastQuantiles'] = ApiClient.convertToType(data['ForecastQuantiles'], Array);
            }
            if (data.hasOwnProperty('Transformations')) {
                obj['Transformations'] = TimeSeriesForecastingJobConfigTransformations.constructFromObject(data['Transformations']);
            }
            if (data.hasOwnProperty('TimeSeriesConfig')) {
                obj['TimeSeriesConfig'] = TimeSeriesForecastingJobConfigTimeSeriesConfig.constructFromObject(data['TimeSeriesConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesForecastingJobConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesForecastingJobConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeSeriesForecastingJobConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FeatureSpecificationS3Uri`
        if (data['FeatureSpecificationS3Uri']) { // data not null
          String.validateJSON(data['FeatureSpecificationS3Uri']);
        }
        // validate the optional field `CompletionCriteria`
        if (data['CompletionCriteria']) { // data not null
          AutoMLJobCompletionCriteria.validateJSON(data['CompletionCriteria']);
        }
        // validate the optional field `ForecastFrequency`
        if (data['ForecastFrequency']) { // data not null
          String.validateJSON(data['ForecastFrequency']);
        }
        // validate the optional field `ForecastHorizon`
        if (data['ForecastHorizon']) { // data not null
          Number.validateJSON(data['ForecastHorizon']);
        }
        // validate the optional field `ForecastQuantiles`
        if (data['ForecastQuantiles']) { // data not null
          Array.validateJSON(data['ForecastQuantiles']);
        }
        // validate the optional field `Transformations`
        if (data['Transformations']) { // data not null
          TimeSeriesForecastingJobConfigTransformations.validateJSON(data['Transformations']);
        }
        // validate the optional field `TimeSeriesConfig`
        if (data['TimeSeriesConfig']) { // data not null
          TimeSeriesForecastingJobConfigTimeSeriesConfig.validateJSON(data['TimeSeriesConfig']);
        }

        return true;
    }


}

TimeSeriesForecastingJobConfig.RequiredProperties = ["ForecastFrequency", "ForecastHorizon", "TimeSeriesConfig"];

/**
 * @member {String} FeatureSpecificationS3Uri
 */
TimeSeriesForecastingJobConfig.prototype['FeatureSpecificationS3Uri'] = undefined;

/**
 * @member {module:model/AutoMLJobCompletionCriteria} CompletionCriteria
 */
TimeSeriesForecastingJobConfig.prototype['CompletionCriteria'] = undefined;

/**
 * @member {String} ForecastFrequency
 */
TimeSeriesForecastingJobConfig.prototype['ForecastFrequency'] = undefined;

/**
 * @member {Number} ForecastHorizon
 */
TimeSeriesForecastingJobConfig.prototype['ForecastHorizon'] = undefined;

/**
 * @member {Array} ForecastQuantiles
 */
TimeSeriesForecastingJobConfig.prototype['ForecastQuantiles'] = undefined;

/**
 * @member {module:model/TimeSeriesForecastingJobConfigTransformations} Transformations
 */
TimeSeriesForecastingJobConfig.prototype['Transformations'] = undefined;

/**
 * @member {module:model/TimeSeriesForecastingJobConfigTimeSeriesConfig} TimeSeriesConfig
 */
TimeSeriesForecastingJobConfig.prototype['TimeSeriesConfig'] = undefined;






export default TimeSeriesForecastingJobConfig;

