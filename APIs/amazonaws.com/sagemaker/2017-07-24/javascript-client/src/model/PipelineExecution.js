/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribePipelineExecutionResponseSelectiveExecutionConfig from './DescribePipelineExecutionResponseSelectiveExecutionConfig';
import PipelineExecutionParallelismConfiguration from './PipelineExecutionParallelismConfiguration';
import PipelineExecutionStatus from './PipelineExecutionStatus';
import PipelineExperimentConfig from './PipelineExperimentConfig';
import UserContext from './UserContext';

/**
 * The PipelineExecution model module.
 * @module model/PipelineExecution
 * @version 2017-07-24
 */
class PipelineExecution {
    /**
     * Constructs a new <code>PipelineExecution</code>.
     * An execution of a pipeline.
     * @alias module:model/PipelineExecution
     */
    constructor() { 
        
        PipelineExecution.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PipelineExecution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PipelineExecution} obj Optional instance to populate.
     * @return {module:model/PipelineExecution} The populated <code>PipelineExecution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineExecution();

            if (data.hasOwnProperty('PipelineArn')) {
                obj['PipelineArn'] = ApiClient.convertToType(data['PipelineArn'], 'String');
            }
            if (data.hasOwnProperty('PipelineExecutionArn')) {
                obj['PipelineExecutionArn'] = ApiClient.convertToType(data['PipelineExecutionArn'], 'String');
            }
            if (data.hasOwnProperty('PipelineExecutionDisplayName')) {
                obj['PipelineExecutionDisplayName'] = ApiClient.convertToType(data['PipelineExecutionDisplayName'], 'String');
            }
            if (data.hasOwnProperty('PipelineExecutionStatus')) {
                obj['PipelineExecutionStatus'] = ApiClient.convertToType(data['PipelineExecutionStatus'], PipelineExecutionStatus);
            }
            if (data.hasOwnProperty('PipelineExecutionDescription')) {
                obj['PipelineExecutionDescription'] = ApiClient.convertToType(data['PipelineExecutionDescription'], 'String');
            }
            if (data.hasOwnProperty('PipelineExperimentConfig')) {
                obj['PipelineExperimentConfig'] = PipelineExperimentConfig.constructFromObject(data['PipelineExperimentConfig']);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('CreatedBy')) {
                obj['CreatedBy'] = UserContext.constructFromObject(data['CreatedBy']);
            }
            if (data.hasOwnProperty('LastModifiedBy')) {
                obj['LastModifiedBy'] = UserContext.constructFromObject(data['LastModifiedBy']);
            }
            if (data.hasOwnProperty('ParallelismConfiguration')) {
                obj['ParallelismConfiguration'] = PipelineExecutionParallelismConfiguration.constructFromObject(data['ParallelismConfiguration']);
            }
            if (data.hasOwnProperty('PipelineParameters')) {
                obj['PipelineParameters'] = ApiClient.convertToType(data['PipelineParameters'], Array);
            }
            if (data.hasOwnProperty('SelectiveExecutionConfig')) {
                obj['SelectiveExecutionConfig'] = DescribePipelineExecutionResponseSelectiveExecutionConfig.constructFromObject(data['SelectiveExecutionConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipelineExecution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipelineExecution</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PipelineArn`
        if (data['PipelineArn']) { // data not null
          String.validateJSON(data['PipelineArn']);
        }
        // validate the optional field `PipelineExecutionArn`
        if (data['PipelineExecutionArn']) { // data not null
          String.validateJSON(data['PipelineExecutionArn']);
        }
        // validate the optional field `PipelineExecutionDisplayName`
        if (data['PipelineExecutionDisplayName']) { // data not null
          String.validateJSON(data['PipelineExecutionDisplayName']);
        }
        // validate the optional field `PipelineExecutionStatus`
        if (data['PipelineExecutionStatus']) { // data not null
          PipelineExecutionStatus.validateJSON(data['PipelineExecutionStatus']);
        }
        // validate the optional field `PipelineExecutionDescription`
        if (data['PipelineExecutionDescription']) { // data not null
          String.validateJSON(data['PipelineExecutionDescription']);
        }
        // validate the optional field `PipelineExperimentConfig`
        if (data['PipelineExperimentConfig']) { // data not null
          PipelineExperimentConfig.validateJSON(data['PipelineExperimentConfig']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `CreatedBy`
        if (data['CreatedBy']) { // data not null
          UserContext.validateJSON(data['CreatedBy']);
        }
        // validate the optional field `LastModifiedBy`
        if (data['LastModifiedBy']) { // data not null
          UserContext.validateJSON(data['LastModifiedBy']);
        }
        // validate the optional field `ParallelismConfiguration`
        if (data['ParallelismConfiguration']) { // data not null
          PipelineExecutionParallelismConfiguration.validateJSON(data['ParallelismConfiguration']);
        }
        // validate the optional field `PipelineParameters`
        if (data['PipelineParameters']) { // data not null
          Array.validateJSON(data['PipelineParameters']);
        }
        // validate the optional field `SelectiveExecutionConfig`
        if (data['SelectiveExecutionConfig']) { // data not null
          DescribePipelineExecutionResponseSelectiveExecutionConfig.validateJSON(data['SelectiveExecutionConfig']);
        }

        return true;
    }


}



/**
 * @member {String} PipelineArn
 */
PipelineExecution.prototype['PipelineArn'] = undefined;

/**
 * @member {String} PipelineExecutionArn
 */
PipelineExecution.prototype['PipelineExecutionArn'] = undefined;

/**
 * @member {String} PipelineExecutionDisplayName
 */
PipelineExecution.prototype['PipelineExecutionDisplayName'] = undefined;

/**
 * @member {module:model/PipelineExecutionStatus} PipelineExecutionStatus
 */
PipelineExecution.prototype['PipelineExecutionStatus'] = undefined;

/**
 * @member {String} PipelineExecutionDescription
 */
PipelineExecution.prototype['PipelineExecutionDescription'] = undefined;

/**
 * @member {module:model/PipelineExperimentConfig} PipelineExperimentConfig
 */
PipelineExecution.prototype['PipelineExperimentConfig'] = undefined;

/**
 * @member {String} FailureReason
 */
PipelineExecution.prototype['FailureReason'] = undefined;

/**
 * @member {Date} CreationTime
 */
PipelineExecution.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
PipelineExecution.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/UserContext} CreatedBy
 */
PipelineExecution.prototype['CreatedBy'] = undefined;

/**
 * @member {module:model/UserContext} LastModifiedBy
 */
PipelineExecution.prototype['LastModifiedBy'] = undefined;

/**
 * @member {module:model/PipelineExecutionParallelismConfiguration} ParallelismConfiguration
 */
PipelineExecution.prototype['ParallelismConfiguration'] = undefined;

/**
 * @member {Array} PipelineParameters
 */
PipelineExecution.prototype['PipelineParameters'] = undefined;

/**
 * @member {module:model/DescribePipelineExecutionResponseSelectiveExecutionConfig} SelectiveExecutionConfig
 */
PipelineExecution.prototype['SelectiveExecutionConfig'] = undefined;






export default PipelineExecution;

