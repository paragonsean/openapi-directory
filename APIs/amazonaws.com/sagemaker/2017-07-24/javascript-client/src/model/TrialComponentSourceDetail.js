/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrialComponentSourceDetail from './TrialComponentSourceDetail';
import TrialComponentSourceDetailProcessingJob from './TrialComponentSourceDetailProcessingJob';
import TrialComponentSourceDetailTrainingJob from './TrialComponentSourceDetailTrainingJob';
import TrialComponentSourceDetailTransformJob from './TrialComponentSourceDetailTransformJob';

/**
 * The TrialComponentSourceDetail model module.
 * @module model/TrialComponentSourceDetail
 * @version 2017-07-24
 */
class TrialComponentSourceDetail {
    /**
     * Constructs a new <code>TrialComponentSourceDetail</code>.
     * @alias module:model/TrialComponentSourceDetail
     * @implements module:model/TrialComponentSourceDetail
     */
    constructor() { 
        TrialComponentSourceDetail.initialize(this);
        TrialComponentSourceDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrialComponentSourceDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrialComponentSourceDetail} obj Optional instance to populate.
     * @return {module:model/TrialComponentSourceDetail} The populated <code>TrialComponentSourceDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrialComponentSourceDetail();
            TrialComponentSourceDetail.constructFromObject(data, obj);

            if (data.hasOwnProperty('SourceArn')) {
                obj['SourceArn'] = ApiClient.convertToType(data['SourceArn'], 'String');
            }
            if (data.hasOwnProperty('TrainingJob')) {
                obj['TrainingJob'] = TrialComponentSourceDetailTrainingJob.constructFromObject(data['TrainingJob']);
            }
            if (data.hasOwnProperty('ProcessingJob')) {
                obj['ProcessingJob'] = TrialComponentSourceDetailProcessingJob.constructFromObject(data['ProcessingJob']);
            }
            if (data.hasOwnProperty('TransformJob')) {
                obj['TransformJob'] = TrialComponentSourceDetailTransformJob.constructFromObject(data['TransformJob']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrialComponentSourceDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrialComponentSourceDetail</code>.
     */
    static validateJSON(data) {
        // validate the optional field `SourceArn`
        if (data['SourceArn']) { // data not null
          String.validateJSON(data['SourceArn']);
        }
        // validate the optional field `TrainingJob`
        if (data['TrainingJob']) { // data not null
          TrialComponentSourceDetailTrainingJob.validateJSON(data['TrainingJob']);
        }
        // validate the optional field `ProcessingJob`
        if (data['ProcessingJob']) { // data not null
          TrialComponentSourceDetailProcessingJob.validateJSON(data['ProcessingJob']);
        }
        // validate the optional field `TransformJob`
        if (data['TransformJob']) { // data not null
          TrialComponentSourceDetailTransformJob.validateJSON(data['TransformJob']);
        }

        return true;
    }


}



/**
 * @member {String} SourceArn
 */
TrialComponentSourceDetail.prototype['SourceArn'] = undefined;

/**
 * @member {module:model/TrialComponentSourceDetailTrainingJob} TrainingJob
 */
TrialComponentSourceDetail.prototype['TrainingJob'] = undefined;

/**
 * @member {module:model/TrialComponentSourceDetailProcessingJob} ProcessingJob
 */
TrialComponentSourceDetail.prototype['ProcessingJob'] = undefined;

/**
 * @member {module:model/TrialComponentSourceDetailTransformJob} TransformJob
 */
TrialComponentSourceDetail.prototype['TransformJob'] = undefined;


// Implement TrialComponentSourceDetail interface:
/**
 * @member {String} SourceArn
 */
TrialComponentSourceDetail.prototype['SourceArn'] = undefined;
/**
 * @member {module:model/TrialComponentSourceDetailTrainingJob} TrainingJob
 */
TrialComponentSourceDetail.prototype['TrainingJob'] = undefined;
/**
 * @member {module:model/TrialComponentSourceDetailProcessingJob} ProcessingJob
 */
TrialComponentSourceDetail.prototype['ProcessingJob'] = undefined;
/**
 * @member {module:model/TrialComponentSourceDetailTransformJob} TransformJob
 */
TrialComponentSourceDetail.prototype['TransformJob'] = undefined;




export default TrialComponentSourceDetail;

