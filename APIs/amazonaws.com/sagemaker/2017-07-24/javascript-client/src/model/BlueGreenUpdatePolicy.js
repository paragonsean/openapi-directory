/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlueGreenUpdatePolicyTrafficRoutingConfiguration from './BlueGreenUpdatePolicyTrafficRoutingConfiguration';

/**
 * The BlueGreenUpdatePolicy model module.
 * @module model/BlueGreenUpdatePolicy
 * @version 2017-07-24
 */
class BlueGreenUpdatePolicy {
    /**
     * Constructs a new <code>BlueGreenUpdatePolicy</code>.
     * Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default.
     * @alias module:model/BlueGreenUpdatePolicy
     * @param trafficRoutingConfiguration {module:model/BlueGreenUpdatePolicyTrafficRoutingConfiguration} 
     */
    constructor(trafficRoutingConfiguration) { 
        
        BlueGreenUpdatePolicy.initialize(this, trafficRoutingConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, trafficRoutingConfiguration) { 
        obj['TrafficRoutingConfiguration'] = trafficRoutingConfiguration;
    }

    /**
     * Constructs a <code>BlueGreenUpdatePolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlueGreenUpdatePolicy} obj Optional instance to populate.
     * @return {module:model/BlueGreenUpdatePolicy} The populated <code>BlueGreenUpdatePolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlueGreenUpdatePolicy();

            if (data.hasOwnProperty('TrafficRoutingConfiguration')) {
                obj['TrafficRoutingConfiguration'] = BlueGreenUpdatePolicyTrafficRoutingConfiguration.constructFromObject(data['TrafficRoutingConfiguration']);
            }
            if (data.hasOwnProperty('TerminationWaitInSeconds')) {
                obj['TerminationWaitInSeconds'] = ApiClient.convertToType(data['TerminationWaitInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('MaximumExecutionTimeoutInSeconds')) {
                obj['MaximumExecutionTimeoutInSeconds'] = ApiClient.convertToType(data['MaximumExecutionTimeoutInSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BlueGreenUpdatePolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BlueGreenUpdatePolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BlueGreenUpdatePolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TrafficRoutingConfiguration`
        if (data['TrafficRoutingConfiguration']) { // data not null
          BlueGreenUpdatePolicyTrafficRoutingConfiguration.validateJSON(data['TrafficRoutingConfiguration']);
        }
        // validate the optional field `TerminationWaitInSeconds`
        if (data['TerminationWaitInSeconds']) { // data not null
          Number.validateJSON(data['TerminationWaitInSeconds']);
        }
        // validate the optional field `MaximumExecutionTimeoutInSeconds`
        if (data['MaximumExecutionTimeoutInSeconds']) { // data not null
          Number.validateJSON(data['MaximumExecutionTimeoutInSeconds']);
        }

        return true;
    }


}

BlueGreenUpdatePolicy.RequiredProperties = ["TrafficRoutingConfiguration"];

/**
 * @member {module:model/BlueGreenUpdatePolicyTrafficRoutingConfiguration} TrafficRoutingConfiguration
 */
BlueGreenUpdatePolicy.prototype['TrafficRoutingConfiguration'] = undefined;

/**
 * @member {Number} TerminationWaitInSeconds
 */
BlueGreenUpdatePolicy.prototype['TerminationWaitInSeconds'] = undefined;

/**
 * @member {Number} MaximumExecutionTimeoutInSeconds
 */
BlueGreenUpdatePolicy.prototype['MaximumExecutionTimeoutInSeconds'] = undefined;






export default BlueGreenUpdatePolicy;

