/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateInferenceRecommendationsJobRequestInputConfig from './CreateInferenceRecommendationsJobRequestInputConfig';
import CreateInferenceRecommendationsJobRequestOutputConfig from './CreateInferenceRecommendationsJobRequestOutputConfig';
import CreateInferenceRecommendationsJobRequestStoppingConditions from './CreateInferenceRecommendationsJobRequestStoppingConditions';
import RecommendationJobType from './RecommendationJobType';

/**
 * The CreateInferenceRecommendationsJobRequest model module.
 * @module model/CreateInferenceRecommendationsJobRequest
 * @version 2017-07-24
 */
class CreateInferenceRecommendationsJobRequest {
    /**
     * Constructs a new <code>CreateInferenceRecommendationsJobRequest</code>.
     * @alias module:model/CreateInferenceRecommendationsJobRequest
     * @param jobName {String} 
     * @param jobType {module:model/RecommendationJobType} 
     * @param roleArn {String} 
     * @param inputConfig {module:model/CreateInferenceRecommendationsJobRequestInputConfig} 
     */
    constructor(jobName, jobType, roleArn, inputConfig) { 
        
        CreateInferenceRecommendationsJobRequest.initialize(this, jobName, jobType, roleArn, inputConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobName, jobType, roleArn, inputConfig) { 
        obj['JobName'] = jobName;
        obj['JobType'] = jobType;
        obj['RoleArn'] = roleArn;
        obj['InputConfig'] = inputConfig;
    }

    /**
     * Constructs a <code>CreateInferenceRecommendationsJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateInferenceRecommendationsJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateInferenceRecommendationsJobRequest} The populated <code>CreateInferenceRecommendationsJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateInferenceRecommendationsJobRequest();

            if (data.hasOwnProperty('JobName')) {
                obj['JobName'] = ApiClient.convertToType(data['JobName'], 'String');
            }
            if (data.hasOwnProperty('JobType')) {
                obj['JobType'] = ApiClient.convertToType(data['JobType'], RecommendationJobType);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('InputConfig')) {
                obj['InputConfig'] = CreateInferenceRecommendationsJobRequestInputConfig.constructFromObject(data['InputConfig']);
            }
            if (data.hasOwnProperty('JobDescription')) {
                obj['JobDescription'] = ApiClient.convertToType(data['JobDescription'], 'String');
            }
            if (data.hasOwnProperty('StoppingConditions')) {
                obj['StoppingConditions'] = CreateInferenceRecommendationsJobRequestStoppingConditions.constructFromObject(data['StoppingConditions']);
            }
            if (data.hasOwnProperty('OutputConfig')) {
                obj['OutputConfig'] = CreateInferenceRecommendationsJobRequestOutputConfig.constructFromObject(data['OutputConfig']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateInferenceRecommendationsJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateInferenceRecommendationsJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateInferenceRecommendationsJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `JobName`
        if (data['JobName']) { // data not null
          String.validateJSON(data['JobName']);
        }
        // validate the optional field `JobType`
        if (data['JobType']) { // data not null
          RecommendationJobType.validateJSON(data['JobType']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `InputConfig`
        if (data['InputConfig']) { // data not null
          CreateInferenceRecommendationsJobRequestInputConfig.validateJSON(data['InputConfig']);
        }
        // validate the optional field `JobDescription`
        if (data['JobDescription']) { // data not null
          String.validateJSON(data['JobDescription']);
        }
        // validate the optional field `StoppingConditions`
        if (data['StoppingConditions']) { // data not null
          CreateInferenceRecommendationsJobRequestStoppingConditions.validateJSON(data['StoppingConditions']);
        }
        // validate the optional field `OutputConfig`
        if (data['OutputConfig']) { // data not null
          CreateInferenceRecommendationsJobRequestOutputConfig.validateJSON(data['OutputConfig']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CreateInferenceRecommendationsJobRequest.RequiredProperties = ["JobName", "JobType", "RoleArn", "InputConfig"];

/**
 * @member {String} JobName
 */
CreateInferenceRecommendationsJobRequest.prototype['JobName'] = undefined;

/**
 * @member {module:model/RecommendationJobType} JobType
 */
CreateInferenceRecommendationsJobRequest.prototype['JobType'] = undefined;

/**
 * @member {String} RoleArn
 */
CreateInferenceRecommendationsJobRequest.prototype['RoleArn'] = undefined;

/**
 * @member {module:model/CreateInferenceRecommendationsJobRequestInputConfig} InputConfig
 */
CreateInferenceRecommendationsJobRequest.prototype['InputConfig'] = undefined;

/**
 * @member {String} JobDescription
 */
CreateInferenceRecommendationsJobRequest.prototype['JobDescription'] = undefined;

/**
 * @member {module:model/CreateInferenceRecommendationsJobRequestStoppingConditions} StoppingConditions
 */
CreateInferenceRecommendationsJobRequest.prototype['StoppingConditions'] = undefined;

/**
 * @member {module:model/CreateInferenceRecommendationsJobRequestOutputConfig} OutputConfig
 */
CreateInferenceRecommendationsJobRequest.prototype['OutputConfig'] = undefined;

/**
 * @member {Array} Tags
 */
CreateInferenceRecommendationsJobRequest.prototype['Tags'] = undefined;






export default CreateInferenceRecommendationsJobRequest;

