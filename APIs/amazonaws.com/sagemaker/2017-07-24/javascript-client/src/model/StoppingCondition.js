/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StoppingCondition model module.
 * @module model/StoppingCondition
 * @version 2017-07-24
 */
class StoppingCondition {
    /**
     * Constructs a new <code>StoppingCondition</code>.
     * &lt;p&gt;Specifies a limit to how long a model training job or model compilation job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, SageMaker ends the training or compilation job. Use this API to cap model training costs.&lt;/p&gt; &lt;p&gt;To stop a training job, SageMaker sends the algorithm the &lt;code&gt;SIGTERM&lt;/code&gt; signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. &lt;/p&gt; &lt;p&gt;The training algorithms provided by SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with &lt;code&gt;CreateModel&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.&lt;/p&gt; &lt;/note&gt;
     * @alias module:model/StoppingCondition
     */
    constructor() { 
        
        StoppingCondition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StoppingCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoppingCondition} obj Optional instance to populate.
     * @return {module:model/StoppingCondition} The populated <code>StoppingCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoppingCondition();

            if (data.hasOwnProperty('MaxRuntimeInSeconds')) {
                obj['MaxRuntimeInSeconds'] = ApiClient.convertToType(data['MaxRuntimeInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('MaxWaitTimeInSeconds')) {
                obj['MaxWaitTimeInSeconds'] = ApiClient.convertToType(data['MaxWaitTimeInSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoppingCondition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoppingCondition</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MaxRuntimeInSeconds`
        if (data['MaxRuntimeInSeconds']) { // data not null
          Number.validateJSON(data['MaxRuntimeInSeconds']);
        }
        // validate the optional field `MaxWaitTimeInSeconds`
        if (data['MaxWaitTimeInSeconds']) { // data not null
          Number.validateJSON(data['MaxWaitTimeInSeconds']);
        }

        return true;
    }


}



/**
 * @member {Number} MaxRuntimeInSeconds
 */
StoppingCondition.prototype['MaxRuntimeInSeconds'] = undefined;

/**
 * @member {Number} MaxWaitTimeInSeconds
 */
StoppingCondition.prototype['MaxWaitTimeInSeconds'] = undefined;






export default StoppingCondition;

