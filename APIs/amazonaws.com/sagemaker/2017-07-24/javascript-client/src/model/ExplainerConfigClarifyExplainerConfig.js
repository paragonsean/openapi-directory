/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClarifyExplainerConfig from './ClarifyExplainerConfig';
import ClarifyExplainerConfigInferenceConfig from './ClarifyExplainerConfigInferenceConfig';
import ClarifyExplainerConfigShapConfig from './ClarifyExplainerConfigShapConfig';

/**
 * The ExplainerConfigClarifyExplainerConfig model module.
 * @module model/ExplainerConfigClarifyExplainerConfig
 * @version 2017-07-24
 */
class ExplainerConfigClarifyExplainerConfig {
    /**
     * Constructs a new <code>ExplainerConfigClarifyExplainerConfig</code>.
     * @alias module:model/ExplainerConfigClarifyExplainerConfig
     * @implements module:model/ClarifyExplainerConfig
     * @param shapConfig {module:model/ClarifyExplainerConfigShapConfig} 
     */
    constructor(shapConfig) { 
        ClarifyExplainerConfig.initialize(this, shapConfig);
        ExplainerConfigClarifyExplainerConfig.initialize(this, shapConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, shapConfig) { 
        obj['ShapConfig'] = shapConfig;
    }

    /**
     * Constructs a <code>ExplainerConfigClarifyExplainerConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExplainerConfigClarifyExplainerConfig} obj Optional instance to populate.
     * @return {module:model/ExplainerConfigClarifyExplainerConfig} The populated <code>ExplainerConfigClarifyExplainerConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExplainerConfigClarifyExplainerConfig();
            ClarifyExplainerConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('EnableExplanations')) {
                obj['EnableExplanations'] = ApiClient.convertToType(data['EnableExplanations'], 'String');
            }
            if (data.hasOwnProperty('InferenceConfig')) {
                obj['InferenceConfig'] = ClarifyExplainerConfigInferenceConfig.constructFromObject(data['InferenceConfig']);
            }
            if (data.hasOwnProperty('ShapConfig')) {
                obj['ShapConfig'] = ClarifyExplainerConfigShapConfig.constructFromObject(data['ShapConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExplainerConfigClarifyExplainerConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExplainerConfigClarifyExplainerConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExplainerConfigClarifyExplainerConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EnableExplanations`
        if (data['EnableExplanations']) { // data not null
          String.validateJSON(data['EnableExplanations']);
        }
        // validate the optional field `InferenceConfig`
        if (data['InferenceConfig']) { // data not null
          ClarifyExplainerConfigInferenceConfig.validateJSON(data['InferenceConfig']);
        }
        // validate the optional field `ShapConfig`
        if (data['ShapConfig']) { // data not null
          ClarifyExplainerConfigShapConfig.validateJSON(data['ShapConfig']);
        }

        return true;
    }


}

ExplainerConfigClarifyExplainerConfig.RequiredProperties = ["ShapConfig"];

/**
 * @member {String} EnableExplanations
 */
ExplainerConfigClarifyExplainerConfig.prototype['EnableExplanations'] = undefined;

/**
 * @member {module:model/ClarifyExplainerConfigInferenceConfig} InferenceConfig
 */
ExplainerConfigClarifyExplainerConfig.prototype['InferenceConfig'] = undefined;

/**
 * @member {module:model/ClarifyExplainerConfigShapConfig} ShapConfig
 */
ExplainerConfigClarifyExplainerConfig.prototype['ShapConfig'] = undefined;


// Implement ClarifyExplainerConfig interface:
/**
 * @member {String} EnableExplanations
 */
ClarifyExplainerConfig.prototype['EnableExplanations'] = undefined;
/**
 * @member {module:model/ClarifyExplainerConfigInferenceConfig} InferenceConfig
 */
ClarifyExplainerConfig.prototype['InferenceConfig'] = undefined;
/**
 * @member {module:model/ClarifyExplainerConfigShapConfig} ShapConfig
 */
ClarifyExplainerConfig.prototype['ShapConfig'] = undefined;




export default ExplainerConfigClarifyExplainerConfig;

