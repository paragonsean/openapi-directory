/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CandidateStepType from './CandidateStepType';

/**
 * The AutoMLCandidateStep model module.
 * @module model/AutoMLCandidateStep
 * @version 2017-07-24
 */
class AutoMLCandidateStep {
    /**
     * Constructs a new <code>AutoMLCandidateStep</code>.
     * Information about the steps for a candidate and what step it is working on.
     * @alias module:model/AutoMLCandidateStep
     * @param candidateStepType {module:model/CandidateStepType} 
     * @param candidateStepArn {String} 
     * @param candidateStepName {String} 
     */
    constructor(candidateStepType, candidateStepArn, candidateStepName) { 
        
        AutoMLCandidateStep.initialize(this, candidateStepType, candidateStepArn, candidateStepName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, candidateStepType, candidateStepArn, candidateStepName) { 
        obj['CandidateStepType'] = candidateStepType;
        obj['CandidateStepArn'] = candidateStepArn;
        obj['CandidateStepName'] = candidateStepName;
    }

    /**
     * Constructs a <code>AutoMLCandidateStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoMLCandidateStep} obj Optional instance to populate.
     * @return {module:model/AutoMLCandidateStep} The populated <code>AutoMLCandidateStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoMLCandidateStep();

            if (data.hasOwnProperty('CandidateStepType')) {
                obj['CandidateStepType'] = ApiClient.convertToType(data['CandidateStepType'], CandidateStepType);
            }
            if (data.hasOwnProperty('CandidateStepArn')) {
                obj['CandidateStepArn'] = ApiClient.convertToType(data['CandidateStepArn'], 'String');
            }
            if (data.hasOwnProperty('CandidateStepName')) {
                obj['CandidateStepName'] = ApiClient.convertToType(data['CandidateStepName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoMLCandidateStep</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoMLCandidateStep</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AutoMLCandidateStep.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CandidateStepType`
        if (data['CandidateStepType']) { // data not null
          CandidateStepType.validateJSON(data['CandidateStepType']);
        }
        // validate the optional field `CandidateStepArn`
        if (data['CandidateStepArn']) { // data not null
          String.validateJSON(data['CandidateStepArn']);
        }
        // validate the optional field `CandidateStepName`
        if (data['CandidateStepName']) { // data not null
          String.validateJSON(data['CandidateStepName']);
        }

        return true;
    }


}

AutoMLCandidateStep.RequiredProperties = ["CandidateStepType", "CandidateStepArn", "CandidateStepName"];

/**
 * @member {module:model/CandidateStepType} CandidateStepType
 */
AutoMLCandidateStep.prototype['CandidateStepType'] = undefined;

/**
 * @member {String} CandidateStepArn
 */
AutoMLCandidateStep.prototype['CandidateStepArn'] = undefined;

/**
 * @member {String} CandidateStepName
 */
AutoMLCandidateStep.prototype['CandidateStepName'] = undefined;






export default AutoMLCandidateStep;

