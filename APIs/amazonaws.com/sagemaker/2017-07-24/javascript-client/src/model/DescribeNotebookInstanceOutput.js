/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNotebookInstanceInputInstanceMetadataServiceConfiguration from './CreateNotebookInstanceInputInstanceMetadataServiceConfiguration';
import DirectInternetAccess from './DirectInternetAccess';
import InstanceType from './InstanceType';
import NotebookInstanceStatus from './NotebookInstanceStatus';
import RootAccess from './RootAccess';

/**
 * The DescribeNotebookInstanceOutput model module.
 * @module model/DescribeNotebookInstanceOutput
 * @version 2017-07-24
 */
class DescribeNotebookInstanceOutput {
    /**
     * Constructs a new <code>DescribeNotebookInstanceOutput</code>.
     * @alias module:model/DescribeNotebookInstanceOutput
     */
    constructor() { 
        
        DescribeNotebookInstanceOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeNotebookInstanceOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeNotebookInstanceOutput} obj Optional instance to populate.
     * @return {module:model/DescribeNotebookInstanceOutput} The populated <code>DescribeNotebookInstanceOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeNotebookInstanceOutput();

            if (data.hasOwnProperty('NotebookInstanceArn')) {
                obj['NotebookInstanceArn'] = ApiClient.convertToType(data['NotebookInstanceArn'], 'String');
            }
            if (data.hasOwnProperty('NotebookInstanceName')) {
                obj['NotebookInstanceName'] = ApiClient.convertToType(data['NotebookInstanceName'], 'String');
            }
            if (data.hasOwnProperty('NotebookInstanceStatus')) {
                obj['NotebookInstanceStatus'] = ApiClient.convertToType(data['NotebookInstanceStatus'], NotebookInstanceStatus);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], InstanceType);
            }
            if (data.hasOwnProperty('SubnetId')) {
                obj['SubnetId'] = ApiClient.convertToType(data['SubnetId'], 'String');
            }
            if (data.hasOwnProperty('SecurityGroups')) {
                obj['SecurityGroups'] = ApiClient.convertToType(data['SecurityGroups'], Array);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('NetworkInterfaceId')) {
                obj['NetworkInterfaceId'] = ApiClient.convertToType(data['NetworkInterfaceId'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('NotebookInstanceLifecycleConfigName')) {
                obj['NotebookInstanceLifecycleConfigName'] = ApiClient.convertToType(data['NotebookInstanceLifecycleConfigName'], 'String');
            }
            if (data.hasOwnProperty('DirectInternetAccess')) {
                obj['DirectInternetAccess'] = ApiClient.convertToType(data['DirectInternetAccess'], DirectInternetAccess);
            }
            if (data.hasOwnProperty('VolumeSizeInGB')) {
                obj['VolumeSizeInGB'] = ApiClient.convertToType(data['VolumeSizeInGB'], 'Number');
            }
            if (data.hasOwnProperty('AcceleratorTypes')) {
                obj['AcceleratorTypes'] = ApiClient.convertToType(data['AcceleratorTypes'], Array);
            }
            if (data.hasOwnProperty('DefaultCodeRepository')) {
                obj['DefaultCodeRepository'] = ApiClient.convertToType(data['DefaultCodeRepository'], 'String');
            }
            if (data.hasOwnProperty('AdditionalCodeRepositories')) {
                obj['AdditionalCodeRepositories'] = ApiClient.convertToType(data['AdditionalCodeRepositories'], Array);
            }
            if (data.hasOwnProperty('RootAccess')) {
                obj['RootAccess'] = ApiClient.convertToType(data['RootAccess'], RootAccess);
            }
            if (data.hasOwnProperty('PlatformIdentifier')) {
                obj['PlatformIdentifier'] = ApiClient.convertToType(data['PlatformIdentifier'], 'String');
            }
            if (data.hasOwnProperty('InstanceMetadataServiceConfiguration')) {
                obj['InstanceMetadataServiceConfiguration'] = CreateNotebookInstanceInputInstanceMetadataServiceConfiguration.constructFromObject(data['InstanceMetadataServiceConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeNotebookInstanceOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeNotebookInstanceOutput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `NotebookInstanceArn`
        if (data['NotebookInstanceArn']) { // data not null
          String.validateJSON(data['NotebookInstanceArn']);
        }
        // validate the optional field `NotebookInstanceName`
        if (data['NotebookInstanceName']) { // data not null
          String.validateJSON(data['NotebookInstanceName']);
        }
        // validate the optional field `NotebookInstanceStatus`
        if (data['NotebookInstanceStatus']) { // data not null
          NotebookInstanceStatus.validateJSON(data['NotebookInstanceStatus']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `Url`
        if (data['Url']) { // data not null
          String.validateJSON(data['Url']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          InstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `SubnetId`
        if (data['SubnetId']) { // data not null
          String.validateJSON(data['SubnetId']);
        }
        // validate the optional field `SecurityGroups`
        if (data['SecurityGroups']) { // data not null
          Array.validateJSON(data['SecurityGroups']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `NetworkInterfaceId`
        if (data['NetworkInterfaceId']) { // data not null
          String.validateJSON(data['NetworkInterfaceId']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `NotebookInstanceLifecycleConfigName`
        if (data['NotebookInstanceLifecycleConfigName']) { // data not null
          String.validateJSON(data['NotebookInstanceLifecycleConfigName']);
        }
        // validate the optional field `DirectInternetAccess`
        if (data['DirectInternetAccess']) { // data not null
          DirectInternetAccess.validateJSON(data['DirectInternetAccess']);
        }
        // validate the optional field `VolumeSizeInGB`
        if (data['VolumeSizeInGB']) { // data not null
          Number.validateJSON(data['VolumeSizeInGB']);
        }
        // validate the optional field `AcceleratorTypes`
        if (data['AcceleratorTypes']) { // data not null
          Array.validateJSON(data['AcceleratorTypes']);
        }
        // validate the optional field `DefaultCodeRepository`
        if (data['DefaultCodeRepository']) { // data not null
          String.validateJSON(data['DefaultCodeRepository']);
        }
        // validate the optional field `AdditionalCodeRepositories`
        if (data['AdditionalCodeRepositories']) { // data not null
          Array.validateJSON(data['AdditionalCodeRepositories']);
        }
        // validate the optional field `RootAccess`
        if (data['RootAccess']) { // data not null
          RootAccess.validateJSON(data['RootAccess']);
        }
        // validate the optional field `PlatformIdentifier`
        if (data['PlatformIdentifier']) { // data not null
          String.validateJSON(data['PlatformIdentifier']);
        }
        // validate the optional field `InstanceMetadataServiceConfiguration`
        if (data['InstanceMetadataServiceConfiguration']) { // data not null
          CreateNotebookInstanceInputInstanceMetadataServiceConfiguration.validateJSON(data['InstanceMetadataServiceConfiguration']);
        }

        return true;
    }


}



/**
 * @member {String} NotebookInstanceArn
 */
DescribeNotebookInstanceOutput.prototype['NotebookInstanceArn'] = undefined;

/**
 * @member {String} NotebookInstanceName
 */
DescribeNotebookInstanceOutput.prototype['NotebookInstanceName'] = undefined;

/**
 * @member {module:model/NotebookInstanceStatus} NotebookInstanceStatus
 */
DescribeNotebookInstanceOutput.prototype['NotebookInstanceStatus'] = undefined;

/**
 * @member {String} FailureReason
 */
DescribeNotebookInstanceOutput.prototype['FailureReason'] = undefined;

/**
 * @member {String} Url
 */
DescribeNotebookInstanceOutput.prototype['Url'] = undefined;

/**
 * @member {module:model/InstanceType} InstanceType
 */
DescribeNotebookInstanceOutput.prototype['InstanceType'] = undefined;

/**
 * @member {String} SubnetId
 */
DescribeNotebookInstanceOutput.prototype['SubnetId'] = undefined;

/**
 * @member {Array} SecurityGroups
 */
DescribeNotebookInstanceOutput.prototype['SecurityGroups'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeNotebookInstanceOutput.prototype['RoleArn'] = undefined;

/**
 * @member {String} KmsKeyId
 */
DescribeNotebookInstanceOutput.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} NetworkInterfaceId
 */
DescribeNotebookInstanceOutput.prototype['NetworkInterfaceId'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
DescribeNotebookInstanceOutput.prototype['LastModifiedTime'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeNotebookInstanceOutput.prototype['CreationTime'] = undefined;

/**
 * @member {String} NotebookInstanceLifecycleConfigName
 */
DescribeNotebookInstanceOutput.prototype['NotebookInstanceLifecycleConfigName'] = undefined;

/**
 * @member {module:model/DirectInternetAccess} DirectInternetAccess
 */
DescribeNotebookInstanceOutput.prototype['DirectInternetAccess'] = undefined;

/**
 * @member {Number} VolumeSizeInGB
 */
DescribeNotebookInstanceOutput.prototype['VolumeSizeInGB'] = undefined;

/**
 * @member {Array} AcceleratorTypes
 */
DescribeNotebookInstanceOutput.prototype['AcceleratorTypes'] = undefined;

/**
 * @member {String} DefaultCodeRepository
 */
DescribeNotebookInstanceOutput.prototype['DefaultCodeRepository'] = undefined;

/**
 * @member {Array} AdditionalCodeRepositories
 */
DescribeNotebookInstanceOutput.prototype['AdditionalCodeRepositories'] = undefined;

/**
 * @member {module:model/RootAccess} RootAccess
 */
DescribeNotebookInstanceOutput.prototype['RootAccess'] = undefined;

/**
 * @member {String} PlatformIdentifier
 */
DescribeNotebookInstanceOutput.prototype['PlatformIdentifier'] = undefined;

/**
 * @member {module:model/CreateNotebookInstanceInputInstanceMetadataServiceConfiguration} InstanceMetadataServiceConfiguration
 */
DescribeNotebookInstanceOutput.prototype['InstanceMetadataServiceConfiguration'] = undefined;






export default DescribeNotebookInstanceOutput;

