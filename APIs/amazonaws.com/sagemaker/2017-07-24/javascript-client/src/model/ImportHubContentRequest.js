/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HubContentType from './HubContentType';

/**
 * The ImportHubContentRequest model module.
 * @module model/ImportHubContentRequest
 * @version 2017-07-24
 */
class ImportHubContentRequest {
    /**
     * Constructs a new <code>ImportHubContentRequest</code>.
     * @alias module:model/ImportHubContentRequest
     * @param hubContentName {String} 
     * @param hubContentType {module:model/HubContentType} 
     * @param documentSchemaVersion {String} 
     * @param hubName {String} 
     * @param hubContentDocument {String} 
     */
    constructor(hubContentName, hubContentType, documentSchemaVersion, hubName, hubContentDocument) { 
        
        ImportHubContentRequest.initialize(this, hubContentName, hubContentType, documentSchemaVersion, hubName, hubContentDocument);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hubContentName, hubContentType, documentSchemaVersion, hubName, hubContentDocument) { 
        obj['HubContentName'] = hubContentName;
        obj['HubContentType'] = hubContentType;
        obj['DocumentSchemaVersion'] = documentSchemaVersion;
        obj['HubName'] = hubName;
        obj['HubContentDocument'] = hubContentDocument;
    }

    /**
     * Constructs a <code>ImportHubContentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportHubContentRequest} obj Optional instance to populate.
     * @return {module:model/ImportHubContentRequest} The populated <code>ImportHubContentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportHubContentRequest();

            if (data.hasOwnProperty('HubContentName')) {
                obj['HubContentName'] = ApiClient.convertToType(data['HubContentName'], 'String');
            }
            if (data.hasOwnProperty('HubContentVersion')) {
                obj['HubContentVersion'] = ApiClient.convertToType(data['HubContentVersion'], 'String');
            }
            if (data.hasOwnProperty('HubContentType')) {
                obj['HubContentType'] = ApiClient.convertToType(data['HubContentType'], HubContentType);
            }
            if (data.hasOwnProperty('DocumentSchemaVersion')) {
                obj['DocumentSchemaVersion'] = ApiClient.convertToType(data['DocumentSchemaVersion'], 'String');
            }
            if (data.hasOwnProperty('HubName')) {
                obj['HubName'] = ApiClient.convertToType(data['HubName'], 'String');
            }
            if (data.hasOwnProperty('HubContentDisplayName')) {
                obj['HubContentDisplayName'] = ApiClient.convertToType(data['HubContentDisplayName'], 'String');
            }
            if (data.hasOwnProperty('HubContentDescription')) {
                obj['HubContentDescription'] = ApiClient.convertToType(data['HubContentDescription'], 'String');
            }
            if (data.hasOwnProperty('HubContentMarkdown')) {
                obj['HubContentMarkdown'] = ApiClient.convertToType(data['HubContentMarkdown'], 'String');
            }
            if (data.hasOwnProperty('HubContentDocument')) {
                obj['HubContentDocument'] = ApiClient.convertToType(data['HubContentDocument'], 'String');
            }
            if (data.hasOwnProperty('HubContentSearchKeywords')) {
                obj['HubContentSearchKeywords'] = ApiClient.convertToType(data['HubContentSearchKeywords'], Array);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportHubContentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportHubContentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportHubContentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `HubContentName`
        if (data['HubContentName']) { // data not null
          String.validateJSON(data['HubContentName']);
        }
        // validate the optional field `HubContentVersion`
        if (data['HubContentVersion']) { // data not null
          String.validateJSON(data['HubContentVersion']);
        }
        // validate the optional field `HubContentType`
        if (data['HubContentType']) { // data not null
          HubContentType.validateJSON(data['HubContentType']);
        }
        // validate the optional field `DocumentSchemaVersion`
        if (data['DocumentSchemaVersion']) { // data not null
          String.validateJSON(data['DocumentSchemaVersion']);
        }
        // validate the optional field `HubName`
        if (data['HubName']) { // data not null
          String.validateJSON(data['HubName']);
        }
        // validate the optional field `HubContentDisplayName`
        if (data['HubContentDisplayName']) { // data not null
          String.validateJSON(data['HubContentDisplayName']);
        }
        // validate the optional field `HubContentDescription`
        if (data['HubContentDescription']) { // data not null
          String.validateJSON(data['HubContentDescription']);
        }
        // validate the optional field `HubContentMarkdown`
        if (data['HubContentMarkdown']) { // data not null
          String.validateJSON(data['HubContentMarkdown']);
        }
        // validate the optional field `HubContentDocument`
        if (data['HubContentDocument']) { // data not null
          String.validateJSON(data['HubContentDocument']);
        }
        // validate the optional field `HubContentSearchKeywords`
        if (data['HubContentSearchKeywords']) { // data not null
          Array.validateJSON(data['HubContentSearchKeywords']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

ImportHubContentRequest.RequiredProperties = ["HubContentName", "HubContentType", "DocumentSchemaVersion", "HubName", "HubContentDocument"];

/**
 * @member {String} HubContentName
 */
ImportHubContentRequest.prototype['HubContentName'] = undefined;

/**
 * @member {String} HubContentVersion
 */
ImportHubContentRequest.prototype['HubContentVersion'] = undefined;

/**
 * @member {module:model/HubContentType} HubContentType
 */
ImportHubContentRequest.prototype['HubContentType'] = undefined;

/**
 * @member {String} DocumentSchemaVersion
 */
ImportHubContentRequest.prototype['DocumentSchemaVersion'] = undefined;

/**
 * @member {String} HubName
 */
ImportHubContentRequest.prototype['HubName'] = undefined;

/**
 * @member {String} HubContentDisplayName
 */
ImportHubContentRequest.prototype['HubContentDisplayName'] = undefined;

/**
 * @member {String} HubContentDescription
 */
ImportHubContentRequest.prototype['HubContentDescription'] = undefined;

/**
 * @member {String} HubContentMarkdown
 */
ImportHubContentRequest.prototype['HubContentMarkdown'] = undefined;

/**
 * @member {String} HubContentDocument
 */
ImportHubContentRequest.prototype['HubContentDocument'] = undefined;

/**
 * @member {Array} HubContentSearchKeywords
 */
ImportHubContentRequest.prototype['HubContentSearchKeywords'] = undefined;

/**
 * @member {Array} Tags
 */
ImportHubContentRequest.prototype['Tags'] = undefined;






export default ImportHubContentRequest;

