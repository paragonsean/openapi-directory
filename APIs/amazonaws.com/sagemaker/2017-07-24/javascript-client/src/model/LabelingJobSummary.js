/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeLabelingJobResponseLabelingJobOutput from './DescribeLabelingJobResponseLabelingJobOutput';
import LabelingJobStatus from './LabelingJobStatus';
import LabelingJobSummaryInputConfig from './LabelingJobSummaryInputConfig';
import LabelingJobSummaryLabelCounters from './LabelingJobSummaryLabelCounters';

/**
 * The LabelingJobSummary model module.
 * @module model/LabelingJobSummary
 * @version 2017-07-24
 */
class LabelingJobSummary {
    /**
     * Constructs a new <code>LabelingJobSummary</code>.
     * Provides summary information about a labeling job.
     * @alias module:model/LabelingJobSummary
     * @param labelingJobName {String} 
     * @param labelingJobArn {String} 
     * @param creationTime {Date} 
     * @param lastModifiedTime {Date} 
     * @param labelingJobStatus {module:model/LabelingJobStatus} 
     * @param labelCounters {module:model/LabelingJobSummaryLabelCounters} 
     * @param workteamArn {String} 
     * @param preHumanTaskLambdaArn {String} 
     */
    constructor(labelingJobName, labelingJobArn, creationTime, lastModifiedTime, labelingJobStatus, labelCounters, workteamArn, preHumanTaskLambdaArn) { 
        
        LabelingJobSummary.initialize(this, labelingJobName, labelingJobArn, creationTime, lastModifiedTime, labelingJobStatus, labelCounters, workteamArn, preHumanTaskLambdaArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, labelingJobName, labelingJobArn, creationTime, lastModifiedTime, labelingJobStatus, labelCounters, workteamArn, preHumanTaskLambdaArn) { 
        obj['LabelingJobName'] = labelingJobName;
        obj['LabelingJobArn'] = labelingJobArn;
        obj['CreationTime'] = creationTime;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['LabelingJobStatus'] = labelingJobStatus;
        obj['LabelCounters'] = labelCounters;
        obj['WorkteamArn'] = workteamArn;
        obj['PreHumanTaskLambdaArn'] = preHumanTaskLambdaArn;
    }

    /**
     * Constructs a <code>LabelingJobSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LabelingJobSummary} obj Optional instance to populate.
     * @return {module:model/LabelingJobSummary} The populated <code>LabelingJobSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LabelingJobSummary();

            if (data.hasOwnProperty('LabelingJobName')) {
                obj['LabelingJobName'] = ApiClient.convertToType(data['LabelingJobName'], 'String');
            }
            if (data.hasOwnProperty('LabelingJobArn')) {
                obj['LabelingJobArn'] = ApiClient.convertToType(data['LabelingJobArn'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('LabelingJobStatus')) {
                obj['LabelingJobStatus'] = ApiClient.convertToType(data['LabelingJobStatus'], LabelingJobStatus);
            }
            if (data.hasOwnProperty('LabelCounters')) {
                obj['LabelCounters'] = LabelingJobSummaryLabelCounters.constructFromObject(data['LabelCounters']);
            }
            if (data.hasOwnProperty('WorkteamArn')) {
                obj['WorkteamArn'] = ApiClient.convertToType(data['WorkteamArn'], 'String');
            }
            if (data.hasOwnProperty('PreHumanTaskLambdaArn')) {
                obj['PreHumanTaskLambdaArn'] = ApiClient.convertToType(data['PreHumanTaskLambdaArn'], 'String');
            }
            if (data.hasOwnProperty('AnnotationConsolidationLambdaArn')) {
                obj['AnnotationConsolidationLambdaArn'] = ApiClient.convertToType(data['AnnotationConsolidationLambdaArn'], 'String');
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('LabelingJobOutput')) {
                obj['LabelingJobOutput'] = DescribeLabelingJobResponseLabelingJobOutput.constructFromObject(data['LabelingJobOutput']);
            }
            if (data.hasOwnProperty('InputConfig')) {
                obj['InputConfig'] = LabelingJobSummaryInputConfig.constructFromObject(data['InputConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LabelingJobSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LabelingJobSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LabelingJobSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `LabelingJobName`
        if (data['LabelingJobName']) { // data not null
          String.validateJSON(data['LabelingJobName']);
        }
        // validate the optional field `LabelingJobArn`
        if (data['LabelingJobArn']) { // data not null
          String.validateJSON(data['LabelingJobArn']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `LabelingJobStatus`
        if (data['LabelingJobStatus']) { // data not null
          LabelingJobStatus.validateJSON(data['LabelingJobStatus']);
        }
        // validate the optional field `LabelCounters`
        if (data['LabelCounters']) { // data not null
          LabelingJobSummaryLabelCounters.validateJSON(data['LabelCounters']);
        }
        // validate the optional field `WorkteamArn`
        if (data['WorkteamArn']) { // data not null
          String.validateJSON(data['WorkteamArn']);
        }
        // validate the optional field `PreHumanTaskLambdaArn`
        if (data['PreHumanTaskLambdaArn']) { // data not null
          String.validateJSON(data['PreHumanTaskLambdaArn']);
        }
        // validate the optional field `AnnotationConsolidationLambdaArn`
        if (data['AnnotationConsolidationLambdaArn']) { // data not null
          String.validateJSON(data['AnnotationConsolidationLambdaArn']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `LabelingJobOutput`
        if (data['LabelingJobOutput']) { // data not null
          DescribeLabelingJobResponseLabelingJobOutput.validateJSON(data['LabelingJobOutput']);
        }
        // validate the optional field `InputConfig`
        if (data['InputConfig']) { // data not null
          LabelingJobSummaryInputConfig.validateJSON(data['InputConfig']);
        }

        return true;
    }


}

LabelingJobSummary.RequiredProperties = ["LabelingJobName", "LabelingJobArn", "CreationTime", "LastModifiedTime", "LabelingJobStatus", "LabelCounters", "WorkteamArn", "PreHumanTaskLambdaArn"];

/**
 * @member {String} LabelingJobName
 */
LabelingJobSummary.prototype['LabelingJobName'] = undefined;

/**
 * @member {String} LabelingJobArn
 */
LabelingJobSummary.prototype['LabelingJobArn'] = undefined;

/**
 * @member {Date} CreationTime
 */
LabelingJobSummary.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
LabelingJobSummary.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/LabelingJobStatus} LabelingJobStatus
 */
LabelingJobSummary.prototype['LabelingJobStatus'] = undefined;

/**
 * @member {module:model/LabelingJobSummaryLabelCounters} LabelCounters
 */
LabelingJobSummary.prototype['LabelCounters'] = undefined;

/**
 * @member {String} WorkteamArn
 */
LabelingJobSummary.prototype['WorkteamArn'] = undefined;

/**
 * @member {String} PreHumanTaskLambdaArn
 */
LabelingJobSummary.prototype['PreHumanTaskLambdaArn'] = undefined;

/**
 * @member {String} AnnotationConsolidationLambdaArn
 */
LabelingJobSummary.prototype['AnnotationConsolidationLambdaArn'] = undefined;

/**
 * @member {String} FailureReason
 */
LabelingJobSummary.prototype['FailureReason'] = undefined;

/**
 * @member {module:model/DescribeLabelingJobResponseLabelingJobOutput} LabelingJobOutput
 */
LabelingJobSummary.prototype['LabelingJobOutput'] = undefined;

/**
 * @member {module:model/LabelingJobSummaryInputConfig} InputConfig
 */
LabelingJobSummary.prototype['InputConfig'] = undefined;






export default LabelingJobSummary;

