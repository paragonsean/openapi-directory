/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrainingInstanceType from './TrainingInstanceType';

/**
 * The HyperParameterTuningInstanceConfig model module.
 * @module model/HyperParameterTuningInstanceConfig
 * @version 2017-07-24
 */
class HyperParameterTuningInstanceConfig {
    /**
     * Constructs a new <code>HyperParameterTuningInstanceConfig</code>.
     * The configuration for hyperparameter tuning resources for use in training jobs launched by the tuning job. These resources include compute instances and storage volumes. Specify one or more compute instance configurations and allocation strategies to select resources (optional).
     * @alias module:model/HyperParameterTuningInstanceConfig
     * @param instanceType {module:model/TrainingInstanceType} 
     * @param instanceCount {Number} 
     * @param volumeSizeInGB {Number} 
     */
    constructor(instanceType, instanceCount, volumeSizeInGB) { 
        
        HyperParameterTuningInstanceConfig.initialize(this, instanceType, instanceCount, volumeSizeInGB);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceType, instanceCount, volumeSizeInGB) { 
        obj['InstanceType'] = instanceType;
        obj['InstanceCount'] = instanceCount;
        obj['VolumeSizeInGB'] = volumeSizeInGB;
    }

    /**
     * Constructs a <code>HyperParameterTuningInstanceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HyperParameterTuningInstanceConfig} obj Optional instance to populate.
     * @return {module:model/HyperParameterTuningInstanceConfig} The populated <code>HyperParameterTuningInstanceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HyperParameterTuningInstanceConfig();

            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], TrainingInstanceType);
            }
            if (data.hasOwnProperty('InstanceCount')) {
                obj['InstanceCount'] = ApiClient.convertToType(data['InstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('VolumeSizeInGB')) {
                obj['VolumeSizeInGB'] = ApiClient.convertToType(data['VolumeSizeInGB'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HyperParameterTuningInstanceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HyperParameterTuningInstanceConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HyperParameterTuningInstanceConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          TrainingInstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `InstanceCount`
        if (data['InstanceCount']) { // data not null
          Number.validateJSON(data['InstanceCount']);
        }
        // validate the optional field `VolumeSizeInGB`
        if (data['VolumeSizeInGB']) { // data not null
          Number.validateJSON(data['VolumeSizeInGB']);
        }

        return true;
    }


}

HyperParameterTuningInstanceConfig.RequiredProperties = ["InstanceType", "InstanceCount", "VolumeSizeInGB"];

/**
 * @member {module:model/TrainingInstanceType} InstanceType
 */
HyperParameterTuningInstanceConfig.prototype['InstanceType'] = undefined;

/**
 * @member {Number} InstanceCount
 */
HyperParameterTuningInstanceConfig.prototype['InstanceCount'] = undefined;

/**
 * @member {Number} VolumeSizeInGB
 */
HyperParameterTuningInstanceConfig.prototype['VolumeSizeInGB'] = undefined;






export default HyperParameterTuningInstanceConfig;

