/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndpointInfo from './EndpointInfo';
import EndpointPerformanceMetrics from './EndpointPerformanceMetrics';

/**
 * The EndpointPerformance model module.
 * @module model/EndpointPerformance
 * @version 2017-07-24
 */
class EndpointPerformance {
    /**
     * Constructs a new <code>EndpointPerformance</code>.
     * The performance results from running an Inference Recommender job on an existing endpoint.
     * @alias module:model/EndpointPerformance
     * @param metrics {module:model/EndpointPerformanceMetrics} 
     * @param endpointInfo {module:model/EndpointInfo} 
     */
    constructor(metrics, endpointInfo) { 
        
        EndpointPerformance.initialize(this, metrics, endpointInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, metrics, endpointInfo) { 
        obj['Metrics'] = metrics;
        obj['EndpointInfo'] = endpointInfo;
    }

    /**
     * Constructs a <code>EndpointPerformance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EndpointPerformance} obj Optional instance to populate.
     * @return {module:model/EndpointPerformance} The populated <code>EndpointPerformance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EndpointPerformance();

            if (data.hasOwnProperty('Metrics')) {
                obj['Metrics'] = EndpointPerformanceMetrics.constructFromObject(data['Metrics']);
            }
            if (data.hasOwnProperty('EndpointInfo')) {
                obj['EndpointInfo'] = EndpointInfo.constructFromObject(data['EndpointInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EndpointPerformance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EndpointPerformance</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EndpointPerformance.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Metrics`
        if (data['Metrics']) { // data not null
          EndpointPerformanceMetrics.validateJSON(data['Metrics']);
        }
        // validate the optional field `EndpointInfo`
        if (data['EndpointInfo']) { // data not null
          EndpointInfo.validateJSON(data['EndpointInfo']);
        }

        return true;
    }


}

EndpointPerformance.RequiredProperties = ["Metrics", "EndpointInfo"];

/**
 * @member {module:model/EndpointPerformanceMetrics} Metrics
 */
EndpointPerformance.prototype['Metrics'] = undefined;

/**
 * @member {module:model/EndpointInfo} EndpointInfo
 */
EndpointPerformance.prototype['EndpointInfo'] = undefined;






export default EndpointPerformance;

