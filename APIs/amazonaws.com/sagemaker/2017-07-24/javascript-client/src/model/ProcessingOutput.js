/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProcessingOutputFeatureStoreOutput from './ProcessingOutputFeatureStoreOutput';
import ProcessingOutputS3Output from './ProcessingOutputS3Output';

/**
 * The ProcessingOutput model module.
 * @module model/ProcessingOutput
 * @version 2017-07-24
 */
class ProcessingOutput {
    /**
     * Constructs a new <code>ProcessingOutput</code>.
     * Describes the results of a processing job. The processing output must specify exactly one of either &lt;code&gt;S3Output&lt;/code&gt; or &lt;code&gt;FeatureStoreOutput&lt;/code&gt; types.
     * @alias module:model/ProcessingOutput
     * @param outputName {String} 
     */
    constructor(outputName) { 
        
        ProcessingOutput.initialize(this, outputName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, outputName) { 
        obj['OutputName'] = outputName;
    }

    /**
     * Constructs a <code>ProcessingOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcessingOutput} obj Optional instance to populate.
     * @return {module:model/ProcessingOutput} The populated <code>ProcessingOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcessingOutput();

            if (data.hasOwnProperty('OutputName')) {
                obj['OutputName'] = ApiClient.convertToType(data['OutputName'], 'String');
            }
            if (data.hasOwnProperty('S3Output')) {
                obj['S3Output'] = ProcessingOutputS3Output.constructFromObject(data['S3Output']);
            }
            if (data.hasOwnProperty('FeatureStoreOutput')) {
                obj['FeatureStoreOutput'] = ProcessingOutputFeatureStoreOutput.constructFromObject(data['FeatureStoreOutput']);
            }
            if (data.hasOwnProperty('AppManaged')) {
                obj['AppManaged'] = ApiClient.convertToType(data['AppManaged'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProcessingOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProcessingOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProcessingOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `OutputName`
        if (data['OutputName']) { // data not null
          String.validateJSON(data['OutputName']);
        }
        // validate the optional field `S3Output`
        if (data['S3Output']) { // data not null
          ProcessingOutputS3Output.validateJSON(data['S3Output']);
        }
        // validate the optional field `FeatureStoreOutput`
        if (data['FeatureStoreOutput']) { // data not null
          ProcessingOutputFeatureStoreOutput.validateJSON(data['FeatureStoreOutput']);
        }
        // validate the optional field `AppManaged`
        if (data['AppManaged']) { // data not null
          Boolean.validateJSON(data['AppManaged']);
        }

        return true;
    }


}

ProcessingOutput.RequiredProperties = ["OutputName"];

/**
 * @member {String} OutputName
 */
ProcessingOutput.prototype['OutputName'] = undefined;

/**
 * @member {module:model/ProcessingOutputS3Output} S3Output
 */
ProcessingOutput.prototype['S3Output'] = undefined;

/**
 * @member {module:model/ProcessingOutputFeatureStoreOutput} FeatureStoreOutput
 */
ProcessingOutput.prototype['FeatureStoreOutput'] = undefined;

/**
 * @member {Boolean} AppManaged
 */
ProcessingOutput.prototype['AppManaged'] = undefined;






export default ProcessingOutput;

