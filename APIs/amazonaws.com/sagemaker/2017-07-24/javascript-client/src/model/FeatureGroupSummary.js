/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeatureGroupStatus from './FeatureGroupStatus';
import FeatureGroupSummaryOfflineStoreStatus from './FeatureGroupSummaryOfflineStoreStatus';

/**
 * The FeatureGroupSummary model module.
 * @module model/FeatureGroupSummary
 * @version 2017-07-24
 */
class FeatureGroupSummary {
    /**
     * Constructs a new <code>FeatureGroupSummary</code>.
     * The name, ARN, &lt;code&gt;CreationTime&lt;/code&gt;, &lt;code&gt;FeatureGroup&lt;/code&gt; values, &lt;code&gt;LastUpdatedTime&lt;/code&gt; and &lt;code&gt;EnableOnlineStorage&lt;/code&gt; status of a &lt;code&gt;FeatureGroup&lt;/code&gt;.
     * @alias module:model/FeatureGroupSummary
     * @param featureGroupName {String} 
     * @param featureGroupArn {String} 
     * @param creationTime {Date} 
     */
    constructor(featureGroupName, featureGroupArn, creationTime) { 
        
        FeatureGroupSummary.initialize(this, featureGroupName, featureGroupArn, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, featureGroupName, featureGroupArn, creationTime) { 
        obj['FeatureGroupName'] = featureGroupName;
        obj['FeatureGroupArn'] = featureGroupArn;
        obj['CreationTime'] = creationTime;
    }

    /**
     * Constructs a <code>FeatureGroupSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeatureGroupSummary} obj Optional instance to populate.
     * @return {module:model/FeatureGroupSummary} The populated <code>FeatureGroupSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeatureGroupSummary();

            if (data.hasOwnProperty('FeatureGroupName')) {
                obj['FeatureGroupName'] = ApiClient.convertToType(data['FeatureGroupName'], 'String');
            }
            if (data.hasOwnProperty('FeatureGroupArn')) {
                obj['FeatureGroupArn'] = ApiClient.convertToType(data['FeatureGroupArn'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('FeatureGroupStatus')) {
                obj['FeatureGroupStatus'] = ApiClient.convertToType(data['FeatureGroupStatus'], FeatureGroupStatus);
            }
            if (data.hasOwnProperty('OfflineStoreStatus')) {
                obj['OfflineStoreStatus'] = FeatureGroupSummaryOfflineStoreStatus.constructFromObject(data['OfflineStoreStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeatureGroupSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeatureGroupSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FeatureGroupSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FeatureGroupName`
        if (data['FeatureGroupName']) { // data not null
          String.validateJSON(data['FeatureGroupName']);
        }
        // validate the optional field `FeatureGroupArn`
        if (data['FeatureGroupArn']) { // data not null
          String.validateJSON(data['FeatureGroupArn']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `FeatureGroupStatus`
        if (data['FeatureGroupStatus']) { // data not null
          FeatureGroupStatus.validateJSON(data['FeatureGroupStatus']);
        }
        // validate the optional field `OfflineStoreStatus`
        if (data['OfflineStoreStatus']) { // data not null
          FeatureGroupSummaryOfflineStoreStatus.validateJSON(data['OfflineStoreStatus']);
        }

        return true;
    }


}

FeatureGroupSummary.RequiredProperties = ["FeatureGroupName", "FeatureGroupArn", "CreationTime"];

/**
 * @member {String} FeatureGroupName
 */
FeatureGroupSummary.prototype['FeatureGroupName'] = undefined;

/**
 * @member {String} FeatureGroupArn
 */
FeatureGroupSummary.prototype['FeatureGroupArn'] = undefined;

/**
 * @member {Date} CreationTime
 */
FeatureGroupSummary.prototype['CreationTime'] = undefined;

/**
 * @member {module:model/FeatureGroupStatus} FeatureGroupStatus
 */
FeatureGroupSummary.prototype['FeatureGroupStatus'] = undefined;

/**
 * @member {module:model/FeatureGroupSummaryOfflineStoreStatus} OfflineStoreStatus
 */
FeatureGroupSummary.prototype['OfflineStoreStatus'] = undefined;






export default FeatureGroupSummary;

