/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribePipelineExecutionResponseSelectiveExecutionConfig;
import org.openapitools.client.model.PipelineExecutionParallelismConfiguration;
import org.openapitools.client.model.PipelineExecutionStatus;
import org.openapitools.client.model.PipelineExperimentConfig;
import org.openapitools.client.model.UserContext;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PipelineExecution
 */
public class PipelineExecutionTest {
    private final PipelineExecution model = new PipelineExecution();

    /**
     * Model tests for PipelineExecution
     */
    @Test
    public void testPipelineExecution() {
        // TODO: test PipelineExecution
    }

    /**
     * Test the property 'pipelineArn'
     */
    @Test
    public void pipelineArnTest() {
        // TODO: test pipelineArn
    }

    /**
     * Test the property 'pipelineExecutionArn'
     */
    @Test
    public void pipelineExecutionArnTest() {
        // TODO: test pipelineExecutionArn
    }

    /**
     * Test the property 'pipelineExecutionDisplayName'
     */
    @Test
    public void pipelineExecutionDisplayNameTest() {
        // TODO: test pipelineExecutionDisplayName
    }

    /**
     * Test the property 'pipelineExecutionStatus'
     */
    @Test
    public void pipelineExecutionStatusTest() {
        // TODO: test pipelineExecutionStatus
    }

    /**
     * Test the property 'pipelineExecutionDescription'
     */
    @Test
    public void pipelineExecutionDescriptionTest() {
        // TODO: test pipelineExecutionDescription
    }

    /**
     * Test the property 'pipelineExperimentConfig'
     */
    @Test
    public void pipelineExperimentConfigTest() {
        // TODO: test pipelineExperimentConfig
    }

    /**
     * Test the property 'failureReason'
     */
    @Test
    public void failureReasonTest() {
        // TODO: test failureReason
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'lastModifiedTime'
     */
    @Test
    public void lastModifiedTimeTest() {
        // TODO: test lastModifiedTime
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'lastModifiedBy'
     */
    @Test
    public void lastModifiedByTest() {
        // TODO: test lastModifiedBy
    }

    /**
     * Test the property 'parallelismConfiguration'
     */
    @Test
    public void parallelismConfigurationTest() {
        // TODO: test parallelismConfiguration
    }

    /**
     * Test the property 'pipelineParameters'
     */
    @Test
    public void pipelineParametersTest() {
        // TODO: test pipelineParameters
    }

    /**
     * Test the property 'selectiveExecutionConfig'
     */
    @Test
    public void selectiveExecutionConfigTest() {
        // TODO: test selectiveExecutionConfig
    }

}
