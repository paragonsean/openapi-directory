/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeInferenceRecommendationsJobResponseInputConfig;
import org.openapitools.client.model.DescribeInferenceRecommendationsJobResponseStoppingConditions;
import org.openapitools.client.model.RecommendationJobStatus;
import org.openapitools.client.model.RecommendationJobType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeInferenceRecommendationsJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeInferenceRecommendationsJobResponse {
  public static final String SERIALIZED_NAME_JOB_NAME = "JobName";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private String jobName;

  public static final String SERIALIZED_NAME_JOB_DESCRIPTION = "JobDescription";
  @SerializedName(SERIALIZED_NAME_JOB_DESCRIPTION)
  private String jobDescription;

  public static final String SERIALIZED_NAME_JOB_TYPE = "JobType";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE)
  private RecommendationJobType jobType;

  public static final String SERIALIZED_NAME_JOB_ARN = "JobArn";
  @SerializedName(SERIALIZED_NAME_JOB_ARN)
  private String jobArn;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RecommendationJobStatus status;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_COMPLETION_TIME = "CompletionTime";
  @SerializedName(SERIALIZED_NAME_COMPLETION_TIME)
  private OffsetDateTime completionTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "InputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private DescribeInferenceRecommendationsJobResponseInputConfig inputConfig;

  public static final String SERIALIZED_NAME_STOPPING_CONDITIONS = "StoppingConditions";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITIONS)
  private DescribeInferenceRecommendationsJobResponseStoppingConditions stoppingConditions;

  public static final String SERIALIZED_NAME_INFERENCE_RECOMMENDATIONS = "InferenceRecommendations";
  @SerializedName(SERIALIZED_NAME_INFERENCE_RECOMMENDATIONS)
  private List inferenceRecommendations;

  public static final String SERIALIZED_NAME_ENDPOINT_PERFORMANCES = "EndpointPerformances";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_PERFORMANCES)
  private List endpointPerformances;

  public DescribeInferenceRecommendationsJobResponse() {
  }

  public DescribeInferenceRecommendationsJobResponse jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

  /**
   * Get jobName
   * @return jobName
   */
  @javax.annotation.Nonnull
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }


  public DescribeInferenceRecommendationsJobResponse jobDescription(String jobDescription) {
    this.jobDescription = jobDescription;
    return this;
  }

  /**
   * Get jobDescription
   * @return jobDescription
   */
  @javax.annotation.Nullable
  public String getJobDescription() {
    return jobDescription;
  }

  public void setJobDescription(String jobDescription) {
    this.jobDescription = jobDescription;
  }


  public DescribeInferenceRecommendationsJobResponse jobType(RecommendationJobType jobType) {
    this.jobType = jobType;
    return this;
  }

  /**
   * Get jobType
   * @return jobType
   */
  @javax.annotation.Nonnull
  public RecommendationJobType getJobType() {
    return jobType;
  }

  public void setJobType(RecommendationJobType jobType) {
    this.jobType = jobType;
  }


  public DescribeInferenceRecommendationsJobResponse jobArn(String jobArn) {
    this.jobArn = jobArn;
    return this;
  }

  /**
   * Get jobArn
   * @return jobArn
   */
  @javax.annotation.Nonnull
  public String getJobArn() {
    return jobArn;
  }

  public void setJobArn(String jobArn) {
    this.jobArn = jobArn;
  }


  public DescribeInferenceRecommendationsJobResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeInferenceRecommendationsJobResponse status(RecommendationJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public RecommendationJobStatus getStatus() {
    return status;
  }

  public void setStatus(RecommendationJobStatus status) {
    this.status = status;
  }


  public DescribeInferenceRecommendationsJobResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeInferenceRecommendationsJobResponse completionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
    return this;
  }

  /**
   * Get completionTime
   * @return completionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public void setCompletionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
  }


  public DescribeInferenceRecommendationsJobResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeInferenceRecommendationsJobResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeInferenceRecommendationsJobResponse inputConfig(DescribeInferenceRecommendationsJobResponseInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nonnull
  public DescribeInferenceRecommendationsJobResponseInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(DescribeInferenceRecommendationsJobResponseInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public DescribeInferenceRecommendationsJobResponse stoppingConditions(DescribeInferenceRecommendationsJobResponseStoppingConditions stoppingConditions) {
    this.stoppingConditions = stoppingConditions;
    return this;
  }

  /**
   * Get stoppingConditions
   * @return stoppingConditions
   */
  @javax.annotation.Nullable
  public DescribeInferenceRecommendationsJobResponseStoppingConditions getStoppingConditions() {
    return stoppingConditions;
  }

  public void setStoppingConditions(DescribeInferenceRecommendationsJobResponseStoppingConditions stoppingConditions) {
    this.stoppingConditions = stoppingConditions;
  }


  public DescribeInferenceRecommendationsJobResponse inferenceRecommendations(List inferenceRecommendations) {
    this.inferenceRecommendations = inferenceRecommendations;
    return this;
  }

  /**
   * Get inferenceRecommendations
   * @return inferenceRecommendations
   */
  @javax.annotation.Nullable
  public List getInferenceRecommendations() {
    return inferenceRecommendations;
  }

  public void setInferenceRecommendations(List inferenceRecommendations) {
    this.inferenceRecommendations = inferenceRecommendations;
  }


  public DescribeInferenceRecommendationsJobResponse endpointPerformances(List endpointPerformances) {
    this.endpointPerformances = endpointPerformances;
    return this;
  }

  /**
   * Get endpointPerformances
   * @return endpointPerformances
   */
  @javax.annotation.Nullable
  public List getEndpointPerformances() {
    return endpointPerformances;
  }

  public void setEndpointPerformances(List endpointPerformances) {
    this.endpointPerformances = endpointPerformances;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeInferenceRecommendationsJobResponse describeInferenceRecommendationsJobResponse = (DescribeInferenceRecommendationsJobResponse) o;
    return Objects.equals(this.jobName, describeInferenceRecommendationsJobResponse.jobName) &&
        Objects.equals(this.jobDescription, describeInferenceRecommendationsJobResponse.jobDescription) &&
        Objects.equals(this.jobType, describeInferenceRecommendationsJobResponse.jobType) &&
        Objects.equals(this.jobArn, describeInferenceRecommendationsJobResponse.jobArn) &&
        Objects.equals(this.roleArn, describeInferenceRecommendationsJobResponse.roleArn) &&
        Objects.equals(this.status, describeInferenceRecommendationsJobResponse.status) &&
        Objects.equals(this.creationTime, describeInferenceRecommendationsJobResponse.creationTime) &&
        Objects.equals(this.completionTime, describeInferenceRecommendationsJobResponse.completionTime) &&
        Objects.equals(this.lastModifiedTime, describeInferenceRecommendationsJobResponse.lastModifiedTime) &&
        Objects.equals(this.failureReason, describeInferenceRecommendationsJobResponse.failureReason) &&
        Objects.equals(this.inputConfig, describeInferenceRecommendationsJobResponse.inputConfig) &&
        Objects.equals(this.stoppingConditions, describeInferenceRecommendationsJobResponse.stoppingConditions) &&
        Objects.equals(this.inferenceRecommendations, describeInferenceRecommendationsJobResponse.inferenceRecommendations) &&
        Objects.equals(this.endpointPerformances, describeInferenceRecommendationsJobResponse.endpointPerformances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobName, jobDescription, jobType, jobArn, roleArn, status, creationTime, completionTime, lastModifiedTime, failureReason, inputConfig, stoppingConditions, inferenceRecommendations, endpointPerformances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeInferenceRecommendationsJobResponse {\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    jobDescription: ").append(toIndentedString(jobDescription)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    jobArn: ").append(toIndentedString(jobArn)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    stoppingConditions: ").append(toIndentedString(stoppingConditions)).append("\n");
    sb.append("    inferenceRecommendations: ").append(toIndentedString(inferenceRecommendations)).append("\n");
    sb.append("    endpointPerformances: ").append(toIndentedString(endpointPerformances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JobName");
    openapiFields.add("JobDescription");
    openapiFields.add("JobType");
    openapiFields.add("JobArn");
    openapiFields.add("RoleArn");
    openapiFields.add("Status");
    openapiFields.add("CreationTime");
    openapiFields.add("CompletionTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("FailureReason");
    openapiFields.add("InputConfig");
    openapiFields.add("StoppingConditions");
    openapiFields.add("InferenceRecommendations");
    openapiFields.add("EndpointPerformances");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("JobName");
    openapiRequiredFields.add("JobType");
    openapiRequiredFields.add("JobArn");
    openapiRequiredFields.add("RoleArn");
    openapiRequiredFields.add("Status");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("LastModifiedTime");
    openapiRequiredFields.add("InputConfig");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeInferenceRecommendationsJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeInferenceRecommendationsJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeInferenceRecommendationsJobResponse is not found in the empty JSON string", DescribeInferenceRecommendationsJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeInferenceRecommendationsJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeInferenceRecommendationsJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeInferenceRecommendationsJobResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `JobName`
      String.validateJsonElement(jsonObj.get("JobName"));
      // validate the optional field `JobDescription`
      if (jsonObj.get("JobDescription") != null && !jsonObj.get("JobDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JobDescription"));
      }
      // validate the required field `JobType`
      RecommendationJobType.validateJsonElement(jsonObj.get("JobType"));
      // validate the required field `JobArn`
      String.validateJsonElement(jsonObj.get("JobArn"));
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the required field `Status`
      RecommendationJobStatus.validateJsonElement(jsonObj.get("Status"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `CompletionTime`
      if (jsonObj.get("CompletionTime") != null && !jsonObj.get("CompletionTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletionTime"));
      }
      // validate the required field `LastModifiedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the required field `InputConfig`
      DescribeInferenceRecommendationsJobResponseInputConfig.validateJsonElement(jsonObj.get("InputConfig"));
      // validate the optional field `StoppingConditions`
      if (jsonObj.get("StoppingConditions") != null && !jsonObj.get("StoppingConditions").isJsonNull()) {
        DescribeInferenceRecommendationsJobResponseStoppingConditions.validateJsonElement(jsonObj.get("StoppingConditions"));
      }
      // validate the optional field `InferenceRecommendations`
      if (jsonObj.get("InferenceRecommendations") != null && !jsonObj.get("InferenceRecommendations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InferenceRecommendations"));
      }
      // validate the optional field `EndpointPerformances`
      if (jsonObj.get("EndpointPerformances") != null && !jsonObj.get("EndpointPerformances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EndpointPerformances"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeInferenceRecommendationsJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeInferenceRecommendationsJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeInferenceRecommendationsJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeInferenceRecommendationsJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeInferenceRecommendationsJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeInferenceRecommendationsJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeInferenceRecommendationsJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeInferenceRecommendationsJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeInferenceRecommendationsJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeInferenceRecommendationsJobResponse
   */
  public static DescribeInferenceRecommendationsJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeInferenceRecommendationsJobResponse.class);
  }

  /**
   * Convert an instance of DescribeInferenceRecommendationsJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

