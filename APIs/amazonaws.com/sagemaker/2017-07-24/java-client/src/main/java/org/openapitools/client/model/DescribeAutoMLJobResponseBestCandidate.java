/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AutoMLCandidateCandidateProperties;
import org.openapitools.client.model.CandidateStatus;
import org.openapitools.client.model.FinalAutoMLJobObjectiveMetric;
import org.openapitools.client.model.ObjectiveStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAutoMLJobResponseBestCandidate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAutoMLJobResponseBestCandidate {
  public static final String SERIALIZED_NAME_CANDIDATE_NAME = "CandidateName";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_NAME)
  private String candidateName;

  public static final String SERIALIZED_NAME_FINAL_AUTO_M_L_JOB_OBJECTIVE_METRIC = "FinalAutoMLJobObjectiveMetric";
  @SerializedName(SERIALIZED_NAME_FINAL_AUTO_M_L_JOB_OBJECTIVE_METRIC)
  private FinalAutoMLJobObjectiveMetric finalAutoMLJobObjectiveMetric;

  public static final String SERIALIZED_NAME_OBJECTIVE_STATUS = "ObjectiveStatus";
  @SerializedName(SERIALIZED_NAME_OBJECTIVE_STATUS)
  private ObjectiveStatus objectiveStatus;

  public static final String SERIALIZED_NAME_CANDIDATE_STEPS = "CandidateSteps";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_STEPS)
  private List candidateSteps;

  public static final String SERIALIZED_NAME_CANDIDATE_STATUS = "CandidateStatus";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_STATUS)
  private CandidateStatus candidateStatus;

  public static final String SERIALIZED_NAME_INFERENCE_CONTAINERS = "InferenceContainers";
  @SerializedName(SERIALIZED_NAME_INFERENCE_CONTAINERS)
  private List inferenceContainers;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_CANDIDATE_PROPERTIES = "CandidateProperties";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_PROPERTIES)
  private AutoMLCandidateCandidateProperties candidateProperties;

  public static final String SERIALIZED_NAME_INFERENCE_CONTAINER_DEFINITIONS = "InferenceContainerDefinitions";
  @SerializedName(SERIALIZED_NAME_INFERENCE_CONTAINER_DEFINITIONS)
  private Map inferenceContainerDefinitions;

  public DescribeAutoMLJobResponseBestCandidate() {
  }

  public DescribeAutoMLJobResponseBestCandidate candidateName(String candidateName) {
    this.candidateName = candidateName;
    return this;
  }

  /**
   * Get candidateName
   * @return candidateName
   */
  @javax.annotation.Nonnull
  public String getCandidateName() {
    return candidateName;
  }

  public void setCandidateName(String candidateName) {
    this.candidateName = candidateName;
  }


  public DescribeAutoMLJobResponseBestCandidate finalAutoMLJobObjectiveMetric(FinalAutoMLJobObjectiveMetric finalAutoMLJobObjectiveMetric) {
    this.finalAutoMLJobObjectiveMetric = finalAutoMLJobObjectiveMetric;
    return this;
  }

  /**
   * Get finalAutoMLJobObjectiveMetric
   * @return finalAutoMLJobObjectiveMetric
   */
  @javax.annotation.Nullable
  public FinalAutoMLJobObjectiveMetric getFinalAutoMLJobObjectiveMetric() {
    return finalAutoMLJobObjectiveMetric;
  }

  public void setFinalAutoMLJobObjectiveMetric(FinalAutoMLJobObjectiveMetric finalAutoMLJobObjectiveMetric) {
    this.finalAutoMLJobObjectiveMetric = finalAutoMLJobObjectiveMetric;
  }


  public DescribeAutoMLJobResponseBestCandidate objectiveStatus(ObjectiveStatus objectiveStatus) {
    this.objectiveStatus = objectiveStatus;
    return this;
  }

  /**
   * Get objectiveStatus
   * @return objectiveStatus
   */
  @javax.annotation.Nonnull
  public ObjectiveStatus getObjectiveStatus() {
    return objectiveStatus;
  }

  public void setObjectiveStatus(ObjectiveStatus objectiveStatus) {
    this.objectiveStatus = objectiveStatus;
  }


  public DescribeAutoMLJobResponseBestCandidate candidateSteps(List candidateSteps) {
    this.candidateSteps = candidateSteps;
    return this;
  }

  /**
   * Get candidateSteps
   * @return candidateSteps
   */
  @javax.annotation.Nonnull
  public List getCandidateSteps() {
    return candidateSteps;
  }

  public void setCandidateSteps(List candidateSteps) {
    this.candidateSteps = candidateSteps;
  }


  public DescribeAutoMLJobResponseBestCandidate candidateStatus(CandidateStatus candidateStatus) {
    this.candidateStatus = candidateStatus;
    return this;
  }

  /**
   * Get candidateStatus
   * @return candidateStatus
   */
  @javax.annotation.Nonnull
  public CandidateStatus getCandidateStatus() {
    return candidateStatus;
  }

  public void setCandidateStatus(CandidateStatus candidateStatus) {
    this.candidateStatus = candidateStatus;
  }


  public DescribeAutoMLJobResponseBestCandidate inferenceContainers(List inferenceContainers) {
    this.inferenceContainers = inferenceContainers;
    return this;
  }

  /**
   * Get inferenceContainers
   * @return inferenceContainers
   */
  @javax.annotation.Nullable
  public List getInferenceContainers() {
    return inferenceContainers;
  }

  public void setInferenceContainers(List inferenceContainers) {
    this.inferenceContainers = inferenceContainers;
  }


  public DescribeAutoMLJobResponseBestCandidate creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeAutoMLJobResponseBestCandidate endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public DescribeAutoMLJobResponseBestCandidate lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeAutoMLJobResponseBestCandidate failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeAutoMLJobResponseBestCandidate candidateProperties(AutoMLCandidateCandidateProperties candidateProperties) {
    this.candidateProperties = candidateProperties;
    return this;
  }

  /**
   * Get candidateProperties
   * @return candidateProperties
   */
  @javax.annotation.Nullable
  public AutoMLCandidateCandidateProperties getCandidateProperties() {
    return candidateProperties;
  }

  public void setCandidateProperties(AutoMLCandidateCandidateProperties candidateProperties) {
    this.candidateProperties = candidateProperties;
  }


  public DescribeAutoMLJobResponseBestCandidate inferenceContainerDefinitions(Map inferenceContainerDefinitions) {
    this.inferenceContainerDefinitions = inferenceContainerDefinitions;
    return this;
  }

  /**
   * Get inferenceContainerDefinitions
   * @return inferenceContainerDefinitions
   */
  @javax.annotation.Nullable
  public Map getInferenceContainerDefinitions() {
    return inferenceContainerDefinitions;
  }

  public void setInferenceContainerDefinitions(Map inferenceContainerDefinitions) {
    this.inferenceContainerDefinitions = inferenceContainerDefinitions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAutoMLJobResponseBestCandidate describeAutoMLJobResponseBestCandidate = (DescribeAutoMLJobResponseBestCandidate) o;
    return Objects.equals(this.candidateName, describeAutoMLJobResponseBestCandidate.candidateName) &&
        Objects.equals(this.finalAutoMLJobObjectiveMetric, describeAutoMLJobResponseBestCandidate.finalAutoMLJobObjectiveMetric) &&
        Objects.equals(this.objectiveStatus, describeAutoMLJobResponseBestCandidate.objectiveStatus) &&
        Objects.equals(this.candidateSteps, describeAutoMLJobResponseBestCandidate.candidateSteps) &&
        Objects.equals(this.candidateStatus, describeAutoMLJobResponseBestCandidate.candidateStatus) &&
        Objects.equals(this.inferenceContainers, describeAutoMLJobResponseBestCandidate.inferenceContainers) &&
        Objects.equals(this.creationTime, describeAutoMLJobResponseBestCandidate.creationTime) &&
        Objects.equals(this.endTime, describeAutoMLJobResponseBestCandidate.endTime) &&
        Objects.equals(this.lastModifiedTime, describeAutoMLJobResponseBestCandidate.lastModifiedTime) &&
        Objects.equals(this.failureReason, describeAutoMLJobResponseBestCandidate.failureReason) &&
        Objects.equals(this.candidateProperties, describeAutoMLJobResponseBestCandidate.candidateProperties) &&
        Objects.equals(this.inferenceContainerDefinitions, describeAutoMLJobResponseBestCandidate.inferenceContainerDefinitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candidateName, finalAutoMLJobObjectiveMetric, objectiveStatus, candidateSteps, candidateStatus, inferenceContainers, creationTime, endTime, lastModifiedTime, failureReason, candidateProperties, inferenceContainerDefinitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAutoMLJobResponseBestCandidate {\n");
    sb.append("    candidateName: ").append(toIndentedString(candidateName)).append("\n");
    sb.append("    finalAutoMLJobObjectiveMetric: ").append(toIndentedString(finalAutoMLJobObjectiveMetric)).append("\n");
    sb.append("    objectiveStatus: ").append(toIndentedString(objectiveStatus)).append("\n");
    sb.append("    candidateSteps: ").append(toIndentedString(candidateSteps)).append("\n");
    sb.append("    candidateStatus: ").append(toIndentedString(candidateStatus)).append("\n");
    sb.append("    inferenceContainers: ").append(toIndentedString(inferenceContainers)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    candidateProperties: ").append(toIndentedString(candidateProperties)).append("\n");
    sb.append("    inferenceContainerDefinitions: ").append(toIndentedString(inferenceContainerDefinitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CandidateName");
    openapiFields.add("FinalAutoMLJobObjectiveMetric");
    openapiFields.add("ObjectiveStatus");
    openapiFields.add("CandidateSteps");
    openapiFields.add("CandidateStatus");
    openapiFields.add("InferenceContainers");
    openapiFields.add("CreationTime");
    openapiFields.add("EndTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("FailureReason");
    openapiFields.add("CandidateProperties");
    openapiFields.add("InferenceContainerDefinitions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CandidateName");
    openapiRequiredFields.add("ObjectiveStatus");
    openapiRequiredFields.add("CandidateSteps");
    openapiRequiredFields.add("CandidateStatus");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("LastModifiedTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAutoMLJobResponseBestCandidate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAutoMLJobResponseBestCandidate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAutoMLJobResponseBestCandidate is not found in the empty JSON string", DescribeAutoMLJobResponseBestCandidate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAutoMLJobResponseBestCandidate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAutoMLJobResponseBestCandidate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAutoMLJobResponseBestCandidate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CandidateName`
      String.validateJsonElement(jsonObj.get("CandidateName"));
      // validate the optional field `FinalAutoMLJobObjectiveMetric`
      if (jsonObj.get("FinalAutoMLJobObjectiveMetric") != null && !jsonObj.get("FinalAutoMLJobObjectiveMetric").isJsonNull()) {
        FinalAutoMLJobObjectiveMetric.validateJsonElement(jsonObj.get("FinalAutoMLJobObjectiveMetric"));
      }
      // validate the required field `ObjectiveStatus`
      ObjectiveStatus.validateJsonElement(jsonObj.get("ObjectiveStatus"));
      // validate the required field `CandidateSteps`
      List.validateJsonElement(jsonObj.get("CandidateSteps"));
      // validate the required field `CandidateStatus`
      CandidateStatus.validateJsonElement(jsonObj.get("CandidateStatus"));
      // validate the optional field `InferenceContainers`
      if (jsonObj.get("InferenceContainers") != null && !jsonObj.get("InferenceContainers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InferenceContainers"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the required field `LastModifiedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `CandidateProperties`
      if (jsonObj.get("CandidateProperties") != null && !jsonObj.get("CandidateProperties").isJsonNull()) {
        AutoMLCandidateCandidateProperties.validateJsonElement(jsonObj.get("CandidateProperties"));
      }
      // validate the optional field `InferenceContainerDefinitions`
      if (jsonObj.get("InferenceContainerDefinitions") != null && !jsonObj.get("InferenceContainerDefinitions").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("InferenceContainerDefinitions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAutoMLJobResponseBestCandidate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAutoMLJobResponseBestCandidate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAutoMLJobResponseBestCandidate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAutoMLJobResponseBestCandidate.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAutoMLJobResponseBestCandidate>() {
           @Override
           public void write(JsonWriter out, DescribeAutoMLJobResponseBestCandidate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAutoMLJobResponseBestCandidate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAutoMLJobResponseBestCandidate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAutoMLJobResponseBestCandidate
   * @throws IOException if the JSON string is invalid with respect to DescribeAutoMLJobResponseBestCandidate
   */
  public static DescribeAutoMLJobResponseBestCandidate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAutoMLJobResponseBestCandidate.class);
  }

  /**
   * Convert an instance of DescribeAutoMLJobResponseBestCandidate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

