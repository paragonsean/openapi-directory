/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.TrainingInputMode;
import org.openapitools.client.model.TrainingJobDefinitionOutputDataConfig;
import org.openapitools.client.model.TrainingJobDefinitionResourceConfig;
import org.openapitools.client.model.TrainingJobDefinitionStoppingCondition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AlgorithmValidationProfileTrainingJobDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AlgorithmValidationProfileTrainingJobDefinition {
  public static final String SERIALIZED_NAME_TRAINING_INPUT_MODE = "TrainingInputMode";
  @SerializedName(SERIALIZED_NAME_TRAINING_INPUT_MODE)
  private TrainingInputMode trainingInputMode;

  public static final String SERIALIZED_NAME_HYPER_PARAMETERS = "HyperParameters";
  @SerializedName(SERIALIZED_NAME_HYPER_PARAMETERS)
  private Map hyperParameters;

  public static final String SERIALIZED_NAME_INPUT_DATA_CONFIG = "InputDataConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_CONFIG)
  private List inputDataConfig;

  public static final String SERIALIZED_NAME_OUTPUT_DATA_CONFIG = "OutputDataConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_DATA_CONFIG)
  private TrainingJobDefinitionOutputDataConfig outputDataConfig;

  public static final String SERIALIZED_NAME_RESOURCE_CONFIG = "ResourceConfig";
  @SerializedName(SERIALIZED_NAME_RESOURCE_CONFIG)
  private TrainingJobDefinitionResourceConfig resourceConfig;

  public static final String SERIALIZED_NAME_STOPPING_CONDITION = "StoppingCondition";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITION)
  private TrainingJobDefinitionStoppingCondition stoppingCondition;

  public AlgorithmValidationProfileTrainingJobDefinition() {
  }

  public AlgorithmValidationProfileTrainingJobDefinition trainingInputMode(TrainingInputMode trainingInputMode) {
    this.trainingInputMode = trainingInputMode;
    return this;
  }

  /**
   * Get trainingInputMode
   * @return trainingInputMode
   */
  @javax.annotation.Nonnull
  public TrainingInputMode getTrainingInputMode() {
    return trainingInputMode;
  }

  public void setTrainingInputMode(TrainingInputMode trainingInputMode) {
    this.trainingInputMode = trainingInputMode;
  }


  public AlgorithmValidationProfileTrainingJobDefinition hyperParameters(Map hyperParameters) {
    this.hyperParameters = hyperParameters;
    return this;
  }

  /**
   * Get hyperParameters
   * @return hyperParameters
   */
  @javax.annotation.Nullable
  public Map getHyperParameters() {
    return hyperParameters;
  }

  public void setHyperParameters(Map hyperParameters) {
    this.hyperParameters = hyperParameters;
  }


  public AlgorithmValidationProfileTrainingJobDefinition inputDataConfig(List inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
    return this;
  }

  /**
   * Get inputDataConfig
   * @return inputDataConfig
   */
  @javax.annotation.Nonnull
  public List getInputDataConfig() {
    return inputDataConfig;
  }

  public void setInputDataConfig(List inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
  }


  public AlgorithmValidationProfileTrainingJobDefinition outputDataConfig(TrainingJobDefinitionOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
    return this;
  }

  /**
   * Get outputDataConfig
   * @return outputDataConfig
   */
  @javax.annotation.Nonnull
  public TrainingJobDefinitionOutputDataConfig getOutputDataConfig() {
    return outputDataConfig;
  }

  public void setOutputDataConfig(TrainingJobDefinitionOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
  }


  public AlgorithmValidationProfileTrainingJobDefinition resourceConfig(TrainingJobDefinitionResourceConfig resourceConfig) {
    this.resourceConfig = resourceConfig;
    return this;
  }

  /**
   * Get resourceConfig
   * @return resourceConfig
   */
  @javax.annotation.Nonnull
  public TrainingJobDefinitionResourceConfig getResourceConfig() {
    return resourceConfig;
  }

  public void setResourceConfig(TrainingJobDefinitionResourceConfig resourceConfig) {
    this.resourceConfig = resourceConfig;
  }


  public AlgorithmValidationProfileTrainingJobDefinition stoppingCondition(TrainingJobDefinitionStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
    return this;
  }

  /**
   * Get stoppingCondition
   * @return stoppingCondition
   */
  @javax.annotation.Nonnull
  public TrainingJobDefinitionStoppingCondition getStoppingCondition() {
    return stoppingCondition;
  }

  public void setStoppingCondition(TrainingJobDefinitionStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlgorithmValidationProfileTrainingJobDefinition algorithmValidationProfileTrainingJobDefinition = (AlgorithmValidationProfileTrainingJobDefinition) o;
    return Objects.equals(this.trainingInputMode, algorithmValidationProfileTrainingJobDefinition.trainingInputMode) &&
        Objects.equals(this.hyperParameters, algorithmValidationProfileTrainingJobDefinition.hyperParameters) &&
        Objects.equals(this.inputDataConfig, algorithmValidationProfileTrainingJobDefinition.inputDataConfig) &&
        Objects.equals(this.outputDataConfig, algorithmValidationProfileTrainingJobDefinition.outputDataConfig) &&
        Objects.equals(this.resourceConfig, algorithmValidationProfileTrainingJobDefinition.resourceConfig) &&
        Objects.equals(this.stoppingCondition, algorithmValidationProfileTrainingJobDefinition.stoppingCondition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainingInputMode, hyperParameters, inputDataConfig, outputDataConfig, resourceConfig, stoppingCondition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlgorithmValidationProfileTrainingJobDefinition {\n");
    sb.append("    trainingInputMode: ").append(toIndentedString(trainingInputMode)).append("\n");
    sb.append("    hyperParameters: ").append(toIndentedString(hyperParameters)).append("\n");
    sb.append("    inputDataConfig: ").append(toIndentedString(inputDataConfig)).append("\n");
    sb.append("    outputDataConfig: ").append(toIndentedString(outputDataConfig)).append("\n");
    sb.append("    resourceConfig: ").append(toIndentedString(resourceConfig)).append("\n");
    sb.append("    stoppingCondition: ").append(toIndentedString(stoppingCondition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrainingInputMode");
    openapiFields.add("HyperParameters");
    openapiFields.add("InputDataConfig");
    openapiFields.add("OutputDataConfig");
    openapiFields.add("ResourceConfig");
    openapiFields.add("StoppingCondition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TrainingInputMode");
    openapiRequiredFields.add("InputDataConfig");
    openapiRequiredFields.add("OutputDataConfig");
    openapiRequiredFields.add("ResourceConfig");
    openapiRequiredFields.add("StoppingCondition");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlgorithmValidationProfileTrainingJobDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlgorithmValidationProfileTrainingJobDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlgorithmValidationProfileTrainingJobDefinition is not found in the empty JSON string", AlgorithmValidationProfileTrainingJobDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlgorithmValidationProfileTrainingJobDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlgorithmValidationProfileTrainingJobDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AlgorithmValidationProfileTrainingJobDefinition.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `TrainingInputMode`
      TrainingInputMode.validateJsonElement(jsonObj.get("TrainingInputMode"));
      // validate the optional field `HyperParameters`
      if (jsonObj.get("HyperParameters") != null && !jsonObj.get("HyperParameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("HyperParameters"));
      }
      // validate the required field `InputDataConfig`
      List.validateJsonElement(jsonObj.get("InputDataConfig"));
      // validate the required field `OutputDataConfig`
      TrainingJobDefinitionOutputDataConfig.validateJsonElement(jsonObj.get("OutputDataConfig"));
      // validate the required field `ResourceConfig`
      TrainingJobDefinitionResourceConfig.validateJsonElement(jsonObj.get("ResourceConfig"));
      // validate the required field `StoppingCondition`
      TrainingJobDefinitionStoppingCondition.validateJsonElement(jsonObj.get("StoppingCondition"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlgorithmValidationProfileTrainingJobDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlgorithmValidationProfileTrainingJobDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlgorithmValidationProfileTrainingJobDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlgorithmValidationProfileTrainingJobDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<AlgorithmValidationProfileTrainingJobDefinition>() {
           @Override
           public void write(JsonWriter out, AlgorithmValidationProfileTrainingJobDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlgorithmValidationProfileTrainingJobDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlgorithmValidationProfileTrainingJobDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlgorithmValidationProfileTrainingJobDefinition
   * @throws IOException if the JSON string is invalid with respect to AlgorithmValidationProfileTrainingJobDefinition
   */
  public static AlgorithmValidationProfileTrainingJobDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlgorithmValidationProfileTrainingJobDefinition.class);
  }

  /**
   * Convert an instance of AlgorithmValidationProfileTrainingJobDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

