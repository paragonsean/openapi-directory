/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateNotebookInstanceInputInstanceMetadataServiceConfiguration;
import org.openapitools.client.model.DirectInternetAccess;
import org.openapitools.client.model.InstanceType;
import org.openapitools.client.model.NotebookInstanceStatus;
import org.openapitools.client.model.RootAccess;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeNotebookInstanceOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeNotebookInstanceOutput {
  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_ARN = "NotebookInstanceArn";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_ARN)
  private String notebookInstanceArn;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_NAME = "NotebookInstanceName";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_NAME)
  private String notebookInstanceName;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_STATUS = "NotebookInstanceStatus";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_STATUS)
  private NotebookInstanceStatus notebookInstanceStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_URL = "Url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private InstanceType instanceType;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_NETWORK_INTERFACE_ID = "NetworkInterfaceId";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACE_ID)
  private String networkInterfaceId;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_LIFECYCLE_CONFIG_NAME = "NotebookInstanceLifecycleConfigName";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_LIFECYCLE_CONFIG_NAME)
  private String notebookInstanceLifecycleConfigName;

  public static final String SERIALIZED_NAME_DIRECT_INTERNET_ACCESS = "DirectInternetAccess";
  @SerializedName(SERIALIZED_NAME_DIRECT_INTERNET_ACCESS)
  private DirectInternetAccess directInternetAccess;

  public static final String SERIALIZED_NAME_VOLUME_SIZE_IN_G_B = "VolumeSizeInGB";
  @SerializedName(SERIALIZED_NAME_VOLUME_SIZE_IN_G_B)
  private Integer volumeSizeInGB;

  public static final String SERIALIZED_NAME_ACCELERATOR_TYPES = "AcceleratorTypes";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_TYPES)
  private List acceleratorTypes;

  public static final String SERIALIZED_NAME_DEFAULT_CODE_REPOSITORY = "DefaultCodeRepository";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CODE_REPOSITORY)
  private String defaultCodeRepository;

  public static final String SERIALIZED_NAME_ADDITIONAL_CODE_REPOSITORIES = "AdditionalCodeRepositories";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CODE_REPOSITORIES)
  private List additionalCodeRepositories;

  public static final String SERIALIZED_NAME_ROOT_ACCESS = "RootAccess";
  @SerializedName(SERIALIZED_NAME_ROOT_ACCESS)
  private RootAccess rootAccess;

  public static final String SERIALIZED_NAME_PLATFORM_IDENTIFIER = "PlatformIdentifier";
  @SerializedName(SERIALIZED_NAME_PLATFORM_IDENTIFIER)
  private String platformIdentifier;

  public static final String SERIALIZED_NAME_INSTANCE_METADATA_SERVICE_CONFIGURATION = "InstanceMetadataServiceConfiguration";
  @SerializedName(SERIALIZED_NAME_INSTANCE_METADATA_SERVICE_CONFIGURATION)
  private CreateNotebookInstanceInputInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration;

  public DescribeNotebookInstanceOutput() {
  }

  public DescribeNotebookInstanceOutput notebookInstanceArn(String notebookInstanceArn) {
    this.notebookInstanceArn = notebookInstanceArn;
    return this;
  }

  /**
   * Get notebookInstanceArn
   * @return notebookInstanceArn
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceArn() {
    return notebookInstanceArn;
  }

  public void setNotebookInstanceArn(String notebookInstanceArn) {
    this.notebookInstanceArn = notebookInstanceArn;
  }


  public DescribeNotebookInstanceOutput notebookInstanceName(String notebookInstanceName) {
    this.notebookInstanceName = notebookInstanceName;
    return this;
  }

  /**
   * Get notebookInstanceName
   * @return notebookInstanceName
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceName() {
    return notebookInstanceName;
  }

  public void setNotebookInstanceName(String notebookInstanceName) {
    this.notebookInstanceName = notebookInstanceName;
  }


  public DescribeNotebookInstanceOutput notebookInstanceStatus(NotebookInstanceStatus notebookInstanceStatus) {
    this.notebookInstanceStatus = notebookInstanceStatus;
    return this;
  }

  /**
   * Get notebookInstanceStatus
   * @return notebookInstanceStatus
   */
  @javax.annotation.Nullable
  public NotebookInstanceStatus getNotebookInstanceStatus() {
    return notebookInstanceStatus;
  }

  public void setNotebookInstanceStatus(NotebookInstanceStatus notebookInstanceStatus) {
    this.notebookInstanceStatus = notebookInstanceStatus;
  }


  public DescribeNotebookInstanceOutput failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeNotebookInstanceOutput url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public DescribeNotebookInstanceOutput instanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public InstanceType getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
  }


  public DescribeNotebookInstanceOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

  /**
   * Get subnetId
   * @return subnetId
   */
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public DescribeNotebookInstanceOutput securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public DescribeNotebookInstanceOutput roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeNotebookInstanceOutput kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public DescribeNotebookInstanceOutput networkInterfaceId(String networkInterfaceId) {
    this.networkInterfaceId = networkInterfaceId;
    return this;
  }

  /**
   * Get networkInterfaceId
   * @return networkInterfaceId
   */
  @javax.annotation.Nullable
  public String getNetworkInterfaceId() {
    return networkInterfaceId;
  }

  public void setNetworkInterfaceId(String networkInterfaceId) {
    this.networkInterfaceId = networkInterfaceId;
  }


  public DescribeNotebookInstanceOutput lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeNotebookInstanceOutput creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeNotebookInstanceOutput notebookInstanceLifecycleConfigName(String notebookInstanceLifecycleConfigName) {
    this.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName;
    return this;
  }

  /**
   * Get notebookInstanceLifecycleConfigName
   * @return notebookInstanceLifecycleConfigName
   */
  @javax.annotation.Nullable
  public String getNotebookInstanceLifecycleConfigName() {
    return notebookInstanceLifecycleConfigName;
  }

  public void setNotebookInstanceLifecycleConfigName(String notebookInstanceLifecycleConfigName) {
    this.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName;
  }


  public DescribeNotebookInstanceOutput directInternetAccess(DirectInternetAccess directInternetAccess) {
    this.directInternetAccess = directInternetAccess;
    return this;
  }

  /**
   * Get directInternetAccess
   * @return directInternetAccess
   */
  @javax.annotation.Nullable
  public DirectInternetAccess getDirectInternetAccess() {
    return directInternetAccess;
  }

  public void setDirectInternetAccess(DirectInternetAccess directInternetAccess) {
    this.directInternetAccess = directInternetAccess;
  }


  public DescribeNotebookInstanceOutput volumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
    return this;
  }

  /**
   * Get volumeSizeInGB
   * @return volumeSizeInGB
   */
  @javax.annotation.Nullable
  public Integer getVolumeSizeInGB() {
    return volumeSizeInGB;
  }

  public void setVolumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
  }


  public DescribeNotebookInstanceOutput acceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
    return this;
  }

  /**
   * Get acceleratorTypes
   * @return acceleratorTypes
   */
  @javax.annotation.Nullable
  public List getAcceleratorTypes() {
    return acceleratorTypes;
  }

  public void setAcceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
  }


  public DescribeNotebookInstanceOutput defaultCodeRepository(String defaultCodeRepository) {
    this.defaultCodeRepository = defaultCodeRepository;
    return this;
  }

  /**
   * Get defaultCodeRepository
   * @return defaultCodeRepository
   */
  @javax.annotation.Nullable
  public String getDefaultCodeRepository() {
    return defaultCodeRepository;
  }

  public void setDefaultCodeRepository(String defaultCodeRepository) {
    this.defaultCodeRepository = defaultCodeRepository;
  }


  public DescribeNotebookInstanceOutput additionalCodeRepositories(List additionalCodeRepositories) {
    this.additionalCodeRepositories = additionalCodeRepositories;
    return this;
  }

  /**
   * Get additionalCodeRepositories
   * @return additionalCodeRepositories
   */
  @javax.annotation.Nullable
  public List getAdditionalCodeRepositories() {
    return additionalCodeRepositories;
  }

  public void setAdditionalCodeRepositories(List additionalCodeRepositories) {
    this.additionalCodeRepositories = additionalCodeRepositories;
  }


  public DescribeNotebookInstanceOutput rootAccess(RootAccess rootAccess) {
    this.rootAccess = rootAccess;
    return this;
  }

  /**
   * Get rootAccess
   * @return rootAccess
   */
  @javax.annotation.Nullable
  public RootAccess getRootAccess() {
    return rootAccess;
  }

  public void setRootAccess(RootAccess rootAccess) {
    this.rootAccess = rootAccess;
  }


  public DescribeNotebookInstanceOutput platformIdentifier(String platformIdentifier) {
    this.platformIdentifier = platformIdentifier;
    return this;
  }

  /**
   * Get platformIdentifier
   * @return platformIdentifier
   */
  @javax.annotation.Nullable
  public String getPlatformIdentifier() {
    return platformIdentifier;
  }

  public void setPlatformIdentifier(String platformIdentifier) {
    this.platformIdentifier = platformIdentifier;
  }


  public DescribeNotebookInstanceOutput instanceMetadataServiceConfiguration(CreateNotebookInstanceInputInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration) {
    this.instanceMetadataServiceConfiguration = instanceMetadataServiceConfiguration;
    return this;
  }

  /**
   * Get instanceMetadataServiceConfiguration
   * @return instanceMetadataServiceConfiguration
   */
  @javax.annotation.Nullable
  public CreateNotebookInstanceInputInstanceMetadataServiceConfiguration getInstanceMetadataServiceConfiguration() {
    return instanceMetadataServiceConfiguration;
  }

  public void setInstanceMetadataServiceConfiguration(CreateNotebookInstanceInputInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration) {
    this.instanceMetadataServiceConfiguration = instanceMetadataServiceConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeNotebookInstanceOutput describeNotebookInstanceOutput = (DescribeNotebookInstanceOutput) o;
    return Objects.equals(this.notebookInstanceArn, describeNotebookInstanceOutput.notebookInstanceArn) &&
        Objects.equals(this.notebookInstanceName, describeNotebookInstanceOutput.notebookInstanceName) &&
        Objects.equals(this.notebookInstanceStatus, describeNotebookInstanceOutput.notebookInstanceStatus) &&
        Objects.equals(this.failureReason, describeNotebookInstanceOutput.failureReason) &&
        Objects.equals(this.url, describeNotebookInstanceOutput.url) &&
        Objects.equals(this.instanceType, describeNotebookInstanceOutput.instanceType) &&
        Objects.equals(this.subnetId, describeNotebookInstanceOutput.subnetId) &&
        Objects.equals(this.securityGroups, describeNotebookInstanceOutput.securityGroups) &&
        Objects.equals(this.roleArn, describeNotebookInstanceOutput.roleArn) &&
        Objects.equals(this.kmsKeyId, describeNotebookInstanceOutput.kmsKeyId) &&
        Objects.equals(this.networkInterfaceId, describeNotebookInstanceOutput.networkInterfaceId) &&
        Objects.equals(this.lastModifiedTime, describeNotebookInstanceOutput.lastModifiedTime) &&
        Objects.equals(this.creationTime, describeNotebookInstanceOutput.creationTime) &&
        Objects.equals(this.notebookInstanceLifecycleConfigName, describeNotebookInstanceOutput.notebookInstanceLifecycleConfigName) &&
        Objects.equals(this.directInternetAccess, describeNotebookInstanceOutput.directInternetAccess) &&
        Objects.equals(this.volumeSizeInGB, describeNotebookInstanceOutput.volumeSizeInGB) &&
        Objects.equals(this.acceleratorTypes, describeNotebookInstanceOutput.acceleratorTypes) &&
        Objects.equals(this.defaultCodeRepository, describeNotebookInstanceOutput.defaultCodeRepository) &&
        Objects.equals(this.additionalCodeRepositories, describeNotebookInstanceOutput.additionalCodeRepositories) &&
        Objects.equals(this.rootAccess, describeNotebookInstanceOutput.rootAccess) &&
        Objects.equals(this.platformIdentifier, describeNotebookInstanceOutput.platformIdentifier) &&
        Objects.equals(this.instanceMetadataServiceConfiguration, describeNotebookInstanceOutput.instanceMetadataServiceConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notebookInstanceArn, notebookInstanceName, notebookInstanceStatus, failureReason, url, instanceType, subnetId, securityGroups, roleArn, kmsKeyId, networkInterfaceId, lastModifiedTime, creationTime, notebookInstanceLifecycleConfigName, directInternetAccess, volumeSizeInGB, acceleratorTypes, defaultCodeRepository, additionalCodeRepositories, rootAccess, platformIdentifier, instanceMetadataServiceConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeNotebookInstanceOutput {\n");
    sb.append("    notebookInstanceArn: ").append(toIndentedString(notebookInstanceArn)).append("\n");
    sb.append("    notebookInstanceName: ").append(toIndentedString(notebookInstanceName)).append("\n");
    sb.append("    notebookInstanceStatus: ").append(toIndentedString(notebookInstanceStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    networkInterfaceId: ").append(toIndentedString(networkInterfaceId)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    notebookInstanceLifecycleConfigName: ").append(toIndentedString(notebookInstanceLifecycleConfigName)).append("\n");
    sb.append("    directInternetAccess: ").append(toIndentedString(directInternetAccess)).append("\n");
    sb.append("    volumeSizeInGB: ").append(toIndentedString(volumeSizeInGB)).append("\n");
    sb.append("    acceleratorTypes: ").append(toIndentedString(acceleratorTypes)).append("\n");
    sb.append("    defaultCodeRepository: ").append(toIndentedString(defaultCodeRepository)).append("\n");
    sb.append("    additionalCodeRepositories: ").append(toIndentedString(additionalCodeRepositories)).append("\n");
    sb.append("    rootAccess: ").append(toIndentedString(rootAccess)).append("\n");
    sb.append("    platformIdentifier: ").append(toIndentedString(platformIdentifier)).append("\n");
    sb.append("    instanceMetadataServiceConfiguration: ").append(toIndentedString(instanceMetadataServiceConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("NotebookInstanceArn");
    openapiFields.add("NotebookInstanceName");
    openapiFields.add("NotebookInstanceStatus");
    openapiFields.add("FailureReason");
    openapiFields.add("Url");
    openapiFields.add("InstanceType");
    openapiFields.add("SubnetId");
    openapiFields.add("SecurityGroups");
    openapiFields.add("RoleArn");
    openapiFields.add("KmsKeyId");
    openapiFields.add("NetworkInterfaceId");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("CreationTime");
    openapiFields.add("NotebookInstanceLifecycleConfigName");
    openapiFields.add("DirectInternetAccess");
    openapiFields.add("VolumeSizeInGB");
    openapiFields.add("AcceleratorTypes");
    openapiFields.add("DefaultCodeRepository");
    openapiFields.add("AdditionalCodeRepositories");
    openapiFields.add("RootAccess");
    openapiFields.add("PlatformIdentifier");
    openapiFields.add("InstanceMetadataServiceConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeNotebookInstanceOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeNotebookInstanceOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeNotebookInstanceOutput is not found in the empty JSON string", DescribeNotebookInstanceOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeNotebookInstanceOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeNotebookInstanceOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `NotebookInstanceArn`
      if (jsonObj.get("NotebookInstanceArn") != null && !jsonObj.get("NotebookInstanceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceArn"));
      }
      // validate the optional field `NotebookInstanceName`
      if (jsonObj.get("NotebookInstanceName") != null && !jsonObj.get("NotebookInstanceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceName"));
      }
      // validate the optional field `NotebookInstanceStatus`
      if (jsonObj.get("NotebookInstanceStatus") != null && !jsonObj.get("NotebookInstanceStatus").isJsonNull()) {
        NotebookInstanceStatus.validateJsonElement(jsonObj.get("NotebookInstanceStatus"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `Url`
      if (jsonObj.get("Url") != null && !jsonObj.get("Url").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Url"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        InstanceType.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `SubnetId`
      if (jsonObj.get("SubnetId") != null && !jsonObj.get("SubnetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetId"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `NetworkInterfaceId`
      if (jsonObj.get("NetworkInterfaceId") != null && !jsonObj.get("NetworkInterfaceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NetworkInterfaceId"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `NotebookInstanceLifecycleConfigName`
      if (jsonObj.get("NotebookInstanceLifecycleConfigName") != null && !jsonObj.get("NotebookInstanceLifecycleConfigName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NotebookInstanceLifecycleConfigName"));
      }
      // validate the optional field `DirectInternetAccess`
      if (jsonObj.get("DirectInternetAccess") != null && !jsonObj.get("DirectInternetAccess").isJsonNull()) {
        DirectInternetAccess.validateJsonElement(jsonObj.get("DirectInternetAccess"));
      }
      // validate the optional field `VolumeSizeInGB`
      if (jsonObj.get("VolumeSizeInGB") != null && !jsonObj.get("VolumeSizeInGB").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("VolumeSizeInGB"));
      }
      // validate the optional field `AcceleratorTypes`
      if (jsonObj.get("AcceleratorTypes") != null && !jsonObj.get("AcceleratorTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AcceleratorTypes"));
      }
      // validate the optional field `DefaultCodeRepository`
      if (jsonObj.get("DefaultCodeRepository") != null && !jsonObj.get("DefaultCodeRepository").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultCodeRepository"));
      }
      // validate the optional field `AdditionalCodeRepositories`
      if (jsonObj.get("AdditionalCodeRepositories") != null && !jsonObj.get("AdditionalCodeRepositories").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdditionalCodeRepositories"));
      }
      // validate the optional field `RootAccess`
      if (jsonObj.get("RootAccess") != null && !jsonObj.get("RootAccess").isJsonNull()) {
        RootAccess.validateJsonElement(jsonObj.get("RootAccess"));
      }
      // validate the optional field `PlatformIdentifier`
      if (jsonObj.get("PlatformIdentifier") != null && !jsonObj.get("PlatformIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlatformIdentifier"));
      }
      // validate the optional field `InstanceMetadataServiceConfiguration`
      if (jsonObj.get("InstanceMetadataServiceConfiguration") != null && !jsonObj.get("InstanceMetadataServiceConfiguration").isJsonNull()) {
        CreateNotebookInstanceInputInstanceMetadataServiceConfiguration.validateJsonElement(jsonObj.get("InstanceMetadataServiceConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeNotebookInstanceOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeNotebookInstanceOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeNotebookInstanceOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeNotebookInstanceOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeNotebookInstanceOutput>() {
           @Override
           public void write(JsonWriter out, DescribeNotebookInstanceOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeNotebookInstanceOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeNotebookInstanceOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeNotebookInstanceOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeNotebookInstanceOutput
   */
  public static DescribeNotebookInstanceOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeNotebookInstanceOutput.class);
  }

  /**
   * Convert an instance of DescribeNotebookInstanceOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

