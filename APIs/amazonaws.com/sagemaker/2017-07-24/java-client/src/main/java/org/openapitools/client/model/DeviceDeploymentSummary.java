/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DeviceDeploymentStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains information summarizing device details and deployment status.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeviceDeploymentSummary {
  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_ARN = "EdgeDeploymentPlanArn";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_ARN)
  private String edgeDeploymentPlanArn;

  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_NAME = "EdgeDeploymentPlanName";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_NAME)
  private String edgeDeploymentPlanName;

  public static final String SERIALIZED_NAME_STAGE_NAME = "StageName";
  @SerializedName(SERIALIZED_NAME_STAGE_NAME)
  private String stageName;

  public static final String SERIALIZED_NAME_DEPLOYED_STAGE_NAME = "DeployedStageName";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_STAGE_NAME)
  private String deployedStageName;

  public static final String SERIALIZED_NAME_DEVICE_FLEET_NAME = "DeviceFleetName";
  @SerializedName(SERIALIZED_NAME_DEVICE_FLEET_NAME)
  private String deviceFleetName;

  public static final String SERIALIZED_NAME_DEVICE_NAME = "DeviceName";
  @SerializedName(SERIALIZED_NAME_DEVICE_NAME)
  private String deviceName;

  public static final String SERIALIZED_NAME_DEVICE_ARN = "DeviceArn";
  @SerializedName(SERIALIZED_NAME_DEVICE_ARN)
  private String deviceArn;

  public static final String SERIALIZED_NAME_DEVICE_DEPLOYMENT_STATUS = "DeviceDeploymentStatus";
  @SerializedName(SERIALIZED_NAME_DEVICE_DEPLOYMENT_STATUS)
  private DeviceDeploymentStatus deviceDeploymentStatus;

  public static final String SERIALIZED_NAME_DEVICE_DEPLOYMENT_STATUS_MESSAGE = "DeviceDeploymentStatusMessage";
  @SerializedName(SERIALIZED_NAME_DEVICE_DEPLOYMENT_STATUS_MESSAGE)
  private String deviceDeploymentStatusMessage;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DEPLOYMENT_START_TIME = "DeploymentStartTime";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_START_TIME)
  private OffsetDateTime deploymentStartTime;

  public DeviceDeploymentSummary() {
  }

  public DeviceDeploymentSummary edgeDeploymentPlanArn(String edgeDeploymentPlanArn) {
    this.edgeDeploymentPlanArn = edgeDeploymentPlanArn;
    return this;
  }

  /**
   * Get edgeDeploymentPlanArn
   * @return edgeDeploymentPlanArn
   */
  @javax.annotation.Nonnull
  public String getEdgeDeploymentPlanArn() {
    return edgeDeploymentPlanArn;
  }

  public void setEdgeDeploymentPlanArn(String edgeDeploymentPlanArn) {
    this.edgeDeploymentPlanArn = edgeDeploymentPlanArn;
  }


  public DeviceDeploymentSummary edgeDeploymentPlanName(String edgeDeploymentPlanName) {
    this.edgeDeploymentPlanName = edgeDeploymentPlanName;
    return this;
  }

  /**
   * Get edgeDeploymentPlanName
   * @return edgeDeploymentPlanName
   */
  @javax.annotation.Nonnull
  public String getEdgeDeploymentPlanName() {
    return edgeDeploymentPlanName;
  }

  public void setEdgeDeploymentPlanName(String edgeDeploymentPlanName) {
    this.edgeDeploymentPlanName = edgeDeploymentPlanName;
  }


  public DeviceDeploymentSummary stageName(String stageName) {
    this.stageName = stageName;
    return this;
  }

  /**
   * Get stageName
   * @return stageName
   */
  @javax.annotation.Nonnull
  public String getStageName() {
    return stageName;
  }

  public void setStageName(String stageName) {
    this.stageName = stageName;
  }


  public DeviceDeploymentSummary deployedStageName(String deployedStageName) {
    this.deployedStageName = deployedStageName;
    return this;
  }

  /**
   * Get deployedStageName
   * @return deployedStageName
   */
  @javax.annotation.Nullable
  public String getDeployedStageName() {
    return deployedStageName;
  }

  public void setDeployedStageName(String deployedStageName) {
    this.deployedStageName = deployedStageName;
  }


  public DeviceDeploymentSummary deviceFleetName(String deviceFleetName) {
    this.deviceFleetName = deviceFleetName;
    return this;
  }

  /**
   * Get deviceFleetName
   * @return deviceFleetName
   */
  @javax.annotation.Nullable
  public String getDeviceFleetName() {
    return deviceFleetName;
  }

  public void setDeviceFleetName(String deviceFleetName) {
    this.deviceFleetName = deviceFleetName;
  }


  public DeviceDeploymentSummary deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

  /**
   * Get deviceName
   * @return deviceName
   */
  @javax.annotation.Nonnull
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }


  public DeviceDeploymentSummary deviceArn(String deviceArn) {
    this.deviceArn = deviceArn;
    return this;
  }

  /**
   * Get deviceArn
   * @return deviceArn
   */
  @javax.annotation.Nonnull
  public String getDeviceArn() {
    return deviceArn;
  }

  public void setDeviceArn(String deviceArn) {
    this.deviceArn = deviceArn;
  }


  public DeviceDeploymentSummary deviceDeploymentStatus(DeviceDeploymentStatus deviceDeploymentStatus) {
    this.deviceDeploymentStatus = deviceDeploymentStatus;
    return this;
  }

  /**
   * Get deviceDeploymentStatus
   * @return deviceDeploymentStatus
   */
  @javax.annotation.Nullable
  public DeviceDeploymentStatus getDeviceDeploymentStatus() {
    return deviceDeploymentStatus;
  }

  public void setDeviceDeploymentStatus(DeviceDeploymentStatus deviceDeploymentStatus) {
    this.deviceDeploymentStatus = deviceDeploymentStatus;
  }


  public DeviceDeploymentSummary deviceDeploymentStatusMessage(String deviceDeploymentStatusMessage) {
    this.deviceDeploymentStatusMessage = deviceDeploymentStatusMessage;
    return this;
  }

  /**
   * Get deviceDeploymentStatusMessage
   * @return deviceDeploymentStatusMessage
   */
  @javax.annotation.Nullable
  public String getDeviceDeploymentStatusMessage() {
    return deviceDeploymentStatusMessage;
  }

  public void setDeviceDeploymentStatusMessage(String deviceDeploymentStatusMessage) {
    this.deviceDeploymentStatusMessage = deviceDeploymentStatusMessage;
  }


  public DeviceDeploymentSummary description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DeviceDeploymentSummary deploymentStartTime(OffsetDateTime deploymentStartTime) {
    this.deploymentStartTime = deploymentStartTime;
    return this;
  }

  /**
   * Get deploymentStartTime
   * @return deploymentStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeploymentStartTime() {
    return deploymentStartTime;
  }

  public void setDeploymentStartTime(OffsetDateTime deploymentStartTime) {
    this.deploymentStartTime = deploymentStartTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceDeploymentSummary deviceDeploymentSummary = (DeviceDeploymentSummary) o;
    return Objects.equals(this.edgeDeploymentPlanArn, deviceDeploymentSummary.edgeDeploymentPlanArn) &&
        Objects.equals(this.edgeDeploymentPlanName, deviceDeploymentSummary.edgeDeploymentPlanName) &&
        Objects.equals(this.stageName, deviceDeploymentSummary.stageName) &&
        Objects.equals(this.deployedStageName, deviceDeploymentSummary.deployedStageName) &&
        Objects.equals(this.deviceFleetName, deviceDeploymentSummary.deviceFleetName) &&
        Objects.equals(this.deviceName, deviceDeploymentSummary.deviceName) &&
        Objects.equals(this.deviceArn, deviceDeploymentSummary.deviceArn) &&
        Objects.equals(this.deviceDeploymentStatus, deviceDeploymentSummary.deviceDeploymentStatus) &&
        Objects.equals(this.deviceDeploymentStatusMessage, deviceDeploymentSummary.deviceDeploymentStatusMessage) &&
        Objects.equals(this.description, deviceDeploymentSummary.description) &&
        Objects.equals(this.deploymentStartTime, deviceDeploymentSummary.deploymentStartTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(edgeDeploymentPlanArn, edgeDeploymentPlanName, stageName, deployedStageName, deviceFleetName, deviceName, deviceArn, deviceDeploymentStatus, deviceDeploymentStatusMessage, description, deploymentStartTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceDeploymentSummary {\n");
    sb.append("    edgeDeploymentPlanArn: ").append(toIndentedString(edgeDeploymentPlanArn)).append("\n");
    sb.append("    edgeDeploymentPlanName: ").append(toIndentedString(edgeDeploymentPlanName)).append("\n");
    sb.append("    stageName: ").append(toIndentedString(stageName)).append("\n");
    sb.append("    deployedStageName: ").append(toIndentedString(deployedStageName)).append("\n");
    sb.append("    deviceFleetName: ").append(toIndentedString(deviceFleetName)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    deviceArn: ").append(toIndentedString(deviceArn)).append("\n");
    sb.append("    deviceDeploymentStatus: ").append(toIndentedString(deviceDeploymentStatus)).append("\n");
    sb.append("    deviceDeploymentStatusMessage: ").append(toIndentedString(deviceDeploymentStatusMessage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deploymentStartTime: ").append(toIndentedString(deploymentStartTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EdgeDeploymentPlanArn");
    openapiFields.add("EdgeDeploymentPlanName");
    openapiFields.add("StageName");
    openapiFields.add("DeployedStageName");
    openapiFields.add("DeviceFleetName");
    openapiFields.add("DeviceName");
    openapiFields.add("DeviceArn");
    openapiFields.add("DeviceDeploymentStatus");
    openapiFields.add("DeviceDeploymentStatusMessage");
    openapiFields.add("Description");
    openapiFields.add("DeploymentStartTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EdgeDeploymentPlanArn");
    openapiRequiredFields.add("EdgeDeploymentPlanName");
    openapiRequiredFields.add("StageName");
    openapiRequiredFields.add("DeviceName");
    openapiRequiredFields.add("DeviceArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeviceDeploymentSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeviceDeploymentSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeviceDeploymentSummary is not found in the empty JSON string", DeviceDeploymentSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeviceDeploymentSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeviceDeploymentSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeviceDeploymentSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EdgeDeploymentPlanArn`
      String.validateJsonElement(jsonObj.get("EdgeDeploymentPlanArn"));
      // validate the required field `EdgeDeploymentPlanName`
      String.validateJsonElement(jsonObj.get("EdgeDeploymentPlanName"));
      // validate the required field `StageName`
      String.validateJsonElement(jsonObj.get("StageName"));
      // validate the optional field `DeployedStageName`
      if (jsonObj.get("DeployedStageName") != null && !jsonObj.get("DeployedStageName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeployedStageName"));
      }
      // validate the optional field `DeviceFleetName`
      if (jsonObj.get("DeviceFleetName") != null && !jsonObj.get("DeviceFleetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceFleetName"));
      }
      // validate the required field `DeviceName`
      String.validateJsonElement(jsonObj.get("DeviceName"));
      // validate the required field `DeviceArn`
      String.validateJsonElement(jsonObj.get("DeviceArn"));
      // validate the optional field `DeviceDeploymentStatus`
      if (jsonObj.get("DeviceDeploymentStatus") != null && !jsonObj.get("DeviceDeploymentStatus").isJsonNull()) {
        DeviceDeploymentStatus.validateJsonElement(jsonObj.get("DeviceDeploymentStatus"));
      }
      // validate the optional field `DeviceDeploymentStatusMessage`
      if (jsonObj.get("DeviceDeploymentStatusMessage") != null && !jsonObj.get("DeviceDeploymentStatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeviceDeploymentStatusMessage"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `DeploymentStartTime`
      if (jsonObj.get("DeploymentStartTime") != null && !jsonObj.get("DeploymentStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("DeploymentStartTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeviceDeploymentSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeviceDeploymentSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeviceDeploymentSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeviceDeploymentSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<DeviceDeploymentSummary>() {
           @Override
           public void write(JsonWriter out, DeviceDeploymentSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeviceDeploymentSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeviceDeploymentSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeviceDeploymentSummary
   * @throws IOException if the JSON string is invalid with respect to DeviceDeploymentSummary
   */
  public static DeviceDeploymentSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeviceDeploymentSummary.class);
  }

  /**
   * Convert an instance of DeviceDeploymentSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

