/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAutoMLJobRequestModelDeployConfig;
import org.openapitools.client.model.CreateAutoMLJobV2RequestAutoMLJobObjective;
import org.openapitools.client.model.CreateAutoMLJobV2RequestAutoMLProblemTypeConfig;
import org.openapitools.client.model.CreateAutoMLJobV2RequestDataSplitConfig;
import org.openapitools.client.model.CreateAutoMLJobV2RequestOutputDataConfig;
import org.openapitools.client.model.CreateAutoMLJobV2RequestSecurityConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAutoMLJobV2Request
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAutoMLJobV2Request {
  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_NAME = "AutoMLJobName";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_NAME)
  private String autoMLJobName;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_INPUT_DATA_CONFIG = "AutoMLJobInputDataConfig";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_INPUT_DATA_CONFIG)
  private List autoMLJobInputDataConfig;

  public static final String SERIALIZED_NAME_OUTPUT_DATA_CONFIG = "OutputDataConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_DATA_CONFIG)
  private CreateAutoMLJobV2RequestOutputDataConfig outputDataConfig;

  public static final String SERIALIZED_NAME_AUTO_M_L_PROBLEM_TYPE_CONFIG = "AutoMLProblemTypeConfig";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_PROBLEM_TYPE_CONFIG)
  private CreateAutoMLJobV2RequestAutoMLProblemTypeConfig autoMLProblemTypeConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_SECURITY_CONFIG = "SecurityConfig";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONFIG)
  private CreateAutoMLJobV2RequestSecurityConfig securityConfig;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_OBJECTIVE = "AutoMLJobObjective";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_OBJECTIVE)
  private CreateAutoMLJobV2RequestAutoMLJobObjective autoMLJobObjective;

  public static final String SERIALIZED_NAME_MODEL_DEPLOY_CONFIG = "ModelDeployConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_DEPLOY_CONFIG)
  private CreateAutoMLJobRequestModelDeployConfig modelDeployConfig;

  public static final String SERIALIZED_NAME_DATA_SPLIT_CONFIG = "DataSplitConfig";
  @SerializedName(SERIALIZED_NAME_DATA_SPLIT_CONFIG)
  private CreateAutoMLJobV2RequestDataSplitConfig dataSplitConfig;

  public CreateAutoMLJobV2Request() {
  }

  public CreateAutoMLJobV2Request autoMLJobName(String autoMLJobName) {
    this.autoMLJobName = autoMLJobName;
    return this;
  }

  /**
   * Get autoMLJobName
   * @return autoMLJobName
   */
  @javax.annotation.Nonnull
  public String getAutoMLJobName() {
    return autoMLJobName;
  }

  public void setAutoMLJobName(String autoMLJobName) {
    this.autoMLJobName = autoMLJobName;
  }


  public CreateAutoMLJobV2Request autoMLJobInputDataConfig(List autoMLJobInputDataConfig) {
    this.autoMLJobInputDataConfig = autoMLJobInputDataConfig;
    return this;
  }

  /**
   * Get autoMLJobInputDataConfig
   * @return autoMLJobInputDataConfig
   */
  @javax.annotation.Nonnull
  public List getAutoMLJobInputDataConfig() {
    return autoMLJobInputDataConfig;
  }

  public void setAutoMLJobInputDataConfig(List autoMLJobInputDataConfig) {
    this.autoMLJobInputDataConfig = autoMLJobInputDataConfig;
  }


  public CreateAutoMLJobV2Request outputDataConfig(CreateAutoMLJobV2RequestOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
    return this;
  }

  /**
   * Get outputDataConfig
   * @return outputDataConfig
   */
  @javax.annotation.Nonnull
  public CreateAutoMLJobV2RequestOutputDataConfig getOutputDataConfig() {
    return outputDataConfig;
  }

  public void setOutputDataConfig(CreateAutoMLJobV2RequestOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
  }


  public CreateAutoMLJobV2Request autoMLProblemTypeConfig(CreateAutoMLJobV2RequestAutoMLProblemTypeConfig autoMLProblemTypeConfig) {
    this.autoMLProblemTypeConfig = autoMLProblemTypeConfig;
    return this;
  }

  /**
   * Get autoMLProblemTypeConfig
   * @return autoMLProblemTypeConfig
   */
  @javax.annotation.Nonnull
  public CreateAutoMLJobV2RequestAutoMLProblemTypeConfig getAutoMLProblemTypeConfig() {
    return autoMLProblemTypeConfig;
  }

  public void setAutoMLProblemTypeConfig(CreateAutoMLJobV2RequestAutoMLProblemTypeConfig autoMLProblemTypeConfig) {
    this.autoMLProblemTypeConfig = autoMLProblemTypeConfig;
  }


  public CreateAutoMLJobV2Request roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateAutoMLJobV2Request tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateAutoMLJobV2Request securityConfig(CreateAutoMLJobV2RequestSecurityConfig securityConfig) {
    this.securityConfig = securityConfig;
    return this;
  }

  /**
   * Get securityConfig
   * @return securityConfig
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobV2RequestSecurityConfig getSecurityConfig() {
    return securityConfig;
  }

  public void setSecurityConfig(CreateAutoMLJobV2RequestSecurityConfig securityConfig) {
    this.securityConfig = securityConfig;
  }


  public CreateAutoMLJobV2Request autoMLJobObjective(CreateAutoMLJobV2RequestAutoMLJobObjective autoMLJobObjective) {
    this.autoMLJobObjective = autoMLJobObjective;
    return this;
  }

  /**
   * Get autoMLJobObjective
   * @return autoMLJobObjective
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobV2RequestAutoMLJobObjective getAutoMLJobObjective() {
    return autoMLJobObjective;
  }

  public void setAutoMLJobObjective(CreateAutoMLJobV2RequestAutoMLJobObjective autoMLJobObjective) {
    this.autoMLJobObjective = autoMLJobObjective;
  }


  public CreateAutoMLJobV2Request modelDeployConfig(CreateAutoMLJobRequestModelDeployConfig modelDeployConfig) {
    this.modelDeployConfig = modelDeployConfig;
    return this;
  }

  /**
   * Get modelDeployConfig
   * @return modelDeployConfig
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobRequestModelDeployConfig getModelDeployConfig() {
    return modelDeployConfig;
  }

  public void setModelDeployConfig(CreateAutoMLJobRequestModelDeployConfig modelDeployConfig) {
    this.modelDeployConfig = modelDeployConfig;
  }


  public CreateAutoMLJobV2Request dataSplitConfig(CreateAutoMLJobV2RequestDataSplitConfig dataSplitConfig) {
    this.dataSplitConfig = dataSplitConfig;
    return this;
  }

  /**
   * Get dataSplitConfig
   * @return dataSplitConfig
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobV2RequestDataSplitConfig getDataSplitConfig() {
    return dataSplitConfig;
  }

  public void setDataSplitConfig(CreateAutoMLJobV2RequestDataSplitConfig dataSplitConfig) {
    this.dataSplitConfig = dataSplitConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAutoMLJobV2Request createAutoMLJobV2Request = (CreateAutoMLJobV2Request) o;
    return Objects.equals(this.autoMLJobName, createAutoMLJobV2Request.autoMLJobName) &&
        Objects.equals(this.autoMLJobInputDataConfig, createAutoMLJobV2Request.autoMLJobInputDataConfig) &&
        Objects.equals(this.outputDataConfig, createAutoMLJobV2Request.outputDataConfig) &&
        Objects.equals(this.autoMLProblemTypeConfig, createAutoMLJobV2Request.autoMLProblemTypeConfig) &&
        Objects.equals(this.roleArn, createAutoMLJobV2Request.roleArn) &&
        Objects.equals(this.tags, createAutoMLJobV2Request.tags) &&
        Objects.equals(this.securityConfig, createAutoMLJobV2Request.securityConfig) &&
        Objects.equals(this.autoMLJobObjective, createAutoMLJobV2Request.autoMLJobObjective) &&
        Objects.equals(this.modelDeployConfig, createAutoMLJobV2Request.modelDeployConfig) &&
        Objects.equals(this.dataSplitConfig, createAutoMLJobV2Request.dataSplitConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoMLJobName, autoMLJobInputDataConfig, outputDataConfig, autoMLProblemTypeConfig, roleArn, tags, securityConfig, autoMLJobObjective, modelDeployConfig, dataSplitConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAutoMLJobV2Request {\n");
    sb.append("    autoMLJobName: ").append(toIndentedString(autoMLJobName)).append("\n");
    sb.append("    autoMLJobInputDataConfig: ").append(toIndentedString(autoMLJobInputDataConfig)).append("\n");
    sb.append("    outputDataConfig: ").append(toIndentedString(outputDataConfig)).append("\n");
    sb.append("    autoMLProblemTypeConfig: ").append(toIndentedString(autoMLProblemTypeConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    securityConfig: ").append(toIndentedString(securityConfig)).append("\n");
    sb.append("    autoMLJobObjective: ").append(toIndentedString(autoMLJobObjective)).append("\n");
    sb.append("    modelDeployConfig: ").append(toIndentedString(modelDeployConfig)).append("\n");
    sb.append("    dataSplitConfig: ").append(toIndentedString(dataSplitConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoMLJobName");
    openapiFields.add("AutoMLJobInputDataConfig");
    openapiFields.add("OutputDataConfig");
    openapiFields.add("AutoMLProblemTypeConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("Tags");
    openapiFields.add("SecurityConfig");
    openapiFields.add("AutoMLJobObjective");
    openapiFields.add("ModelDeployConfig");
    openapiFields.add("DataSplitConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AutoMLJobName");
    openapiRequiredFields.add("AutoMLJobInputDataConfig");
    openapiRequiredFields.add("OutputDataConfig");
    openapiRequiredFields.add("AutoMLProblemTypeConfig");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAutoMLJobV2Request
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAutoMLJobV2Request.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAutoMLJobV2Request is not found in the empty JSON string", CreateAutoMLJobV2Request.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAutoMLJobV2Request.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAutoMLJobV2Request` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAutoMLJobV2Request.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AutoMLJobName`
      String.validateJsonElement(jsonObj.get("AutoMLJobName"));
      // validate the required field `AutoMLJobInputDataConfig`
      List.validateJsonElement(jsonObj.get("AutoMLJobInputDataConfig"));
      // validate the required field `OutputDataConfig`
      CreateAutoMLJobV2RequestOutputDataConfig.validateJsonElement(jsonObj.get("OutputDataConfig"));
      // validate the required field `AutoMLProblemTypeConfig`
      CreateAutoMLJobV2RequestAutoMLProblemTypeConfig.validateJsonElement(jsonObj.get("AutoMLProblemTypeConfig"));
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `SecurityConfig`
      if (jsonObj.get("SecurityConfig") != null && !jsonObj.get("SecurityConfig").isJsonNull()) {
        CreateAutoMLJobV2RequestSecurityConfig.validateJsonElement(jsonObj.get("SecurityConfig"));
      }
      // validate the optional field `AutoMLJobObjective`
      if (jsonObj.get("AutoMLJobObjective") != null && !jsonObj.get("AutoMLJobObjective").isJsonNull()) {
        CreateAutoMLJobV2RequestAutoMLJobObjective.validateJsonElement(jsonObj.get("AutoMLJobObjective"));
      }
      // validate the optional field `ModelDeployConfig`
      if (jsonObj.get("ModelDeployConfig") != null && !jsonObj.get("ModelDeployConfig").isJsonNull()) {
        CreateAutoMLJobRequestModelDeployConfig.validateJsonElement(jsonObj.get("ModelDeployConfig"));
      }
      // validate the optional field `DataSplitConfig`
      if (jsonObj.get("DataSplitConfig") != null && !jsonObj.get("DataSplitConfig").isJsonNull()) {
        CreateAutoMLJobV2RequestDataSplitConfig.validateJsonElement(jsonObj.get("DataSplitConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAutoMLJobV2Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAutoMLJobV2Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAutoMLJobV2Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAutoMLJobV2Request.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAutoMLJobV2Request>() {
           @Override
           public void write(JsonWriter out, CreateAutoMLJobV2Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAutoMLJobV2Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAutoMLJobV2Request given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAutoMLJobV2Request
   * @throws IOException if the JSON string is invalid with respect to CreateAutoMLJobV2Request
   */
  public static CreateAutoMLJobV2Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAutoMLJobV2Request.class);
  }

  /**
   * Convert an instance of CreateAutoMLJobV2Request to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

