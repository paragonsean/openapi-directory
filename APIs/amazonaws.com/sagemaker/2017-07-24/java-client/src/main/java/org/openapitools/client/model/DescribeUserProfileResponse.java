/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreateUserProfileRequestUserSettings;
import org.openapitools.client.model.UserProfileStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeUserProfileResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeUserProfileResponse {
  public static final String SERIALIZED_NAME_DOMAIN_ID = "DomainId";
  @SerializedName(SERIALIZED_NAME_DOMAIN_ID)
  private String domainId;

  public static final String SERIALIZED_NAME_USER_PROFILE_ARN = "UserProfileArn";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE_ARN)
  private String userProfileArn;

  public static final String SERIALIZED_NAME_USER_PROFILE_NAME = "UserProfileName";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE_NAME)
  private String userProfileName;

  public static final String SERIALIZED_NAME_HOME_EFS_FILE_SYSTEM_UID = "HomeEfsFileSystemUid";
  @SerializedName(SERIALIZED_NAME_HOME_EFS_FILE_SYSTEM_UID)
  private String homeEfsFileSystemUid;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private UserProfileStatus status;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_SINGLE_SIGN_ON_USER_IDENTIFIER = "SingleSignOnUserIdentifier";
  @SerializedName(SERIALIZED_NAME_SINGLE_SIGN_ON_USER_IDENTIFIER)
  private String singleSignOnUserIdentifier;

  public static final String SERIALIZED_NAME_SINGLE_SIGN_ON_USER_VALUE = "SingleSignOnUserValue";
  @SerializedName(SERIALIZED_NAME_SINGLE_SIGN_ON_USER_VALUE)
  private String singleSignOnUserValue;

  public static final String SERIALIZED_NAME_USER_SETTINGS = "UserSettings";
  @SerializedName(SERIALIZED_NAME_USER_SETTINGS)
  private CreateUserProfileRequestUserSettings userSettings;

  public DescribeUserProfileResponse() {
  }

  public DescribeUserProfileResponse domainId(String domainId) {
    this.domainId = domainId;
    return this;
  }

  /**
   * Get domainId
   * @return domainId
   */
  @javax.annotation.Nullable
  public String getDomainId() {
    return domainId;
  }

  public void setDomainId(String domainId) {
    this.domainId = domainId;
  }


  public DescribeUserProfileResponse userProfileArn(String userProfileArn) {
    this.userProfileArn = userProfileArn;
    return this;
  }

  /**
   * Get userProfileArn
   * @return userProfileArn
   */
  @javax.annotation.Nullable
  public String getUserProfileArn() {
    return userProfileArn;
  }

  public void setUserProfileArn(String userProfileArn) {
    this.userProfileArn = userProfileArn;
  }


  public DescribeUserProfileResponse userProfileName(String userProfileName) {
    this.userProfileName = userProfileName;
    return this;
  }

  /**
   * Get userProfileName
   * @return userProfileName
   */
  @javax.annotation.Nullable
  public String getUserProfileName() {
    return userProfileName;
  }

  public void setUserProfileName(String userProfileName) {
    this.userProfileName = userProfileName;
  }


  public DescribeUserProfileResponse homeEfsFileSystemUid(String homeEfsFileSystemUid) {
    this.homeEfsFileSystemUid = homeEfsFileSystemUid;
    return this;
  }

  /**
   * Get homeEfsFileSystemUid
   * @return homeEfsFileSystemUid
   */
  @javax.annotation.Nullable
  public String getHomeEfsFileSystemUid() {
    return homeEfsFileSystemUid;
  }

  public void setHomeEfsFileSystemUid(String homeEfsFileSystemUid) {
    this.homeEfsFileSystemUid = homeEfsFileSystemUid;
  }


  public DescribeUserProfileResponse status(UserProfileStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public UserProfileStatus getStatus() {
    return status;
  }

  public void setStatus(UserProfileStatus status) {
    this.status = status;
  }


  public DescribeUserProfileResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeUserProfileResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeUserProfileResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeUserProfileResponse singleSignOnUserIdentifier(String singleSignOnUserIdentifier) {
    this.singleSignOnUserIdentifier = singleSignOnUserIdentifier;
    return this;
  }

  /**
   * Get singleSignOnUserIdentifier
   * @return singleSignOnUserIdentifier
   */
  @javax.annotation.Nullable
  public String getSingleSignOnUserIdentifier() {
    return singleSignOnUserIdentifier;
  }

  public void setSingleSignOnUserIdentifier(String singleSignOnUserIdentifier) {
    this.singleSignOnUserIdentifier = singleSignOnUserIdentifier;
  }


  public DescribeUserProfileResponse singleSignOnUserValue(String singleSignOnUserValue) {
    this.singleSignOnUserValue = singleSignOnUserValue;
    return this;
  }

  /**
   * Get singleSignOnUserValue
   * @return singleSignOnUserValue
   */
  @javax.annotation.Nullable
  public String getSingleSignOnUserValue() {
    return singleSignOnUserValue;
  }

  public void setSingleSignOnUserValue(String singleSignOnUserValue) {
    this.singleSignOnUserValue = singleSignOnUserValue;
  }


  public DescribeUserProfileResponse userSettings(CreateUserProfileRequestUserSettings userSettings) {
    this.userSettings = userSettings;
    return this;
  }

  /**
   * Get userSettings
   * @return userSettings
   */
  @javax.annotation.Nullable
  public CreateUserProfileRequestUserSettings getUserSettings() {
    return userSettings;
  }

  public void setUserSettings(CreateUserProfileRequestUserSettings userSettings) {
    this.userSettings = userSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeUserProfileResponse describeUserProfileResponse = (DescribeUserProfileResponse) o;
    return Objects.equals(this.domainId, describeUserProfileResponse.domainId) &&
        Objects.equals(this.userProfileArn, describeUserProfileResponse.userProfileArn) &&
        Objects.equals(this.userProfileName, describeUserProfileResponse.userProfileName) &&
        Objects.equals(this.homeEfsFileSystemUid, describeUserProfileResponse.homeEfsFileSystemUid) &&
        Objects.equals(this.status, describeUserProfileResponse.status) &&
        Objects.equals(this.lastModifiedTime, describeUserProfileResponse.lastModifiedTime) &&
        Objects.equals(this.creationTime, describeUserProfileResponse.creationTime) &&
        Objects.equals(this.failureReason, describeUserProfileResponse.failureReason) &&
        Objects.equals(this.singleSignOnUserIdentifier, describeUserProfileResponse.singleSignOnUserIdentifier) &&
        Objects.equals(this.singleSignOnUserValue, describeUserProfileResponse.singleSignOnUserValue) &&
        Objects.equals(this.userSettings, describeUserProfileResponse.userSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domainId, userProfileArn, userProfileName, homeEfsFileSystemUid, status, lastModifiedTime, creationTime, failureReason, singleSignOnUserIdentifier, singleSignOnUserValue, userSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeUserProfileResponse {\n");
    sb.append("    domainId: ").append(toIndentedString(domainId)).append("\n");
    sb.append("    userProfileArn: ").append(toIndentedString(userProfileArn)).append("\n");
    sb.append("    userProfileName: ").append(toIndentedString(userProfileName)).append("\n");
    sb.append("    homeEfsFileSystemUid: ").append(toIndentedString(homeEfsFileSystemUid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    singleSignOnUserIdentifier: ").append(toIndentedString(singleSignOnUserIdentifier)).append("\n");
    sb.append("    singleSignOnUserValue: ").append(toIndentedString(singleSignOnUserValue)).append("\n");
    sb.append("    userSettings: ").append(toIndentedString(userSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DomainId");
    openapiFields.add("UserProfileArn");
    openapiFields.add("UserProfileName");
    openapiFields.add("HomeEfsFileSystemUid");
    openapiFields.add("Status");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("CreationTime");
    openapiFields.add("FailureReason");
    openapiFields.add("SingleSignOnUserIdentifier");
    openapiFields.add("SingleSignOnUserValue");
    openapiFields.add("UserSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeUserProfileResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeUserProfileResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeUserProfileResponse is not found in the empty JSON string", DescribeUserProfileResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeUserProfileResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeUserProfileResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DomainId`
      if (jsonObj.get("DomainId") != null && !jsonObj.get("DomainId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainId"));
      }
      // validate the optional field `UserProfileArn`
      if (jsonObj.get("UserProfileArn") != null && !jsonObj.get("UserProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("UserProfileArn"));
      }
      // validate the optional field `UserProfileName`
      if (jsonObj.get("UserProfileName") != null && !jsonObj.get("UserProfileName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("UserProfileName"));
      }
      // validate the optional field `HomeEfsFileSystemUid`
      if (jsonObj.get("HomeEfsFileSystemUid") != null && !jsonObj.get("HomeEfsFileSystemUid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HomeEfsFileSystemUid"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        UserProfileStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `SingleSignOnUserIdentifier`
      if (jsonObj.get("SingleSignOnUserIdentifier") != null && !jsonObj.get("SingleSignOnUserIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SingleSignOnUserIdentifier"));
      }
      // validate the optional field `SingleSignOnUserValue`
      if (jsonObj.get("SingleSignOnUserValue") != null && !jsonObj.get("SingleSignOnUserValue").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SingleSignOnUserValue"));
      }
      // validate the optional field `UserSettings`
      if (jsonObj.get("UserSettings") != null && !jsonObj.get("UserSettings").isJsonNull()) {
        CreateUserProfileRequestUserSettings.validateJsonElement(jsonObj.get("UserSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeUserProfileResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeUserProfileResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeUserProfileResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeUserProfileResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeUserProfileResponse>() {
           @Override
           public void write(JsonWriter out, DescribeUserProfileResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeUserProfileResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeUserProfileResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeUserProfileResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeUserProfileResponse
   */
  public static DescribeUserProfileResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeUserProfileResponse.class);
  }

  /**
   * Convert an instance of DescribeUserProfileResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

