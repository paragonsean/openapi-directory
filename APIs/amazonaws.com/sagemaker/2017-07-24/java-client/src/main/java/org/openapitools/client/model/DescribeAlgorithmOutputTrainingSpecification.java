/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAlgorithmOutputTrainingSpecification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAlgorithmOutputTrainingSpecification {
  public static final String SERIALIZED_NAME_TRAINING_IMAGE = "TrainingImage";
  @SerializedName(SERIALIZED_NAME_TRAINING_IMAGE)
  private String trainingImage;

  public static final String SERIALIZED_NAME_TRAINING_IMAGE_DIGEST = "TrainingImageDigest";
  @SerializedName(SERIALIZED_NAME_TRAINING_IMAGE_DIGEST)
  private String trainingImageDigest;

  public static final String SERIALIZED_NAME_SUPPORTED_HYPER_PARAMETERS = "SupportedHyperParameters";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_HYPER_PARAMETERS)
  private List supportedHyperParameters;

  public static final String SERIALIZED_NAME_SUPPORTED_TRAINING_INSTANCE_TYPES = "SupportedTrainingInstanceTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_TRAINING_INSTANCE_TYPES)
  private List supportedTrainingInstanceTypes;

  public static final String SERIALIZED_NAME_SUPPORTS_DISTRIBUTED_TRAINING = "SupportsDistributedTraining";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_DISTRIBUTED_TRAINING)
  private Boolean supportsDistributedTraining;

  public static final String SERIALIZED_NAME_METRIC_DEFINITIONS = "MetricDefinitions";
  @SerializedName(SERIALIZED_NAME_METRIC_DEFINITIONS)
  private List metricDefinitions;

  public static final String SERIALIZED_NAME_TRAINING_CHANNELS = "TrainingChannels";
  @SerializedName(SERIALIZED_NAME_TRAINING_CHANNELS)
  private List trainingChannels;

  public static final String SERIALIZED_NAME_SUPPORTED_TUNING_JOB_OBJECTIVE_METRICS = "SupportedTuningJobObjectiveMetrics";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_TUNING_JOB_OBJECTIVE_METRICS)
  private List supportedTuningJobObjectiveMetrics;

  public DescribeAlgorithmOutputTrainingSpecification() {
  }

  public DescribeAlgorithmOutputTrainingSpecification trainingImage(String trainingImage) {
    this.trainingImage = trainingImage;
    return this;
  }

  /**
   * Get trainingImage
   * @return trainingImage
   */
  @javax.annotation.Nonnull
  public String getTrainingImage() {
    return trainingImage;
  }

  public void setTrainingImage(String trainingImage) {
    this.trainingImage = trainingImage;
  }


  public DescribeAlgorithmOutputTrainingSpecification trainingImageDigest(String trainingImageDigest) {
    this.trainingImageDigest = trainingImageDigest;
    return this;
  }

  /**
   * Get trainingImageDigest
   * @return trainingImageDigest
   */
  @javax.annotation.Nullable
  public String getTrainingImageDigest() {
    return trainingImageDigest;
  }

  public void setTrainingImageDigest(String trainingImageDigest) {
    this.trainingImageDigest = trainingImageDigest;
  }


  public DescribeAlgorithmOutputTrainingSpecification supportedHyperParameters(List supportedHyperParameters) {
    this.supportedHyperParameters = supportedHyperParameters;
    return this;
  }

  /**
   * Get supportedHyperParameters
   * @return supportedHyperParameters
   */
  @javax.annotation.Nullable
  public List getSupportedHyperParameters() {
    return supportedHyperParameters;
  }

  public void setSupportedHyperParameters(List supportedHyperParameters) {
    this.supportedHyperParameters = supportedHyperParameters;
  }


  public DescribeAlgorithmOutputTrainingSpecification supportedTrainingInstanceTypes(List supportedTrainingInstanceTypes) {
    this.supportedTrainingInstanceTypes = supportedTrainingInstanceTypes;
    return this;
  }

  /**
   * Get supportedTrainingInstanceTypes
   * @return supportedTrainingInstanceTypes
   */
  @javax.annotation.Nonnull
  public List getSupportedTrainingInstanceTypes() {
    return supportedTrainingInstanceTypes;
  }

  public void setSupportedTrainingInstanceTypes(List supportedTrainingInstanceTypes) {
    this.supportedTrainingInstanceTypes = supportedTrainingInstanceTypes;
  }


  public DescribeAlgorithmOutputTrainingSpecification supportsDistributedTraining(Boolean supportsDistributedTraining) {
    this.supportsDistributedTraining = supportsDistributedTraining;
    return this;
  }

  /**
   * Get supportsDistributedTraining
   * @return supportsDistributedTraining
   */
  @javax.annotation.Nullable
  public Boolean getSupportsDistributedTraining() {
    return supportsDistributedTraining;
  }

  public void setSupportsDistributedTraining(Boolean supportsDistributedTraining) {
    this.supportsDistributedTraining = supportsDistributedTraining;
  }


  public DescribeAlgorithmOutputTrainingSpecification metricDefinitions(List metricDefinitions) {
    this.metricDefinitions = metricDefinitions;
    return this;
  }

  /**
   * Get metricDefinitions
   * @return metricDefinitions
   */
  @javax.annotation.Nullable
  public List getMetricDefinitions() {
    return metricDefinitions;
  }

  public void setMetricDefinitions(List metricDefinitions) {
    this.metricDefinitions = metricDefinitions;
  }


  public DescribeAlgorithmOutputTrainingSpecification trainingChannels(List trainingChannels) {
    this.trainingChannels = trainingChannels;
    return this;
  }

  /**
   * Get trainingChannels
   * @return trainingChannels
   */
  @javax.annotation.Nonnull
  public List getTrainingChannels() {
    return trainingChannels;
  }

  public void setTrainingChannels(List trainingChannels) {
    this.trainingChannels = trainingChannels;
  }


  public DescribeAlgorithmOutputTrainingSpecification supportedTuningJobObjectiveMetrics(List supportedTuningJobObjectiveMetrics) {
    this.supportedTuningJobObjectiveMetrics = supportedTuningJobObjectiveMetrics;
    return this;
  }

  /**
   * Get supportedTuningJobObjectiveMetrics
   * @return supportedTuningJobObjectiveMetrics
   */
  @javax.annotation.Nullable
  public List getSupportedTuningJobObjectiveMetrics() {
    return supportedTuningJobObjectiveMetrics;
  }

  public void setSupportedTuningJobObjectiveMetrics(List supportedTuningJobObjectiveMetrics) {
    this.supportedTuningJobObjectiveMetrics = supportedTuningJobObjectiveMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAlgorithmOutputTrainingSpecification describeAlgorithmOutputTrainingSpecification = (DescribeAlgorithmOutputTrainingSpecification) o;
    return Objects.equals(this.trainingImage, describeAlgorithmOutputTrainingSpecification.trainingImage) &&
        Objects.equals(this.trainingImageDigest, describeAlgorithmOutputTrainingSpecification.trainingImageDigest) &&
        Objects.equals(this.supportedHyperParameters, describeAlgorithmOutputTrainingSpecification.supportedHyperParameters) &&
        Objects.equals(this.supportedTrainingInstanceTypes, describeAlgorithmOutputTrainingSpecification.supportedTrainingInstanceTypes) &&
        Objects.equals(this.supportsDistributedTraining, describeAlgorithmOutputTrainingSpecification.supportsDistributedTraining) &&
        Objects.equals(this.metricDefinitions, describeAlgorithmOutputTrainingSpecification.metricDefinitions) &&
        Objects.equals(this.trainingChannels, describeAlgorithmOutputTrainingSpecification.trainingChannels) &&
        Objects.equals(this.supportedTuningJobObjectiveMetrics, describeAlgorithmOutputTrainingSpecification.supportedTuningJobObjectiveMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainingImage, trainingImageDigest, supportedHyperParameters, supportedTrainingInstanceTypes, supportsDistributedTraining, metricDefinitions, trainingChannels, supportedTuningJobObjectiveMetrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAlgorithmOutputTrainingSpecification {\n");
    sb.append("    trainingImage: ").append(toIndentedString(trainingImage)).append("\n");
    sb.append("    trainingImageDigest: ").append(toIndentedString(trainingImageDigest)).append("\n");
    sb.append("    supportedHyperParameters: ").append(toIndentedString(supportedHyperParameters)).append("\n");
    sb.append("    supportedTrainingInstanceTypes: ").append(toIndentedString(supportedTrainingInstanceTypes)).append("\n");
    sb.append("    supportsDistributedTraining: ").append(toIndentedString(supportsDistributedTraining)).append("\n");
    sb.append("    metricDefinitions: ").append(toIndentedString(metricDefinitions)).append("\n");
    sb.append("    trainingChannels: ").append(toIndentedString(trainingChannels)).append("\n");
    sb.append("    supportedTuningJobObjectiveMetrics: ").append(toIndentedString(supportedTuningJobObjectiveMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrainingImage");
    openapiFields.add("TrainingImageDigest");
    openapiFields.add("SupportedHyperParameters");
    openapiFields.add("SupportedTrainingInstanceTypes");
    openapiFields.add("SupportsDistributedTraining");
    openapiFields.add("MetricDefinitions");
    openapiFields.add("TrainingChannels");
    openapiFields.add("SupportedTuningJobObjectiveMetrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TrainingImage");
    openapiRequiredFields.add("SupportedTrainingInstanceTypes");
    openapiRequiredFields.add("TrainingChannels");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAlgorithmOutputTrainingSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAlgorithmOutputTrainingSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAlgorithmOutputTrainingSpecification is not found in the empty JSON string", DescribeAlgorithmOutputTrainingSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAlgorithmOutputTrainingSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAlgorithmOutputTrainingSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAlgorithmOutputTrainingSpecification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `TrainingImage`
      String.validateJsonElement(jsonObj.get("TrainingImage"));
      // validate the optional field `TrainingImageDigest`
      if (jsonObj.get("TrainingImageDigest") != null && !jsonObj.get("TrainingImageDigest").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrainingImageDigest"));
      }
      // validate the optional field `SupportedHyperParameters`
      if (jsonObj.get("SupportedHyperParameters") != null && !jsonObj.get("SupportedHyperParameters").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SupportedHyperParameters"));
      }
      // validate the required field `SupportedTrainingInstanceTypes`
      List.validateJsonElement(jsonObj.get("SupportedTrainingInstanceTypes"));
      // validate the optional field `SupportsDistributedTraining`
      if (jsonObj.get("SupportsDistributedTraining") != null && !jsonObj.get("SupportsDistributedTraining").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SupportsDistributedTraining"));
      }
      // validate the optional field `MetricDefinitions`
      if (jsonObj.get("MetricDefinitions") != null && !jsonObj.get("MetricDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MetricDefinitions"));
      }
      // validate the required field `TrainingChannels`
      List.validateJsonElement(jsonObj.get("TrainingChannels"));
      // validate the optional field `SupportedTuningJobObjectiveMetrics`
      if (jsonObj.get("SupportedTuningJobObjectiveMetrics") != null && !jsonObj.get("SupportedTuningJobObjectiveMetrics").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SupportedTuningJobObjectiveMetrics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAlgorithmOutputTrainingSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAlgorithmOutputTrainingSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAlgorithmOutputTrainingSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAlgorithmOutputTrainingSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAlgorithmOutputTrainingSpecification>() {
           @Override
           public void write(JsonWriter out, DescribeAlgorithmOutputTrainingSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAlgorithmOutputTrainingSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAlgorithmOutputTrainingSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAlgorithmOutputTrainingSpecification
   * @throws IOException if the JSON string is invalid with respect to DescribeAlgorithmOutputTrainingSpecification
   */
  public static DescribeAlgorithmOutputTrainingSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAlgorithmOutputTrainingSpecification.class);
  }

  /**
   * Convert an instance of DescribeAlgorithmOutputTrainingSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

