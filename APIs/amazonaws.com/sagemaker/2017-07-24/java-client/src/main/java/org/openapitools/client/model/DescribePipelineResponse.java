/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribePipelineResponseParallelismConfiguration;
import org.openapitools.client.model.PipelineStatus;
import org.openapitools.client.model.UserContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribePipelineResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribePipelineResponse {
  public static final String SERIALIZED_NAME_PIPELINE_ARN = "PipelineArn";
  @SerializedName(SERIALIZED_NAME_PIPELINE_ARN)
  private String pipelineArn;

  public static final String SERIALIZED_NAME_PIPELINE_NAME = "PipelineName";
  @SerializedName(SERIALIZED_NAME_PIPELINE_NAME)
  private String pipelineName;

  public static final String SERIALIZED_NAME_PIPELINE_DISPLAY_NAME = "PipelineDisplayName";
  @SerializedName(SERIALIZED_NAME_PIPELINE_DISPLAY_NAME)
  private String pipelineDisplayName;

  public static final String SERIALIZED_NAME_PIPELINE_DEFINITION = "PipelineDefinition";
  @SerializedName(SERIALIZED_NAME_PIPELINE_DEFINITION)
  private String pipelineDefinition;

  public static final String SERIALIZED_NAME_PIPELINE_DESCRIPTION = "PipelineDescription";
  @SerializedName(SERIALIZED_NAME_PIPELINE_DESCRIPTION)
  private String pipelineDescription;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_PIPELINE_STATUS = "PipelineStatus";
  @SerializedName(SERIALIZED_NAME_PIPELINE_STATUS)
  private PipelineStatus pipelineStatus;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_RUN_TIME = "LastRunTime";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_TIME)
  private OffsetDateTime lastRunTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserContext createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private UserContext lastModifiedBy;

  public static final String SERIALIZED_NAME_PARALLELISM_CONFIGURATION = "ParallelismConfiguration";
  @SerializedName(SERIALIZED_NAME_PARALLELISM_CONFIGURATION)
  private DescribePipelineResponseParallelismConfiguration parallelismConfiguration;

  public DescribePipelineResponse() {
  }

  public DescribePipelineResponse pipelineArn(String pipelineArn) {
    this.pipelineArn = pipelineArn;
    return this;
  }

  /**
   * Get pipelineArn
   * @return pipelineArn
   */
  @javax.annotation.Nullable
  public String getPipelineArn() {
    return pipelineArn;
  }

  public void setPipelineArn(String pipelineArn) {
    this.pipelineArn = pipelineArn;
  }


  public DescribePipelineResponse pipelineName(String pipelineName) {
    this.pipelineName = pipelineName;
    return this;
  }

  /**
   * Get pipelineName
   * @return pipelineName
   */
  @javax.annotation.Nullable
  public String getPipelineName() {
    return pipelineName;
  }

  public void setPipelineName(String pipelineName) {
    this.pipelineName = pipelineName;
  }


  public DescribePipelineResponse pipelineDisplayName(String pipelineDisplayName) {
    this.pipelineDisplayName = pipelineDisplayName;
    return this;
  }

  /**
   * Get pipelineDisplayName
   * @return pipelineDisplayName
   */
  @javax.annotation.Nullable
  public String getPipelineDisplayName() {
    return pipelineDisplayName;
  }

  public void setPipelineDisplayName(String pipelineDisplayName) {
    this.pipelineDisplayName = pipelineDisplayName;
  }


  public DescribePipelineResponse pipelineDefinition(String pipelineDefinition) {
    this.pipelineDefinition = pipelineDefinition;
    return this;
  }

  /**
   * Get pipelineDefinition
   * @return pipelineDefinition
   */
  @javax.annotation.Nullable
  public String getPipelineDefinition() {
    return pipelineDefinition;
  }

  public void setPipelineDefinition(String pipelineDefinition) {
    this.pipelineDefinition = pipelineDefinition;
  }


  public DescribePipelineResponse pipelineDescription(String pipelineDescription) {
    this.pipelineDescription = pipelineDescription;
    return this;
  }

  /**
   * Get pipelineDescription
   * @return pipelineDescription
   */
  @javax.annotation.Nullable
  public String getPipelineDescription() {
    return pipelineDescription;
  }

  public void setPipelineDescription(String pipelineDescription) {
    this.pipelineDescription = pipelineDescription;
  }


  public DescribePipelineResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribePipelineResponse pipelineStatus(PipelineStatus pipelineStatus) {
    this.pipelineStatus = pipelineStatus;
    return this;
  }

  /**
   * Get pipelineStatus
   * @return pipelineStatus
   */
  @javax.annotation.Nullable
  public PipelineStatus getPipelineStatus() {
    return pipelineStatus;
  }

  public void setPipelineStatus(PipelineStatus pipelineStatus) {
    this.pipelineStatus = pipelineStatus;
  }


  public DescribePipelineResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribePipelineResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribePipelineResponse lastRunTime(OffsetDateTime lastRunTime) {
    this.lastRunTime = lastRunTime;
    return this;
  }

  /**
   * Get lastRunTime
   * @return lastRunTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRunTime() {
    return lastRunTime;
  }

  public void setLastRunTime(OffsetDateTime lastRunTime) {
    this.lastRunTime = lastRunTime;
  }


  public DescribePipelineResponse createdBy(UserContext createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserContext getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserContext createdBy) {
    this.createdBy = createdBy;
  }


  public DescribePipelineResponse lastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public UserContext getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public DescribePipelineResponse parallelismConfiguration(DescribePipelineResponseParallelismConfiguration parallelismConfiguration) {
    this.parallelismConfiguration = parallelismConfiguration;
    return this;
  }

  /**
   * Get parallelismConfiguration
   * @return parallelismConfiguration
   */
  @javax.annotation.Nullable
  public DescribePipelineResponseParallelismConfiguration getParallelismConfiguration() {
    return parallelismConfiguration;
  }

  public void setParallelismConfiguration(DescribePipelineResponseParallelismConfiguration parallelismConfiguration) {
    this.parallelismConfiguration = parallelismConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribePipelineResponse describePipelineResponse = (DescribePipelineResponse) o;
    return Objects.equals(this.pipelineArn, describePipelineResponse.pipelineArn) &&
        Objects.equals(this.pipelineName, describePipelineResponse.pipelineName) &&
        Objects.equals(this.pipelineDisplayName, describePipelineResponse.pipelineDisplayName) &&
        Objects.equals(this.pipelineDefinition, describePipelineResponse.pipelineDefinition) &&
        Objects.equals(this.pipelineDescription, describePipelineResponse.pipelineDescription) &&
        Objects.equals(this.roleArn, describePipelineResponse.roleArn) &&
        Objects.equals(this.pipelineStatus, describePipelineResponse.pipelineStatus) &&
        Objects.equals(this.creationTime, describePipelineResponse.creationTime) &&
        Objects.equals(this.lastModifiedTime, describePipelineResponse.lastModifiedTime) &&
        Objects.equals(this.lastRunTime, describePipelineResponse.lastRunTime) &&
        Objects.equals(this.createdBy, describePipelineResponse.createdBy) &&
        Objects.equals(this.lastModifiedBy, describePipelineResponse.lastModifiedBy) &&
        Objects.equals(this.parallelismConfiguration, describePipelineResponse.parallelismConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pipelineArn, pipelineName, pipelineDisplayName, pipelineDefinition, pipelineDescription, roleArn, pipelineStatus, creationTime, lastModifiedTime, lastRunTime, createdBy, lastModifiedBy, parallelismConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribePipelineResponse {\n");
    sb.append("    pipelineArn: ").append(toIndentedString(pipelineArn)).append("\n");
    sb.append("    pipelineName: ").append(toIndentedString(pipelineName)).append("\n");
    sb.append("    pipelineDisplayName: ").append(toIndentedString(pipelineDisplayName)).append("\n");
    sb.append("    pipelineDefinition: ").append(toIndentedString(pipelineDefinition)).append("\n");
    sb.append("    pipelineDescription: ").append(toIndentedString(pipelineDescription)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    pipelineStatus: ").append(toIndentedString(pipelineStatus)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastRunTime: ").append(toIndentedString(lastRunTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    parallelismConfiguration: ").append(toIndentedString(parallelismConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PipelineArn");
    openapiFields.add("PipelineName");
    openapiFields.add("PipelineDisplayName");
    openapiFields.add("PipelineDefinition");
    openapiFields.add("PipelineDescription");
    openapiFields.add("RoleArn");
    openapiFields.add("PipelineStatus");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastRunTime");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("ParallelismConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribePipelineResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribePipelineResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribePipelineResponse is not found in the empty JSON string", DescribePipelineResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribePipelineResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribePipelineResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PipelineArn`
      if (jsonObj.get("PipelineArn") != null && !jsonObj.get("PipelineArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineArn"));
      }
      // validate the optional field `PipelineName`
      if (jsonObj.get("PipelineName") != null && !jsonObj.get("PipelineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineName"));
      }
      // validate the optional field `PipelineDisplayName`
      if (jsonObj.get("PipelineDisplayName") != null && !jsonObj.get("PipelineDisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineDisplayName"));
      }
      // validate the optional field `PipelineDefinition`
      if (jsonObj.get("PipelineDefinition") != null && !jsonObj.get("PipelineDefinition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineDefinition"));
      }
      // validate the optional field `PipelineDescription`
      if (jsonObj.get("PipelineDescription") != null && !jsonObj.get("PipelineDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PipelineDescription"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `PipelineStatus`
      if (jsonObj.get("PipelineStatus") != null && !jsonObj.get("PipelineStatus").isJsonNull()) {
        PipelineStatus.validateJsonElement(jsonObj.get("PipelineStatus"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `LastRunTime`
      if (jsonObj.get("LastRunTime") != null && !jsonObj.get("LastRunTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastRunTime"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `ParallelismConfiguration`
      if (jsonObj.get("ParallelismConfiguration") != null && !jsonObj.get("ParallelismConfiguration").isJsonNull()) {
        DescribePipelineResponseParallelismConfiguration.validateJsonElement(jsonObj.get("ParallelismConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribePipelineResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribePipelineResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribePipelineResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribePipelineResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribePipelineResponse>() {
           @Override
           public void write(JsonWriter out, DescribePipelineResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribePipelineResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribePipelineResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribePipelineResponse
   * @throws IOException if the JSON string is invalid with respect to DescribePipelineResponse
   */
  public static DescribePipelineResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribePipelineResponse.class);
  }

  /**
   * Convert an instance of DescribePipelineResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

