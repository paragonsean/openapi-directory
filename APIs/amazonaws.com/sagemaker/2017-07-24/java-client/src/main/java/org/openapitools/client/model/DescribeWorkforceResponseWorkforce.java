/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.WorkforceCognitoConfig;
import org.openapitools.client.model.WorkforceOidcConfig;
import org.openapitools.client.model.WorkforceSourceIpConfig;
import org.openapitools.client.model.WorkforceStatus;
import org.openapitools.client.model.WorkforceWorkforceVpcConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeWorkforceResponseWorkforce
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeWorkforceResponseWorkforce {
  public static final String SERIALIZED_NAME_WORKFORCE_NAME = "WorkforceName";
  @SerializedName(SERIALIZED_NAME_WORKFORCE_NAME)
  private String workforceName;

  public static final String SERIALIZED_NAME_WORKFORCE_ARN = "WorkforceArn";
  @SerializedName(SERIALIZED_NAME_WORKFORCE_ARN)
  private String workforceArn;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE = "LastUpdatedDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE)
  private OffsetDateTime lastUpdatedDate;

  public static final String SERIALIZED_NAME_SOURCE_IP_CONFIG = "SourceIpConfig";
  @SerializedName(SERIALIZED_NAME_SOURCE_IP_CONFIG)
  private WorkforceSourceIpConfig sourceIpConfig;

  public static final String SERIALIZED_NAME_SUB_DOMAIN = "SubDomain";
  @SerializedName(SERIALIZED_NAME_SUB_DOMAIN)
  private String subDomain;

  public static final String SERIALIZED_NAME_COGNITO_CONFIG = "CognitoConfig";
  @SerializedName(SERIALIZED_NAME_COGNITO_CONFIG)
  private WorkforceCognitoConfig cognitoConfig;

  public static final String SERIALIZED_NAME_OIDC_CONFIG = "OidcConfig";
  @SerializedName(SERIALIZED_NAME_OIDC_CONFIG)
  private WorkforceOidcConfig oidcConfig;

  public static final String SERIALIZED_NAME_CREATE_DATE = "CreateDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private OffsetDateTime createDate;

  public static final String SERIALIZED_NAME_WORKFORCE_VPC_CONFIG = "WorkforceVpcConfig";
  @SerializedName(SERIALIZED_NAME_WORKFORCE_VPC_CONFIG)
  private WorkforceWorkforceVpcConfig workforceVpcConfig;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private WorkforceStatus status;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public DescribeWorkforceResponseWorkforce() {
  }

  public DescribeWorkforceResponseWorkforce workforceName(String workforceName) {
    this.workforceName = workforceName;
    return this;
  }

  /**
   * Get workforceName
   * @return workforceName
   */
  @javax.annotation.Nonnull
  public String getWorkforceName() {
    return workforceName;
  }

  public void setWorkforceName(String workforceName) {
    this.workforceName = workforceName;
  }


  public DescribeWorkforceResponseWorkforce workforceArn(String workforceArn) {
    this.workforceArn = workforceArn;
    return this;
  }

  /**
   * Get workforceArn
   * @return workforceArn
   */
  @javax.annotation.Nonnull
  public String getWorkforceArn() {
    return workforceArn;
  }

  public void setWorkforceArn(String workforceArn) {
    this.workforceArn = workforceArn;
  }


  public DescribeWorkforceResponseWorkforce lastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

  /**
   * Get lastUpdatedDate
   * @return lastUpdatedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDate() {
    return lastUpdatedDate;
  }

  public void setLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }


  public DescribeWorkforceResponseWorkforce sourceIpConfig(WorkforceSourceIpConfig sourceIpConfig) {
    this.sourceIpConfig = sourceIpConfig;
    return this;
  }

  /**
   * Get sourceIpConfig
   * @return sourceIpConfig
   */
  @javax.annotation.Nullable
  public WorkforceSourceIpConfig getSourceIpConfig() {
    return sourceIpConfig;
  }

  public void setSourceIpConfig(WorkforceSourceIpConfig sourceIpConfig) {
    this.sourceIpConfig = sourceIpConfig;
  }


  public DescribeWorkforceResponseWorkforce subDomain(String subDomain) {
    this.subDomain = subDomain;
    return this;
  }

  /**
   * Get subDomain
   * @return subDomain
   */
  @javax.annotation.Nullable
  public String getSubDomain() {
    return subDomain;
  }

  public void setSubDomain(String subDomain) {
    this.subDomain = subDomain;
  }


  public DescribeWorkforceResponseWorkforce cognitoConfig(WorkforceCognitoConfig cognitoConfig) {
    this.cognitoConfig = cognitoConfig;
    return this;
  }

  /**
   * Get cognitoConfig
   * @return cognitoConfig
   */
  @javax.annotation.Nullable
  public WorkforceCognitoConfig getCognitoConfig() {
    return cognitoConfig;
  }

  public void setCognitoConfig(WorkforceCognitoConfig cognitoConfig) {
    this.cognitoConfig = cognitoConfig;
  }


  public DescribeWorkforceResponseWorkforce oidcConfig(WorkforceOidcConfig oidcConfig) {
    this.oidcConfig = oidcConfig;
    return this;
  }

  /**
   * Get oidcConfig
   * @return oidcConfig
   */
  @javax.annotation.Nullable
  public WorkforceOidcConfig getOidcConfig() {
    return oidcConfig;
  }

  public void setOidcConfig(WorkforceOidcConfig oidcConfig) {
    this.oidcConfig = oidcConfig;
  }


  public DescribeWorkforceResponseWorkforce createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public DescribeWorkforceResponseWorkforce workforceVpcConfig(WorkforceWorkforceVpcConfig workforceVpcConfig) {
    this.workforceVpcConfig = workforceVpcConfig;
    return this;
  }

  /**
   * Get workforceVpcConfig
   * @return workforceVpcConfig
   */
  @javax.annotation.Nullable
  public WorkforceWorkforceVpcConfig getWorkforceVpcConfig() {
    return workforceVpcConfig;
  }

  public void setWorkforceVpcConfig(WorkforceWorkforceVpcConfig workforceVpcConfig) {
    this.workforceVpcConfig = workforceVpcConfig;
  }


  public DescribeWorkforceResponseWorkforce status(WorkforceStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public WorkforceStatus getStatus() {
    return status;
  }

  public void setStatus(WorkforceStatus status) {
    this.status = status;
  }


  public DescribeWorkforceResponseWorkforce failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeWorkforceResponseWorkforce describeWorkforceResponseWorkforce = (DescribeWorkforceResponseWorkforce) o;
    return Objects.equals(this.workforceName, describeWorkforceResponseWorkforce.workforceName) &&
        Objects.equals(this.workforceArn, describeWorkforceResponseWorkforce.workforceArn) &&
        Objects.equals(this.lastUpdatedDate, describeWorkforceResponseWorkforce.lastUpdatedDate) &&
        Objects.equals(this.sourceIpConfig, describeWorkforceResponseWorkforce.sourceIpConfig) &&
        Objects.equals(this.subDomain, describeWorkforceResponseWorkforce.subDomain) &&
        Objects.equals(this.cognitoConfig, describeWorkforceResponseWorkforce.cognitoConfig) &&
        Objects.equals(this.oidcConfig, describeWorkforceResponseWorkforce.oidcConfig) &&
        Objects.equals(this.createDate, describeWorkforceResponseWorkforce.createDate) &&
        Objects.equals(this.workforceVpcConfig, describeWorkforceResponseWorkforce.workforceVpcConfig) &&
        Objects.equals(this.status, describeWorkforceResponseWorkforce.status) &&
        Objects.equals(this.failureReason, describeWorkforceResponseWorkforce.failureReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workforceName, workforceArn, lastUpdatedDate, sourceIpConfig, subDomain, cognitoConfig, oidcConfig, createDate, workforceVpcConfig, status, failureReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeWorkforceResponseWorkforce {\n");
    sb.append("    workforceName: ").append(toIndentedString(workforceName)).append("\n");
    sb.append("    workforceArn: ").append(toIndentedString(workforceArn)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("    sourceIpConfig: ").append(toIndentedString(sourceIpConfig)).append("\n");
    sb.append("    subDomain: ").append(toIndentedString(subDomain)).append("\n");
    sb.append("    cognitoConfig: ").append(toIndentedString(cognitoConfig)).append("\n");
    sb.append("    oidcConfig: ").append(toIndentedString(oidcConfig)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    workforceVpcConfig: ").append(toIndentedString(workforceVpcConfig)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WorkforceName");
    openapiFields.add("WorkforceArn");
    openapiFields.add("LastUpdatedDate");
    openapiFields.add("SourceIpConfig");
    openapiFields.add("SubDomain");
    openapiFields.add("CognitoConfig");
    openapiFields.add("OidcConfig");
    openapiFields.add("CreateDate");
    openapiFields.add("WorkforceVpcConfig");
    openapiFields.add("Status");
    openapiFields.add("FailureReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("WorkforceName");
    openapiRequiredFields.add("WorkforceArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeWorkforceResponseWorkforce
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeWorkforceResponseWorkforce.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeWorkforceResponseWorkforce is not found in the empty JSON string", DescribeWorkforceResponseWorkforce.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeWorkforceResponseWorkforce.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeWorkforceResponseWorkforce` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeWorkforceResponseWorkforce.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `WorkforceName`
      String.validateJsonElement(jsonObj.get("WorkforceName"));
      // validate the required field `WorkforceArn`
      String.validateJsonElement(jsonObj.get("WorkforceArn"));
      // validate the optional field `LastUpdatedDate`
      if (jsonObj.get("LastUpdatedDate") != null && !jsonObj.get("LastUpdatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedDate"));
      }
      // validate the optional field `SourceIpConfig`
      if (jsonObj.get("SourceIpConfig") != null && !jsonObj.get("SourceIpConfig").isJsonNull()) {
        WorkforceSourceIpConfig.validateJsonElement(jsonObj.get("SourceIpConfig"));
      }
      // validate the optional field `SubDomain`
      if (jsonObj.get("SubDomain") != null && !jsonObj.get("SubDomain").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubDomain"));
      }
      // validate the optional field `CognitoConfig`
      if (jsonObj.get("CognitoConfig") != null && !jsonObj.get("CognitoConfig").isJsonNull()) {
        WorkforceCognitoConfig.validateJsonElement(jsonObj.get("CognitoConfig"));
      }
      // validate the optional field `OidcConfig`
      if (jsonObj.get("OidcConfig") != null && !jsonObj.get("OidcConfig").isJsonNull()) {
        WorkforceOidcConfig.validateJsonElement(jsonObj.get("OidcConfig"));
      }
      // validate the optional field `CreateDate`
      if (jsonObj.get("CreateDate") != null && !jsonObj.get("CreateDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreateDate"));
      }
      // validate the optional field `WorkforceVpcConfig`
      if (jsonObj.get("WorkforceVpcConfig") != null && !jsonObj.get("WorkforceVpcConfig").isJsonNull()) {
        WorkforceWorkforceVpcConfig.validateJsonElement(jsonObj.get("WorkforceVpcConfig"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        WorkforceStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeWorkforceResponseWorkforce.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeWorkforceResponseWorkforce' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeWorkforceResponseWorkforce> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeWorkforceResponseWorkforce.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeWorkforceResponseWorkforce>() {
           @Override
           public void write(JsonWriter out, DescribeWorkforceResponseWorkforce value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeWorkforceResponseWorkforce read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeWorkforceResponseWorkforce given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeWorkforceResponseWorkforce
   * @throws IOException if the JSON string is invalid with respect to DescribeWorkforceResponseWorkforce
   */
  public static DescribeWorkforceResponseWorkforce fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeWorkforceResponseWorkforce.class);
  }

  /**
   * Convert an instance of DescribeWorkforceResponseWorkforce to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

