/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.MonitoringProblemType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateModelQualityJobDefinitionRequestModelQualityAppSpecification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateModelQualityJobDefinitionRequestModelQualityAppSpecification {
  public static final String SERIALIZED_NAME_IMAGE_URI = "ImageUri";
  @SerializedName(SERIALIZED_NAME_IMAGE_URI)
  private String imageUri;

  public static final String SERIALIZED_NAME_CONTAINER_ENTRYPOINT = "ContainerEntrypoint";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ENTRYPOINT)
  private List containerEntrypoint;

  public static final String SERIALIZED_NAME_CONTAINER_ARGUMENTS = "ContainerArguments";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ARGUMENTS)
  private List containerArguments;

  public static final String SERIALIZED_NAME_RECORD_PREPROCESSOR_SOURCE_URI = "RecordPreprocessorSourceUri";
  @SerializedName(SERIALIZED_NAME_RECORD_PREPROCESSOR_SOURCE_URI)
  private String recordPreprocessorSourceUri;

  public static final String SERIALIZED_NAME_POST_ANALYTICS_PROCESSOR_SOURCE_URI = "PostAnalyticsProcessorSourceUri";
  @SerializedName(SERIALIZED_NAME_POST_ANALYTICS_PROCESSOR_SOURCE_URI)
  private String postAnalyticsProcessorSourceUri;

  public static final String SERIALIZED_NAME_PROBLEM_TYPE = "ProblemType";
  @SerializedName(SERIALIZED_NAME_PROBLEM_TYPE)
  private MonitoringProblemType problemType;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private Map environment;

  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification() {
  }

  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification imageUri(String imageUri) {
    this.imageUri = imageUri;
    return this;
  }

  /**
   * Get imageUri
   * @return imageUri
   */
  @javax.annotation.Nonnull
  public String getImageUri() {
    return imageUri;
  }

  public void setImageUri(String imageUri) {
    this.imageUri = imageUri;
  }


  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification containerEntrypoint(List containerEntrypoint) {
    this.containerEntrypoint = containerEntrypoint;
    return this;
  }

  /**
   * Get containerEntrypoint
   * @return containerEntrypoint
   */
  @javax.annotation.Nullable
  public List getContainerEntrypoint() {
    return containerEntrypoint;
  }

  public void setContainerEntrypoint(List containerEntrypoint) {
    this.containerEntrypoint = containerEntrypoint;
  }


  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification containerArguments(List containerArguments) {
    this.containerArguments = containerArguments;
    return this;
  }

  /**
   * Get containerArguments
   * @return containerArguments
   */
  @javax.annotation.Nullable
  public List getContainerArguments() {
    return containerArguments;
  }

  public void setContainerArguments(List containerArguments) {
    this.containerArguments = containerArguments;
  }


  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification recordPreprocessorSourceUri(String recordPreprocessorSourceUri) {
    this.recordPreprocessorSourceUri = recordPreprocessorSourceUri;
    return this;
  }

  /**
   * Get recordPreprocessorSourceUri
   * @return recordPreprocessorSourceUri
   */
  @javax.annotation.Nullable
  public String getRecordPreprocessorSourceUri() {
    return recordPreprocessorSourceUri;
  }

  public void setRecordPreprocessorSourceUri(String recordPreprocessorSourceUri) {
    this.recordPreprocessorSourceUri = recordPreprocessorSourceUri;
  }


  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification postAnalyticsProcessorSourceUri(String postAnalyticsProcessorSourceUri) {
    this.postAnalyticsProcessorSourceUri = postAnalyticsProcessorSourceUri;
    return this;
  }

  /**
   * Get postAnalyticsProcessorSourceUri
   * @return postAnalyticsProcessorSourceUri
   */
  @javax.annotation.Nullable
  public String getPostAnalyticsProcessorSourceUri() {
    return postAnalyticsProcessorSourceUri;
  }

  public void setPostAnalyticsProcessorSourceUri(String postAnalyticsProcessorSourceUri) {
    this.postAnalyticsProcessorSourceUri = postAnalyticsProcessorSourceUri;
  }


  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification problemType(MonitoringProblemType problemType) {
    this.problemType = problemType;
    return this;
  }

  /**
   * Get problemType
   * @return problemType
   */
  @javax.annotation.Nullable
  public MonitoringProblemType getProblemType() {
    return problemType;
  }

  public void setProblemType(MonitoringProblemType problemType) {
    this.problemType = problemType;
  }


  public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification environment(Map environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public Map getEnvironment() {
    return environment;
  }

  public void setEnvironment(Map environment) {
    this.environment = environment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateModelQualityJobDefinitionRequestModelQualityAppSpecification createModelQualityJobDefinitionRequestModelQualityAppSpecification = (CreateModelQualityJobDefinitionRequestModelQualityAppSpecification) o;
    return Objects.equals(this.imageUri, createModelQualityJobDefinitionRequestModelQualityAppSpecification.imageUri) &&
        Objects.equals(this.containerEntrypoint, createModelQualityJobDefinitionRequestModelQualityAppSpecification.containerEntrypoint) &&
        Objects.equals(this.containerArguments, createModelQualityJobDefinitionRequestModelQualityAppSpecification.containerArguments) &&
        Objects.equals(this.recordPreprocessorSourceUri, createModelQualityJobDefinitionRequestModelQualityAppSpecification.recordPreprocessorSourceUri) &&
        Objects.equals(this.postAnalyticsProcessorSourceUri, createModelQualityJobDefinitionRequestModelQualityAppSpecification.postAnalyticsProcessorSourceUri) &&
        Objects.equals(this.problemType, createModelQualityJobDefinitionRequestModelQualityAppSpecification.problemType) &&
        Objects.equals(this.environment, createModelQualityJobDefinitionRequestModelQualityAppSpecification.environment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageUri, containerEntrypoint, containerArguments, recordPreprocessorSourceUri, postAnalyticsProcessorSourceUri, problemType, environment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateModelQualityJobDefinitionRequestModelQualityAppSpecification {\n");
    sb.append("    imageUri: ").append(toIndentedString(imageUri)).append("\n");
    sb.append("    containerEntrypoint: ").append(toIndentedString(containerEntrypoint)).append("\n");
    sb.append("    containerArguments: ").append(toIndentedString(containerArguments)).append("\n");
    sb.append("    recordPreprocessorSourceUri: ").append(toIndentedString(recordPreprocessorSourceUri)).append("\n");
    sb.append("    postAnalyticsProcessorSourceUri: ").append(toIndentedString(postAnalyticsProcessorSourceUri)).append("\n");
    sb.append("    problemType: ").append(toIndentedString(problemType)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ImageUri");
    openapiFields.add("ContainerEntrypoint");
    openapiFields.add("ContainerArguments");
    openapiFields.add("RecordPreprocessorSourceUri");
    openapiFields.add("PostAnalyticsProcessorSourceUri");
    openapiFields.add("ProblemType");
    openapiFields.add("Environment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ImageUri");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateModelQualityJobDefinitionRequestModelQualityAppSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateModelQualityJobDefinitionRequestModelQualityAppSpecification is not found in the empty JSON string", CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateModelQualityJobDefinitionRequestModelQualityAppSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ImageUri`
      String.validateJsonElement(jsonObj.get("ImageUri"));
      // validate the optional field `ContainerEntrypoint`
      if (jsonObj.get("ContainerEntrypoint") != null && !jsonObj.get("ContainerEntrypoint").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ContainerEntrypoint"));
      }
      // validate the optional field `ContainerArguments`
      if (jsonObj.get("ContainerArguments") != null && !jsonObj.get("ContainerArguments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ContainerArguments"));
      }
      // validate the optional field `RecordPreprocessorSourceUri`
      if (jsonObj.get("RecordPreprocessorSourceUri") != null && !jsonObj.get("RecordPreprocessorSourceUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RecordPreprocessorSourceUri"));
      }
      // validate the optional field `PostAnalyticsProcessorSourceUri`
      if (jsonObj.get("PostAnalyticsProcessorSourceUri") != null && !jsonObj.get("PostAnalyticsProcessorSourceUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PostAnalyticsProcessorSourceUri"));
      }
      // validate the optional field `ProblemType`
      if (jsonObj.get("ProblemType") != null && !jsonObj.get("ProblemType").isJsonNull()) {
        MonitoringProblemType.validateJsonElement(jsonObj.get("ProblemType"));
      }
      // validate the optional field `Environment`
      if (jsonObj.get("Environment") != null && !jsonObj.get("Environment").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Environment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateModelQualityJobDefinitionRequestModelQualityAppSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateModelQualityJobDefinitionRequestModelQualityAppSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateModelQualityJobDefinitionRequestModelQualityAppSpecification>() {
           @Override
           public void write(JsonWriter out, CreateModelQualityJobDefinitionRequestModelQualityAppSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateModelQualityJobDefinitionRequestModelQualityAppSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateModelQualityJobDefinitionRequestModelQualityAppSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateModelQualityJobDefinitionRequestModelQualityAppSpecification
   * @throws IOException if the JSON string is invalid with respect to CreateModelQualityJobDefinitionRequestModelQualityAppSpecification
   */
  public static CreateModelQualityJobDefinitionRequestModelQualityAppSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateModelQualityJobDefinitionRequestModelQualityAppSpecification.class);
  }

  /**
   * Convert an instance of CreateModelQualityJobDefinitionRequestModelQualityAppSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

