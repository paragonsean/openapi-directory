/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * How long a job is allowed to run, or how many candidates a job is allowed to generate.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutoMLJobCompletionCriteria {
  public static final String SERIALIZED_NAME_MAX_CANDIDATES = "MaxCandidates";
  @SerializedName(SERIALIZED_NAME_MAX_CANDIDATES)
  private Integer maxCandidates;

  public static final String SERIALIZED_NAME_MAX_RUNTIME_PER_TRAINING_JOB_IN_SECONDS = "MaxRuntimePerTrainingJobInSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_RUNTIME_PER_TRAINING_JOB_IN_SECONDS)
  private Integer maxRuntimePerTrainingJobInSeconds;

  public static final String SERIALIZED_NAME_MAX_AUTO_M_L_JOB_RUNTIME_IN_SECONDS = "MaxAutoMLJobRuntimeInSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_AUTO_M_L_JOB_RUNTIME_IN_SECONDS)
  private Integer maxAutoMLJobRuntimeInSeconds;

  public AutoMLJobCompletionCriteria() {
  }

  public AutoMLJobCompletionCriteria maxCandidates(Integer maxCandidates) {
    this.maxCandidates = maxCandidates;
    return this;
  }

  /**
   * Get maxCandidates
   * @return maxCandidates
   */
  @javax.annotation.Nullable
  public Integer getMaxCandidates() {
    return maxCandidates;
  }

  public void setMaxCandidates(Integer maxCandidates) {
    this.maxCandidates = maxCandidates;
  }


  public AutoMLJobCompletionCriteria maxRuntimePerTrainingJobInSeconds(Integer maxRuntimePerTrainingJobInSeconds) {
    this.maxRuntimePerTrainingJobInSeconds = maxRuntimePerTrainingJobInSeconds;
    return this;
  }

  /**
   * Get maxRuntimePerTrainingJobInSeconds
   * @return maxRuntimePerTrainingJobInSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxRuntimePerTrainingJobInSeconds() {
    return maxRuntimePerTrainingJobInSeconds;
  }

  public void setMaxRuntimePerTrainingJobInSeconds(Integer maxRuntimePerTrainingJobInSeconds) {
    this.maxRuntimePerTrainingJobInSeconds = maxRuntimePerTrainingJobInSeconds;
  }


  public AutoMLJobCompletionCriteria maxAutoMLJobRuntimeInSeconds(Integer maxAutoMLJobRuntimeInSeconds) {
    this.maxAutoMLJobRuntimeInSeconds = maxAutoMLJobRuntimeInSeconds;
    return this;
  }

  /**
   * Get maxAutoMLJobRuntimeInSeconds
   * @return maxAutoMLJobRuntimeInSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxAutoMLJobRuntimeInSeconds() {
    return maxAutoMLJobRuntimeInSeconds;
  }

  public void setMaxAutoMLJobRuntimeInSeconds(Integer maxAutoMLJobRuntimeInSeconds) {
    this.maxAutoMLJobRuntimeInSeconds = maxAutoMLJobRuntimeInSeconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoMLJobCompletionCriteria autoMLJobCompletionCriteria = (AutoMLJobCompletionCriteria) o;
    return Objects.equals(this.maxCandidates, autoMLJobCompletionCriteria.maxCandidates) &&
        Objects.equals(this.maxRuntimePerTrainingJobInSeconds, autoMLJobCompletionCriteria.maxRuntimePerTrainingJobInSeconds) &&
        Objects.equals(this.maxAutoMLJobRuntimeInSeconds, autoMLJobCompletionCriteria.maxAutoMLJobRuntimeInSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxCandidates, maxRuntimePerTrainingJobInSeconds, maxAutoMLJobRuntimeInSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoMLJobCompletionCriteria {\n");
    sb.append("    maxCandidates: ").append(toIndentedString(maxCandidates)).append("\n");
    sb.append("    maxRuntimePerTrainingJobInSeconds: ").append(toIndentedString(maxRuntimePerTrainingJobInSeconds)).append("\n");
    sb.append("    maxAutoMLJobRuntimeInSeconds: ").append(toIndentedString(maxAutoMLJobRuntimeInSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MaxCandidates");
    openapiFields.add("MaxRuntimePerTrainingJobInSeconds");
    openapiFields.add("MaxAutoMLJobRuntimeInSeconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoMLJobCompletionCriteria
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoMLJobCompletionCriteria.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoMLJobCompletionCriteria is not found in the empty JSON string", AutoMLJobCompletionCriteria.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoMLJobCompletionCriteria.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoMLJobCompletionCriteria` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MaxCandidates`
      if (jsonObj.get("MaxCandidates") != null && !jsonObj.get("MaxCandidates").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxCandidates"));
      }
      // validate the optional field `MaxRuntimePerTrainingJobInSeconds`
      if (jsonObj.get("MaxRuntimePerTrainingJobInSeconds") != null && !jsonObj.get("MaxRuntimePerTrainingJobInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxRuntimePerTrainingJobInSeconds"));
      }
      // validate the optional field `MaxAutoMLJobRuntimeInSeconds`
      if (jsonObj.get("MaxAutoMLJobRuntimeInSeconds") != null && !jsonObj.get("MaxAutoMLJobRuntimeInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxAutoMLJobRuntimeInSeconds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoMLJobCompletionCriteria.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoMLJobCompletionCriteria' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoMLJobCompletionCriteria> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoMLJobCompletionCriteria.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoMLJobCompletionCriteria>() {
           @Override
           public void write(JsonWriter out, AutoMLJobCompletionCriteria value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoMLJobCompletionCriteria read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoMLJobCompletionCriteria given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoMLJobCompletionCriteria
   * @throws IOException if the JSON string is invalid with respect to AutoMLJobCompletionCriteria
   */
  public static AutoMLJobCompletionCriteria fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoMLJobCompletionCriteria.class);
  }

  /**
   * Convert an instance of AutoMLJobCompletionCriteria to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

