/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UserSettingsCanvasAppSettings;
import org.openapitools.client.model.UserSettingsJupyterServerAppSettings;
import org.openapitools.client.model.UserSettingsKernelGatewayAppSettings;
import org.openapitools.client.model.UserSettingsRSessionAppSettings;
import org.openapitools.client.model.UserSettingsRStudioServerProAppSettings;
import org.openapitools.client.model.UserSettingsSharingSettings;
import org.openapitools.client.model.UserSettingsTensorBoardAppSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeDomainResponseDefaultUserSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeDomainResponseDefaultUserSettings {
  public static final String SERIALIZED_NAME_EXECUTION_ROLE = "ExecutionRole";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ROLE)
  private String executionRole;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_SHARING_SETTINGS = "SharingSettings";
  @SerializedName(SERIALIZED_NAME_SHARING_SETTINGS)
  private UserSettingsSharingSettings sharingSettings;

  public static final String SERIALIZED_NAME_JUPYTER_SERVER_APP_SETTINGS = "JupyterServerAppSettings";
  @SerializedName(SERIALIZED_NAME_JUPYTER_SERVER_APP_SETTINGS)
  private UserSettingsJupyterServerAppSettings jupyterServerAppSettings;

  public static final String SERIALIZED_NAME_KERNEL_GATEWAY_APP_SETTINGS = "KernelGatewayAppSettings";
  @SerializedName(SERIALIZED_NAME_KERNEL_GATEWAY_APP_SETTINGS)
  private UserSettingsKernelGatewayAppSettings kernelGatewayAppSettings;

  public static final String SERIALIZED_NAME_TENSOR_BOARD_APP_SETTINGS = "TensorBoardAppSettings";
  @SerializedName(SERIALIZED_NAME_TENSOR_BOARD_APP_SETTINGS)
  private UserSettingsTensorBoardAppSettings tensorBoardAppSettings;

  public static final String SERIALIZED_NAME_RSTUDIO_SERVER_PRO_APP_SETTINGS = "RStudioServerProAppSettings";
  @SerializedName(SERIALIZED_NAME_RSTUDIO_SERVER_PRO_APP_SETTINGS)
  private UserSettingsRStudioServerProAppSettings rstudioServerProAppSettings;

  public static final String SERIALIZED_NAME_RSESSION_APP_SETTINGS = "RSessionAppSettings";
  @SerializedName(SERIALIZED_NAME_RSESSION_APP_SETTINGS)
  private UserSettingsRSessionAppSettings rsessionAppSettings;

  public static final String SERIALIZED_NAME_CANVAS_APP_SETTINGS = "CanvasAppSettings";
  @SerializedName(SERIALIZED_NAME_CANVAS_APP_SETTINGS)
  private UserSettingsCanvasAppSettings canvasAppSettings;

  public DescribeDomainResponseDefaultUserSettings() {
  }

  public DescribeDomainResponseDefaultUserSettings executionRole(String executionRole) {
    this.executionRole = executionRole;
    return this;
  }

  /**
   * Get executionRole
   * @return executionRole
   */
  @javax.annotation.Nullable
  public String getExecutionRole() {
    return executionRole;
  }

  public void setExecutionRole(String executionRole) {
    this.executionRole = executionRole;
  }


  public DescribeDomainResponseDefaultUserSettings securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public DescribeDomainResponseDefaultUserSettings sharingSettings(UserSettingsSharingSettings sharingSettings) {
    this.sharingSettings = sharingSettings;
    return this;
  }

  /**
   * Get sharingSettings
   * @return sharingSettings
   */
  @javax.annotation.Nullable
  public UserSettingsSharingSettings getSharingSettings() {
    return sharingSettings;
  }

  public void setSharingSettings(UserSettingsSharingSettings sharingSettings) {
    this.sharingSettings = sharingSettings;
  }


  public DescribeDomainResponseDefaultUserSettings jupyterServerAppSettings(UserSettingsJupyterServerAppSettings jupyterServerAppSettings) {
    this.jupyterServerAppSettings = jupyterServerAppSettings;
    return this;
  }

  /**
   * Get jupyterServerAppSettings
   * @return jupyterServerAppSettings
   */
  @javax.annotation.Nullable
  public UserSettingsJupyterServerAppSettings getJupyterServerAppSettings() {
    return jupyterServerAppSettings;
  }

  public void setJupyterServerAppSettings(UserSettingsJupyterServerAppSettings jupyterServerAppSettings) {
    this.jupyterServerAppSettings = jupyterServerAppSettings;
  }


  public DescribeDomainResponseDefaultUserSettings kernelGatewayAppSettings(UserSettingsKernelGatewayAppSettings kernelGatewayAppSettings) {
    this.kernelGatewayAppSettings = kernelGatewayAppSettings;
    return this;
  }

  /**
   * Get kernelGatewayAppSettings
   * @return kernelGatewayAppSettings
   */
  @javax.annotation.Nullable
  public UserSettingsKernelGatewayAppSettings getKernelGatewayAppSettings() {
    return kernelGatewayAppSettings;
  }

  public void setKernelGatewayAppSettings(UserSettingsKernelGatewayAppSettings kernelGatewayAppSettings) {
    this.kernelGatewayAppSettings = kernelGatewayAppSettings;
  }


  public DescribeDomainResponseDefaultUserSettings tensorBoardAppSettings(UserSettingsTensorBoardAppSettings tensorBoardAppSettings) {
    this.tensorBoardAppSettings = tensorBoardAppSettings;
    return this;
  }

  /**
   * Get tensorBoardAppSettings
   * @return tensorBoardAppSettings
   */
  @javax.annotation.Nullable
  public UserSettingsTensorBoardAppSettings getTensorBoardAppSettings() {
    return tensorBoardAppSettings;
  }

  public void setTensorBoardAppSettings(UserSettingsTensorBoardAppSettings tensorBoardAppSettings) {
    this.tensorBoardAppSettings = tensorBoardAppSettings;
  }


  public DescribeDomainResponseDefaultUserSettings rstudioServerProAppSettings(UserSettingsRStudioServerProAppSettings rstudioServerProAppSettings) {
    this.rstudioServerProAppSettings = rstudioServerProAppSettings;
    return this;
  }

  /**
   * Get rstudioServerProAppSettings
   * @return rstudioServerProAppSettings
   */
  @javax.annotation.Nullable
  public UserSettingsRStudioServerProAppSettings getRstudioServerProAppSettings() {
    return rstudioServerProAppSettings;
  }

  public void setRstudioServerProAppSettings(UserSettingsRStudioServerProAppSettings rstudioServerProAppSettings) {
    this.rstudioServerProAppSettings = rstudioServerProAppSettings;
  }


  public DescribeDomainResponseDefaultUserSettings rsessionAppSettings(UserSettingsRSessionAppSettings rsessionAppSettings) {
    this.rsessionAppSettings = rsessionAppSettings;
    return this;
  }

  /**
   * Get rsessionAppSettings
   * @return rsessionAppSettings
   */
  @javax.annotation.Nullable
  public UserSettingsRSessionAppSettings getRsessionAppSettings() {
    return rsessionAppSettings;
  }

  public void setRsessionAppSettings(UserSettingsRSessionAppSettings rsessionAppSettings) {
    this.rsessionAppSettings = rsessionAppSettings;
  }


  public DescribeDomainResponseDefaultUserSettings canvasAppSettings(UserSettingsCanvasAppSettings canvasAppSettings) {
    this.canvasAppSettings = canvasAppSettings;
    return this;
  }

  /**
   * Get canvasAppSettings
   * @return canvasAppSettings
   */
  @javax.annotation.Nullable
  public UserSettingsCanvasAppSettings getCanvasAppSettings() {
    return canvasAppSettings;
  }

  public void setCanvasAppSettings(UserSettingsCanvasAppSettings canvasAppSettings) {
    this.canvasAppSettings = canvasAppSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDomainResponseDefaultUserSettings describeDomainResponseDefaultUserSettings = (DescribeDomainResponseDefaultUserSettings) o;
    return Objects.equals(this.executionRole, describeDomainResponseDefaultUserSettings.executionRole) &&
        Objects.equals(this.securityGroups, describeDomainResponseDefaultUserSettings.securityGroups) &&
        Objects.equals(this.sharingSettings, describeDomainResponseDefaultUserSettings.sharingSettings) &&
        Objects.equals(this.jupyterServerAppSettings, describeDomainResponseDefaultUserSettings.jupyterServerAppSettings) &&
        Objects.equals(this.kernelGatewayAppSettings, describeDomainResponseDefaultUserSettings.kernelGatewayAppSettings) &&
        Objects.equals(this.tensorBoardAppSettings, describeDomainResponseDefaultUserSettings.tensorBoardAppSettings) &&
        Objects.equals(this.rstudioServerProAppSettings, describeDomainResponseDefaultUserSettings.rstudioServerProAppSettings) &&
        Objects.equals(this.rsessionAppSettings, describeDomainResponseDefaultUserSettings.rsessionAppSettings) &&
        Objects.equals(this.canvasAppSettings, describeDomainResponseDefaultUserSettings.canvasAppSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executionRole, securityGroups, sharingSettings, jupyterServerAppSettings, kernelGatewayAppSettings, tensorBoardAppSettings, rstudioServerProAppSettings, rsessionAppSettings, canvasAppSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDomainResponseDefaultUserSettings {\n");
    sb.append("    executionRole: ").append(toIndentedString(executionRole)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    sharingSettings: ").append(toIndentedString(sharingSettings)).append("\n");
    sb.append("    jupyterServerAppSettings: ").append(toIndentedString(jupyterServerAppSettings)).append("\n");
    sb.append("    kernelGatewayAppSettings: ").append(toIndentedString(kernelGatewayAppSettings)).append("\n");
    sb.append("    tensorBoardAppSettings: ").append(toIndentedString(tensorBoardAppSettings)).append("\n");
    sb.append("    rstudioServerProAppSettings: ").append(toIndentedString(rstudioServerProAppSettings)).append("\n");
    sb.append("    rsessionAppSettings: ").append(toIndentedString(rsessionAppSettings)).append("\n");
    sb.append("    canvasAppSettings: ").append(toIndentedString(canvasAppSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ExecutionRole");
    openapiFields.add("SecurityGroups");
    openapiFields.add("SharingSettings");
    openapiFields.add("JupyterServerAppSettings");
    openapiFields.add("KernelGatewayAppSettings");
    openapiFields.add("TensorBoardAppSettings");
    openapiFields.add("RStudioServerProAppSettings");
    openapiFields.add("RSessionAppSettings");
    openapiFields.add("CanvasAppSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeDomainResponseDefaultUserSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeDomainResponseDefaultUserSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeDomainResponseDefaultUserSettings is not found in the empty JSON string", DescribeDomainResponseDefaultUserSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeDomainResponseDefaultUserSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeDomainResponseDefaultUserSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ExecutionRole`
      if (jsonObj.get("ExecutionRole") != null && !jsonObj.get("ExecutionRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionRole"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `SharingSettings`
      if (jsonObj.get("SharingSettings") != null && !jsonObj.get("SharingSettings").isJsonNull()) {
        UserSettingsSharingSettings.validateJsonElement(jsonObj.get("SharingSettings"));
      }
      // validate the optional field `JupyterServerAppSettings`
      if (jsonObj.get("JupyterServerAppSettings") != null && !jsonObj.get("JupyterServerAppSettings").isJsonNull()) {
        UserSettingsJupyterServerAppSettings.validateJsonElement(jsonObj.get("JupyterServerAppSettings"));
      }
      // validate the optional field `KernelGatewayAppSettings`
      if (jsonObj.get("KernelGatewayAppSettings") != null && !jsonObj.get("KernelGatewayAppSettings").isJsonNull()) {
        UserSettingsKernelGatewayAppSettings.validateJsonElement(jsonObj.get("KernelGatewayAppSettings"));
      }
      // validate the optional field `TensorBoardAppSettings`
      if (jsonObj.get("TensorBoardAppSettings") != null && !jsonObj.get("TensorBoardAppSettings").isJsonNull()) {
        UserSettingsTensorBoardAppSettings.validateJsonElement(jsonObj.get("TensorBoardAppSettings"));
      }
      // validate the optional field `RStudioServerProAppSettings`
      if (jsonObj.get("RStudioServerProAppSettings") != null && !jsonObj.get("RStudioServerProAppSettings").isJsonNull()) {
        UserSettingsRStudioServerProAppSettings.validateJsonElement(jsonObj.get("RStudioServerProAppSettings"));
      }
      // validate the optional field `RSessionAppSettings`
      if (jsonObj.get("RSessionAppSettings") != null && !jsonObj.get("RSessionAppSettings").isJsonNull()) {
        UserSettingsRSessionAppSettings.validateJsonElement(jsonObj.get("RSessionAppSettings"));
      }
      // validate the optional field `CanvasAppSettings`
      if (jsonObj.get("CanvasAppSettings") != null && !jsonObj.get("CanvasAppSettings").isJsonNull()) {
        UserSettingsCanvasAppSettings.validateJsonElement(jsonObj.get("CanvasAppSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeDomainResponseDefaultUserSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeDomainResponseDefaultUserSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeDomainResponseDefaultUserSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeDomainResponseDefaultUserSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeDomainResponseDefaultUserSettings>() {
           @Override
           public void write(JsonWriter out, DescribeDomainResponseDefaultUserSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeDomainResponseDefaultUserSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeDomainResponseDefaultUserSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeDomainResponseDefaultUserSettings
   * @throws IOException if the JSON string is invalid with respect to DescribeDomainResponseDefaultUserSettings
   */
  public static DescribeDomainResponseDefaultUserSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeDomainResponseDefaultUserSettings.class);
  }

  /**
   * Convert an instance of DescribeDomainResponseDefaultUserSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

