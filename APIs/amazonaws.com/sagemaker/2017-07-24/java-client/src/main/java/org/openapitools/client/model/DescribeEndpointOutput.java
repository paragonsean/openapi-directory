/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DataCaptureConfigSummary;
import org.openapitools.client.model.DescribeEndpointOutputAsyncInferenceConfig;
import org.openapitools.client.model.DescribeEndpointOutputExplainerConfig;
import org.openapitools.client.model.DescribeEndpointOutputLastDeploymentConfig;
import org.openapitools.client.model.DescribeEndpointOutputPendingDeploymentSummary;
import org.openapitools.client.model.EndpointStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeEndpointOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeEndpointOutput {
  public static final String SERIALIZED_NAME_ENDPOINT_NAME = "EndpointName";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_NAME)
  private String endpointName;

  public static final String SERIALIZED_NAME_ENDPOINT_ARN = "EndpointArn";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_ARN)
  private String endpointArn;

  public static final String SERIALIZED_NAME_ENDPOINT_CONFIG_NAME = "EndpointConfigName";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_CONFIG_NAME)
  private String endpointConfigName;

  public static final String SERIALIZED_NAME_PRODUCTION_VARIANTS = "ProductionVariants";
  @SerializedName(SERIALIZED_NAME_PRODUCTION_VARIANTS)
  private List productionVariants;

  public static final String SERIALIZED_NAME_DATA_CAPTURE_CONFIG = "DataCaptureConfig";
  @SerializedName(SERIALIZED_NAME_DATA_CAPTURE_CONFIG)
  private DataCaptureConfigSummary dataCaptureConfig;

  public static final String SERIALIZED_NAME_ENDPOINT_STATUS = "EndpointStatus";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_STATUS)
  private EndpointStatus endpointStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_DEPLOYMENT_CONFIG = "LastDeploymentConfig";
  @SerializedName(SERIALIZED_NAME_LAST_DEPLOYMENT_CONFIG)
  private DescribeEndpointOutputLastDeploymentConfig lastDeploymentConfig;

  public static final String SERIALIZED_NAME_ASYNC_INFERENCE_CONFIG = "AsyncInferenceConfig";
  @SerializedName(SERIALIZED_NAME_ASYNC_INFERENCE_CONFIG)
  private DescribeEndpointOutputAsyncInferenceConfig asyncInferenceConfig;

  public static final String SERIALIZED_NAME_PENDING_DEPLOYMENT_SUMMARY = "PendingDeploymentSummary";
  @SerializedName(SERIALIZED_NAME_PENDING_DEPLOYMENT_SUMMARY)
  private DescribeEndpointOutputPendingDeploymentSummary pendingDeploymentSummary;

  public static final String SERIALIZED_NAME_EXPLAINER_CONFIG = "ExplainerConfig";
  @SerializedName(SERIALIZED_NAME_EXPLAINER_CONFIG)
  private DescribeEndpointOutputExplainerConfig explainerConfig;

  public static final String SERIALIZED_NAME_SHADOW_PRODUCTION_VARIANTS = "ShadowProductionVariants";
  @SerializedName(SERIALIZED_NAME_SHADOW_PRODUCTION_VARIANTS)
  private List shadowProductionVariants;

  public DescribeEndpointOutput() {
  }

  public DescribeEndpointOutput endpointName(String endpointName) {
    this.endpointName = endpointName;
    return this;
  }

  /**
   * Get endpointName
   * @return endpointName
   */
  @javax.annotation.Nonnull
  public String getEndpointName() {
    return endpointName;
  }

  public void setEndpointName(String endpointName) {
    this.endpointName = endpointName;
  }


  public DescribeEndpointOutput endpointArn(String endpointArn) {
    this.endpointArn = endpointArn;
    return this;
  }

  /**
   * Get endpointArn
   * @return endpointArn
   */
  @javax.annotation.Nonnull
  public String getEndpointArn() {
    return endpointArn;
  }

  public void setEndpointArn(String endpointArn) {
    this.endpointArn = endpointArn;
  }


  public DescribeEndpointOutput endpointConfigName(String endpointConfigName) {
    this.endpointConfigName = endpointConfigName;
    return this;
  }

  /**
   * Get endpointConfigName
   * @return endpointConfigName
   */
  @javax.annotation.Nonnull
  public String getEndpointConfigName() {
    return endpointConfigName;
  }

  public void setEndpointConfigName(String endpointConfigName) {
    this.endpointConfigName = endpointConfigName;
  }


  public DescribeEndpointOutput productionVariants(List productionVariants) {
    this.productionVariants = productionVariants;
    return this;
  }

  /**
   * Get productionVariants
   * @return productionVariants
   */
  @javax.annotation.Nullable
  public List getProductionVariants() {
    return productionVariants;
  }

  public void setProductionVariants(List productionVariants) {
    this.productionVariants = productionVariants;
  }


  public DescribeEndpointOutput dataCaptureConfig(DataCaptureConfigSummary dataCaptureConfig) {
    this.dataCaptureConfig = dataCaptureConfig;
    return this;
  }

  /**
   * Get dataCaptureConfig
   * @return dataCaptureConfig
   */
  @javax.annotation.Nullable
  public DataCaptureConfigSummary getDataCaptureConfig() {
    return dataCaptureConfig;
  }

  public void setDataCaptureConfig(DataCaptureConfigSummary dataCaptureConfig) {
    this.dataCaptureConfig = dataCaptureConfig;
  }


  public DescribeEndpointOutput endpointStatus(EndpointStatus endpointStatus) {
    this.endpointStatus = endpointStatus;
    return this;
  }

  /**
   * Get endpointStatus
   * @return endpointStatus
   */
  @javax.annotation.Nonnull
  public EndpointStatus getEndpointStatus() {
    return endpointStatus;
  }

  public void setEndpointStatus(EndpointStatus endpointStatus) {
    this.endpointStatus = endpointStatus;
  }


  public DescribeEndpointOutput failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeEndpointOutput creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeEndpointOutput lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeEndpointOutput lastDeploymentConfig(DescribeEndpointOutputLastDeploymentConfig lastDeploymentConfig) {
    this.lastDeploymentConfig = lastDeploymentConfig;
    return this;
  }

  /**
   * Get lastDeploymentConfig
   * @return lastDeploymentConfig
   */
  @javax.annotation.Nullable
  public DescribeEndpointOutputLastDeploymentConfig getLastDeploymentConfig() {
    return lastDeploymentConfig;
  }

  public void setLastDeploymentConfig(DescribeEndpointOutputLastDeploymentConfig lastDeploymentConfig) {
    this.lastDeploymentConfig = lastDeploymentConfig;
  }


  public DescribeEndpointOutput asyncInferenceConfig(DescribeEndpointOutputAsyncInferenceConfig asyncInferenceConfig) {
    this.asyncInferenceConfig = asyncInferenceConfig;
    return this;
  }

  /**
   * Get asyncInferenceConfig
   * @return asyncInferenceConfig
   */
  @javax.annotation.Nullable
  public DescribeEndpointOutputAsyncInferenceConfig getAsyncInferenceConfig() {
    return asyncInferenceConfig;
  }

  public void setAsyncInferenceConfig(DescribeEndpointOutputAsyncInferenceConfig asyncInferenceConfig) {
    this.asyncInferenceConfig = asyncInferenceConfig;
  }


  public DescribeEndpointOutput pendingDeploymentSummary(DescribeEndpointOutputPendingDeploymentSummary pendingDeploymentSummary) {
    this.pendingDeploymentSummary = pendingDeploymentSummary;
    return this;
  }

  /**
   * Get pendingDeploymentSummary
   * @return pendingDeploymentSummary
   */
  @javax.annotation.Nullable
  public DescribeEndpointOutputPendingDeploymentSummary getPendingDeploymentSummary() {
    return pendingDeploymentSummary;
  }

  public void setPendingDeploymentSummary(DescribeEndpointOutputPendingDeploymentSummary pendingDeploymentSummary) {
    this.pendingDeploymentSummary = pendingDeploymentSummary;
  }


  public DescribeEndpointOutput explainerConfig(DescribeEndpointOutputExplainerConfig explainerConfig) {
    this.explainerConfig = explainerConfig;
    return this;
  }

  /**
   * Get explainerConfig
   * @return explainerConfig
   */
  @javax.annotation.Nullable
  public DescribeEndpointOutputExplainerConfig getExplainerConfig() {
    return explainerConfig;
  }

  public void setExplainerConfig(DescribeEndpointOutputExplainerConfig explainerConfig) {
    this.explainerConfig = explainerConfig;
  }


  public DescribeEndpointOutput shadowProductionVariants(List shadowProductionVariants) {
    this.shadowProductionVariants = shadowProductionVariants;
    return this;
  }

  /**
   * Get shadowProductionVariants
   * @return shadowProductionVariants
   */
  @javax.annotation.Nullable
  public List getShadowProductionVariants() {
    return shadowProductionVariants;
  }

  public void setShadowProductionVariants(List shadowProductionVariants) {
    this.shadowProductionVariants = shadowProductionVariants;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeEndpointOutput describeEndpointOutput = (DescribeEndpointOutput) o;
    return Objects.equals(this.endpointName, describeEndpointOutput.endpointName) &&
        Objects.equals(this.endpointArn, describeEndpointOutput.endpointArn) &&
        Objects.equals(this.endpointConfigName, describeEndpointOutput.endpointConfigName) &&
        Objects.equals(this.productionVariants, describeEndpointOutput.productionVariants) &&
        Objects.equals(this.dataCaptureConfig, describeEndpointOutput.dataCaptureConfig) &&
        Objects.equals(this.endpointStatus, describeEndpointOutput.endpointStatus) &&
        Objects.equals(this.failureReason, describeEndpointOutput.failureReason) &&
        Objects.equals(this.creationTime, describeEndpointOutput.creationTime) &&
        Objects.equals(this.lastModifiedTime, describeEndpointOutput.lastModifiedTime) &&
        Objects.equals(this.lastDeploymentConfig, describeEndpointOutput.lastDeploymentConfig) &&
        Objects.equals(this.asyncInferenceConfig, describeEndpointOutput.asyncInferenceConfig) &&
        Objects.equals(this.pendingDeploymentSummary, describeEndpointOutput.pendingDeploymentSummary) &&
        Objects.equals(this.explainerConfig, describeEndpointOutput.explainerConfig) &&
        Objects.equals(this.shadowProductionVariants, describeEndpointOutput.shadowProductionVariants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointName, endpointArn, endpointConfigName, productionVariants, dataCaptureConfig, endpointStatus, failureReason, creationTime, lastModifiedTime, lastDeploymentConfig, asyncInferenceConfig, pendingDeploymentSummary, explainerConfig, shadowProductionVariants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeEndpointOutput {\n");
    sb.append("    endpointName: ").append(toIndentedString(endpointName)).append("\n");
    sb.append("    endpointArn: ").append(toIndentedString(endpointArn)).append("\n");
    sb.append("    endpointConfigName: ").append(toIndentedString(endpointConfigName)).append("\n");
    sb.append("    productionVariants: ").append(toIndentedString(productionVariants)).append("\n");
    sb.append("    dataCaptureConfig: ").append(toIndentedString(dataCaptureConfig)).append("\n");
    sb.append("    endpointStatus: ").append(toIndentedString(endpointStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastDeploymentConfig: ").append(toIndentedString(lastDeploymentConfig)).append("\n");
    sb.append("    asyncInferenceConfig: ").append(toIndentedString(asyncInferenceConfig)).append("\n");
    sb.append("    pendingDeploymentSummary: ").append(toIndentedString(pendingDeploymentSummary)).append("\n");
    sb.append("    explainerConfig: ").append(toIndentedString(explainerConfig)).append("\n");
    sb.append("    shadowProductionVariants: ").append(toIndentedString(shadowProductionVariants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointName");
    openapiFields.add("EndpointArn");
    openapiFields.add("EndpointConfigName");
    openapiFields.add("ProductionVariants");
    openapiFields.add("DataCaptureConfig");
    openapiFields.add("EndpointStatus");
    openapiFields.add("FailureReason");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastDeploymentConfig");
    openapiFields.add("AsyncInferenceConfig");
    openapiFields.add("PendingDeploymentSummary");
    openapiFields.add("ExplainerConfig");
    openapiFields.add("ShadowProductionVariants");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EndpointName");
    openapiRequiredFields.add("EndpointArn");
    openapiRequiredFields.add("EndpointConfigName");
    openapiRequiredFields.add("EndpointStatus");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("LastModifiedTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeEndpointOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeEndpointOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeEndpointOutput is not found in the empty JSON string", DescribeEndpointOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeEndpointOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeEndpointOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeEndpointOutput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EndpointName`
      String.validateJsonElement(jsonObj.get("EndpointName"));
      // validate the required field `EndpointArn`
      String.validateJsonElement(jsonObj.get("EndpointArn"));
      // validate the required field `EndpointConfigName`
      String.validateJsonElement(jsonObj.get("EndpointConfigName"));
      // validate the optional field `ProductionVariants`
      if (jsonObj.get("ProductionVariants") != null && !jsonObj.get("ProductionVariants").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ProductionVariants"));
      }
      // validate the optional field `DataCaptureConfig`
      if (jsonObj.get("DataCaptureConfig") != null && !jsonObj.get("DataCaptureConfig").isJsonNull()) {
        DataCaptureConfigSummary.validateJsonElement(jsonObj.get("DataCaptureConfig"));
      }
      // validate the required field `EndpointStatus`
      EndpointStatus.validateJsonElement(jsonObj.get("EndpointStatus"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the required field `LastModifiedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      // validate the optional field `LastDeploymentConfig`
      if (jsonObj.get("LastDeploymentConfig") != null && !jsonObj.get("LastDeploymentConfig").isJsonNull()) {
        DescribeEndpointOutputLastDeploymentConfig.validateJsonElement(jsonObj.get("LastDeploymentConfig"));
      }
      // validate the optional field `AsyncInferenceConfig`
      if (jsonObj.get("AsyncInferenceConfig") != null && !jsonObj.get("AsyncInferenceConfig").isJsonNull()) {
        DescribeEndpointOutputAsyncInferenceConfig.validateJsonElement(jsonObj.get("AsyncInferenceConfig"));
      }
      // validate the optional field `PendingDeploymentSummary`
      if (jsonObj.get("PendingDeploymentSummary") != null && !jsonObj.get("PendingDeploymentSummary").isJsonNull()) {
        DescribeEndpointOutputPendingDeploymentSummary.validateJsonElement(jsonObj.get("PendingDeploymentSummary"));
      }
      // validate the optional field `ExplainerConfig`
      if (jsonObj.get("ExplainerConfig") != null && !jsonObj.get("ExplainerConfig").isJsonNull()) {
        DescribeEndpointOutputExplainerConfig.validateJsonElement(jsonObj.get("ExplainerConfig"));
      }
      // validate the optional field `ShadowProductionVariants`
      if (jsonObj.get("ShadowProductionVariants") != null && !jsonObj.get("ShadowProductionVariants").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ShadowProductionVariants"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeEndpointOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeEndpointOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeEndpointOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeEndpointOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeEndpointOutput>() {
           @Override
           public void write(JsonWriter out, DescribeEndpointOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeEndpointOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeEndpointOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeEndpointOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeEndpointOutput
   */
  public static DescribeEndpointOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeEndpointOutput.class);
  }

  /**
   * Convert an instance of DescribeEndpointOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

