/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RecommendationJobContainerConfigPayloadConfig;
import org.openapitools.client.model.RecommendationJobSupportedEndpointType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RecommendationJobInputConfigContainerConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RecommendationJobInputConfigContainerConfig {
  public static final String SERIALIZED_NAME_DOMAIN = "Domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_TASK = "Task";
  @SerializedName(SERIALIZED_NAME_TASK)
  private String task;

  public static final String SERIALIZED_NAME_FRAMEWORK = "Framework";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK)
  private String framework;

  public static final String SERIALIZED_NAME_FRAMEWORK_VERSION = "FrameworkVersion";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK_VERSION)
  private String frameworkVersion;

  public static final String SERIALIZED_NAME_PAYLOAD_CONFIG = "PayloadConfig";
  @SerializedName(SERIALIZED_NAME_PAYLOAD_CONFIG)
  private RecommendationJobContainerConfigPayloadConfig payloadConfig;

  public static final String SERIALIZED_NAME_NEAREST_MODEL_NAME = "NearestModelName";
  @SerializedName(SERIALIZED_NAME_NEAREST_MODEL_NAME)
  private String nearestModelName;

  public static final String SERIALIZED_NAME_SUPPORTED_INSTANCE_TYPES = "SupportedInstanceTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_INSTANCE_TYPES)
  private List supportedInstanceTypes;

  public static final String SERIALIZED_NAME_DATA_INPUT_CONFIG = "DataInputConfig";
  @SerializedName(SERIALIZED_NAME_DATA_INPUT_CONFIG)
  private String dataInputConfig;

  public static final String SERIALIZED_NAME_SUPPORTED_ENDPOINT_TYPE = "SupportedEndpointType";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_ENDPOINT_TYPE)
  private RecommendationJobSupportedEndpointType supportedEndpointType;

  public RecommendationJobInputConfigContainerConfig() {
  }

  public RecommendationJobInputConfigContainerConfig domain(String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  public RecommendationJobInputConfigContainerConfig task(String task) {
    this.task = task;
    return this;
  }

  /**
   * Get task
   * @return task
   */
  @javax.annotation.Nullable
  public String getTask() {
    return task;
  }

  public void setTask(String task) {
    this.task = task;
  }


  public RecommendationJobInputConfigContainerConfig framework(String framework) {
    this.framework = framework;
    return this;
  }

  /**
   * Get framework
   * @return framework
   */
  @javax.annotation.Nullable
  public String getFramework() {
    return framework;
  }

  public void setFramework(String framework) {
    this.framework = framework;
  }


  public RecommendationJobInputConfigContainerConfig frameworkVersion(String frameworkVersion) {
    this.frameworkVersion = frameworkVersion;
    return this;
  }

  /**
   * Get frameworkVersion
   * @return frameworkVersion
   */
  @javax.annotation.Nullable
  public String getFrameworkVersion() {
    return frameworkVersion;
  }

  public void setFrameworkVersion(String frameworkVersion) {
    this.frameworkVersion = frameworkVersion;
  }


  public RecommendationJobInputConfigContainerConfig payloadConfig(RecommendationJobContainerConfigPayloadConfig payloadConfig) {
    this.payloadConfig = payloadConfig;
    return this;
  }

  /**
   * Get payloadConfig
   * @return payloadConfig
   */
  @javax.annotation.Nullable
  public RecommendationJobContainerConfigPayloadConfig getPayloadConfig() {
    return payloadConfig;
  }

  public void setPayloadConfig(RecommendationJobContainerConfigPayloadConfig payloadConfig) {
    this.payloadConfig = payloadConfig;
  }


  public RecommendationJobInputConfigContainerConfig nearestModelName(String nearestModelName) {
    this.nearestModelName = nearestModelName;
    return this;
  }

  /**
   * Get nearestModelName
   * @return nearestModelName
   */
  @javax.annotation.Nullable
  public String getNearestModelName() {
    return nearestModelName;
  }

  public void setNearestModelName(String nearestModelName) {
    this.nearestModelName = nearestModelName;
  }


  public RecommendationJobInputConfigContainerConfig supportedInstanceTypes(List supportedInstanceTypes) {
    this.supportedInstanceTypes = supportedInstanceTypes;
    return this;
  }

  /**
   * Get supportedInstanceTypes
   * @return supportedInstanceTypes
   */
  @javax.annotation.Nullable
  public List getSupportedInstanceTypes() {
    return supportedInstanceTypes;
  }

  public void setSupportedInstanceTypes(List supportedInstanceTypes) {
    this.supportedInstanceTypes = supportedInstanceTypes;
  }


  public RecommendationJobInputConfigContainerConfig dataInputConfig(String dataInputConfig) {
    this.dataInputConfig = dataInputConfig;
    return this;
  }

  /**
   * Get dataInputConfig
   * @return dataInputConfig
   */
  @javax.annotation.Nullable
  public String getDataInputConfig() {
    return dataInputConfig;
  }

  public void setDataInputConfig(String dataInputConfig) {
    this.dataInputConfig = dataInputConfig;
  }


  public RecommendationJobInputConfigContainerConfig supportedEndpointType(RecommendationJobSupportedEndpointType supportedEndpointType) {
    this.supportedEndpointType = supportedEndpointType;
    return this;
  }

  /**
   * Get supportedEndpointType
   * @return supportedEndpointType
   */
  @javax.annotation.Nullable
  public RecommendationJobSupportedEndpointType getSupportedEndpointType() {
    return supportedEndpointType;
  }

  public void setSupportedEndpointType(RecommendationJobSupportedEndpointType supportedEndpointType) {
    this.supportedEndpointType = supportedEndpointType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecommendationJobInputConfigContainerConfig recommendationJobInputConfigContainerConfig = (RecommendationJobInputConfigContainerConfig) o;
    return Objects.equals(this.domain, recommendationJobInputConfigContainerConfig.domain) &&
        Objects.equals(this.task, recommendationJobInputConfigContainerConfig.task) &&
        Objects.equals(this.framework, recommendationJobInputConfigContainerConfig.framework) &&
        Objects.equals(this.frameworkVersion, recommendationJobInputConfigContainerConfig.frameworkVersion) &&
        Objects.equals(this.payloadConfig, recommendationJobInputConfigContainerConfig.payloadConfig) &&
        Objects.equals(this.nearestModelName, recommendationJobInputConfigContainerConfig.nearestModelName) &&
        Objects.equals(this.supportedInstanceTypes, recommendationJobInputConfigContainerConfig.supportedInstanceTypes) &&
        Objects.equals(this.dataInputConfig, recommendationJobInputConfigContainerConfig.dataInputConfig) &&
        Objects.equals(this.supportedEndpointType, recommendationJobInputConfigContainerConfig.supportedEndpointType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, task, framework, frameworkVersion, payloadConfig, nearestModelName, supportedInstanceTypes, dataInputConfig, supportedEndpointType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecommendationJobInputConfigContainerConfig {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    framework: ").append(toIndentedString(framework)).append("\n");
    sb.append("    frameworkVersion: ").append(toIndentedString(frameworkVersion)).append("\n");
    sb.append("    payloadConfig: ").append(toIndentedString(payloadConfig)).append("\n");
    sb.append("    nearestModelName: ").append(toIndentedString(nearestModelName)).append("\n");
    sb.append("    supportedInstanceTypes: ").append(toIndentedString(supportedInstanceTypes)).append("\n");
    sb.append("    dataInputConfig: ").append(toIndentedString(dataInputConfig)).append("\n");
    sb.append("    supportedEndpointType: ").append(toIndentedString(supportedEndpointType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Domain");
    openapiFields.add("Task");
    openapiFields.add("Framework");
    openapiFields.add("FrameworkVersion");
    openapiFields.add("PayloadConfig");
    openapiFields.add("NearestModelName");
    openapiFields.add("SupportedInstanceTypes");
    openapiFields.add("DataInputConfig");
    openapiFields.add("SupportedEndpointType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RecommendationJobInputConfigContainerConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RecommendationJobInputConfigContainerConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecommendationJobInputConfigContainerConfig is not found in the empty JSON string", RecommendationJobInputConfigContainerConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RecommendationJobInputConfigContainerConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecommendationJobInputConfigContainerConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Domain`
      if (jsonObj.get("Domain") != null && !jsonObj.get("Domain").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Domain"));
      }
      // validate the optional field `Task`
      if (jsonObj.get("Task") != null && !jsonObj.get("Task").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Task"));
      }
      // validate the optional field `Framework`
      if (jsonObj.get("Framework") != null && !jsonObj.get("Framework").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Framework"));
      }
      // validate the optional field `FrameworkVersion`
      if (jsonObj.get("FrameworkVersion") != null && !jsonObj.get("FrameworkVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FrameworkVersion"));
      }
      // validate the optional field `PayloadConfig`
      if (jsonObj.get("PayloadConfig") != null && !jsonObj.get("PayloadConfig").isJsonNull()) {
        RecommendationJobContainerConfigPayloadConfig.validateJsonElement(jsonObj.get("PayloadConfig"));
      }
      // validate the optional field `NearestModelName`
      if (jsonObj.get("NearestModelName") != null && !jsonObj.get("NearestModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NearestModelName"));
      }
      // validate the optional field `SupportedInstanceTypes`
      if (jsonObj.get("SupportedInstanceTypes") != null && !jsonObj.get("SupportedInstanceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SupportedInstanceTypes"));
      }
      // validate the optional field `DataInputConfig`
      if (jsonObj.get("DataInputConfig") != null && !jsonObj.get("DataInputConfig").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DataInputConfig"));
      }
      // validate the optional field `SupportedEndpointType`
      if (jsonObj.get("SupportedEndpointType") != null && !jsonObj.get("SupportedEndpointType").isJsonNull()) {
        RecommendationJobSupportedEndpointType.validateJsonElement(jsonObj.get("SupportedEndpointType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecommendationJobInputConfigContainerConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecommendationJobInputConfigContainerConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecommendationJobInputConfigContainerConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecommendationJobInputConfigContainerConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<RecommendationJobInputConfigContainerConfig>() {
           @Override
           public void write(JsonWriter out, RecommendationJobInputConfigContainerConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RecommendationJobInputConfigContainerConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RecommendationJobInputConfigContainerConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RecommendationJobInputConfigContainerConfig
   * @throws IOException if the JSON string is invalid with respect to RecommendationJobInputConfigContainerConfig
   */
  public static RecommendationJobInputConfigContainerConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecommendationJobInputConfigContainerConfig.class);
  }

  /**
   * Convert an instance of RecommendationJobInputConfigContainerConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

