/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeEdgeDeploymentPlanResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeEdgeDeploymentPlanResponse {
  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_ARN = "EdgeDeploymentPlanArn";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_ARN)
  private String edgeDeploymentPlanArn;

  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_NAME = "EdgeDeploymentPlanName";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_PLAN_NAME)
  private String edgeDeploymentPlanName;

  public static final String SERIALIZED_NAME_MODEL_CONFIGS = "ModelConfigs";
  @SerializedName(SERIALIZED_NAME_MODEL_CONFIGS)
  private List modelConfigs;

  public static final String SERIALIZED_NAME_DEVICE_FLEET_NAME = "DeviceFleetName";
  @SerializedName(SERIALIZED_NAME_DEVICE_FLEET_NAME)
  private String deviceFleetName;

  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_SUCCESS = "EdgeDeploymentSuccess";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_SUCCESS)
  private Integer edgeDeploymentSuccess;

  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_PENDING = "EdgeDeploymentPending";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_PENDING)
  private Integer edgeDeploymentPending;

  public static final String SERIALIZED_NAME_EDGE_DEPLOYMENT_FAILED = "EdgeDeploymentFailed";
  @SerializedName(SERIALIZED_NAME_EDGE_DEPLOYMENT_FAILED)
  private Integer edgeDeploymentFailed;

  public static final String SERIALIZED_NAME_STAGES = "Stages";
  @SerializedName(SERIALIZED_NAME_STAGES)
  private List stages;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public DescribeEdgeDeploymentPlanResponse() {
  }

  public DescribeEdgeDeploymentPlanResponse edgeDeploymentPlanArn(String edgeDeploymentPlanArn) {
    this.edgeDeploymentPlanArn = edgeDeploymentPlanArn;
    return this;
  }

  /**
   * Get edgeDeploymentPlanArn
   * @return edgeDeploymentPlanArn
   */
  @javax.annotation.Nonnull
  public String getEdgeDeploymentPlanArn() {
    return edgeDeploymentPlanArn;
  }

  public void setEdgeDeploymentPlanArn(String edgeDeploymentPlanArn) {
    this.edgeDeploymentPlanArn = edgeDeploymentPlanArn;
  }


  public DescribeEdgeDeploymentPlanResponse edgeDeploymentPlanName(String edgeDeploymentPlanName) {
    this.edgeDeploymentPlanName = edgeDeploymentPlanName;
    return this;
  }

  /**
   * Get edgeDeploymentPlanName
   * @return edgeDeploymentPlanName
   */
  @javax.annotation.Nonnull
  public String getEdgeDeploymentPlanName() {
    return edgeDeploymentPlanName;
  }

  public void setEdgeDeploymentPlanName(String edgeDeploymentPlanName) {
    this.edgeDeploymentPlanName = edgeDeploymentPlanName;
  }


  public DescribeEdgeDeploymentPlanResponse modelConfigs(List modelConfigs) {
    this.modelConfigs = modelConfigs;
    return this;
  }

  /**
   * Get modelConfigs
   * @return modelConfigs
   */
  @javax.annotation.Nonnull
  public List getModelConfigs() {
    return modelConfigs;
  }

  public void setModelConfigs(List modelConfigs) {
    this.modelConfigs = modelConfigs;
  }


  public DescribeEdgeDeploymentPlanResponse deviceFleetName(String deviceFleetName) {
    this.deviceFleetName = deviceFleetName;
    return this;
  }

  /**
   * Get deviceFleetName
   * @return deviceFleetName
   */
  @javax.annotation.Nonnull
  public String getDeviceFleetName() {
    return deviceFleetName;
  }

  public void setDeviceFleetName(String deviceFleetName) {
    this.deviceFleetName = deviceFleetName;
  }


  public DescribeEdgeDeploymentPlanResponse edgeDeploymentSuccess(Integer edgeDeploymentSuccess) {
    this.edgeDeploymentSuccess = edgeDeploymentSuccess;
    return this;
  }

  /**
   * Get edgeDeploymentSuccess
   * @return edgeDeploymentSuccess
   */
  @javax.annotation.Nullable
  public Integer getEdgeDeploymentSuccess() {
    return edgeDeploymentSuccess;
  }

  public void setEdgeDeploymentSuccess(Integer edgeDeploymentSuccess) {
    this.edgeDeploymentSuccess = edgeDeploymentSuccess;
  }


  public DescribeEdgeDeploymentPlanResponse edgeDeploymentPending(Integer edgeDeploymentPending) {
    this.edgeDeploymentPending = edgeDeploymentPending;
    return this;
  }

  /**
   * Get edgeDeploymentPending
   * @return edgeDeploymentPending
   */
  @javax.annotation.Nullable
  public Integer getEdgeDeploymentPending() {
    return edgeDeploymentPending;
  }

  public void setEdgeDeploymentPending(Integer edgeDeploymentPending) {
    this.edgeDeploymentPending = edgeDeploymentPending;
  }


  public DescribeEdgeDeploymentPlanResponse edgeDeploymentFailed(Integer edgeDeploymentFailed) {
    this.edgeDeploymentFailed = edgeDeploymentFailed;
    return this;
  }

  /**
   * Get edgeDeploymentFailed
   * @return edgeDeploymentFailed
   */
  @javax.annotation.Nullable
  public Integer getEdgeDeploymentFailed() {
    return edgeDeploymentFailed;
  }

  public void setEdgeDeploymentFailed(Integer edgeDeploymentFailed) {
    this.edgeDeploymentFailed = edgeDeploymentFailed;
  }


  public DescribeEdgeDeploymentPlanResponse stages(List stages) {
    this.stages = stages;
    return this;
  }

  /**
   * Get stages
   * @return stages
   */
  @javax.annotation.Nonnull
  public List getStages() {
    return stages;
  }

  public void setStages(List stages) {
    this.stages = stages;
  }


  public DescribeEdgeDeploymentPlanResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public DescribeEdgeDeploymentPlanResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeEdgeDeploymentPlanResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeEdgeDeploymentPlanResponse describeEdgeDeploymentPlanResponse = (DescribeEdgeDeploymentPlanResponse) o;
    return Objects.equals(this.edgeDeploymentPlanArn, describeEdgeDeploymentPlanResponse.edgeDeploymentPlanArn) &&
        Objects.equals(this.edgeDeploymentPlanName, describeEdgeDeploymentPlanResponse.edgeDeploymentPlanName) &&
        Objects.equals(this.modelConfigs, describeEdgeDeploymentPlanResponse.modelConfigs) &&
        Objects.equals(this.deviceFleetName, describeEdgeDeploymentPlanResponse.deviceFleetName) &&
        Objects.equals(this.edgeDeploymentSuccess, describeEdgeDeploymentPlanResponse.edgeDeploymentSuccess) &&
        Objects.equals(this.edgeDeploymentPending, describeEdgeDeploymentPlanResponse.edgeDeploymentPending) &&
        Objects.equals(this.edgeDeploymentFailed, describeEdgeDeploymentPlanResponse.edgeDeploymentFailed) &&
        Objects.equals(this.stages, describeEdgeDeploymentPlanResponse.stages) &&
        Objects.equals(this.nextToken, describeEdgeDeploymentPlanResponse.nextToken) &&
        Objects.equals(this.creationTime, describeEdgeDeploymentPlanResponse.creationTime) &&
        Objects.equals(this.lastModifiedTime, describeEdgeDeploymentPlanResponse.lastModifiedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(edgeDeploymentPlanArn, edgeDeploymentPlanName, modelConfigs, deviceFleetName, edgeDeploymentSuccess, edgeDeploymentPending, edgeDeploymentFailed, stages, nextToken, creationTime, lastModifiedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeEdgeDeploymentPlanResponse {\n");
    sb.append("    edgeDeploymentPlanArn: ").append(toIndentedString(edgeDeploymentPlanArn)).append("\n");
    sb.append("    edgeDeploymentPlanName: ").append(toIndentedString(edgeDeploymentPlanName)).append("\n");
    sb.append("    modelConfigs: ").append(toIndentedString(modelConfigs)).append("\n");
    sb.append("    deviceFleetName: ").append(toIndentedString(deviceFleetName)).append("\n");
    sb.append("    edgeDeploymentSuccess: ").append(toIndentedString(edgeDeploymentSuccess)).append("\n");
    sb.append("    edgeDeploymentPending: ").append(toIndentedString(edgeDeploymentPending)).append("\n");
    sb.append("    edgeDeploymentFailed: ").append(toIndentedString(edgeDeploymentFailed)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EdgeDeploymentPlanArn");
    openapiFields.add("EdgeDeploymentPlanName");
    openapiFields.add("ModelConfigs");
    openapiFields.add("DeviceFleetName");
    openapiFields.add("EdgeDeploymentSuccess");
    openapiFields.add("EdgeDeploymentPending");
    openapiFields.add("EdgeDeploymentFailed");
    openapiFields.add("Stages");
    openapiFields.add("NextToken");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModifiedTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EdgeDeploymentPlanArn");
    openapiRequiredFields.add("EdgeDeploymentPlanName");
    openapiRequiredFields.add("ModelConfigs");
    openapiRequiredFields.add("DeviceFleetName");
    openapiRequiredFields.add("Stages");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeEdgeDeploymentPlanResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeEdgeDeploymentPlanResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeEdgeDeploymentPlanResponse is not found in the empty JSON string", DescribeEdgeDeploymentPlanResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeEdgeDeploymentPlanResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeEdgeDeploymentPlanResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeEdgeDeploymentPlanResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EdgeDeploymentPlanArn`
      String.validateJsonElement(jsonObj.get("EdgeDeploymentPlanArn"));
      // validate the required field `EdgeDeploymentPlanName`
      String.validateJsonElement(jsonObj.get("EdgeDeploymentPlanName"));
      // validate the required field `ModelConfigs`
      List.validateJsonElement(jsonObj.get("ModelConfigs"));
      // validate the required field `DeviceFleetName`
      String.validateJsonElement(jsonObj.get("DeviceFleetName"));
      // validate the optional field `EdgeDeploymentSuccess`
      if (jsonObj.get("EdgeDeploymentSuccess") != null && !jsonObj.get("EdgeDeploymentSuccess").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EdgeDeploymentSuccess"));
      }
      // validate the optional field `EdgeDeploymentPending`
      if (jsonObj.get("EdgeDeploymentPending") != null && !jsonObj.get("EdgeDeploymentPending").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EdgeDeploymentPending"));
      }
      // validate the optional field `EdgeDeploymentFailed`
      if (jsonObj.get("EdgeDeploymentFailed") != null && !jsonObj.get("EdgeDeploymentFailed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EdgeDeploymentFailed"));
      }
      // validate the required field `Stages`
      List.validateJsonElement(jsonObj.get("Stages"));
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeEdgeDeploymentPlanResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeEdgeDeploymentPlanResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeEdgeDeploymentPlanResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeEdgeDeploymentPlanResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeEdgeDeploymentPlanResponse>() {
           @Override
           public void write(JsonWriter out, DescribeEdgeDeploymentPlanResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeEdgeDeploymentPlanResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeEdgeDeploymentPlanResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeEdgeDeploymentPlanResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeEdgeDeploymentPlanResponse
   */
  public static DescribeEdgeDeploymentPlanResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeEdgeDeploymentPlanResponse.class);
  }

  /**
   * Convert an instance of DescribeEdgeDeploymentPlanResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

