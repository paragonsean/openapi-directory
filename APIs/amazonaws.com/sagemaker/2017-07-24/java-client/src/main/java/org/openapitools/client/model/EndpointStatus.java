/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EndpointStatus
 */
@JsonAdapter(EndpointStatus.Adapter.class)
public enum EndpointStatus {
  
  OUT_OF_SERVICE("OutOfService"),
  
  CREATING("Creating"),
  
  UPDATING("Updating"),
  
  SYSTEM_UPDATING("SystemUpdating"),
  
  ROLLING_BACK("RollingBack"),
  
  IN_SERVICE("InService"),
  
  DELETING("Deleting"),
  
  FAILED("Failed"),
  
  UPDATE_ROLLBACK_FAILED("UpdateRollbackFailed");

  private String value;

  EndpointStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EndpointStatus fromValue(String value) {
    for (EndpointStatus b : EndpointStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EndpointStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final EndpointStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EndpointStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EndpointStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EndpointStatus.fromValue(value);
  }
}

