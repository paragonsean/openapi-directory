/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreateModelExplainabilityJobDefinitionRequestModelExplainabilityAppSpecification;
import org.openapitools.client.model.CreateModelExplainabilityJobDefinitionRequestModelExplainabilityBaselineConfig;
import org.openapitools.client.model.CreateModelExplainabilityJobDefinitionRequestModelExplainabilityJobInput;
import org.openapitools.client.model.CreateModelExplainabilityJobDefinitionRequestNetworkConfig;
import org.openapitools.client.model.MonitoringOutputConfig;
import org.openapitools.client.model.MonitoringResources;
import org.openapitools.client.model.MonitoringStoppingCondition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeModelExplainabilityJobDefinitionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeModelExplainabilityJobDefinitionResponse {
  public static final String SERIALIZED_NAME_JOB_DEFINITION_ARN = "JobDefinitionArn";
  @SerializedName(SERIALIZED_NAME_JOB_DEFINITION_ARN)
  private String jobDefinitionArn;

  public static final String SERIALIZED_NAME_JOB_DEFINITION_NAME = "JobDefinitionName";
  @SerializedName(SERIALIZED_NAME_JOB_DEFINITION_NAME)
  private String jobDefinitionName;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_MODEL_EXPLAINABILITY_BASELINE_CONFIG = "ModelExplainabilityBaselineConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_EXPLAINABILITY_BASELINE_CONFIG)
  private CreateModelExplainabilityJobDefinitionRequestModelExplainabilityBaselineConfig modelExplainabilityBaselineConfig;

  public static final String SERIALIZED_NAME_MODEL_EXPLAINABILITY_APP_SPECIFICATION = "ModelExplainabilityAppSpecification";
  @SerializedName(SERIALIZED_NAME_MODEL_EXPLAINABILITY_APP_SPECIFICATION)
  private CreateModelExplainabilityJobDefinitionRequestModelExplainabilityAppSpecification modelExplainabilityAppSpecification;

  public static final String SERIALIZED_NAME_MODEL_EXPLAINABILITY_JOB_INPUT = "ModelExplainabilityJobInput";
  @SerializedName(SERIALIZED_NAME_MODEL_EXPLAINABILITY_JOB_INPUT)
  private CreateModelExplainabilityJobDefinitionRequestModelExplainabilityJobInput modelExplainabilityJobInput;

  public static final String SERIALIZED_NAME_MODEL_EXPLAINABILITY_JOB_OUTPUT_CONFIG = "ModelExplainabilityJobOutputConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_EXPLAINABILITY_JOB_OUTPUT_CONFIG)
  private MonitoringOutputConfig modelExplainabilityJobOutputConfig;

  public static final String SERIALIZED_NAME_JOB_RESOURCES = "JobResources";
  @SerializedName(SERIALIZED_NAME_JOB_RESOURCES)
  private MonitoringResources jobResources;

  public static final String SERIALIZED_NAME_NETWORK_CONFIG = "NetworkConfig";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIG)
  private CreateModelExplainabilityJobDefinitionRequestNetworkConfig networkConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_STOPPING_CONDITION = "StoppingCondition";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITION)
  private MonitoringStoppingCondition stoppingCondition;

  public DescribeModelExplainabilityJobDefinitionResponse() {
  }

  public DescribeModelExplainabilityJobDefinitionResponse jobDefinitionArn(String jobDefinitionArn) {
    this.jobDefinitionArn = jobDefinitionArn;
    return this;
  }

  /**
   * Get jobDefinitionArn
   * @return jobDefinitionArn
   */
  @javax.annotation.Nonnull
  public String getJobDefinitionArn() {
    return jobDefinitionArn;
  }

  public void setJobDefinitionArn(String jobDefinitionArn) {
    this.jobDefinitionArn = jobDefinitionArn;
  }


  public DescribeModelExplainabilityJobDefinitionResponse jobDefinitionName(String jobDefinitionName) {
    this.jobDefinitionName = jobDefinitionName;
    return this;
  }

  /**
   * Get jobDefinitionName
   * @return jobDefinitionName
   */
  @javax.annotation.Nonnull
  public String getJobDefinitionName() {
    return jobDefinitionName;
  }

  public void setJobDefinitionName(String jobDefinitionName) {
    this.jobDefinitionName = jobDefinitionName;
  }


  public DescribeModelExplainabilityJobDefinitionResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeModelExplainabilityJobDefinitionResponse modelExplainabilityBaselineConfig(CreateModelExplainabilityJobDefinitionRequestModelExplainabilityBaselineConfig modelExplainabilityBaselineConfig) {
    this.modelExplainabilityBaselineConfig = modelExplainabilityBaselineConfig;
    return this;
  }

  /**
   * Get modelExplainabilityBaselineConfig
   * @return modelExplainabilityBaselineConfig
   */
  @javax.annotation.Nullable
  public CreateModelExplainabilityJobDefinitionRequestModelExplainabilityBaselineConfig getModelExplainabilityBaselineConfig() {
    return modelExplainabilityBaselineConfig;
  }

  public void setModelExplainabilityBaselineConfig(CreateModelExplainabilityJobDefinitionRequestModelExplainabilityBaselineConfig modelExplainabilityBaselineConfig) {
    this.modelExplainabilityBaselineConfig = modelExplainabilityBaselineConfig;
  }


  public DescribeModelExplainabilityJobDefinitionResponse modelExplainabilityAppSpecification(CreateModelExplainabilityJobDefinitionRequestModelExplainabilityAppSpecification modelExplainabilityAppSpecification) {
    this.modelExplainabilityAppSpecification = modelExplainabilityAppSpecification;
    return this;
  }

  /**
   * Get modelExplainabilityAppSpecification
   * @return modelExplainabilityAppSpecification
   */
  @javax.annotation.Nonnull
  public CreateModelExplainabilityJobDefinitionRequestModelExplainabilityAppSpecification getModelExplainabilityAppSpecification() {
    return modelExplainabilityAppSpecification;
  }

  public void setModelExplainabilityAppSpecification(CreateModelExplainabilityJobDefinitionRequestModelExplainabilityAppSpecification modelExplainabilityAppSpecification) {
    this.modelExplainabilityAppSpecification = modelExplainabilityAppSpecification;
  }


  public DescribeModelExplainabilityJobDefinitionResponse modelExplainabilityJobInput(CreateModelExplainabilityJobDefinitionRequestModelExplainabilityJobInput modelExplainabilityJobInput) {
    this.modelExplainabilityJobInput = modelExplainabilityJobInput;
    return this;
  }

  /**
   * Get modelExplainabilityJobInput
   * @return modelExplainabilityJobInput
   */
  @javax.annotation.Nonnull
  public CreateModelExplainabilityJobDefinitionRequestModelExplainabilityJobInput getModelExplainabilityJobInput() {
    return modelExplainabilityJobInput;
  }

  public void setModelExplainabilityJobInput(CreateModelExplainabilityJobDefinitionRequestModelExplainabilityJobInput modelExplainabilityJobInput) {
    this.modelExplainabilityJobInput = modelExplainabilityJobInput;
  }


  public DescribeModelExplainabilityJobDefinitionResponse modelExplainabilityJobOutputConfig(MonitoringOutputConfig modelExplainabilityJobOutputConfig) {
    this.modelExplainabilityJobOutputConfig = modelExplainabilityJobOutputConfig;
    return this;
  }

  /**
   * Get modelExplainabilityJobOutputConfig
   * @return modelExplainabilityJobOutputConfig
   */
  @javax.annotation.Nonnull
  public MonitoringOutputConfig getModelExplainabilityJobOutputConfig() {
    return modelExplainabilityJobOutputConfig;
  }

  public void setModelExplainabilityJobOutputConfig(MonitoringOutputConfig modelExplainabilityJobOutputConfig) {
    this.modelExplainabilityJobOutputConfig = modelExplainabilityJobOutputConfig;
  }


  public DescribeModelExplainabilityJobDefinitionResponse jobResources(MonitoringResources jobResources) {
    this.jobResources = jobResources;
    return this;
  }

  /**
   * Get jobResources
   * @return jobResources
   */
  @javax.annotation.Nonnull
  public MonitoringResources getJobResources() {
    return jobResources;
  }

  public void setJobResources(MonitoringResources jobResources) {
    this.jobResources = jobResources;
  }


  public DescribeModelExplainabilityJobDefinitionResponse networkConfig(CreateModelExplainabilityJobDefinitionRequestNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

  /**
   * Get networkConfig
   * @return networkConfig
   */
  @javax.annotation.Nullable
  public CreateModelExplainabilityJobDefinitionRequestNetworkConfig getNetworkConfig() {
    return networkConfig;
  }

  public void setNetworkConfig(CreateModelExplainabilityJobDefinitionRequestNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
  }


  public DescribeModelExplainabilityJobDefinitionResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeModelExplainabilityJobDefinitionResponse stoppingCondition(MonitoringStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
    return this;
  }

  /**
   * Get stoppingCondition
   * @return stoppingCondition
   */
  @javax.annotation.Nullable
  public MonitoringStoppingCondition getStoppingCondition() {
    return stoppingCondition;
  }

  public void setStoppingCondition(MonitoringStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeModelExplainabilityJobDefinitionResponse describeModelExplainabilityJobDefinitionResponse = (DescribeModelExplainabilityJobDefinitionResponse) o;
    return Objects.equals(this.jobDefinitionArn, describeModelExplainabilityJobDefinitionResponse.jobDefinitionArn) &&
        Objects.equals(this.jobDefinitionName, describeModelExplainabilityJobDefinitionResponse.jobDefinitionName) &&
        Objects.equals(this.creationTime, describeModelExplainabilityJobDefinitionResponse.creationTime) &&
        Objects.equals(this.modelExplainabilityBaselineConfig, describeModelExplainabilityJobDefinitionResponse.modelExplainabilityBaselineConfig) &&
        Objects.equals(this.modelExplainabilityAppSpecification, describeModelExplainabilityJobDefinitionResponse.modelExplainabilityAppSpecification) &&
        Objects.equals(this.modelExplainabilityJobInput, describeModelExplainabilityJobDefinitionResponse.modelExplainabilityJobInput) &&
        Objects.equals(this.modelExplainabilityJobOutputConfig, describeModelExplainabilityJobDefinitionResponse.modelExplainabilityJobOutputConfig) &&
        Objects.equals(this.jobResources, describeModelExplainabilityJobDefinitionResponse.jobResources) &&
        Objects.equals(this.networkConfig, describeModelExplainabilityJobDefinitionResponse.networkConfig) &&
        Objects.equals(this.roleArn, describeModelExplainabilityJobDefinitionResponse.roleArn) &&
        Objects.equals(this.stoppingCondition, describeModelExplainabilityJobDefinitionResponse.stoppingCondition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobDefinitionArn, jobDefinitionName, creationTime, modelExplainabilityBaselineConfig, modelExplainabilityAppSpecification, modelExplainabilityJobInput, modelExplainabilityJobOutputConfig, jobResources, networkConfig, roleArn, stoppingCondition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeModelExplainabilityJobDefinitionResponse {\n");
    sb.append("    jobDefinitionArn: ").append(toIndentedString(jobDefinitionArn)).append("\n");
    sb.append("    jobDefinitionName: ").append(toIndentedString(jobDefinitionName)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    modelExplainabilityBaselineConfig: ").append(toIndentedString(modelExplainabilityBaselineConfig)).append("\n");
    sb.append("    modelExplainabilityAppSpecification: ").append(toIndentedString(modelExplainabilityAppSpecification)).append("\n");
    sb.append("    modelExplainabilityJobInput: ").append(toIndentedString(modelExplainabilityJobInput)).append("\n");
    sb.append("    modelExplainabilityJobOutputConfig: ").append(toIndentedString(modelExplainabilityJobOutputConfig)).append("\n");
    sb.append("    jobResources: ").append(toIndentedString(jobResources)).append("\n");
    sb.append("    networkConfig: ").append(toIndentedString(networkConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    stoppingCondition: ").append(toIndentedString(stoppingCondition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JobDefinitionArn");
    openapiFields.add("JobDefinitionName");
    openapiFields.add("CreationTime");
    openapiFields.add("ModelExplainabilityBaselineConfig");
    openapiFields.add("ModelExplainabilityAppSpecification");
    openapiFields.add("ModelExplainabilityJobInput");
    openapiFields.add("ModelExplainabilityJobOutputConfig");
    openapiFields.add("JobResources");
    openapiFields.add("NetworkConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("StoppingCondition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("JobDefinitionArn");
    openapiRequiredFields.add("JobDefinitionName");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("ModelExplainabilityAppSpecification");
    openapiRequiredFields.add("ModelExplainabilityJobInput");
    openapiRequiredFields.add("ModelExplainabilityJobOutputConfig");
    openapiRequiredFields.add("JobResources");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeModelExplainabilityJobDefinitionResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeModelExplainabilityJobDefinitionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeModelExplainabilityJobDefinitionResponse is not found in the empty JSON string", DescribeModelExplainabilityJobDefinitionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeModelExplainabilityJobDefinitionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeModelExplainabilityJobDefinitionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeModelExplainabilityJobDefinitionResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `JobDefinitionArn`
      String.validateJsonElement(jsonObj.get("JobDefinitionArn"));
      // validate the required field `JobDefinitionName`
      String.validateJsonElement(jsonObj.get("JobDefinitionName"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `ModelExplainabilityBaselineConfig`
      if (jsonObj.get("ModelExplainabilityBaselineConfig") != null && !jsonObj.get("ModelExplainabilityBaselineConfig").isJsonNull()) {
        CreateModelExplainabilityJobDefinitionRequestModelExplainabilityBaselineConfig.validateJsonElement(jsonObj.get("ModelExplainabilityBaselineConfig"));
      }
      // validate the required field `ModelExplainabilityAppSpecification`
      CreateModelExplainabilityJobDefinitionRequestModelExplainabilityAppSpecification.validateJsonElement(jsonObj.get("ModelExplainabilityAppSpecification"));
      // validate the required field `ModelExplainabilityJobInput`
      CreateModelExplainabilityJobDefinitionRequestModelExplainabilityJobInput.validateJsonElement(jsonObj.get("ModelExplainabilityJobInput"));
      // validate the required field `ModelExplainabilityJobOutputConfig`
      MonitoringOutputConfig.validateJsonElement(jsonObj.get("ModelExplainabilityJobOutputConfig"));
      // validate the required field `JobResources`
      MonitoringResources.validateJsonElement(jsonObj.get("JobResources"));
      // validate the optional field `NetworkConfig`
      if (jsonObj.get("NetworkConfig") != null && !jsonObj.get("NetworkConfig").isJsonNull()) {
        CreateModelExplainabilityJobDefinitionRequestNetworkConfig.validateJsonElement(jsonObj.get("NetworkConfig"));
      }
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `StoppingCondition`
      if (jsonObj.get("StoppingCondition") != null && !jsonObj.get("StoppingCondition").isJsonNull()) {
        MonitoringStoppingCondition.validateJsonElement(jsonObj.get("StoppingCondition"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeModelExplainabilityJobDefinitionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeModelExplainabilityJobDefinitionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeModelExplainabilityJobDefinitionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeModelExplainabilityJobDefinitionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeModelExplainabilityJobDefinitionResponse>() {
           @Override
           public void write(JsonWriter out, DescribeModelExplainabilityJobDefinitionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeModelExplainabilityJobDefinitionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeModelExplainabilityJobDefinitionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeModelExplainabilityJobDefinitionResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeModelExplainabilityJobDefinitionResponse
   */
  public static DescribeModelExplainabilityJobDefinitionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeModelExplainabilityJobDefinitionResponse.class);
  }

  /**
   * Convert an instance of DescribeModelExplainabilityJobDefinitionResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

