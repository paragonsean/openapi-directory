/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutoMLJobSecondaryStatus;
import org.openapitools.client.model.AutoMLJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides a summary about an AutoML job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutoMLJobSummary {
  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_NAME = "AutoMLJobName";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_NAME)
  private String autoMLJobName;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_ARN = "AutoMLJobArn";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_ARN)
  private String autoMLJobArn;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_STATUS = "AutoMLJobStatus";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_STATUS)
  private AutoMLJobStatus autoMLJobStatus;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_SECONDARY_STATUS = "AutoMLJobSecondaryStatus";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_SECONDARY_STATUS)
  private AutoMLJobSecondaryStatus autoMLJobSecondaryStatus;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_PARTIAL_FAILURE_REASONS = "PartialFailureReasons";
  @SerializedName(SERIALIZED_NAME_PARTIAL_FAILURE_REASONS)
  private List partialFailureReasons;

  public AutoMLJobSummary() {
  }

  public AutoMLJobSummary autoMLJobName(String autoMLJobName) {
    this.autoMLJobName = autoMLJobName;
    return this;
  }

  /**
   * Get autoMLJobName
   * @return autoMLJobName
   */
  @javax.annotation.Nonnull
  public String getAutoMLJobName() {
    return autoMLJobName;
  }

  public void setAutoMLJobName(String autoMLJobName) {
    this.autoMLJobName = autoMLJobName;
  }


  public AutoMLJobSummary autoMLJobArn(String autoMLJobArn) {
    this.autoMLJobArn = autoMLJobArn;
    return this;
  }

  /**
   * Get autoMLJobArn
   * @return autoMLJobArn
   */
  @javax.annotation.Nonnull
  public String getAutoMLJobArn() {
    return autoMLJobArn;
  }

  public void setAutoMLJobArn(String autoMLJobArn) {
    this.autoMLJobArn = autoMLJobArn;
  }


  public AutoMLJobSummary autoMLJobStatus(AutoMLJobStatus autoMLJobStatus) {
    this.autoMLJobStatus = autoMLJobStatus;
    return this;
  }

  /**
   * Get autoMLJobStatus
   * @return autoMLJobStatus
   */
  @javax.annotation.Nonnull
  public AutoMLJobStatus getAutoMLJobStatus() {
    return autoMLJobStatus;
  }

  public void setAutoMLJobStatus(AutoMLJobStatus autoMLJobStatus) {
    this.autoMLJobStatus = autoMLJobStatus;
  }


  public AutoMLJobSummary autoMLJobSecondaryStatus(AutoMLJobSecondaryStatus autoMLJobSecondaryStatus) {
    this.autoMLJobSecondaryStatus = autoMLJobSecondaryStatus;
    return this;
  }

  /**
   * Get autoMLJobSecondaryStatus
   * @return autoMLJobSecondaryStatus
   */
  @javax.annotation.Nonnull
  public AutoMLJobSecondaryStatus getAutoMLJobSecondaryStatus() {
    return autoMLJobSecondaryStatus;
  }

  public void setAutoMLJobSecondaryStatus(AutoMLJobSecondaryStatus autoMLJobSecondaryStatus) {
    this.autoMLJobSecondaryStatus = autoMLJobSecondaryStatus;
  }


  public AutoMLJobSummary creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public AutoMLJobSummary endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public AutoMLJobSummary lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public AutoMLJobSummary failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public AutoMLJobSummary partialFailureReasons(List partialFailureReasons) {
    this.partialFailureReasons = partialFailureReasons;
    return this;
  }

  /**
   * Get partialFailureReasons
   * @return partialFailureReasons
   */
  @javax.annotation.Nullable
  public List getPartialFailureReasons() {
    return partialFailureReasons;
  }

  public void setPartialFailureReasons(List partialFailureReasons) {
    this.partialFailureReasons = partialFailureReasons;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoMLJobSummary autoMLJobSummary = (AutoMLJobSummary) o;
    return Objects.equals(this.autoMLJobName, autoMLJobSummary.autoMLJobName) &&
        Objects.equals(this.autoMLJobArn, autoMLJobSummary.autoMLJobArn) &&
        Objects.equals(this.autoMLJobStatus, autoMLJobSummary.autoMLJobStatus) &&
        Objects.equals(this.autoMLJobSecondaryStatus, autoMLJobSummary.autoMLJobSecondaryStatus) &&
        Objects.equals(this.creationTime, autoMLJobSummary.creationTime) &&
        Objects.equals(this.endTime, autoMLJobSummary.endTime) &&
        Objects.equals(this.lastModifiedTime, autoMLJobSummary.lastModifiedTime) &&
        Objects.equals(this.failureReason, autoMLJobSummary.failureReason) &&
        Objects.equals(this.partialFailureReasons, autoMLJobSummary.partialFailureReasons);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoMLJobName, autoMLJobArn, autoMLJobStatus, autoMLJobSecondaryStatus, creationTime, endTime, lastModifiedTime, failureReason, partialFailureReasons);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoMLJobSummary {\n");
    sb.append("    autoMLJobName: ").append(toIndentedString(autoMLJobName)).append("\n");
    sb.append("    autoMLJobArn: ").append(toIndentedString(autoMLJobArn)).append("\n");
    sb.append("    autoMLJobStatus: ").append(toIndentedString(autoMLJobStatus)).append("\n");
    sb.append("    autoMLJobSecondaryStatus: ").append(toIndentedString(autoMLJobSecondaryStatus)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    partialFailureReasons: ").append(toIndentedString(partialFailureReasons)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoMLJobName");
    openapiFields.add("AutoMLJobArn");
    openapiFields.add("AutoMLJobStatus");
    openapiFields.add("AutoMLJobSecondaryStatus");
    openapiFields.add("CreationTime");
    openapiFields.add("EndTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("FailureReason");
    openapiFields.add("PartialFailureReasons");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AutoMLJobName");
    openapiRequiredFields.add("AutoMLJobArn");
    openapiRequiredFields.add("AutoMLJobStatus");
    openapiRequiredFields.add("AutoMLJobSecondaryStatus");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("LastModifiedTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoMLJobSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoMLJobSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoMLJobSummary is not found in the empty JSON string", AutoMLJobSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoMLJobSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoMLJobSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutoMLJobSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AutoMLJobName`
      String.validateJsonElement(jsonObj.get("AutoMLJobName"));
      // validate the required field `AutoMLJobArn`
      String.validateJsonElement(jsonObj.get("AutoMLJobArn"));
      // validate the required field `AutoMLJobStatus`
      AutoMLJobStatus.validateJsonElement(jsonObj.get("AutoMLJobStatus"));
      // validate the required field `AutoMLJobSecondaryStatus`
      AutoMLJobSecondaryStatus.validateJsonElement(jsonObj.get("AutoMLJobSecondaryStatus"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the required field `LastModifiedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `PartialFailureReasons`
      if (jsonObj.get("PartialFailureReasons") != null && !jsonObj.get("PartialFailureReasons").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PartialFailureReasons"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoMLJobSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoMLJobSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoMLJobSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoMLJobSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoMLJobSummary>() {
           @Override
           public void write(JsonWriter out, AutoMLJobSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoMLJobSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoMLJobSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoMLJobSummary
   * @throws IOException if the JSON string is invalid with respect to AutoMLJobSummary
   */
  public static AutoMLJobSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoMLJobSummary.class);
  }

  /**
   * Convert an instance of AutoMLJobSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

