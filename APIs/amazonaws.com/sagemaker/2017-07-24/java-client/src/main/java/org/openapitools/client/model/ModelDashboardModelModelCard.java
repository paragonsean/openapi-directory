/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ModelCardStatus;
import org.openapitools.client.model.ModelDashboardModelCardSecurityConfig;
import org.openapitools.client.model.UserContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelDashboardModelModelCard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModelDashboardModelModelCard {
  public static final String SERIALIZED_NAME_MODEL_CARD_ARN = "ModelCardArn";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_ARN)
  private String modelCardArn;

  public static final String SERIALIZED_NAME_MODEL_CARD_NAME = "ModelCardName";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_NAME)
  private String modelCardName;

  public static final String SERIALIZED_NAME_MODEL_CARD_VERSION = "ModelCardVersion";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_VERSION)
  private Integer modelCardVersion;

  public static final String SERIALIZED_NAME_MODEL_CARD_STATUS = "ModelCardStatus";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_STATUS)
  private ModelCardStatus modelCardStatus;

  public static final String SERIALIZED_NAME_SECURITY_CONFIG = "SecurityConfig";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONFIG)
  private ModelDashboardModelCardSecurityConfig securityConfig;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserContext createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private UserContext lastModifiedBy;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_MODEL_ID = "ModelId";
  @SerializedName(SERIALIZED_NAME_MODEL_ID)
  private String modelId;

  public static final String SERIALIZED_NAME_RISK_RATING = "RiskRating";
  @SerializedName(SERIALIZED_NAME_RISK_RATING)
  private String riskRating;

  public ModelDashboardModelModelCard() {
  }

  public ModelDashboardModelModelCard modelCardArn(String modelCardArn) {
    this.modelCardArn = modelCardArn;
    return this;
  }

  /**
   * Get modelCardArn
   * @return modelCardArn
   */
  @javax.annotation.Nullable
  public String getModelCardArn() {
    return modelCardArn;
  }

  public void setModelCardArn(String modelCardArn) {
    this.modelCardArn = modelCardArn;
  }


  public ModelDashboardModelModelCard modelCardName(String modelCardName) {
    this.modelCardName = modelCardName;
    return this;
  }

  /**
   * Get modelCardName
   * @return modelCardName
   */
  @javax.annotation.Nullable
  public String getModelCardName() {
    return modelCardName;
  }

  public void setModelCardName(String modelCardName) {
    this.modelCardName = modelCardName;
  }


  public ModelDashboardModelModelCard modelCardVersion(Integer modelCardVersion) {
    this.modelCardVersion = modelCardVersion;
    return this;
  }

  /**
   * Get modelCardVersion
   * @return modelCardVersion
   */
  @javax.annotation.Nullable
  public Integer getModelCardVersion() {
    return modelCardVersion;
  }

  public void setModelCardVersion(Integer modelCardVersion) {
    this.modelCardVersion = modelCardVersion;
  }


  public ModelDashboardModelModelCard modelCardStatus(ModelCardStatus modelCardStatus) {
    this.modelCardStatus = modelCardStatus;
    return this;
  }

  /**
   * Get modelCardStatus
   * @return modelCardStatus
   */
  @javax.annotation.Nullable
  public ModelCardStatus getModelCardStatus() {
    return modelCardStatus;
  }

  public void setModelCardStatus(ModelCardStatus modelCardStatus) {
    this.modelCardStatus = modelCardStatus;
  }


  public ModelDashboardModelModelCard securityConfig(ModelDashboardModelCardSecurityConfig securityConfig) {
    this.securityConfig = securityConfig;
    return this;
  }

  /**
   * Get securityConfig
   * @return securityConfig
   */
  @javax.annotation.Nullable
  public ModelDashboardModelCardSecurityConfig getSecurityConfig() {
    return securityConfig;
  }

  public void setSecurityConfig(ModelDashboardModelCardSecurityConfig securityConfig) {
    this.securityConfig = securityConfig;
  }


  public ModelDashboardModelModelCard creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public ModelDashboardModelModelCard createdBy(UserContext createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserContext getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserContext createdBy) {
    this.createdBy = createdBy;
  }


  public ModelDashboardModelModelCard lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public ModelDashboardModelModelCard lastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public UserContext getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public ModelDashboardModelModelCard tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public ModelDashboardModelModelCard modelId(String modelId) {
    this.modelId = modelId;
    return this;
  }

  /**
   * Get modelId
   * @return modelId
   */
  @javax.annotation.Nullable
  public String getModelId() {
    return modelId;
  }

  public void setModelId(String modelId) {
    this.modelId = modelId;
  }


  public ModelDashboardModelModelCard riskRating(String riskRating) {
    this.riskRating = riskRating;
    return this;
  }

  /**
   * Get riskRating
   * @return riskRating
   */
  @javax.annotation.Nullable
  public String getRiskRating() {
    return riskRating;
  }

  public void setRiskRating(String riskRating) {
    this.riskRating = riskRating;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelDashboardModelModelCard modelDashboardModelModelCard = (ModelDashboardModelModelCard) o;
    return Objects.equals(this.modelCardArn, modelDashboardModelModelCard.modelCardArn) &&
        Objects.equals(this.modelCardName, modelDashboardModelModelCard.modelCardName) &&
        Objects.equals(this.modelCardVersion, modelDashboardModelModelCard.modelCardVersion) &&
        Objects.equals(this.modelCardStatus, modelDashboardModelModelCard.modelCardStatus) &&
        Objects.equals(this.securityConfig, modelDashboardModelModelCard.securityConfig) &&
        Objects.equals(this.creationTime, modelDashboardModelModelCard.creationTime) &&
        Objects.equals(this.createdBy, modelDashboardModelModelCard.createdBy) &&
        Objects.equals(this.lastModifiedTime, modelDashboardModelModelCard.lastModifiedTime) &&
        Objects.equals(this.lastModifiedBy, modelDashboardModelModelCard.lastModifiedBy) &&
        Objects.equals(this.tags, modelDashboardModelModelCard.tags) &&
        Objects.equals(this.modelId, modelDashboardModelModelCard.modelId) &&
        Objects.equals(this.riskRating, modelDashboardModelModelCard.riskRating);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelCardArn, modelCardName, modelCardVersion, modelCardStatus, securityConfig, creationTime, createdBy, lastModifiedTime, lastModifiedBy, tags, modelId, riskRating);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelDashboardModelModelCard {\n");
    sb.append("    modelCardArn: ").append(toIndentedString(modelCardArn)).append("\n");
    sb.append("    modelCardName: ").append(toIndentedString(modelCardName)).append("\n");
    sb.append("    modelCardVersion: ").append(toIndentedString(modelCardVersion)).append("\n");
    sb.append("    modelCardStatus: ").append(toIndentedString(modelCardStatus)).append("\n");
    sb.append("    securityConfig: ").append(toIndentedString(securityConfig)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    riskRating: ").append(toIndentedString(riskRating)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelCardArn");
    openapiFields.add("ModelCardName");
    openapiFields.add("ModelCardVersion");
    openapiFields.add("ModelCardStatus");
    openapiFields.add("SecurityConfig");
    openapiFields.add("CreationTime");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("Tags");
    openapiFields.add("ModelId");
    openapiFields.add("RiskRating");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelDashboardModelModelCard
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelDashboardModelModelCard.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelDashboardModelModelCard is not found in the empty JSON string", ModelDashboardModelModelCard.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelDashboardModelModelCard.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelDashboardModelModelCard` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModelCardArn`
      if (jsonObj.get("ModelCardArn") != null && !jsonObj.get("ModelCardArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelCardArn"));
      }
      // validate the optional field `ModelCardName`
      if (jsonObj.get("ModelCardName") != null && !jsonObj.get("ModelCardName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelCardName"));
      }
      // validate the optional field `ModelCardVersion`
      if (jsonObj.get("ModelCardVersion") != null && !jsonObj.get("ModelCardVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ModelCardVersion"));
      }
      // validate the optional field `ModelCardStatus`
      if (jsonObj.get("ModelCardStatus") != null && !jsonObj.get("ModelCardStatus").isJsonNull()) {
        ModelCardStatus.validateJsonElement(jsonObj.get("ModelCardStatus"));
      }
      // validate the optional field `SecurityConfig`
      if (jsonObj.get("SecurityConfig") != null && !jsonObj.get("SecurityConfig").isJsonNull()) {
        ModelDashboardModelCardSecurityConfig.validateJsonElement(jsonObj.get("SecurityConfig"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `ModelId`
      if (jsonObj.get("ModelId") != null && !jsonObj.get("ModelId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelId"));
      }
      // validate the optional field `RiskRating`
      if (jsonObj.get("RiskRating") != null && !jsonObj.get("RiskRating").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RiskRating"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelDashboardModelModelCard.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelDashboardModelModelCard' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelDashboardModelModelCard> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelDashboardModelModelCard.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelDashboardModelModelCard>() {
           @Override
           public void write(JsonWriter out, ModelDashboardModelModelCard value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelDashboardModelModelCard read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelDashboardModelModelCard given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelDashboardModelModelCard
   * @throws IOException if the JSON string is invalid with respect to ModelDashboardModelModelCard
   */
  public static ModelDashboardModelModelCard fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelDashboardModelModelCard.class);
  }

  /**
   * Convert an instance of ModelDashboardModelModelCard to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

