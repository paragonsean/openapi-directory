/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateFeatureGroupRequestOfflineStoreConfig;
import org.openapitools.client.model.CreateFeatureGroupRequestOnlineStoreConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateFeatureGroupRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateFeatureGroupRequest {
  public static final String SERIALIZED_NAME_FEATURE_GROUP_NAME = "FeatureGroupName";
  @SerializedName(SERIALIZED_NAME_FEATURE_GROUP_NAME)
  private String featureGroupName;

  public static final String SERIALIZED_NAME_RECORD_IDENTIFIER_FEATURE_NAME = "RecordIdentifierFeatureName";
  @SerializedName(SERIALIZED_NAME_RECORD_IDENTIFIER_FEATURE_NAME)
  private String recordIdentifierFeatureName;

  public static final String SERIALIZED_NAME_EVENT_TIME_FEATURE_NAME = "EventTimeFeatureName";
  @SerializedName(SERIALIZED_NAME_EVENT_TIME_FEATURE_NAME)
  private String eventTimeFeatureName;

  public static final String SERIALIZED_NAME_FEATURE_DEFINITIONS = "FeatureDefinitions";
  @SerializedName(SERIALIZED_NAME_FEATURE_DEFINITIONS)
  private List featureDefinitions;

  public static final String SERIALIZED_NAME_ONLINE_STORE_CONFIG = "OnlineStoreConfig";
  @SerializedName(SERIALIZED_NAME_ONLINE_STORE_CONFIG)
  private CreateFeatureGroupRequestOnlineStoreConfig onlineStoreConfig;

  public static final String SERIALIZED_NAME_OFFLINE_STORE_CONFIG = "OfflineStoreConfig";
  @SerializedName(SERIALIZED_NAME_OFFLINE_STORE_CONFIG)
  private CreateFeatureGroupRequestOfflineStoreConfig offlineStoreConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public CreateFeatureGroupRequest() {
  }

  public CreateFeatureGroupRequest featureGroupName(String featureGroupName) {
    this.featureGroupName = featureGroupName;
    return this;
  }

  /**
   * Get featureGroupName
   * @return featureGroupName
   */
  @javax.annotation.Nonnull
  public String getFeatureGroupName() {
    return featureGroupName;
  }

  public void setFeatureGroupName(String featureGroupName) {
    this.featureGroupName = featureGroupName;
  }


  public CreateFeatureGroupRequest recordIdentifierFeatureName(String recordIdentifierFeatureName) {
    this.recordIdentifierFeatureName = recordIdentifierFeatureName;
    return this;
  }

  /**
   * Get recordIdentifierFeatureName
   * @return recordIdentifierFeatureName
   */
  @javax.annotation.Nonnull
  public String getRecordIdentifierFeatureName() {
    return recordIdentifierFeatureName;
  }

  public void setRecordIdentifierFeatureName(String recordIdentifierFeatureName) {
    this.recordIdentifierFeatureName = recordIdentifierFeatureName;
  }


  public CreateFeatureGroupRequest eventTimeFeatureName(String eventTimeFeatureName) {
    this.eventTimeFeatureName = eventTimeFeatureName;
    return this;
  }

  /**
   * Get eventTimeFeatureName
   * @return eventTimeFeatureName
   */
  @javax.annotation.Nonnull
  public String getEventTimeFeatureName() {
    return eventTimeFeatureName;
  }

  public void setEventTimeFeatureName(String eventTimeFeatureName) {
    this.eventTimeFeatureName = eventTimeFeatureName;
  }


  public CreateFeatureGroupRequest featureDefinitions(List featureDefinitions) {
    this.featureDefinitions = featureDefinitions;
    return this;
  }

  /**
   * Get featureDefinitions
   * @return featureDefinitions
   */
  @javax.annotation.Nonnull
  public List getFeatureDefinitions() {
    return featureDefinitions;
  }

  public void setFeatureDefinitions(List featureDefinitions) {
    this.featureDefinitions = featureDefinitions;
  }


  public CreateFeatureGroupRequest onlineStoreConfig(CreateFeatureGroupRequestOnlineStoreConfig onlineStoreConfig) {
    this.onlineStoreConfig = onlineStoreConfig;
    return this;
  }

  /**
   * Get onlineStoreConfig
   * @return onlineStoreConfig
   */
  @javax.annotation.Nullable
  public CreateFeatureGroupRequestOnlineStoreConfig getOnlineStoreConfig() {
    return onlineStoreConfig;
  }

  public void setOnlineStoreConfig(CreateFeatureGroupRequestOnlineStoreConfig onlineStoreConfig) {
    this.onlineStoreConfig = onlineStoreConfig;
  }


  public CreateFeatureGroupRequest offlineStoreConfig(CreateFeatureGroupRequestOfflineStoreConfig offlineStoreConfig) {
    this.offlineStoreConfig = offlineStoreConfig;
    return this;
  }

  /**
   * Get offlineStoreConfig
   * @return offlineStoreConfig
   */
  @javax.annotation.Nullable
  public CreateFeatureGroupRequestOfflineStoreConfig getOfflineStoreConfig() {
    return offlineStoreConfig;
  }

  public void setOfflineStoreConfig(CreateFeatureGroupRequestOfflineStoreConfig offlineStoreConfig) {
    this.offlineStoreConfig = offlineStoreConfig;
  }


  public CreateFeatureGroupRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateFeatureGroupRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateFeatureGroupRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFeatureGroupRequest createFeatureGroupRequest = (CreateFeatureGroupRequest) o;
    return Objects.equals(this.featureGroupName, createFeatureGroupRequest.featureGroupName) &&
        Objects.equals(this.recordIdentifierFeatureName, createFeatureGroupRequest.recordIdentifierFeatureName) &&
        Objects.equals(this.eventTimeFeatureName, createFeatureGroupRequest.eventTimeFeatureName) &&
        Objects.equals(this.featureDefinitions, createFeatureGroupRequest.featureDefinitions) &&
        Objects.equals(this.onlineStoreConfig, createFeatureGroupRequest.onlineStoreConfig) &&
        Objects.equals(this.offlineStoreConfig, createFeatureGroupRequest.offlineStoreConfig) &&
        Objects.equals(this.roleArn, createFeatureGroupRequest.roleArn) &&
        Objects.equals(this.description, createFeatureGroupRequest.description) &&
        Objects.equals(this.tags, createFeatureGroupRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureGroupName, recordIdentifierFeatureName, eventTimeFeatureName, featureDefinitions, onlineStoreConfig, offlineStoreConfig, roleArn, description, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFeatureGroupRequest {\n");
    sb.append("    featureGroupName: ").append(toIndentedString(featureGroupName)).append("\n");
    sb.append("    recordIdentifierFeatureName: ").append(toIndentedString(recordIdentifierFeatureName)).append("\n");
    sb.append("    eventTimeFeatureName: ").append(toIndentedString(eventTimeFeatureName)).append("\n");
    sb.append("    featureDefinitions: ").append(toIndentedString(featureDefinitions)).append("\n");
    sb.append("    onlineStoreConfig: ").append(toIndentedString(onlineStoreConfig)).append("\n");
    sb.append("    offlineStoreConfig: ").append(toIndentedString(offlineStoreConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FeatureGroupName");
    openapiFields.add("RecordIdentifierFeatureName");
    openapiFields.add("EventTimeFeatureName");
    openapiFields.add("FeatureDefinitions");
    openapiFields.add("OnlineStoreConfig");
    openapiFields.add("OfflineStoreConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("Description");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FeatureGroupName");
    openapiRequiredFields.add("RecordIdentifierFeatureName");
    openapiRequiredFields.add("EventTimeFeatureName");
    openapiRequiredFields.add("FeatureDefinitions");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateFeatureGroupRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateFeatureGroupRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateFeatureGroupRequest is not found in the empty JSON string", CreateFeatureGroupRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateFeatureGroupRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateFeatureGroupRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateFeatureGroupRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `FeatureGroupName`
      String.validateJsonElement(jsonObj.get("FeatureGroupName"));
      // validate the required field `RecordIdentifierFeatureName`
      String.validateJsonElement(jsonObj.get("RecordIdentifierFeatureName"));
      // validate the required field `EventTimeFeatureName`
      String.validateJsonElement(jsonObj.get("EventTimeFeatureName"));
      // validate the required field `FeatureDefinitions`
      List.validateJsonElement(jsonObj.get("FeatureDefinitions"));
      // validate the optional field `OnlineStoreConfig`
      if (jsonObj.get("OnlineStoreConfig") != null && !jsonObj.get("OnlineStoreConfig").isJsonNull()) {
        CreateFeatureGroupRequestOnlineStoreConfig.validateJsonElement(jsonObj.get("OnlineStoreConfig"));
      }
      // validate the optional field `OfflineStoreConfig`
      if (jsonObj.get("OfflineStoreConfig") != null && !jsonObj.get("OfflineStoreConfig").isJsonNull()) {
        CreateFeatureGroupRequestOfflineStoreConfig.validateJsonElement(jsonObj.get("OfflineStoreConfig"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateFeatureGroupRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateFeatureGroupRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateFeatureGroupRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateFeatureGroupRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateFeatureGroupRequest>() {
           @Override
           public void write(JsonWriter out, CreateFeatureGroupRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateFeatureGroupRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateFeatureGroupRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateFeatureGroupRequest
   * @throws IOException if the JSON string is invalid with respect to CreateFeatureGroupRequest
   */
  public static CreateFeatureGroupRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateFeatureGroupRequest.class);
  }

  /**
   * Convert an instance of CreateFeatureGroupRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

