/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration {
  public static final String SERIALIZED_NAME_MIN_CAPACITY = "MinCapacity";
  @SerializedName(SERIALIZED_NAME_MIN_CAPACITY)
  private Integer minCapacity;

  public static final String SERIALIZED_NAME_MAX_CAPACITY = "MaxCapacity";
  @SerializedName(SERIALIZED_NAME_MAX_CAPACITY)
  private Integer maxCapacity;

  public static final String SERIALIZED_NAME_SCALE_IN_COOLDOWN = "ScaleInCooldown";
  @SerializedName(SERIALIZED_NAME_SCALE_IN_COOLDOWN)
  private Integer scaleInCooldown;

  public static final String SERIALIZED_NAME_SCALE_OUT_COOLDOWN = "ScaleOutCooldown";
  @SerializedName(SERIALIZED_NAME_SCALE_OUT_COOLDOWN)
  private Integer scaleOutCooldown;

  public static final String SERIALIZED_NAME_SCALING_POLICIES = "ScalingPolicies";
  @SerializedName(SERIALIZED_NAME_SCALING_POLICIES)
  private List scalingPolicies;

  public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration() {
  }

  public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration minCapacity(Integer minCapacity) {
    this.minCapacity = minCapacity;
    return this;
  }

  /**
   * Get minCapacity
   * @return minCapacity
   */
  @javax.annotation.Nullable
  public Integer getMinCapacity() {
    return minCapacity;
  }

  public void setMinCapacity(Integer minCapacity) {
    this.minCapacity = minCapacity;
  }


  public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration maxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
    return this;
  }

  /**
   * Get maxCapacity
   * @return maxCapacity
   */
  @javax.annotation.Nullable
  public Integer getMaxCapacity() {
    return maxCapacity;
  }

  public void setMaxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
  }


  public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration scaleInCooldown(Integer scaleInCooldown) {
    this.scaleInCooldown = scaleInCooldown;
    return this;
  }

  /**
   * Get scaleInCooldown
   * @return scaleInCooldown
   */
  @javax.annotation.Nullable
  public Integer getScaleInCooldown() {
    return scaleInCooldown;
  }

  public void setScaleInCooldown(Integer scaleInCooldown) {
    this.scaleInCooldown = scaleInCooldown;
  }


  public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration scaleOutCooldown(Integer scaleOutCooldown) {
    this.scaleOutCooldown = scaleOutCooldown;
    return this;
  }

  /**
   * Get scaleOutCooldown
   * @return scaleOutCooldown
   */
  @javax.annotation.Nullable
  public Integer getScaleOutCooldown() {
    return scaleOutCooldown;
  }

  public void setScaleOutCooldown(Integer scaleOutCooldown) {
    this.scaleOutCooldown = scaleOutCooldown;
  }


  public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration scalingPolicies(List scalingPolicies) {
    this.scalingPolicies = scalingPolicies;
    return this;
  }

  /**
   * Get scalingPolicies
   * @return scalingPolicies
   */
  @javax.annotation.Nullable
  public List getScalingPolicies() {
    return scalingPolicies;
  }

  public void setScalingPolicies(List scalingPolicies) {
    this.scalingPolicies = scalingPolicies;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration getScalingConfigurationRecommendationResponseDynamicScalingConfiguration = (GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration) o;
    return Objects.equals(this.minCapacity, getScalingConfigurationRecommendationResponseDynamicScalingConfiguration.minCapacity) &&
        Objects.equals(this.maxCapacity, getScalingConfigurationRecommendationResponseDynamicScalingConfiguration.maxCapacity) &&
        Objects.equals(this.scaleInCooldown, getScalingConfigurationRecommendationResponseDynamicScalingConfiguration.scaleInCooldown) &&
        Objects.equals(this.scaleOutCooldown, getScalingConfigurationRecommendationResponseDynamicScalingConfiguration.scaleOutCooldown) &&
        Objects.equals(this.scalingPolicies, getScalingConfigurationRecommendationResponseDynamicScalingConfiguration.scalingPolicies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minCapacity, maxCapacity, scaleInCooldown, scaleOutCooldown, scalingPolicies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration {\n");
    sb.append("    minCapacity: ").append(toIndentedString(minCapacity)).append("\n");
    sb.append("    maxCapacity: ").append(toIndentedString(maxCapacity)).append("\n");
    sb.append("    scaleInCooldown: ").append(toIndentedString(scaleInCooldown)).append("\n");
    sb.append("    scaleOutCooldown: ").append(toIndentedString(scaleOutCooldown)).append("\n");
    sb.append("    scalingPolicies: ").append(toIndentedString(scalingPolicies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MinCapacity");
    openapiFields.add("MaxCapacity");
    openapiFields.add("ScaleInCooldown");
    openapiFields.add("ScaleOutCooldown");
    openapiFields.add("ScalingPolicies");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration is not found in the empty JSON string", GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MinCapacity`
      if (jsonObj.get("MinCapacity") != null && !jsonObj.get("MinCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinCapacity"));
      }
      // validate the optional field `MaxCapacity`
      if (jsonObj.get("MaxCapacity") != null && !jsonObj.get("MaxCapacity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxCapacity"));
      }
      // validate the optional field `ScaleInCooldown`
      if (jsonObj.get("ScaleInCooldown") != null && !jsonObj.get("ScaleInCooldown").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ScaleInCooldown"));
      }
      // validate the optional field `ScaleOutCooldown`
      if (jsonObj.get("ScaleOutCooldown") != null && !jsonObj.get("ScaleOutCooldown").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ScaleOutCooldown"));
      }
      // validate the optional field `ScalingPolicies`
      if (jsonObj.get("ScalingPolicies") != null && !jsonObj.get("ScalingPolicies").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ScalingPolicies"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration>() {
           @Override
           public void write(JsonWriter out, GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration
   * @throws IOException if the JSON string is invalid with respect to GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration
   */
  public static GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration.class);
  }

  /**
   * Convert an instance of GetScalingConfigurationRecommendationResponseDynamicScalingConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

