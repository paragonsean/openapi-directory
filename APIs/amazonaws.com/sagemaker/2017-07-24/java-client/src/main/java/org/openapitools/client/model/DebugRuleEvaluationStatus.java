/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.RuleEvaluationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the status of the rule evaluation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DebugRuleEvaluationStatus {
  public static final String SERIALIZED_NAME_RULE_CONFIGURATION_NAME = "RuleConfigurationName";
  @SerializedName(SERIALIZED_NAME_RULE_CONFIGURATION_NAME)
  private String ruleConfigurationName;

  public static final String SERIALIZED_NAME_RULE_EVALUATION_JOB_ARN = "RuleEvaluationJobArn";
  @SerializedName(SERIALIZED_NAME_RULE_EVALUATION_JOB_ARN)
  private String ruleEvaluationJobArn;

  public static final String SERIALIZED_NAME_RULE_EVALUATION_STATUS = "RuleEvaluationStatus";
  @SerializedName(SERIALIZED_NAME_RULE_EVALUATION_STATUS)
  private RuleEvaluationStatus ruleEvaluationStatus;

  public static final String SERIALIZED_NAME_STATUS_DETAILS = "StatusDetails";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAILS)
  private String statusDetails;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public DebugRuleEvaluationStatus() {
  }

  public DebugRuleEvaluationStatus ruleConfigurationName(String ruleConfigurationName) {
    this.ruleConfigurationName = ruleConfigurationName;
    return this;
  }

  /**
   * Get ruleConfigurationName
   * @return ruleConfigurationName
   */
  @javax.annotation.Nullable
  public String getRuleConfigurationName() {
    return ruleConfigurationName;
  }

  public void setRuleConfigurationName(String ruleConfigurationName) {
    this.ruleConfigurationName = ruleConfigurationName;
  }


  public DebugRuleEvaluationStatus ruleEvaluationJobArn(String ruleEvaluationJobArn) {
    this.ruleEvaluationJobArn = ruleEvaluationJobArn;
    return this;
  }

  /**
   * Get ruleEvaluationJobArn
   * @return ruleEvaluationJobArn
   */
  @javax.annotation.Nullable
  public String getRuleEvaluationJobArn() {
    return ruleEvaluationJobArn;
  }

  public void setRuleEvaluationJobArn(String ruleEvaluationJobArn) {
    this.ruleEvaluationJobArn = ruleEvaluationJobArn;
  }


  public DebugRuleEvaluationStatus ruleEvaluationStatus(RuleEvaluationStatus ruleEvaluationStatus) {
    this.ruleEvaluationStatus = ruleEvaluationStatus;
    return this;
  }

  /**
   * Get ruleEvaluationStatus
   * @return ruleEvaluationStatus
   */
  @javax.annotation.Nullable
  public RuleEvaluationStatus getRuleEvaluationStatus() {
    return ruleEvaluationStatus;
  }

  public void setRuleEvaluationStatus(RuleEvaluationStatus ruleEvaluationStatus) {
    this.ruleEvaluationStatus = ruleEvaluationStatus;
  }


  public DebugRuleEvaluationStatus statusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Get statusDetails
   * @return statusDetails
   */
  @javax.annotation.Nullable
  public String getStatusDetails() {
    return statusDetails;
  }

  public void setStatusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
  }


  public DebugRuleEvaluationStatus lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DebugRuleEvaluationStatus debugRuleEvaluationStatus = (DebugRuleEvaluationStatus) o;
    return Objects.equals(this.ruleConfigurationName, debugRuleEvaluationStatus.ruleConfigurationName) &&
        Objects.equals(this.ruleEvaluationJobArn, debugRuleEvaluationStatus.ruleEvaluationJobArn) &&
        Objects.equals(this.ruleEvaluationStatus, debugRuleEvaluationStatus.ruleEvaluationStatus) &&
        Objects.equals(this.statusDetails, debugRuleEvaluationStatus.statusDetails) &&
        Objects.equals(this.lastModifiedTime, debugRuleEvaluationStatus.lastModifiedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ruleConfigurationName, ruleEvaluationJobArn, ruleEvaluationStatus, statusDetails, lastModifiedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DebugRuleEvaluationStatus {\n");
    sb.append("    ruleConfigurationName: ").append(toIndentedString(ruleConfigurationName)).append("\n");
    sb.append("    ruleEvaluationJobArn: ").append(toIndentedString(ruleEvaluationJobArn)).append("\n");
    sb.append("    ruleEvaluationStatus: ").append(toIndentedString(ruleEvaluationStatus)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RuleConfigurationName");
    openapiFields.add("RuleEvaluationJobArn");
    openapiFields.add("RuleEvaluationStatus");
    openapiFields.add("StatusDetails");
    openapiFields.add("LastModifiedTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DebugRuleEvaluationStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DebugRuleEvaluationStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DebugRuleEvaluationStatus is not found in the empty JSON string", DebugRuleEvaluationStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DebugRuleEvaluationStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DebugRuleEvaluationStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RuleConfigurationName`
      if (jsonObj.get("RuleConfigurationName") != null && !jsonObj.get("RuleConfigurationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RuleConfigurationName"));
      }
      // validate the optional field `RuleEvaluationJobArn`
      if (jsonObj.get("RuleEvaluationJobArn") != null && !jsonObj.get("RuleEvaluationJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RuleEvaluationJobArn"));
      }
      // validate the optional field `RuleEvaluationStatus`
      if (jsonObj.get("RuleEvaluationStatus") != null && !jsonObj.get("RuleEvaluationStatus").isJsonNull()) {
        RuleEvaluationStatus.validateJsonElement(jsonObj.get("RuleEvaluationStatus"));
      }
      // validate the optional field `StatusDetails`
      if (jsonObj.get("StatusDetails") != null && !jsonObj.get("StatusDetails").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusDetails"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DebugRuleEvaluationStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DebugRuleEvaluationStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DebugRuleEvaluationStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DebugRuleEvaluationStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<DebugRuleEvaluationStatus>() {
           @Override
           public void write(JsonWriter out, DebugRuleEvaluationStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DebugRuleEvaluationStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DebugRuleEvaluationStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DebugRuleEvaluationStatus
   * @throws IOException if the JSON string is invalid with respect to DebugRuleEvaluationStatus
   */
  public static DebugRuleEvaluationStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DebugRuleEvaluationStatus.class);
  }

  /**
   * Convert an instance of DebugRuleEvaluationStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

