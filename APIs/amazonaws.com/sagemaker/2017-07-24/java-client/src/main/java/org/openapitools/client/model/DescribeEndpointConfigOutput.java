/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DataCaptureConfig;
import org.openapitools.client.model.DescribeEndpointOutputAsyncInferenceConfig;
import org.openapitools.client.model.DescribeEndpointOutputExplainerConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeEndpointConfigOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeEndpointConfigOutput {
  public static final String SERIALIZED_NAME_ENDPOINT_CONFIG_NAME = "EndpointConfigName";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_CONFIG_NAME)
  private String endpointConfigName;

  public static final String SERIALIZED_NAME_ENDPOINT_CONFIG_ARN = "EndpointConfigArn";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_CONFIG_ARN)
  private String endpointConfigArn;

  public static final String SERIALIZED_NAME_PRODUCTION_VARIANTS = "ProductionVariants";
  @SerializedName(SERIALIZED_NAME_PRODUCTION_VARIANTS)
  private List productionVariants;

  public static final String SERIALIZED_NAME_DATA_CAPTURE_CONFIG = "DataCaptureConfig";
  @SerializedName(SERIALIZED_NAME_DATA_CAPTURE_CONFIG)
  private DataCaptureConfig dataCaptureConfig;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_ASYNC_INFERENCE_CONFIG = "AsyncInferenceConfig";
  @SerializedName(SERIALIZED_NAME_ASYNC_INFERENCE_CONFIG)
  private DescribeEndpointOutputAsyncInferenceConfig asyncInferenceConfig;

  public static final String SERIALIZED_NAME_EXPLAINER_CONFIG = "ExplainerConfig";
  @SerializedName(SERIALIZED_NAME_EXPLAINER_CONFIG)
  private DescribeEndpointOutputExplainerConfig explainerConfig;

  public static final String SERIALIZED_NAME_SHADOW_PRODUCTION_VARIANTS = "ShadowProductionVariants";
  @SerializedName(SERIALIZED_NAME_SHADOW_PRODUCTION_VARIANTS)
  private List shadowProductionVariants;

  public DescribeEndpointConfigOutput() {
  }

  public DescribeEndpointConfigOutput endpointConfigName(String endpointConfigName) {
    this.endpointConfigName = endpointConfigName;
    return this;
  }

  /**
   * Get endpointConfigName
   * @return endpointConfigName
   */
  @javax.annotation.Nonnull
  public String getEndpointConfigName() {
    return endpointConfigName;
  }

  public void setEndpointConfigName(String endpointConfigName) {
    this.endpointConfigName = endpointConfigName;
  }


  public DescribeEndpointConfigOutput endpointConfigArn(String endpointConfigArn) {
    this.endpointConfigArn = endpointConfigArn;
    return this;
  }

  /**
   * Get endpointConfigArn
   * @return endpointConfigArn
   */
  @javax.annotation.Nonnull
  public String getEndpointConfigArn() {
    return endpointConfigArn;
  }

  public void setEndpointConfigArn(String endpointConfigArn) {
    this.endpointConfigArn = endpointConfigArn;
  }


  public DescribeEndpointConfigOutput productionVariants(List productionVariants) {
    this.productionVariants = productionVariants;
    return this;
  }

  /**
   * Get productionVariants
   * @return productionVariants
   */
  @javax.annotation.Nonnull
  public List getProductionVariants() {
    return productionVariants;
  }

  public void setProductionVariants(List productionVariants) {
    this.productionVariants = productionVariants;
  }


  public DescribeEndpointConfigOutput dataCaptureConfig(DataCaptureConfig dataCaptureConfig) {
    this.dataCaptureConfig = dataCaptureConfig;
    return this;
  }

  /**
   * Get dataCaptureConfig
   * @return dataCaptureConfig
   */
  @javax.annotation.Nullable
  public DataCaptureConfig getDataCaptureConfig() {
    return dataCaptureConfig;
  }

  public void setDataCaptureConfig(DataCaptureConfig dataCaptureConfig) {
    this.dataCaptureConfig = dataCaptureConfig;
  }


  public DescribeEndpointConfigOutput kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public DescribeEndpointConfigOutput creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeEndpointConfigOutput asyncInferenceConfig(DescribeEndpointOutputAsyncInferenceConfig asyncInferenceConfig) {
    this.asyncInferenceConfig = asyncInferenceConfig;
    return this;
  }

  /**
   * Get asyncInferenceConfig
   * @return asyncInferenceConfig
   */
  @javax.annotation.Nullable
  public DescribeEndpointOutputAsyncInferenceConfig getAsyncInferenceConfig() {
    return asyncInferenceConfig;
  }

  public void setAsyncInferenceConfig(DescribeEndpointOutputAsyncInferenceConfig asyncInferenceConfig) {
    this.asyncInferenceConfig = asyncInferenceConfig;
  }


  public DescribeEndpointConfigOutput explainerConfig(DescribeEndpointOutputExplainerConfig explainerConfig) {
    this.explainerConfig = explainerConfig;
    return this;
  }

  /**
   * Get explainerConfig
   * @return explainerConfig
   */
  @javax.annotation.Nullable
  public DescribeEndpointOutputExplainerConfig getExplainerConfig() {
    return explainerConfig;
  }

  public void setExplainerConfig(DescribeEndpointOutputExplainerConfig explainerConfig) {
    this.explainerConfig = explainerConfig;
  }


  public DescribeEndpointConfigOutput shadowProductionVariants(List shadowProductionVariants) {
    this.shadowProductionVariants = shadowProductionVariants;
    return this;
  }

  /**
   * Get shadowProductionVariants
   * @return shadowProductionVariants
   */
  @javax.annotation.Nullable
  public List getShadowProductionVariants() {
    return shadowProductionVariants;
  }

  public void setShadowProductionVariants(List shadowProductionVariants) {
    this.shadowProductionVariants = shadowProductionVariants;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeEndpointConfigOutput describeEndpointConfigOutput = (DescribeEndpointConfigOutput) o;
    return Objects.equals(this.endpointConfigName, describeEndpointConfigOutput.endpointConfigName) &&
        Objects.equals(this.endpointConfigArn, describeEndpointConfigOutput.endpointConfigArn) &&
        Objects.equals(this.productionVariants, describeEndpointConfigOutput.productionVariants) &&
        Objects.equals(this.dataCaptureConfig, describeEndpointConfigOutput.dataCaptureConfig) &&
        Objects.equals(this.kmsKeyId, describeEndpointConfigOutput.kmsKeyId) &&
        Objects.equals(this.creationTime, describeEndpointConfigOutput.creationTime) &&
        Objects.equals(this.asyncInferenceConfig, describeEndpointConfigOutput.asyncInferenceConfig) &&
        Objects.equals(this.explainerConfig, describeEndpointConfigOutput.explainerConfig) &&
        Objects.equals(this.shadowProductionVariants, describeEndpointConfigOutput.shadowProductionVariants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointConfigName, endpointConfigArn, productionVariants, dataCaptureConfig, kmsKeyId, creationTime, asyncInferenceConfig, explainerConfig, shadowProductionVariants);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeEndpointConfigOutput {\n");
    sb.append("    endpointConfigName: ").append(toIndentedString(endpointConfigName)).append("\n");
    sb.append("    endpointConfigArn: ").append(toIndentedString(endpointConfigArn)).append("\n");
    sb.append("    productionVariants: ").append(toIndentedString(productionVariants)).append("\n");
    sb.append("    dataCaptureConfig: ").append(toIndentedString(dataCaptureConfig)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    asyncInferenceConfig: ").append(toIndentedString(asyncInferenceConfig)).append("\n");
    sb.append("    explainerConfig: ").append(toIndentedString(explainerConfig)).append("\n");
    sb.append("    shadowProductionVariants: ").append(toIndentedString(shadowProductionVariants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointConfigName");
    openapiFields.add("EndpointConfigArn");
    openapiFields.add("ProductionVariants");
    openapiFields.add("DataCaptureConfig");
    openapiFields.add("KmsKeyId");
    openapiFields.add("CreationTime");
    openapiFields.add("AsyncInferenceConfig");
    openapiFields.add("ExplainerConfig");
    openapiFields.add("ShadowProductionVariants");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EndpointConfigName");
    openapiRequiredFields.add("EndpointConfigArn");
    openapiRequiredFields.add("ProductionVariants");
    openapiRequiredFields.add("CreationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeEndpointConfigOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeEndpointConfigOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeEndpointConfigOutput is not found in the empty JSON string", DescribeEndpointConfigOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeEndpointConfigOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeEndpointConfigOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeEndpointConfigOutput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EndpointConfigName`
      String.validateJsonElement(jsonObj.get("EndpointConfigName"));
      // validate the required field `EndpointConfigArn`
      String.validateJsonElement(jsonObj.get("EndpointConfigArn"));
      // validate the required field `ProductionVariants`
      List.validateJsonElement(jsonObj.get("ProductionVariants"));
      // validate the optional field `DataCaptureConfig`
      if (jsonObj.get("DataCaptureConfig") != null && !jsonObj.get("DataCaptureConfig").isJsonNull()) {
        DataCaptureConfig.validateJsonElement(jsonObj.get("DataCaptureConfig"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `AsyncInferenceConfig`
      if (jsonObj.get("AsyncInferenceConfig") != null && !jsonObj.get("AsyncInferenceConfig").isJsonNull()) {
        DescribeEndpointOutputAsyncInferenceConfig.validateJsonElement(jsonObj.get("AsyncInferenceConfig"));
      }
      // validate the optional field `ExplainerConfig`
      if (jsonObj.get("ExplainerConfig") != null && !jsonObj.get("ExplainerConfig").isJsonNull()) {
        DescribeEndpointOutputExplainerConfig.validateJsonElement(jsonObj.get("ExplainerConfig"));
      }
      // validate the optional field `ShadowProductionVariants`
      if (jsonObj.get("ShadowProductionVariants") != null && !jsonObj.get("ShadowProductionVariants").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ShadowProductionVariants"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeEndpointConfigOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeEndpointConfigOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeEndpointConfigOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeEndpointConfigOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeEndpointConfigOutput>() {
           @Override
           public void write(JsonWriter out, DescribeEndpointConfigOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeEndpointConfigOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeEndpointConfigOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeEndpointConfigOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeEndpointConfigOutput
   */
  public static DescribeEndpointConfigOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeEndpointConfigOutput.class);
  }

  /**
   * Convert an instance of DescribeEndpointConfigOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

