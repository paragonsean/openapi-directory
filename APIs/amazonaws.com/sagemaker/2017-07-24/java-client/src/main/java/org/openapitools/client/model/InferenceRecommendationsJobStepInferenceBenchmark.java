/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.EndpointOutputConfiguration;
import org.openapitools.client.model.InferenceMetrics;
import org.openapitools.client.model.ModelConfiguration;
import org.openapitools.client.model.RecommendationMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InferenceRecommendationsJobStepInferenceBenchmark
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InferenceRecommendationsJobStepInferenceBenchmark {
  public static final String SERIALIZED_NAME_METRICS = "Metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private RecommendationMetrics metrics;

  public static final String SERIALIZED_NAME_ENDPOINT_CONFIGURATION = "EndpointConfiguration";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_CONFIGURATION)
  private EndpointOutputConfiguration endpointConfiguration;

  public static final String SERIALIZED_NAME_MODEL_CONFIGURATION = "ModelConfiguration";
  @SerializedName(SERIALIZED_NAME_MODEL_CONFIGURATION)
  private ModelConfiguration modelConfiguration;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_ENDPOINT_METRICS = "EndpointMetrics";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_METRICS)
  private InferenceMetrics endpointMetrics;

  public static final String SERIALIZED_NAME_INVOCATION_END_TIME = "InvocationEndTime";
  @SerializedName(SERIALIZED_NAME_INVOCATION_END_TIME)
  private OffsetDateTime invocationEndTime;

  public static final String SERIALIZED_NAME_INVOCATION_START_TIME = "InvocationStartTime";
  @SerializedName(SERIALIZED_NAME_INVOCATION_START_TIME)
  private OffsetDateTime invocationStartTime;

  public InferenceRecommendationsJobStepInferenceBenchmark() {
  }

  public InferenceRecommendationsJobStepInferenceBenchmark metrics(RecommendationMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public RecommendationMetrics getMetrics() {
    return metrics;
  }

  public void setMetrics(RecommendationMetrics metrics) {
    this.metrics = metrics;
  }


  public InferenceRecommendationsJobStepInferenceBenchmark endpointConfiguration(EndpointOutputConfiguration endpointConfiguration) {
    this.endpointConfiguration = endpointConfiguration;
    return this;
  }

  /**
   * Get endpointConfiguration
   * @return endpointConfiguration
   */
  @javax.annotation.Nullable
  public EndpointOutputConfiguration getEndpointConfiguration() {
    return endpointConfiguration;
  }

  public void setEndpointConfiguration(EndpointOutputConfiguration endpointConfiguration) {
    this.endpointConfiguration = endpointConfiguration;
  }


  public InferenceRecommendationsJobStepInferenceBenchmark modelConfiguration(ModelConfiguration modelConfiguration) {
    this.modelConfiguration = modelConfiguration;
    return this;
  }

  /**
   * Get modelConfiguration
   * @return modelConfiguration
   */
  @javax.annotation.Nonnull
  public ModelConfiguration getModelConfiguration() {
    return modelConfiguration;
  }

  public void setModelConfiguration(ModelConfiguration modelConfiguration) {
    this.modelConfiguration = modelConfiguration;
  }


  public InferenceRecommendationsJobStepInferenceBenchmark failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public InferenceRecommendationsJobStepInferenceBenchmark endpointMetrics(InferenceMetrics endpointMetrics) {
    this.endpointMetrics = endpointMetrics;
    return this;
  }

  /**
   * Get endpointMetrics
   * @return endpointMetrics
   */
  @javax.annotation.Nullable
  public InferenceMetrics getEndpointMetrics() {
    return endpointMetrics;
  }

  public void setEndpointMetrics(InferenceMetrics endpointMetrics) {
    this.endpointMetrics = endpointMetrics;
  }


  public InferenceRecommendationsJobStepInferenceBenchmark invocationEndTime(OffsetDateTime invocationEndTime) {
    this.invocationEndTime = invocationEndTime;
    return this;
  }

  /**
   * Get invocationEndTime
   * @return invocationEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInvocationEndTime() {
    return invocationEndTime;
  }

  public void setInvocationEndTime(OffsetDateTime invocationEndTime) {
    this.invocationEndTime = invocationEndTime;
  }


  public InferenceRecommendationsJobStepInferenceBenchmark invocationStartTime(OffsetDateTime invocationStartTime) {
    this.invocationStartTime = invocationStartTime;
    return this;
  }

  /**
   * Get invocationStartTime
   * @return invocationStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInvocationStartTime() {
    return invocationStartTime;
  }

  public void setInvocationStartTime(OffsetDateTime invocationStartTime) {
    this.invocationStartTime = invocationStartTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InferenceRecommendationsJobStepInferenceBenchmark inferenceRecommendationsJobStepInferenceBenchmark = (InferenceRecommendationsJobStepInferenceBenchmark) o;
    return Objects.equals(this.metrics, inferenceRecommendationsJobStepInferenceBenchmark.metrics) &&
        Objects.equals(this.endpointConfiguration, inferenceRecommendationsJobStepInferenceBenchmark.endpointConfiguration) &&
        Objects.equals(this.modelConfiguration, inferenceRecommendationsJobStepInferenceBenchmark.modelConfiguration) &&
        Objects.equals(this.failureReason, inferenceRecommendationsJobStepInferenceBenchmark.failureReason) &&
        Objects.equals(this.endpointMetrics, inferenceRecommendationsJobStepInferenceBenchmark.endpointMetrics) &&
        Objects.equals(this.invocationEndTime, inferenceRecommendationsJobStepInferenceBenchmark.invocationEndTime) &&
        Objects.equals(this.invocationStartTime, inferenceRecommendationsJobStepInferenceBenchmark.invocationStartTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metrics, endpointConfiguration, modelConfiguration, failureReason, endpointMetrics, invocationEndTime, invocationStartTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InferenceRecommendationsJobStepInferenceBenchmark {\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    endpointConfiguration: ").append(toIndentedString(endpointConfiguration)).append("\n");
    sb.append("    modelConfiguration: ").append(toIndentedString(modelConfiguration)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    endpointMetrics: ").append(toIndentedString(endpointMetrics)).append("\n");
    sb.append("    invocationEndTime: ").append(toIndentedString(invocationEndTime)).append("\n");
    sb.append("    invocationStartTime: ").append(toIndentedString(invocationStartTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Metrics");
    openapiFields.add("EndpointConfiguration");
    openapiFields.add("ModelConfiguration");
    openapiFields.add("FailureReason");
    openapiFields.add("EndpointMetrics");
    openapiFields.add("InvocationEndTime");
    openapiFields.add("InvocationStartTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ModelConfiguration");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InferenceRecommendationsJobStepInferenceBenchmark
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InferenceRecommendationsJobStepInferenceBenchmark.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InferenceRecommendationsJobStepInferenceBenchmark is not found in the empty JSON string", InferenceRecommendationsJobStepInferenceBenchmark.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InferenceRecommendationsJobStepInferenceBenchmark.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InferenceRecommendationsJobStepInferenceBenchmark` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InferenceRecommendationsJobStepInferenceBenchmark.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Metrics`
      if (jsonObj.get("Metrics") != null && !jsonObj.get("Metrics").isJsonNull()) {
        RecommendationMetrics.validateJsonElement(jsonObj.get("Metrics"));
      }
      // validate the optional field `EndpointConfiguration`
      if (jsonObj.get("EndpointConfiguration") != null && !jsonObj.get("EndpointConfiguration").isJsonNull()) {
        EndpointOutputConfiguration.validateJsonElement(jsonObj.get("EndpointConfiguration"));
      }
      // validate the required field `ModelConfiguration`
      ModelConfiguration.validateJsonElement(jsonObj.get("ModelConfiguration"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `EndpointMetrics`
      if (jsonObj.get("EndpointMetrics") != null && !jsonObj.get("EndpointMetrics").isJsonNull()) {
        InferenceMetrics.validateJsonElement(jsonObj.get("EndpointMetrics"));
      }
      // validate the optional field `InvocationEndTime`
      if (jsonObj.get("InvocationEndTime") != null && !jsonObj.get("InvocationEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("InvocationEndTime"));
      }
      // validate the optional field `InvocationStartTime`
      if (jsonObj.get("InvocationStartTime") != null && !jsonObj.get("InvocationStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("InvocationStartTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InferenceRecommendationsJobStepInferenceBenchmark.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InferenceRecommendationsJobStepInferenceBenchmark' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InferenceRecommendationsJobStepInferenceBenchmark> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InferenceRecommendationsJobStepInferenceBenchmark.class));

       return (TypeAdapter<T>) new TypeAdapter<InferenceRecommendationsJobStepInferenceBenchmark>() {
           @Override
           public void write(JsonWriter out, InferenceRecommendationsJobStepInferenceBenchmark value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InferenceRecommendationsJobStepInferenceBenchmark read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InferenceRecommendationsJobStepInferenceBenchmark given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InferenceRecommendationsJobStepInferenceBenchmark
   * @throws IOException if the JSON string is invalid with respect to InferenceRecommendationsJobStepInferenceBenchmark
   */
  public static InferenceRecommendationsJobStepInferenceBenchmark fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InferenceRecommendationsJobStepInferenceBenchmark.class);
  }

  /**
   * Convert an instance of InferenceRecommendationsJobStepInferenceBenchmark to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

