/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AlgorithmSpecificationTrainingImageConfig;
import org.openapitools.client.model.TrainingInputMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Specifies the training algorithm to use in a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html\&quot;&gt;CreateTrainingJob&lt;/a&gt; request.&lt;/p&gt; &lt;p&gt;For more information about algorithms provided by SageMaker, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\&quot;&gt;Algorithms&lt;/a&gt;. For information about using your own algorithms, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\&quot;&gt;Using Your Own Algorithms with Amazon SageMaker&lt;/a&gt;. &lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AlgorithmSpecification {
  public static final String SERIALIZED_NAME_TRAINING_IMAGE = "TrainingImage";
  @SerializedName(SERIALIZED_NAME_TRAINING_IMAGE)
  private String trainingImage;

  public static final String SERIALIZED_NAME_ALGORITHM_NAME = "AlgorithmName";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_NAME)
  private String algorithmName;

  public static final String SERIALIZED_NAME_TRAINING_INPUT_MODE = "TrainingInputMode";
  @SerializedName(SERIALIZED_NAME_TRAINING_INPUT_MODE)
  private TrainingInputMode trainingInputMode;

  public static final String SERIALIZED_NAME_METRIC_DEFINITIONS = "MetricDefinitions";
  @SerializedName(SERIALIZED_NAME_METRIC_DEFINITIONS)
  private List metricDefinitions;

  public static final String SERIALIZED_NAME_ENABLE_SAGE_MAKER_METRICS_TIME_SERIES = "EnableSageMakerMetricsTimeSeries";
  @SerializedName(SERIALIZED_NAME_ENABLE_SAGE_MAKER_METRICS_TIME_SERIES)
  private Boolean enableSageMakerMetricsTimeSeries;

  public static final String SERIALIZED_NAME_CONTAINER_ENTRYPOINT = "ContainerEntrypoint";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ENTRYPOINT)
  private List containerEntrypoint;

  public static final String SERIALIZED_NAME_CONTAINER_ARGUMENTS = "ContainerArguments";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ARGUMENTS)
  private List containerArguments;

  public static final String SERIALIZED_NAME_TRAINING_IMAGE_CONFIG = "TrainingImageConfig";
  @SerializedName(SERIALIZED_NAME_TRAINING_IMAGE_CONFIG)
  private AlgorithmSpecificationTrainingImageConfig trainingImageConfig;

  public AlgorithmSpecification() {
  }

  public AlgorithmSpecification trainingImage(String trainingImage) {
    this.trainingImage = trainingImage;
    return this;
  }

  /**
   * Get trainingImage
   * @return trainingImage
   */
  @javax.annotation.Nullable
  public String getTrainingImage() {
    return trainingImage;
  }

  public void setTrainingImage(String trainingImage) {
    this.trainingImage = trainingImage;
  }


  public AlgorithmSpecification algorithmName(String algorithmName) {
    this.algorithmName = algorithmName;
    return this;
  }

  /**
   * Get algorithmName
   * @return algorithmName
   */
  @javax.annotation.Nullable
  public String getAlgorithmName() {
    return algorithmName;
  }

  public void setAlgorithmName(String algorithmName) {
    this.algorithmName = algorithmName;
  }


  public AlgorithmSpecification trainingInputMode(TrainingInputMode trainingInputMode) {
    this.trainingInputMode = trainingInputMode;
    return this;
  }

  /**
   * Get trainingInputMode
   * @return trainingInputMode
   */
  @javax.annotation.Nonnull
  public TrainingInputMode getTrainingInputMode() {
    return trainingInputMode;
  }

  public void setTrainingInputMode(TrainingInputMode trainingInputMode) {
    this.trainingInputMode = trainingInputMode;
  }


  public AlgorithmSpecification metricDefinitions(List metricDefinitions) {
    this.metricDefinitions = metricDefinitions;
    return this;
  }

  /**
   * Get metricDefinitions
   * @return metricDefinitions
   */
  @javax.annotation.Nullable
  public List getMetricDefinitions() {
    return metricDefinitions;
  }

  public void setMetricDefinitions(List metricDefinitions) {
    this.metricDefinitions = metricDefinitions;
  }


  public AlgorithmSpecification enableSageMakerMetricsTimeSeries(Boolean enableSageMakerMetricsTimeSeries) {
    this.enableSageMakerMetricsTimeSeries = enableSageMakerMetricsTimeSeries;
    return this;
  }

  /**
   * Get enableSageMakerMetricsTimeSeries
   * @return enableSageMakerMetricsTimeSeries
   */
  @javax.annotation.Nullable
  public Boolean getEnableSageMakerMetricsTimeSeries() {
    return enableSageMakerMetricsTimeSeries;
  }

  public void setEnableSageMakerMetricsTimeSeries(Boolean enableSageMakerMetricsTimeSeries) {
    this.enableSageMakerMetricsTimeSeries = enableSageMakerMetricsTimeSeries;
  }


  public AlgorithmSpecification containerEntrypoint(List containerEntrypoint) {
    this.containerEntrypoint = containerEntrypoint;
    return this;
  }

  /**
   * Get containerEntrypoint
   * @return containerEntrypoint
   */
  @javax.annotation.Nullable
  public List getContainerEntrypoint() {
    return containerEntrypoint;
  }

  public void setContainerEntrypoint(List containerEntrypoint) {
    this.containerEntrypoint = containerEntrypoint;
  }


  public AlgorithmSpecification containerArguments(List containerArguments) {
    this.containerArguments = containerArguments;
    return this;
  }

  /**
   * Get containerArguments
   * @return containerArguments
   */
  @javax.annotation.Nullable
  public List getContainerArguments() {
    return containerArguments;
  }

  public void setContainerArguments(List containerArguments) {
    this.containerArguments = containerArguments;
  }


  public AlgorithmSpecification trainingImageConfig(AlgorithmSpecificationTrainingImageConfig trainingImageConfig) {
    this.trainingImageConfig = trainingImageConfig;
    return this;
  }

  /**
   * Get trainingImageConfig
   * @return trainingImageConfig
   */
  @javax.annotation.Nullable
  public AlgorithmSpecificationTrainingImageConfig getTrainingImageConfig() {
    return trainingImageConfig;
  }

  public void setTrainingImageConfig(AlgorithmSpecificationTrainingImageConfig trainingImageConfig) {
    this.trainingImageConfig = trainingImageConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlgorithmSpecification algorithmSpecification = (AlgorithmSpecification) o;
    return Objects.equals(this.trainingImage, algorithmSpecification.trainingImage) &&
        Objects.equals(this.algorithmName, algorithmSpecification.algorithmName) &&
        Objects.equals(this.trainingInputMode, algorithmSpecification.trainingInputMode) &&
        Objects.equals(this.metricDefinitions, algorithmSpecification.metricDefinitions) &&
        Objects.equals(this.enableSageMakerMetricsTimeSeries, algorithmSpecification.enableSageMakerMetricsTimeSeries) &&
        Objects.equals(this.containerEntrypoint, algorithmSpecification.containerEntrypoint) &&
        Objects.equals(this.containerArguments, algorithmSpecification.containerArguments) &&
        Objects.equals(this.trainingImageConfig, algorithmSpecification.trainingImageConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainingImage, algorithmName, trainingInputMode, metricDefinitions, enableSageMakerMetricsTimeSeries, containerEntrypoint, containerArguments, trainingImageConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlgorithmSpecification {\n");
    sb.append("    trainingImage: ").append(toIndentedString(trainingImage)).append("\n");
    sb.append("    algorithmName: ").append(toIndentedString(algorithmName)).append("\n");
    sb.append("    trainingInputMode: ").append(toIndentedString(trainingInputMode)).append("\n");
    sb.append("    metricDefinitions: ").append(toIndentedString(metricDefinitions)).append("\n");
    sb.append("    enableSageMakerMetricsTimeSeries: ").append(toIndentedString(enableSageMakerMetricsTimeSeries)).append("\n");
    sb.append("    containerEntrypoint: ").append(toIndentedString(containerEntrypoint)).append("\n");
    sb.append("    containerArguments: ").append(toIndentedString(containerArguments)).append("\n");
    sb.append("    trainingImageConfig: ").append(toIndentedString(trainingImageConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrainingImage");
    openapiFields.add("AlgorithmName");
    openapiFields.add("TrainingInputMode");
    openapiFields.add("MetricDefinitions");
    openapiFields.add("EnableSageMakerMetricsTimeSeries");
    openapiFields.add("ContainerEntrypoint");
    openapiFields.add("ContainerArguments");
    openapiFields.add("TrainingImageConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TrainingInputMode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlgorithmSpecification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlgorithmSpecification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlgorithmSpecification is not found in the empty JSON string", AlgorithmSpecification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlgorithmSpecification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlgorithmSpecification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AlgorithmSpecification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TrainingImage`
      if (jsonObj.get("TrainingImage") != null && !jsonObj.get("TrainingImage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrainingImage"));
      }
      // validate the optional field `AlgorithmName`
      if (jsonObj.get("AlgorithmName") != null && !jsonObj.get("AlgorithmName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AlgorithmName"));
      }
      // validate the required field `TrainingInputMode`
      TrainingInputMode.validateJsonElement(jsonObj.get("TrainingInputMode"));
      // validate the optional field `MetricDefinitions`
      if (jsonObj.get("MetricDefinitions") != null && !jsonObj.get("MetricDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MetricDefinitions"));
      }
      // validate the optional field `EnableSageMakerMetricsTimeSeries`
      if (jsonObj.get("EnableSageMakerMetricsTimeSeries") != null && !jsonObj.get("EnableSageMakerMetricsTimeSeries").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableSageMakerMetricsTimeSeries"));
      }
      // validate the optional field `ContainerEntrypoint`
      if (jsonObj.get("ContainerEntrypoint") != null && !jsonObj.get("ContainerEntrypoint").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ContainerEntrypoint"));
      }
      // validate the optional field `ContainerArguments`
      if (jsonObj.get("ContainerArguments") != null && !jsonObj.get("ContainerArguments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ContainerArguments"));
      }
      // validate the optional field `TrainingImageConfig`
      if (jsonObj.get("TrainingImageConfig") != null && !jsonObj.get("TrainingImageConfig").isJsonNull()) {
        AlgorithmSpecificationTrainingImageConfig.validateJsonElement(jsonObj.get("TrainingImageConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlgorithmSpecification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlgorithmSpecification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlgorithmSpecification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlgorithmSpecification.class));

       return (TypeAdapter<T>) new TypeAdapter<AlgorithmSpecification>() {
           @Override
           public void write(JsonWriter out, AlgorithmSpecification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlgorithmSpecification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlgorithmSpecification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlgorithmSpecification
   * @throws IOException if the JSON string is invalid with respect to AlgorithmSpecification
   */
  public static AlgorithmSpecification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlgorithmSpecification.class);
  }

  /**
   * Convert an instance of AlgorithmSpecification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

