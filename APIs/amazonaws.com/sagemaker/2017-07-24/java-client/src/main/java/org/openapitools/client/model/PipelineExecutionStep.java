/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PipelineExecutionStepCacheHitResult;
import org.openapitools.client.model.PipelineExecutionStepMetadata;
import org.openapitools.client.model.PipelineExecutionStepSelectiveExecutionResult;
import org.openapitools.client.model.StepStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An execution of a step in a pipeline.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PipelineExecutionStep {
  public static final String SERIALIZED_NAME_STEP_NAME = "StepName";
  @SerializedName(SERIALIZED_NAME_STEP_NAME)
  private String stepName;

  public static final String SERIALIZED_NAME_STEP_DISPLAY_NAME = "StepDisplayName";
  @SerializedName(SERIALIZED_NAME_STEP_DISPLAY_NAME)
  private String stepDisplayName;

  public static final String SERIALIZED_NAME_STEP_DESCRIPTION = "StepDescription";
  @SerializedName(SERIALIZED_NAME_STEP_DESCRIPTION)
  private String stepDescription;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_STEP_STATUS = "StepStatus";
  @SerializedName(SERIALIZED_NAME_STEP_STATUS)
  private StepStatus stepStatus;

  public static final String SERIALIZED_NAME_CACHE_HIT_RESULT = "CacheHitResult";
  @SerializedName(SERIALIZED_NAME_CACHE_HIT_RESULT)
  private PipelineExecutionStepCacheHitResult cacheHitResult;

  public static final String SERIALIZED_NAME_ATTEMPT_COUNT = "AttemptCount";
  @SerializedName(SERIALIZED_NAME_ATTEMPT_COUNT)
  private Integer attemptCount;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_METADATA = "Metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private PipelineExecutionStepMetadata metadata;

  public static final String SERIALIZED_NAME_SELECTIVE_EXECUTION_RESULT = "SelectiveExecutionResult";
  @SerializedName(SERIALIZED_NAME_SELECTIVE_EXECUTION_RESULT)
  private PipelineExecutionStepSelectiveExecutionResult selectiveExecutionResult;

  public PipelineExecutionStep() {
  }

  public PipelineExecutionStep stepName(String stepName) {
    this.stepName = stepName;
    return this;
  }

  /**
   * Get stepName
   * @return stepName
   */
  @javax.annotation.Nullable
  public String getStepName() {
    return stepName;
  }

  public void setStepName(String stepName) {
    this.stepName = stepName;
  }


  public PipelineExecutionStep stepDisplayName(String stepDisplayName) {
    this.stepDisplayName = stepDisplayName;
    return this;
  }

  /**
   * Get stepDisplayName
   * @return stepDisplayName
   */
  @javax.annotation.Nullable
  public String getStepDisplayName() {
    return stepDisplayName;
  }

  public void setStepDisplayName(String stepDisplayName) {
    this.stepDisplayName = stepDisplayName;
  }


  public PipelineExecutionStep stepDescription(String stepDescription) {
    this.stepDescription = stepDescription;
    return this;
  }

  /**
   * Get stepDescription
   * @return stepDescription
   */
  @javax.annotation.Nullable
  public String getStepDescription() {
    return stepDescription;
  }

  public void setStepDescription(String stepDescription) {
    this.stepDescription = stepDescription;
  }


  public PipelineExecutionStep startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public PipelineExecutionStep endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public PipelineExecutionStep stepStatus(StepStatus stepStatus) {
    this.stepStatus = stepStatus;
    return this;
  }

  /**
   * Get stepStatus
   * @return stepStatus
   */
  @javax.annotation.Nullable
  public StepStatus getStepStatus() {
    return stepStatus;
  }

  public void setStepStatus(StepStatus stepStatus) {
    this.stepStatus = stepStatus;
  }


  public PipelineExecutionStep cacheHitResult(PipelineExecutionStepCacheHitResult cacheHitResult) {
    this.cacheHitResult = cacheHitResult;
    return this;
  }

  /**
   * Get cacheHitResult
   * @return cacheHitResult
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepCacheHitResult getCacheHitResult() {
    return cacheHitResult;
  }

  public void setCacheHitResult(PipelineExecutionStepCacheHitResult cacheHitResult) {
    this.cacheHitResult = cacheHitResult;
  }


  public PipelineExecutionStep attemptCount(Integer attemptCount) {
    this.attemptCount = attemptCount;
    return this;
  }

  /**
   * Get attemptCount
   * @return attemptCount
   */
  @javax.annotation.Nullable
  public Integer getAttemptCount() {
    return attemptCount;
  }

  public void setAttemptCount(Integer attemptCount) {
    this.attemptCount = attemptCount;
  }


  public PipelineExecutionStep failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public PipelineExecutionStep metadata(PipelineExecutionStepMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(PipelineExecutionStepMetadata metadata) {
    this.metadata = metadata;
  }


  public PipelineExecutionStep selectiveExecutionResult(PipelineExecutionStepSelectiveExecutionResult selectiveExecutionResult) {
    this.selectiveExecutionResult = selectiveExecutionResult;
    return this;
  }

  /**
   * Get selectiveExecutionResult
   * @return selectiveExecutionResult
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepSelectiveExecutionResult getSelectiveExecutionResult() {
    return selectiveExecutionResult;
  }

  public void setSelectiveExecutionResult(PipelineExecutionStepSelectiveExecutionResult selectiveExecutionResult) {
    this.selectiveExecutionResult = selectiveExecutionResult;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineExecutionStep pipelineExecutionStep = (PipelineExecutionStep) o;
    return Objects.equals(this.stepName, pipelineExecutionStep.stepName) &&
        Objects.equals(this.stepDisplayName, pipelineExecutionStep.stepDisplayName) &&
        Objects.equals(this.stepDescription, pipelineExecutionStep.stepDescription) &&
        Objects.equals(this.startTime, pipelineExecutionStep.startTime) &&
        Objects.equals(this.endTime, pipelineExecutionStep.endTime) &&
        Objects.equals(this.stepStatus, pipelineExecutionStep.stepStatus) &&
        Objects.equals(this.cacheHitResult, pipelineExecutionStep.cacheHitResult) &&
        Objects.equals(this.attemptCount, pipelineExecutionStep.attemptCount) &&
        Objects.equals(this.failureReason, pipelineExecutionStep.failureReason) &&
        Objects.equals(this.metadata, pipelineExecutionStep.metadata) &&
        Objects.equals(this.selectiveExecutionResult, pipelineExecutionStep.selectiveExecutionResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stepName, stepDisplayName, stepDescription, startTime, endTime, stepStatus, cacheHitResult, attemptCount, failureReason, metadata, selectiveExecutionResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineExecutionStep {\n");
    sb.append("    stepName: ").append(toIndentedString(stepName)).append("\n");
    sb.append("    stepDisplayName: ").append(toIndentedString(stepDisplayName)).append("\n");
    sb.append("    stepDescription: ").append(toIndentedString(stepDescription)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    stepStatus: ").append(toIndentedString(stepStatus)).append("\n");
    sb.append("    cacheHitResult: ").append(toIndentedString(cacheHitResult)).append("\n");
    sb.append("    attemptCount: ").append(toIndentedString(attemptCount)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    selectiveExecutionResult: ").append(toIndentedString(selectiveExecutionResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StepName");
    openapiFields.add("StepDisplayName");
    openapiFields.add("StepDescription");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("StepStatus");
    openapiFields.add("CacheHitResult");
    openapiFields.add("AttemptCount");
    openapiFields.add("FailureReason");
    openapiFields.add("Metadata");
    openapiFields.add("SelectiveExecutionResult");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PipelineExecutionStep
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PipelineExecutionStep.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PipelineExecutionStep is not found in the empty JSON string", PipelineExecutionStep.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PipelineExecutionStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PipelineExecutionStep` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `StepName`
      if (jsonObj.get("StepName") != null && !jsonObj.get("StepName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StepName"));
      }
      // validate the optional field `StepDisplayName`
      if (jsonObj.get("StepDisplayName") != null && !jsonObj.get("StepDisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StepDisplayName"));
      }
      // validate the optional field `StepDescription`
      if (jsonObj.get("StepDescription") != null && !jsonObj.get("StepDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StepDescription"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `StepStatus`
      if (jsonObj.get("StepStatus") != null && !jsonObj.get("StepStatus").isJsonNull()) {
        StepStatus.validateJsonElement(jsonObj.get("StepStatus"));
      }
      // validate the optional field `CacheHitResult`
      if (jsonObj.get("CacheHitResult") != null && !jsonObj.get("CacheHitResult").isJsonNull()) {
        PipelineExecutionStepCacheHitResult.validateJsonElement(jsonObj.get("CacheHitResult"));
      }
      // validate the optional field `AttemptCount`
      if (jsonObj.get("AttemptCount") != null && !jsonObj.get("AttemptCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AttemptCount"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `Metadata`
      if (jsonObj.get("Metadata") != null && !jsonObj.get("Metadata").isJsonNull()) {
        PipelineExecutionStepMetadata.validateJsonElement(jsonObj.get("Metadata"));
      }
      // validate the optional field `SelectiveExecutionResult`
      if (jsonObj.get("SelectiveExecutionResult") != null && !jsonObj.get("SelectiveExecutionResult").isJsonNull()) {
        PipelineExecutionStepSelectiveExecutionResult.validateJsonElement(jsonObj.get("SelectiveExecutionResult"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PipelineExecutionStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PipelineExecutionStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PipelineExecutionStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PipelineExecutionStep.class));

       return (TypeAdapter<T>) new TypeAdapter<PipelineExecutionStep>() {
           @Override
           public void write(JsonWriter out, PipelineExecutionStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PipelineExecutionStep read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PipelineExecutionStep given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PipelineExecutionStep
   * @throws IOException if the JSON string is invalid with respect to PipelineExecutionStep
   */
  public static PipelineExecutionStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PipelineExecutionStep.class);
  }

  /**
   * Convert an instance of PipelineExecutionStep to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

