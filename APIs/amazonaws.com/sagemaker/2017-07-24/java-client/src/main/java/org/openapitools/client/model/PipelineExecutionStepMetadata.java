/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PipelineExecutionStepMetadataAutoMLJob;
import org.openapitools.client.model.PipelineExecutionStepMetadataCallback;
import org.openapitools.client.model.PipelineExecutionStepMetadataClarifyCheck;
import org.openapitools.client.model.PipelineExecutionStepMetadataCondition;
import org.openapitools.client.model.PipelineExecutionStepMetadataEMR;
import org.openapitools.client.model.PipelineExecutionStepMetadataFail;
import org.openapitools.client.model.PipelineExecutionStepMetadataLambda;
import org.openapitools.client.model.PipelineExecutionStepMetadataModel;
import org.openapitools.client.model.PipelineExecutionStepMetadataProcessingJob;
import org.openapitools.client.model.PipelineExecutionStepMetadataQualityCheck;
import org.openapitools.client.model.PipelineExecutionStepMetadataRegisterModel;
import org.openapitools.client.model.PipelineExecutionStepMetadataTrainingJob;
import org.openapitools.client.model.PipelineExecutionStepMetadataTransformJob;
import org.openapitools.client.model.PipelineExecutionStepMetadataTuningJob;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PipelineExecutionStepMetadata
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PipelineExecutionStepMetadata {
  public static final String SERIALIZED_NAME_TRAINING_JOB = "TrainingJob";
  @SerializedName(SERIALIZED_NAME_TRAINING_JOB)
  private PipelineExecutionStepMetadataTrainingJob trainingJob;

  public static final String SERIALIZED_NAME_PROCESSING_JOB = "ProcessingJob";
  @SerializedName(SERIALIZED_NAME_PROCESSING_JOB)
  private PipelineExecutionStepMetadataProcessingJob processingJob;

  public static final String SERIALIZED_NAME_TRANSFORM_JOB = "TransformJob";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_JOB)
  private PipelineExecutionStepMetadataTransformJob transformJob;

  public static final String SERIALIZED_NAME_TUNING_JOB = "TuningJob";
  @SerializedName(SERIALIZED_NAME_TUNING_JOB)
  private PipelineExecutionStepMetadataTuningJob tuningJob;

  public static final String SERIALIZED_NAME_MODEL = "Model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private PipelineExecutionStepMetadataModel model;

  public static final String SERIALIZED_NAME_REGISTER_MODEL = "RegisterModel";
  @SerializedName(SERIALIZED_NAME_REGISTER_MODEL)
  private PipelineExecutionStepMetadataRegisterModel registerModel;

  public static final String SERIALIZED_NAME_CONDITION = "Condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private PipelineExecutionStepMetadataCondition condition;

  public static final String SERIALIZED_NAME_CALLBACK = "Callback";
  @SerializedName(SERIALIZED_NAME_CALLBACK)
  private PipelineExecutionStepMetadataCallback callback;

  public static final String SERIALIZED_NAME_LAMBDA = "Lambda";
  @SerializedName(SERIALIZED_NAME_LAMBDA)
  private PipelineExecutionStepMetadataLambda lambda;

  public static final String SERIALIZED_NAME_QUALITY_CHECK = "QualityCheck";
  @SerializedName(SERIALIZED_NAME_QUALITY_CHECK)
  private PipelineExecutionStepMetadataQualityCheck qualityCheck;

  public static final String SERIALIZED_NAME_CLARIFY_CHECK = "ClarifyCheck";
  @SerializedName(SERIALIZED_NAME_CLARIFY_CHECK)
  private PipelineExecutionStepMetadataClarifyCheck clarifyCheck;

  public static final String SERIALIZED_NAME_E_M_R = "EMR";
  @SerializedName(SERIALIZED_NAME_E_M_R)
  private PipelineExecutionStepMetadataEMR EMR;

  public static final String SERIALIZED_NAME_FAIL = "Fail";
  @SerializedName(SERIALIZED_NAME_FAIL)
  private PipelineExecutionStepMetadataFail fail;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB = "AutoMLJob";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB)
  private PipelineExecutionStepMetadataAutoMLJob autoMLJob;

  public PipelineExecutionStepMetadata() {
  }

  public PipelineExecutionStepMetadata trainingJob(PipelineExecutionStepMetadataTrainingJob trainingJob) {
    this.trainingJob = trainingJob;
    return this;
  }

  /**
   * Get trainingJob
   * @return trainingJob
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataTrainingJob getTrainingJob() {
    return trainingJob;
  }

  public void setTrainingJob(PipelineExecutionStepMetadataTrainingJob trainingJob) {
    this.trainingJob = trainingJob;
  }


  public PipelineExecutionStepMetadata processingJob(PipelineExecutionStepMetadataProcessingJob processingJob) {
    this.processingJob = processingJob;
    return this;
  }

  /**
   * Get processingJob
   * @return processingJob
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataProcessingJob getProcessingJob() {
    return processingJob;
  }

  public void setProcessingJob(PipelineExecutionStepMetadataProcessingJob processingJob) {
    this.processingJob = processingJob;
  }


  public PipelineExecutionStepMetadata transformJob(PipelineExecutionStepMetadataTransformJob transformJob) {
    this.transformJob = transformJob;
    return this;
  }

  /**
   * Get transformJob
   * @return transformJob
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataTransformJob getTransformJob() {
    return transformJob;
  }

  public void setTransformJob(PipelineExecutionStepMetadataTransformJob transformJob) {
    this.transformJob = transformJob;
  }


  public PipelineExecutionStepMetadata tuningJob(PipelineExecutionStepMetadataTuningJob tuningJob) {
    this.tuningJob = tuningJob;
    return this;
  }

  /**
   * Get tuningJob
   * @return tuningJob
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataTuningJob getTuningJob() {
    return tuningJob;
  }

  public void setTuningJob(PipelineExecutionStepMetadataTuningJob tuningJob) {
    this.tuningJob = tuningJob;
  }


  public PipelineExecutionStepMetadata model(PipelineExecutionStepMetadataModel model) {
    this.model = model;
    return this;
  }

  /**
   * Get model
   * @return model
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataModel getModel() {
    return model;
  }

  public void setModel(PipelineExecutionStepMetadataModel model) {
    this.model = model;
  }


  public PipelineExecutionStepMetadata registerModel(PipelineExecutionStepMetadataRegisterModel registerModel) {
    this.registerModel = registerModel;
    return this;
  }

  /**
   * Get registerModel
   * @return registerModel
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataRegisterModel getRegisterModel() {
    return registerModel;
  }

  public void setRegisterModel(PipelineExecutionStepMetadataRegisterModel registerModel) {
    this.registerModel = registerModel;
  }


  public PipelineExecutionStepMetadata condition(PipelineExecutionStepMetadataCondition condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Get condition
   * @return condition
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataCondition getCondition() {
    return condition;
  }

  public void setCondition(PipelineExecutionStepMetadataCondition condition) {
    this.condition = condition;
  }


  public PipelineExecutionStepMetadata callback(PipelineExecutionStepMetadataCallback callback) {
    this.callback = callback;
    return this;
  }

  /**
   * Get callback
   * @return callback
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataCallback getCallback() {
    return callback;
  }

  public void setCallback(PipelineExecutionStepMetadataCallback callback) {
    this.callback = callback;
  }


  public PipelineExecutionStepMetadata lambda(PipelineExecutionStepMetadataLambda lambda) {
    this.lambda = lambda;
    return this;
  }

  /**
   * Get lambda
   * @return lambda
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataLambda getLambda() {
    return lambda;
  }

  public void setLambda(PipelineExecutionStepMetadataLambda lambda) {
    this.lambda = lambda;
  }


  public PipelineExecutionStepMetadata qualityCheck(PipelineExecutionStepMetadataQualityCheck qualityCheck) {
    this.qualityCheck = qualityCheck;
    return this;
  }

  /**
   * Get qualityCheck
   * @return qualityCheck
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataQualityCheck getQualityCheck() {
    return qualityCheck;
  }

  public void setQualityCheck(PipelineExecutionStepMetadataQualityCheck qualityCheck) {
    this.qualityCheck = qualityCheck;
  }


  public PipelineExecutionStepMetadata clarifyCheck(PipelineExecutionStepMetadataClarifyCheck clarifyCheck) {
    this.clarifyCheck = clarifyCheck;
    return this;
  }

  /**
   * Get clarifyCheck
   * @return clarifyCheck
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataClarifyCheck getClarifyCheck() {
    return clarifyCheck;
  }

  public void setClarifyCheck(PipelineExecutionStepMetadataClarifyCheck clarifyCheck) {
    this.clarifyCheck = clarifyCheck;
  }


  public PipelineExecutionStepMetadata EMR(PipelineExecutionStepMetadataEMR EMR) {
    this.EMR = EMR;
    return this;
  }

  /**
   * Get EMR
   * @return EMR
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataEMR getEMR() {
    return EMR;
  }

  public void setEMR(PipelineExecutionStepMetadataEMR EMR) {
    this.EMR = EMR;
  }


  public PipelineExecutionStepMetadata fail(PipelineExecutionStepMetadataFail fail) {
    this.fail = fail;
    return this;
  }

  /**
   * Get fail
   * @return fail
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataFail getFail() {
    return fail;
  }

  public void setFail(PipelineExecutionStepMetadataFail fail) {
    this.fail = fail;
  }


  public PipelineExecutionStepMetadata autoMLJob(PipelineExecutionStepMetadataAutoMLJob autoMLJob) {
    this.autoMLJob = autoMLJob;
    return this;
  }

  /**
   * Get autoMLJob
   * @return autoMLJob
   */
  @javax.annotation.Nullable
  public PipelineExecutionStepMetadataAutoMLJob getAutoMLJob() {
    return autoMLJob;
  }

  public void setAutoMLJob(PipelineExecutionStepMetadataAutoMLJob autoMLJob) {
    this.autoMLJob = autoMLJob;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineExecutionStepMetadata pipelineExecutionStepMetadata = (PipelineExecutionStepMetadata) o;
    return Objects.equals(this.trainingJob, pipelineExecutionStepMetadata.trainingJob) &&
        Objects.equals(this.processingJob, pipelineExecutionStepMetadata.processingJob) &&
        Objects.equals(this.transformJob, pipelineExecutionStepMetadata.transformJob) &&
        Objects.equals(this.tuningJob, pipelineExecutionStepMetadata.tuningJob) &&
        Objects.equals(this.model, pipelineExecutionStepMetadata.model) &&
        Objects.equals(this.registerModel, pipelineExecutionStepMetadata.registerModel) &&
        Objects.equals(this.condition, pipelineExecutionStepMetadata.condition) &&
        Objects.equals(this.callback, pipelineExecutionStepMetadata.callback) &&
        Objects.equals(this.lambda, pipelineExecutionStepMetadata.lambda) &&
        Objects.equals(this.qualityCheck, pipelineExecutionStepMetadata.qualityCheck) &&
        Objects.equals(this.clarifyCheck, pipelineExecutionStepMetadata.clarifyCheck) &&
        Objects.equals(this.EMR, pipelineExecutionStepMetadata.EMR) &&
        Objects.equals(this.fail, pipelineExecutionStepMetadata.fail) &&
        Objects.equals(this.autoMLJob, pipelineExecutionStepMetadata.autoMLJob);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainingJob, processingJob, transformJob, tuningJob, model, registerModel, condition, callback, lambda, qualityCheck, clarifyCheck, EMR, fail, autoMLJob);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineExecutionStepMetadata {\n");
    sb.append("    trainingJob: ").append(toIndentedString(trainingJob)).append("\n");
    sb.append("    processingJob: ").append(toIndentedString(processingJob)).append("\n");
    sb.append("    transformJob: ").append(toIndentedString(transformJob)).append("\n");
    sb.append("    tuningJob: ").append(toIndentedString(tuningJob)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    registerModel: ").append(toIndentedString(registerModel)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("    lambda: ").append(toIndentedString(lambda)).append("\n");
    sb.append("    qualityCheck: ").append(toIndentedString(qualityCheck)).append("\n");
    sb.append("    clarifyCheck: ").append(toIndentedString(clarifyCheck)).append("\n");
    sb.append("    EMR: ").append(toIndentedString(EMR)).append("\n");
    sb.append("    fail: ").append(toIndentedString(fail)).append("\n");
    sb.append("    autoMLJob: ").append(toIndentedString(autoMLJob)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrainingJob");
    openapiFields.add("ProcessingJob");
    openapiFields.add("TransformJob");
    openapiFields.add("TuningJob");
    openapiFields.add("Model");
    openapiFields.add("RegisterModel");
    openapiFields.add("Condition");
    openapiFields.add("Callback");
    openapiFields.add("Lambda");
    openapiFields.add("QualityCheck");
    openapiFields.add("ClarifyCheck");
    openapiFields.add("EMR");
    openapiFields.add("Fail");
    openapiFields.add("AutoMLJob");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PipelineExecutionStepMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PipelineExecutionStepMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PipelineExecutionStepMetadata is not found in the empty JSON string", PipelineExecutionStepMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PipelineExecutionStepMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PipelineExecutionStepMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TrainingJob`
      if (jsonObj.get("TrainingJob") != null && !jsonObj.get("TrainingJob").isJsonNull()) {
        PipelineExecutionStepMetadataTrainingJob.validateJsonElement(jsonObj.get("TrainingJob"));
      }
      // validate the optional field `ProcessingJob`
      if (jsonObj.get("ProcessingJob") != null && !jsonObj.get("ProcessingJob").isJsonNull()) {
        PipelineExecutionStepMetadataProcessingJob.validateJsonElement(jsonObj.get("ProcessingJob"));
      }
      // validate the optional field `TransformJob`
      if (jsonObj.get("TransformJob") != null && !jsonObj.get("TransformJob").isJsonNull()) {
        PipelineExecutionStepMetadataTransformJob.validateJsonElement(jsonObj.get("TransformJob"));
      }
      // validate the optional field `TuningJob`
      if (jsonObj.get("TuningJob") != null && !jsonObj.get("TuningJob").isJsonNull()) {
        PipelineExecutionStepMetadataTuningJob.validateJsonElement(jsonObj.get("TuningJob"));
      }
      // validate the optional field `Model`
      if (jsonObj.get("Model") != null && !jsonObj.get("Model").isJsonNull()) {
        PipelineExecutionStepMetadataModel.validateJsonElement(jsonObj.get("Model"));
      }
      // validate the optional field `RegisterModel`
      if (jsonObj.get("RegisterModel") != null && !jsonObj.get("RegisterModel").isJsonNull()) {
        PipelineExecutionStepMetadataRegisterModel.validateJsonElement(jsonObj.get("RegisterModel"));
      }
      // validate the optional field `Condition`
      if (jsonObj.get("Condition") != null && !jsonObj.get("Condition").isJsonNull()) {
        PipelineExecutionStepMetadataCondition.validateJsonElement(jsonObj.get("Condition"));
      }
      // validate the optional field `Callback`
      if (jsonObj.get("Callback") != null && !jsonObj.get("Callback").isJsonNull()) {
        PipelineExecutionStepMetadataCallback.validateJsonElement(jsonObj.get("Callback"));
      }
      // validate the optional field `Lambda`
      if (jsonObj.get("Lambda") != null && !jsonObj.get("Lambda").isJsonNull()) {
        PipelineExecutionStepMetadataLambda.validateJsonElement(jsonObj.get("Lambda"));
      }
      // validate the optional field `QualityCheck`
      if (jsonObj.get("QualityCheck") != null && !jsonObj.get("QualityCheck").isJsonNull()) {
        PipelineExecutionStepMetadataQualityCheck.validateJsonElement(jsonObj.get("QualityCheck"));
      }
      // validate the optional field `ClarifyCheck`
      if (jsonObj.get("ClarifyCheck") != null && !jsonObj.get("ClarifyCheck").isJsonNull()) {
        PipelineExecutionStepMetadataClarifyCheck.validateJsonElement(jsonObj.get("ClarifyCheck"));
      }
      // validate the optional field `EMR`
      if (jsonObj.get("EMR") != null && !jsonObj.get("EMR").isJsonNull()) {
        PipelineExecutionStepMetadataEMR.validateJsonElement(jsonObj.get("EMR"));
      }
      // validate the optional field `Fail`
      if (jsonObj.get("Fail") != null && !jsonObj.get("Fail").isJsonNull()) {
        PipelineExecutionStepMetadataFail.validateJsonElement(jsonObj.get("Fail"));
      }
      // validate the optional field `AutoMLJob`
      if (jsonObj.get("AutoMLJob") != null && !jsonObj.get("AutoMLJob").isJsonNull()) {
        PipelineExecutionStepMetadataAutoMLJob.validateJsonElement(jsonObj.get("AutoMLJob"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PipelineExecutionStepMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PipelineExecutionStepMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PipelineExecutionStepMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PipelineExecutionStepMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<PipelineExecutionStepMetadata>() {
           @Override
           public void write(JsonWriter out, PipelineExecutionStepMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PipelineExecutionStepMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PipelineExecutionStepMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PipelineExecutionStepMetadata
   * @throws IOException if the JSON string is invalid with respect to PipelineExecutionStepMetadata
   */
  public static PipelineExecutionStepMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PipelineExecutionStepMetadata.class);
  }

  /**
   * Convert an instance of PipelineExecutionStepMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

