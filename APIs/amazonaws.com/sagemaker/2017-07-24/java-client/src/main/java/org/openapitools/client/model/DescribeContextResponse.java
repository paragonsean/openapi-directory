/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.DescribeContextResponseSource;
import org.openapitools.client.model.UserContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeContextResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeContextResponse {
  public static final String SERIALIZED_NAME_CONTEXT_NAME = "ContextName";
  @SerializedName(SERIALIZED_NAME_CONTEXT_NAME)
  private String contextName;

  public static final String SERIALIZED_NAME_CONTEXT_ARN = "ContextArn";
  @SerializedName(SERIALIZED_NAME_CONTEXT_ARN)
  private String contextArn;

  public static final String SERIALIZED_NAME_SOURCE = "Source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private DescribeContextResponseSource source;

  public static final String SERIALIZED_NAME_CONTEXT_TYPE = "ContextType";
  @SerializedName(SERIALIZED_NAME_CONTEXT_TYPE)
  private String contextType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PROPERTIES = "Properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map properties;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserContext createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private UserContext lastModifiedBy;

  public static final String SERIALIZED_NAME_LINEAGE_GROUP_ARN = "LineageGroupArn";
  @SerializedName(SERIALIZED_NAME_LINEAGE_GROUP_ARN)
  private String lineageGroupArn;

  public DescribeContextResponse() {
  }

  public DescribeContextResponse contextName(String contextName) {
    this.contextName = contextName;
    return this;
  }

  /**
   * Get contextName
   * @return contextName
   */
  @javax.annotation.Nullable
  public String getContextName() {
    return contextName;
  }

  public void setContextName(String contextName) {
    this.contextName = contextName;
  }


  public DescribeContextResponse contextArn(String contextArn) {
    this.contextArn = contextArn;
    return this;
  }

  /**
   * Get contextArn
   * @return contextArn
   */
  @javax.annotation.Nullable
  public String getContextArn() {
    return contextArn;
  }

  public void setContextArn(String contextArn) {
    this.contextArn = contextArn;
  }


  public DescribeContextResponse source(DescribeContextResponseSource source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public DescribeContextResponseSource getSource() {
    return source;
  }

  public void setSource(DescribeContextResponseSource source) {
    this.source = source;
  }


  public DescribeContextResponse contextType(String contextType) {
    this.contextType = contextType;
    return this;
  }

  /**
   * Get contextType
   * @return contextType
   */
  @javax.annotation.Nullable
  public String getContextType() {
    return contextType;
  }

  public void setContextType(String contextType) {
    this.contextType = contextType;
  }


  public DescribeContextResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeContextResponse properties(Map properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public Map getProperties() {
    return properties;
  }

  public void setProperties(Map properties) {
    this.properties = properties;
  }


  public DescribeContextResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeContextResponse createdBy(UserContext createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public UserContext getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(UserContext createdBy) {
    this.createdBy = createdBy;
  }


  public DescribeContextResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeContextResponse lastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public UserContext getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public DescribeContextResponse lineageGroupArn(String lineageGroupArn) {
    this.lineageGroupArn = lineageGroupArn;
    return this;
  }

  /**
   * Get lineageGroupArn
   * @return lineageGroupArn
   */
  @javax.annotation.Nullable
  public String getLineageGroupArn() {
    return lineageGroupArn;
  }

  public void setLineageGroupArn(String lineageGroupArn) {
    this.lineageGroupArn = lineageGroupArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeContextResponse describeContextResponse = (DescribeContextResponse) o;
    return Objects.equals(this.contextName, describeContextResponse.contextName) &&
        Objects.equals(this.contextArn, describeContextResponse.contextArn) &&
        Objects.equals(this.source, describeContextResponse.source) &&
        Objects.equals(this.contextType, describeContextResponse.contextType) &&
        Objects.equals(this.description, describeContextResponse.description) &&
        Objects.equals(this.properties, describeContextResponse.properties) &&
        Objects.equals(this.creationTime, describeContextResponse.creationTime) &&
        Objects.equals(this.createdBy, describeContextResponse.createdBy) &&
        Objects.equals(this.lastModifiedTime, describeContextResponse.lastModifiedTime) &&
        Objects.equals(this.lastModifiedBy, describeContextResponse.lastModifiedBy) &&
        Objects.equals(this.lineageGroupArn, describeContextResponse.lineageGroupArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contextName, contextArn, source, contextType, description, properties, creationTime, createdBy, lastModifiedTime, lastModifiedBy, lineageGroupArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeContextResponse {\n");
    sb.append("    contextName: ").append(toIndentedString(contextName)).append("\n");
    sb.append("    contextArn: ").append(toIndentedString(contextArn)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    contextType: ").append(toIndentedString(contextType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lineageGroupArn: ").append(toIndentedString(lineageGroupArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ContextName");
    openapiFields.add("ContextArn");
    openapiFields.add("Source");
    openapiFields.add("ContextType");
    openapiFields.add("Description");
    openapiFields.add("Properties");
    openapiFields.add("CreationTime");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("LineageGroupArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeContextResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeContextResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeContextResponse is not found in the empty JSON string", DescribeContextResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeContextResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeContextResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ContextName`
      if (jsonObj.get("ContextName") != null && !jsonObj.get("ContextName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ContextName"));
      }
      // validate the optional field `ContextArn`
      if (jsonObj.get("ContextArn") != null && !jsonObj.get("ContextArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ContextArn"));
      }
      // validate the optional field `Source`
      if (jsonObj.get("Source") != null && !jsonObj.get("Source").isJsonNull()) {
        DescribeContextResponseSource.validateJsonElement(jsonObj.get("Source"));
      }
      // validate the optional field `ContextType`
      if (jsonObj.get("ContextType") != null && !jsonObj.get("ContextType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ContextType"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Properties`
      if (jsonObj.get("Properties") != null && !jsonObj.get("Properties").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Properties"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `LineageGroupArn`
      if (jsonObj.get("LineageGroupArn") != null && !jsonObj.get("LineageGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LineageGroupArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeContextResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeContextResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeContextResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeContextResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeContextResponse>() {
           @Override
           public void write(JsonWriter out, DescribeContextResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeContextResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeContextResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeContextResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeContextResponse
   */
  public static DescribeContextResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeContextResponse.class);
  }

  /**
   * Convert an instance of DescribeContextResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

