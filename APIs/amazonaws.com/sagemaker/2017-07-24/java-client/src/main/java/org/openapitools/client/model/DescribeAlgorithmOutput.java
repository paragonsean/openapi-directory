/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AlgorithmStatus;
import org.openapitools.client.model.DescribeAlgorithmOutputAlgorithmStatusDetails;
import org.openapitools.client.model.DescribeAlgorithmOutputInferenceSpecification;
import org.openapitools.client.model.DescribeAlgorithmOutputTrainingSpecification;
import org.openapitools.client.model.DescribeAlgorithmOutputValidationSpecification;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAlgorithmOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAlgorithmOutput {
  public static final String SERIALIZED_NAME_ALGORITHM_NAME = "AlgorithmName";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_NAME)
  private String algorithmName;

  public static final String SERIALIZED_NAME_ALGORITHM_ARN = "AlgorithmArn";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_ARN)
  private String algorithmArn;

  public static final String SERIALIZED_NAME_ALGORITHM_DESCRIPTION = "AlgorithmDescription";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_DESCRIPTION)
  private String algorithmDescription;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_TRAINING_SPECIFICATION = "TrainingSpecification";
  @SerializedName(SERIALIZED_NAME_TRAINING_SPECIFICATION)
  private DescribeAlgorithmOutputTrainingSpecification trainingSpecification;

  public static final String SERIALIZED_NAME_INFERENCE_SPECIFICATION = "InferenceSpecification";
  @SerializedName(SERIALIZED_NAME_INFERENCE_SPECIFICATION)
  private DescribeAlgorithmOutputInferenceSpecification inferenceSpecification;

  public static final String SERIALIZED_NAME_VALIDATION_SPECIFICATION = "ValidationSpecification";
  @SerializedName(SERIALIZED_NAME_VALIDATION_SPECIFICATION)
  private DescribeAlgorithmOutputValidationSpecification validationSpecification;

  public static final String SERIALIZED_NAME_ALGORITHM_STATUS = "AlgorithmStatus";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_STATUS)
  private AlgorithmStatus algorithmStatus;

  public static final String SERIALIZED_NAME_ALGORITHM_STATUS_DETAILS = "AlgorithmStatusDetails";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_STATUS_DETAILS)
  private DescribeAlgorithmOutputAlgorithmStatusDetails algorithmStatusDetails;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "ProductId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_CERTIFY_FOR_MARKETPLACE = "CertifyForMarketplace";
  @SerializedName(SERIALIZED_NAME_CERTIFY_FOR_MARKETPLACE)
  private Boolean certifyForMarketplace;

  public DescribeAlgorithmOutput() {
  }

  public DescribeAlgorithmOutput algorithmName(String algorithmName) {
    this.algorithmName = algorithmName;
    return this;
  }

  /**
   * Get algorithmName
   * @return algorithmName
   */
  @javax.annotation.Nonnull
  public String getAlgorithmName() {
    return algorithmName;
  }

  public void setAlgorithmName(String algorithmName) {
    this.algorithmName = algorithmName;
  }


  public DescribeAlgorithmOutput algorithmArn(String algorithmArn) {
    this.algorithmArn = algorithmArn;
    return this;
  }

  /**
   * Get algorithmArn
   * @return algorithmArn
   */
  @javax.annotation.Nonnull
  public String getAlgorithmArn() {
    return algorithmArn;
  }

  public void setAlgorithmArn(String algorithmArn) {
    this.algorithmArn = algorithmArn;
  }


  public DescribeAlgorithmOutput algorithmDescription(String algorithmDescription) {
    this.algorithmDescription = algorithmDescription;
    return this;
  }

  /**
   * Get algorithmDescription
   * @return algorithmDescription
   */
  @javax.annotation.Nullable
  public String getAlgorithmDescription() {
    return algorithmDescription;
  }

  public void setAlgorithmDescription(String algorithmDescription) {
    this.algorithmDescription = algorithmDescription;
  }


  public DescribeAlgorithmOutput creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeAlgorithmOutput trainingSpecification(DescribeAlgorithmOutputTrainingSpecification trainingSpecification) {
    this.trainingSpecification = trainingSpecification;
    return this;
  }

  /**
   * Get trainingSpecification
   * @return trainingSpecification
   */
  @javax.annotation.Nonnull
  public DescribeAlgorithmOutputTrainingSpecification getTrainingSpecification() {
    return trainingSpecification;
  }

  public void setTrainingSpecification(DescribeAlgorithmOutputTrainingSpecification trainingSpecification) {
    this.trainingSpecification = trainingSpecification;
  }


  public DescribeAlgorithmOutput inferenceSpecification(DescribeAlgorithmOutputInferenceSpecification inferenceSpecification) {
    this.inferenceSpecification = inferenceSpecification;
    return this;
  }

  /**
   * Get inferenceSpecification
   * @return inferenceSpecification
   */
  @javax.annotation.Nullable
  public DescribeAlgorithmOutputInferenceSpecification getInferenceSpecification() {
    return inferenceSpecification;
  }

  public void setInferenceSpecification(DescribeAlgorithmOutputInferenceSpecification inferenceSpecification) {
    this.inferenceSpecification = inferenceSpecification;
  }


  public DescribeAlgorithmOutput validationSpecification(DescribeAlgorithmOutputValidationSpecification validationSpecification) {
    this.validationSpecification = validationSpecification;
    return this;
  }

  /**
   * Get validationSpecification
   * @return validationSpecification
   */
  @javax.annotation.Nullable
  public DescribeAlgorithmOutputValidationSpecification getValidationSpecification() {
    return validationSpecification;
  }

  public void setValidationSpecification(DescribeAlgorithmOutputValidationSpecification validationSpecification) {
    this.validationSpecification = validationSpecification;
  }


  public DescribeAlgorithmOutput algorithmStatus(AlgorithmStatus algorithmStatus) {
    this.algorithmStatus = algorithmStatus;
    return this;
  }

  /**
   * Get algorithmStatus
   * @return algorithmStatus
   */
  @javax.annotation.Nonnull
  public AlgorithmStatus getAlgorithmStatus() {
    return algorithmStatus;
  }

  public void setAlgorithmStatus(AlgorithmStatus algorithmStatus) {
    this.algorithmStatus = algorithmStatus;
  }


  public DescribeAlgorithmOutput algorithmStatusDetails(DescribeAlgorithmOutputAlgorithmStatusDetails algorithmStatusDetails) {
    this.algorithmStatusDetails = algorithmStatusDetails;
    return this;
  }

  /**
   * Get algorithmStatusDetails
   * @return algorithmStatusDetails
   */
  @javax.annotation.Nonnull
  public DescribeAlgorithmOutputAlgorithmStatusDetails getAlgorithmStatusDetails() {
    return algorithmStatusDetails;
  }

  public void setAlgorithmStatusDetails(DescribeAlgorithmOutputAlgorithmStatusDetails algorithmStatusDetails) {
    this.algorithmStatusDetails = algorithmStatusDetails;
  }


  public DescribeAlgorithmOutput productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public DescribeAlgorithmOutput certifyForMarketplace(Boolean certifyForMarketplace) {
    this.certifyForMarketplace = certifyForMarketplace;
    return this;
  }

  /**
   * Get certifyForMarketplace
   * @return certifyForMarketplace
   */
  @javax.annotation.Nullable
  public Boolean getCertifyForMarketplace() {
    return certifyForMarketplace;
  }

  public void setCertifyForMarketplace(Boolean certifyForMarketplace) {
    this.certifyForMarketplace = certifyForMarketplace;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAlgorithmOutput describeAlgorithmOutput = (DescribeAlgorithmOutput) o;
    return Objects.equals(this.algorithmName, describeAlgorithmOutput.algorithmName) &&
        Objects.equals(this.algorithmArn, describeAlgorithmOutput.algorithmArn) &&
        Objects.equals(this.algorithmDescription, describeAlgorithmOutput.algorithmDescription) &&
        Objects.equals(this.creationTime, describeAlgorithmOutput.creationTime) &&
        Objects.equals(this.trainingSpecification, describeAlgorithmOutput.trainingSpecification) &&
        Objects.equals(this.inferenceSpecification, describeAlgorithmOutput.inferenceSpecification) &&
        Objects.equals(this.validationSpecification, describeAlgorithmOutput.validationSpecification) &&
        Objects.equals(this.algorithmStatus, describeAlgorithmOutput.algorithmStatus) &&
        Objects.equals(this.algorithmStatusDetails, describeAlgorithmOutput.algorithmStatusDetails) &&
        Objects.equals(this.productId, describeAlgorithmOutput.productId) &&
        Objects.equals(this.certifyForMarketplace, describeAlgorithmOutput.certifyForMarketplace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(algorithmName, algorithmArn, algorithmDescription, creationTime, trainingSpecification, inferenceSpecification, validationSpecification, algorithmStatus, algorithmStatusDetails, productId, certifyForMarketplace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAlgorithmOutput {\n");
    sb.append("    algorithmName: ").append(toIndentedString(algorithmName)).append("\n");
    sb.append("    algorithmArn: ").append(toIndentedString(algorithmArn)).append("\n");
    sb.append("    algorithmDescription: ").append(toIndentedString(algorithmDescription)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    trainingSpecification: ").append(toIndentedString(trainingSpecification)).append("\n");
    sb.append("    inferenceSpecification: ").append(toIndentedString(inferenceSpecification)).append("\n");
    sb.append("    validationSpecification: ").append(toIndentedString(validationSpecification)).append("\n");
    sb.append("    algorithmStatus: ").append(toIndentedString(algorithmStatus)).append("\n");
    sb.append("    algorithmStatusDetails: ").append(toIndentedString(algorithmStatusDetails)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    certifyForMarketplace: ").append(toIndentedString(certifyForMarketplace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AlgorithmName");
    openapiFields.add("AlgorithmArn");
    openapiFields.add("AlgorithmDescription");
    openapiFields.add("CreationTime");
    openapiFields.add("TrainingSpecification");
    openapiFields.add("InferenceSpecification");
    openapiFields.add("ValidationSpecification");
    openapiFields.add("AlgorithmStatus");
    openapiFields.add("AlgorithmStatusDetails");
    openapiFields.add("ProductId");
    openapiFields.add("CertifyForMarketplace");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AlgorithmName");
    openapiRequiredFields.add("AlgorithmArn");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("TrainingSpecification");
    openapiRequiredFields.add("AlgorithmStatus");
    openapiRequiredFields.add("AlgorithmStatusDetails");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAlgorithmOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAlgorithmOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAlgorithmOutput is not found in the empty JSON string", DescribeAlgorithmOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAlgorithmOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAlgorithmOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAlgorithmOutput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AlgorithmName`
      String.validateJsonElement(jsonObj.get("AlgorithmName"));
      // validate the required field `AlgorithmArn`
      String.validateJsonElement(jsonObj.get("AlgorithmArn"));
      // validate the optional field `AlgorithmDescription`
      if (jsonObj.get("AlgorithmDescription") != null && !jsonObj.get("AlgorithmDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AlgorithmDescription"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the required field `TrainingSpecification`
      DescribeAlgorithmOutputTrainingSpecification.validateJsonElement(jsonObj.get("TrainingSpecification"));
      // validate the optional field `InferenceSpecification`
      if (jsonObj.get("InferenceSpecification") != null && !jsonObj.get("InferenceSpecification").isJsonNull()) {
        DescribeAlgorithmOutputInferenceSpecification.validateJsonElement(jsonObj.get("InferenceSpecification"));
      }
      // validate the optional field `ValidationSpecification`
      if (jsonObj.get("ValidationSpecification") != null && !jsonObj.get("ValidationSpecification").isJsonNull()) {
        DescribeAlgorithmOutputValidationSpecification.validateJsonElement(jsonObj.get("ValidationSpecification"));
      }
      // validate the required field `AlgorithmStatus`
      AlgorithmStatus.validateJsonElement(jsonObj.get("AlgorithmStatus"));
      // validate the required field `AlgorithmStatusDetails`
      DescribeAlgorithmOutputAlgorithmStatusDetails.validateJsonElement(jsonObj.get("AlgorithmStatusDetails"));
      // validate the optional field `ProductId`
      if (jsonObj.get("ProductId") != null && !jsonObj.get("ProductId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProductId"));
      }
      // validate the optional field `CertifyForMarketplace`
      if (jsonObj.get("CertifyForMarketplace") != null && !jsonObj.get("CertifyForMarketplace").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CertifyForMarketplace"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAlgorithmOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAlgorithmOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAlgorithmOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAlgorithmOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAlgorithmOutput>() {
           @Override
           public void write(JsonWriter out, DescribeAlgorithmOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAlgorithmOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAlgorithmOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAlgorithmOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeAlgorithmOutput
   */
  public static DescribeAlgorithmOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAlgorithmOutput.class);
  }

  /**
   * Convert an instance of DescribeAlgorithmOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

