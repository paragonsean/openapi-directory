/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Direction;
import org.openapitools.client.model.QueryLineageRequestFilters;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * QueryLineageRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QueryLineageRequest {
  public static final String SERIALIZED_NAME_START_ARNS = "StartArns";
  @SerializedName(SERIALIZED_NAME_START_ARNS)
  private List startArns;

  public static final String SERIALIZED_NAME_DIRECTION = "Direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private Direction direction;

  public static final String SERIALIZED_NAME_INCLUDE_EDGES = "IncludeEdges";
  @SerializedName(SERIALIZED_NAME_INCLUDE_EDGES)
  private Boolean includeEdges;

  public static final String SERIALIZED_NAME_FILTERS = "Filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private QueryLineageRequestFilters filters;

  public static final String SERIALIZED_NAME_MAX_DEPTH = "MaxDepth";
  @SerializedName(SERIALIZED_NAME_MAX_DEPTH)
  private Integer maxDepth;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public QueryLineageRequest() {
  }

  public QueryLineageRequest startArns(List startArns) {
    this.startArns = startArns;
    return this;
  }

  /**
   * Get startArns
   * @return startArns
   */
  @javax.annotation.Nullable
  public List getStartArns() {
    return startArns;
  }

  public void setStartArns(List startArns) {
    this.startArns = startArns;
  }


  public QueryLineageRequest direction(Direction direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @javax.annotation.Nullable
  public Direction getDirection() {
    return direction;
  }

  public void setDirection(Direction direction) {
    this.direction = direction;
  }


  public QueryLineageRequest includeEdges(Boolean includeEdges) {
    this.includeEdges = includeEdges;
    return this;
  }

  /**
   * Get includeEdges
   * @return includeEdges
   */
  @javax.annotation.Nullable
  public Boolean getIncludeEdges() {
    return includeEdges;
  }

  public void setIncludeEdges(Boolean includeEdges) {
    this.includeEdges = includeEdges;
  }


  public QueryLineageRequest filters(QueryLineageRequestFilters filters) {
    this.filters = filters;
    return this;
  }

  /**
   * Get filters
   * @return filters
   */
  @javax.annotation.Nullable
  public QueryLineageRequestFilters getFilters() {
    return filters;
  }

  public void setFilters(QueryLineageRequestFilters filters) {
    this.filters = filters;
  }


  public QueryLineageRequest maxDepth(Integer maxDepth) {
    this.maxDepth = maxDepth;
    return this;
  }

  /**
   * Get maxDepth
   * @return maxDepth
   */
  @javax.annotation.Nullable
  public Integer getMaxDepth() {
    return maxDepth;
  }

  public void setMaxDepth(Integer maxDepth) {
    this.maxDepth = maxDepth;
  }


  public QueryLineageRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public QueryLineageRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryLineageRequest queryLineageRequest = (QueryLineageRequest) o;
    return Objects.equals(this.startArns, queryLineageRequest.startArns) &&
        Objects.equals(this.direction, queryLineageRequest.direction) &&
        Objects.equals(this.includeEdges, queryLineageRequest.includeEdges) &&
        Objects.equals(this.filters, queryLineageRequest.filters) &&
        Objects.equals(this.maxDepth, queryLineageRequest.maxDepth) &&
        Objects.equals(this.maxResults, queryLineageRequest.maxResults) &&
        Objects.equals(this.nextToken, queryLineageRequest.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startArns, direction, includeEdges, filters, maxDepth, maxResults, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryLineageRequest {\n");
    sb.append("    startArns: ").append(toIndentedString(startArns)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    includeEdges: ").append(toIndentedString(includeEdges)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    maxDepth: ").append(toIndentedString(maxDepth)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StartArns");
    openapiFields.add("Direction");
    openapiFields.add("IncludeEdges");
    openapiFields.add("Filters");
    openapiFields.add("MaxDepth");
    openapiFields.add("MaxResults");
    openapiFields.add("NextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QueryLineageRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QueryLineageRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QueryLineageRequest is not found in the empty JSON string", QueryLineageRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QueryLineageRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QueryLineageRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `StartArns`
      if (jsonObj.get("StartArns") != null && !jsonObj.get("StartArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StartArns"));
      }
      // validate the optional field `Direction`
      if (jsonObj.get("Direction") != null && !jsonObj.get("Direction").isJsonNull()) {
        Direction.validateJsonElement(jsonObj.get("Direction"));
      }
      // validate the optional field `IncludeEdges`
      if (jsonObj.get("IncludeEdges") != null && !jsonObj.get("IncludeEdges").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IncludeEdges"));
      }
      // validate the optional field `Filters`
      if (jsonObj.get("Filters") != null && !jsonObj.get("Filters").isJsonNull()) {
        QueryLineageRequestFilters.validateJsonElement(jsonObj.get("Filters"));
      }
      // validate the optional field `MaxDepth`
      if (jsonObj.get("MaxDepth") != null && !jsonObj.get("MaxDepth").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxDepth"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QueryLineageRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QueryLineageRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QueryLineageRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QueryLineageRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<QueryLineageRequest>() {
           @Override
           public void write(JsonWriter out, QueryLineageRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QueryLineageRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QueryLineageRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QueryLineageRequest
   * @throws IOException if the JSON string is invalid with respect to QueryLineageRequest
   */
  public static QueryLineageRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QueryLineageRequest.class);
  }

  /**
   * Convert an instance of QueryLineageRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

