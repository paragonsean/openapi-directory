/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAutoMLJobRequestAutoMLJobConfig;
import org.openapitools.client.model.CreateAutoMLJobRequestAutoMLJobObjective;
import org.openapitools.client.model.CreateAutoMLJobRequestModelDeployConfig;
import org.openapitools.client.model.CreateAutoMLJobRequestOutputDataConfig;
import org.openapitools.client.model.ProblemType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAutoMLJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAutoMLJobRequest {
  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_NAME = "AutoMLJobName";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_NAME)
  private String autoMLJobName;

  public static final String SERIALIZED_NAME_INPUT_DATA_CONFIG = "InputDataConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_CONFIG)
  private List inputDataConfig;

  public static final String SERIALIZED_NAME_OUTPUT_DATA_CONFIG = "OutputDataConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_DATA_CONFIG)
  private CreateAutoMLJobRequestOutputDataConfig outputDataConfig;

  public static final String SERIALIZED_NAME_PROBLEM_TYPE = "ProblemType";
  @SerializedName(SERIALIZED_NAME_PROBLEM_TYPE)
  private ProblemType problemType;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_OBJECTIVE = "AutoMLJobObjective";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_OBJECTIVE)
  private CreateAutoMLJobRequestAutoMLJobObjective autoMLJobObjective;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_CONFIG = "AutoMLJobConfig";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_CONFIG)
  private CreateAutoMLJobRequestAutoMLJobConfig autoMLJobConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_GENERATE_CANDIDATE_DEFINITIONS_ONLY = "GenerateCandidateDefinitionsOnly";
  @SerializedName(SERIALIZED_NAME_GENERATE_CANDIDATE_DEFINITIONS_ONLY)
  private Boolean generateCandidateDefinitionsOnly;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_MODEL_DEPLOY_CONFIG = "ModelDeployConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_DEPLOY_CONFIG)
  private CreateAutoMLJobRequestModelDeployConfig modelDeployConfig;

  public CreateAutoMLJobRequest() {
  }

  public CreateAutoMLJobRequest autoMLJobName(String autoMLJobName) {
    this.autoMLJobName = autoMLJobName;
    return this;
  }

  /**
   * Get autoMLJobName
   * @return autoMLJobName
   */
  @javax.annotation.Nonnull
  public String getAutoMLJobName() {
    return autoMLJobName;
  }

  public void setAutoMLJobName(String autoMLJobName) {
    this.autoMLJobName = autoMLJobName;
  }


  public CreateAutoMLJobRequest inputDataConfig(List inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
    return this;
  }

  /**
   * Get inputDataConfig
   * @return inputDataConfig
   */
  @javax.annotation.Nonnull
  public List getInputDataConfig() {
    return inputDataConfig;
  }

  public void setInputDataConfig(List inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
  }


  public CreateAutoMLJobRequest outputDataConfig(CreateAutoMLJobRequestOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
    return this;
  }

  /**
   * Get outputDataConfig
   * @return outputDataConfig
   */
  @javax.annotation.Nonnull
  public CreateAutoMLJobRequestOutputDataConfig getOutputDataConfig() {
    return outputDataConfig;
  }

  public void setOutputDataConfig(CreateAutoMLJobRequestOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
  }


  public CreateAutoMLJobRequest problemType(ProblemType problemType) {
    this.problemType = problemType;
    return this;
  }

  /**
   * Get problemType
   * @return problemType
   */
  @javax.annotation.Nullable
  public ProblemType getProblemType() {
    return problemType;
  }

  public void setProblemType(ProblemType problemType) {
    this.problemType = problemType;
  }


  public CreateAutoMLJobRequest autoMLJobObjective(CreateAutoMLJobRequestAutoMLJobObjective autoMLJobObjective) {
    this.autoMLJobObjective = autoMLJobObjective;
    return this;
  }

  /**
   * Get autoMLJobObjective
   * @return autoMLJobObjective
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobRequestAutoMLJobObjective getAutoMLJobObjective() {
    return autoMLJobObjective;
  }

  public void setAutoMLJobObjective(CreateAutoMLJobRequestAutoMLJobObjective autoMLJobObjective) {
    this.autoMLJobObjective = autoMLJobObjective;
  }


  public CreateAutoMLJobRequest autoMLJobConfig(CreateAutoMLJobRequestAutoMLJobConfig autoMLJobConfig) {
    this.autoMLJobConfig = autoMLJobConfig;
    return this;
  }

  /**
   * Get autoMLJobConfig
   * @return autoMLJobConfig
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobRequestAutoMLJobConfig getAutoMLJobConfig() {
    return autoMLJobConfig;
  }

  public void setAutoMLJobConfig(CreateAutoMLJobRequestAutoMLJobConfig autoMLJobConfig) {
    this.autoMLJobConfig = autoMLJobConfig;
  }


  public CreateAutoMLJobRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateAutoMLJobRequest generateCandidateDefinitionsOnly(Boolean generateCandidateDefinitionsOnly) {
    this.generateCandidateDefinitionsOnly = generateCandidateDefinitionsOnly;
    return this;
  }

  /**
   * Get generateCandidateDefinitionsOnly
   * @return generateCandidateDefinitionsOnly
   */
  @javax.annotation.Nullable
  public Boolean getGenerateCandidateDefinitionsOnly() {
    return generateCandidateDefinitionsOnly;
  }

  public void setGenerateCandidateDefinitionsOnly(Boolean generateCandidateDefinitionsOnly) {
    this.generateCandidateDefinitionsOnly = generateCandidateDefinitionsOnly;
  }


  public CreateAutoMLJobRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateAutoMLJobRequest modelDeployConfig(CreateAutoMLJobRequestModelDeployConfig modelDeployConfig) {
    this.modelDeployConfig = modelDeployConfig;
    return this;
  }

  /**
   * Get modelDeployConfig
   * @return modelDeployConfig
   */
  @javax.annotation.Nullable
  public CreateAutoMLJobRequestModelDeployConfig getModelDeployConfig() {
    return modelDeployConfig;
  }

  public void setModelDeployConfig(CreateAutoMLJobRequestModelDeployConfig modelDeployConfig) {
    this.modelDeployConfig = modelDeployConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAutoMLJobRequest createAutoMLJobRequest = (CreateAutoMLJobRequest) o;
    return Objects.equals(this.autoMLJobName, createAutoMLJobRequest.autoMLJobName) &&
        Objects.equals(this.inputDataConfig, createAutoMLJobRequest.inputDataConfig) &&
        Objects.equals(this.outputDataConfig, createAutoMLJobRequest.outputDataConfig) &&
        Objects.equals(this.problemType, createAutoMLJobRequest.problemType) &&
        Objects.equals(this.autoMLJobObjective, createAutoMLJobRequest.autoMLJobObjective) &&
        Objects.equals(this.autoMLJobConfig, createAutoMLJobRequest.autoMLJobConfig) &&
        Objects.equals(this.roleArn, createAutoMLJobRequest.roleArn) &&
        Objects.equals(this.generateCandidateDefinitionsOnly, createAutoMLJobRequest.generateCandidateDefinitionsOnly) &&
        Objects.equals(this.tags, createAutoMLJobRequest.tags) &&
        Objects.equals(this.modelDeployConfig, createAutoMLJobRequest.modelDeployConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoMLJobName, inputDataConfig, outputDataConfig, problemType, autoMLJobObjective, autoMLJobConfig, roleArn, generateCandidateDefinitionsOnly, tags, modelDeployConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAutoMLJobRequest {\n");
    sb.append("    autoMLJobName: ").append(toIndentedString(autoMLJobName)).append("\n");
    sb.append("    inputDataConfig: ").append(toIndentedString(inputDataConfig)).append("\n");
    sb.append("    outputDataConfig: ").append(toIndentedString(outputDataConfig)).append("\n");
    sb.append("    problemType: ").append(toIndentedString(problemType)).append("\n");
    sb.append("    autoMLJobObjective: ").append(toIndentedString(autoMLJobObjective)).append("\n");
    sb.append("    autoMLJobConfig: ").append(toIndentedString(autoMLJobConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    generateCandidateDefinitionsOnly: ").append(toIndentedString(generateCandidateDefinitionsOnly)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    modelDeployConfig: ").append(toIndentedString(modelDeployConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoMLJobName");
    openapiFields.add("InputDataConfig");
    openapiFields.add("OutputDataConfig");
    openapiFields.add("ProblemType");
    openapiFields.add("AutoMLJobObjective");
    openapiFields.add("AutoMLJobConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("GenerateCandidateDefinitionsOnly");
    openapiFields.add("Tags");
    openapiFields.add("ModelDeployConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AutoMLJobName");
    openapiRequiredFields.add("InputDataConfig");
    openapiRequiredFields.add("OutputDataConfig");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAutoMLJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAutoMLJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAutoMLJobRequest is not found in the empty JSON string", CreateAutoMLJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAutoMLJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAutoMLJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAutoMLJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AutoMLJobName`
      String.validateJsonElement(jsonObj.get("AutoMLJobName"));
      // validate the required field `InputDataConfig`
      List.validateJsonElement(jsonObj.get("InputDataConfig"));
      // validate the required field `OutputDataConfig`
      CreateAutoMLJobRequestOutputDataConfig.validateJsonElement(jsonObj.get("OutputDataConfig"));
      // validate the optional field `ProblemType`
      if (jsonObj.get("ProblemType") != null && !jsonObj.get("ProblemType").isJsonNull()) {
        ProblemType.validateJsonElement(jsonObj.get("ProblemType"));
      }
      // validate the optional field `AutoMLJobObjective`
      if (jsonObj.get("AutoMLJobObjective") != null && !jsonObj.get("AutoMLJobObjective").isJsonNull()) {
        CreateAutoMLJobRequestAutoMLJobObjective.validateJsonElement(jsonObj.get("AutoMLJobObjective"));
      }
      // validate the optional field `AutoMLJobConfig`
      if (jsonObj.get("AutoMLJobConfig") != null && !jsonObj.get("AutoMLJobConfig").isJsonNull()) {
        CreateAutoMLJobRequestAutoMLJobConfig.validateJsonElement(jsonObj.get("AutoMLJobConfig"));
      }
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `GenerateCandidateDefinitionsOnly`
      if (jsonObj.get("GenerateCandidateDefinitionsOnly") != null && !jsonObj.get("GenerateCandidateDefinitionsOnly").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("GenerateCandidateDefinitionsOnly"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `ModelDeployConfig`
      if (jsonObj.get("ModelDeployConfig") != null && !jsonObj.get("ModelDeployConfig").isJsonNull()) {
        CreateAutoMLJobRequestModelDeployConfig.validateJsonElement(jsonObj.get("ModelDeployConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAutoMLJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAutoMLJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAutoMLJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAutoMLJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAutoMLJobRequest>() {
           @Override
           public void write(JsonWriter out, CreateAutoMLJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAutoMLJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAutoMLJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAutoMLJobRequest
   * @throws IOException if the JSON string is invalid with respect to CreateAutoMLJobRequest
   */
  public static CreateAutoMLJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAutoMLJobRequest.class);
  }

  /**
   * Convert an instance of CreateAutoMLJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

