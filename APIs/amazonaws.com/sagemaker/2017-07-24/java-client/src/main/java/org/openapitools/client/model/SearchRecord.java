/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Endpoint;
import org.openapitools.client.model.FeatureGroup;
import org.openapitools.client.model.ModelDashboardModel;
import org.openapitools.client.model.ModelPackage;
import org.openapitools.client.model.ModelPackageGroup;
import org.openapitools.client.model.Pipeline;
import org.openapitools.client.model.PipelineExecution;
import org.openapitools.client.model.SearchRecordExperiment;
import org.openapitools.client.model.SearchRecordFeatureMetadata;
import org.openapitools.client.model.SearchRecordHyperParameterTuningJob;
import org.openapitools.client.model.SearchRecordModelCard;
import org.openapitools.client.model.SearchRecordProject;
import org.openapitools.client.model.SearchRecordTrainingJob;
import org.openapitools.client.model.SearchRecordTrial;
import org.openapitools.client.model.SearchRecordTrialComponent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single resource returned as part of the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Search.html\&quot;&gt;Search&lt;/a&gt; API response.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchRecord {
  public static final String SERIALIZED_NAME_TRAINING_JOB = "TrainingJob";
  @SerializedName(SERIALIZED_NAME_TRAINING_JOB)
  private SearchRecordTrainingJob trainingJob;

  public static final String SERIALIZED_NAME_EXPERIMENT = "Experiment";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT)
  private SearchRecordExperiment experiment;

  public static final String SERIALIZED_NAME_TRIAL = "Trial";
  @SerializedName(SERIALIZED_NAME_TRIAL)
  private SearchRecordTrial trial;

  public static final String SERIALIZED_NAME_TRIAL_COMPONENT = "TrialComponent";
  @SerializedName(SERIALIZED_NAME_TRIAL_COMPONENT)
  private SearchRecordTrialComponent trialComponent;

  public static final String SERIALIZED_NAME_ENDPOINT = "Endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private Endpoint endpoint;

  public static final String SERIALIZED_NAME_MODEL_PACKAGE = "ModelPackage";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGE)
  private ModelPackage modelPackage;

  public static final String SERIALIZED_NAME_MODEL_PACKAGE_GROUP = "ModelPackageGroup";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGE_GROUP)
  private ModelPackageGroup modelPackageGroup;

  public static final String SERIALIZED_NAME_PIPELINE = "Pipeline";
  @SerializedName(SERIALIZED_NAME_PIPELINE)
  private Pipeline pipeline;

  public static final String SERIALIZED_NAME_PIPELINE_EXECUTION = "PipelineExecution";
  @SerializedName(SERIALIZED_NAME_PIPELINE_EXECUTION)
  private PipelineExecution pipelineExecution;

  public static final String SERIALIZED_NAME_FEATURE_GROUP = "FeatureGroup";
  @SerializedName(SERIALIZED_NAME_FEATURE_GROUP)
  private FeatureGroup featureGroup;

  public static final String SERIALIZED_NAME_PROJECT = "Project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private SearchRecordProject project;

  public static final String SERIALIZED_NAME_FEATURE_METADATA = "FeatureMetadata";
  @SerializedName(SERIALIZED_NAME_FEATURE_METADATA)
  private SearchRecordFeatureMetadata featureMetadata;

  public static final String SERIALIZED_NAME_HYPER_PARAMETER_TUNING_JOB = "HyperParameterTuningJob";
  @SerializedName(SERIALIZED_NAME_HYPER_PARAMETER_TUNING_JOB)
  private SearchRecordHyperParameterTuningJob hyperParameterTuningJob;

  public static final String SERIALIZED_NAME_MODEL = "Model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private ModelDashboardModel model;

  public static final String SERIALIZED_NAME_MODEL_CARD = "ModelCard";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD)
  private SearchRecordModelCard modelCard;

  public SearchRecord() {
  }

  public SearchRecord trainingJob(SearchRecordTrainingJob trainingJob) {
    this.trainingJob = trainingJob;
    return this;
  }

  /**
   * Get trainingJob
   * @return trainingJob
   */
  @javax.annotation.Nullable
  public SearchRecordTrainingJob getTrainingJob() {
    return trainingJob;
  }

  public void setTrainingJob(SearchRecordTrainingJob trainingJob) {
    this.trainingJob = trainingJob;
  }


  public SearchRecord experiment(SearchRecordExperiment experiment) {
    this.experiment = experiment;
    return this;
  }

  /**
   * Get experiment
   * @return experiment
   */
  @javax.annotation.Nullable
  public SearchRecordExperiment getExperiment() {
    return experiment;
  }

  public void setExperiment(SearchRecordExperiment experiment) {
    this.experiment = experiment;
  }


  public SearchRecord trial(SearchRecordTrial trial) {
    this.trial = trial;
    return this;
  }

  /**
   * Get trial
   * @return trial
   */
  @javax.annotation.Nullable
  public SearchRecordTrial getTrial() {
    return trial;
  }

  public void setTrial(SearchRecordTrial trial) {
    this.trial = trial;
  }


  public SearchRecord trialComponent(SearchRecordTrialComponent trialComponent) {
    this.trialComponent = trialComponent;
    return this;
  }

  /**
   * Get trialComponent
   * @return trialComponent
   */
  @javax.annotation.Nullable
  public SearchRecordTrialComponent getTrialComponent() {
    return trialComponent;
  }

  public void setTrialComponent(SearchRecordTrialComponent trialComponent) {
    this.trialComponent = trialComponent;
  }


  public SearchRecord endpoint(Endpoint endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public Endpoint getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(Endpoint endpoint) {
    this.endpoint = endpoint;
  }


  public SearchRecord modelPackage(ModelPackage modelPackage) {
    this.modelPackage = modelPackage;
    return this;
  }

  /**
   * Get modelPackage
   * @return modelPackage
   */
  @javax.annotation.Nullable
  public ModelPackage getModelPackage() {
    return modelPackage;
  }

  public void setModelPackage(ModelPackage modelPackage) {
    this.modelPackage = modelPackage;
  }


  public SearchRecord modelPackageGroup(ModelPackageGroup modelPackageGroup) {
    this.modelPackageGroup = modelPackageGroup;
    return this;
  }

  /**
   * Get modelPackageGroup
   * @return modelPackageGroup
   */
  @javax.annotation.Nullable
  public ModelPackageGroup getModelPackageGroup() {
    return modelPackageGroup;
  }

  public void setModelPackageGroup(ModelPackageGroup modelPackageGroup) {
    this.modelPackageGroup = modelPackageGroup;
  }


  public SearchRecord pipeline(Pipeline pipeline) {
    this.pipeline = pipeline;
    return this;
  }

  /**
   * Get pipeline
   * @return pipeline
   */
  @javax.annotation.Nullable
  public Pipeline getPipeline() {
    return pipeline;
  }

  public void setPipeline(Pipeline pipeline) {
    this.pipeline = pipeline;
  }


  public SearchRecord pipelineExecution(PipelineExecution pipelineExecution) {
    this.pipelineExecution = pipelineExecution;
    return this;
  }

  /**
   * Get pipelineExecution
   * @return pipelineExecution
   */
  @javax.annotation.Nullable
  public PipelineExecution getPipelineExecution() {
    return pipelineExecution;
  }

  public void setPipelineExecution(PipelineExecution pipelineExecution) {
    this.pipelineExecution = pipelineExecution;
  }


  public SearchRecord featureGroup(FeatureGroup featureGroup) {
    this.featureGroup = featureGroup;
    return this;
  }

  /**
   * Get featureGroup
   * @return featureGroup
   */
  @javax.annotation.Nullable
  public FeatureGroup getFeatureGroup() {
    return featureGroup;
  }

  public void setFeatureGroup(FeatureGroup featureGroup) {
    this.featureGroup = featureGroup;
  }


  public SearchRecord project(SearchRecordProject project) {
    this.project = project;
    return this;
  }

  /**
   * Get project
   * @return project
   */
  @javax.annotation.Nullable
  public SearchRecordProject getProject() {
    return project;
  }

  public void setProject(SearchRecordProject project) {
    this.project = project;
  }


  public SearchRecord featureMetadata(SearchRecordFeatureMetadata featureMetadata) {
    this.featureMetadata = featureMetadata;
    return this;
  }

  /**
   * Get featureMetadata
   * @return featureMetadata
   */
  @javax.annotation.Nullable
  public SearchRecordFeatureMetadata getFeatureMetadata() {
    return featureMetadata;
  }

  public void setFeatureMetadata(SearchRecordFeatureMetadata featureMetadata) {
    this.featureMetadata = featureMetadata;
  }


  public SearchRecord hyperParameterTuningJob(SearchRecordHyperParameterTuningJob hyperParameterTuningJob) {
    this.hyperParameterTuningJob = hyperParameterTuningJob;
    return this;
  }

  /**
   * Get hyperParameterTuningJob
   * @return hyperParameterTuningJob
   */
  @javax.annotation.Nullable
  public SearchRecordHyperParameterTuningJob getHyperParameterTuningJob() {
    return hyperParameterTuningJob;
  }

  public void setHyperParameterTuningJob(SearchRecordHyperParameterTuningJob hyperParameterTuningJob) {
    this.hyperParameterTuningJob = hyperParameterTuningJob;
  }


  public SearchRecord model(ModelDashboardModel model) {
    this.model = model;
    return this;
  }

  /**
   * Get model
   * @return model
   */
  @javax.annotation.Nullable
  public ModelDashboardModel getModel() {
    return model;
  }

  public void setModel(ModelDashboardModel model) {
    this.model = model;
  }


  public SearchRecord modelCard(SearchRecordModelCard modelCard) {
    this.modelCard = modelCard;
    return this;
  }

  /**
   * Get modelCard
   * @return modelCard
   */
  @javax.annotation.Nullable
  public SearchRecordModelCard getModelCard() {
    return modelCard;
  }

  public void setModelCard(SearchRecordModelCard modelCard) {
    this.modelCard = modelCard;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRecord searchRecord = (SearchRecord) o;
    return Objects.equals(this.trainingJob, searchRecord.trainingJob) &&
        Objects.equals(this.experiment, searchRecord.experiment) &&
        Objects.equals(this.trial, searchRecord.trial) &&
        Objects.equals(this.trialComponent, searchRecord.trialComponent) &&
        Objects.equals(this.endpoint, searchRecord.endpoint) &&
        Objects.equals(this.modelPackage, searchRecord.modelPackage) &&
        Objects.equals(this.modelPackageGroup, searchRecord.modelPackageGroup) &&
        Objects.equals(this.pipeline, searchRecord.pipeline) &&
        Objects.equals(this.pipelineExecution, searchRecord.pipelineExecution) &&
        Objects.equals(this.featureGroup, searchRecord.featureGroup) &&
        Objects.equals(this.project, searchRecord.project) &&
        Objects.equals(this.featureMetadata, searchRecord.featureMetadata) &&
        Objects.equals(this.hyperParameterTuningJob, searchRecord.hyperParameterTuningJob) &&
        Objects.equals(this.model, searchRecord.model) &&
        Objects.equals(this.modelCard, searchRecord.modelCard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainingJob, experiment, trial, trialComponent, endpoint, modelPackage, modelPackageGroup, pipeline, pipelineExecution, featureGroup, project, featureMetadata, hyperParameterTuningJob, model, modelCard);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRecord {\n");
    sb.append("    trainingJob: ").append(toIndentedString(trainingJob)).append("\n");
    sb.append("    experiment: ").append(toIndentedString(experiment)).append("\n");
    sb.append("    trial: ").append(toIndentedString(trial)).append("\n");
    sb.append("    trialComponent: ").append(toIndentedString(trialComponent)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    modelPackage: ").append(toIndentedString(modelPackage)).append("\n");
    sb.append("    modelPackageGroup: ").append(toIndentedString(modelPackageGroup)).append("\n");
    sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
    sb.append("    pipelineExecution: ").append(toIndentedString(pipelineExecution)).append("\n");
    sb.append("    featureGroup: ").append(toIndentedString(featureGroup)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    featureMetadata: ").append(toIndentedString(featureMetadata)).append("\n");
    sb.append("    hyperParameterTuningJob: ").append(toIndentedString(hyperParameterTuningJob)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    modelCard: ").append(toIndentedString(modelCard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrainingJob");
    openapiFields.add("Experiment");
    openapiFields.add("Trial");
    openapiFields.add("TrialComponent");
    openapiFields.add("Endpoint");
    openapiFields.add("ModelPackage");
    openapiFields.add("ModelPackageGroup");
    openapiFields.add("Pipeline");
    openapiFields.add("PipelineExecution");
    openapiFields.add("FeatureGroup");
    openapiFields.add("Project");
    openapiFields.add("FeatureMetadata");
    openapiFields.add("HyperParameterTuningJob");
    openapiFields.add("Model");
    openapiFields.add("ModelCard");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchRecord
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchRecord.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchRecord is not found in the empty JSON string", SearchRecord.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchRecord.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchRecord` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TrainingJob`
      if (jsonObj.get("TrainingJob") != null && !jsonObj.get("TrainingJob").isJsonNull()) {
        SearchRecordTrainingJob.validateJsonElement(jsonObj.get("TrainingJob"));
      }
      // validate the optional field `Experiment`
      if (jsonObj.get("Experiment") != null && !jsonObj.get("Experiment").isJsonNull()) {
        SearchRecordExperiment.validateJsonElement(jsonObj.get("Experiment"));
      }
      // validate the optional field `Trial`
      if (jsonObj.get("Trial") != null && !jsonObj.get("Trial").isJsonNull()) {
        SearchRecordTrial.validateJsonElement(jsonObj.get("Trial"));
      }
      // validate the optional field `TrialComponent`
      if (jsonObj.get("TrialComponent") != null && !jsonObj.get("TrialComponent").isJsonNull()) {
        SearchRecordTrialComponent.validateJsonElement(jsonObj.get("TrialComponent"));
      }
      // validate the optional field `Endpoint`
      if (jsonObj.get("Endpoint") != null && !jsonObj.get("Endpoint").isJsonNull()) {
        Endpoint.validateJsonElement(jsonObj.get("Endpoint"));
      }
      // validate the optional field `ModelPackage`
      if (jsonObj.get("ModelPackage") != null && !jsonObj.get("ModelPackage").isJsonNull()) {
        ModelPackage.validateJsonElement(jsonObj.get("ModelPackage"));
      }
      // validate the optional field `ModelPackageGroup`
      if (jsonObj.get("ModelPackageGroup") != null && !jsonObj.get("ModelPackageGroup").isJsonNull()) {
        ModelPackageGroup.validateJsonElement(jsonObj.get("ModelPackageGroup"));
      }
      // validate the optional field `Pipeline`
      if (jsonObj.get("Pipeline") != null && !jsonObj.get("Pipeline").isJsonNull()) {
        Pipeline.validateJsonElement(jsonObj.get("Pipeline"));
      }
      // validate the optional field `PipelineExecution`
      if (jsonObj.get("PipelineExecution") != null && !jsonObj.get("PipelineExecution").isJsonNull()) {
        PipelineExecution.validateJsonElement(jsonObj.get("PipelineExecution"));
      }
      // validate the optional field `FeatureGroup`
      if (jsonObj.get("FeatureGroup") != null && !jsonObj.get("FeatureGroup").isJsonNull()) {
        FeatureGroup.validateJsonElement(jsonObj.get("FeatureGroup"));
      }
      // validate the optional field `Project`
      if (jsonObj.get("Project") != null && !jsonObj.get("Project").isJsonNull()) {
        SearchRecordProject.validateJsonElement(jsonObj.get("Project"));
      }
      // validate the optional field `FeatureMetadata`
      if (jsonObj.get("FeatureMetadata") != null && !jsonObj.get("FeatureMetadata").isJsonNull()) {
        SearchRecordFeatureMetadata.validateJsonElement(jsonObj.get("FeatureMetadata"));
      }
      // validate the optional field `HyperParameterTuningJob`
      if (jsonObj.get("HyperParameterTuningJob") != null && !jsonObj.get("HyperParameterTuningJob").isJsonNull()) {
        SearchRecordHyperParameterTuningJob.validateJsonElement(jsonObj.get("HyperParameterTuningJob"));
      }
      // validate the optional field `Model`
      if (jsonObj.get("Model") != null && !jsonObj.get("Model").isJsonNull()) {
        ModelDashboardModel.validateJsonElement(jsonObj.get("Model"));
      }
      // validate the optional field `ModelCard`
      if (jsonObj.get("ModelCard") != null && !jsonObj.get("ModelCard").isJsonNull()) {
        SearchRecordModelCard.validateJsonElement(jsonObj.get("ModelCard"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchRecord.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchRecord' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchRecord> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchRecord.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchRecord>() {
           @Override
           public void write(JsonWriter out, SearchRecord value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchRecord read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchRecord given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchRecord
   * @throws IOException if the JSON string is invalid with respect to SearchRecord
   */
  public static SearchRecord fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchRecord.class);
  }

  /**
   * Convert an instance of SearchRecord to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

