/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContainerDefinition;
import org.openapitools.client.model.DescribeModelOutputDeploymentRecommendation;
import org.openapitools.client.model.InferenceExecutionConfig;
import org.openapitools.client.model.VpcConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The properties of a model as returned by the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Search.html\&quot;&gt;Search&lt;/a&gt; API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Model {
  public static final String SERIALIZED_NAME_MODEL_NAME = "ModelName";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_PRIMARY_CONTAINER = "PrimaryContainer";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CONTAINER)
  private ContainerDefinition primaryContainer;

  public static final String SERIALIZED_NAME_CONTAINERS = "Containers";
  @SerializedName(SERIALIZED_NAME_CONTAINERS)
  private List containers;

  public static final String SERIALIZED_NAME_INFERENCE_EXECUTION_CONFIG = "InferenceExecutionConfig";
  @SerializedName(SERIALIZED_NAME_INFERENCE_EXECUTION_CONFIG)
  private InferenceExecutionConfig inferenceExecutionConfig;

  public static final String SERIALIZED_NAME_EXECUTION_ROLE_ARN = "ExecutionRoleArn";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ROLE_ARN)
  private String executionRoleArn;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "VpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private VpcConfig vpcConfig;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_MODEL_ARN = "ModelArn";
  @SerializedName(SERIALIZED_NAME_MODEL_ARN)
  private String modelArn;

  public static final String SERIALIZED_NAME_ENABLE_NETWORK_ISOLATION = "EnableNetworkIsolation";
  @SerializedName(SERIALIZED_NAME_ENABLE_NETWORK_ISOLATION)
  private Boolean enableNetworkIsolation;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_DEPLOYMENT_RECOMMENDATION = "DeploymentRecommendation";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_RECOMMENDATION)
  private DescribeModelOutputDeploymentRecommendation deploymentRecommendation;

  public Model() {
  }

  public Model modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   * @return modelName
   */
  @javax.annotation.Nullable
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public Model primaryContainer(ContainerDefinition primaryContainer) {
    this.primaryContainer = primaryContainer;
    return this;
  }

  /**
   * Get primaryContainer
   * @return primaryContainer
   */
  @javax.annotation.Nullable
  public ContainerDefinition getPrimaryContainer() {
    return primaryContainer;
  }

  public void setPrimaryContainer(ContainerDefinition primaryContainer) {
    this.primaryContainer = primaryContainer;
  }


  public Model containers(List containers) {
    this.containers = containers;
    return this;
  }

  /**
   * Get containers
   * @return containers
   */
  @javax.annotation.Nullable
  public List getContainers() {
    return containers;
  }

  public void setContainers(List containers) {
    this.containers = containers;
  }


  public Model inferenceExecutionConfig(InferenceExecutionConfig inferenceExecutionConfig) {
    this.inferenceExecutionConfig = inferenceExecutionConfig;
    return this;
  }

  /**
   * Get inferenceExecutionConfig
   * @return inferenceExecutionConfig
   */
  @javax.annotation.Nullable
  public InferenceExecutionConfig getInferenceExecutionConfig() {
    return inferenceExecutionConfig;
  }

  public void setInferenceExecutionConfig(InferenceExecutionConfig inferenceExecutionConfig) {
    this.inferenceExecutionConfig = inferenceExecutionConfig;
  }


  public Model executionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
    return this;
  }

  /**
   * Get executionRoleArn
   * @return executionRoleArn
   */
  @javax.annotation.Nullable
  public String getExecutionRoleArn() {
    return executionRoleArn;
  }

  public void setExecutionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
  }


  public Model vpcConfig(VpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public VpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(VpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }


  public Model creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public Model modelArn(String modelArn) {
    this.modelArn = modelArn;
    return this;
  }

  /**
   * Get modelArn
   * @return modelArn
   */
  @javax.annotation.Nullable
  public String getModelArn() {
    return modelArn;
  }

  public void setModelArn(String modelArn) {
    this.modelArn = modelArn;
  }


  public Model enableNetworkIsolation(Boolean enableNetworkIsolation) {
    this.enableNetworkIsolation = enableNetworkIsolation;
    return this;
  }

  /**
   * Get enableNetworkIsolation
   * @return enableNetworkIsolation
   */
  @javax.annotation.Nullable
  public Boolean getEnableNetworkIsolation() {
    return enableNetworkIsolation;
  }

  public void setEnableNetworkIsolation(Boolean enableNetworkIsolation) {
    this.enableNetworkIsolation = enableNetworkIsolation;
  }


  public Model tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public Model deploymentRecommendation(DescribeModelOutputDeploymentRecommendation deploymentRecommendation) {
    this.deploymentRecommendation = deploymentRecommendation;
    return this;
  }

  /**
   * Get deploymentRecommendation
   * @return deploymentRecommendation
   */
  @javax.annotation.Nullable
  public DescribeModelOutputDeploymentRecommendation getDeploymentRecommendation() {
    return deploymentRecommendation;
  }

  public void setDeploymentRecommendation(DescribeModelOutputDeploymentRecommendation deploymentRecommendation) {
    this.deploymentRecommendation = deploymentRecommendation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model model = (Model) o;
    return Objects.equals(this.modelName, model.modelName) &&
        Objects.equals(this.primaryContainer, model.primaryContainer) &&
        Objects.equals(this.containers, model.containers) &&
        Objects.equals(this.inferenceExecutionConfig, model.inferenceExecutionConfig) &&
        Objects.equals(this.executionRoleArn, model.executionRoleArn) &&
        Objects.equals(this.vpcConfig, model.vpcConfig) &&
        Objects.equals(this.creationTime, model.creationTime) &&
        Objects.equals(this.modelArn, model.modelArn) &&
        Objects.equals(this.enableNetworkIsolation, model.enableNetworkIsolation) &&
        Objects.equals(this.tags, model.tags) &&
        Objects.equals(this.deploymentRecommendation, model.deploymentRecommendation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelName, primaryContainer, containers, inferenceExecutionConfig, executionRoleArn, vpcConfig, creationTime, modelArn, enableNetworkIsolation, tags, deploymentRecommendation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model {\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    primaryContainer: ").append(toIndentedString(primaryContainer)).append("\n");
    sb.append("    containers: ").append(toIndentedString(containers)).append("\n");
    sb.append("    inferenceExecutionConfig: ").append(toIndentedString(inferenceExecutionConfig)).append("\n");
    sb.append("    executionRoleArn: ").append(toIndentedString(executionRoleArn)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    modelArn: ").append(toIndentedString(modelArn)).append("\n");
    sb.append("    enableNetworkIsolation: ").append(toIndentedString(enableNetworkIsolation)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    deploymentRecommendation: ").append(toIndentedString(deploymentRecommendation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelName");
    openapiFields.add("PrimaryContainer");
    openapiFields.add("Containers");
    openapiFields.add("InferenceExecutionConfig");
    openapiFields.add("ExecutionRoleArn");
    openapiFields.add("VpcConfig");
    openapiFields.add("CreationTime");
    openapiFields.add("ModelArn");
    openapiFields.add("EnableNetworkIsolation");
    openapiFields.add("Tags");
    openapiFields.add("DeploymentRecommendation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Model
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Model.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Model is not found in the empty JSON string", Model.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Model.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Model` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModelName`
      if (jsonObj.get("ModelName") != null && !jsonObj.get("ModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelName"));
      }
      // validate the optional field `PrimaryContainer`
      if (jsonObj.get("PrimaryContainer") != null && !jsonObj.get("PrimaryContainer").isJsonNull()) {
        ContainerDefinition.validateJsonElement(jsonObj.get("PrimaryContainer"));
      }
      // validate the optional field `Containers`
      if (jsonObj.get("Containers") != null && !jsonObj.get("Containers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Containers"));
      }
      // validate the optional field `InferenceExecutionConfig`
      if (jsonObj.get("InferenceExecutionConfig") != null && !jsonObj.get("InferenceExecutionConfig").isJsonNull()) {
        InferenceExecutionConfig.validateJsonElement(jsonObj.get("InferenceExecutionConfig"));
      }
      // validate the optional field `ExecutionRoleArn`
      if (jsonObj.get("ExecutionRoleArn") != null && !jsonObj.get("ExecutionRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionRoleArn"));
      }
      // validate the optional field `VpcConfig`
      if (jsonObj.get("VpcConfig") != null && !jsonObj.get("VpcConfig").isJsonNull()) {
        VpcConfig.validateJsonElement(jsonObj.get("VpcConfig"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `ModelArn`
      if (jsonObj.get("ModelArn") != null && !jsonObj.get("ModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelArn"));
      }
      // validate the optional field `EnableNetworkIsolation`
      if (jsonObj.get("EnableNetworkIsolation") != null && !jsonObj.get("EnableNetworkIsolation").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableNetworkIsolation"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `DeploymentRecommendation`
      if (jsonObj.get("DeploymentRecommendation") != null && !jsonObj.get("DeploymentRecommendation").isJsonNull()) {
        DescribeModelOutputDeploymentRecommendation.validateJsonElement(jsonObj.get("DeploymentRecommendation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Model.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Model' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Model> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Model.class));

       return (TypeAdapter<T>) new TypeAdapter<Model>() {
           @Override
           public void write(JsonWriter out, Model value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Model read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Model given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Model
   * @throws IOException if the JSON string is invalid with respect to Model
   */
  public static Model fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Model.class);
  }

  /**
   * Convert an instance of Model to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

