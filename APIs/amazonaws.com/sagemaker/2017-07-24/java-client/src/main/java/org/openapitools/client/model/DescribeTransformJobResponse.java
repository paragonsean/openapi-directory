/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.BatchStrategy;
import org.openapitools.client.model.CreateTransformJobRequestDataCaptureConfig;
import org.openapitools.client.model.CreateTransformJobRequestTransformResources;
import org.openapitools.client.model.DataProcessing;
import org.openapitools.client.model.DescribeTransformJobResponseModelClientConfig;
import org.openapitools.client.model.DescribeTransformJobResponseTransformInput;
import org.openapitools.client.model.DescribeTransformJobResponseTransformOutput;
import org.openapitools.client.model.ExperimentConfig;
import org.openapitools.client.model.TransformJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeTransformJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeTransformJobResponse {
  public static final String SERIALIZED_NAME_TRANSFORM_JOB_NAME = "TransformJobName";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_JOB_NAME)
  private String transformJobName;

  public static final String SERIALIZED_NAME_TRANSFORM_JOB_ARN = "TransformJobArn";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_JOB_ARN)
  private String transformJobArn;

  public static final String SERIALIZED_NAME_TRANSFORM_JOB_STATUS = "TransformJobStatus";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_JOB_STATUS)
  private TransformJobStatus transformJobStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_MODEL_NAME = "ModelName";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_MAX_CONCURRENT_TRANSFORMS = "MaxConcurrentTransforms";
  @SerializedName(SERIALIZED_NAME_MAX_CONCURRENT_TRANSFORMS)
  private Integer maxConcurrentTransforms;

  public static final String SERIALIZED_NAME_MODEL_CLIENT_CONFIG = "ModelClientConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_CLIENT_CONFIG)
  private DescribeTransformJobResponseModelClientConfig modelClientConfig;

  public static final String SERIALIZED_NAME_MAX_PAYLOAD_IN_M_B = "MaxPayloadInMB";
  @SerializedName(SERIALIZED_NAME_MAX_PAYLOAD_IN_M_B)
  private Integer maxPayloadInMB;

  public static final String SERIALIZED_NAME_BATCH_STRATEGY = "BatchStrategy";
  @SerializedName(SERIALIZED_NAME_BATCH_STRATEGY)
  private BatchStrategy batchStrategy;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private Map environment;

  public static final String SERIALIZED_NAME_TRANSFORM_INPUT = "TransformInput";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_INPUT)
  private DescribeTransformJobResponseTransformInput transformInput;

  public static final String SERIALIZED_NAME_TRANSFORM_OUTPUT = "TransformOutput";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_OUTPUT)
  private DescribeTransformJobResponseTransformOutput transformOutput;

  public static final String SERIALIZED_NAME_DATA_CAPTURE_CONFIG = "DataCaptureConfig";
  @SerializedName(SERIALIZED_NAME_DATA_CAPTURE_CONFIG)
  private CreateTransformJobRequestDataCaptureConfig dataCaptureConfig;

  public static final String SERIALIZED_NAME_TRANSFORM_RESOURCES = "TransformResources";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_RESOURCES)
  private CreateTransformJobRequestTransformResources transformResources;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_TRANSFORM_START_TIME = "TransformStartTime";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_START_TIME)
  private OffsetDateTime transformStartTime;

  public static final String SERIALIZED_NAME_TRANSFORM_END_TIME = "TransformEndTime";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_END_TIME)
  private OffsetDateTime transformEndTime;

  public static final String SERIALIZED_NAME_LABELING_JOB_ARN = "LabelingJobArn";
  @SerializedName(SERIALIZED_NAME_LABELING_JOB_ARN)
  private String labelingJobArn;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_ARN = "AutoMLJobArn";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_ARN)
  private String autoMLJobArn;

  public static final String SERIALIZED_NAME_DATA_PROCESSING = "DataProcessing";
  @SerializedName(SERIALIZED_NAME_DATA_PROCESSING)
  private DataProcessing dataProcessing;

  public static final String SERIALIZED_NAME_EXPERIMENT_CONFIG = "ExperimentConfig";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_CONFIG)
  private ExperimentConfig experimentConfig;

  public DescribeTransformJobResponse() {
  }

  public DescribeTransformJobResponse transformJobName(String transformJobName) {
    this.transformJobName = transformJobName;
    return this;
  }

  /**
   * Get transformJobName
   * @return transformJobName
   */
  @javax.annotation.Nonnull
  public String getTransformJobName() {
    return transformJobName;
  }

  public void setTransformJobName(String transformJobName) {
    this.transformJobName = transformJobName;
  }


  public DescribeTransformJobResponse transformJobArn(String transformJobArn) {
    this.transformJobArn = transformJobArn;
    return this;
  }

  /**
   * Get transformJobArn
   * @return transformJobArn
   */
  @javax.annotation.Nonnull
  public String getTransformJobArn() {
    return transformJobArn;
  }

  public void setTransformJobArn(String transformJobArn) {
    this.transformJobArn = transformJobArn;
  }


  public DescribeTransformJobResponse transformJobStatus(TransformJobStatus transformJobStatus) {
    this.transformJobStatus = transformJobStatus;
    return this;
  }

  /**
   * Get transformJobStatus
   * @return transformJobStatus
   */
  @javax.annotation.Nonnull
  public TransformJobStatus getTransformJobStatus() {
    return transformJobStatus;
  }

  public void setTransformJobStatus(TransformJobStatus transformJobStatus) {
    this.transformJobStatus = transformJobStatus;
  }


  public DescribeTransformJobResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeTransformJobResponse modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   * @return modelName
   */
  @javax.annotation.Nonnull
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public DescribeTransformJobResponse maxConcurrentTransforms(Integer maxConcurrentTransforms) {
    this.maxConcurrentTransforms = maxConcurrentTransforms;
    return this;
  }

  /**
   * Get maxConcurrentTransforms
   * @return maxConcurrentTransforms
   */
  @javax.annotation.Nullable
  public Integer getMaxConcurrentTransforms() {
    return maxConcurrentTransforms;
  }

  public void setMaxConcurrentTransforms(Integer maxConcurrentTransforms) {
    this.maxConcurrentTransforms = maxConcurrentTransforms;
  }


  public DescribeTransformJobResponse modelClientConfig(DescribeTransformJobResponseModelClientConfig modelClientConfig) {
    this.modelClientConfig = modelClientConfig;
    return this;
  }

  /**
   * Get modelClientConfig
   * @return modelClientConfig
   */
  @javax.annotation.Nullable
  public DescribeTransformJobResponseModelClientConfig getModelClientConfig() {
    return modelClientConfig;
  }

  public void setModelClientConfig(DescribeTransformJobResponseModelClientConfig modelClientConfig) {
    this.modelClientConfig = modelClientConfig;
  }


  public DescribeTransformJobResponse maxPayloadInMB(Integer maxPayloadInMB) {
    this.maxPayloadInMB = maxPayloadInMB;
    return this;
  }

  /**
   * Get maxPayloadInMB
   * @return maxPayloadInMB
   */
  @javax.annotation.Nullable
  public Integer getMaxPayloadInMB() {
    return maxPayloadInMB;
  }

  public void setMaxPayloadInMB(Integer maxPayloadInMB) {
    this.maxPayloadInMB = maxPayloadInMB;
  }


  public DescribeTransformJobResponse batchStrategy(BatchStrategy batchStrategy) {
    this.batchStrategy = batchStrategy;
    return this;
  }

  /**
   * Get batchStrategy
   * @return batchStrategy
   */
  @javax.annotation.Nullable
  public BatchStrategy getBatchStrategy() {
    return batchStrategy;
  }

  public void setBatchStrategy(BatchStrategy batchStrategy) {
    this.batchStrategy = batchStrategy;
  }


  public DescribeTransformJobResponse environment(Map environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public Map getEnvironment() {
    return environment;
  }

  public void setEnvironment(Map environment) {
    this.environment = environment;
  }


  public DescribeTransformJobResponse transformInput(DescribeTransformJobResponseTransformInput transformInput) {
    this.transformInput = transformInput;
    return this;
  }

  /**
   * Get transformInput
   * @return transformInput
   */
  @javax.annotation.Nonnull
  public DescribeTransformJobResponseTransformInput getTransformInput() {
    return transformInput;
  }

  public void setTransformInput(DescribeTransformJobResponseTransformInput transformInput) {
    this.transformInput = transformInput;
  }


  public DescribeTransformJobResponse transformOutput(DescribeTransformJobResponseTransformOutput transformOutput) {
    this.transformOutput = transformOutput;
    return this;
  }

  /**
   * Get transformOutput
   * @return transformOutput
   */
  @javax.annotation.Nullable
  public DescribeTransformJobResponseTransformOutput getTransformOutput() {
    return transformOutput;
  }

  public void setTransformOutput(DescribeTransformJobResponseTransformOutput transformOutput) {
    this.transformOutput = transformOutput;
  }


  public DescribeTransformJobResponse dataCaptureConfig(CreateTransformJobRequestDataCaptureConfig dataCaptureConfig) {
    this.dataCaptureConfig = dataCaptureConfig;
    return this;
  }

  /**
   * Get dataCaptureConfig
   * @return dataCaptureConfig
   */
  @javax.annotation.Nullable
  public CreateTransformJobRequestDataCaptureConfig getDataCaptureConfig() {
    return dataCaptureConfig;
  }

  public void setDataCaptureConfig(CreateTransformJobRequestDataCaptureConfig dataCaptureConfig) {
    this.dataCaptureConfig = dataCaptureConfig;
  }


  public DescribeTransformJobResponse transformResources(CreateTransformJobRequestTransformResources transformResources) {
    this.transformResources = transformResources;
    return this;
  }

  /**
   * Get transformResources
   * @return transformResources
   */
  @javax.annotation.Nonnull
  public CreateTransformJobRequestTransformResources getTransformResources() {
    return transformResources;
  }

  public void setTransformResources(CreateTransformJobRequestTransformResources transformResources) {
    this.transformResources = transformResources;
  }


  public DescribeTransformJobResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeTransformJobResponse transformStartTime(OffsetDateTime transformStartTime) {
    this.transformStartTime = transformStartTime;
    return this;
  }

  /**
   * Get transformStartTime
   * @return transformStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTransformStartTime() {
    return transformStartTime;
  }

  public void setTransformStartTime(OffsetDateTime transformStartTime) {
    this.transformStartTime = transformStartTime;
  }


  public DescribeTransformJobResponse transformEndTime(OffsetDateTime transformEndTime) {
    this.transformEndTime = transformEndTime;
    return this;
  }

  /**
   * Get transformEndTime
   * @return transformEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTransformEndTime() {
    return transformEndTime;
  }

  public void setTransformEndTime(OffsetDateTime transformEndTime) {
    this.transformEndTime = transformEndTime;
  }


  public DescribeTransformJobResponse labelingJobArn(String labelingJobArn) {
    this.labelingJobArn = labelingJobArn;
    return this;
  }

  /**
   * Get labelingJobArn
   * @return labelingJobArn
   */
  @javax.annotation.Nullable
  public String getLabelingJobArn() {
    return labelingJobArn;
  }

  public void setLabelingJobArn(String labelingJobArn) {
    this.labelingJobArn = labelingJobArn;
  }


  public DescribeTransformJobResponse autoMLJobArn(String autoMLJobArn) {
    this.autoMLJobArn = autoMLJobArn;
    return this;
  }

  /**
   * Get autoMLJobArn
   * @return autoMLJobArn
   */
  @javax.annotation.Nullable
  public String getAutoMLJobArn() {
    return autoMLJobArn;
  }

  public void setAutoMLJobArn(String autoMLJobArn) {
    this.autoMLJobArn = autoMLJobArn;
  }


  public DescribeTransformJobResponse dataProcessing(DataProcessing dataProcessing) {
    this.dataProcessing = dataProcessing;
    return this;
  }

  /**
   * Get dataProcessing
   * @return dataProcessing
   */
  @javax.annotation.Nullable
  public DataProcessing getDataProcessing() {
    return dataProcessing;
  }

  public void setDataProcessing(DataProcessing dataProcessing) {
    this.dataProcessing = dataProcessing;
  }


  public DescribeTransformJobResponse experimentConfig(ExperimentConfig experimentConfig) {
    this.experimentConfig = experimentConfig;
    return this;
  }

  /**
   * Get experimentConfig
   * @return experimentConfig
   */
  @javax.annotation.Nullable
  public ExperimentConfig getExperimentConfig() {
    return experimentConfig;
  }

  public void setExperimentConfig(ExperimentConfig experimentConfig) {
    this.experimentConfig = experimentConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTransformJobResponse describeTransformJobResponse = (DescribeTransformJobResponse) o;
    return Objects.equals(this.transformJobName, describeTransformJobResponse.transformJobName) &&
        Objects.equals(this.transformJobArn, describeTransformJobResponse.transformJobArn) &&
        Objects.equals(this.transformJobStatus, describeTransformJobResponse.transformJobStatus) &&
        Objects.equals(this.failureReason, describeTransformJobResponse.failureReason) &&
        Objects.equals(this.modelName, describeTransformJobResponse.modelName) &&
        Objects.equals(this.maxConcurrentTransforms, describeTransformJobResponse.maxConcurrentTransforms) &&
        Objects.equals(this.modelClientConfig, describeTransformJobResponse.modelClientConfig) &&
        Objects.equals(this.maxPayloadInMB, describeTransformJobResponse.maxPayloadInMB) &&
        Objects.equals(this.batchStrategy, describeTransformJobResponse.batchStrategy) &&
        Objects.equals(this.environment, describeTransformJobResponse.environment) &&
        Objects.equals(this.transformInput, describeTransformJobResponse.transformInput) &&
        Objects.equals(this.transformOutput, describeTransformJobResponse.transformOutput) &&
        Objects.equals(this.dataCaptureConfig, describeTransformJobResponse.dataCaptureConfig) &&
        Objects.equals(this.transformResources, describeTransformJobResponse.transformResources) &&
        Objects.equals(this.creationTime, describeTransformJobResponse.creationTime) &&
        Objects.equals(this.transformStartTime, describeTransformJobResponse.transformStartTime) &&
        Objects.equals(this.transformEndTime, describeTransformJobResponse.transformEndTime) &&
        Objects.equals(this.labelingJobArn, describeTransformJobResponse.labelingJobArn) &&
        Objects.equals(this.autoMLJobArn, describeTransformJobResponse.autoMLJobArn) &&
        Objects.equals(this.dataProcessing, describeTransformJobResponse.dataProcessing) &&
        Objects.equals(this.experimentConfig, describeTransformJobResponse.experimentConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transformJobName, transformJobArn, transformJobStatus, failureReason, modelName, maxConcurrentTransforms, modelClientConfig, maxPayloadInMB, batchStrategy, environment, transformInput, transformOutput, dataCaptureConfig, transformResources, creationTime, transformStartTime, transformEndTime, labelingJobArn, autoMLJobArn, dataProcessing, experimentConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTransformJobResponse {\n");
    sb.append("    transformJobName: ").append(toIndentedString(transformJobName)).append("\n");
    sb.append("    transformJobArn: ").append(toIndentedString(transformJobArn)).append("\n");
    sb.append("    transformJobStatus: ").append(toIndentedString(transformJobStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    maxConcurrentTransforms: ").append(toIndentedString(maxConcurrentTransforms)).append("\n");
    sb.append("    modelClientConfig: ").append(toIndentedString(modelClientConfig)).append("\n");
    sb.append("    maxPayloadInMB: ").append(toIndentedString(maxPayloadInMB)).append("\n");
    sb.append("    batchStrategy: ").append(toIndentedString(batchStrategy)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    transformInput: ").append(toIndentedString(transformInput)).append("\n");
    sb.append("    transformOutput: ").append(toIndentedString(transformOutput)).append("\n");
    sb.append("    dataCaptureConfig: ").append(toIndentedString(dataCaptureConfig)).append("\n");
    sb.append("    transformResources: ").append(toIndentedString(transformResources)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    transformStartTime: ").append(toIndentedString(transformStartTime)).append("\n");
    sb.append("    transformEndTime: ").append(toIndentedString(transformEndTime)).append("\n");
    sb.append("    labelingJobArn: ").append(toIndentedString(labelingJobArn)).append("\n");
    sb.append("    autoMLJobArn: ").append(toIndentedString(autoMLJobArn)).append("\n");
    sb.append("    dataProcessing: ").append(toIndentedString(dataProcessing)).append("\n");
    sb.append("    experimentConfig: ").append(toIndentedString(experimentConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TransformJobName");
    openapiFields.add("TransformJobArn");
    openapiFields.add("TransformJobStatus");
    openapiFields.add("FailureReason");
    openapiFields.add("ModelName");
    openapiFields.add("MaxConcurrentTransforms");
    openapiFields.add("ModelClientConfig");
    openapiFields.add("MaxPayloadInMB");
    openapiFields.add("BatchStrategy");
    openapiFields.add("Environment");
    openapiFields.add("TransformInput");
    openapiFields.add("TransformOutput");
    openapiFields.add("DataCaptureConfig");
    openapiFields.add("TransformResources");
    openapiFields.add("CreationTime");
    openapiFields.add("TransformStartTime");
    openapiFields.add("TransformEndTime");
    openapiFields.add("LabelingJobArn");
    openapiFields.add("AutoMLJobArn");
    openapiFields.add("DataProcessing");
    openapiFields.add("ExperimentConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TransformJobName");
    openapiRequiredFields.add("TransformJobArn");
    openapiRequiredFields.add("TransformJobStatus");
    openapiRequiredFields.add("ModelName");
    openapiRequiredFields.add("TransformInput");
    openapiRequiredFields.add("TransformResources");
    openapiRequiredFields.add("CreationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeTransformJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeTransformJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeTransformJobResponse is not found in the empty JSON string", DescribeTransformJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeTransformJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeTransformJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeTransformJobResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `TransformJobName`
      String.validateJsonElement(jsonObj.get("TransformJobName"));
      // validate the required field `TransformJobArn`
      String.validateJsonElement(jsonObj.get("TransformJobArn"));
      // validate the required field `TransformJobStatus`
      TransformJobStatus.validateJsonElement(jsonObj.get("TransformJobStatus"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the required field `ModelName`
      String.validateJsonElement(jsonObj.get("ModelName"));
      // validate the optional field `MaxConcurrentTransforms`
      if (jsonObj.get("MaxConcurrentTransforms") != null && !jsonObj.get("MaxConcurrentTransforms").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxConcurrentTransforms"));
      }
      // validate the optional field `ModelClientConfig`
      if (jsonObj.get("ModelClientConfig") != null && !jsonObj.get("ModelClientConfig").isJsonNull()) {
        DescribeTransformJobResponseModelClientConfig.validateJsonElement(jsonObj.get("ModelClientConfig"));
      }
      // validate the optional field `MaxPayloadInMB`
      if (jsonObj.get("MaxPayloadInMB") != null && !jsonObj.get("MaxPayloadInMB").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxPayloadInMB"));
      }
      // validate the optional field `BatchStrategy`
      if (jsonObj.get("BatchStrategy") != null && !jsonObj.get("BatchStrategy").isJsonNull()) {
        BatchStrategy.validateJsonElement(jsonObj.get("BatchStrategy"));
      }
      // validate the optional field `Environment`
      if (jsonObj.get("Environment") != null && !jsonObj.get("Environment").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Environment"));
      }
      // validate the required field `TransformInput`
      DescribeTransformJobResponseTransformInput.validateJsonElement(jsonObj.get("TransformInput"));
      // validate the optional field `TransformOutput`
      if (jsonObj.get("TransformOutput") != null && !jsonObj.get("TransformOutput").isJsonNull()) {
        DescribeTransformJobResponseTransformOutput.validateJsonElement(jsonObj.get("TransformOutput"));
      }
      // validate the optional field `DataCaptureConfig`
      if (jsonObj.get("DataCaptureConfig") != null && !jsonObj.get("DataCaptureConfig").isJsonNull()) {
        CreateTransformJobRequestDataCaptureConfig.validateJsonElement(jsonObj.get("DataCaptureConfig"));
      }
      // validate the required field `TransformResources`
      CreateTransformJobRequestTransformResources.validateJsonElement(jsonObj.get("TransformResources"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `TransformStartTime`
      if (jsonObj.get("TransformStartTime") != null && !jsonObj.get("TransformStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TransformStartTime"));
      }
      // validate the optional field `TransformEndTime`
      if (jsonObj.get("TransformEndTime") != null && !jsonObj.get("TransformEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TransformEndTime"));
      }
      // validate the optional field `LabelingJobArn`
      if (jsonObj.get("LabelingJobArn") != null && !jsonObj.get("LabelingJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LabelingJobArn"));
      }
      // validate the optional field `AutoMLJobArn`
      if (jsonObj.get("AutoMLJobArn") != null && !jsonObj.get("AutoMLJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoMLJobArn"));
      }
      // validate the optional field `DataProcessing`
      if (jsonObj.get("DataProcessing") != null && !jsonObj.get("DataProcessing").isJsonNull()) {
        DataProcessing.validateJsonElement(jsonObj.get("DataProcessing"));
      }
      // validate the optional field `ExperimentConfig`
      if (jsonObj.get("ExperimentConfig") != null && !jsonObj.get("ExperimentConfig").isJsonNull()) {
        ExperimentConfig.validateJsonElement(jsonObj.get("ExperimentConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeTransformJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeTransformJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeTransformJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeTransformJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeTransformJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeTransformJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeTransformJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeTransformJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeTransformJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeTransformJobResponse
   */
  public static DescribeTransformJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeTransformJobResponse.class);
  }

  /**
   * Convert an instance of DescribeTransformJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

