/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.HyperParameterTuningJobConfigHyperParameterTuningJobObjective;
import org.openapitools.client.model.HyperParameterTuningJobConfigParameterRanges;
import org.openapitools.client.model.HyperParameterTuningJobConfigResourceLimits;
import org.openapitools.client.model.HyperParameterTuningJobConfigStrategyConfig;
import org.openapitools.client.model.HyperParameterTuningJobConfigTuningJobCompletionCriteria;
import org.openapitools.client.model.HyperParameterTuningJobStrategyType;
import org.openapitools.client.model.TrainingJobEarlyStoppingType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig {
  public static final String SERIALIZED_NAME_STRATEGY = "Strategy";
  @SerializedName(SERIALIZED_NAME_STRATEGY)
  private HyperParameterTuningJobStrategyType strategy;

  public static final String SERIALIZED_NAME_STRATEGY_CONFIG = "StrategyConfig";
  @SerializedName(SERIALIZED_NAME_STRATEGY_CONFIG)
  private HyperParameterTuningJobConfigStrategyConfig strategyConfig;

  public static final String SERIALIZED_NAME_HYPER_PARAMETER_TUNING_JOB_OBJECTIVE = "HyperParameterTuningJobObjective";
  @SerializedName(SERIALIZED_NAME_HYPER_PARAMETER_TUNING_JOB_OBJECTIVE)
  private HyperParameterTuningJobConfigHyperParameterTuningJobObjective hyperParameterTuningJobObjective;

  public static final String SERIALIZED_NAME_RESOURCE_LIMITS = "ResourceLimits";
  @SerializedName(SERIALIZED_NAME_RESOURCE_LIMITS)
  private HyperParameterTuningJobConfigResourceLimits resourceLimits;

  public static final String SERIALIZED_NAME_PARAMETER_RANGES = "ParameterRanges";
  @SerializedName(SERIALIZED_NAME_PARAMETER_RANGES)
  private HyperParameterTuningJobConfigParameterRanges parameterRanges;

  public static final String SERIALIZED_NAME_TRAINING_JOB_EARLY_STOPPING_TYPE = "TrainingJobEarlyStoppingType";
  @SerializedName(SERIALIZED_NAME_TRAINING_JOB_EARLY_STOPPING_TYPE)
  private TrainingJobEarlyStoppingType trainingJobEarlyStoppingType;

  public static final String SERIALIZED_NAME_TUNING_JOB_COMPLETION_CRITERIA = "TuningJobCompletionCriteria";
  @SerializedName(SERIALIZED_NAME_TUNING_JOB_COMPLETION_CRITERIA)
  private HyperParameterTuningJobConfigTuningJobCompletionCriteria tuningJobCompletionCriteria;

  public static final String SERIALIZED_NAME_RANDOM_SEED = "RandomSeed";
  @SerializedName(SERIALIZED_NAME_RANDOM_SEED)
  private Integer randomSeed;

  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig() {
  }

  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig strategy(HyperParameterTuningJobStrategyType strategy) {
    this.strategy = strategy;
    return this;
  }

  /**
   * Get strategy
   * @return strategy
   */
  @javax.annotation.Nonnull
  public HyperParameterTuningJobStrategyType getStrategy() {
    return strategy;
  }

  public void setStrategy(HyperParameterTuningJobStrategyType strategy) {
    this.strategy = strategy;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig strategyConfig(HyperParameterTuningJobConfigStrategyConfig strategyConfig) {
    this.strategyConfig = strategyConfig;
    return this;
  }

  /**
   * Get strategyConfig
   * @return strategyConfig
   */
  @javax.annotation.Nullable
  public HyperParameterTuningJobConfigStrategyConfig getStrategyConfig() {
    return strategyConfig;
  }

  public void setStrategyConfig(HyperParameterTuningJobConfigStrategyConfig strategyConfig) {
    this.strategyConfig = strategyConfig;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig hyperParameterTuningJobObjective(HyperParameterTuningJobConfigHyperParameterTuningJobObjective hyperParameterTuningJobObjective) {
    this.hyperParameterTuningJobObjective = hyperParameterTuningJobObjective;
    return this;
  }

  /**
   * Get hyperParameterTuningJobObjective
   * @return hyperParameterTuningJobObjective
   */
  @javax.annotation.Nullable
  public HyperParameterTuningJobConfigHyperParameterTuningJobObjective getHyperParameterTuningJobObjective() {
    return hyperParameterTuningJobObjective;
  }

  public void setHyperParameterTuningJobObjective(HyperParameterTuningJobConfigHyperParameterTuningJobObjective hyperParameterTuningJobObjective) {
    this.hyperParameterTuningJobObjective = hyperParameterTuningJobObjective;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig resourceLimits(HyperParameterTuningJobConfigResourceLimits resourceLimits) {
    this.resourceLimits = resourceLimits;
    return this;
  }

  /**
   * Get resourceLimits
   * @return resourceLimits
   */
  @javax.annotation.Nonnull
  public HyperParameterTuningJobConfigResourceLimits getResourceLimits() {
    return resourceLimits;
  }

  public void setResourceLimits(HyperParameterTuningJobConfigResourceLimits resourceLimits) {
    this.resourceLimits = resourceLimits;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig parameterRanges(HyperParameterTuningJobConfigParameterRanges parameterRanges) {
    this.parameterRanges = parameterRanges;
    return this;
  }

  /**
   * Get parameterRanges
   * @return parameterRanges
   */
  @javax.annotation.Nullable
  public HyperParameterTuningJobConfigParameterRanges getParameterRanges() {
    return parameterRanges;
  }

  public void setParameterRanges(HyperParameterTuningJobConfigParameterRanges parameterRanges) {
    this.parameterRanges = parameterRanges;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig trainingJobEarlyStoppingType(TrainingJobEarlyStoppingType trainingJobEarlyStoppingType) {
    this.trainingJobEarlyStoppingType = trainingJobEarlyStoppingType;
    return this;
  }

  /**
   * Get trainingJobEarlyStoppingType
   * @return trainingJobEarlyStoppingType
   */
  @javax.annotation.Nullable
  public TrainingJobEarlyStoppingType getTrainingJobEarlyStoppingType() {
    return trainingJobEarlyStoppingType;
  }

  public void setTrainingJobEarlyStoppingType(TrainingJobEarlyStoppingType trainingJobEarlyStoppingType) {
    this.trainingJobEarlyStoppingType = trainingJobEarlyStoppingType;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig tuningJobCompletionCriteria(HyperParameterTuningJobConfigTuningJobCompletionCriteria tuningJobCompletionCriteria) {
    this.tuningJobCompletionCriteria = tuningJobCompletionCriteria;
    return this;
  }

  /**
   * Get tuningJobCompletionCriteria
   * @return tuningJobCompletionCriteria
   */
  @javax.annotation.Nullable
  public HyperParameterTuningJobConfigTuningJobCompletionCriteria getTuningJobCompletionCriteria() {
    return tuningJobCompletionCriteria;
  }

  public void setTuningJobCompletionCriteria(HyperParameterTuningJobConfigTuningJobCompletionCriteria tuningJobCompletionCriteria) {
    this.tuningJobCompletionCriteria = tuningJobCompletionCriteria;
  }


  public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig randomSeed(Integer randomSeed) {
    this.randomSeed = randomSeed;
    return this;
  }

  /**
   * Get randomSeed
   * @return randomSeed
   */
  @javax.annotation.Nullable
  public Integer getRandomSeed() {
    return randomSeed;
  }

  public void setRandomSeed(Integer randomSeed) {
    this.randomSeed = randomSeed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig createHyperParameterTuningJobRequestHyperParameterTuningJobConfig = (CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig) o;
    return Objects.equals(this.strategy, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.strategy) &&
        Objects.equals(this.strategyConfig, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.strategyConfig) &&
        Objects.equals(this.hyperParameterTuningJobObjective, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.hyperParameterTuningJobObjective) &&
        Objects.equals(this.resourceLimits, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.resourceLimits) &&
        Objects.equals(this.parameterRanges, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.parameterRanges) &&
        Objects.equals(this.trainingJobEarlyStoppingType, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.trainingJobEarlyStoppingType) &&
        Objects.equals(this.tuningJobCompletionCriteria, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.tuningJobCompletionCriteria) &&
        Objects.equals(this.randomSeed, createHyperParameterTuningJobRequestHyperParameterTuningJobConfig.randomSeed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(strategy, strategyConfig, hyperParameterTuningJobObjective, resourceLimits, parameterRanges, trainingJobEarlyStoppingType, tuningJobCompletionCriteria, randomSeed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig {\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    strategyConfig: ").append(toIndentedString(strategyConfig)).append("\n");
    sb.append("    hyperParameterTuningJobObjective: ").append(toIndentedString(hyperParameterTuningJobObjective)).append("\n");
    sb.append("    resourceLimits: ").append(toIndentedString(resourceLimits)).append("\n");
    sb.append("    parameterRanges: ").append(toIndentedString(parameterRanges)).append("\n");
    sb.append("    trainingJobEarlyStoppingType: ").append(toIndentedString(trainingJobEarlyStoppingType)).append("\n");
    sb.append("    tuningJobCompletionCriteria: ").append(toIndentedString(tuningJobCompletionCriteria)).append("\n");
    sb.append("    randomSeed: ").append(toIndentedString(randomSeed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Strategy");
    openapiFields.add("StrategyConfig");
    openapiFields.add("HyperParameterTuningJobObjective");
    openapiFields.add("ResourceLimits");
    openapiFields.add("ParameterRanges");
    openapiFields.add("TrainingJobEarlyStoppingType");
    openapiFields.add("TuningJobCompletionCriteria");
    openapiFields.add("RandomSeed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Strategy");
    openapiRequiredFields.add("ResourceLimits");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig is not found in the empty JSON string", CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Strategy`
      HyperParameterTuningJobStrategyType.validateJsonElement(jsonObj.get("Strategy"));
      // validate the optional field `StrategyConfig`
      if (jsonObj.get("StrategyConfig") != null && !jsonObj.get("StrategyConfig").isJsonNull()) {
        HyperParameterTuningJobConfigStrategyConfig.validateJsonElement(jsonObj.get("StrategyConfig"));
      }
      // validate the optional field `HyperParameterTuningJobObjective`
      if (jsonObj.get("HyperParameterTuningJobObjective") != null && !jsonObj.get("HyperParameterTuningJobObjective").isJsonNull()) {
        HyperParameterTuningJobConfigHyperParameterTuningJobObjective.validateJsonElement(jsonObj.get("HyperParameterTuningJobObjective"));
      }
      // validate the required field `ResourceLimits`
      HyperParameterTuningJobConfigResourceLimits.validateJsonElement(jsonObj.get("ResourceLimits"));
      // validate the optional field `ParameterRanges`
      if (jsonObj.get("ParameterRanges") != null && !jsonObj.get("ParameterRanges").isJsonNull()) {
        HyperParameterTuningJobConfigParameterRanges.validateJsonElement(jsonObj.get("ParameterRanges"));
      }
      // validate the optional field `TrainingJobEarlyStoppingType`
      if (jsonObj.get("TrainingJobEarlyStoppingType") != null && !jsonObj.get("TrainingJobEarlyStoppingType").isJsonNull()) {
        TrainingJobEarlyStoppingType.validateJsonElement(jsonObj.get("TrainingJobEarlyStoppingType"));
      }
      // validate the optional field `TuningJobCompletionCriteria`
      if (jsonObj.get("TuningJobCompletionCriteria") != null && !jsonObj.get("TuningJobCompletionCriteria").isJsonNull()) {
        HyperParameterTuningJobConfigTuningJobCompletionCriteria.validateJsonElement(jsonObj.get("TuningJobCompletionCriteria"));
      }
      // validate the optional field `RandomSeed`
      if (jsonObj.get("RandomSeed") != null && !jsonObj.get("RandomSeed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RandomSeed"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig>() {
           @Override
           public void write(JsonWriter out, CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig
   * @throws IOException if the JSON string is invalid with respect to CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig
   */
  public static CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig.class);
  }

  /**
   * Convert an instance of CreateHyperParameterTuningJobRequestHyperParameterTuningJobConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

