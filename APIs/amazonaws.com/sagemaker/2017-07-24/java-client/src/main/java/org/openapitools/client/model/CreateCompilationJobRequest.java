/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateCompilationJobRequestInputConfig;
import org.openapitools.client.model.CreateCompilationJobRequestOutputConfig;
import org.openapitools.client.model.CreateCompilationJobRequestStoppingCondition;
import org.openapitools.client.model.CreateCompilationJobRequestVpcConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCompilationJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCompilationJobRequest {
  public static final String SERIALIZED_NAME_COMPILATION_JOB_NAME = "CompilationJobName";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_NAME)
  private String compilationJobName;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_MODEL_PACKAGE_VERSION_ARN = "ModelPackageVersionArn";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGE_VERSION_ARN)
  private String modelPackageVersionArn;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "InputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private CreateCompilationJobRequestInputConfig inputConfig;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "OutputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private CreateCompilationJobRequestOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "VpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private CreateCompilationJobRequestVpcConfig vpcConfig;

  public static final String SERIALIZED_NAME_STOPPING_CONDITION = "StoppingCondition";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITION)
  private CreateCompilationJobRequestStoppingCondition stoppingCondition;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public CreateCompilationJobRequest() {
  }

  public CreateCompilationJobRequest compilationJobName(String compilationJobName) {
    this.compilationJobName = compilationJobName;
    return this;
  }

  /**
   * Get compilationJobName
   * @return compilationJobName
   */
  @javax.annotation.Nonnull
  public String getCompilationJobName() {
    return compilationJobName;
  }

  public void setCompilationJobName(String compilationJobName) {
    this.compilationJobName = compilationJobName;
  }


  public CreateCompilationJobRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateCompilationJobRequest modelPackageVersionArn(String modelPackageVersionArn) {
    this.modelPackageVersionArn = modelPackageVersionArn;
    return this;
  }

  /**
   * Get modelPackageVersionArn
   * @return modelPackageVersionArn
   */
  @javax.annotation.Nullable
  public String getModelPackageVersionArn() {
    return modelPackageVersionArn;
  }

  public void setModelPackageVersionArn(String modelPackageVersionArn) {
    this.modelPackageVersionArn = modelPackageVersionArn;
  }


  public CreateCompilationJobRequest inputConfig(CreateCompilationJobRequestInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nullable
  public CreateCompilationJobRequestInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(CreateCompilationJobRequestInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public CreateCompilationJobRequest outputConfig(CreateCompilationJobRequestOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nonnull
  public CreateCompilationJobRequestOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(CreateCompilationJobRequestOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public CreateCompilationJobRequest vpcConfig(CreateCompilationJobRequestVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public CreateCompilationJobRequestVpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(CreateCompilationJobRequestVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }


  public CreateCompilationJobRequest stoppingCondition(CreateCompilationJobRequestStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
    return this;
  }

  /**
   * Get stoppingCondition
   * @return stoppingCondition
   */
  @javax.annotation.Nonnull
  public CreateCompilationJobRequestStoppingCondition getStoppingCondition() {
    return stoppingCondition;
  }

  public void setStoppingCondition(CreateCompilationJobRequestStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
  }


  public CreateCompilationJobRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCompilationJobRequest createCompilationJobRequest = (CreateCompilationJobRequest) o;
    return Objects.equals(this.compilationJobName, createCompilationJobRequest.compilationJobName) &&
        Objects.equals(this.roleArn, createCompilationJobRequest.roleArn) &&
        Objects.equals(this.modelPackageVersionArn, createCompilationJobRequest.modelPackageVersionArn) &&
        Objects.equals(this.inputConfig, createCompilationJobRequest.inputConfig) &&
        Objects.equals(this.outputConfig, createCompilationJobRequest.outputConfig) &&
        Objects.equals(this.vpcConfig, createCompilationJobRequest.vpcConfig) &&
        Objects.equals(this.stoppingCondition, createCompilationJobRequest.stoppingCondition) &&
        Objects.equals(this.tags, createCompilationJobRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compilationJobName, roleArn, modelPackageVersionArn, inputConfig, outputConfig, vpcConfig, stoppingCondition, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCompilationJobRequest {\n");
    sb.append("    compilationJobName: ").append(toIndentedString(compilationJobName)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    modelPackageVersionArn: ").append(toIndentedString(modelPackageVersionArn)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("    stoppingCondition: ").append(toIndentedString(stoppingCondition)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompilationJobName");
    openapiFields.add("RoleArn");
    openapiFields.add("ModelPackageVersionArn");
    openapiFields.add("InputConfig");
    openapiFields.add("OutputConfig");
    openapiFields.add("VpcConfig");
    openapiFields.add("StoppingCondition");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CompilationJobName");
    openapiRequiredFields.add("RoleArn");
    openapiRequiredFields.add("OutputConfig");
    openapiRequiredFields.add("StoppingCondition");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCompilationJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCompilationJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCompilationJobRequest is not found in the empty JSON string", CreateCompilationJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCompilationJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCompilationJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCompilationJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CompilationJobName`
      String.validateJsonElement(jsonObj.get("CompilationJobName"));
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `ModelPackageVersionArn`
      if (jsonObj.get("ModelPackageVersionArn") != null && !jsonObj.get("ModelPackageVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelPackageVersionArn"));
      }
      // validate the optional field `InputConfig`
      if (jsonObj.get("InputConfig") != null && !jsonObj.get("InputConfig").isJsonNull()) {
        CreateCompilationJobRequestInputConfig.validateJsonElement(jsonObj.get("InputConfig"));
      }
      // validate the required field `OutputConfig`
      CreateCompilationJobRequestOutputConfig.validateJsonElement(jsonObj.get("OutputConfig"));
      // validate the optional field `VpcConfig`
      if (jsonObj.get("VpcConfig") != null && !jsonObj.get("VpcConfig").isJsonNull()) {
        CreateCompilationJobRequestVpcConfig.validateJsonElement(jsonObj.get("VpcConfig"));
      }
      // validate the required field `StoppingCondition`
      CreateCompilationJobRequestStoppingCondition.validateJsonElement(jsonObj.get("StoppingCondition"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCompilationJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCompilationJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCompilationJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCompilationJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCompilationJobRequest>() {
           @Override
           public void write(JsonWriter out, CreateCompilationJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCompilationJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCompilationJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCompilationJobRequest
   * @throws IOException if the JSON string is invalid with respect to CreateCompilationJobRequest
   */
  public static CreateCompilationJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCompilationJobRequest.class);
  }

  /**
   * Convert an instance of CreateCompilationJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

