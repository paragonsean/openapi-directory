/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TrainingInstanceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeTrainingJobResponseResourceConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeTrainingJobResponseResourceConfig {
  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private TrainingInstanceType instanceType;

  public static final String SERIALIZED_NAME_INSTANCE_COUNT = "InstanceCount";
  @SerializedName(SERIALIZED_NAME_INSTANCE_COUNT)
  private Integer instanceCount;

  public static final String SERIALIZED_NAME_VOLUME_SIZE_IN_G_B = "VolumeSizeInGB";
  @SerializedName(SERIALIZED_NAME_VOLUME_SIZE_IN_G_B)
  private Integer volumeSizeInGB;

  public static final String SERIALIZED_NAME_VOLUME_KMS_KEY_ID = "VolumeKmsKeyId";
  @SerializedName(SERIALIZED_NAME_VOLUME_KMS_KEY_ID)
  private String volumeKmsKeyId;

  public static final String SERIALIZED_NAME_INSTANCE_GROUPS = "InstanceGroups";
  @SerializedName(SERIALIZED_NAME_INSTANCE_GROUPS)
  private List instanceGroups;

  public static final String SERIALIZED_NAME_KEEP_ALIVE_PERIOD_IN_SECONDS = "KeepAlivePeriodInSeconds";
  @SerializedName(SERIALIZED_NAME_KEEP_ALIVE_PERIOD_IN_SECONDS)
  private Integer keepAlivePeriodInSeconds;

  public DescribeTrainingJobResponseResourceConfig() {
  }

  public DescribeTrainingJobResponseResourceConfig instanceType(TrainingInstanceType instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public TrainingInstanceType getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(TrainingInstanceType instanceType) {
    this.instanceType = instanceType;
  }


  public DescribeTrainingJobResponseResourceConfig instanceCount(Integer instanceCount) {
    this.instanceCount = instanceCount;
    return this;
  }

  /**
   * Get instanceCount
   * @return instanceCount
   */
  @javax.annotation.Nullable
  public Integer getInstanceCount() {
    return instanceCount;
  }

  public void setInstanceCount(Integer instanceCount) {
    this.instanceCount = instanceCount;
  }


  public DescribeTrainingJobResponseResourceConfig volumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
    return this;
  }

  /**
   * Get volumeSizeInGB
   * @return volumeSizeInGB
   */
  @javax.annotation.Nonnull
  public Integer getVolumeSizeInGB() {
    return volumeSizeInGB;
  }

  public void setVolumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
  }


  public DescribeTrainingJobResponseResourceConfig volumeKmsKeyId(String volumeKmsKeyId) {
    this.volumeKmsKeyId = volumeKmsKeyId;
    return this;
  }

  /**
   * Get volumeKmsKeyId
   * @return volumeKmsKeyId
   */
  @javax.annotation.Nullable
  public String getVolumeKmsKeyId() {
    return volumeKmsKeyId;
  }

  public void setVolumeKmsKeyId(String volumeKmsKeyId) {
    this.volumeKmsKeyId = volumeKmsKeyId;
  }


  public DescribeTrainingJobResponseResourceConfig instanceGroups(List instanceGroups) {
    this.instanceGroups = instanceGroups;
    return this;
  }

  /**
   * Get instanceGroups
   * @return instanceGroups
   */
  @javax.annotation.Nullable
  public List getInstanceGroups() {
    return instanceGroups;
  }

  public void setInstanceGroups(List instanceGroups) {
    this.instanceGroups = instanceGroups;
  }


  public DescribeTrainingJobResponseResourceConfig keepAlivePeriodInSeconds(Integer keepAlivePeriodInSeconds) {
    this.keepAlivePeriodInSeconds = keepAlivePeriodInSeconds;
    return this;
  }

  /**
   * Get keepAlivePeriodInSeconds
   * @return keepAlivePeriodInSeconds
   */
  @javax.annotation.Nullable
  public Integer getKeepAlivePeriodInSeconds() {
    return keepAlivePeriodInSeconds;
  }

  public void setKeepAlivePeriodInSeconds(Integer keepAlivePeriodInSeconds) {
    this.keepAlivePeriodInSeconds = keepAlivePeriodInSeconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTrainingJobResponseResourceConfig describeTrainingJobResponseResourceConfig = (DescribeTrainingJobResponseResourceConfig) o;
    return Objects.equals(this.instanceType, describeTrainingJobResponseResourceConfig.instanceType) &&
        Objects.equals(this.instanceCount, describeTrainingJobResponseResourceConfig.instanceCount) &&
        Objects.equals(this.volumeSizeInGB, describeTrainingJobResponseResourceConfig.volumeSizeInGB) &&
        Objects.equals(this.volumeKmsKeyId, describeTrainingJobResponseResourceConfig.volumeKmsKeyId) &&
        Objects.equals(this.instanceGroups, describeTrainingJobResponseResourceConfig.instanceGroups) &&
        Objects.equals(this.keepAlivePeriodInSeconds, describeTrainingJobResponseResourceConfig.keepAlivePeriodInSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceType, instanceCount, volumeSizeInGB, volumeKmsKeyId, instanceGroups, keepAlivePeriodInSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTrainingJobResponseResourceConfig {\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    instanceCount: ").append(toIndentedString(instanceCount)).append("\n");
    sb.append("    volumeSizeInGB: ").append(toIndentedString(volumeSizeInGB)).append("\n");
    sb.append("    volumeKmsKeyId: ").append(toIndentedString(volumeKmsKeyId)).append("\n");
    sb.append("    instanceGroups: ").append(toIndentedString(instanceGroups)).append("\n");
    sb.append("    keepAlivePeriodInSeconds: ").append(toIndentedString(keepAlivePeriodInSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InstanceType");
    openapiFields.add("InstanceCount");
    openapiFields.add("VolumeSizeInGB");
    openapiFields.add("VolumeKmsKeyId");
    openapiFields.add("InstanceGroups");
    openapiFields.add("KeepAlivePeriodInSeconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("VolumeSizeInGB");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeTrainingJobResponseResourceConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeTrainingJobResponseResourceConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeTrainingJobResponseResourceConfig is not found in the empty JSON string", DescribeTrainingJobResponseResourceConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeTrainingJobResponseResourceConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeTrainingJobResponseResourceConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeTrainingJobResponseResourceConfig.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        TrainingInstanceType.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `InstanceCount`
      if (jsonObj.get("InstanceCount") != null && !jsonObj.get("InstanceCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("InstanceCount"));
      }
      // validate the required field `VolumeSizeInGB`
      Integer.validateJsonElement(jsonObj.get("VolumeSizeInGB"));
      // validate the optional field `VolumeKmsKeyId`
      if (jsonObj.get("VolumeKmsKeyId") != null && !jsonObj.get("VolumeKmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VolumeKmsKeyId"));
      }
      // validate the optional field `InstanceGroups`
      if (jsonObj.get("InstanceGroups") != null && !jsonObj.get("InstanceGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InstanceGroups"));
      }
      // validate the optional field `KeepAlivePeriodInSeconds`
      if (jsonObj.get("KeepAlivePeriodInSeconds") != null && !jsonObj.get("KeepAlivePeriodInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("KeepAlivePeriodInSeconds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeTrainingJobResponseResourceConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeTrainingJobResponseResourceConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeTrainingJobResponseResourceConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeTrainingJobResponseResourceConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeTrainingJobResponseResourceConfig>() {
           @Override
           public void write(JsonWriter out, DescribeTrainingJobResponseResourceConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeTrainingJobResponseResourceConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeTrainingJobResponseResourceConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeTrainingJobResponseResourceConfig
   * @throws IOException if the JSON string is invalid with respect to DescribeTrainingJobResponseResourceConfig
   */
  public static DescribeTrainingJobResponseResourceConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeTrainingJobResponseResourceConfig.class);
  }

  /**
   * Convert an instance of DescribeTrainingJobResponseResourceConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

