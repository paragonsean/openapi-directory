/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProjectCreatedBy;
import org.openapitools.client.model.ProjectStatus;
import org.openapitools.client.model.ServiceCatalogProvisionedProductDetails;
import org.openapitools.client.model.ServiceCatalogProvisioningDetails;
import org.openapitools.client.model.UserContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SearchRecordProject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchRecordProject {
  public static final String SERIALIZED_NAME_PROJECT_ARN = "ProjectArn";
  @SerializedName(SERIALIZED_NAME_PROJECT_ARN)
  private String projectArn;

  public static final String SERIALIZED_NAME_PROJECT_NAME = "ProjectName";
  @SerializedName(SERIALIZED_NAME_PROJECT_NAME)
  private String projectName;

  public static final String SERIALIZED_NAME_PROJECT_ID = "ProjectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_PROJECT_DESCRIPTION = "ProjectDescription";
  @SerializedName(SERIALIZED_NAME_PROJECT_DESCRIPTION)
  private String projectDescription;

  public static final String SERIALIZED_NAME_SERVICE_CATALOG_PROVISIONING_DETAILS = "ServiceCatalogProvisioningDetails";
  @SerializedName(SERIALIZED_NAME_SERVICE_CATALOG_PROVISIONING_DETAILS)
  private ServiceCatalogProvisioningDetails serviceCatalogProvisioningDetails;

  public static final String SERIALIZED_NAME_SERVICE_CATALOG_PROVISIONED_PRODUCT_DETAILS = "ServiceCatalogProvisionedProductDetails";
  @SerializedName(SERIALIZED_NAME_SERVICE_CATALOG_PROVISIONED_PRODUCT_DETAILS)
  private ServiceCatalogProvisionedProductDetails serviceCatalogProvisionedProductDetails;

  public static final String SERIALIZED_NAME_PROJECT_STATUS = "ProjectStatus";
  @SerializedName(SERIALIZED_NAME_PROJECT_STATUS)
  private ProjectStatus projectStatus;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private ProjectCreatedBy createdBy;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private UserContext lastModifiedBy;

  public SearchRecordProject() {
  }

  public SearchRecordProject projectArn(String projectArn) {
    this.projectArn = projectArn;
    return this;
  }

  /**
   * Get projectArn
   * @return projectArn
   */
  @javax.annotation.Nullable
  public String getProjectArn() {
    return projectArn;
  }

  public void setProjectArn(String projectArn) {
    this.projectArn = projectArn;
  }


  public SearchRecordProject projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

  /**
   * Get projectName
   * @return projectName
   */
  @javax.annotation.Nullable
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public SearchRecordProject projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Get projectId
   * @return projectId
   */
  @javax.annotation.Nullable
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public SearchRecordProject projectDescription(String projectDescription) {
    this.projectDescription = projectDescription;
    return this;
  }

  /**
   * Get projectDescription
   * @return projectDescription
   */
  @javax.annotation.Nullable
  public String getProjectDescription() {
    return projectDescription;
  }

  public void setProjectDescription(String projectDescription) {
    this.projectDescription = projectDescription;
  }


  public SearchRecordProject serviceCatalogProvisioningDetails(ServiceCatalogProvisioningDetails serviceCatalogProvisioningDetails) {
    this.serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetails;
    return this;
  }

  /**
   * Get serviceCatalogProvisioningDetails
   * @return serviceCatalogProvisioningDetails
   */
  @javax.annotation.Nullable
  public ServiceCatalogProvisioningDetails getServiceCatalogProvisioningDetails() {
    return serviceCatalogProvisioningDetails;
  }

  public void setServiceCatalogProvisioningDetails(ServiceCatalogProvisioningDetails serviceCatalogProvisioningDetails) {
    this.serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetails;
  }


  public SearchRecordProject serviceCatalogProvisionedProductDetails(ServiceCatalogProvisionedProductDetails serviceCatalogProvisionedProductDetails) {
    this.serviceCatalogProvisionedProductDetails = serviceCatalogProvisionedProductDetails;
    return this;
  }

  /**
   * Get serviceCatalogProvisionedProductDetails
   * @return serviceCatalogProvisionedProductDetails
   */
  @javax.annotation.Nullable
  public ServiceCatalogProvisionedProductDetails getServiceCatalogProvisionedProductDetails() {
    return serviceCatalogProvisionedProductDetails;
  }

  public void setServiceCatalogProvisionedProductDetails(ServiceCatalogProvisionedProductDetails serviceCatalogProvisionedProductDetails) {
    this.serviceCatalogProvisionedProductDetails = serviceCatalogProvisionedProductDetails;
  }


  public SearchRecordProject projectStatus(ProjectStatus projectStatus) {
    this.projectStatus = projectStatus;
    return this;
  }

  /**
   * Get projectStatus
   * @return projectStatus
   */
  @javax.annotation.Nullable
  public ProjectStatus getProjectStatus() {
    return projectStatus;
  }

  public void setProjectStatus(ProjectStatus projectStatus) {
    this.projectStatus = projectStatus;
  }


  public SearchRecordProject createdBy(ProjectCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public ProjectCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(ProjectCreatedBy createdBy) {
    this.createdBy = createdBy;
  }


  public SearchRecordProject creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public SearchRecordProject tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public SearchRecordProject lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public SearchRecordProject lastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public UserContext getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRecordProject searchRecordProject = (SearchRecordProject) o;
    return Objects.equals(this.projectArn, searchRecordProject.projectArn) &&
        Objects.equals(this.projectName, searchRecordProject.projectName) &&
        Objects.equals(this.projectId, searchRecordProject.projectId) &&
        Objects.equals(this.projectDescription, searchRecordProject.projectDescription) &&
        Objects.equals(this.serviceCatalogProvisioningDetails, searchRecordProject.serviceCatalogProvisioningDetails) &&
        Objects.equals(this.serviceCatalogProvisionedProductDetails, searchRecordProject.serviceCatalogProvisionedProductDetails) &&
        Objects.equals(this.projectStatus, searchRecordProject.projectStatus) &&
        Objects.equals(this.createdBy, searchRecordProject.createdBy) &&
        Objects.equals(this.creationTime, searchRecordProject.creationTime) &&
        Objects.equals(this.tags, searchRecordProject.tags) &&
        Objects.equals(this.lastModifiedTime, searchRecordProject.lastModifiedTime) &&
        Objects.equals(this.lastModifiedBy, searchRecordProject.lastModifiedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectArn, projectName, projectId, projectDescription, serviceCatalogProvisioningDetails, serviceCatalogProvisionedProductDetails, projectStatus, createdBy, creationTime, tags, lastModifiedTime, lastModifiedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRecordProject {\n");
    sb.append("    projectArn: ").append(toIndentedString(projectArn)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectDescription: ").append(toIndentedString(projectDescription)).append("\n");
    sb.append("    serviceCatalogProvisioningDetails: ").append(toIndentedString(serviceCatalogProvisioningDetails)).append("\n");
    sb.append("    serviceCatalogProvisionedProductDetails: ").append(toIndentedString(serviceCatalogProvisionedProductDetails)).append("\n");
    sb.append("    projectStatus: ").append(toIndentedString(projectStatus)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProjectArn");
    openapiFields.add("ProjectName");
    openapiFields.add("ProjectId");
    openapiFields.add("ProjectDescription");
    openapiFields.add("ServiceCatalogProvisioningDetails");
    openapiFields.add("ServiceCatalogProvisionedProductDetails");
    openapiFields.add("ProjectStatus");
    openapiFields.add("CreatedBy");
    openapiFields.add("CreationTime");
    openapiFields.add("Tags");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastModifiedBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchRecordProject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchRecordProject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchRecordProject is not found in the empty JSON string", SearchRecordProject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchRecordProject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchRecordProject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ProjectArn`
      if (jsonObj.get("ProjectArn") != null && !jsonObj.get("ProjectArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProjectArn"));
      }
      // validate the optional field `ProjectName`
      if (jsonObj.get("ProjectName") != null && !jsonObj.get("ProjectName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProjectName"));
      }
      // validate the optional field `ProjectId`
      if (jsonObj.get("ProjectId") != null && !jsonObj.get("ProjectId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProjectId"));
      }
      // validate the optional field `ProjectDescription`
      if (jsonObj.get("ProjectDescription") != null && !jsonObj.get("ProjectDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProjectDescription"));
      }
      // validate the optional field `ServiceCatalogProvisioningDetails`
      if (jsonObj.get("ServiceCatalogProvisioningDetails") != null && !jsonObj.get("ServiceCatalogProvisioningDetails").isJsonNull()) {
        ServiceCatalogProvisioningDetails.validateJsonElement(jsonObj.get("ServiceCatalogProvisioningDetails"));
      }
      // validate the optional field `ServiceCatalogProvisionedProductDetails`
      if (jsonObj.get("ServiceCatalogProvisionedProductDetails") != null && !jsonObj.get("ServiceCatalogProvisionedProductDetails").isJsonNull()) {
        ServiceCatalogProvisionedProductDetails.validateJsonElement(jsonObj.get("ServiceCatalogProvisionedProductDetails"));
      }
      // validate the optional field `ProjectStatus`
      if (jsonObj.get("ProjectStatus") != null && !jsonObj.get("ProjectStatus").isJsonNull()) {
        ProjectStatus.validateJsonElement(jsonObj.get("ProjectStatus"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        ProjectCreatedBy.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchRecordProject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchRecordProject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchRecordProject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchRecordProject.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchRecordProject>() {
           @Override
           public void write(JsonWriter out, SearchRecordProject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchRecordProject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchRecordProject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchRecordProject
   * @throws IOException if the JSON string is invalid with respect to SearchRecordProject
   */
  public static SearchRecordProject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchRecordProject.class);
  }

  /**
   * Convert an instance of SearchRecordProject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

