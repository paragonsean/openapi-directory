/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribeModelCardExportJobResponseExportArtifacts;
import org.openapitools.client.model.DescribeModelCardExportJobResponseOutputConfig;
import org.openapitools.client.model.ModelCardExportJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeModelCardExportJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeModelCardExportJobResponse {
  public static final String SERIALIZED_NAME_MODEL_CARD_EXPORT_JOB_NAME = "ModelCardExportJobName";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_EXPORT_JOB_NAME)
  private String modelCardExportJobName;

  public static final String SERIALIZED_NAME_MODEL_CARD_EXPORT_JOB_ARN = "ModelCardExportJobArn";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_EXPORT_JOB_ARN)
  private String modelCardExportJobArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ModelCardExportJobStatus status;

  public static final String SERIALIZED_NAME_MODEL_CARD_NAME = "ModelCardName";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_NAME)
  private String modelCardName;

  public static final String SERIALIZED_NAME_MODEL_CARD_VERSION = "ModelCardVersion";
  @SerializedName(SERIALIZED_NAME_MODEL_CARD_VERSION)
  private Integer modelCardVersion;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "OutputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private DescribeModelCardExportJobResponseOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "LastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private OffsetDateTime lastModifiedAt;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_EXPORT_ARTIFACTS = "ExportArtifacts";
  @SerializedName(SERIALIZED_NAME_EXPORT_ARTIFACTS)
  private DescribeModelCardExportJobResponseExportArtifacts exportArtifacts;

  public DescribeModelCardExportJobResponse() {
  }

  public DescribeModelCardExportJobResponse modelCardExportJobName(String modelCardExportJobName) {
    this.modelCardExportJobName = modelCardExportJobName;
    return this;
  }

  /**
   * Get modelCardExportJobName
   * @return modelCardExportJobName
   */
  @javax.annotation.Nonnull
  public String getModelCardExportJobName() {
    return modelCardExportJobName;
  }

  public void setModelCardExportJobName(String modelCardExportJobName) {
    this.modelCardExportJobName = modelCardExportJobName;
  }


  public DescribeModelCardExportJobResponse modelCardExportJobArn(String modelCardExportJobArn) {
    this.modelCardExportJobArn = modelCardExportJobArn;
    return this;
  }

  /**
   * Get modelCardExportJobArn
   * @return modelCardExportJobArn
   */
  @javax.annotation.Nonnull
  public String getModelCardExportJobArn() {
    return modelCardExportJobArn;
  }

  public void setModelCardExportJobArn(String modelCardExportJobArn) {
    this.modelCardExportJobArn = modelCardExportJobArn;
  }


  public DescribeModelCardExportJobResponse status(ModelCardExportJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public ModelCardExportJobStatus getStatus() {
    return status;
  }

  public void setStatus(ModelCardExportJobStatus status) {
    this.status = status;
  }


  public DescribeModelCardExportJobResponse modelCardName(String modelCardName) {
    this.modelCardName = modelCardName;
    return this;
  }

  /**
   * Get modelCardName
   * @return modelCardName
   */
  @javax.annotation.Nonnull
  public String getModelCardName() {
    return modelCardName;
  }

  public void setModelCardName(String modelCardName) {
    this.modelCardName = modelCardName;
  }


  public DescribeModelCardExportJobResponse modelCardVersion(Integer modelCardVersion) {
    this.modelCardVersion = modelCardVersion;
    return this;
  }

  /**
   * Get modelCardVersion
   * @return modelCardVersion
   */
  @javax.annotation.Nonnull
  public Integer getModelCardVersion() {
    return modelCardVersion;
  }

  public void setModelCardVersion(Integer modelCardVersion) {
    this.modelCardVersion = modelCardVersion;
  }


  public DescribeModelCardExportJobResponse outputConfig(DescribeModelCardExportJobResponseOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nonnull
  public DescribeModelCardExportJobResponseOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(DescribeModelCardExportJobResponseOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public DescribeModelCardExportJobResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeModelCardExportJobResponse lastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

  /**
   * Get lastModifiedAt
   * @return lastModifiedAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedAt() {
    return lastModifiedAt;
  }

  public void setLastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }


  public DescribeModelCardExportJobResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeModelCardExportJobResponse exportArtifacts(DescribeModelCardExportJobResponseExportArtifacts exportArtifacts) {
    this.exportArtifacts = exportArtifacts;
    return this;
  }

  /**
   * Get exportArtifacts
   * @return exportArtifacts
   */
  @javax.annotation.Nullable
  public DescribeModelCardExportJobResponseExportArtifacts getExportArtifacts() {
    return exportArtifacts;
  }

  public void setExportArtifacts(DescribeModelCardExportJobResponseExportArtifacts exportArtifacts) {
    this.exportArtifacts = exportArtifacts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeModelCardExportJobResponse describeModelCardExportJobResponse = (DescribeModelCardExportJobResponse) o;
    return Objects.equals(this.modelCardExportJobName, describeModelCardExportJobResponse.modelCardExportJobName) &&
        Objects.equals(this.modelCardExportJobArn, describeModelCardExportJobResponse.modelCardExportJobArn) &&
        Objects.equals(this.status, describeModelCardExportJobResponse.status) &&
        Objects.equals(this.modelCardName, describeModelCardExportJobResponse.modelCardName) &&
        Objects.equals(this.modelCardVersion, describeModelCardExportJobResponse.modelCardVersion) &&
        Objects.equals(this.outputConfig, describeModelCardExportJobResponse.outputConfig) &&
        Objects.equals(this.createdAt, describeModelCardExportJobResponse.createdAt) &&
        Objects.equals(this.lastModifiedAt, describeModelCardExportJobResponse.lastModifiedAt) &&
        Objects.equals(this.failureReason, describeModelCardExportJobResponse.failureReason) &&
        Objects.equals(this.exportArtifacts, describeModelCardExportJobResponse.exportArtifacts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelCardExportJobName, modelCardExportJobArn, status, modelCardName, modelCardVersion, outputConfig, createdAt, lastModifiedAt, failureReason, exportArtifacts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeModelCardExportJobResponse {\n");
    sb.append("    modelCardExportJobName: ").append(toIndentedString(modelCardExportJobName)).append("\n");
    sb.append("    modelCardExportJobArn: ").append(toIndentedString(modelCardExportJobArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    modelCardName: ").append(toIndentedString(modelCardName)).append("\n");
    sb.append("    modelCardVersion: ").append(toIndentedString(modelCardVersion)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    exportArtifacts: ").append(toIndentedString(exportArtifacts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelCardExportJobName");
    openapiFields.add("ModelCardExportJobArn");
    openapiFields.add("Status");
    openapiFields.add("ModelCardName");
    openapiFields.add("ModelCardVersion");
    openapiFields.add("OutputConfig");
    openapiFields.add("CreatedAt");
    openapiFields.add("LastModifiedAt");
    openapiFields.add("FailureReason");
    openapiFields.add("ExportArtifacts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ModelCardExportJobName");
    openapiRequiredFields.add("ModelCardExportJobArn");
    openapiRequiredFields.add("Status");
    openapiRequiredFields.add("ModelCardName");
    openapiRequiredFields.add("ModelCardVersion");
    openapiRequiredFields.add("OutputConfig");
    openapiRequiredFields.add("CreatedAt");
    openapiRequiredFields.add("LastModifiedAt");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeModelCardExportJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeModelCardExportJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeModelCardExportJobResponse is not found in the empty JSON string", DescribeModelCardExportJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeModelCardExportJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeModelCardExportJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeModelCardExportJobResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ModelCardExportJobName`
      String.validateJsonElement(jsonObj.get("ModelCardExportJobName"));
      // validate the required field `ModelCardExportJobArn`
      String.validateJsonElement(jsonObj.get("ModelCardExportJobArn"));
      // validate the required field `Status`
      ModelCardExportJobStatus.validateJsonElement(jsonObj.get("Status"));
      // validate the required field `ModelCardName`
      String.validateJsonElement(jsonObj.get("ModelCardName"));
      // validate the required field `ModelCardVersion`
      Integer.validateJsonElement(jsonObj.get("ModelCardVersion"));
      // validate the required field `OutputConfig`
      DescribeModelCardExportJobResponseOutputConfig.validateJsonElement(jsonObj.get("OutputConfig"));
      // validate the required field `CreatedAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      // validate the required field `LastModifiedAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedAt"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `ExportArtifacts`
      if (jsonObj.get("ExportArtifacts") != null && !jsonObj.get("ExportArtifacts").isJsonNull()) {
        DescribeModelCardExportJobResponseExportArtifacts.validateJsonElement(jsonObj.get("ExportArtifacts"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeModelCardExportJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeModelCardExportJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeModelCardExportJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeModelCardExportJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeModelCardExportJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeModelCardExportJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeModelCardExportJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeModelCardExportJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeModelCardExportJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeModelCardExportJobResponse
   */
  public static DescribeModelCardExportJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeModelCardExportJobResponse.class);
  }

  /**
   * Convert an instance of DescribeModelCardExportJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

