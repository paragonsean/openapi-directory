/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CheckpointConfig;
import org.openapitools.client.model.CreateTrainingJobRequestRetryStrategy;
import org.openapitools.client.model.CreateTrainingJobRequestStoppingCondition;
import org.openapitools.client.model.DebugHookConfig;
import org.openapitools.client.model.DescribeTrainingJobResponseVpcConfig;
import org.openapitools.client.model.ExperimentConfig;
import org.openapitools.client.model.ProfilerConfig;
import org.openapitools.client.model.SecondaryStatus;
import org.openapitools.client.model.TensorBoardOutputConfig;
import org.openapitools.client.model.TrainingJobAlgorithmSpecification;
import org.openapitools.client.model.TrainingJobModelArtifacts;
import org.openapitools.client.model.TrainingJobOutputDataConfig;
import org.openapitools.client.model.TrainingJobResourceConfig;
import org.openapitools.client.model.TrainingJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains information about a training job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TrainingJob {
  public static final String SERIALIZED_NAME_TRAINING_JOB_NAME = "TrainingJobName";
  @SerializedName(SERIALIZED_NAME_TRAINING_JOB_NAME)
  private String trainingJobName;

  public static final String SERIALIZED_NAME_TRAINING_JOB_ARN = "TrainingJobArn";
  @SerializedName(SERIALIZED_NAME_TRAINING_JOB_ARN)
  private String trainingJobArn;

  public static final String SERIALIZED_NAME_TUNING_JOB_ARN = "TuningJobArn";
  @SerializedName(SERIALIZED_NAME_TUNING_JOB_ARN)
  private String tuningJobArn;

  public static final String SERIALIZED_NAME_LABELING_JOB_ARN = "LabelingJobArn";
  @SerializedName(SERIALIZED_NAME_LABELING_JOB_ARN)
  private String labelingJobArn;

  public static final String SERIALIZED_NAME_AUTO_M_L_JOB_ARN = "AutoMLJobArn";
  @SerializedName(SERIALIZED_NAME_AUTO_M_L_JOB_ARN)
  private String autoMLJobArn;

  public static final String SERIALIZED_NAME_MODEL_ARTIFACTS = "ModelArtifacts";
  @SerializedName(SERIALIZED_NAME_MODEL_ARTIFACTS)
  private TrainingJobModelArtifacts modelArtifacts;

  public static final String SERIALIZED_NAME_TRAINING_JOB_STATUS = "TrainingJobStatus";
  @SerializedName(SERIALIZED_NAME_TRAINING_JOB_STATUS)
  private TrainingJobStatus trainingJobStatus;

  public static final String SERIALIZED_NAME_SECONDARY_STATUS = "SecondaryStatus";
  @SerializedName(SERIALIZED_NAME_SECONDARY_STATUS)
  private SecondaryStatus secondaryStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_HYPER_PARAMETERS = "HyperParameters";
  @SerializedName(SERIALIZED_NAME_HYPER_PARAMETERS)
  private Map hyperParameters;

  public static final String SERIALIZED_NAME_ALGORITHM_SPECIFICATION = "AlgorithmSpecification";
  @SerializedName(SERIALIZED_NAME_ALGORITHM_SPECIFICATION)
  private TrainingJobAlgorithmSpecification algorithmSpecification;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_INPUT_DATA_CONFIG = "InputDataConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_CONFIG)
  private List inputDataConfig;

  public static final String SERIALIZED_NAME_OUTPUT_DATA_CONFIG = "OutputDataConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_DATA_CONFIG)
  private TrainingJobOutputDataConfig outputDataConfig;

  public static final String SERIALIZED_NAME_RESOURCE_CONFIG = "ResourceConfig";
  @SerializedName(SERIALIZED_NAME_RESOURCE_CONFIG)
  private TrainingJobResourceConfig resourceConfig;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "VpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private DescribeTrainingJobResponseVpcConfig vpcConfig;

  public static final String SERIALIZED_NAME_STOPPING_CONDITION = "StoppingCondition";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITION)
  private CreateTrainingJobRequestStoppingCondition stoppingCondition;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_TRAINING_START_TIME = "TrainingStartTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_START_TIME)
  private OffsetDateTime trainingStartTime;

  public static final String SERIALIZED_NAME_TRAINING_END_TIME = "TrainingEndTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_END_TIME)
  private OffsetDateTime trainingEndTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_SECONDARY_STATUS_TRANSITIONS = "SecondaryStatusTransitions";
  @SerializedName(SERIALIZED_NAME_SECONDARY_STATUS_TRANSITIONS)
  private List secondaryStatusTransitions;

  public static final String SERIALIZED_NAME_FINAL_METRIC_DATA_LIST = "FinalMetricDataList";
  @SerializedName(SERIALIZED_NAME_FINAL_METRIC_DATA_LIST)
  private List finalMetricDataList;

  public static final String SERIALIZED_NAME_ENABLE_NETWORK_ISOLATION = "EnableNetworkIsolation";
  @SerializedName(SERIALIZED_NAME_ENABLE_NETWORK_ISOLATION)
  private Boolean enableNetworkIsolation;

  public static final String SERIALIZED_NAME_ENABLE_INTER_CONTAINER_TRAFFIC_ENCRYPTION = "EnableInterContainerTrafficEncryption";
  @SerializedName(SERIALIZED_NAME_ENABLE_INTER_CONTAINER_TRAFFIC_ENCRYPTION)
  private Boolean enableInterContainerTrafficEncryption;

  public static final String SERIALIZED_NAME_ENABLE_MANAGED_SPOT_TRAINING = "EnableManagedSpotTraining";
  @SerializedName(SERIALIZED_NAME_ENABLE_MANAGED_SPOT_TRAINING)
  private Boolean enableManagedSpotTraining;

  public static final String SERIALIZED_NAME_CHECKPOINT_CONFIG = "CheckpointConfig";
  @SerializedName(SERIALIZED_NAME_CHECKPOINT_CONFIG)
  private CheckpointConfig checkpointConfig;

  public static final String SERIALIZED_NAME_TRAINING_TIME_IN_SECONDS = "TrainingTimeInSeconds";
  @SerializedName(SERIALIZED_NAME_TRAINING_TIME_IN_SECONDS)
  private Integer trainingTimeInSeconds;

  public static final String SERIALIZED_NAME_BILLABLE_TIME_IN_SECONDS = "BillableTimeInSeconds";
  @SerializedName(SERIALIZED_NAME_BILLABLE_TIME_IN_SECONDS)
  private Integer billableTimeInSeconds;

  public static final String SERIALIZED_NAME_DEBUG_HOOK_CONFIG = "DebugHookConfig";
  @SerializedName(SERIALIZED_NAME_DEBUG_HOOK_CONFIG)
  private DebugHookConfig debugHookConfig;

  public static final String SERIALIZED_NAME_EXPERIMENT_CONFIG = "ExperimentConfig";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_CONFIG)
  private ExperimentConfig experimentConfig;

  public static final String SERIALIZED_NAME_DEBUG_RULE_CONFIGURATIONS = "DebugRuleConfigurations";
  @SerializedName(SERIALIZED_NAME_DEBUG_RULE_CONFIGURATIONS)
  private List debugRuleConfigurations;

  public static final String SERIALIZED_NAME_TENSOR_BOARD_OUTPUT_CONFIG = "TensorBoardOutputConfig";
  @SerializedName(SERIALIZED_NAME_TENSOR_BOARD_OUTPUT_CONFIG)
  private TensorBoardOutputConfig tensorBoardOutputConfig;

  public static final String SERIALIZED_NAME_DEBUG_RULE_EVALUATION_STATUSES = "DebugRuleEvaluationStatuses";
  @SerializedName(SERIALIZED_NAME_DEBUG_RULE_EVALUATION_STATUSES)
  private List debugRuleEvaluationStatuses;

  public static final String SERIALIZED_NAME_PROFILER_CONFIG = "ProfilerConfig";
  @SerializedName(SERIALIZED_NAME_PROFILER_CONFIG)
  private ProfilerConfig profilerConfig;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private Map environment;

  public static final String SERIALIZED_NAME_RETRY_STRATEGY = "RetryStrategy";
  @SerializedName(SERIALIZED_NAME_RETRY_STRATEGY)
  private CreateTrainingJobRequestRetryStrategy retryStrategy;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public TrainingJob() {
  }

  public TrainingJob trainingJobName(String trainingJobName) {
    this.trainingJobName = trainingJobName;
    return this;
  }

  /**
   * Get trainingJobName
   * @return trainingJobName
   */
  @javax.annotation.Nullable
  public String getTrainingJobName() {
    return trainingJobName;
  }

  public void setTrainingJobName(String trainingJobName) {
    this.trainingJobName = trainingJobName;
  }


  public TrainingJob trainingJobArn(String trainingJobArn) {
    this.trainingJobArn = trainingJobArn;
    return this;
  }

  /**
   * Get trainingJobArn
   * @return trainingJobArn
   */
  @javax.annotation.Nullable
  public String getTrainingJobArn() {
    return trainingJobArn;
  }

  public void setTrainingJobArn(String trainingJobArn) {
    this.trainingJobArn = trainingJobArn;
  }


  public TrainingJob tuningJobArn(String tuningJobArn) {
    this.tuningJobArn = tuningJobArn;
    return this;
  }

  /**
   * Get tuningJobArn
   * @return tuningJobArn
   */
  @javax.annotation.Nullable
  public String getTuningJobArn() {
    return tuningJobArn;
  }

  public void setTuningJobArn(String tuningJobArn) {
    this.tuningJobArn = tuningJobArn;
  }


  public TrainingJob labelingJobArn(String labelingJobArn) {
    this.labelingJobArn = labelingJobArn;
    return this;
  }

  /**
   * Get labelingJobArn
   * @return labelingJobArn
   */
  @javax.annotation.Nullable
  public String getLabelingJobArn() {
    return labelingJobArn;
  }

  public void setLabelingJobArn(String labelingJobArn) {
    this.labelingJobArn = labelingJobArn;
  }


  public TrainingJob autoMLJobArn(String autoMLJobArn) {
    this.autoMLJobArn = autoMLJobArn;
    return this;
  }

  /**
   * Get autoMLJobArn
   * @return autoMLJobArn
   */
  @javax.annotation.Nullable
  public String getAutoMLJobArn() {
    return autoMLJobArn;
  }

  public void setAutoMLJobArn(String autoMLJobArn) {
    this.autoMLJobArn = autoMLJobArn;
  }


  public TrainingJob modelArtifacts(TrainingJobModelArtifacts modelArtifacts) {
    this.modelArtifacts = modelArtifacts;
    return this;
  }

  /**
   * Get modelArtifacts
   * @return modelArtifacts
   */
  @javax.annotation.Nullable
  public TrainingJobModelArtifacts getModelArtifacts() {
    return modelArtifacts;
  }

  public void setModelArtifacts(TrainingJobModelArtifacts modelArtifacts) {
    this.modelArtifacts = modelArtifacts;
  }


  public TrainingJob trainingJobStatus(TrainingJobStatus trainingJobStatus) {
    this.trainingJobStatus = trainingJobStatus;
    return this;
  }

  /**
   * Get trainingJobStatus
   * @return trainingJobStatus
   */
  @javax.annotation.Nullable
  public TrainingJobStatus getTrainingJobStatus() {
    return trainingJobStatus;
  }

  public void setTrainingJobStatus(TrainingJobStatus trainingJobStatus) {
    this.trainingJobStatus = trainingJobStatus;
  }


  public TrainingJob secondaryStatus(SecondaryStatus secondaryStatus) {
    this.secondaryStatus = secondaryStatus;
    return this;
  }

  /**
   * Get secondaryStatus
   * @return secondaryStatus
   */
  @javax.annotation.Nullable
  public SecondaryStatus getSecondaryStatus() {
    return secondaryStatus;
  }

  public void setSecondaryStatus(SecondaryStatus secondaryStatus) {
    this.secondaryStatus = secondaryStatus;
  }


  public TrainingJob failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public TrainingJob hyperParameters(Map hyperParameters) {
    this.hyperParameters = hyperParameters;
    return this;
  }

  /**
   * Get hyperParameters
   * @return hyperParameters
   */
  @javax.annotation.Nullable
  public Map getHyperParameters() {
    return hyperParameters;
  }

  public void setHyperParameters(Map hyperParameters) {
    this.hyperParameters = hyperParameters;
  }


  public TrainingJob algorithmSpecification(TrainingJobAlgorithmSpecification algorithmSpecification) {
    this.algorithmSpecification = algorithmSpecification;
    return this;
  }

  /**
   * Get algorithmSpecification
   * @return algorithmSpecification
   */
  @javax.annotation.Nullable
  public TrainingJobAlgorithmSpecification getAlgorithmSpecification() {
    return algorithmSpecification;
  }

  public void setAlgorithmSpecification(TrainingJobAlgorithmSpecification algorithmSpecification) {
    this.algorithmSpecification = algorithmSpecification;
  }


  public TrainingJob roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public TrainingJob inputDataConfig(List inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
    return this;
  }

  /**
   * Get inputDataConfig
   * @return inputDataConfig
   */
  @javax.annotation.Nullable
  public List getInputDataConfig() {
    return inputDataConfig;
  }

  public void setInputDataConfig(List inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
  }


  public TrainingJob outputDataConfig(TrainingJobOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
    return this;
  }

  /**
   * Get outputDataConfig
   * @return outputDataConfig
   */
  @javax.annotation.Nullable
  public TrainingJobOutputDataConfig getOutputDataConfig() {
    return outputDataConfig;
  }

  public void setOutputDataConfig(TrainingJobOutputDataConfig outputDataConfig) {
    this.outputDataConfig = outputDataConfig;
  }


  public TrainingJob resourceConfig(TrainingJobResourceConfig resourceConfig) {
    this.resourceConfig = resourceConfig;
    return this;
  }

  /**
   * Get resourceConfig
   * @return resourceConfig
   */
  @javax.annotation.Nullable
  public TrainingJobResourceConfig getResourceConfig() {
    return resourceConfig;
  }

  public void setResourceConfig(TrainingJobResourceConfig resourceConfig) {
    this.resourceConfig = resourceConfig;
  }


  public TrainingJob vpcConfig(DescribeTrainingJobResponseVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public DescribeTrainingJobResponseVpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(DescribeTrainingJobResponseVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }


  public TrainingJob stoppingCondition(CreateTrainingJobRequestStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
    return this;
  }

  /**
   * Get stoppingCondition
   * @return stoppingCondition
   */
  @javax.annotation.Nullable
  public CreateTrainingJobRequestStoppingCondition getStoppingCondition() {
    return stoppingCondition;
  }

  public void setStoppingCondition(CreateTrainingJobRequestStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
  }


  public TrainingJob creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public TrainingJob trainingStartTime(OffsetDateTime trainingStartTime) {
    this.trainingStartTime = trainingStartTime;
    return this;
  }

  /**
   * Get trainingStartTime
   * @return trainingStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingStartTime() {
    return trainingStartTime;
  }

  public void setTrainingStartTime(OffsetDateTime trainingStartTime) {
    this.trainingStartTime = trainingStartTime;
  }


  public TrainingJob trainingEndTime(OffsetDateTime trainingEndTime) {
    this.trainingEndTime = trainingEndTime;
    return this;
  }

  /**
   * Get trainingEndTime
   * @return trainingEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingEndTime() {
    return trainingEndTime;
  }

  public void setTrainingEndTime(OffsetDateTime trainingEndTime) {
    this.trainingEndTime = trainingEndTime;
  }


  public TrainingJob lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public TrainingJob secondaryStatusTransitions(List secondaryStatusTransitions) {
    this.secondaryStatusTransitions = secondaryStatusTransitions;
    return this;
  }

  /**
   * Get secondaryStatusTransitions
   * @return secondaryStatusTransitions
   */
  @javax.annotation.Nullable
  public List getSecondaryStatusTransitions() {
    return secondaryStatusTransitions;
  }

  public void setSecondaryStatusTransitions(List secondaryStatusTransitions) {
    this.secondaryStatusTransitions = secondaryStatusTransitions;
  }


  public TrainingJob finalMetricDataList(List finalMetricDataList) {
    this.finalMetricDataList = finalMetricDataList;
    return this;
  }

  /**
   * Get finalMetricDataList
   * @return finalMetricDataList
   */
  @javax.annotation.Nullable
  public List getFinalMetricDataList() {
    return finalMetricDataList;
  }

  public void setFinalMetricDataList(List finalMetricDataList) {
    this.finalMetricDataList = finalMetricDataList;
  }


  public TrainingJob enableNetworkIsolation(Boolean enableNetworkIsolation) {
    this.enableNetworkIsolation = enableNetworkIsolation;
    return this;
  }

  /**
   * Get enableNetworkIsolation
   * @return enableNetworkIsolation
   */
  @javax.annotation.Nullable
  public Boolean getEnableNetworkIsolation() {
    return enableNetworkIsolation;
  }

  public void setEnableNetworkIsolation(Boolean enableNetworkIsolation) {
    this.enableNetworkIsolation = enableNetworkIsolation;
  }


  public TrainingJob enableInterContainerTrafficEncryption(Boolean enableInterContainerTrafficEncryption) {
    this.enableInterContainerTrafficEncryption = enableInterContainerTrafficEncryption;
    return this;
  }

  /**
   * Get enableInterContainerTrafficEncryption
   * @return enableInterContainerTrafficEncryption
   */
  @javax.annotation.Nullable
  public Boolean getEnableInterContainerTrafficEncryption() {
    return enableInterContainerTrafficEncryption;
  }

  public void setEnableInterContainerTrafficEncryption(Boolean enableInterContainerTrafficEncryption) {
    this.enableInterContainerTrafficEncryption = enableInterContainerTrafficEncryption;
  }


  public TrainingJob enableManagedSpotTraining(Boolean enableManagedSpotTraining) {
    this.enableManagedSpotTraining = enableManagedSpotTraining;
    return this;
  }

  /**
   * Get enableManagedSpotTraining
   * @return enableManagedSpotTraining
   */
  @javax.annotation.Nullable
  public Boolean getEnableManagedSpotTraining() {
    return enableManagedSpotTraining;
  }

  public void setEnableManagedSpotTraining(Boolean enableManagedSpotTraining) {
    this.enableManagedSpotTraining = enableManagedSpotTraining;
  }


  public TrainingJob checkpointConfig(CheckpointConfig checkpointConfig) {
    this.checkpointConfig = checkpointConfig;
    return this;
  }

  /**
   * Get checkpointConfig
   * @return checkpointConfig
   */
  @javax.annotation.Nullable
  public CheckpointConfig getCheckpointConfig() {
    return checkpointConfig;
  }

  public void setCheckpointConfig(CheckpointConfig checkpointConfig) {
    this.checkpointConfig = checkpointConfig;
  }


  public TrainingJob trainingTimeInSeconds(Integer trainingTimeInSeconds) {
    this.trainingTimeInSeconds = trainingTimeInSeconds;
    return this;
  }

  /**
   * Get trainingTimeInSeconds
   * @return trainingTimeInSeconds
   */
  @javax.annotation.Nullable
  public Integer getTrainingTimeInSeconds() {
    return trainingTimeInSeconds;
  }

  public void setTrainingTimeInSeconds(Integer trainingTimeInSeconds) {
    this.trainingTimeInSeconds = trainingTimeInSeconds;
  }


  public TrainingJob billableTimeInSeconds(Integer billableTimeInSeconds) {
    this.billableTimeInSeconds = billableTimeInSeconds;
    return this;
  }

  /**
   * Get billableTimeInSeconds
   * @return billableTimeInSeconds
   */
  @javax.annotation.Nullable
  public Integer getBillableTimeInSeconds() {
    return billableTimeInSeconds;
  }

  public void setBillableTimeInSeconds(Integer billableTimeInSeconds) {
    this.billableTimeInSeconds = billableTimeInSeconds;
  }


  public TrainingJob debugHookConfig(DebugHookConfig debugHookConfig) {
    this.debugHookConfig = debugHookConfig;
    return this;
  }

  /**
   * Get debugHookConfig
   * @return debugHookConfig
   */
  @javax.annotation.Nullable
  public DebugHookConfig getDebugHookConfig() {
    return debugHookConfig;
  }

  public void setDebugHookConfig(DebugHookConfig debugHookConfig) {
    this.debugHookConfig = debugHookConfig;
  }


  public TrainingJob experimentConfig(ExperimentConfig experimentConfig) {
    this.experimentConfig = experimentConfig;
    return this;
  }

  /**
   * Get experimentConfig
   * @return experimentConfig
   */
  @javax.annotation.Nullable
  public ExperimentConfig getExperimentConfig() {
    return experimentConfig;
  }

  public void setExperimentConfig(ExperimentConfig experimentConfig) {
    this.experimentConfig = experimentConfig;
  }


  public TrainingJob debugRuleConfigurations(List debugRuleConfigurations) {
    this.debugRuleConfigurations = debugRuleConfigurations;
    return this;
  }

  /**
   * Get debugRuleConfigurations
   * @return debugRuleConfigurations
   */
  @javax.annotation.Nullable
  public List getDebugRuleConfigurations() {
    return debugRuleConfigurations;
  }

  public void setDebugRuleConfigurations(List debugRuleConfigurations) {
    this.debugRuleConfigurations = debugRuleConfigurations;
  }


  public TrainingJob tensorBoardOutputConfig(TensorBoardOutputConfig tensorBoardOutputConfig) {
    this.tensorBoardOutputConfig = tensorBoardOutputConfig;
    return this;
  }

  /**
   * Get tensorBoardOutputConfig
   * @return tensorBoardOutputConfig
   */
  @javax.annotation.Nullable
  public TensorBoardOutputConfig getTensorBoardOutputConfig() {
    return tensorBoardOutputConfig;
  }

  public void setTensorBoardOutputConfig(TensorBoardOutputConfig tensorBoardOutputConfig) {
    this.tensorBoardOutputConfig = tensorBoardOutputConfig;
  }


  public TrainingJob debugRuleEvaluationStatuses(List debugRuleEvaluationStatuses) {
    this.debugRuleEvaluationStatuses = debugRuleEvaluationStatuses;
    return this;
  }

  /**
   * Get debugRuleEvaluationStatuses
   * @return debugRuleEvaluationStatuses
   */
  @javax.annotation.Nullable
  public List getDebugRuleEvaluationStatuses() {
    return debugRuleEvaluationStatuses;
  }

  public void setDebugRuleEvaluationStatuses(List debugRuleEvaluationStatuses) {
    this.debugRuleEvaluationStatuses = debugRuleEvaluationStatuses;
  }


  public TrainingJob profilerConfig(ProfilerConfig profilerConfig) {
    this.profilerConfig = profilerConfig;
    return this;
  }

  /**
   * Get profilerConfig
   * @return profilerConfig
   */
  @javax.annotation.Nullable
  public ProfilerConfig getProfilerConfig() {
    return profilerConfig;
  }

  public void setProfilerConfig(ProfilerConfig profilerConfig) {
    this.profilerConfig = profilerConfig;
  }


  public TrainingJob environment(Map environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public Map getEnvironment() {
    return environment;
  }

  public void setEnvironment(Map environment) {
    this.environment = environment;
  }


  public TrainingJob retryStrategy(CreateTrainingJobRequestRetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
    return this;
  }

  /**
   * Get retryStrategy
   * @return retryStrategy
   */
  @javax.annotation.Nullable
  public CreateTrainingJobRequestRetryStrategy getRetryStrategy() {
    return retryStrategy;
  }

  public void setRetryStrategy(CreateTrainingJobRequestRetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
  }


  public TrainingJob tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrainingJob trainingJob = (TrainingJob) o;
    return Objects.equals(this.trainingJobName, trainingJob.trainingJobName) &&
        Objects.equals(this.trainingJobArn, trainingJob.trainingJobArn) &&
        Objects.equals(this.tuningJobArn, trainingJob.tuningJobArn) &&
        Objects.equals(this.labelingJobArn, trainingJob.labelingJobArn) &&
        Objects.equals(this.autoMLJobArn, trainingJob.autoMLJobArn) &&
        Objects.equals(this.modelArtifacts, trainingJob.modelArtifacts) &&
        Objects.equals(this.trainingJobStatus, trainingJob.trainingJobStatus) &&
        Objects.equals(this.secondaryStatus, trainingJob.secondaryStatus) &&
        Objects.equals(this.failureReason, trainingJob.failureReason) &&
        Objects.equals(this.hyperParameters, trainingJob.hyperParameters) &&
        Objects.equals(this.algorithmSpecification, trainingJob.algorithmSpecification) &&
        Objects.equals(this.roleArn, trainingJob.roleArn) &&
        Objects.equals(this.inputDataConfig, trainingJob.inputDataConfig) &&
        Objects.equals(this.outputDataConfig, trainingJob.outputDataConfig) &&
        Objects.equals(this.resourceConfig, trainingJob.resourceConfig) &&
        Objects.equals(this.vpcConfig, trainingJob.vpcConfig) &&
        Objects.equals(this.stoppingCondition, trainingJob.stoppingCondition) &&
        Objects.equals(this.creationTime, trainingJob.creationTime) &&
        Objects.equals(this.trainingStartTime, trainingJob.trainingStartTime) &&
        Objects.equals(this.trainingEndTime, trainingJob.trainingEndTime) &&
        Objects.equals(this.lastModifiedTime, trainingJob.lastModifiedTime) &&
        Objects.equals(this.secondaryStatusTransitions, trainingJob.secondaryStatusTransitions) &&
        Objects.equals(this.finalMetricDataList, trainingJob.finalMetricDataList) &&
        Objects.equals(this.enableNetworkIsolation, trainingJob.enableNetworkIsolation) &&
        Objects.equals(this.enableInterContainerTrafficEncryption, trainingJob.enableInterContainerTrafficEncryption) &&
        Objects.equals(this.enableManagedSpotTraining, trainingJob.enableManagedSpotTraining) &&
        Objects.equals(this.checkpointConfig, trainingJob.checkpointConfig) &&
        Objects.equals(this.trainingTimeInSeconds, trainingJob.trainingTimeInSeconds) &&
        Objects.equals(this.billableTimeInSeconds, trainingJob.billableTimeInSeconds) &&
        Objects.equals(this.debugHookConfig, trainingJob.debugHookConfig) &&
        Objects.equals(this.experimentConfig, trainingJob.experimentConfig) &&
        Objects.equals(this.debugRuleConfigurations, trainingJob.debugRuleConfigurations) &&
        Objects.equals(this.tensorBoardOutputConfig, trainingJob.tensorBoardOutputConfig) &&
        Objects.equals(this.debugRuleEvaluationStatuses, trainingJob.debugRuleEvaluationStatuses) &&
        Objects.equals(this.profilerConfig, trainingJob.profilerConfig) &&
        Objects.equals(this.environment, trainingJob.environment) &&
        Objects.equals(this.retryStrategy, trainingJob.retryStrategy) &&
        Objects.equals(this.tags, trainingJob.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainingJobName, trainingJobArn, tuningJobArn, labelingJobArn, autoMLJobArn, modelArtifacts, trainingJobStatus, secondaryStatus, failureReason, hyperParameters, algorithmSpecification, roleArn, inputDataConfig, outputDataConfig, resourceConfig, vpcConfig, stoppingCondition, creationTime, trainingStartTime, trainingEndTime, lastModifiedTime, secondaryStatusTransitions, finalMetricDataList, enableNetworkIsolation, enableInterContainerTrafficEncryption, enableManagedSpotTraining, checkpointConfig, trainingTimeInSeconds, billableTimeInSeconds, debugHookConfig, experimentConfig, debugRuleConfigurations, tensorBoardOutputConfig, debugRuleEvaluationStatuses, profilerConfig, environment, retryStrategy, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrainingJob {\n");
    sb.append("    trainingJobName: ").append(toIndentedString(trainingJobName)).append("\n");
    sb.append("    trainingJobArn: ").append(toIndentedString(trainingJobArn)).append("\n");
    sb.append("    tuningJobArn: ").append(toIndentedString(tuningJobArn)).append("\n");
    sb.append("    labelingJobArn: ").append(toIndentedString(labelingJobArn)).append("\n");
    sb.append("    autoMLJobArn: ").append(toIndentedString(autoMLJobArn)).append("\n");
    sb.append("    modelArtifacts: ").append(toIndentedString(modelArtifacts)).append("\n");
    sb.append("    trainingJobStatus: ").append(toIndentedString(trainingJobStatus)).append("\n");
    sb.append("    secondaryStatus: ").append(toIndentedString(secondaryStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    hyperParameters: ").append(toIndentedString(hyperParameters)).append("\n");
    sb.append("    algorithmSpecification: ").append(toIndentedString(algorithmSpecification)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    inputDataConfig: ").append(toIndentedString(inputDataConfig)).append("\n");
    sb.append("    outputDataConfig: ").append(toIndentedString(outputDataConfig)).append("\n");
    sb.append("    resourceConfig: ").append(toIndentedString(resourceConfig)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("    stoppingCondition: ").append(toIndentedString(stoppingCondition)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    trainingStartTime: ").append(toIndentedString(trainingStartTime)).append("\n");
    sb.append("    trainingEndTime: ").append(toIndentedString(trainingEndTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    secondaryStatusTransitions: ").append(toIndentedString(secondaryStatusTransitions)).append("\n");
    sb.append("    finalMetricDataList: ").append(toIndentedString(finalMetricDataList)).append("\n");
    sb.append("    enableNetworkIsolation: ").append(toIndentedString(enableNetworkIsolation)).append("\n");
    sb.append("    enableInterContainerTrafficEncryption: ").append(toIndentedString(enableInterContainerTrafficEncryption)).append("\n");
    sb.append("    enableManagedSpotTraining: ").append(toIndentedString(enableManagedSpotTraining)).append("\n");
    sb.append("    checkpointConfig: ").append(toIndentedString(checkpointConfig)).append("\n");
    sb.append("    trainingTimeInSeconds: ").append(toIndentedString(trainingTimeInSeconds)).append("\n");
    sb.append("    billableTimeInSeconds: ").append(toIndentedString(billableTimeInSeconds)).append("\n");
    sb.append("    debugHookConfig: ").append(toIndentedString(debugHookConfig)).append("\n");
    sb.append("    experimentConfig: ").append(toIndentedString(experimentConfig)).append("\n");
    sb.append("    debugRuleConfigurations: ").append(toIndentedString(debugRuleConfigurations)).append("\n");
    sb.append("    tensorBoardOutputConfig: ").append(toIndentedString(tensorBoardOutputConfig)).append("\n");
    sb.append("    debugRuleEvaluationStatuses: ").append(toIndentedString(debugRuleEvaluationStatuses)).append("\n");
    sb.append("    profilerConfig: ").append(toIndentedString(profilerConfig)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    retryStrategy: ").append(toIndentedString(retryStrategy)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrainingJobName");
    openapiFields.add("TrainingJobArn");
    openapiFields.add("TuningJobArn");
    openapiFields.add("LabelingJobArn");
    openapiFields.add("AutoMLJobArn");
    openapiFields.add("ModelArtifacts");
    openapiFields.add("TrainingJobStatus");
    openapiFields.add("SecondaryStatus");
    openapiFields.add("FailureReason");
    openapiFields.add("HyperParameters");
    openapiFields.add("AlgorithmSpecification");
    openapiFields.add("RoleArn");
    openapiFields.add("InputDataConfig");
    openapiFields.add("OutputDataConfig");
    openapiFields.add("ResourceConfig");
    openapiFields.add("VpcConfig");
    openapiFields.add("StoppingCondition");
    openapiFields.add("CreationTime");
    openapiFields.add("TrainingStartTime");
    openapiFields.add("TrainingEndTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("SecondaryStatusTransitions");
    openapiFields.add("FinalMetricDataList");
    openapiFields.add("EnableNetworkIsolation");
    openapiFields.add("EnableInterContainerTrafficEncryption");
    openapiFields.add("EnableManagedSpotTraining");
    openapiFields.add("CheckpointConfig");
    openapiFields.add("TrainingTimeInSeconds");
    openapiFields.add("BillableTimeInSeconds");
    openapiFields.add("DebugHookConfig");
    openapiFields.add("ExperimentConfig");
    openapiFields.add("DebugRuleConfigurations");
    openapiFields.add("TensorBoardOutputConfig");
    openapiFields.add("DebugRuleEvaluationStatuses");
    openapiFields.add("ProfilerConfig");
    openapiFields.add("Environment");
    openapiFields.add("RetryStrategy");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TrainingJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TrainingJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TrainingJob is not found in the empty JSON string", TrainingJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TrainingJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TrainingJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TrainingJobName`
      if (jsonObj.get("TrainingJobName") != null && !jsonObj.get("TrainingJobName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrainingJobName"));
      }
      // validate the optional field `TrainingJobArn`
      if (jsonObj.get("TrainingJobArn") != null && !jsonObj.get("TrainingJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrainingJobArn"));
      }
      // validate the optional field `TuningJobArn`
      if (jsonObj.get("TuningJobArn") != null && !jsonObj.get("TuningJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TuningJobArn"));
      }
      // validate the optional field `LabelingJobArn`
      if (jsonObj.get("LabelingJobArn") != null && !jsonObj.get("LabelingJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LabelingJobArn"));
      }
      // validate the optional field `AutoMLJobArn`
      if (jsonObj.get("AutoMLJobArn") != null && !jsonObj.get("AutoMLJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AutoMLJobArn"));
      }
      // validate the optional field `ModelArtifacts`
      if (jsonObj.get("ModelArtifacts") != null && !jsonObj.get("ModelArtifacts").isJsonNull()) {
        TrainingJobModelArtifacts.validateJsonElement(jsonObj.get("ModelArtifacts"));
      }
      // validate the optional field `TrainingJobStatus`
      if (jsonObj.get("TrainingJobStatus") != null && !jsonObj.get("TrainingJobStatus").isJsonNull()) {
        TrainingJobStatus.validateJsonElement(jsonObj.get("TrainingJobStatus"));
      }
      // validate the optional field `SecondaryStatus`
      if (jsonObj.get("SecondaryStatus") != null && !jsonObj.get("SecondaryStatus").isJsonNull()) {
        SecondaryStatus.validateJsonElement(jsonObj.get("SecondaryStatus"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `HyperParameters`
      if (jsonObj.get("HyperParameters") != null && !jsonObj.get("HyperParameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("HyperParameters"));
      }
      // validate the optional field `AlgorithmSpecification`
      if (jsonObj.get("AlgorithmSpecification") != null && !jsonObj.get("AlgorithmSpecification").isJsonNull()) {
        TrainingJobAlgorithmSpecification.validateJsonElement(jsonObj.get("AlgorithmSpecification"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `InputDataConfig`
      if (jsonObj.get("InputDataConfig") != null && !jsonObj.get("InputDataConfig").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("InputDataConfig"));
      }
      // validate the optional field `OutputDataConfig`
      if (jsonObj.get("OutputDataConfig") != null && !jsonObj.get("OutputDataConfig").isJsonNull()) {
        TrainingJobOutputDataConfig.validateJsonElement(jsonObj.get("OutputDataConfig"));
      }
      // validate the optional field `ResourceConfig`
      if (jsonObj.get("ResourceConfig") != null && !jsonObj.get("ResourceConfig").isJsonNull()) {
        TrainingJobResourceConfig.validateJsonElement(jsonObj.get("ResourceConfig"));
      }
      // validate the optional field `VpcConfig`
      if (jsonObj.get("VpcConfig") != null && !jsonObj.get("VpcConfig").isJsonNull()) {
        DescribeTrainingJobResponseVpcConfig.validateJsonElement(jsonObj.get("VpcConfig"));
      }
      // validate the optional field `StoppingCondition`
      if (jsonObj.get("StoppingCondition") != null && !jsonObj.get("StoppingCondition").isJsonNull()) {
        CreateTrainingJobRequestStoppingCondition.validateJsonElement(jsonObj.get("StoppingCondition"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `TrainingStartTime`
      if (jsonObj.get("TrainingStartTime") != null && !jsonObj.get("TrainingStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingStartTime"));
      }
      // validate the optional field `TrainingEndTime`
      if (jsonObj.get("TrainingEndTime") != null && !jsonObj.get("TrainingEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingEndTime"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `SecondaryStatusTransitions`
      if (jsonObj.get("SecondaryStatusTransitions") != null && !jsonObj.get("SecondaryStatusTransitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecondaryStatusTransitions"));
      }
      // validate the optional field `FinalMetricDataList`
      if (jsonObj.get("FinalMetricDataList") != null && !jsonObj.get("FinalMetricDataList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("FinalMetricDataList"));
      }
      // validate the optional field `EnableNetworkIsolation`
      if (jsonObj.get("EnableNetworkIsolation") != null && !jsonObj.get("EnableNetworkIsolation").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableNetworkIsolation"));
      }
      // validate the optional field `EnableInterContainerTrafficEncryption`
      if (jsonObj.get("EnableInterContainerTrafficEncryption") != null && !jsonObj.get("EnableInterContainerTrafficEncryption").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableInterContainerTrafficEncryption"));
      }
      // validate the optional field `EnableManagedSpotTraining`
      if (jsonObj.get("EnableManagedSpotTraining") != null && !jsonObj.get("EnableManagedSpotTraining").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableManagedSpotTraining"));
      }
      // validate the optional field `CheckpointConfig`
      if (jsonObj.get("CheckpointConfig") != null && !jsonObj.get("CheckpointConfig").isJsonNull()) {
        CheckpointConfig.validateJsonElement(jsonObj.get("CheckpointConfig"));
      }
      // validate the optional field `TrainingTimeInSeconds`
      if (jsonObj.get("TrainingTimeInSeconds") != null && !jsonObj.get("TrainingTimeInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TrainingTimeInSeconds"));
      }
      // validate the optional field `BillableTimeInSeconds`
      if (jsonObj.get("BillableTimeInSeconds") != null && !jsonObj.get("BillableTimeInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BillableTimeInSeconds"));
      }
      // validate the optional field `DebugHookConfig`
      if (jsonObj.get("DebugHookConfig") != null && !jsonObj.get("DebugHookConfig").isJsonNull()) {
        DebugHookConfig.validateJsonElement(jsonObj.get("DebugHookConfig"));
      }
      // validate the optional field `ExperimentConfig`
      if (jsonObj.get("ExperimentConfig") != null && !jsonObj.get("ExperimentConfig").isJsonNull()) {
        ExperimentConfig.validateJsonElement(jsonObj.get("ExperimentConfig"));
      }
      // validate the optional field `DebugRuleConfigurations`
      if (jsonObj.get("DebugRuleConfigurations") != null && !jsonObj.get("DebugRuleConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DebugRuleConfigurations"));
      }
      // validate the optional field `TensorBoardOutputConfig`
      if (jsonObj.get("TensorBoardOutputConfig") != null && !jsonObj.get("TensorBoardOutputConfig").isJsonNull()) {
        TensorBoardOutputConfig.validateJsonElement(jsonObj.get("TensorBoardOutputConfig"));
      }
      // validate the optional field `DebugRuleEvaluationStatuses`
      if (jsonObj.get("DebugRuleEvaluationStatuses") != null && !jsonObj.get("DebugRuleEvaluationStatuses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DebugRuleEvaluationStatuses"));
      }
      // validate the optional field `ProfilerConfig`
      if (jsonObj.get("ProfilerConfig") != null && !jsonObj.get("ProfilerConfig").isJsonNull()) {
        ProfilerConfig.validateJsonElement(jsonObj.get("ProfilerConfig"));
      }
      // validate the optional field `Environment`
      if (jsonObj.get("Environment") != null && !jsonObj.get("Environment").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Environment"));
      }
      // validate the optional field `RetryStrategy`
      if (jsonObj.get("RetryStrategy") != null && !jsonObj.get("RetryStrategy").isJsonNull()) {
        CreateTrainingJobRequestRetryStrategy.validateJsonElement(jsonObj.get("RetryStrategy"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TrainingJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TrainingJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TrainingJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TrainingJob.class));

       return (TypeAdapter<T>) new TypeAdapter<TrainingJob>() {
           @Override
           public void write(JsonWriter out, TrainingJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TrainingJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TrainingJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TrainingJob
   * @throws IOException if the JSON string is invalid with respect to TrainingJob
   */
  public static TrainingJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TrainingJob.class);
  }

  /**
   * Convert an instance of TrainingJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

