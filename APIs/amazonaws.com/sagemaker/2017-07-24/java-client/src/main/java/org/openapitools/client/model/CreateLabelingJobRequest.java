/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateLabelingJobRequestHumanTaskConfig;
import org.openapitools.client.model.CreateLabelingJobRequestInputConfig;
import org.openapitools.client.model.CreateLabelingJobRequestLabelingJobAlgorithmsConfig;
import org.openapitools.client.model.CreateLabelingJobRequestOutputConfig;
import org.openapitools.client.model.CreateLabelingJobRequestStoppingConditions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateLabelingJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateLabelingJobRequest {
  public static final String SERIALIZED_NAME_LABELING_JOB_NAME = "LabelingJobName";
  @SerializedName(SERIALIZED_NAME_LABELING_JOB_NAME)
  private String labelingJobName;

  public static final String SERIALIZED_NAME_LABEL_ATTRIBUTE_NAME = "LabelAttributeName";
  @SerializedName(SERIALIZED_NAME_LABEL_ATTRIBUTE_NAME)
  private String labelAttributeName;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "InputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private CreateLabelingJobRequestInputConfig inputConfig;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "OutputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private CreateLabelingJobRequestOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_LABEL_CATEGORY_CONFIG_S3_URI = "LabelCategoryConfigS3Uri";
  @SerializedName(SERIALIZED_NAME_LABEL_CATEGORY_CONFIG_S3_URI)
  private String labelCategoryConfigS3Uri;

  public static final String SERIALIZED_NAME_STOPPING_CONDITIONS = "StoppingConditions";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITIONS)
  private CreateLabelingJobRequestStoppingConditions stoppingConditions;

  public static final String SERIALIZED_NAME_LABELING_JOB_ALGORITHMS_CONFIG = "LabelingJobAlgorithmsConfig";
  @SerializedName(SERIALIZED_NAME_LABELING_JOB_ALGORITHMS_CONFIG)
  private CreateLabelingJobRequestLabelingJobAlgorithmsConfig labelingJobAlgorithmsConfig;

  public static final String SERIALIZED_NAME_HUMAN_TASK_CONFIG = "HumanTaskConfig";
  @SerializedName(SERIALIZED_NAME_HUMAN_TASK_CONFIG)
  private CreateLabelingJobRequestHumanTaskConfig humanTaskConfig;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public CreateLabelingJobRequest() {
  }

  public CreateLabelingJobRequest labelingJobName(String labelingJobName) {
    this.labelingJobName = labelingJobName;
    return this;
  }

  /**
   * Get labelingJobName
   * @return labelingJobName
   */
  @javax.annotation.Nonnull
  public String getLabelingJobName() {
    return labelingJobName;
  }

  public void setLabelingJobName(String labelingJobName) {
    this.labelingJobName = labelingJobName;
  }


  public CreateLabelingJobRequest labelAttributeName(String labelAttributeName) {
    this.labelAttributeName = labelAttributeName;
    return this;
  }

  /**
   * Get labelAttributeName
   * @return labelAttributeName
   */
  @javax.annotation.Nonnull
  public String getLabelAttributeName() {
    return labelAttributeName;
  }

  public void setLabelAttributeName(String labelAttributeName) {
    this.labelAttributeName = labelAttributeName;
  }


  public CreateLabelingJobRequest inputConfig(CreateLabelingJobRequestInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nonnull
  public CreateLabelingJobRequestInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(CreateLabelingJobRequestInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public CreateLabelingJobRequest outputConfig(CreateLabelingJobRequestOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nonnull
  public CreateLabelingJobRequestOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(CreateLabelingJobRequestOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public CreateLabelingJobRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateLabelingJobRequest labelCategoryConfigS3Uri(String labelCategoryConfigS3Uri) {
    this.labelCategoryConfigS3Uri = labelCategoryConfigS3Uri;
    return this;
  }

  /**
   * Get labelCategoryConfigS3Uri
   * @return labelCategoryConfigS3Uri
   */
  @javax.annotation.Nullable
  public String getLabelCategoryConfigS3Uri() {
    return labelCategoryConfigS3Uri;
  }

  public void setLabelCategoryConfigS3Uri(String labelCategoryConfigS3Uri) {
    this.labelCategoryConfigS3Uri = labelCategoryConfigS3Uri;
  }


  public CreateLabelingJobRequest stoppingConditions(CreateLabelingJobRequestStoppingConditions stoppingConditions) {
    this.stoppingConditions = stoppingConditions;
    return this;
  }

  /**
   * Get stoppingConditions
   * @return stoppingConditions
   */
  @javax.annotation.Nullable
  public CreateLabelingJobRequestStoppingConditions getStoppingConditions() {
    return stoppingConditions;
  }

  public void setStoppingConditions(CreateLabelingJobRequestStoppingConditions stoppingConditions) {
    this.stoppingConditions = stoppingConditions;
  }


  public CreateLabelingJobRequest labelingJobAlgorithmsConfig(CreateLabelingJobRequestLabelingJobAlgorithmsConfig labelingJobAlgorithmsConfig) {
    this.labelingJobAlgorithmsConfig = labelingJobAlgorithmsConfig;
    return this;
  }

  /**
   * Get labelingJobAlgorithmsConfig
   * @return labelingJobAlgorithmsConfig
   */
  @javax.annotation.Nullable
  public CreateLabelingJobRequestLabelingJobAlgorithmsConfig getLabelingJobAlgorithmsConfig() {
    return labelingJobAlgorithmsConfig;
  }

  public void setLabelingJobAlgorithmsConfig(CreateLabelingJobRequestLabelingJobAlgorithmsConfig labelingJobAlgorithmsConfig) {
    this.labelingJobAlgorithmsConfig = labelingJobAlgorithmsConfig;
  }


  public CreateLabelingJobRequest humanTaskConfig(CreateLabelingJobRequestHumanTaskConfig humanTaskConfig) {
    this.humanTaskConfig = humanTaskConfig;
    return this;
  }

  /**
   * Get humanTaskConfig
   * @return humanTaskConfig
   */
  @javax.annotation.Nonnull
  public CreateLabelingJobRequestHumanTaskConfig getHumanTaskConfig() {
    return humanTaskConfig;
  }

  public void setHumanTaskConfig(CreateLabelingJobRequestHumanTaskConfig humanTaskConfig) {
    this.humanTaskConfig = humanTaskConfig;
  }


  public CreateLabelingJobRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLabelingJobRequest createLabelingJobRequest = (CreateLabelingJobRequest) o;
    return Objects.equals(this.labelingJobName, createLabelingJobRequest.labelingJobName) &&
        Objects.equals(this.labelAttributeName, createLabelingJobRequest.labelAttributeName) &&
        Objects.equals(this.inputConfig, createLabelingJobRequest.inputConfig) &&
        Objects.equals(this.outputConfig, createLabelingJobRequest.outputConfig) &&
        Objects.equals(this.roleArn, createLabelingJobRequest.roleArn) &&
        Objects.equals(this.labelCategoryConfigS3Uri, createLabelingJobRequest.labelCategoryConfigS3Uri) &&
        Objects.equals(this.stoppingConditions, createLabelingJobRequest.stoppingConditions) &&
        Objects.equals(this.labelingJobAlgorithmsConfig, createLabelingJobRequest.labelingJobAlgorithmsConfig) &&
        Objects.equals(this.humanTaskConfig, createLabelingJobRequest.humanTaskConfig) &&
        Objects.equals(this.tags, createLabelingJobRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(labelingJobName, labelAttributeName, inputConfig, outputConfig, roleArn, labelCategoryConfigS3Uri, stoppingConditions, labelingJobAlgorithmsConfig, humanTaskConfig, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLabelingJobRequest {\n");
    sb.append("    labelingJobName: ").append(toIndentedString(labelingJobName)).append("\n");
    sb.append("    labelAttributeName: ").append(toIndentedString(labelAttributeName)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    labelCategoryConfigS3Uri: ").append(toIndentedString(labelCategoryConfigS3Uri)).append("\n");
    sb.append("    stoppingConditions: ").append(toIndentedString(stoppingConditions)).append("\n");
    sb.append("    labelingJobAlgorithmsConfig: ").append(toIndentedString(labelingJobAlgorithmsConfig)).append("\n");
    sb.append("    humanTaskConfig: ").append(toIndentedString(humanTaskConfig)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LabelingJobName");
    openapiFields.add("LabelAttributeName");
    openapiFields.add("InputConfig");
    openapiFields.add("OutputConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("LabelCategoryConfigS3Uri");
    openapiFields.add("StoppingConditions");
    openapiFields.add("LabelingJobAlgorithmsConfig");
    openapiFields.add("HumanTaskConfig");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("LabelingJobName");
    openapiRequiredFields.add("LabelAttributeName");
    openapiRequiredFields.add("InputConfig");
    openapiRequiredFields.add("OutputConfig");
    openapiRequiredFields.add("RoleArn");
    openapiRequiredFields.add("HumanTaskConfig");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateLabelingJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateLabelingJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateLabelingJobRequest is not found in the empty JSON string", CreateLabelingJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateLabelingJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateLabelingJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateLabelingJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `LabelingJobName`
      String.validateJsonElement(jsonObj.get("LabelingJobName"));
      // validate the required field `LabelAttributeName`
      String.validateJsonElement(jsonObj.get("LabelAttributeName"));
      // validate the required field `InputConfig`
      CreateLabelingJobRequestInputConfig.validateJsonElement(jsonObj.get("InputConfig"));
      // validate the required field `OutputConfig`
      CreateLabelingJobRequestOutputConfig.validateJsonElement(jsonObj.get("OutputConfig"));
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `LabelCategoryConfigS3Uri`
      if (jsonObj.get("LabelCategoryConfigS3Uri") != null && !jsonObj.get("LabelCategoryConfigS3Uri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LabelCategoryConfigS3Uri"));
      }
      // validate the optional field `StoppingConditions`
      if (jsonObj.get("StoppingConditions") != null && !jsonObj.get("StoppingConditions").isJsonNull()) {
        CreateLabelingJobRequestStoppingConditions.validateJsonElement(jsonObj.get("StoppingConditions"));
      }
      // validate the optional field `LabelingJobAlgorithmsConfig`
      if (jsonObj.get("LabelingJobAlgorithmsConfig") != null && !jsonObj.get("LabelingJobAlgorithmsConfig").isJsonNull()) {
        CreateLabelingJobRequestLabelingJobAlgorithmsConfig.validateJsonElement(jsonObj.get("LabelingJobAlgorithmsConfig"));
      }
      // validate the required field `HumanTaskConfig`
      CreateLabelingJobRequestHumanTaskConfig.validateJsonElement(jsonObj.get("HumanTaskConfig"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateLabelingJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateLabelingJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateLabelingJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateLabelingJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateLabelingJobRequest>() {
           @Override
           public void write(JsonWriter out, CreateLabelingJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateLabelingJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateLabelingJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateLabelingJobRequest
   * @throws IOException if the JSON string is invalid with respect to CreateLabelingJobRequest
   */
  public static CreateLabelingJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateLabelingJobRequest.class);
  }

  /**
   * Convert an instance of CreateLabelingJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

