/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DescribeTrialComponentResponseCreatedBy;
import org.openapitools.client.model.MetadataProperties;
import org.openapitools.client.model.TrialComponentSource;
import org.openapitools.client.model.TrialComponentSourceDetail;
import org.openapitools.client.model.TrialComponentStatus;
import org.openapitools.client.model.UserContext;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SearchRecordTrialComponent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchRecordTrialComponent {
  public static final String SERIALIZED_NAME_TRIAL_COMPONENT_NAME = "TrialComponentName";
  @SerializedName(SERIALIZED_NAME_TRIAL_COMPONENT_NAME)
  private String trialComponentName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_TRIAL_COMPONENT_ARN = "TrialComponentArn";
  @SerializedName(SERIALIZED_NAME_TRIAL_COMPONENT_ARN)
  private String trialComponentArn;

  public static final String SERIALIZED_NAME_SOURCE = "Source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private TrialComponentSource source;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TrialComponentStatus status;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private DescribeTrialComponentResponseCreatedBy createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private UserContext lastModifiedBy;

  public static final String SERIALIZED_NAME_PARAMETERS = "Parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map parameters;

  public static final String SERIALIZED_NAME_INPUT_ARTIFACTS = "InputArtifacts";
  @SerializedName(SERIALIZED_NAME_INPUT_ARTIFACTS)
  private Map inputArtifacts;

  public static final String SERIALIZED_NAME_OUTPUT_ARTIFACTS = "OutputArtifacts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_ARTIFACTS)
  private Map outputArtifacts;

  public static final String SERIALIZED_NAME_METRICS = "Metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List metrics;

  public static final String SERIALIZED_NAME_METADATA_PROPERTIES = "MetadataProperties";
  @SerializedName(SERIALIZED_NAME_METADATA_PROPERTIES)
  private MetadataProperties metadataProperties;

  public static final String SERIALIZED_NAME_SOURCE_DETAIL = "SourceDetail";
  @SerializedName(SERIALIZED_NAME_SOURCE_DETAIL)
  private TrialComponentSourceDetail sourceDetail;

  public static final String SERIALIZED_NAME_LINEAGE_GROUP_ARN = "LineageGroupArn";
  @SerializedName(SERIALIZED_NAME_LINEAGE_GROUP_ARN)
  private String lineageGroupArn;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_PARENTS = "Parents";
  @SerializedName(SERIALIZED_NAME_PARENTS)
  private List parents;

  public static final String SERIALIZED_NAME_RUN_NAME = "RunName";
  @SerializedName(SERIALIZED_NAME_RUN_NAME)
  private String runName;

  public SearchRecordTrialComponent() {
  }

  public SearchRecordTrialComponent trialComponentName(String trialComponentName) {
    this.trialComponentName = trialComponentName;
    return this;
  }

  /**
   * Get trialComponentName
   * @return trialComponentName
   */
  @javax.annotation.Nullable
  public String getTrialComponentName() {
    return trialComponentName;
  }

  public void setTrialComponentName(String trialComponentName) {
    this.trialComponentName = trialComponentName;
  }


  public SearchRecordTrialComponent displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public SearchRecordTrialComponent trialComponentArn(String trialComponentArn) {
    this.trialComponentArn = trialComponentArn;
    return this;
  }

  /**
   * Get trialComponentArn
   * @return trialComponentArn
   */
  @javax.annotation.Nullable
  public String getTrialComponentArn() {
    return trialComponentArn;
  }

  public void setTrialComponentArn(String trialComponentArn) {
    this.trialComponentArn = trialComponentArn;
  }


  public SearchRecordTrialComponent source(TrialComponentSource source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public TrialComponentSource getSource() {
    return source;
  }

  public void setSource(TrialComponentSource source) {
    this.source = source;
  }


  public SearchRecordTrialComponent status(TrialComponentStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TrialComponentStatus getStatus() {
    return status;
  }

  public void setStatus(TrialComponentStatus status) {
    this.status = status;
  }


  public SearchRecordTrialComponent startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public SearchRecordTrialComponent endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public SearchRecordTrialComponent creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public SearchRecordTrialComponent createdBy(DescribeTrialComponentResponseCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public DescribeTrialComponentResponseCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(DescribeTrialComponentResponseCreatedBy createdBy) {
    this.createdBy = createdBy;
  }


  public SearchRecordTrialComponent lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public SearchRecordTrialComponent lastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public UserContext getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(UserContext lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public SearchRecordTrialComponent parameters(Map parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map getParameters() {
    return parameters;
  }

  public void setParameters(Map parameters) {
    this.parameters = parameters;
  }


  public SearchRecordTrialComponent inputArtifacts(Map inputArtifacts) {
    this.inputArtifacts = inputArtifacts;
    return this;
  }

  /**
   * Get inputArtifacts
   * @return inputArtifacts
   */
  @javax.annotation.Nullable
  public Map getInputArtifacts() {
    return inputArtifacts;
  }

  public void setInputArtifacts(Map inputArtifacts) {
    this.inputArtifacts = inputArtifacts;
  }


  public SearchRecordTrialComponent outputArtifacts(Map outputArtifacts) {
    this.outputArtifacts = outputArtifacts;
    return this;
  }

  /**
   * Get outputArtifacts
   * @return outputArtifacts
   */
  @javax.annotation.Nullable
  public Map getOutputArtifacts() {
    return outputArtifacts;
  }

  public void setOutputArtifacts(Map outputArtifacts) {
    this.outputArtifacts = outputArtifacts;
  }


  public SearchRecordTrialComponent metrics(List metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public List getMetrics() {
    return metrics;
  }

  public void setMetrics(List metrics) {
    this.metrics = metrics;
  }


  public SearchRecordTrialComponent metadataProperties(MetadataProperties metadataProperties) {
    this.metadataProperties = metadataProperties;
    return this;
  }

  /**
   * Get metadataProperties
   * @return metadataProperties
   */
  @javax.annotation.Nullable
  public MetadataProperties getMetadataProperties() {
    return metadataProperties;
  }

  public void setMetadataProperties(MetadataProperties metadataProperties) {
    this.metadataProperties = metadataProperties;
  }


  public SearchRecordTrialComponent sourceDetail(TrialComponentSourceDetail sourceDetail) {
    this.sourceDetail = sourceDetail;
    return this;
  }

  /**
   * Get sourceDetail
   * @return sourceDetail
   */
  @javax.annotation.Nullable
  public TrialComponentSourceDetail getSourceDetail() {
    return sourceDetail;
  }

  public void setSourceDetail(TrialComponentSourceDetail sourceDetail) {
    this.sourceDetail = sourceDetail;
  }


  public SearchRecordTrialComponent lineageGroupArn(String lineageGroupArn) {
    this.lineageGroupArn = lineageGroupArn;
    return this;
  }

  /**
   * Get lineageGroupArn
   * @return lineageGroupArn
   */
  @javax.annotation.Nullable
  public String getLineageGroupArn() {
    return lineageGroupArn;
  }

  public void setLineageGroupArn(String lineageGroupArn) {
    this.lineageGroupArn = lineageGroupArn;
  }


  public SearchRecordTrialComponent tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public SearchRecordTrialComponent parents(List parents) {
    this.parents = parents;
    return this;
  }

  /**
   * Get parents
   * @return parents
   */
  @javax.annotation.Nullable
  public List getParents() {
    return parents;
  }

  public void setParents(List parents) {
    this.parents = parents;
  }


  public SearchRecordTrialComponent runName(String runName) {
    this.runName = runName;
    return this;
  }

  /**
   * Get runName
   * @return runName
   */
  @javax.annotation.Nullable
  public String getRunName() {
    return runName;
  }

  public void setRunName(String runName) {
    this.runName = runName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRecordTrialComponent searchRecordTrialComponent = (SearchRecordTrialComponent) o;
    return Objects.equals(this.trialComponentName, searchRecordTrialComponent.trialComponentName) &&
        Objects.equals(this.displayName, searchRecordTrialComponent.displayName) &&
        Objects.equals(this.trialComponentArn, searchRecordTrialComponent.trialComponentArn) &&
        Objects.equals(this.source, searchRecordTrialComponent.source) &&
        Objects.equals(this.status, searchRecordTrialComponent.status) &&
        Objects.equals(this.startTime, searchRecordTrialComponent.startTime) &&
        Objects.equals(this.endTime, searchRecordTrialComponent.endTime) &&
        Objects.equals(this.creationTime, searchRecordTrialComponent.creationTime) &&
        Objects.equals(this.createdBy, searchRecordTrialComponent.createdBy) &&
        Objects.equals(this.lastModifiedTime, searchRecordTrialComponent.lastModifiedTime) &&
        Objects.equals(this.lastModifiedBy, searchRecordTrialComponent.lastModifiedBy) &&
        Objects.equals(this.parameters, searchRecordTrialComponent.parameters) &&
        Objects.equals(this.inputArtifacts, searchRecordTrialComponent.inputArtifacts) &&
        Objects.equals(this.outputArtifacts, searchRecordTrialComponent.outputArtifacts) &&
        Objects.equals(this.metrics, searchRecordTrialComponent.metrics) &&
        Objects.equals(this.metadataProperties, searchRecordTrialComponent.metadataProperties) &&
        Objects.equals(this.sourceDetail, searchRecordTrialComponent.sourceDetail) &&
        Objects.equals(this.lineageGroupArn, searchRecordTrialComponent.lineageGroupArn) &&
        Objects.equals(this.tags, searchRecordTrialComponent.tags) &&
        Objects.equals(this.parents, searchRecordTrialComponent.parents) &&
        Objects.equals(this.runName, searchRecordTrialComponent.runName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trialComponentName, displayName, trialComponentArn, source, status, startTime, endTime, creationTime, createdBy, lastModifiedTime, lastModifiedBy, parameters, inputArtifacts, outputArtifacts, metrics, metadataProperties, sourceDetail, lineageGroupArn, tags, parents, runName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRecordTrialComponent {\n");
    sb.append("    trialComponentName: ").append(toIndentedString(trialComponentName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    trialComponentArn: ").append(toIndentedString(trialComponentArn)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    inputArtifacts: ").append(toIndentedString(inputArtifacts)).append("\n");
    sb.append("    outputArtifacts: ").append(toIndentedString(outputArtifacts)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    metadataProperties: ").append(toIndentedString(metadataProperties)).append("\n");
    sb.append("    sourceDetail: ").append(toIndentedString(sourceDetail)).append("\n");
    sb.append("    lineageGroupArn: ").append(toIndentedString(lineageGroupArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
    sb.append("    runName: ").append(toIndentedString(runName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrialComponentName");
    openapiFields.add("DisplayName");
    openapiFields.add("TrialComponentArn");
    openapiFields.add("Source");
    openapiFields.add("Status");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("CreationTime");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("Parameters");
    openapiFields.add("InputArtifacts");
    openapiFields.add("OutputArtifacts");
    openapiFields.add("Metrics");
    openapiFields.add("MetadataProperties");
    openapiFields.add("SourceDetail");
    openapiFields.add("LineageGroupArn");
    openapiFields.add("Tags");
    openapiFields.add("Parents");
    openapiFields.add("RunName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchRecordTrialComponent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchRecordTrialComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchRecordTrialComponent is not found in the empty JSON string", SearchRecordTrialComponent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchRecordTrialComponent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchRecordTrialComponent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TrialComponentName`
      if (jsonObj.get("TrialComponentName") != null && !jsonObj.get("TrialComponentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrialComponentName"));
      }
      // validate the optional field `DisplayName`
      if (jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DisplayName"));
      }
      // validate the optional field `TrialComponentArn`
      if (jsonObj.get("TrialComponentArn") != null && !jsonObj.get("TrialComponentArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrialComponentArn"));
      }
      // validate the optional field `Source`
      if (jsonObj.get("Source") != null && !jsonObj.get("Source").isJsonNull()) {
        TrialComponentSource.validateJsonElement(jsonObj.get("Source"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        TrialComponentStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        DescribeTrialComponentResponseCreatedBy.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        UserContext.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `Parameters`
      if (jsonObj.get("Parameters") != null && !jsonObj.get("Parameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Parameters"));
      }
      // validate the optional field `InputArtifacts`
      if (jsonObj.get("InputArtifacts") != null && !jsonObj.get("InputArtifacts").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("InputArtifacts"));
      }
      // validate the optional field `OutputArtifacts`
      if (jsonObj.get("OutputArtifacts") != null && !jsonObj.get("OutputArtifacts").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("OutputArtifacts"));
      }
      // validate the optional field `Metrics`
      if (jsonObj.get("Metrics") != null && !jsonObj.get("Metrics").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Metrics"));
      }
      // validate the optional field `MetadataProperties`
      if (jsonObj.get("MetadataProperties") != null && !jsonObj.get("MetadataProperties").isJsonNull()) {
        MetadataProperties.validateJsonElement(jsonObj.get("MetadataProperties"));
      }
      // validate the optional field `SourceDetail`
      if (jsonObj.get("SourceDetail") != null && !jsonObj.get("SourceDetail").isJsonNull()) {
        TrialComponentSourceDetail.validateJsonElement(jsonObj.get("SourceDetail"));
      }
      // validate the optional field `LineageGroupArn`
      if (jsonObj.get("LineageGroupArn") != null && !jsonObj.get("LineageGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LineageGroupArn"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `Parents`
      if (jsonObj.get("Parents") != null && !jsonObj.get("Parents").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Parents"));
      }
      // validate the optional field `RunName`
      if (jsonObj.get("RunName") != null && !jsonObj.get("RunName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RunName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchRecordTrialComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchRecordTrialComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchRecordTrialComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchRecordTrialComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchRecordTrialComponent>() {
           @Override
           public void write(JsonWriter out, SearchRecordTrialComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchRecordTrialComponent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchRecordTrialComponent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchRecordTrialComponent
   * @throws IOException if the JSON string is invalid with respect to SearchRecordTrialComponent
   */
  public static SearchRecordTrialComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchRecordTrialComponent.class);
  }

  /**
   * Convert an instance of SearchRecordTrialComponent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

