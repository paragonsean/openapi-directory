/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HubContentStatus;
import org.openapitools.client.model.HubContentType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeHubContentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeHubContentResponse {
  public static final String SERIALIZED_NAME_HUB_CONTENT_NAME = "HubContentName";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_NAME)
  private String hubContentName;

  public static final String SERIALIZED_NAME_HUB_CONTENT_ARN = "HubContentArn";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_ARN)
  private String hubContentArn;

  public static final String SERIALIZED_NAME_HUB_CONTENT_VERSION = "HubContentVersion";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_VERSION)
  private String hubContentVersion;

  public static final String SERIALIZED_NAME_HUB_CONTENT_TYPE = "HubContentType";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_TYPE)
  private HubContentType hubContentType;

  public static final String SERIALIZED_NAME_DOCUMENT_SCHEMA_VERSION = "DocumentSchemaVersion";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_SCHEMA_VERSION)
  private String documentSchemaVersion;

  public static final String SERIALIZED_NAME_HUB_NAME = "HubName";
  @SerializedName(SERIALIZED_NAME_HUB_NAME)
  private String hubName;

  public static final String SERIALIZED_NAME_HUB_ARN = "HubArn";
  @SerializedName(SERIALIZED_NAME_HUB_ARN)
  private String hubArn;

  public static final String SERIALIZED_NAME_HUB_CONTENT_DISPLAY_NAME = "HubContentDisplayName";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_DISPLAY_NAME)
  private String hubContentDisplayName;

  public static final String SERIALIZED_NAME_HUB_CONTENT_DESCRIPTION = "HubContentDescription";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_DESCRIPTION)
  private String hubContentDescription;

  public static final String SERIALIZED_NAME_HUB_CONTENT_MARKDOWN = "HubContentMarkdown";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_MARKDOWN)
  private String hubContentMarkdown;

  public static final String SERIALIZED_NAME_HUB_CONTENT_DOCUMENT = "HubContentDocument";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_DOCUMENT)
  private String hubContentDocument;

  public static final String SERIALIZED_NAME_HUB_CONTENT_SEARCH_KEYWORDS = "HubContentSearchKeywords";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_SEARCH_KEYWORDS)
  private List hubContentSearchKeywords;

  public static final String SERIALIZED_NAME_HUB_CONTENT_DEPENDENCIES = "HubContentDependencies";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_DEPENDENCIES)
  private List hubContentDependencies;

  public static final String SERIALIZED_NAME_HUB_CONTENT_STATUS = "HubContentStatus";
  @SerializedName(SERIALIZED_NAME_HUB_CONTENT_STATUS)
  private HubContentStatus hubContentStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public DescribeHubContentResponse() {
  }

  public DescribeHubContentResponse hubContentName(String hubContentName) {
    this.hubContentName = hubContentName;
    return this;
  }

  /**
   * Get hubContentName
   * @return hubContentName
   */
  @javax.annotation.Nonnull
  public String getHubContentName() {
    return hubContentName;
  }

  public void setHubContentName(String hubContentName) {
    this.hubContentName = hubContentName;
  }


  public DescribeHubContentResponse hubContentArn(String hubContentArn) {
    this.hubContentArn = hubContentArn;
    return this;
  }

  /**
   * Get hubContentArn
   * @return hubContentArn
   */
  @javax.annotation.Nonnull
  public String getHubContentArn() {
    return hubContentArn;
  }

  public void setHubContentArn(String hubContentArn) {
    this.hubContentArn = hubContentArn;
  }


  public DescribeHubContentResponse hubContentVersion(String hubContentVersion) {
    this.hubContentVersion = hubContentVersion;
    return this;
  }

  /**
   * Get hubContentVersion
   * @return hubContentVersion
   */
  @javax.annotation.Nonnull
  public String getHubContentVersion() {
    return hubContentVersion;
  }

  public void setHubContentVersion(String hubContentVersion) {
    this.hubContentVersion = hubContentVersion;
  }


  public DescribeHubContentResponse hubContentType(HubContentType hubContentType) {
    this.hubContentType = hubContentType;
    return this;
  }

  /**
   * Get hubContentType
   * @return hubContentType
   */
  @javax.annotation.Nonnull
  public HubContentType getHubContentType() {
    return hubContentType;
  }

  public void setHubContentType(HubContentType hubContentType) {
    this.hubContentType = hubContentType;
  }


  public DescribeHubContentResponse documentSchemaVersion(String documentSchemaVersion) {
    this.documentSchemaVersion = documentSchemaVersion;
    return this;
  }

  /**
   * Get documentSchemaVersion
   * @return documentSchemaVersion
   */
  @javax.annotation.Nonnull
  public String getDocumentSchemaVersion() {
    return documentSchemaVersion;
  }

  public void setDocumentSchemaVersion(String documentSchemaVersion) {
    this.documentSchemaVersion = documentSchemaVersion;
  }


  public DescribeHubContentResponse hubName(String hubName) {
    this.hubName = hubName;
    return this;
  }

  /**
   * Get hubName
   * @return hubName
   */
  @javax.annotation.Nonnull
  public String getHubName() {
    return hubName;
  }

  public void setHubName(String hubName) {
    this.hubName = hubName;
  }


  public DescribeHubContentResponse hubArn(String hubArn) {
    this.hubArn = hubArn;
    return this;
  }

  /**
   * Get hubArn
   * @return hubArn
   */
  @javax.annotation.Nonnull
  public String getHubArn() {
    return hubArn;
  }

  public void setHubArn(String hubArn) {
    this.hubArn = hubArn;
  }


  public DescribeHubContentResponse hubContentDisplayName(String hubContentDisplayName) {
    this.hubContentDisplayName = hubContentDisplayName;
    return this;
  }

  /**
   * Get hubContentDisplayName
   * @return hubContentDisplayName
   */
  @javax.annotation.Nullable
  public String getHubContentDisplayName() {
    return hubContentDisplayName;
  }

  public void setHubContentDisplayName(String hubContentDisplayName) {
    this.hubContentDisplayName = hubContentDisplayName;
  }


  public DescribeHubContentResponse hubContentDescription(String hubContentDescription) {
    this.hubContentDescription = hubContentDescription;
    return this;
  }

  /**
   * Get hubContentDescription
   * @return hubContentDescription
   */
  @javax.annotation.Nullable
  public String getHubContentDescription() {
    return hubContentDescription;
  }

  public void setHubContentDescription(String hubContentDescription) {
    this.hubContentDescription = hubContentDescription;
  }


  public DescribeHubContentResponse hubContentMarkdown(String hubContentMarkdown) {
    this.hubContentMarkdown = hubContentMarkdown;
    return this;
  }

  /**
   * Get hubContentMarkdown
   * @return hubContentMarkdown
   */
  @javax.annotation.Nullable
  public String getHubContentMarkdown() {
    return hubContentMarkdown;
  }

  public void setHubContentMarkdown(String hubContentMarkdown) {
    this.hubContentMarkdown = hubContentMarkdown;
  }


  public DescribeHubContentResponse hubContentDocument(String hubContentDocument) {
    this.hubContentDocument = hubContentDocument;
    return this;
  }

  /**
   * Get hubContentDocument
   * @return hubContentDocument
   */
  @javax.annotation.Nonnull
  public String getHubContentDocument() {
    return hubContentDocument;
  }

  public void setHubContentDocument(String hubContentDocument) {
    this.hubContentDocument = hubContentDocument;
  }


  public DescribeHubContentResponse hubContentSearchKeywords(List hubContentSearchKeywords) {
    this.hubContentSearchKeywords = hubContentSearchKeywords;
    return this;
  }

  /**
   * Get hubContentSearchKeywords
   * @return hubContentSearchKeywords
   */
  @javax.annotation.Nullable
  public List getHubContentSearchKeywords() {
    return hubContentSearchKeywords;
  }

  public void setHubContentSearchKeywords(List hubContentSearchKeywords) {
    this.hubContentSearchKeywords = hubContentSearchKeywords;
  }


  public DescribeHubContentResponse hubContentDependencies(List hubContentDependencies) {
    this.hubContentDependencies = hubContentDependencies;
    return this;
  }

  /**
   * Get hubContentDependencies
   * @return hubContentDependencies
   */
  @javax.annotation.Nullable
  public List getHubContentDependencies() {
    return hubContentDependencies;
  }

  public void setHubContentDependencies(List hubContentDependencies) {
    this.hubContentDependencies = hubContentDependencies;
  }


  public DescribeHubContentResponse hubContentStatus(HubContentStatus hubContentStatus) {
    this.hubContentStatus = hubContentStatus;
    return this;
  }

  /**
   * Get hubContentStatus
   * @return hubContentStatus
   */
  @javax.annotation.Nonnull
  public HubContentStatus getHubContentStatus() {
    return hubContentStatus;
  }

  public void setHubContentStatus(HubContentStatus hubContentStatus) {
    this.hubContentStatus = hubContentStatus;
  }


  public DescribeHubContentResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeHubContentResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeHubContentResponse describeHubContentResponse = (DescribeHubContentResponse) o;
    return Objects.equals(this.hubContentName, describeHubContentResponse.hubContentName) &&
        Objects.equals(this.hubContentArn, describeHubContentResponse.hubContentArn) &&
        Objects.equals(this.hubContentVersion, describeHubContentResponse.hubContentVersion) &&
        Objects.equals(this.hubContentType, describeHubContentResponse.hubContentType) &&
        Objects.equals(this.documentSchemaVersion, describeHubContentResponse.documentSchemaVersion) &&
        Objects.equals(this.hubName, describeHubContentResponse.hubName) &&
        Objects.equals(this.hubArn, describeHubContentResponse.hubArn) &&
        Objects.equals(this.hubContentDisplayName, describeHubContentResponse.hubContentDisplayName) &&
        Objects.equals(this.hubContentDescription, describeHubContentResponse.hubContentDescription) &&
        Objects.equals(this.hubContentMarkdown, describeHubContentResponse.hubContentMarkdown) &&
        Objects.equals(this.hubContentDocument, describeHubContentResponse.hubContentDocument) &&
        Objects.equals(this.hubContentSearchKeywords, describeHubContentResponse.hubContentSearchKeywords) &&
        Objects.equals(this.hubContentDependencies, describeHubContentResponse.hubContentDependencies) &&
        Objects.equals(this.hubContentStatus, describeHubContentResponse.hubContentStatus) &&
        Objects.equals(this.failureReason, describeHubContentResponse.failureReason) &&
        Objects.equals(this.creationTime, describeHubContentResponse.creationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hubContentName, hubContentArn, hubContentVersion, hubContentType, documentSchemaVersion, hubName, hubArn, hubContentDisplayName, hubContentDescription, hubContentMarkdown, hubContentDocument, hubContentSearchKeywords, hubContentDependencies, hubContentStatus, failureReason, creationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeHubContentResponse {\n");
    sb.append("    hubContentName: ").append(toIndentedString(hubContentName)).append("\n");
    sb.append("    hubContentArn: ").append(toIndentedString(hubContentArn)).append("\n");
    sb.append("    hubContentVersion: ").append(toIndentedString(hubContentVersion)).append("\n");
    sb.append("    hubContentType: ").append(toIndentedString(hubContentType)).append("\n");
    sb.append("    documentSchemaVersion: ").append(toIndentedString(documentSchemaVersion)).append("\n");
    sb.append("    hubName: ").append(toIndentedString(hubName)).append("\n");
    sb.append("    hubArn: ").append(toIndentedString(hubArn)).append("\n");
    sb.append("    hubContentDisplayName: ").append(toIndentedString(hubContentDisplayName)).append("\n");
    sb.append("    hubContentDescription: ").append(toIndentedString(hubContentDescription)).append("\n");
    sb.append("    hubContentMarkdown: ").append(toIndentedString(hubContentMarkdown)).append("\n");
    sb.append("    hubContentDocument: ").append(toIndentedString(hubContentDocument)).append("\n");
    sb.append("    hubContentSearchKeywords: ").append(toIndentedString(hubContentSearchKeywords)).append("\n");
    sb.append("    hubContentDependencies: ").append(toIndentedString(hubContentDependencies)).append("\n");
    sb.append("    hubContentStatus: ").append(toIndentedString(hubContentStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HubContentName");
    openapiFields.add("HubContentArn");
    openapiFields.add("HubContentVersion");
    openapiFields.add("HubContentType");
    openapiFields.add("DocumentSchemaVersion");
    openapiFields.add("HubName");
    openapiFields.add("HubArn");
    openapiFields.add("HubContentDisplayName");
    openapiFields.add("HubContentDescription");
    openapiFields.add("HubContentMarkdown");
    openapiFields.add("HubContentDocument");
    openapiFields.add("HubContentSearchKeywords");
    openapiFields.add("HubContentDependencies");
    openapiFields.add("HubContentStatus");
    openapiFields.add("FailureReason");
    openapiFields.add("CreationTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("HubContentName");
    openapiRequiredFields.add("HubContentArn");
    openapiRequiredFields.add("HubContentVersion");
    openapiRequiredFields.add("HubContentType");
    openapiRequiredFields.add("DocumentSchemaVersion");
    openapiRequiredFields.add("HubName");
    openapiRequiredFields.add("HubArn");
    openapiRequiredFields.add("HubContentDocument");
    openapiRequiredFields.add("HubContentStatus");
    openapiRequiredFields.add("CreationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeHubContentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeHubContentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeHubContentResponse is not found in the empty JSON string", DescribeHubContentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeHubContentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeHubContentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeHubContentResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `HubContentName`
      String.validateJsonElement(jsonObj.get("HubContentName"));
      // validate the required field `HubContentArn`
      String.validateJsonElement(jsonObj.get("HubContentArn"));
      // validate the required field `HubContentVersion`
      String.validateJsonElement(jsonObj.get("HubContentVersion"));
      // validate the required field `HubContentType`
      HubContentType.validateJsonElement(jsonObj.get("HubContentType"));
      // validate the required field `DocumentSchemaVersion`
      String.validateJsonElement(jsonObj.get("DocumentSchemaVersion"));
      // validate the required field `HubName`
      String.validateJsonElement(jsonObj.get("HubName"));
      // validate the required field `HubArn`
      String.validateJsonElement(jsonObj.get("HubArn"));
      // validate the optional field `HubContentDisplayName`
      if (jsonObj.get("HubContentDisplayName") != null && !jsonObj.get("HubContentDisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HubContentDisplayName"));
      }
      // validate the optional field `HubContentDescription`
      if (jsonObj.get("HubContentDescription") != null && !jsonObj.get("HubContentDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HubContentDescription"));
      }
      // validate the optional field `HubContentMarkdown`
      if (jsonObj.get("HubContentMarkdown") != null && !jsonObj.get("HubContentMarkdown").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HubContentMarkdown"));
      }
      // validate the required field `HubContentDocument`
      String.validateJsonElement(jsonObj.get("HubContentDocument"));
      // validate the optional field `HubContentSearchKeywords`
      if (jsonObj.get("HubContentSearchKeywords") != null && !jsonObj.get("HubContentSearchKeywords").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("HubContentSearchKeywords"));
      }
      // validate the optional field `HubContentDependencies`
      if (jsonObj.get("HubContentDependencies") != null && !jsonObj.get("HubContentDependencies").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("HubContentDependencies"));
      }
      // validate the required field `HubContentStatus`
      HubContentStatus.validateJsonElement(jsonObj.get("HubContentStatus"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeHubContentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeHubContentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeHubContentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeHubContentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeHubContentResponse>() {
           @Override
           public void write(JsonWriter out, DescribeHubContentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeHubContentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeHubContentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeHubContentResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeHubContentResponse
   */
  public static DescribeHubContentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeHubContentResponse.class);
  }

  /**
   * Convert an instance of DescribeHubContentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

