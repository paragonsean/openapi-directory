/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FeatureGroupLastUpdateStatus;
import org.openapitools.client.model.FeatureGroupStatus;
import org.openapitools.client.model.OfflineStoreConfig;
import org.openapitools.client.model.OfflineStoreStatus;
import org.openapitools.client.model.OnlineStoreConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FeatureGroup {
  public static final String SERIALIZED_NAME_FEATURE_GROUP_ARN = "FeatureGroupArn";
  @SerializedName(SERIALIZED_NAME_FEATURE_GROUP_ARN)
  private String featureGroupArn;

  public static final String SERIALIZED_NAME_FEATURE_GROUP_NAME = "FeatureGroupName";
  @SerializedName(SERIALIZED_NAME_FEATURE_GROUP_NAME)
  private String featureGroupName;

  public static final String SERIALIZED_NAME_RECORD_IDENTIFIER_FEATURE_NAME = "RecordIdentifierFeatureName";
  @SerializedName(SERIALIZED_NAME_RECORD_IDENTIFIER_FEATURE_NAME)
  private String recordIdentifierFeatureName;

  public static final String SERIALIZED_NAME_EVENT_TIME_FEATURE_NAME = "EventTimeFeatureName";
  @SerializedName(SERIALIZED_NAME_EVENT_TIME_FEATURE_NAME)
  private String eventTimeFeatureName;

  public static final String SERIALIZED_NAME_FEATURE_DEFINITIONS = "FeatureDefinitions";
  @SerializedName(SERIALIZED_NAME_FEATURE_DEFINITIONS)
  private List featureDefinitions;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_ONLINE_STORE_CONFIG = "OnlineStoreConfig";
  @SerializedName(SERIALIZED_NAME_ONLINE_STORE_CONFIG)
  private OnlineStoreConfig onlineStoreConfig;

  public static final String SERIALIZED_NAME_OFFLINE_STORE_CONFIG = "OfflineStoreConfig";
  @SerializedName(SERIALIZED_NAME_OFFLINE_STORE_CONFIG)
  private OfflineStoreConfig offlineStoreConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_FEATURE_GROUP_STATUS = "FeatureGroupStatus";
  @SerializedName(SERIALIZED_NAME_FEATURE_GROUP_STATUS)
  private FeatureGroupStatus featureGroupStatus;

  public static final String SERIALIZED_NAME_OFFLINE_STORE_STATUS = "OfflineStoreStatus";
  @SerializedName(SERIALIZED_NAME_OFFLINE_STORE_STATUS)
  private OfflineStoreStatus offlineStoreStatus;

  public static final String SERIALIZED_NAME_LAST_UPDATE_STATUS = "LastUpdateStatus";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_STATUS)
  private FeatureGroupLastUpdateStatus lastUpdateStatus;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public FeatureGroup() {
  }

  public FeatureGroup featureGroupArn(String featureGroupArn) {
    this.featureGroupArn = featureGroupArn;
    return this;
  }

  /**
   * Get featureGroupArn
   * @return featureGroupArn
   */
  @javax.annotation.Nullable
  public String getFeatureGroupArn() {
    return featureGroupArn;
  }

  public void setFeatureGroupArn(String featureGroupArn) {
    this.featureGroupArn = featureGroupArn;
  }


  public FeatureGroup featureGroupName(String featureGroupName) {
    this.featureGroupName = featureGroupName;
    return this;
  }

  /**
   * Get featureGroupName
   * @return featureGroupName
   */
  @javax.annotation.Nullable
  public String getFeatureGroupName() {
    return featureGroupName;
  }

  public void setFeatureGroupName(String featureGroupName) {
    this.featureGroupName = featureGroupName;
  }


  public FeatureGroup recordIdentifierFeatureName(String recordIdentifierFeatureName) {
    this.recordIdentifierFeatureName = recordIdentifierFeatureName;
    return this;
  }

  /**
   * Get recordIdentifierFeatureName
   * @return recordIdentifierFeatureName
   */
  @javax.annotation.Nullable
  public String getRecordIdentifierFeatureName() {
    return recordIdentifierFeatureName;
  }

  public void setRecordIdentifierFeatureName(String recordIdentifierFeatureName) {
    this.recordIdentifierFeatureName = recordIdentifierFeatureName;
  }


  public FeatureGroup eventTimeFeatureName(String eventTimeFeatureName) {
    this.eventTimeFeatureName = eventTimeFeatureName;
    return this;
  }

  /**
   * Get eventTimeFeatureName
   * @return eventTimeFeatureName
   */
  @javax.annotation.Nullable
  public String getEventTimeFeatureName() {
    return eventTimeFeatureName;
  }

  public void setEventTimeFeatureName(String eventTimeFeatureName) {
    this.eventTimeFeatureName = eventTimeFeatureName;
  }


  public FeatureGroup featureDefinitions(List featureDefinitions) {
    this.featureDefinitions = featureDefinitions;
    return this;
  }

  /**
   * Get featureDefinitions
   * @return featureDefinitions
   */
  @javax.annotation.Nullable
  public List getFeatureDefinitions() {
    return featureDefinitions;
  }

  public void setFeatureDefinitions(List featureDefinitions) {
    this.featureDefinitions = featureDefinitions;
  }


  public FeatureGroup creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public FeatureGroup lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public FeatureGroup onlineStoreConfig(OnlineStoreConfig onlineStoreConfig) {
    this.onlineStoreConfig = onlineStoreConfig;
    return this;
  }

  /**
   * Get onlineStoreConfig
   * @return onlineStoreConfig
   */
  @javax.annotation.Nullable
  public OnlineStoreConfig getOnlineStoreConfig() {
    return onlineStoreConfig;
  }

  public void setOnlineStoreConfig(OnlineStoreConfig onlineStoreConfig) {
    this.onlineStoreConfig = onlineStoreConfig;
  }


  public FeatureGroup offlineStoreConfig(OfflineStoreConfig offlineStoreConfig) {
    this.offlineStoreConfig = offlineStoreConfig;
    return this;
  }

  /**
   * Get offlineStoreConfig
   * @return offlineStoreConfig
   */
  @javax.annotation.Nullable
  public OfflineStoreConfig getOfflineStoreConfig() {
    return offlineStoreConfig;
  }

  public void setOfflineStoreConfig(OfflineStoreConfig offlineStoreConfig) {
    this.offlineStoreConfig = offlineStoreConfig;
  }


  public FeatureGroup roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public FeatureGroup featureGroupStatus(FeatureGroupStatus featureGroupStatus) {
    this.featureGroupStatus = featureGroupStatus;
    return this;
  }

  /**
   * Get featureGroupStatus
   * @return featureGroupStatus
   */
  @javax.annotation.Nullable
  public FeatureGroupStatus getFeatureGroupStatus() {
    return featureGroupStatus;
  }

  public void setFeatureGroupStatus(FeatureGroupStatus featureGroupStatus) {
    this.featureGroupStatus = featureGroupStatus;
  }


  public FeatureGroup offlineStoreStatus(OfflineStoreStatus offlineStoreStatus) {
    this.offlineStoreStatus = offlineStoreStatus;
    return this;
  }

  /**
   * Get offlineStoreStatus
   * @return offlineStoreStatus
   */
  @javax.annotation.Nullable
  public OfflineStoreStatus getOfflineStoreStatus() {
    return offlineStoreStatus;
  }

  public void setOfflineStoreStatus(OfflineStoreStatus offlineStoreStatus) {
    this.offlineStoreStatus = offlineStoreStatus;
  }


  public FeatureGroup lastUpdateStatus(FeatureGroupLastUpdateStatus lastUpdateStatus) {
    this.lastUpdateStatus = lastUpdateStatus;
    return this;
  }

  /**
   * Get lastUpdateStatus
   * @return lastUpdateStatus
   */
  @javax.annotation.Nullable
  public FeatureGroupLastUpdateStatus getLastUpdateStatus() {
    return lastUpdateStatus;
  }

  public void setLastUpdateStatus(FeatureGroupLastUpdateStatus lastUpdateStatus) {
    this.lastUpdateStatus = lastUpdateStatus;
  }


  public FeatureGroup failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public FeatureGroup description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public FeatureGroup tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureGroup featureGroup = (FeatureGroup) o;
    return Objects.equals(this.featureGroupArn, featureGroup.featureGroupArn) &&
        Objects.equals(this.featureGroupName, featureGroup.featureGroupName) &&
        Objects.equals(this.recordIdentifierFeatureName, featureGroup.recordIdentifierFeatureName) &&
        Objects.equals(this.eventTimeFeatureName, featureGroup.eventTimeFeatureName) &&
        Objects.equals(this.featureDefinitions, featureGroup.featureDefinitions) &&
        Objects.equals(this.creationTime, featureGroup.creationTime) &&
        Objects.equals(this.lastModifiedTime, featureGroup.lastModifiedTime) &&
        Objects.equals(this.onlineStoreConfig, featureGroup.onlineStoreConfig) &&
        Objects.equals(this.offlineStoreConfig, featureGroup.offlineStoreConfig) &&
        Objects.equals(this.roleArn, featureGroup.roleArn) &&
        Objects.equals(this.featureGroupStatus, featureGroup.featureGroupStatus) &&
        Objects.equals(this.offlineStoreStatus, featureGroup.offlineStoreStatus) &&
        Objects.equals(this.lastUpdateStatus, featureGroup.lastUpdateStatus) &&
        Objects.equals(this.failureReason, featureGroup.failureReason) &&
        Objects.equals(this.description, featureGroup.description) &&
        Objects.equals(this.tags, featureGroup.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureGroupArn, featureGroupName, recordIdentifierFeatureName, eventTimeFeatureName, featureDefinitions, creationTime, lastModifiedTime, onlineStoreConfig, offlineStoreConfig, roleArn, featureGroupStatus, offlineStoreStatus, lastUpdateStatus, failureReason, description, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureGroup {\n");
    sb.append("    featureGroupArn: ").append(toIndentedString(featureGroupArn)).append("\n");
    sb.append("    featureGroupName: ").append(toIndentedString(featureGroupName)).append("\n");
    sb.append("    recordIdentifierFeatureName: ").append(toIndentedString(recordIdentifierFeatureName)).append("\n");
    sb.append("    eventTimeFeatureName: ").append(toIndentedString(eventTimeFeatureName)).append("\n");
    sb.append("    featureDefinitions: ").append(toIndentedString(featureDefinitions)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    onlineStoreConfig: ").append(toIndentedString(onlineStoreConfig)).append("\n");
    sb.append("    offlineStoreConfig: ").append(toIndentedString(offlineStoreConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    featureGroupStatus: ").append(toIndentedString(featureGroupStatus)).append("\n");
    sb.append("    offlineStoreStatus: ").append(toIndentedString(offlineStoreStatus)).append("\n");
    sb.append("    lastUpdateStatus: ").append(toIndentedString(lastUpdateStatus)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FeatureGroupArn");
    openapiFields.add("FeatureGroupName");
    openapiFields.add("RecordIdentifierFeatureName");
    openapiFields.add("EventTimeFeatureName");
    openapiFields.add("FeatureDefinitions");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("OnlineStoreConfig");
    openapiFields.add("OfflineStoreConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("FeatureGroupStatus");
    openapiFields.add("OfflineStoreStatus");
    openapiFields.add("LastUpdateStatus");
    openapiFields.add("FailureReason");
    openapiFields.add("Description");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FeatureGroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FeatureGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FeatureGroup is not found in the empty JSON string", FeatureGroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FeatureGroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FeatureGroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `FeatureGroupArn`
      if (jsonObj.get("FeatureGroupArn") != null && !jsonObj.get("FeatureGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FeatureGroupArn"));
      }
      // validate the optional field `FeatureGroupName`
      if (jsonObj.get("FeatureGroupName") != null && !jsonObj.get("FeatureGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FeatureGroupName"));
      }
      // validate the optional field `RecordIdentifierFeatureName`
      if (jsonObj.get("RecordIdentifierFeatureName") != null && !jsonObj.get("RecordIdentifierFeatureName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RecordIdentifierFeatureName"));
      }
      // validate the optional field `EventTimeFeatureName`
      if (jsonObj.get("EventTimeFeatureName") != null && !jsonObj.get("EventTimeFeatureName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EventTimeFeatureName"));
      }
      // validate the optional field `FeatureDefinitions`
      if (jsonObj.get("FeatureDefinitions") != null && !jsonObj.get("FeatureDefinitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("FeatureDefinitions"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `OnlineStoreConfig`
      if (jsonObj.get("OnlineStoreConfig") != null && !jsonObj.get("OnlineStoreConfig").isJsonNull()) {
        OnlineStoreConfig.validateJsonElement(jsonObj.get("OnlineStoreConfig"));
      }
      // validate the optional field `OfflineStoreConfig`
      if (jsonObj.get("OfflineStoreConfig") != null && !jsonObj.get("OfflineStoreConfig").isJsonNull()) {
        OfflineStoreConfig.validateJsonElement(jsonObj.get("OfflineStoreConfig"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `FeatureGroupStatus`
      if (jsonObj.get("FeatureGroupStatus") != null && !jsonObj.get("FeatureGroupStatus").isJsonNull()) {
        FeatureGroupStatus.validateJsonElement(jsonObj.get("FeatureGroupStatus"));
      }
      // validate the optional field `OfflineStoreStatus`
      if (jsonObj.get("OfflineStoreStatus") != null && !jsonObj.get("OfflineStoreStatus").isJsonNull()) {
        OfflineStoreStatus.validateJsonElement(jsonObj.get("OfflineStoreStatus"));
      }
      // validate the optional field `LastUpdateStatus`
      if (jsonObj.get("LastUpdateStatus") != null && !jsonObj.get("LastUpdateStatus").isJsonNull()) {
        FeatureGroupLastUpdateStatus.validateJsonElement(jsonObj.get("LastUpdateStatus"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FeatureGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FeatureGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FeatureGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FeatureGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<FeatureGroup>() {
           @Override
           public void write(JsonWriter out, FeatureGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FeatureGroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FeatureGroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FeatureGroup
   * @throws IOException if the JSON string is invalid with respect to FeatureGroup
   */
  public static FeatureGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FeatureGroup.class);
  }

  /**
   * Convert an instance of FeatureGroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

