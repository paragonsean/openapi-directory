/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MonitoringExecutionSummary;
import org.openapitools.client.model.MonitoringScheduleConfig;
import org.openapitools.client.model.MonitoringType;
import org.openapitools.client.model.ScheduleStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A schedule for a model monitoring job. For information about model monitor, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html\&quot;&gt;Amazon SageMaker Model Monitor&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MonitoringSchedule {
  public static final String SERIALIZED_NAME_MONITORING_SCHEDULE_ARN = "MonitoringScheduleArn";
  @SerializedName(SERIALIZED_NAME_MONITORING_SCHEDULE_ARN)
  private String monitoringScheduleArn;

  public static final String SERIALIZED_NAME_MONITORING_SCHEDULE_NAME = "MonitoringScheduleName";
  @SerializedName(SERIALIZED_NAME_MONITORING_SCHEDULE_NAME)
  private String monitoringScheduleName;

  public static final String SERIALIZED_NAME_MONITORING_SCHEDULE_STATUS = "MonitoringScheduleStatus";
  @SerializedName(SERIALIZED_NAME_MONITORING_SCHEDULE_STATUS)
  private ScheduleStatus monitoringScheduleStatus;

  public static final String SERIALIZED_NAME_MONITORING_TYPE = "MonitoringType";
  @SerializedName(SERIALIZED_NAME_MONITORING_TYPE)
  private MonitoringType monitoringType;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_MONITORING_SCHEDULE_CONFIG = "MonitoringScheduleConfig";
  @SerializedName(SERIALIZED_NAME_MONITORING_SCHEDULE_CONFIG)
  private MonitoringScheduleConfig monitoringScheduleConfig;

  public static final String SERIALIZED_NAME_ENDPOINT_NAME = "EndpointName";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_NAME)
  private String endpointName;

  public static final String SERIALIZED_NAME_LAST_MONITORING_EXECUTION_SUMMARY = "LastMonitoringExecutionSummary";
  @SerializedName(SERIALIZED_NAME_LAST_MONITORING_EXECUTION_SUMMARY)
  private MonitoringExecutionSummary lastMonitoringExecutionSummary;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public MonitoringSchedule() {
  }

  public MonitoringSchedule monitoringScheduleArn(String monitoringScheduleArn) {
    this.monitoringScheduleArn = monitoringScheduleArn;
    return this;
  }

  /**
   * Get monitoringScheduleArn
   * @return monitoringScheduleArn
   */
  @javax.annotation.Nullable
  public String getMonitoringScheduleArn() {
    return monitoringScheduleArn;
  }

  public void setMonitoringScheduleArn(String monitoringScheduleArn) {
    this.monitoringScheduleArn = monitoringScheduleArn;
  }


  public MonitoringSchedule monitoringScheduleName(String monitoringScheduleName) {
    this.monitoringScheduleName = monitoringScheduleName;
    return this;
  }

  /**
   * Get monitoringScheduleName
   * @return monitoringScheduleName
   */
  @javax.annotation.Nullable
  public String getMonitoringScheduleName() {
    return monitoringScheduleName;
  }

  public void setMonitoringScheduleName(String monitoringScheduleName) {
    this.monitoringScheduleName = monitoringScheduleName;
  }


  public MonitoringSchedule monitoringScheduleStatus(ScheduleStatus monitoringScheduleStatus) {
    this.monitoringScheduleStatus = monitoringScheduleStatus;
    return this;
  }

  /**
   * Get monitoringScheduleStatus
   * @return monitoringScheduleStatus
   */
  @javax.annotation.Nullable
  public ScheduleStatus getMonitoringScheduleStatus() {
    return monitoringScheduleStatus;
  }

  public void setMonitoringScheduleStatus(ScheduleStatus monitoringScheduleStatus) {
    this.monitoringScheduleStatus = monitoringScheduleStatus;
  }


  public MonitoringSchedule monitoringType(MonitoringType monitoringType) {
    this.monitoringType = monitoringType;
    return this;
  }

  /**
   * Get monitoringType
   * @return monitoringType
   */
  @javax.annotation.Nullable
  public MonitoringType getMonitoringType() {
    return monitoringType;
  }

  public void setMonitoringType(MonitoringType monitoringType) {
    this.monitoringType = monitoringType;
  }


  public MonitoringSchedule failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public MonitoringSchedule creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public MonitoringSchedule lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public MonitoringSchedule monitoringScheduleConfig(MonitoringScheduleConfig monitoringScheduleConfig) {
    this.monitoringScheduleConfig = monitoringScheduleConfig;
    return this;
  }

  /**
   * Get monitoringScheduleConfig
   * @return monitoringScheduleConfig
   */
  @javax.annotation.Nullable
  public MonitoringScheduleConfig getMonitoringScheduleConfig() {
    return monitoringScheduleConfig;
  }

  public void setMonitoringScheduleConfig(MonitoringScheduleConfig monitoringScheduleConfig) {
    this.monitoringScheduleConfig = monitoringScheduleConfig;
  }


  public MonitoringSchedule endpointName(String endpointName) {
    this.endpointName = endpointName;
    return this;
  }

  /**
   * Get endpointName
   * @return endpointName
   */
  @javax.annotation.Nullable
  public String getEndpointName() {
    return endpointName;
  }

  public void setEndpointName(String endpointName) {
    this.endpointName = endpointName;
  }


  public MonitoringSchedule lastMonitoringExecutionSummary(MonitoringExecutionSummary lastMonitoringExecutionSummary) {
    this.lastMonitoringExecutionSummary = lastMonitoringExecutionSummary;
    return this;
  }

  /**
   * Get lastMonitoringExecutionSummary
   * @return lastMonitoringExecutionSummary
   */
  @javax.annotation.Nullable
  public MonitoringExecutionSummary getLastMonitoringExecutionSummary() {
    return lastMonitoringExecutionSummary;
  }

  public void setLastMonitoringExecutionSummary(MonitoringExecutionSummary lastMonitoringExecutionSummary) {
    this.lastMonitoringExecutionSummary = lastMonitoringExecutionSummary;
  }


  public MonitoringSchedule tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitoringSchedule monitoringSchedule = (MonitoringSchedule) o;
    return Objects.equals(this.monitoringScheduleArn, monitoringSchedule.monitoringScheduleArn) &&
        Objects.equals(this.monitoringScheduleName, monitoringSchedule.monitoringScheduleName) &&
        Objects.equals(this.monitoringScheduleStatus, monitoringSchedule.monitoringScheduleStatus) &&
        Objects.equals(this.monitoringType, monitoringSchedule.monitoringType) &&
        Objects.equals(this.failureReason, monitoringSchedule.failureReason) &&
        Objects.equals(this.creationTime, monitoringSchedule.creationTime) &&
        Objects.equals(this.lastModifiedTime, monitoringSchedule.lastModifiedTime) &&
        Objects.equals(this.monitoringScheduleConfig, monitoringSchedule.monitoringScheduleConfig) &&
        Objects.equals(this.endpointName, monitoringSchedule.endpointName) &&
        Objects.equals(this.lastMonitoringExecutionSummary, monitoringSchedule.lastMonitoringExecutionSummary) &&
        Objects.equals(this.tags, monitoringSchedule.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(monitoringScheduleArn, monitoringScheduleName, monitoringScheduleStatus, monitoringType, failureReason, creationTime, lastModifiedTime, monitoringScheduleConfig, endpointName, lastMonitoringExecutionSummary, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitoringSchedule {\n");
    sb.append("    monitoringScheduleArn: ").append(toIndentedString(monitoringScheduleArn)).append("\n");
    sb.append("    monitoringScheduleName: ").append(toIndentedString(monitoringScheduleName)).append("\n");
    sb.append("    monitoringScheduleStatus: ").append(toIndentedString(monitoringScheduleStatus)).append("\n");
    sb.append("    monitoringType: ").append(toIndentedString(monitoringType)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    monitoringScheduleConfig: ").append(toIndentedString(monitoringScheduleConfig)).append("\n");
    sb.append("    endpointName: ").append(toIndentedString(endpointName)).append("\n");
    sb.append("    lastMonitoringExecutionSummary: ").append(toIndentedString(lastMonitoringExecutionSummary)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MonitoringScheduleArn");
    openapiFields.add("MonitoringScheduleName");
    openapiFields.add("MonitoringScheduleStatus");
    openapiFields.add("MonitoringType");
    openapiFields.add("FailureReason");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("MonitoringScheduleConfig");
    openapiFields.add("EndpointName");
    openapiFields.add("LastMonitoringExecutionSummary");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MonitoringSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MonitoringSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MonitoringSchedule is not found in the empty JSON string", MonitoringSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MonitoringSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MonitoringSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MonitoringScheduleArn`
      if (jsonObj.get("MonitoringScheduleArn") != null && !jsonObj.get("MonitoringScheduleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitoringScheduleArn"));
      }
      // validate the optional field `MonitoringScheduleName`
      if (jsonObj.get("MonitoringScheduleName") != null && !jsonObj.get("MonitoringScheduleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MonitoringScheduleName"));
      }
      // validate the optional field `MonitoringScheduleStatus`
      if (jsonObj.get("MonitoringScheduleStatus") != null && !jsonObj.get("MonitoringScheduleStatus").isJsonNull()) {
        ScheduleStatus.validateJsonElement(jsonObj.get("MonitoringScheduleStatus"));
      }
      // validate the optional field `MonitoringType`
      if (jsonObj.get("MonitoringType") != null && !jsonObj.get("MonitoringType").isJsonNull()) {
        MonitoringType.validateJsonElement(jsonObj.get("MonitoringType"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `MonitoringScheduleConfig`
      if (jsonObj.get("MonitoringScheduleConfig") != null && !jsonObj.get("MonitoringScheduleConfig").isJsonNull()) {
        MonitoringScheduleConfig.validateJsonElement(jsonObj.get("MonitoringScheduleConfig"));
      }
      // validate the optional field `EndpointName`
      if (jsonObj.get("EndpointName") != null && !jsonObj.get("EndpointName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointName"));
      }
      // validate the optional field `LastMonitoringExecutionSummary`
      if (jsonObj.get("LastMonitoringExecutionSummary") != null && !jsonObj.get("LastMonitoringExecutionSummary").isJsonNull()) {
        MonitoringExecutionSummary.validateJsonElement(jsonObj.get("LastMonitoringExecutionSummary"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MonitoringSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MonitoringSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MonitoringSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MonitoringSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<MonitoringSchedule>() {
           @Override
           public void write(JsonWriter out, MonitoringSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MonitoringSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MonitoringSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MonitoringSchedule
   * @throws IOException if the JSON string is invalid with respect to MonitoringSchedule
   */
  public static MonitoringSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MonitoringSchedule.class);
  }

  /**
   * Convert an instance of MonitoringSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

