/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateNotebookInstanceInputInstanceMetadataServiceConfiguration;
import org.openapitools.client.model.InstanceType;
import org.openapitools.client.model.RootAccess;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateNotebookInstanceInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateNotebookInstanceInput {
  public static final String SERIALIZED_NAME_NOTEBOOK_INSTANCE_NAME = "NotebookInstanceName";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_INSTANCE_NAME)
  private String notebookInstanceName;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private InstanceType instanceType;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_LIFECYCLE_CONFIG_NAME = "LifecycleConfigName";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE_CONFIG_NAME)
  private String lifecycleConfigName;

  public static final String SERIALIZED_NAME_DISASSOCIATE_LIFECYCLE_CONFIG = "DisassociateLifecycleConfig";
  @SerializedName(SERIALIZED_NAME_DISASSOCIATE_LIFECYCLE_CONFIG)
  private Boolean disassociateLifecycleConfig;

  public static final String SERIALIZED_NAME_VOLUME_SIZE_IN_G_B = "VolumeSizeInGB";
  @SerializedName(SERIALIZED_NAME_VOLUME_SIZE_IN_G_B)
  private Integer volumeSizeInGB;

  public static final String SERIALIZED_NAME_DEFAULT_CODE_REPOSITORY = "DefaultCodeRepository";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CODE_REPOSITORY)
  private String defaultCodeRepository;

  public static final String SERIALIZED_NAME_ADDITIONAL_CODE_REPOSITORIES = "AdditionalCodeRepositories";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CODE_REPOSITORIES)
  private List additionalCodeRepositories;

  public static final String SERIALIZED_NAME_ACCELERATOR_TYPES = "AcceleratorTypes";
  @SerializedName(SERIALIZED_NAME_ACCELERATOR_TYPES)
  private List acceleratorTypes;

  public static final String SERIALIZED_NAME_DISASSOCIATE_ACCELERATOR_TYPES = "DisassociateAcceleratorTypes";
  @SerializedName(SERIALIZED_NAME_DISASSOCIATE_ACCELERATOR_TYPES)
  private Boolean disassociateAcceleratorTypes;

  public static final String SERIALIZED_NAME_DISASSOCIATE_DEFAULT_CODE_REPOSITORY = "DisassociateDefaultCodeRepository";
  @SerializedName(SERIALIZED_NAME_DISASSOCIATE_DEFAULT_CODE_REPOSITORY)
  private Boolean disassociateDefaultCodeRepository;

  public static final String SERIALIZED_NAME_DISASSOCIATE_ADDITIONAL_CODE_REPOSITORIES = "DisassociateAdditionalCodeRepositories";
  @SerializedName(SERIALIZED_NAME_DISASSOCIATE_ADDITIONAL_CODE_REPOSITORIES)
  private Boolean disassociateAdditionalCodeRepositories;

  public static final String SERIALIZED_NAME_ROOT_ACCESS = "RootAccess";
  @SerializedName(SERIALIZED_NAME_ROOT_ACCESS)
  private RootAccess rootAccess;

  public static final String SERIALIZED_NAME_INSTANCE_METADATA_SERVICE_CONFIGURATION = "InstanceMetadataServiceConfiguration";
  @SerializedName(SERIALIZED_NAME_INSTANCE_METADATA_SERVICE_CONFIGURATION)
  private CreateNotebookInstanceInputInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration;

  public UpdateNotebookInstanceInput() {
  }

  public UpdateNotebookInstanceInput notebookInstanceName(String notebookInstanceName) {
    this.notebookInstanceName = notebookInstanceName;
    return this;
  }

  /**
   * Get notebookInstanceName
   * @return notebookInstanceName
   */
  @javax.annotation.Nonnull
  public String getNotebookInstanceName() {
    return notebookInstanceName;
  }

  public void setNotebookInstanceName(String notebookInstanceName) {
    this.notebookInstanceName = notebookInstanceName;
  }


  public UpdateNotebookInstanceInput instanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public InstanceType getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(InstanceType instanceType) {
    this.instanceType = instanceType;
  }


  public UpdateNotebookInstanceInput roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public UpdateNotebookInstanceInput lifecycleConfigName(String lifecycleConfigName) {
    this.lifecycleConfigName = lifecycleConfigName;
    return this;
  }

  /**
   * Get lifecycleConfigName
   * @return lifecycleConfigName
   */
  @javax.annotation.Nullable
  public String getLifecycleConfigName() {
    return lifecycleConfigName;
  }

  public void setLifecycleConfigName(String lifecycleConfigName) {
    this.lifecycleConfigName = lifecycleConfigName;
  }


  public UpdateNotebookInstanceInput disassociateLifecycleConfig(Boolean disassociateLifecycleConfig) {
    this.disassociateLifecycleConfig = disassociateLifecycleConfig;
    return this;
  }

  /**
   * Get disassociateLifecycleConfig
   * @return disassociateLifecycleConfig
   */
  @javax.annotation.Nullable
  public Boolean getDisassociateLifecycleConfig() {
    return disassociateLifecycleConfig;
  }

  public void setDisassociateLifecycleConfig(Boolean disassociateLifecycleConfig) {
    this.disassociateLifecycleConfig = disassociateLifecycleConfig;
  }


  public UpdateNotebookInstanceInput volumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
    return this;
  }

  /**
   * Get volumeSizeInGB
   * @return volumeSizeInGB
   */
  @javax.annotation.Nullable
  public Integer getVolumeSizeInGB() {
    return volumeSizeInGB;
  }

  public void setVolumeSizeInGB(Integer volumeSizeInGB) {
    this.volumeSizeInGB = volumeSizeInGB;
  }


  public UpdateNotebookInstanceInput defaultCodeRepository(String defaultCodeRepository) {
    this.defaultCodeRepository = defaultCodeRepository;
    return this;
  }

  /**
   * Get defaultCodeRepository
   * @return defaultCodeRepository
   */
  @javax.annotation.Nullable
  public String getDefaultCodeRepository() {
    return defaultCodeRepository;
  }

  public void setDefaultCodeRepository(String defaultCodeRepository) {
    this.defaultCodeRepository = defaultCodeRepository;
  }


  public UpdateNotebookInstanceInput additionalCodeRepositories(List additionalCodeRepositories) {
    this.additionalCodeRepositories = additionalCodeRepositories;
    return this;
  }

  /**
   * Get additionalCodeRepositories
   * @return additionalCodeRepositories
   */
  @javax.annotation.Nullable
  public List getAdditionalCodeRepositories() {
    return additionalCodeRepositories;
  }

  public void setAdditionalCodeRepositories(List additionalCodeRepositories) {
    this.additionalCodeRepositories = additionalCodeRepositories;
  }


  public UpdateNotebookInstanceInput acceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
    return this;
  }

  /**
   * Get acceleratorTypes
   * @return acceleratorTypes
   */
  @javax.annotation.Nullable
  public List getAcceleratorTypes() {
    return acceleratorTypes;
  }

  public void setAcceleratorTypes(List acceleratorTypes) {
    this.acceleratorTypes = acceleratorTypes;
  }


  public UpdateNotebookInstanceInput disassociateAcceleratorTypes(Boolean disassociateAcceleratorTypes) {
    this.disassociateAcceleratorTypes = disassociateAcceleratorTypes;
    return this;
  }

  /**
   * Get disassociateAcceleratorTypes
   * @return disassociateAcceleratorTypes
   */
  @javax.annotation.Nullable
  public Boolean getDisassociateAcceleratorTypes() {
    return disassociateAcceleratorTypes;
  }

  public void setDisassociateAcceleratorTypes(Boolean disassociateAcceleratorTypes) {
    this.disassociateAcceleratorTypes = disassociateAcceleratorTypes;
  }


  public UpdateNotebookInstanceInput disassociateDefaultCodeRepository(Boolean disassociateDefaultCodeRepository) {
    this.disassociateDefaultCodeRepository = disassociateDefaultCodeRepository;
    return this;
  }

  /**
   * Get disassociateDefaultCodeRepository
   * @return disassociateDefaultCodeRepository
   */
  @javax.annotation.Nullable
  public Boolean getDisassociateDefaultCodeRepository() {
    return disassociateDefaultCodeRepository;
  }

  public void setDisassociateDefaultCodeRepository(Boolean disassociateDefaultCodeRepository) {
    this.disassociateDefaultCodeRepository = disassociateDefaultCodeRepository;
  }


  public UpdateNotebookInstanceInput disassociateAdditionalCodeRepositories(Boolean disassociateAdditionalCodeRepositories) {
    this.disassociateAdditionalCodeRepositories = disassociateAdditionalCodeRepositories;
    return this;
  }

  /**
   * Get disassociateAdditionalCodeRepositories
   * @return disassociateAdditionalCodeRepositories
   */
  @javax.annotation.Nullable
  public Boolean getDisassociateAdditionalCodeRepositories() {
    return disassociateAdditionalCodeRepositories;
  }

  public void setDisassociateAdditionalCodeRepositories(Boolean disassociateAdditionalCodeRepositories) {
    this.disassociateAdditionalCodeRepositories = disassociateAdditionalCodeRepositories;
  }


  public UpdateNotebookInstanceInput rootAccess(RootAccess rootAccess) {
    this.rootAccess = rootAccess;
    return this;
  }

  /**
   * Get rootAccess
   * @return rootAccess
   */
  @javax.annotation.Nullable
  public RootAccess getRootAccess() {
    return rootAccess;
  }

  public void setRootAccess(RootAccess rootAccess) {
    this.rootAccess = rootAccess;
  }


  public UpdateNotebookInstanceInput instanceMetadataServiceConfiguration(CreateNotebookInstanceInputInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration) {
    this.instanceMetadataServiceConfiguration = instanceMetadataServiceConfiguration;
    return this;
  }

  /**
   * Get instanceMetadataServiceConfiguration
   * @return instanceMetadataServiceConfiguration
   */
  @javax.annotation.Nullable
  public CreateNotebookInstanceInputInstanceMetadataServiceConfiguration getInstanceMetadataServiceConfiguration() {
    return instanceMetadataServiceConfiguration;
  }

  public void setInstanceMetadataServiceConfiguration(CreateNotebookInstanceInputInstanceMetadataServiceConfiguration instanceMetadataServiceConfiguration) {
    this.instanceMetadataServiceConfiguration = instanceMetadataServiceConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNotebookInstanceInput updateNotebookInstanceInput = (UpdateNotebookInstanceInput) o;
    return Objects.equals(this.notebookInstanceName, updateNotebookInstanceInput.notebookInstanceName) &&
        Objects.equals(this.instanceType, updateNotebookInstanceInput.instanceType) &&
        Objects.equals(this.roleArn, updateNotebookInstanceInput.roleArn) &&
        Objects.equals(this.lifecycleConfigName, updateNotebookInstanceInput.lifecycleConfigName) &&
        Objects.equals(this.disassociateLifecycleConfig, updateNotebookInstanceInput.disassociateLifecycleConfig) &&
        Objects.equals(this.volumeSizeInGB, updateNotebookInstanceInput.volumeSizeInGB) &&
        Objects.equals(this.defaultCodeRepository, updateNotebookInstanceInput.defaultCodeRepository) &&
        Objects.equals(this.additionalCodeRepositories, updateNotebookInstanceInput.additionalCodeRepositories) &&
        Objects.equals(this.acceleratorTypes, updateNotebookInstanceInput.acceleratorTypes) &&
        Objects.equals(this.disassociateAcceleratorTypes, updateNotebookInstanceInput.disassociateAcceleratorTypes) &&
        Objects.equals(this.disassociateDefaultCodeRepository, updateNotebookInstanceInput.disassociateDefaultCodeRepository) &&
        Objects.equals(this.disassociateAdditionalCodeRepositories, updateNotebookInstanceInput.disassociateAdditionalCodeRepositories) &&
        Objects.equals(this.rootAccess, updateNotebookInstanceInput.rootAccess) &&
        Objects.equals(this.instanceMetadataServiceConfiguration, updateNotebookInstanceInput.instanceMetadataServiceConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notebookInstanceName, instanceType, roleArn, lifecycleConfigName, disassociateLifecycleConfig, volumeSizeInGB, defaultCodeRepository, additionalCodeRepositories, acceleratorTypes, disassociateAcceleratorTypes, disassociateDefaultCodeRepository, disassociateAdditionalCodeRepositories, rootAccess, instanceMetadataServiceConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNotebookInstanceInput {\n");
    sb.append("    notebookInstanceName: ").append(toIndentedString(notebookInstanceName)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    lifecycleConfigName: ").append(toIndentedString(lifecycleConfigName)).append("\n");
    sb.append("    disassociateLifecycleConfig: ").append(toIndentedString(disassociateLifecycleConfig)).append("\n");
    sb.append("    volumeSizeInGB: ").append(toIndentedString(volumeSizeInGB)).append("\n");
    sb.append("    defaultCodeRepository: ").append(toIndentedString(defaultCodeRepository)).append("\n");
    sb.append("    additionalCodeRepositories: ").append(toIndentedString(additionalCodeRepositories)).append("\n");
    sb.append("    acceleratorTypes: ").append(toIndentedString(acceleratorTypes)).append("\n");
    sb.append("    disassociateAcceleratorTypes: ").append(toIndentedString(disassociateAcceleratorTypes)).append("\n");
    sb.append("    disassociateDefaultCodeRepository: ").append(toIndentedString(disassociateDefaultCodeRepository)).append("\n");
    sb.append("    disassociateAdditionalCodeRepositories: ").append(toIndentedString(disassociateAdditionalCodeRepositories)).append("\n");
    sb.append("    rootAccess: ").append(toIndentedString(rootAccess)).append("\n");
    sb.append("    instanceMetadataServiceConfiguration: ").append(toIndentedString(instanceMetadataServiceConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("NotebookInstanceName");
    openapiFields.add("InstanceType");
    openapiFields.add("RoleArn");
    openapiFields.add("LifecycleConfigName");
    openapiFields.add("DisassociateLifecycleConfig");
    openapiFields.add("VolumeSizeInGB");
    openapiFields.add("DefaultCodeRepository");
    openapiFields.add("AdditionalCodeRepositories");
    openapiFields.add("AcceleratorTypes");
    openapiFields.add("DisassociateAcceleratorTypes");
    openapiFields.add("DisassociateDefaultCodeRepository");
    openapiFields.add("DisassociateAdditionalCodeRepositories");
    openapiFields.add("RootAccess");
    openapiFields.add("InstanceMetadataServiceConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("NotebookInstanceName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateNotebookInstanceInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateNotebookInstanceInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateNotebookInstanceInput is not found in the empty JSON string", UpdateNotebookInstanceInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateNotebookInstanceInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateNotebookInstanceInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateNotebookInstanceInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `NotebookInstanceName`
      String.validateJsonElement(jsonObj.get("NotebookInstanceName"));
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        InstanceType.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `LifecycleConfigName`
      if (jsonObj.get("LifecycleConfigName") != null && !jsonObj.get("LifecycleConfigName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LifecycleConfigName"));
      }
      // validate the optional field `DisassociateLifecycleConfig`
      if (jsonObj.get("DisassociateLifecycleConfig") != null && !jsonObj.get("DisassociateLifecycleConfig").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisassociateLifecycleConfig"));
      }
      // validate the optional field `VolumeSizeInGB`
      if (jsonObj.get("VolumeSizeInGB") != null && !jsonObj.get("VolumeSizeInGB").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("VolumeSizeInGB"));
      }
      // validate the optional field `DefaultCodeRepository`
      if (jsonObj.get("DefaultCodeRepository") != null && !jsonObj.get("DefaultCodeRepository").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultCodeRepository"));
      }
      // validate the optional field `AdditionalCodeRepositories`
      if (jsonObj.get("AdditionalCodeRepositories") != null && !jsonObj.get("AdditionalCodeRepositories").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdditionalCodeRepositories"));
      }
      // validate the optional field `AcceleratorTypes`
      if (jsonObj.get("AcceleratorTypes") != null && !jsonObj.get("AcceleratorTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AcceleratorTypes"));
      }
      // validate the optional field `DisassociateAcceleratorTypes`
      if (jsonObj.get("DisassociateAcceleratorTypes") != null && !jsonObj.get("DisassociateAcceleratorTypes").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisassociateAcceleratorTypes"));
      }
      // validate the optional field `DisassociateDefaultCodeRepository`
      if (jsonObj.get("DisassociateDefaultCodeRepository") != null && !jsonObj.get("DisassociateDefaultCodeRepository").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisassociateDefaultCodeRepository"));
      }
      // validate the optional field `DisassociateAdditionalCodeRepositories`
      if (jsonObj.get("DisassociateAdditionalCodeRepositories") != null && !jsonObj.get("DisassociateAdditionalCodeRepositories").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DisassociateAdditionalCodeRepositories"));
      }
      // validate the optional field `RootAccess`
      if (jsonObj.get("RootAccess") != null && !jsonObj.get("RootAccess").isJsonNull()) {
        RootAccess.validateJsonElement(jsonObj.get("RootAccess"));
      }
      // validate the optional field `InstanceMetadataServiceConfiguration`
      if (jsonObj.get("InstanceMetadataServiceConfiguration") != null && !jsonObj.get("InstanceMetadataServiceConfiguration").isJsonNull()) {
        CreateNotebookInstanceInputInstanceMetadataServiceConfiguration.validateJsonElement(jsonObj.get("InstanceMetadataServiceConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateNotebookInstanceInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateNotebookInstanceInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateNotebookInstanceInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateNotebookInstanceInput.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateNotebookInstanceInput>() {
           @Override
           public void write(JsonWriter out, UpdateNotebookInstanceInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateNotebookInstanceInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateNotebookInstanceInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateNotebookInstanceInput
   * @throws IOException if the JSON string is invalid with respect to UpdateNotebookInstanceInput
   */
  public static UpdateNotebookInstanceInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateNotebookInstanceInput.class);
  }

  /**
   * Convert an instance of UpdateNotebookInstanceInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

