/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ClarifyTextLanguage
 */
@JsonAdapter(ClarifyTextLanguage.Adapter.class)
public enum ClarifyTextLanguage {
  
  AF("af"),
  
  SQ("sq"),
  
  AR("ar"),
  
  HY("hy"),
  
  EU("eu"),
  
  BN("bn"),
  
  BG("bg"),
  
  CA("ca"),
  
  ZH("zh"),
  
  HR("hr"),
  
  CS("cs"),
  
  DA("da"),
  
  NL("nl"),
  
  EN("en"),
  
  ET("et"),
  
  FI("fi"),
  
  FR("fr"),
  
  DE("de"),
  
  EL("el"),
  
  GU("gu"),
  
  HE("he"),
  
  HI("hi"),
  
  HU("hu"),
  
  IS("is"),
  
  ID("id"),
  
  GA("ga"),
  
  IT("it"),
  
  KN("kn"),
  
  KY("ky"),
  
  LV("lv"),
  
  LT("lt"),
  
  LB("lb"),
  
  MK("mk"),
  
  ML("ml"),
  
  MR("mr"),
  
  NE("ne"),
  
  NB("nb"),
  
  FA("fa"),
  
  PL("pl"),
  
  PT("pt"),
  
  RO("ro"),
  
  RU("ru"),
  
  SA("sa"),
  
  SR("sr"),
  
  TN("tn"),
  
  SI("si"),
  
  SK("sk"),
  
  SL("sl"),
  
  ES("es"),
  
  SV("sv"),
  
  TL("tl"),
  
  TA("ta"),
  
  TT("tt"),
  
  TE("te"),
  
  TR("tr"),
  
  UK("uk"),
  
  UR("ur"),
  
  YO("yo"),
  
  LIJ("lij"),
  
  XX("xx");

  private String value;

  ClarifyTextLanguage(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ClarifyTextLanguage fromValue(String value) {
    for (ClarifyTextLanguage b : ClarifyTextLanguage.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ClarifyTextLanguage> {
    @Override
    public void write(final JsonWriter jsonWriter, final ClarifyTextLanguage enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ClarifyTextLanguage read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ClarifyTextLanguage.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ClarifyTextLanguage.fromValue(value);
  }
}

