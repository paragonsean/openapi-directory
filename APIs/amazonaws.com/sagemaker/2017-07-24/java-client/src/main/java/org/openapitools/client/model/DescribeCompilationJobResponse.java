/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CompilationJobStatus;
import org.openapitools.client.model.CreateCompilationJobRequestStoppingCondition;
import org.openapitools.client.model.CreateCompilationJobRequestVpcConfig;
import org.openapitools.client.model.DescribeCompilationJobResponseInputConfig;
import org.openapitools.client.model.DescribeCompilationJobResponseModelArtifacts;
import org.openapitools.client.model.DescribeCompilationJobResponseModelDigests;
import org.openapitools.client.model.DescribeCompilationJobResponseOutputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeCompilationJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeCompilationJobResponse {
  public static final String SERIALIZED_NAME_COMPILATION_JOB_NAME = "CompilationJobName";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_NAME)
  private String compilationJobName;

  public static final String SERIALIZED_NAME_COMPILATION_JOB_ARN = "CompilationJobArn";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_ARN)
  private String compilationJobArn;

  public static final String SERIALIZED_NAME_COMPILATION_JOB_STATUS = "CompilationJobStatus";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_STATUS)
  private CompilationJobStatus compilationJobStatus;

  public static final String SERIALIZED_NAME_COMPILATION_START_TIME = "CompilationStartTime";
  @SerializedName(SERIALIZED_NAME_COMPILATION_START_TIME)
  private OffsetDateTime compilationStartTime;

  public static final String SERIALIZED_NAME_COMPILATION_END_TIME = "CompilationEndTime";
  @SerializedName(SERIALIZED_NAME_COMPILATION_END_TIME)
  private OffsetDateTime compilationEndTime;

  public static final String SERIALIZED_NAME_STOPPING_CONDITION = "StoppingCondition";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITION)
  private CreateCompilationJobRequestStoppingCondition stoppingCondition;

  public static final String SERIALIZED_NAME_INFERENCE_IMAGE = "InferenceImage";
  @SerializedName(SERIALIZED_NAME_INFERENCE_IMAGE)
  private String inferenceImage;

  public static final String SERIALIZED_NAME_MODEL_PACKAGE_VERSION_ARN = "ModelPackageVersionArn";
  @SerializedName(SERIALIZED_NAME_MODEL_PACKAGE_VERSION_ARN)
  private String modelPackageVersionArn;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_MODEL_ARTIFACTS = "ModelArtifacts";
  @SerializedName(SERIALIZED_NAME_MODEL_ARTIFACTS)
  private DescribeCompilationJobResponseModelArtifacts modelArtifacts;

  public static final String SERIALIZED_NAME_MODEL_DIGESTS = "ModelDigests";
  @SerializedName(SERIALIZED_NAME_MODEL_DIGESTS)
  private DescribeCompilationJobResponseModelDigests modelDigests;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_INPUT_CONFIG = "InputConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_CONFIG)
  private DescribeCompilationJobResponseInputConfig inputConfig;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "OutputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private DescribeCompilationJobResponseOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "VpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private CreateCompilationJobRequestVpcConfig vpcConfig;

  public DescribeCompilationJobResponse() {
  }

  public DescribeCompilationJobResponse compilationJobName(String compilationJobName) {
    this.compilationJobName = compilationJobName;
    return this;
  }

  /**
   * Get compilationJobName
   * @return compilationJobName
   */
  @javax.annotation.Nonnull
  public String getCompilationJobName() {
    return compilationJobName;
  }

  public void setCompilationJobName(String compilationJobName) {
    this.compilationJobName = compilationJobName;
  }


  public DescribeCompilationJobResponse compilationJobArn(String compilationJobArn) {
    this.compilationJobArn = compilationJobArn;
    return this;
  }

  /**
   * Get compilationJobArn
   * @return compilationJobArn
   */
  @javax.annotation.Nonnull
  public String getCompilationJobArn() {
    return compilationJobArn;
  }

  public void setCompilationJobArn(String compilationJobArn) {
    this.compilationJobArn = compilationJobArn;
  }


  public DescribeCompilationJobResponse compilationJobStatus(CompilationJobStatus compilationJobStatus) {
    this.compilationJobStatus = compilationJobStatus;
    return this;
  }

  /**
   * Get compilationJobStatus
   * @return compilationJobStatus
   */
  @javax.annotation.Nonnull
  public CompilationJobStatus getCompilationJobStatus() {
    return compilationJobStatus;
  }

  public void setCompilationJobStatus(CompilationJobStatus compilationJobStatus) {
    this.compilationJobStatus = compilationJobStatus;
  }


  public DescribeCompilationJobResponse compilationStartTime(OffsetDateTime compilationStartTime) {
    this.compilationStartTime = compilationStartTime;
    return this;
  }

  /**
   * Get compilationStartTime
   * @return compilationStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompilationStartTime() {
    return compilationStartTime;
  }

  public void setCompilationStartTime(OffsetDateTime compilationStartTime) {
    this.compilationStartTime = compilationStartTime;
  }


  public DescribeCompilationJobResponse compilationEndTime(OffsetDateTime compilationEndTime) {
    this.compilationEndTime = compilationEndTime;
    return this;
  }

  /**
   * Get compilationEndTime
   * @return compilationEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompilationEndTime() {
    return compilationEndTime;
  }

  public void setCompilationEndTime(OffsetDateTime compilationEndTime) {
    this.compilationEndTime = compilationEndTime;
  }


  public DescribeCompilationJobResponse stoppingCondition(CreateCompilationJobRequestStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
    return this;
  }

  /**
   * Get stoppingCondition
   * @return stoppingCondition
   */
  @javax.annotation.Nonnull
  public CreateCompilationJobRequestStoppingCondition getStoppingCondition() {
    return stoppingCondition;
  }

  public void setStoppingCondition(CreateCompilationJobRequestStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
  }


  public DescribeCompilationJobResponse inferenceImage(String inferenceImage) {
    this.inferenceImage = inferenceImage;
    return this;
  }

  /**
   * Get inferenceImage
   * @return inferenceImage
   */
  @javax.annotation.Nullable
  public String getInferenceImage() {
    return inferenceImage;
  }

  public void setInferenceImage(String inferenceImage) {
    this.inferenceImage = inferenceImage;
  }


  public DescribeCompilationJobResponse modelPackageVersionArn(String modelPackageVersionArn) {
    this.modelPackageVersionArn = modelPackageVersionArn;
    return this;
  }

  /**
   * Get modelPackageVersionArn
   * @return modelPackageVersionArn
   */
  @javax.annotation.Nullable
  public String getModelPackageVersionArn() {
    return modelPackageVersionArn;
  }

  public void setModelPackageVersionArn(String modelPackageVersionArn) {
    this.modelPackageVersionArn = modelPackageVersionArn;
  }


  public DescribeCompilationJobResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeCompilationJobResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeCompilationJobResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nonnull
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DescribeCompilationJobResponse modelArtifacts(DescribeCompilationJobResponseModelArtifacts modelArtifacts) {
    this.modelArtifacts = modelArtifacts;
    return this;
  }

  /**
   * Get modelArtifacts
   * @return modelArtifacts
   */
  @javax.annotation.Nonnull
  public DescribeCompilationJobResponseModelArtifacts getModelArtifacts() {
    return modelArtifacts;
  }

  public void setModelArtifacts(DescribeCompilationJobResponseModelArtifacts modelArtifacts) {
    this.modelArtifacts = modelArtifacts;
  }


  public DescribeCompilationJobResponse modelDigests(DescribeCompilationJobResponseModelDigests modelDigests) {
    this.modelDigests = modelDigests;
    return this;
  }

  /**
   * Get modelDigests
   * @return modelDigests
   */
  @javax.annotation.Nullable
  public DescribeCompilationJobResponseModelDigests getModelDigests() {
    return modelDigests;
  }

  public void setModelDigests(DescribeCompilationJobResponseModelDigests modelDigests) {
    this.modelDigests = modelDigests;
  }


  public DescribeCompilationJobResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeCompilationJobResponse inputConfig(DescribeCompilationJobResponseInputConfig inputConfig) {
    this.inputConfig = inputConfig;
    return this;
  }

  /**
   * Get inputConfig
   * @return inputConfig
   */
  @javax.annotation.Nonnull
  public DescribeCompilationJobResponseInputConfig getInputConfig() {
    return inputConfig;
  }

  public void setInputConfig(DescribeCompilationJobResponseInputConfig inputConfig) {
    this.inputConfig = inputConfig;
  }


  public DescribeCompilationJobResponse outputConfig(DescribeCompilationJobResponseOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nonnull
  public DescribeCompilationJobResponseOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(DescribeCompilationJobResponseOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public DescribeCompilationJobResponse vpcConfig(CreateCompilationJobRequestVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public CreateCompilationJobRequestVpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(CreateCompilationJobRequestVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeCompilationJobResponse describeCompilationJobResponse = (DescribeCompilationJobResponse) o;
    return Objects.equals(this.compilationJobName, describeCompilationJobResponse.compilationJobName) &&
        Objects.equals(this.compilationJobArn, describeCompilationJobResponse.compilationJobArn) &&
        Objects.equals(this.compilationJobStatus, describeCompilationJobResponse.compilationJobStatus) &&
        Objects.equals(this.compilationStartTime, describeCompilationJobResponse.compilationStartTime) &&
        Objects.equals(this.compilationEndTime, describeCompilationJobResponse.compilationEndTime) &&
        Objects.equals(this.stoppingCondition, describeCompilationJobResponse.stoppingCondition) &&
        Objects.equals(this.inferenceImage, describeCompilationJobResponse.inferenceImage) &&
        Objects.equals(this.modelPackageVersionArn, describeCompilationJobResponse.modelPackageVersionArn) &&
        Objects.equals(this.creationTime, describeCompilationJobResponse.creationTime) &&
        Objects.equals(this.lastModifiedTime, describeCompilationJobResponse.lastModifiedTime) &&
        Objects.equals(this.failureReason, describeCompilationJobResponse.failureReason) &&
        Objects.equals(this.modelArtifacts, describeCompilationJobResponse.modelArtifacts) &&
        Objects.equals(this.modelDigests, describeCompilationJobResponse.modelDigests) &&
        Objects.equals(this.roleArn, describeCompilationJobResponse.roleArn) &&
        Objects.equals(this.inputConfig, describeCompilationJobResponse.inputConfig) &&
        Objects.equals(this.outputConfig, describeCompilationJobResponse.outputConfig) &&
        Objects.equals(this.vpcConfig, describeCompilationJobResponse.vpcConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compilationJobName, compilationJobArn, compilationJobStatus, compilationStartTime, compilationEndTime, stoppingCondition, inferenceImage, modelPackageVersionArn, creationTime, lastModifiedTime, failureReason, modelArtifacts, modelDigests, roleArn, inputConfig, outputConfig, vpcConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeCompilationJobResponse {\n");
    sb.append("    compilationJobName: ").append(toIndentedString(compilationJobName)).append("\n");
    sb.append("    compilationJobArn: ").append(toIndentedString(compilationJobArn)).append("\n");
    sb.append("    compilationJobStatus: ").append(toIndentedString(compilationJobStatus)).append("\n");
    sb.append("    compilationStartTime: ").append(toIndentedString(compilationStartTime)).append("\n");
    sb.append("    compilationEndTime: ").append(toIndentedString(compilationEndTime)).append("\n");
    sb.append("    stoppingCondition: ").append(toIndentedString(stoppingCondition)).append("\n");
    sb.append("    inferenceImage: ").append(toIndentedString(inferenceImage)).append("\n");
    sb.append("    modelPackageVersionArn: ").append(toIndentedString(modelPackageVersionArn)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    modelArtifacts: ").append(toIndentedString(modelArtifacts)).append("\n");
    sb.append("    modelDigests: ").append(toIndentedString(modelDigests)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    inputConfig: ").append(toIndentedString(inputConfig)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompilationJobName");
    openapiFields.add("CompilationJobArn");
    openapiFields.add("CompilationJobStatus");
    openapiFields.add("CompilationStartTime");
    openapiFields.add("CompilationEndTime");
    openapiFields.add("StoppingCondition");
    openapiFields.add("InferenceImage");
    openapiFields.add("ModelPackageVersionArn");
    openapiFields.add("CreationTime");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("FailureReason");
    openapiFields.add("ModelArtifacts");
    openapiFields.add("ModelDigests");
    openapiFields.add("RoleArn");
    openapiFields.add("InputConfig");
    openapiFields.add("OutputConfig");
    openapiFields.add("VpcConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CompilationJobName");
    openapiRequiredFields.add("CompilationJobArn");
    openapiRequiredFields.add("CompilationJobStatus");
    openapiRequiredFields.add("StoppingCondition");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("LastModifiedTime");
    openapiRequiredFields.add("FailureReason");
    openapiRequiredFields.add("ModelArtifacts");
    openapiRequiredFields.add("RoleArn");
    openapiRequiredFields.add("InputConfig");
    openapiRequiredFields.add("OutputConfig");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeCompilationJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeCompilationJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeCompilationJobResponse is not found in the empty JSON string", DescribeCompilationJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeCompilationJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeCompilationJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeCompilationJobResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CompilationJobName`
      String.validateJsonElement(jsonObj.get("CompilationJobName"));
      // validate the required field `CompilationJobArn`
      String.validateJsonElement(jsonObj.get("CompilationJobArn"));
      // validate the required field `CompilationJobStatus`
      CompilationJobStatus.validateJsonElement(jsonObj.get("CompilationJobStatus"));
      // validate the optional field `CompilationStartTime`
      if (jsonObj.get("CompilationStartTime") != null && !jsonObj.get("CompilationStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompilationStartTime"));
      }
      // validate the optional field `CompilationEndTime`
      if (jsonObj.get("CompilationEndTime") != null && !jsonObj.get("CompilationEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompilationEndTime"));
      }
      // validate the required field `StoppingCondition`
      CreateCompilationJobRequestStoppingCondition.validateJsonElement(jsonObj.get("StoppingCondition"));
      // validate the optional field `InferenceImage`
      if (jsonObj.get("InferenceImage") != null && !jsonObj.get("InferenceImage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InferenceImage"));
      }
      // validate the optional field `ModelPackageVersionArn`
      if (jsonObj.get("ModelPackageVersionArn") != null && !jsonObj.get("ModelPackageVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelPackageVersionArn"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the required field `LastModifiedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      // validate the required field `FailureReason`
      String.validateJsonElement(jsonObj.get("FailureReason"));
      // validate the required field `ModelArtifacts`
      DescribeCompilationJobResponseModelArtifacts.validateJsonElement(jsonObj.get("ModelArtifacts"));
      // validate the optional field `ModelDigests`
      if (jsonObj.get("ModelDigests") != null && !jsonObj.get("ModelDigests").isJsonNull()) {
        DescribeCompilationJobResponseModelDigests.validateJsonElement(jsonObj.get("ModelDigests"));
      }
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the required field `InputConfig`
      DescribeCompilationJobResponseInputConfig.validateJsonElement(jsonObj.get("InputConfig"));
      // validate the required field `OutputConfig`
      DescribeCompilationJobResponseOutputConfig.validateJsonElement(jsonObj.get("OutputConfig"));
      // validate the optional field `VpcConfig`
      if (jsonObj.get("VpcConfig") != null && !jsonObj.get("VpcConfig").isJsonNull()) {
        CreateCompilationJobRequestVpcConfig.validateJsonElement(jsonObj.get("VpcConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeCompilationJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeCompilationJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeCompilationJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeCompilationJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeCompilationJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeCompilationJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeCompilationJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeCompilationJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeCompilationJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeCompilationJobResponse
   */
  public static DescribeCompilationJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeCompilationJobResponse.class);
  }

  /**
   * Convert an instance of DescribeCompilationJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

