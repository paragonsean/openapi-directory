/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.MonitoringJobDefinitionBaselineConfig;
import org.openapitools.client.model.MonitoringJobDefinitionMonitoringAppSpecification;
import org.openapitools.client.model.MonitoringJobDefinitionMonitoringOutputConfig;
import org.openapitools.client.model.MonitoringJobDefinitionMonitoringResources;
import org.openapitools.client.model.MonitoringJobDefinitionNetworkConfig;
import org.openapitools.client.model.MonitoringJobDefinitionStoppingCondition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines the monitoring job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MonitoringJobDefinition {
  public static final String SERIALIZED_NAME_BASELINE_CONFIG = "BaselineConfig";
  @SerializedName(SERIALIZED_NAME_BASELINE_CONFIG)
  private MonitoringJobDefinitionBaselineConfig baselineConfig;

  public static final String SERIALIZED_NAME_MONITORING_INPUTS = "MonitoringInputs";
  @SerializedName(SERIALIZED_NAME_MONITORING_INPUTS)
  private List monitoringInputs;

  public static final String SERIALIZED_NAME_MONITORING_OUTPUT_CONFIG = "MonitoringOutputConfig";
  @SerializedName(SERIALIZED_NAME_MONITORING_OUTPUT_CONFIG)
  private MonitoringJobDefinitionMonitoringOutputConfig monitoringOutputConfig;

  public static final String SERIALIZED_NAME_MONITORING_RESOURCES = "MonitoringResources";
  @SerializedName(SERIALIZED_NAME_MONITORING_RESOURCES)
  private MonitoringJobDefinitionMonitoringResources monitoringResources;

  public static final String SERIALIZED_NAME_MONITORING_APP_SPECIFICATION = "MonitoringAppSpecification";
  @SerializedName(SERIALIZED_NAME_MONITORING_APP_SPECIFICATION)
  private MonitoringJobDefinitionMonitoringAppSpecification monitoringAppSpecification;

  public static final String SERIALIZED_NAME_STOPPING_CONDITION = "StoppingCondition";
  @SerializedName(SERIALIZED_NAME_STOPPING_CONDITION)
  private MonitoringJobDefinitionStoppingCondition stoppingCondition;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "Environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private Map environment;

  public static final String SERIALIZED_NAME_NETWORK_CONFIG = "NetworkConfig";
  @SerializedName(SERIALIZED_NAME_NETWORK_CONFIG)
  private MonitoringJobDefinitionNetworkConfig networkConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public MonitoringJobDefinition() {
  }

  public MonitoringJobDefinition baselineConfig(MonitoringJobDefinitionBaselineConfig baselineConfig) {
    this.baselineConfig = baselineConfig;
    return this;
  }

  /**
   * Get baselineConfig
   * @return baselineConfig
   */
  @javax.annotation.Nullable
  public MonitoringJobDefinitionBaselineConfig getBaselineConfig() {
    return baselineConfig;
  }

  public void setBaselineConfig(MonitoringJobDefinitionBaselineConfig baselineConfig) {
    this.baselineConfig = baselineConfig;
  }


  public MonitoringJobDefinition monitoringInputs(List monitoringInputs) {
    this.monitoringInputs = monitoringInputs;
    return this;
  }

  /**
   * Get monitoringInputs
   * @return monitoringInputs
   */
  @javax.annotation.Nonnull
  public List getMonitoringInputs() {
    return monitoringInputs;
  }

  public void setMonitoringInputs(List monitoringInputs) {
    this.monitoringInputs = monitoringInputs;
  }


  public MonitoringJobDefinition monitoringOutputConfig(MonitoringJobDefinitionMonitoringOutputConfig monitoringOutputConfig) {
    this.monitoringOutputConfig = monitoringOutputConfig;
    return this;
  }

  /**
   * Get monitoringOutputConfig
   * @return monitoringOutputConfig
   */
  @javax.annotation.Nonnull
  public MonitoringJobDefinitionMonitoringOutputConfig getMonitoringOutputConfig() {
    return monitoringOutputConfig;
  }

  public void setMonitoringOutputConfig(MonitoringJobDefinitionMonitoringOutputConfig monitoringOutputConfig) {
    this.monitoringOutputConfig = monitoringOutputConfig;
  }


  public MonitoringJobDefinition monitoringResources(MonitoringJobDefinitionMonitoringResources monitoringResources) {
    this.monitoringResources = monitoringResources;
    return this;
  }

  /**
   * Get monitoringResources
   * @return monitoringResources
   */
  @javax.annotation.Nonnull
  public MonitoringJobDefinitionMonitoringResources getMonitoringResources() {
    return monitoringResources;
  }

  public void setMonitoringResources(MonitoringJobDefinitionMonitoringResources monitoringResources) {
    this.monitoringResources = monitoringResources;
  }


  public MonitoringJobDefinition monitoringAppSpecification(MonitoringJobDefinitionMonitoringAppSpecification monitoringAppSpecification) {
    this.monitoringAppSpecification = monitoringAppSpecification;
    return this;
  }

  /**
   * Get monitoringAppSpecification
   * @return monitoringAppSpecification
   */
  @javax.annotation.Nonnull
  public MonitoringJobDefinitionMonitoringAppSpecification getMonitoringAppSpecification() {
    return monitoringAppSpecification;
  }

  public void setMonitoringAppSpecification(MonitoringJobDefinitionMonitoringAppSpecification monitoringAppSpecification) {
    this.monitoringAppSpecification = monitoringAppSpecification;
  }


  public MonitoringJobDefinition stoppingCondition(MonitoringJobDefinitionStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
    return this;
  }

  /**
   * Get stoppingCondition
   * @return stoppingCondition
   */
  @javax.annotation.Nullable
  public MonitoringJobDefinitionStoppingCondition getStoppingCondition() {
    return stoppingCondition;
  }

  public void setStoppingCondition(MonitoringJobDefinitionStoppingCondition stoppingCondition) {
    this.stoppingCondition = stoppingCondition;
  }


  public MonitoringJobDefinition environment(Map environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Get environment
   * @return environment
   */
  @javax.annotation.Nullable
  public Map getEnvironment() {
    return environment;
  }

  public void setEnvironment(Map environment) {
    this.environment = environment;
  }


  public MonitoringJobDefinition networkConfig(MonitoringJobDefinitionNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
    return this;
  }

  /**
   * Get networkConfig
   * @return networkConfig
   */
  @javax.annotation.Nullable
  public MonitoringJobDefinitionNetworkConfig getNetworkConfig() {
    return networkConfig;
  }

  public void setNetworkConfig(MonitoringJobDefinitionNetworkConfig networkConfig) {
    this.networkConfig = networkConfig;
  }


  public MonitoringJobDefinition roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitoringJobDefinition monitoringJobDefinition = (MonitoringJobDefinition) o;
    return Objects.equals(this.baselineConfig, monitoringJobDefinition.baselineConfig) &&
        Objects.equals(this.monitoringInputs, monitoringJobDefinition.monitoringInputs) &&
        Objects.equals(this.monitoringOutputConfig, monitoringJobDefinition.monitoringOutputConfig) &&
        Objects.equals(this.monitoringResources, monitoringJobDefinition.monitoringResources) &&
        Objects.equals(this.monitoringAppSpecification, monitoringJobDefinition.monitoringAppSpecification) &&
        Objects.equals(this.stoppingCondition, monitoringJobDefinition.stoppingCondition) &&
        Objects.equals(this.environment, monitoringJobDefinition.environment) &&
        Objects.equals(this.networkConfig, monitoringJobDefinition.networkConfig) &&
        Objects.equals(this.roleArn, monitoringJobDefinition.roleArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baselineConfig, monitoringInputs, monitoringOutputConfig, monitoringResources, monitoringAppSpecification, stoppingCondition, environment, networkConfig, roleArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitoringJobDefinition {\n");
    sb.append("    baselineConfig: ").append(toIndentedString(baselineConfig)).append("\n");
    sb.append("    monitoringInputs: ").append(toIndentedString(monitoringInputs)).append("\n");
    sb.append("    monitoringOutputConfig: ").append(toIndentedString(monitoringOutputConfig)).append("\n");
    sb.append("    monitoringResources: ").append(toIndentedString(monitoringResources)).append("\n");
    sb.append("    monitoringAppSpecification: ").append(toIndentedString(monitoringAppSpecification)).append("\n");
    sb.append("    stoppingCondition: ").append(toIndentedString(stoppingCondition)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    networkConfig: ").append(toIndentedString(networkConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BaselineConfig");
    openapiFields.add("MonitoringInputs");
    openapiFields.add("MonitoringOutputConfig");
    openapiFields.add("MonitoringResources");
    openapiFields.add("MonitoringAppSpecification");
    openapiFields.add("StoppingCondition");
    openapiFields.add("Environment");
    openapiFields.add("NetworkConfig");
    openapiFields.add("RoleArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MonitoringInputs");
    openapiRequiredFields.add("MonitoringOutputConfig");
    openapiRequiredFields.add("MonitoringResources");
    openapiRequiredFields.add("MonitoringAppSpecification");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MonitoringJobDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MonitoringJobDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MonitoringJobDefinition is not found in the empty JSON string", MonitoringJobDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MonitoringJobDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MonitoringJobDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MonitoringJobDefinition.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BaselineConfig`
      if (jsonObj.get("BaselineConfig") != null && !jsonObj.get("BaselineConfig").isJsonNull()) {
        MonitoringJobDefinitionBaselineConfig.validateJsonElement(jsonObj.get("BaselineConfig"));
      }
      // validate the required field `MonitoringInputs`
      List.validateJsonElement(jsonObj.get("MonitoringInputs"));
      // validate the required field `MonitoringOutputConfig`
      MonitoringJobDefinitionMonitoringOutputConfig.validateJsonElement(jsonObj.get("MonitoringOutputConfig"));
      // validate the required field `MonitoringResources`
      MonitoringJobDefinitionMonitoringResources.validateJsonElement(jsonObj.get("MonitoringResources"));
      // validate the required field `MonitoringAppSpecification`
      MonitoringJobDefinitionMonitoringAppSpecification.validateJsonElement(jsonObj.get("MonitoringAppSpecification"));
      // validate the optional field `StoppingCondition`
      if (jsonObj.get("StoppingCondition") != null && !jsonObj.get("StoppingCondition").isJsonNull()) {
        MonitoringJobDefinitionStoppingCondition.validateJsonElement(jsonObj.get("StoppingCondition"));
      }
      // validate the optional field `Environment`
      if (jsonObj.get("Environment") != null && !jsonObj.get("Environment").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Environment"));
      }
      // validate the optional field `NetworkConfig`
      if (jsonObj.get("NetworkConfig") != null && !jsonObj.get("NetworkConfig").isJsonNull()) {
        MonitoringJobDefinitionNetworkConfig.validateJsonElement(jsonObj.get("NetworkConfig"));
      }
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MonitoringJobDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MonitoringJobDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MonitoringJobDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MonitoringJobDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<MonitoringJobDefinition>() {
           @Override
           public void write(JsonWriter out, MonitoringJobDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MonitoringJobDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MonitoringJobDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MonitoringJobDefinition
   * @throws IOException if the JSON string is invalid with respect to MonitoringJobDefinition
   */
  public static MonitoringJobDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MonitoringJobDefinition.class);
  }

  /**
   * Convert an instance of MonitoringJobDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

