/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribeFlowDefinitionResponseHumanLoopActivationConfig;
import org.openapitools.client.model.DescribeFlowDefinitionResponseHumanLoopConfig;
import org.openapitools.client.model.DescribeFlowDefinitionResponseHumanLoopRequestSource;
import org.openapitools.client.model.DescribeFlowDefinitionResponseOutputConfig;
import org.openapitools.client.model.FlowDefinitionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeFlowDefinitionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeFlowDefinitionResponse {
  public static final String SERIALIZED_NAME_FLOW_DEFINITION_ARN = "FlowDefinitionArn";
  @SerializedName(SERIALIZED_NAME_FLOW_DEFINITION_ARN)
  private String flowDefinitionArn;

  public static final String SERIALIZED_NAME_FLOW_DEFINITION_NAME = "FlowDefinitionName";
  @SerializedName(SERIALIZED_NAME_FLOW_DEFINITION_NAME)
  private String flowDefinitionName;

  public static final String SERIALIZED_NAME_FLOW_DEFINITION_STATUS = "FlowDefinitionStatus";
  @SerializedName(SERIALIZED_NAME_FLOW_DEFINITION_STATUS)
  private FlowDefinitionStatus flowDefinitionStatus;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_HUMAN_LOOP_REQUEST_SOURCE = "HumanLoopRequestSource";
  @SerializedName(SERIALIZED_NAME_HUMAN_LOOP_REQUEST_SOURCE)
  private DescribeFlowDefinitionResponseHumanLoopRequestSource humanLoopRequestSource;

  public static final String SERIALIZED_NAME_HUMAN_LOOP_ACTIVATION_CONFIG = "HumanLoopActivationConfig";
  @SerializedName(SERIALIZED_NAME_HUMAN_LOOP_ACTIVATION_CONFIG)
  private DescribeFlowDefinitionResponseHumanLoopActivationConfig humanLoopActivationConfig;

  public static final String SERIALIZED_NAME_HUMAN_LOOP_CONFIG = "HumanLoopConfig";
  @SerializedName(SERIALIZED_NAME_HUMAN_LOOP_CONFIG)
  private DescribeFlowDefinitionResponseHumanLoopConfig humanLoopConfig;

  public static final String SERIALIZED_NAME_OUTPUT_CONFIG = "OutputConfig";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONFIG)
  private DescribeFlowDefinitionResponseOutputConfig outputConfig;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public DescribeFlowDefinitionResponse() {
  }

  public DescribeFlowDefinitionResponse flowDefinitionArn(String flowDefinitionArn) {
    this.flowDefinitionArn = flowDefinitionArn;
    return this;
  }

  /**
   * Get flowDefinitionArn
   * @return flowDefinitionArn
   */
  @javax.annotation.Nonnull
  public String getFlowDefinitionArn() {
    return flowDefinitionArn;
  }

  public void setFlowDefinitionArn(String flowDefinitionArn) {
    this.flowDefinitionArn = flowDefinitionArn;
  }


  public DescribeFlowDefinitionResponse flowDefinitionName(String flowDefinitionName) {
    this.flowDefinitionName = flowDefinitionName;
    return this;
  }

  /**
   * Get flowDefinitionName
   * @return flowDefinitionName
   */
  @javax.annotation.Nonnull
  public String getFlowDefinitionName() {
    return flowDefinitionName;
  }

  public void setFlowDefinitionName(String flowDefinitionName) {
    this.flowDefinitionName = flowDefinitionName;
  }


  public DescribeFlowDefinitionResponse flowDefinitionStatus(FlowDefinitionStatus flowDefinitionStatus) {
    this.flowDefinitionStatus = flowDefinitionStatus;
    return this;
  }

  /**
   * Get flowDefinitionStatus
   * @return flowDefinitionStatus
   */
  @javax.annotation.Nonnull
  public FlowDefinitionStatus getFlowDefinitionStatus() {
    return flowDefinitionStatus;
  }

  public void setFlowDefinitionStatus(FlowDefinitionStatus flowDefinitionStatus) {
    this.flowDefinitionStatus = flowDefinitionStatus;
  }


  public DescribeFlowDefinitionResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeFlowDefinitionResponse humanLoopRequestSource(DescribeFlowDefinitionResponseHumanLoopRequestSource humanLoopRequestSource) {
    this.humanLoopRequestSource = humanLoopRequestSource;
    return this;
  }

  /**
   * Get humanLoopRequestSource
   * @return humanLoopRequestSource
   */
  @javax.annotation.Nullable
  public DescribeFlowDefinitionResponseHumanLoopRequestSource getHumanLoopRequestSource() {
    return humanLoopRequestSource;
  }

  public void setHumanLoopRequestSource(DescribeFlowDefinitionResponseHumanLoopRequestSource humanLoopRequestSource) {
    this.humanLoopRequestSource = humanLoopRequestSource;
  }


  public DescribeFlowDefinitionResponse humanLoopActivationConfig(DescribeFlowDefinitionResponseHumanLoopActivationConfig humanLoopActivationConfig) {
    this.humanLoopActivationConfig = humanLoopActivationConfig;
    return this;
  }

  /**
   * Get humanLoopActivationConfig
   * @return humanLoopActivationConfig
   */
  @javax.annotation.Nullable
  public DescribeFlowDefinitionResponseHumanLoopActivationConfig getHumanLoopActivationConfig() {
    return humanLoopActivationConfig;
  }

  public void setHumanLoopActivationConfig(DescribeFlowDefinitionResponseHumanLoopActivationConfig humanLoopActivationConfig) {
    this.humanLoopActivationConfig = humanLoopActivationConfig;
  }


  public DescribeFlowDefinitionResponse humanLoopConfig(DescribeFlowDefinitionResponseHumanLoopConfig humanLoopConfig) {
    this.humanLoopConfig = humanLoopConfig;
    return this;
  }

  /**
   * Get humanLoopConfig
   * @return humanLoopConfig
   */
  @javax.annotation.Nonnull
  public DescribeFlowDefinitionResponseHumanLoopConfig getHumanLoopConfig() {
    return humanLoopConfig;
  }

  public void setHumanLoopConfig(DescribeFlowDefinitionResponseHumanLoopConfig humanLoopConfig) {
    this.humanLoopConfig = humanLoopConfig;
  }


  public DescribeFlowDefinitionResponse outputConfig(DescribeFlowDefinitionResponseOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
    return this;
  }

  /**
   * Get outputConfig
   * @return outputConfig
   */
  @javax.annotation.Nonnull
  public DescribeFlowDefinitionResponseOutputConfig getOutputConfig() {
    return outputConfig;
  }

  public void setOutputConfig(DescribeFlowDefinitionResponseOutputConfig outputConfig) {
    this.outputConfig = outputConfig;
  }


  public DescribeFlowDefinitionResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeFlowDefinitionResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeFlowDefinitionResponse describeFlowDefinitionResponse = (DescribeFlowDefinitionResponse) o;
    return Objects.equals(this.flowDefinitionArn, describeFlowDefinitionResponse.flowDefinitionArn) &&
        Objects.equals(this.flowDefinitionName, describeFlowDefinitionResponse.flowDefinitionName) &&
        Objects.equals(this.flowDefinitionStatus, describeFlowDefinitionResponse.flowDefinitionStatus) &&
        Objects.equals(this.creationTime, describeFlowDefinitionResponse.creationTime) &&
        Objects.equals(this.humanLoopRequestSource, describeFlowDefinitionResponse.humanLoopRequestSource) &&
        Objects.equals(this.humanLoopActivationConfig, describeFlowDefinitionResponse.humanLoopActivationConfig) &&
        Objects.equals(this.humanLoopConfig, describeFlowDefinitionResponse.humanLoopConfig) &&
        Objects.equals(this.outputConfig, describeFlowDefinitionResponse.outputConfig) &&
        Objects.equals(this.roleArn, describeFlowDefinitionResponse.roleArn) &&
        Objects.equals(this.failureReason, describeFlowDefinitionResponse.failureReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowDefinitionArn, flowDefinitionName, flowDefinitionStatus, creationTime, humanLoopRequestSource, humanLoopActivationConfig, humanLoopConfig, outputConfig, roleArn, failureReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeFlowDefinitionResponse {\n");
    sb.append("    flowDefinitionArn: ").append(toIndentedString(flowDefinitionArn)).append("\n");
    sb.append("    flowDefinitionName: ").append(toIndentedString(flowDefinitionName)).append("\n");
    sb.append("    flowDefinitionStatus: ").append(toIndentedString(flowDefinitionStatus)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    humanLoopRequestSource: ").append(toIndentedString(humanLoopRequestSource)).append("\n");
    sb.append("    humanLoopActivationConfig: ").append(toIndentedString(humanLoopActivationConfig)).append("\n");
    sb.append("    humanLoopConfig: ").append(toIndentedString(humanLoopConfig)).append("\n");
    sb.append("    outputConfig: ").append(toIndentedString(outputConfig)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FlowDefinitionArn");
    openapiFields.add("FlowDefinitionName");
    openapiFields.add("FlowDefinitionStatus");
    openapiFields.add("CreationTime");
    openapiFields.add("HumanLoopRequestSource");
    openapiFields.add("HumanLoopActivationConfig");
    openapiFields.add("HumanLoopConfig");
    openapiFields.add("OutputConfig");
    openapiFields.add("RoleArn");
    openapiFields.add("FailureReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FlowDefinitionArn");
    openapiRequiredFields.add("FlowDefinitionName");
    openapiRequiredFields.add("FlowDefinitionStatus");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("HumanLoopConfig");
    openapiRequiredFields.add("OutputConfig");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeFlowDefinitionResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeFlowDefinitionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeFlowDefinitionResponse is not found in the empty JSON string", DescribeFlowDefinitionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeFlowDefinitionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeFlowDefinitionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeFlowDefinitionResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `FlowDefinitionArn`
      String.validateJsonElement(jsonObj.get("FlowDefinitionArn"));
      // validate the required field `FlowDefinitionName`
      String.validateJsonElement(jsonObj.get("FlowDefinitionName"));
      // validate the required field `FlowDefinitionStatus`
      FlowDefinitionStatus.validateJsonElement(jsonObj.get("FlowDefinitionStatus"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `HumanLoopRequestSource`
      if (jsonObj.get("HumanLoopRequestSource") != null && !jsonObj.get("HumanLoopRequestSource").isJsonNull()) {
        DescribeFlowDefinitionResponseHumanLoopRequestSource.validateJsonElement(jsonObj.get("HumanLoopRequestSource"));
      }
      // validate the optional field `HumanLoopActivationConfig`
      if (jsonObj.get("HumanLoopActivationConfig") != null && !jsonObj.get("HumanLoopActivationConfig").isJsonNull()) {
        DescribeFlowDefinitionResponseHumanLoopActivationConfig.validateJsonElement(jsonObj.get("HumanLoopActivationConfig"));
      }
      // validate the required field `HumanLoopConfig`
      DescribeFlowDefinitionResponseHumanLoopConfig.validateJsonElement(jsonObj.get("HumanLoopConfig"));
      // validate the required field `OutputConfig`
      DescribeFlowDefinitionResponseOutputConfig.validateJsonElement(jsonObj.get("OutputConfig"));
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeFlowDefinitionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeFlowDefinitionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeFlowDefinitionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeFlowDefinitionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeFlowDefinitionResponse>() {
           @Override
           public void write(JsonWriter out, DescribeFlowDefinitionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeFlowDefinitionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeFlowDefinitionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeFlowDefinitionResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeFlowDefinitionResponse
   */
  public static DescribeFlowDefinitionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeFlowDefinitionResponse.class);
  }

  /**
   * Convert an instance of DescribeFlowDefinitionResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

