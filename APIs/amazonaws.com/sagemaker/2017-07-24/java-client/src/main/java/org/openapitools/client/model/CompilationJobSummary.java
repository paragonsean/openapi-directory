/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CompilationJobStatus;
import org.openapitools.client.model.TargetDevice;
import org.openapitools.client.model.TargetPlatformAccelerator;
import org.openapitools.client.model.TargetPlatformArch;
import org.openapitools.client.model.TargetPlatformOs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A summary of a model compilation job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompilationJobSummary {
  public static final String SERIALIZED_NAME_COMPILATION_JOB_NAME = "CompilationJobName";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_NAME)
  private String compilationJobName;

  public static final String SERIALIZED_NAME_COMPILATION_JOB_ARN = "CompilationJobArn";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_ARN)
  private String compilationJobArn;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_COMPILATION_START_TIME = "CompilationStartTime";
  @SerializedName(SERIALIZED_NAME_COMPILATION_START_TIME)
  private OffsetDateTime compilationStartTime;

  public static final String SERIALIZED_NAME_COMPILATION_END_TIME = "CompilationEndTime";
  @SerializedName(SERIALIZED_NAME_COMPILATION_END_TIME)
  private OffsetDateTime compilationEndTime;

  public static final String SERIALIZED_NAME_COMPILATION_TARGET_DEVICE = "CompilationTargetDevice";
  @SerializedName(SERIALIZED_NAME_COMPILATION_TARGET_DEVICE)
  private TargetDevice compilationTargetDevice;

  public static final String SERIALIZED_NAME_COMPILATION_TARGET_PLATFORM_OS = "CompilationTargetPlatformOs";
  @SerializedName(SERIALIZED_NAME_COMPILATION_TARGET_PLATFORM_OS)
  private TargetPlatformOs compilationTargetPlatformOs;

  public static final String SERIALIZED_NAME_COMPILATION_TARGET_PLATFORM_ARCH = "CompilationTargetPlatformArch";
  @SerializedName(SERIALIZED_NAME_COMPILATION_TARGET_PLATFORM_ARCH)
  private TargetPlatformArch compilationTargetPlatformArch;

  public static final String SERIALIZED_NAME_COMPILATION_TARGET_PLATFORM_ACCELERATOR = "CompilationTargetPlatformAccelerator";
  @SerializedName(SERIALIZED_NAME_COMPILATION_TARGET_PLATFORM_ACCELERATOR)
  private TargetPlatformAccelerator compilationTargetPlatformAccelerator;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_COMPILATION_JOB_STATUS = "CompilationJobStatus";
  @SerializedName(SERIALIZED_NAME_COMPILATION_JOB_STATUS)
  private CompilationJobStatus compilationJobStatus;

  public CompilationJobSummary() {
  }

  public CompilationJobSummary compilationJobName(String compilationJobName) {
    this.compilationJobName = compilationJobName;
    return this;
  }

  /**
   * Get compilationJobName
   * @return compilationJobName
   */
  @javax.annotation.Nonnull
  public String getCompilationJobName() {
    return compilationJobName;
  }

  public void setCompilationJobName(String compilationJobName) {
    this.compilationJobName = compilationJobName;
  }


  public CompilationJobSummary compilationJobArn(String compilationJobArn) {
    this.compilationJobArn = compilationJobArn;
    return this;
  }

  /**
   * Get compilationJobArn
   * @return compilationJobArn
   */
  @javax.annotation.Nonnull
  public String getCompilationJobArn() {
    return compilationJobArn;
  }

  public void setCompilationJobArn(String compilationJobArn) {
    this.compilationJobArn = compilationJobArn;
  }


  public CompilationJobSummary creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CompilationJobSummary compilationStartTime(OffsetDateTime compilationStartTime) {
    this.compilationStartTime = compilationStartTime;
    return this;
  }

  /**
   * Get compilationStartTime
   * @return compilationStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompilationStartTime() {
    return compilationStartTime;
  }

  public void setCompilationStartTime(OffsetDateTime compilationStartTime) {
    this.compilationStartTime = compilationStartTime;
  }


  public CompilationJobSummary compilationEndTime(OffsetDateTime compilationEndTime) {
    this.compilationEndTime = compilationEndTime;
    return this;
  }

  /**
   * Get compilationEndTime
   * @return compilationEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompilationEndTime() {
    return compilationEndTime;
  }

  public void setCompilationEndTime(OffsetDateTime compilationEndTime) {
    this.compilationEndTime = compilationEndTime;
  }


  public CompilationJobSummary compilationTargetDevice(TargetDevice compilationTargetDevice) {
    this.compilationTargetDevice = compilationTargetDevice;
    return this;
  }

  /**
   * Get compilationTargetDevice
   * @return compilationTargetDevice
   */
  @javax.annotation.Nullable
  public TargetDevice getCompilationTargetDevice() {
    return compilationTargetDevice;
  }

  public void setCompilationTargetDevice(TargetDevice compilationTargetDevice) {
    this.compilationTargetDevice = compilationTargetDevice;
  }


  public CompilationJobSummary compilationTargetPlatformOs(TargetPlatformOs compilationTargetPlatformOs) {
    this.compilationTargetPlatformOs = compilationTargetPlatformOs;
    return this;
  }

  /**
   * Get compilationTargetPlatformOs
   * @return compilationTargetPlatformOs
   */
  @javax.annotation.Nullable
  public TargetPlatformOs getCompilationTargetPlatformOs() {
    return compilationTargetPlatformOs;
  }

  public void setCompilationTargetPlatformOs(TargetPlatformOs compilationTargetPlatformOs) {
    this.compilationTargetPlatformOs = compilationTargetPlatformOs;
  }


  public CompilationJobSummary compilationTargetPlatformArch(TargetPlatformArch compilationTargetPlatformArch) {
    this.compilationTargetPlatformArch = compilationTargetPlatformArch;
    return this;
  }

  /**
   * Get compilationTargetPlatformArch
   * @return compilationTargetPlatformArch
   */
  @javax.annotation.Nullable
  public TargetPlatformArch getCompilationTargetPlatformArch() {
    return compilationTargetPlatformArch;
  }

  public void setCompilationTargetPlatformArch(TargetPlatformArch compilationTargetPlatformArch) {
    this.compilationTargetPlatformArch = compilationTargetPlatformArch;
  }


  public CompilationJobSummary compilationTargetPlatformAccelerator(TargetPlatformAccelerator compilationTargetPlatformAccelerator) {
    this.compilationTargetPlatformAccelerator = compilationTargetPlatformAccelerator;
    return this;
  }

  /**
   * Get compilationTargetPlatformAccelerator
   * @return compilationTargetPlatformAccelerator
   */
  @javax.annotation.Nullable
  public TargetPlatformAccelerator getCompilationTargetPlatformAccelerator() {
    return compilationTargetPlatformAccelerator;
  }

  public void setCompilationTargetPlatformAccelerator(TargetPlatformAccelerator compilationTargetPlatformAccelerator) {
    this.compilationTargetPlatformAccelerator = compilationTargetPlatformAccelerator;
  }


  public CompilationJobSummary lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public CompilationJobSummary compilationJobStatus(CompilationJobStatus compilationJobStatus) {
    this.compilationJobStatus = compilationJobStatus;
    return this;
  }

  /**
   * Get compilationJobStatus
   * @return compilationJobStatus
   */
  @javax.annotation.Nonnull
  public CompilationJobStatus getCompilationJobStatus() {
    return compilationJobStatus;
  }

  public void setCompilationJobStatus(CompilationJobStatus compilationJobStatus) {
    this.compilationJobStatus = compilationJobStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompilationJobSummary compilationJobSummary = (CompilationJobSummary) o;
    return Objects.equals(this.compilationJobName, compilationJobSummary.compilationJobName) &&
        Objects.equals(this.compilationJobArn, compilationJobSummary.compilationJobArn) &&
        Objects.equals(this.creationTime, compilationJobSummary.creationTime) &&
        Objects.equals(this.compilationStartTime, compilationJobSummary.compilationStartTime) &&
        Objects.equals(this.compilationEndTime, compilationJobSummary.compilationEndTime) &&
        Objects.equals(this.compilationTargetDevice, compilationJobSummary.compilationTargetDevice) &&
        Objects.equals(this.compilationTargetPlatformOs, compilationJobSummary.compilationTargetPlatformOs) &&
        Objects.equals(this.compilationTargetPlatformArch, compilationJobSummary.compilationTargetPlatformArch) &&
        Objects.equals(this.compilationTargetPlatformAccelerator, compilationJobSummary.compilationTargetPlatformAccelerator) &&
        Objects.equals(this.lastModifiedTime, compilationJobSummary.lastModifiedTime) &&
        Objects.equals(this.compilationJobStatus, compilationJobSummary.compilationJobStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compilationJobName, compilationJobArn, creationTime, compilationStartTime, compilationEndTime, compilationTargetDevice, compilationTargetPlatformOs, compilationTargetPlatformArch, compilationTargetPlatformAccelerator, lastModifiedTime, compilationJobStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompilationJobSummary {\n");
    sb.append("    compilationJobName: ").append(toIndentedString(compilationJobName)).append("\n");
    sb.append("    compilationJobArn: ").append(toIndentedString(compilationJobArn)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    compilationStartTime: ").append(toIndentedString(compilationStartTime)).append("\n");
    sb.append("    compilationEndTime: ").append(toIndentedString(compilationEndTime)).append("\n");
    sb.append("    compilationTargetDevice: ").append(toIndentedString(compilationTargetDevice)).append("\n");
    sb.append("    compilationTargetPlatformOs: ").append(toIndentedString(compilationTargetPlatformOs)).append("\n");
    sb.append("    compilationTargetPlatformArch: ").append(toIndentedString(compilationTargetPlatformArch)).append("\n");
    sb.append("    compilationTargetPlatformAccelerator: ").append(toIndentedString(compilationTargetPlatformAccelerator)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    compilationJobStatus: ").append(toIndentedString(compilationJobStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompilationJobName");
    openapiFields.add("CompilationJobArn");
    openapiFields.add("CreationTime");
    openapiFields.add("CompilationStartTime");
    openapiFields.add("CompilationEndTime");
    openapiFields.add("CompilationTargetDevice");
    openapiFields.add("CompilationTargetPlatformOs");
    openapiFields.add("CompilationTargetPlatformArch");
    openapiFields.add("CompilationTargetPlatformAccelerator");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("CompilationJobStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CompilationJobName");
    openapiRequiredFields.add("CompilationJobArn");
    openapiRequiredFields.add("CreationTime");
    openapiRequiredFields.add("CompilationJobStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompilationJobSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompilationJobSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompilationJobSummary is not found in the empty JSON string", CompilationJobSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompilationJobSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompilationJobSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CompilationJobSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CompilationJobName`
      String.validateJsonElement(jsonObj.get("CompilationJobName"));
      // validate the required field `CompilationJobArn`
      String.validateJsonElement(jsonObj.get("CompilationJobArn"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `CompilationStartTime`
      if (jsonObj.get("CompilationStartTime") != null && !jsonObj.get("CompilationStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompilationStartTime"));
      }
      // validate the optional field `CompilationEndTime`
      if (jsonObj.get("CompilationEndTime") != null && !jsonObj.get("CompilationEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompilationEndTime"));
      }
      // validate the optional field `CompilationTargetDevice`
      if (jsonObj.get("CompilationTargetDevice") != null && !jsonObj.get("CompilationTargetDevice").isJsonNull()) {
        TargetDevice.validateJsonElement(jsonObj.get("CompilationTargetDevice"));
      }
      // validate the optional field `CompilationTargetPlatformOs`
      if (jsonObj.get("CompilationTargetPlatformOs") != null && !jsonObj.get("CompilationTargetPlatformOs").isJsonNull()) {
        TargetPlatformOs.validateJsonElement(jsonObj.get("CompilationTargetPlatformOs"));
      }
      // validate the optional field `CompilationTargetPlatformArch`
      if (jsonObj.get("CompilationTargetPlatformArch") != null && !jsonObj.get("CompilationTargetPlatformArch").isJsonNull()) {
        TargetPlatformArch.validateJsonElement(jsonObj.get("CompilationTargetPlatformArch"));
      }
      // validate the optional field `CompilationTargetPlatformAccelerator`
      if (jsonObj.get("CompilationTargetPlatformAccelerator") != null && !jsonObj.get("CompilationTargetPlatformAccelerator").isJsonNull()) {
        TargetPlatformAccelerator.validateJsonElement(jsonObj.get("CompilationTargetPlatformAccelerator"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the required field `CompilationJobStatus`
      CompilationJobStatus.validateJsonElement(jsonObj.get("CompilationJobStatus"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompilationJobSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompilationJobSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompilationJobSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompilationJobSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<CompilationJobSummary>() {
           @Override
           public void write(JsonWriter out, CompilationJobSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompilationJobSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompilationJobSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompilationJobSummary
   * @throws IOException if the JSON string is invalid with respect to CompilationJobSummary
   */
  public static CompilationJobSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompilationJobSummary.class);
  }

  /**
   * Convert an instance of CompilationJobSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

