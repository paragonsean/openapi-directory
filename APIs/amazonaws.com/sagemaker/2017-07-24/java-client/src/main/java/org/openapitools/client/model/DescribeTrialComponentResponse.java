/*
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateTrialComponentRequestStatus;
import org.openapitools.client.model.DescribeTrialComponentResponseCreatedBy;
import org.openapitools.client.model.DescribeTrialComponentResponseLastModifiedBy;
import org.openapitools.client.model.DescribeTrialComponentResponseSource;
import org.openapitools.client.model.MetadataProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeTrialComponentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:48.073948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeTrialComponentResponse {
  public static final String SERIALIZED_NAME_TRIAL_COMPONENT_NAME = "TrialComponentName";
  @SerializedName(SERIALIZED_NAME_TRIAL_COMPONENT_NAME)
  private String trialComponentName;

  public static final String SERIALIZED_NAME_TRIAL_COMPONENT_ARN = "TrialComponentArn";
  @SerializedName(SERIALIZED_NAME_TRIAL_COMPONENT_ARN)
  private String trialComponentArn;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_SOURCE = "Source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private DescribeTrialComponentResponseSource source;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private CreateTrialComponentRequestStatus status;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private DescribeTrialComponentResponseCreatedBy createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private DescribeTrialComponentResponseLastModifiedBy lastModifiedBy;

  public static final String SERIALIZED_NAME_PARAMETERS = "Parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map parameters;

  public static final String SERIALIZED_NAME_INPUT_ARTIFACTS = "InputArtifacts";
  @SerializedName(SERIALIZED_NAME_INPUT_ARTIFACTS)
  private Map inputArtifacts;

  public static final String SERIALIZED_NAME_OUTPUT_ARTIFACTS = "OutputArtifacts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_ARTIFACTS)
  private Map outputArtifacts;

  public static final String SERIALIZED_NAME_METADATA_PROPERTIES = "MetadataProperties";
  @SerializedName(SERIALIZED_NAME_METADATA_PROPERTIES)
  private MetadataProperties metadataProperties;

  public static final String SERIALIZED_NAME_METRICS = "Metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List metrics;

  public static final String SERIALIZED_NAME_LINEAGE_GROUP_ARN = "LineageGroupArn";
  @SerializedName(SERIALIZED_NAME_LINEAGE_GROUP_ARN)
  private String lineageGroupArn;

  public static final String SERIALIZED_NAME_SOURCES = "Sources";
  @SerializedName(SERIALIZED_NAME_SOURCES)
  private List sources;

  public DescribeTrialComponentResponse() {
  }

  public DescribeTrialComponentResponse trialComponentName(String trialComponentName) {
    this.trialComponentName = trialComponentName;
    return this;
  }

  /**
   * Get trialComponentName
   * @return trialComponentName
   */
  @javax.annotation.Nullable
  public String getTrialComponentName() {
    return trialComponentName;
  }

  public void setTrialComponentName(String trialComponentName) {
    this.trialComponentName = trialComponentName;
  }


  public DescribeTrialComponentResponse trialComponentArn(String trialComponentArn) {
    this.trialComponentArn = trialComponentArn;
    return this;
  }

  /**
   * Get trialComponentArn
   * @return trialComponentArn
   */
  @javax.annotation.Nullable
  public String getTrialComponentArn() {
    return trialComponentArn;
  }

  public void setTrialComponentArn(String trialComponentArn) {
    this.trialComponentArn = trialComponentArn;
  }


  public DescribeTrialComponentResponse displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DescribeTrialComponentResponse source(DescribeTrialComponentResponseSource source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public DescribeTrialComponentResponseSource getSource() {
    return source;
  }

  public void setSource(DescribeTrialComponentResponseSource source) {
    this.source = source;
  }


  public DescribeTrialComponentResponse status(CreateTrialComponentRequestStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public CreateTrialComponentRequestStatus getStatus() {
    return status;
  }

  public void setStatus(CreateTrialComponentRequestStatus status) {
    this.status = status;
  }


  public DescribeTrialComponentResponse startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public DescribeTrialComponentResponse endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public DescribeTrialComponentResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeTrialComponentResponse createdBy(DescribeTrialComponentResponseCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public DescribeTrialComponentResponseCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(DescribeTrialComponentResponseCreatedBy createdBy) {
    this.createdBy = createdBy;
  }


  public DescribeTrialComponentResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DescribeTrialComponentResponse lastModifiedBy(DescribeTrialComponentResponseLastModifiedBy lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public DescribeTrialComponentResponseLastModifiedBy getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(DescribeTrialComponentResponseLastModifiedBy lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public DescribeTrialComponentResponse parameters(Map parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map getParameters() {
    return parameters;
  }

  public void setParameters(Map parameters) {
    this.parameters = parameters;
  }


  public DescribeTrialComponentResponse inputArtifacts(Map inputArtifacts) {
    this.inputArtifacts = inputArtifacts;
    return this;
  }

  /**
   * Get inputArtifacts
   * @return inputArtifacts
   */
  @javax.annotation.Nullable
  public Map getInputArtifacts() {
    return inputArtifacts;
  }

  public void setInputArtifacts(Map inputArtifacts) {
    this.inputArtifacts = inputArtifacts;
  }


  public DescribeTrialComponentResponse outputArtifacts(Map outputArtifacts) {
    this.outputArtifacts = outputArtifacts;
    return this;
  }

  /**
   * Get outputArtifacts
   * @return outputArtifacts
   */
  @javax.annotation.Nullable
  public Map getOutputArtifacts() {
    return outputArtifacts;
  }

  public void setOutputArtifacts(Map outputArtifacts) {
    this.outputArtifacts = outputArtifacts;
  }


  public DescribeTrialComponentResponse metadataProperties(MetadataProperties metadataProperties) {
    this.metadataProperties = metadataProperties;
    return this;
  }

  /**
   * Get metadataProperties
   * @return metadataProperties
   */
  @javax.annotation.Nullable
  public MetadataProperties getMetadataProperties() {
    return metadataProperties;
  }

  public void setMetadataProperties(MetadataProperties metadataProperties) {
    this.metadataProperties = metadataProperties;
  }


  public DescribeTrialComponentResponse metrics(List metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public List getMetrics() {
    return metrics;
  }

  public void setMetrics(List metrics) {
    this.metrics = metrics;
  }


  public DescribeTrialComponentResponse lineageGroupArn(String lineageGroupArn) {
    this.lineageGroupArn = lineageGroupArn;
    return this;
  }

  /**
   * Get lineageGroupArn
   * @return lineageGroupArn
   */
  @javax.annotation.Nullable
  public String getLineageGroupArn() {
    return lineageGroupArn;
  }

  public void setLineageGroupArn(String lineageGroupArn) {
    this.lineageGroupArn = lineageGroupArn;
  }


  public DescribeTrialComponentResponse sources(List sources) {
    this.sources = sources;
    return this;
  }

  /**
   * Get sources
   * @return sources
   */
  @javax.annotation.Nullable
  public List getSources() {
    return sources;
  }

  public void setSources(List sources) {
    this.sources = sources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTrialComponentResponse describeTrialComponentResponse = (DescribeTrialComponentResponse) o;
    return Objects.equals(this.trialComponentName, describeTrialComponentResponse.trialComponentName) &&
        Objects.equals(this.trialComponentArn, describeTrialComponentResponse.trialComponentArn) &&
        Objects.equals(this.displayName, describeTrialComponentResponse.displayName) &&
        Objects.equals(this.source, describeTrialComponentResponse.source) &&
        Objects.equals(this.status, describeTrialComponentResponse.status) &&
        Objects.equals(this.startTime, describeTrialComponentResponse.startTime) &&
        Objects.equals(this.endTime, describeTrialComponentResponse.endTime) &&
        Objects.equals(this.creationTime, describeTrialComponentResponse.creationTime) &&
        Objects.equals(this.createdBy, describeTrialComponentResponse.createdBy) &&
        Objects.equals(this.lastModifiedTime, describeTrialComponentResponse.lastModifiedTime) &&
        Objects.equals(this.lastModifiedBy, describeTrialComponentResponse.lastModifiedBy) &&
        Objects.equals(this.parameters, describeTrialComponentResponse.parameters) &&
        Objects.equals(this.inputArtifacts, describeTrialComponentResponse.inputArtifacts) &&
        Objects.equals(this.outputArtifacts, describeTrialComponentResponse.outputArtifacts) &&
        Objects.equals(this.metadataProperties, describeTrialComponentResponse.metadataProperties) &&
        Objects.equals(this.metrics, describeTrialComponentResponse.metrics) &&
        Objects.equals(this.lineageGroupArn, describeTrialComponentResponse.lineageGroupArn) &&
        Objects.equals(this.sources, describeTrialComponentResponse.sources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trialComponentName, trialComponentArn, displayName, source, status, startTime, endTime, creationTime, createdBy, lastModifiedTime, lastModifiedBy, parameters, inputArtifacts, outputArtifacts, metadataProperties, metrics, lineageGroupArn, sources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTrialComponentResponse {\n");
    sb.append("    trialComponentName: ").append(toIndentedString(trialComponentName)).append("\n");
    sb.append("    trialComponentArn: ").append(toIndentedString(trialComponentArn)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    inputArtifacts: ").append(toIndentedString(inputArtifacts)).append("\n");
    sb.append("    outputArtifacts: ").append(toIndentedString(outputArtifacts)).append("\n");
    sb.append("    metadataProperties: ").append(toIndentedString(metadataProperties)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    lineageGroupArn: ").append(toIndentedString(lineageGroupArn)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TrialComponentName");
    openapiFields.add("TrialComponentArn");
    openapiFields.add("DisplayName");
    openapiFields.add("Source");
    openapiFields.add("Status");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("CreationTime");
    openapiFields.add("CreatedBy");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("Parameters");
    openapiFields.add("InputArtifacts");
    openapiFields.add("OutputArtifacts");
    openapiFields.add("MetadataProperties");
    openapiFields.add("Metrics");
    openapiFields.add("LineageGroupArn");
    openapiFields.add("Sources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeTrialComponentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeTrialComponentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeTrialComponentResponse is not found in the empty JSON string", DescribeTrialComponentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeTrialComponentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeTrialComponentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TrialComponentName`
      if (jsonObj.get("TrialComponentName") != null && !jsonObj.get("TrialComponentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrialComponentName"));
      }
      // validate the optional field `TrialComponentArn`
      if (jsonObj.get("TrialComponentArn") != null && !jsonObj.get("TrialComponentArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TrialComponentArn"));
      }
      // validate the optional field `DisplayName`
      if (jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DisplayName"));
      }
      // validate the optional field `Source`
      if (jsonObj.get("Source") != null && !jsonObj.get("Source").isJsonNull()) {
        DescribeTrialComponentResponseSource.validateJsonElement(jsonObj.get("Source"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        CreateTrialComponentRequestStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        DescribeTrialComponentResponseCreatedBy.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        DescribeTrialComponentResponseLastModifiedBy.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `Parameters`
      if (jsonObj.get("Parameters") != null && !jsonObj.get("Parameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Parameters"));
      }
      // validate the optional field `InputArtifacts`
      if (jsonObj.get("InputArtifacts") != null && !jsonObj.get("InputArtifacts").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("InputArtifacts"));
      }
      // validate the optional field `OutputArtifacts`
      if (jsonObj.get("OutputArtifacts") != null && !jsonObj.get("OutputArtifacts").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("OutputArtifacts"));
      }
      // validate the optional field `MetadataProperties`
      if (jsonObj.get("MetadataProperties") != null && !jsonObj.get("MetadataProperties").isJsonNull()) {
        MetadataProperties.validateJsonElement(jsonObj.get("MetadataProperties"));
      }
      // validate the optional field `Metrics`
      if (jsonObj.get("Metrics") != null && !jsonObj.get("Metrics").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Metrics"));
      }
      // validate the optional field `LineageGroupArn`
      if (jsonObj.get("LineageGroupArn") != null && !jsonObj.get("LineageGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LineageGroupArn"));
      }
      // validate the optional field `Sources`
      if (jsonObj.get("Sources") != null && !jsonObj.get("Sources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Sources"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeTrialComponentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeTrialComponentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeTrialComponentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeTrialComponentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeTrialComponentResponse>() {
           @Override
           public void write(JsonWriter out, DescribeTrialComponentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeTrialComponentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeTrialComponentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeTrialComponentResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeTrialComponentResponse
   */
  public static DescribeTrialComponentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeTrialComponentResponse.class);
  }

  /**
   * Convert an instance of DescribeTrialComponentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

