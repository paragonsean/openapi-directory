# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lineage_type import LineageType
from openapi_server import util


class Vertex(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, type: str=None, lineage_type: LineageType=None):
        """Vertex - a model defined in OpenAPI

        :param arn: The arn of this Vertex.
        :param type: The type of this Vertex.
        :param lineage_type: The lineage_type of this Vertex.
        """
        self.openapi_types = {
            'arn': str,
            'type': str,
            'lineage_type': LineageType
        }

        self.attribute_map = {
            'arn': 'Arn',
            'type': 'Type',
            'lineage_type': 'LineageType'
        }

        self._arn = arn
        self._type = type
        self._lineage_type = lineage_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Vertex':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Vertex of this Vertex.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this Vertex.


        :return: The arn of this Vertex.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Vertex.


        :param arn: The arn of this Vertex.
        :type arn: str
        """

        self._arn = arn

    @property
    def type(self):
        """Gets the type of this Vertex.


        :return: The type of this Vertex.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Vertex.


        :param type: The type of this Vertex.
        :type type: str
        """

        self._type = type

    @property
    def lineage_type(self):
        """Gets the lineage_type of this Vertex.


        :return: The lineage_type of this Vertex.
        :rtype: LineageType
        """
        return self._lineage_type

    @lineage_type.setter
    def lineage_type(self, lineage_type):
        """Sets the lineage_type of this Vertex.


        :param lineage_type: The lineage_type of this Vertex.
        :type lineage_type: LineageType
        """

        self._lineage_type = lineage_type
