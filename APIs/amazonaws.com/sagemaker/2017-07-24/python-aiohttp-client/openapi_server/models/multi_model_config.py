# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_cache_setting import ModelCacheSetting
from openapi_server import util


class MultiModelConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_cache_setting: ModelCacheSetting=None):
        """MultiModelConfig - a model defined in OpenAPI

        :param model_cache_setting: The model_cache_setting of this MultiModelConfig.
        """
        self.openapi_types = {
            'model_cache_setting': ModelCacheSetting
        }

        self.attribute_map = {
            'model_cache_setting': 'ModelCacheSetting'
        }

        self._model_cache_setting = model_cache_setting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MultiModelConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MultiModelConfig of this MultiModelConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_cache_setting(self):
        """Gets the model_cache_setting of this MultiModelConfig.


        :return: The model_cache_setting of this MultiModelConfig.
        :rtype: ModelCacheSetting
        """
        return self._model_cache_setting

    @model_cache_setting.setter
    def model_cache_setting(self, model_cache_setting):
        """Sets the model_cache_setting of this MultiModelConfig.


        :param model_cache_setting: The model_cache_setting of this MultiModelConfig.
        :type model_cache_setting: ModelCacheSetting
        """

        self._model_cache_setting = model_cache_setting
