# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bias_post_training_report import BiasPostTrainingReport
from openapi_server.models.bias_pre_training_report import BiasPreTrainingReport
from openapi_server.models.bias_report import BiasReport
from openapi_server import util


class Bias(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report: BiasReport=None, pre_training_report: BiasPreTrainingReport=None, post_training_report: BiasPostTrainingReport=None):
        """Bias - a model defined in OpenAPI

        :param report: The report of this Bias.
        :param pre_training_report: The pre_training_report of this Bias.
        :param post_training_report: The post_training_report of this Bias.
        """
        self.openapi_types = {
            'report': BiasReport,
            'pre_training_report': BiasPreTrainingReport,
            'post_training_report': BiasPostTrainingReport
        }

        self.attribute_map = {
            'report': 'Report',
            'pre_training_report': 'PreTrainingReport',
            'post_training_report': 'PostTrainingReport'
        }

        self._report = report
        self._pre_training_report = pre_training_report
        self._post_training_report = post_training_report

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Bias':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bias of this Bias.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report(self):
        """Gets the report of this Bias.


        :return: The report of this Bias.
        :rtype: BiasReport
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this Bias.


        :param report: The report of this Bias.
        :type report: BiasReport
        """

        self._report = report

    @property
    def pre_training_report(self):
        """Gets the pre_training_report of this Bias.


        :return: The pre_training_report of this Bias.
        :rtype: BiasPreTrainingReport
        """
        return self._pre_training_report

    @pre_training_report.setter
    def pre_training_report(self, pre_training_report):
        """Sets the pre_training_report of this Bias.


        :param pre_training_report: The pre_training_report of this Bias.
        :type pre_training_report: BiasPreTrainingReport
        """

        self._pre_training_report = pre_training_report

    @property
    def post_training_report(self):
        """Gets the post_training_report of this Bias.


        :return: The post_training_report of this Bias.
        :rtype: BiasPostTrainingReport
        """
        return self._post_training_report

    @post_training_report.setter
    def post_training_report(self, post_training_report):
        """Sets the post_training_report of this Bias.


        :param post_training_report: The post_training_report of this Bias.
        :type post_training_report: BiasPostTrainingReport
        """

        self._post_training_report = post_training_report
