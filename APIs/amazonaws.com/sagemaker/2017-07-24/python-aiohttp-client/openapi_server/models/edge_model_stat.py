# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EdgeModelStat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, model_version: str=None, offline_device_count: int=None, connected_device_count: int=None, active_device_count: int=None, sampling_device_count: int=None):
        """EdgeModelStat - a model defined in OpenAPI

        :param model_name: The model_name of this EdgeModelStat.
        :param model_version: The model_version of this EdgeModelStat.
        :param offline_device_count: The offline_device_count of this EdgeModelStat.
        :param connected_device_count: The connected_device_count of this EdgeModelStat.
        :param active_device_count: The active_device_count of this EdgeModelStat.
        :param sampling_device_count: The sampling_device_count of this EdgeModelStat.
        """
        self.openapi_types = {
            'model_name': str,
            'model_version': str,
            'offline_device_count': int,
            'connected_device_count': int,
            'active_device_count': int,
            'sampling_device_count': int
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'model_version': 'ModelVersion',
            'offline_device_count': 'OfflineDeviceCount',
            'connected_device_count': 'ConnectedDeviceCount',
            'active_device_count': 'ActiveDeviceCount',
            'sampling_device_count': 'SamplingDeviceCount'
        }

        self._model_name = model_name
        self._model_version = model_version
        self._offline_device_count = offline_device_count
        self._connected_device_count = connected_device_count
        self._active_device_count = active_device_count
        self._sampling_device_count = sampling_device_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdgeModelStat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdgeModelStat of this EdgeModelStat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this EdgeModelStat.


        :return: The model_name of this EdgeModelStat.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this EdgeModelStat.


        :param model_name: The model_name of this EdgeModelStat.
        :type model_name: str
        """
        if model_name is None:
            raise ValueError("Invalid value for `model_name`, must not be `None`")

        self._model_name = model_name

    @property
    def model_version(self):
        """Gets the model_version of this EdgeModelStat.


        :return: The model_version of this EdgeModelStat.
        :rtype: str
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this EdgeModelStat.


        :param model_version: The model_version of this EdgeModelStat.
        :type model_version: str
        """
        if model_version is None:
            raise ValueError("Invalid value for `model_version`, must not be `None`")

        self._model_version = model_version

    @property
    def offline_device_count(self):
        """Gets the offline_device_count of this EdgeModelStat.


        :return: The offline_device_count of this EdgeModelStat.
        :rtype: int
        """
        return self._offline_device_count

    @offline_device_count.setter
    def offline_device_count(self, offline_device_count):
        """Sets the offline_device_count of this EdgeModelStat.


        :param offline_device_count: The offline_device_count of this EdgeModelStat.
        :type offline_device_count: int
        """
        if offline_device_count is None:
            raise ValueError("Invalid value for `offline_device_count`, must not be `None`")

        self._offline_device_count = offline_device_count

    @property
    def connected_device_count(self):
        """Gets the connected_device_count of this EdgeModelStat.


        :return: The connected_device_count of this EdgeModelStat.
        :rtype: int
        """
        return self._connected_device_count

    @connected_device_count.setter
    def connected_device_count(self, connected_device_count):
        """Sets the connected_device_count of this EdgeModelStat.


        :param connected_device_count: The connected_device_count of this EdgeModelStat.
        :type connected_device_count: int
        """
        if connected_device_count is None:
            raise ValueError("Invalid value for `connected_device_count`, must not be `None`")

        self._connected_device_count = connected_device_count

    @property
    def active_device_count(self):
        """Gets the active_device_count of this EdgeModelStat.


        :return: The active_device_count of this EdgeModelStat.
        :rtype: int
        """
        return self._active_device_count

    @active_device_count.setter
    def active_device_count(self, active_device_count):
        """Sets the active_device_count of this EdgeModelStat.


        :param active_device_count: The active_device_count of this EdgeModelStat.
        :type active_device_count: int
        """
        if active_device_count is None:
            raise ValueError("Invalid value for `active_device_count`, must not be `None`")

        self._active_device_count = active_device_count

    @property
    def sampling_device_count(self):
        """Gets the sampling_device_count of this EdgeModelStat.


        :return: The sampling_device_count of this EdgeModelStat.
        :rtype: int
        """
        return self._sampling_device_count

    @sampling_device_count.setter
    def sampling_device_count(self, sampling_device_count):
        """Sets the sampling_device_count of this EdgeModelStat.


        :param sampling_device_count: The sampling_device_count of this EdgeModelStat.
        :type sampling_device_count: int
        """
        if sampling_device_count is None:
            raise ValueError("Invalid value for `sampling_device_count`, must not be `None`")

        self._sampling_device_count = sampling_device_count
