# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShuffleConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, seed: int=None):
        """ShuffleConfig - a model defined in OpenAPI

        :param seed: The seed of this ShuffleConfig.
        """
        self.openapi_types = {
            'seed': int
        }

        self.attribute_map = {
            'seed': 'Seed'
        }

        self._seed = seed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShuffleConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShuffleConfig of this ShuffleConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def seed(self):
        """Gets the seed of this ShuffleConfig.


        :return: The seed of this ShuffleConfig.
        :rtype: int
        """
        return self._seed

    @seed.setter
    def seed(self, seed):
        """Sets the seed of this ShuffleConfig.


        :param seed: The seed of this ShuffleConfig.
        :type seed: int
        """
        if seed is None:
            raise ValueError("Invalid value for `seed`, must not be `None`")

        self._seed = seed
