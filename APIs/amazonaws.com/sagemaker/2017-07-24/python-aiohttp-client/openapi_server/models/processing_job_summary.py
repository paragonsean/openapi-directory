# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.processing_job_status import ProcessingJobStatus
from openapi_server import util


class ProcessingJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, processing_job_name: str=None, processing_job_arn: str=None, creation_time: datetime=None, processing_end_time: datetime=None, last_modified_time: datetime=None, processing_job_status: ProcessingJobStatus=None, failure_reason: str=None, exit_message: str=None):
        """ProcessingJobSummary - a model defined in OpenAPI

        :param processing_job_name: The processing_job_name of this ProcessingJobSummary.
        :param processing_job_arn: The processing_job_arn of this ProcessingJobSummary.
        :param creation_time: The creation_time of this ProcessingJobSummary.
        :param processing_end_time: The processing_end_time of this ProcessingJobSummary.
        :param last_modified_time: The last_modified_time of this ProcessingJobSummary.
        :param processing_job_status: The processing_job_status of this ProcessingJobSummary.
        :param failure_reason: The failure_reason of this ProcessingJobSummary.
        :param exit_message: The exit_message of this ProcessingJobSummary.
        """
        self.openapi_types = {
            'processing_job_name': str,
            'processing_job_arn': str,
            'creation_time': datetime,
            'processing_end_time': datetime,
            'last_modified_time': datetime,
            'processing_job_status': ProcessingJobStatus,
            'failure_reason': str,
            'exit_message': str
        }

        self.attribute_map = {
            'processing_job_name': 'ProcessingJobName',
            'processing_job_arn': 'ProcessingJobArn',
            'creation_time': 'CreationTime',
            'processing_end_time': 'ProcessingEndTime',
            'last_modified_time': 'LastModifiedTime',
            'processing_job_status': 'ProcessingJobStatus',
            'failure_reason': 'FailureReason',
            'exit_message': 'ExitMessage'
        }

        self._processing_job_name = processing_job_name
        self._processing_job_arn = processing_job_arn
        self._creation_time = creation_time
        self._processing_end_time = processing_end_time
        self._last_modified_time = last_modified_time
        self._processing_job_status = processing_job_status
        self._failure_reason = failure_reason
        self._exit_message = exit_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProcessingJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProcessingJobSummary of this ProcessingJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def processing_job_name(self):
        """Gets the processing_job_name of this ProcessingJobSummary.


        :return: The processing_job_name of this ProcessingJobSummary.
        :rtype: str
        """
        return self._processing_job_name

    @processing_job_name.setter
    def processing_job_name(self, processing_job_name):
        """Sets the processing_job_name of this ProcessingJobSummary.


        :param processing_job_name: The processing_job_name of this ProcessingJobSummary.
        :type processing_job_name: str
        """
        if processing_job_name is None:
            raise ValueError("Invalid value for `processing_job_name`, must not be `None`")

        self._processing_job_name = processing_job_name

    @property
    def processing_job_arn(self):
        """Gets the processing_job_arn of this ProcessingJobSummary.


        :return: The processing_job_arn of this ProcessingJobSummary.
        :rtype: str
        """
        return self._processing_job_arn

    @processing_job_arn.setter
    def processing_job_arn(self, processing_job_arn):
        """Sets the processing_job_arn of this ProcessingJobSummary.


        :param processing_job_arn: The processing_job_arn of this ProcessingJobSummary.
        :type processing_job_arn: str
        """
        if processing_job_arn is None:
            raise ValueError("Invalid value for `processing_job_arn`, must not be `None`")

        self._processing_job_arn = processing_job_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this ProcessingJobSummary.


        :return: The creation_time of this ProcessingJobSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ProcessingJobSummary.


        :param creation_time: The creation_time of this ProcessingJobSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def processing_end_time(self):
        """Gets the processing_end_time of this ProcessingJobSummary.


        :return: The processing_end_time of this ProcessingJobSummary.
        :rtype: datetime
        """
        return self._processing_end_time

    @processing_end_time.setter
    def processing_end_time(self, processing_end_time):
        """Sets the processing_end_time of this ProcessingJobSummary.


        :param processing_end_time: The processing_end_time of this ProcessingJobSummary.
        :type processing_end_time: datetime
        """

        self._processing_end_time = processing_end_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this ProcessingJobSummary.


        :return: The last_modified_time of this ProcessingJobSummary.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this ProcessingJobSummary.


        :param last_modified_time: The last_modified_time of this ProcessingJobSummary.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def processing_job_status(self):
        """Gets the processing_job_status of this ProcessingJobSummary.


        :return: The processing_job_status of this ProcessingJobSummary.
        :rtype: ProcessingJobStatus
        """
        return self._processing_job_status

    @processing_job_status.setter
    def processing_job_status(self, processing_job_status):
        """Sets the processing_job_status of this ProcessingJobSummary.


        :param processing_job_status: The processing_job_status of this ProcessingJobSummary.
        :type processing_job_status: ProcessingJobStatus
        """
        if processing_job_status is None:
            raise ValueError("Invalid value for `processing_job_status`, must not be `None`")

        self._processing_job_status = processing_job_status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this ProcessingJobSummary.


        :return: The failure_reason of this ProcessingJobSummary.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this ProcessingJobSummary.


        :param failure_reason: The failure_reason of this ProcessingJobSummary.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def exit_message(self):
        """Gets the exit_message of this ProcessingJobSummary.


        :return: The exit_message of this ProcessingJobSummary.
        :rtype: str
        """
        return self._exit_message

    @exit_message.setter
    def exit_message(self, exit_message):
        """Sets the exit_message of this ProcessingJobSummary.


        :param exit_message: The exit_message of this ProcessingJobSummary.
        :type exit_message: str
        """

        self._exit_message = exit_message
