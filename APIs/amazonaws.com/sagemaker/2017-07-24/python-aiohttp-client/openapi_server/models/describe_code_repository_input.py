# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeCodeRepositoryInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_repository_name: str=None):
        """DescribeCodeRepositoryInput - a model defined in OpenAPI

        :param code_repository_name: The code_repository_name of this DescribeCodeRepositoryInput.
        """
        self.openapi_types = {
            'code_repository_name': str
        }

        self.attribute_map = {
            'code_repository_name': 'CodeRepositoryName'
        }

        self._code_repository_name = code_repository_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCodeRepositoryInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCodeRepositoryInput of this DescribeCodeRepositoryInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_repository_name(self):
        """Gets the code_repository_name of this DescribeCodeRepositoryInput.


        :return: The code_repository_name of this DescribeCodeRepositoryInput.
        :rtype: str
        """
        return self._code_repository_name

    @code_repository_name.setter
    def code_repository_name(self, code_repository_name):
        """Sets the code_repository_name of this DescribeCodeRepositoryInput.


        :param code_repository_name: The code_repository_name of this DescribeCodeRepositoryInput.
        :type code_repository_name: str
        """
        if code_repository_name is None:
            raise ValueError("Invalid value for `code_repository_name`, must not be `None`")

        self._code_repository_name = code_repository_name
