# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateMonitoringAlertResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitoring_schedule_arn: str=None, monitoring_alert_name: str=None):
        """UpdateMonitoringAlertResponse - a model defined in OpenAPI

        :param monitoring_schedule_arn: The monitoring_schedule_arn of this UpdateMonitoringAlertResponse.
        :param monitoring_alert_name: The monitoring_alert_name of this UpdateMonitoringAlertResponse.
        """
        self.openapi_types = {
            'monitoring_schedule_arn': str,
            'monitoring_alert_name': str
        }

        self.attribute_map = {
            'monitoring_schedule_arn': 'MonitoringScheduleArn',
            'monitoring_alert_name': 'MonitoringAlertName'
        }

        self._monitoring_schedule_arn = monitoring_schedule_arn
        self._monitoring_alert_name = monitoring_alert_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMonitoringAlertResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateMonitoringAlertResponse of this UpdateMonitoringAlertResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_schedule_arn(self):
        """Gets the monitoring_schedule_arn of this UpdateMonitoringAlertResponse.


        :return: The monitoring_schedule_arn of this UpdateMonitoringAlertResponse.
        :rtype: str
        """
        return self._monitoring_schedule_arn

    @monitoring_schedule_arn.setter
    def monitoring_schedule_arn(self, monitoring_schedule_arn):
        """Sets the monitoring_schedule_arn of this UpdateMonitoringAlertResponse.


        :param monitoring_schedule_arn: The monitoring_schedule_arn of this UpdateMonitoringAlertResponse.
        :type monitoring_schedule_arn: str
        """
        if monitoring_schedule_arn is None:
            raise ValueError("Invalid value for `monitoring_schedule_arn`, must not be `None`")

        self._monitoring_schedule_arn = monitoring_schedule_arn

    @property
    def monitoring_alert_name(self):
        """Gets the monitoring_alert_name of this UpdateMonitoringAlertResponse.


        :return: The monitoring_alert_name of this UpdateMonitoringAlertResponse.
        :rtype: str
        """
        return self._monitoring_alert_name

    @monitoring_alert_name.setter
    def monitoring_alert_name(self, monitoring_alert_name):
        """Sets the monitoring_alert_name of this UpdateMonitoringAlertResponse.


        :param monitoring_alert_name: The monitoring_alert_name of this UpdateMonitoringAlertResponse.
        :type monitoring_alert_name: str
        """

        self._monitoring_alert_name = monitoring_alert_name
