# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointConfigSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_config_name: str=None, endpoint_config_arn: str=None, creation_time: datetime=None):
        """EndpointConfigSummary - a model defined in OpenAPI

        :param endpoint_config_name: The endpoint_config_name of this EndpointConfigSummary.
        :param endpoint_config_arn: The endpoint_config_arn of this EndpointConfigSummary.
        :param creation_time: The creation_time of this EndpointConfigSummary.
        """
        self.openapi_types = {
            'endpoint_config_name': str,
            'endpoint_config_arn': str,
            'creation_time': datetime
        }

        self.attribute_map = {
            'endpoint_config_name': 'EndpointConfigName',
            'endpoint_config_arn': 'EndpointConfigArn',
            'creation_time': 'CreationTime'
        }

        self._endpoint_config_name = endpoint_config_name
        self._endpoint_config_arn = endpoint_config_arn
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointConfigSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointConfigSummary of this EndpointConfigSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_config_name(self):
        """Gets the endpoint_config_name of this EndpointConfigSummary.


        :return: The endpoint_config_name of this EndpointConfigSummary.
        :rtype: str
        """
        return self._endpoint_config_name

    @endpoint_config_name.setter
    def endpoint_config_name(self, endpoint_config_name):
        """Sets the endpoint_config_name of this EndpointConfigSummary.


        :param endpoint_config_name: The endpoint_config_name of this EndpointConfigSummary.
        :type endpoint_config_name: str
        """
        if endpoint_config_name is None:
            raise ValueError("Invalid value for `endpoint_config_name`, must not be `None`")

        self._endpoint_config_name = endpoint_config_name

    @property
    def endpoint_config_arn(self):
        """Gets the endpoint_config_arn of this EndpointConfigSummary.


        :return: The endpoint_config_arn of this EndpointConfigSummary.
        :rtype: str
        """
        return self._endpoint_config_arn

    @endpoint_config_arn.setter
    def endpoint_config_arn(self, endpoint_config_arn):
        """Sets the endpoint_config_arn of this EndpointConfigSummary.


        :param endpoint_config_arn: The endpoint_config_arn of this EndpointConfigSummary.
        :type endpoint_config_arn: str
        """
        if endpoint_config_arn is None:
            raise ValueError("Invalid value for `endpoint_config_arn`, must not be `None`")

        self._endpoint_config_arn = endpoint_config_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this EndpointConfigSummary.


        :return: The creation_time of this EndpointConfigSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this EndpointConfigSummary.


        :param creation_time: The creation_time of this EndpointConfigSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time
