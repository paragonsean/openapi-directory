# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workforce_cognito_config import WorkforceCognitoConfig
from openapi_server.models.workforce_oidc_config import WorkforceOidcConfig
from openapi_server.models.workforce_source_ip_config import WorkforceSourceIpConfig
from openapi_server.models.workforce_status import WorkforceStatus
from openapi_server.models.workforce_workforce_vpc_config import WorkforceWorkforceVpcConfig
from openapi_server import util


class DescribeWorkforceResponseWorkforce(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workforce_name: str=None, workforce_arn: str=None, last_updated_date: datetime=None, source_ip_config: WorkforceSourceIpConfig=None, sub_domain: str=None, cognito_config: WorkforceCognitoConfig=None, oidc_config: WorkforceOidcConfig=None, create_date: datetime=None, workforce_vpc_config: WorkforceWorkforceVpcConfig=None, status: WorkforceStatus=None, failure_reason: str=None):
        """DescribeWorkforceResponseWorkforce - a model defined in OpenAPI

        :param workforce_name: The workforce_name of this DescribeWorkforceResponseWorkforce.
        :param workforce_arn: The workforce_arn of this DescribeWorkforceResponseWorkforce.
        :param last_updated_date: The last_updated_date of this DescribeWorkforceResponseWorkforce.
        :param source_ip_config: The source_ip_config of this DescribeWorkforceResponseWorkforce.
        :param sub_domain: The sub_domain of this DescribeWorkforceResponseWorkforce.
        :param cognito_config: The cognito_config of this DescribeWorkforceResponseWorkforce.
        :param oidc_config: The oidc_config of this DescribeWorkforceResponseWorkforce.
        :param create_date: The create_date of this DescribeWorkforceResponseWorkforce.
        :param workforce_vpc_config: The workforce_vpc_config of this DescribeWorkforceResponseWorkforce.
        :param status: The status of this DescribeWorkforceResponseWorkforce.
        :param failure_reason: The failure_reason of this DescribeWorkforceResponseWorkforce.
        """
        self.openapi_types = {
            'workforce_name': str,
            'workforce_arn': str,
            'last_updated_date': datetime,
            'source_ip_config': WorkforceSourceIpConfig,
            'sub_domain': str,
            'cognito_config': WorkforceCognitoConfig,
            'oidc_config': WorkforceOidcConfig,
            'create_date': datetime,
            'workforce_vpc_config': WorkforceWorkforceVpcConfig,
            'status': WorkforceStatus,
            'failure_reason': str
        }

        self.attribute_map = {
            'workforce_name': 'WorkforceName',
            'workforce_arn': 'WorkforceArn',
            'last_updated_date': 'LastUpdatedDate',
            'source_ip_config': 'SourceIpConfig',
            'sub_domain': 'SubDomain',
            'cognito_config': 'CognitoConfig',
            'oidc_config': 'OidcConfig',
            'create_date': 'CreateDate',
            'workforce_vpc_config': 'WorkforceVpcConfig',
            'status': 'Status',
            'failure_reason': 'FailureReason'
        }

        self._workforce_name = workforce_name
        self._workforce_arn = workforce_arn
        self._last_updated_date = last_updated_date
        self._source_ip_config = source_ip_config
        self._sub_domain = sub_domain
        self._cognito_config = cognito_config
        self._oidc_config = oidc_config
        self._create_date = create_date
        self._workforce_vpc_config = workforce_vpc_config
        self._status = status
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkforceResponseWorkforce':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkforceResponse_Workforce of this DescribeWorkforceResponseWorkforce.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workforce_name(self):
        """Gets the workforce_name of this DescribeWorkforceResponseWorkforce.


        :return: The workforce_name of this DescribeWorkforceResponseWorkforce.
        :rtype: str
        """
        return self._workforce_name

    @workforce_name.setter
    def workforce_name(self, workforce_name):
        """Sets the workforce_name of this DescribeWorkforceResponseWorkforce.


        :param workforce_name: The workforce_name of this DescribeWorkforceResponseWorkforce.
        :type workforce_name: str
        """
        if workforce_name is None:
            raise ValueError("Invalid value for `workforce_name`, must not be `None`")

        self._workforce_name = workforce_name

    @property
    def workforce_arn(self):
        """Gets the workforce_arn of this DescribeWorkforceResponseWorkforce.


        :return: The workforce_arn of this DescribeWorkforceResponseWorkforce.
        :rtype: str
        """
        return self._workforce_arn

    @workforce_arn.setter
    def workforce_arn(self, workforce_arn):
        """Sets the workforce_arn of this DescribeWorkforceResponseWorkforce.


        :param workforce_arn: The workforce_arn of this DescribeWorkforceResponseWorkforce.
        :type workforce_arn: str
        """
        if workforce_arn is None:
            raise ValueError("Invalid value for `workforce_arn`, must not be `None`")

        self._workforce_arn = workforce_arn

    @property
    def last_updated_date(self):
        """Gets the last_updated_date of this DescribeWorkforceResponseWorkforce.


        :return: The last_updated_date of this DescribeWorkforceResponseWorkforce.
        :rtype: datetime
        """
        return self._last_updated_date

    @last_updated_date.setter
    def last_updated_date(self, last_updated_date):
        """Sets the last_updated_date of this DescribeWorkforceResponseWorkforce.


        :param last_updated_date: The last_updated_date of this DescribeWorkforceResponseWorkforce.
        :type last_updated_date: datetime
        """

        self._last_updated_date = last_updated_date

    @property
    def source_ip_config(self):
        """Gets the source_ip_config of this DescribeWorkforceResponseWorkforce.


        :return: The source_ip_config of this DescribeWorkforceResponseWorkforce.
        :rtype: WorkforceSourceIpConfig
        """
        return self._source_ip_config

    @source_ip_config.setter
    def source_ip_config(self, source_ip_config):
        """Sets the source_ip_config of this DescribeWorkforceResponseWorkforce.


        :param source_ip_config: The source_ip_config of this DescribeWorkforceResponseWorkforce.
        :type source_ip_config: WorkforceSourceIpConfig
        """

        self._source_ip_config = source_ip_config

    @property
    def sub_domain(self):
        """Gets the sub_domain of this DescribeWorkforceResponseWorkforce.


        :return: The sub_domain of this DescribeWorkforceResponseWorkforce.
        :rtype: str
        """
        return self._sub_domain

    @sub_domain.setter
    def sub_domain(self, sub_domain):
        """Sets the sub_domain of this DescribeWorkforceResponseWorkforce.


        :param sub_domain: The sub_domain of this DescribeWorkforceResponseWorkforce.
        :type sub_domain: str
        """

        self._sub_domain = sub_domain

    @property
    def cognito_config(self):
        """Gets the cognito_config of this DescribeWorkforceResponseWorkforce.


        :return: The cognito_config of this DescribeWorkforceResponseWorkforce.
        :rtype: WorkforceCognitoConfig
        """
        return self._cognito_config

    @cognito_config.setter
    def cognito_config(self, cognito_config):
        """Sets the cognito_config of this DescribeWorkforceResponseWorkforce.


        :param cognito_config: The cognito_config of this DescribeWorkforceResponseWorkforce.
        :type cognito_config: WorkforceCognitoConfig
        """

        self._cognito_config = cognito_config

    @property
    def oidc_config(self):
        """Gets the oidc_config of this DescribeWorkforceResponseWorkforce.


        :return: The oidc_config of this DescribeWorkforceResponseWorkforce.
        :rtype: WorkforceOidcConfig
        """
        return self._oidc_config

    @oidc_config.setter
    def oidc_config(self, oidc_config):
        """Sets the oidc_config of this DescribeWorkforceResponseWorkforce.


        :param oidc_config: The oidc_config of this DescribeWorkforceResponseWorkforce.
        :type oidc_config: WorkforceOidcConfig
        """

        self._oidc_config = oidc_config

    @property
    def create_date(self):
        """Gets the create_date of this DescribeWorkforceResponseWorkforce.


        :return: The create_date of this DescribeWorkforceResponseWorkforce.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this DescribeWorkforceResponseWorkforce.


        :param create_date: The create_date of this DescribeWorkforceResponseWorkforce.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def workforce_vpc_config(self):
        """Gets the workforce_vpc_config of this DescribeWorkforceResponseWorkforce.


        :return: The workforce_vpc_config of this DescribeWorkforceResponseWorkforce.
        :rtype: WorkforceWorkforceVpcConfig
        """
        return self._workforce_vpc_config

    @workforce_vpc_config.setter
    def workforce_vpc_config(self, workforce_vpc_config):
        """Sets the workforce_vpc_config of this DescribeWorkforceResponseWorkforce.


        :param workforce_vpc_config: The workforce_vpc_config of this DescribeWorkforceResponseWorkforce.
        :type workforce_vpc_config: WorkforceWorkforceVpcConfig
        """

        self._workforce_vpc_config = workforce_vpc_config

    @property
    def status(self):
        """Gets the status of this DescribeWorkforceResponseWorkforce.


        :return: The status of this DescribeWorkforceResponseWorkforce.
        :rtype: WorkforceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeWorkforceResponseWorkforce.


        :param status: The status of this DescribeWorkforceResponseWorkforce.
        :type status: WorkforceStatus
        """

        self._status = status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this DescribeWorkforceResponseWorkforce.


        :return: The failure_reason of this DescribeWorkforceResponseWorkforce.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this DescribeWorkforceResponseWorkforce.


        :param failure_reason: The failure_reason of this DescribeWorkforceResponseWorkforce.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason
