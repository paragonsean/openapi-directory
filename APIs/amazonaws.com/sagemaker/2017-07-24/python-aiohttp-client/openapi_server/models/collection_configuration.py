# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CollectionConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_name: str=None, collection_parameters: Dict=None):
        """CollectionConfiguration - a model defined in OpenAPI

        :param collection_name: The collection_name of this CollectionConfiguration.
        :param collection_parameters: The collection_parameters of this CollectionConfiguration.
        """
        self.openapi_types = {
            'collection_name': str,
            'collection_parameters': Dict
        }

        self.attribute_map = {
            'collection_name': 'CollectionName',
            'collection_parameters': 'CollectionParameters'
        }

        self._collection_name = collection_name
        self._collection_parameters = collection_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CollectionConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CollectionConfiguration of this CollectionConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_name(self):
        """Gets the collection_name of this CollectionConfiguration.


        :return: The collection_name of this CollectionConfiguration.
        :rtype: str
        """
        return self._collection_name

    @collection_name.setter
    def collection_name(self, collection_name):
        """Sets the collection_name of this CollectionConfiguration.


        :param collection_name: The collection_name of this CollectionConfiguration.
        :type collection_name: str
        """

        self._collection_name = collection_name

    @property
    def collection_parameters(self):
        """Gets the collection_parameters of this CollectionConfiguration.


        :return: The collection_parameters of this CollectionConfiguration.
        :rtype: Dict
        """
        return self._collection_parameters

    @collection_parameters.setter
    def collection_parameters(self, collection_parameters):
        """Sets the collection_parameters of this CollectionConfiguration.


        :param collection_parameters: The collection_parameters of this CollectionConfiguration.
        :type collection_parameters: Dict
        """

        self._collection_parameters = collection_parameters
