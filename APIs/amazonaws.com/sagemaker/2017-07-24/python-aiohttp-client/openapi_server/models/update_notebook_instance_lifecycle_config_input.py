# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateNotebookInstanceLifecycleConfigInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebook_instance_lifecycle_config_name: str=None, on_create: List=None, on_start: List=None):
        """UpdateNotebookInstanceLifecycleConfigInput - a model defined in OpenAPI

        :param notebook_instance_lifecycle_config_name: The notebook_instance_lifecycle_config_name of this UpdateNotebookInstanceLifecycleConfigInput.
        :param on_create: The on_create of this UpdateNotebookInstanceLifecycleConfigInput.
        :param on_start: The on_start of this UpdateNotebookInstanceLifecycleConfigInput.
        """
        self.openapi_types = {
            'notebook_instance_lifecycle_config_name': str,
            'on_create': List,
            'on_start': List
        }

        self.attribute_map = {
            'notebook_instance_lifecycle_config_name': 'NotebookInstanceLifecycleConfigName',
            'on_create': 'OnCreate',
            'on_start': 'OnStart'
        }

        self._notebook_instance_lifecycle_config_name = notebook_instance_lifecycle_config_name
        self._on_create = on_create
        self._on_start = on_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNotebookInstanceLifecycleConfigInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateNotebookInstanceLifecycleConfigInput of this UpdateNotebookInstanceLifecycleConfigInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebook_instance_lifecycle_config_name(self):
        """Gets the notebook_instance_lifecycle_config_name of this UpdateNotebookInstanceLifecycleConfigInput.


        :return: The notebook_instance_lifecycle_config_name of this UpdateNotebookInstanceLifecycleConfigInput.
        :rtype: str
        """
        return self._notebook_instance_lifecycle_config_name

    @notebook_instance_lifecycle_config_name.setter
    def notebook_instance_lifecycle_config_name(self, notebook_instance_lifecycle_config_name):
        """Sets the notebook_instance_lifecycle_config_name of this UpdateNotebookInstanceLifecycleConfigInput.


        :param notebook_instance_lifecycle_config_name: The notebook_instance_lifecycle_config_name of this UpdateNotebookInstanceLifecycleConfigInput.
        :type notebook_instance_lifecycle_config_name: str
        """
        if notebook_instance_lifecycle_config_name is None:
            raise ValueError("Invalid value for `notebook_instance_lifecycle_config_name`, must not be `None`")

        self._notebook_instance_lifecycle_config_name = notebook_instance_lifecycle_config_name

    @property
    def on_create(self):
        """Gets the on_create of this UpdateNotebookInstanceLifecycleConfigInput.


        :return: The on_create of this UpdateNotebookInstanceLifecycleConfigInput.
        :rtype: List
        """
        return self._on_create

    @on_create.setter
    def on_create(self, on_create):
        """Sets the on_create of this UpdateNotebookInstanceLifecycleConfigInput.


        :param on_create: The on_create of this UpdateNotebookInstanceLifecycleConfigInput.
        :type on_create: List
        """

        self._on_create = on_create

    @property
    def on_start(self):
        """Gets the on_start of this UpdateNotebookInstanceLifecycleConfigInput.


        :return: The on_start of this UpdateNotebookInstanceLifecycleConfigInput.
        :rtype: List
        """
        return self._on_start

    @on_start.setter
    def on_start(self, on_start):
        """Sets the on_start of this UpdateNotebookInstanceLifecycleConfigInput.


        :param on_start: The on_start of this UpdateNotebookInstanceLifecycleConfigInput.
        :type on_start: List
        """

        self._on_start = on_start
