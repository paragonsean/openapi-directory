# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LabelingJobDataSourceS3DataSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, manifest_s3_uri: str=None):
        """LabelingJobDataSourceS3DataSource - a model defined in OpenAPI

        :param manifest_s3_uri: The manifest_s3_uri of this LabelingJobDataSourceS3DataSource.
        """
        self.openapi_types = {
            'manifest_s3_uri': str
        }

        self.attribute_map = {
            'manifest_s3_uri': 'ManifestS3Uri'
        }

        self._manifest_s3_uri = manifest_s3_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelingJobDataSourceS3DataSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelingJobDataSource_S3DataSource of this LabelingJobDataSourceS3DataSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def manifest_s3_uri(self):
        """Gets the manifest_s3_uri of this LabelingJobDataSourceS3DataSource.


        :return: The manifest_s3_uri of this LabelingJobDataSourceS3DataSource.
        :rtype: str
        """
        return self._manifest_s3_uri

    @manifest_s3_uri.setter
    def manifest_s3_uri(self, manifest_s3_uri):
        """Sets the manifest_s3_uri of this LabelingJobDataSourceS3DataSource.


        :param manifest_s3_uri: The manifest_s3_uri of this LabelingJobDataSourceS3DataSource.
        :type manifest_s3_uri: str
        """
        if manifest_s3_uri is None:
            raise ValueError("Invalid value for `manifest_s3_uri`, must not be `None`")

        self._manifest_s3_uri = manifest_s3_uri
