# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transform_data_source_s3_data_source import TransformDataSourceS3DataSource
from openapi_server import util


class TransformDataSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_data_source: TransformDataSourceS3DataSource=None):
        """TransformDataSource - a model defined in OpenAPI

        :param s3_data_source: The s3_data_source of this TransformDataSource.
        """
        self.openapi_types = {
            's3_data_source': TransformDataSourceS3DataSource
        }

        self.attribute_map = {
            's3_data_source': 'S3DataSource'
        }

        self._s3_data_source = s3_data_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransformDataSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransformDataSource of this TransformDataSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_data_source(self):
        """Gets the s3_data_source of this TransformDataSource.


        :return: The s3_data_source of this TransformDataSource.
        :rtype: TransformDataSourceS3DataSource
        """
        return self._s3_data_source

    @s3_data_source.setter
    def s3_data_source(self, s3_data_source):
        """Sets the s3_data_source of this TransformDataSource.


        :param s3_data_source: The s3_data_source of this TransformDataSource.
        :type s3_data_source: TransformDataSourceS3DataSource
        """
        if s3_data_source is None:
            raise ValueError("Invalid value for `s3_data_source`, must not be `None`")

        self._s3_data_source = s3_data_source
