# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_deployment_status import DeviceDeploymentStatus
from openapi_server import util


class DeviceDeploymentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edge_deployment_plan_arn: str=None, edge_deployment_plan_name: str=None, stage_name: str=None, deployed_stage_name: str=None, device_fleet_name: str=None, device_name: str=None, device_arn: str=None, device_deployment_status: DeviceDeploymentStatus=None, device_deployment_status_message: str=None, description: str=None, deployment_start_time: datetime=None):
        """DeviceDeploymentSummary - a model defined in OpenAPI

        :param edge_deployment_plan_arn: The edge_deployment_plan_arn of this DeviceDeploymentSummary.
        :param edge_deployment_plan_name: The edge_deployment_plan_name of this DeviceDeploymentSummary.
        :param stage_name: The stage_name of this DeviceDeploymentSummary.
        :param deployed_stage_name: The deployed_stage_name of this DeviceDeploymentSummary.
        :param device_fleet_name: The device_fleet_name of this DeviceDeploymentSummary.
        :param device_name: The device_name of this DeviceDeploymentSummary.
        :param device_arn: The device_arn of this DeviceDeploymentSummary.
        :param device_deployment_status: The device_deployment_status of this DeviceDeploymentSummary.
        :param device_deployment_status_message: The device_deployment_status_message of this DeviceDeploymentSummary.
        :param description: The description of this DeviceDeploymentSummary.
        :param deployment_start_time: The deployment_start_time of this DeviceDeploymentSummary.
        """
        self.openapi_types = {
            'edge_deployment_plan_arn': str,
            'edge_deployment_plan_name': str,
            'stage_name': str,
            'deployed_stage_name': str,
            'device_fleet_name': str,
            'device_name': str,
            'device_arn': str,
            'device_deployment_status': DeviceDeploymentStatus,
            'device_deployment_status_message': str,
            'description': str,
            'deployment_start_time': datetime
        }

        self.attribute_map = {
            'edge_deployment_plan_arn': 'EdgeDeploymentPlanArn',
            'edge_deployment_plan_name': 'EdgeDeploymentPlanName',
            'stage_name': 'StageName',
            'deployed_stage_name': 'DeployedStageName',
            'device_fleet_name': 'DeviceFleetName',
            'device_name': 'DeviceName',
            'device_arn': 'DeviceArn',
            'device_deployment_status': 'DeviceDeploymentStatus',
            'device_deployment_status_message': 'DeviceDeploymentStatusMessage',
            'description': 'Description',
            'deployment_start_time': 'DeploymentStartTime'
        }

        self._edge_deployment_plan_arn = edge_deployment_plan_arn
        self._edge_deployment_plan_name = edge_deployment_plan_name
        self._stage_name = stage_name
        self._deployed_stage_name = deployed_stage_name
        self._device_fleet_name = device_fleet_name
        self._device_name = device_name
        self._device_arn = device_arn
        self._device_deployment_status = device_deployment_status
        self._device_deployment_status_message = device_deployment_status_message
        self._description = description
        self._deployment_start_time = deployment_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceDeploymentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceDeploymentSummary of this DeviceDeploymentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edge_deployment_plan_arn(self):
        """Gets the edge_deployment_plan_arn of this DeviceDeploymentSummary.


        :return: The edge_deployment_plan_arn of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._edge_deployment_plan_arn

    @edge_deployment_plan_arn.setter
    def edge_deployment_plan_arn(self, edge_deployment_plan_arn):
        """Sets the edge_deployment_plan_arn of this DeviceDeploymentSummary.


        :param edge_deployment_plan_arn: The edge_deployment_plan_arn of this DeviceDeploymentSummary.
        :type edge_deployment_plan_arn: str
        """
        if edge_deployment_plan_arn is None:
            raise ValueError("Invalid value for `edge_deployment_plan_arn`, must not be `None`")

        self._edge_deployment_plan_arn = edge_deployment_plan_arn

    @property
    def edge_deployment_plan_name(self):
        """Gets the edge_deployment_plan_name of this DeviceDeploymentSummary.


        :return: The edge_deployment_plan_name of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._edge_deployment_plan_name

    @edge_deployment_plan_name.setter
    def edge_deployment_plan_name(self, edge_deployment_plan_name):
        """Sets the edge_deployment_plan_name of this DeviceDeploymentSummary.


        :param edge_deployment_plan_name: The edge_deployment_plan_name of this DeviceDeploymentSummary.
        :type edge_deployment_plan_name: str
        """
        if edge_deployment_plan_name is None:
            raise ValueError("Invalid value for `edge_deployment_plan_name`, must not be `None`")

        self._edge_deployment_plan_name = edge_deployment_plan_name

    @property
    def stage_name(self):
        """Gets the stage_name of this DeviceDeploymentSummary.


        :return: The stage_name of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._stage_name

    @stage_name.setter
    def stage_name(self, stage_name):
        """Sets the stage_name of this DeviceDeploymentSummary.


        :param stage_name: The stage_name of this DeviceDeploymentSummary.
        :type stage_name: str
        """
        if stage_name is None:
            raise ValueError("Invalid value for `stage_name`, must not be `None`")

        self._stage_name = stage_name

    @property
    def deployed_stage_name(self):
        """Gets the deployed_stage_name of this DeviceDeploymentSummary.


        :return: The deployed_stage_name of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._deployed_stage_name

    @deployed_stage_name.setter
    def deployed_stage_name(self, deployed_stage_name):
        """Sets the deployed_stage_name of this DeviceDeploymentSummary.


        :param deployed_stage_name: The deployed_stage_name of this DeviceDeploymentSummary.
        :type deployed_stage_name: str
        """

        self._deployed_stage_name = deployed_stage_name

    @property
    def device_fleet_name(self):
        """Gets the device_fleet_name of this DeviceDeploymentSummary.


        :return: The device_fleet_name of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._device_fleet_name

    @device_fleet_name.setter
    def device_fleet_name(self, device_fleet_name):
        """Sets the device_fleet_name of this DeviceDeploymentSummary.


        :param device_fleet_name: The device_fleet_name of this DeviceDeploymentSummary.
        :type device_fleet_name: str
        """

        self._device_fleet_name = device_fleet_name

    @property
    def device_name(self):
        """Gets the device_name of this DeviceDeploymentSummary.


        :return: The device_name of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this DeviceDeploymentSummary.


        :param device_name: The device_name of this DeviceDeploymentSummary.
        :type device_name: str
        """
        if device_name is None:
            raise ValueError("Invalid value for `device_name`, must not be `None`")

        self._device_name = device_name

    @property
    def device_arn(self):
        """Gets the device_arn of this DeviceDeploymentSummary.


        :return: The device_arn of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._device_arn

    @device_arn.setter
    def device_arn(self, device_arn):
        """Sets the device_arn of this DeviceDeploymentSummary.


        :param device_arn: The device_arn of this DeviceDeploymentSummary.
        :type device_arn: str
        """
        if device_arn is None:
            raise ValueError("Invalid value for `device_arn`, must not be `None`")

        self._device_arn = device_arn

    @property
    def device_deployment_status(self):
        """Gets the device_deployment_status of this DeviceDeploymentSummary.


        :return: The device_deployment_status of this DeviceDeploymentSummary.
        :rtype: DeviceDeploymentStatus
        """
        return self._device_deployment_status

    @device_deployment_status.setter
    def device_deployment_status(self, device_deployment_status):
        """Sets the device_deployment_status of this DeviceDeploymentSummary.


        :param device_deployment_status: The device_deployment_status of this DeviceDeploymentSummary.
        :type device_deployment_status: DeviceDeploymentStatus
        """

        self._device_deployment_status = device_deployment_status

    @property
    def device_deployment_status_message(self):
        """Gets the device_deployment_status_message of this DeviceDeploymentSummary.


        :return: The device_deployment_status_message of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._device_deployment_status_message

    @device_deployment_status_message.setter
    def device_deployment_status_message(self, device_deployment_status_message):
        """Sets the device_deployment_status_message of this DeviceDeploymentSummary.


        :param device_deployment_status_message: The device_deployment_status_message of this DeviceDeploymentSummary.
        :type device_deployment_status_message: str
        """

        self._device_deployment_status_message = device_deployment_status_message

    @property
    def description(self):
        """Gets the description of this DeviceDeploymentSummary.


        :return: The description of this DeviceDeploymentSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DeviceDeploymentSummary.


        :param description: The description of this DeviceDeploymentSummary.
        :type description: str
        """

        self._description = description

    @property
    def deployment_start_time(self):
        """Gets the deployment_start_time of this DeviceDeploymentSummary.


        :return: The deployment_start_time of this DeviceDeploymentSummary.
        :rtype: datetime
        """
        return self._deployment_start_time

    @deployment_start_time.setter
    def deployment_start_time(self, deployment_start_time):
        """Sets the deployment_start_time of this DeviceDeploymentSummary.


        :param deployment_start_time: The deployment_start_time of this DeviceDeploymentSummary.
        :type deployment_start_time: datetime
        """

        self._deployment_start_time = deployment_start_time
