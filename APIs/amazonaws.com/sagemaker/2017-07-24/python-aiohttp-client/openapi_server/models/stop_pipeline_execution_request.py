# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StopPipelineExecutionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_execution_arn: str=None, client_request_token: str=None):
        """StopPipelineExecutionRequest - a model defined in OpenAPI

        :param pipeline_execution_arn: The pipeline_execution_arn of this StopPipelineExecutionRequest.
        :param client_request_token: The client_request_token of this StopPipelineExecutionRequest.
        """
        self.openapi_types = {
            'pipeline_execution_arn': str,
            'client_request_token': str
        }

        self.attribute_map = {
            'pipeline_execution_arn': 'PipelineExecutionArn',
            'client_request_token': 'ClientRequestToken'
        }

        self._pipeline_execution_arn = pipeline_execution_arn
        self._client_request_token = client_request_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopPipelineExecutionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopPipelineExecutionRequest of this StopPipelineExecutionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_execution_arn(self):
        """Gets the pipeline_execution_arn of this StopPipelineExecutionRequest.


        :return: The pipeline_execution_arn of this StopPipelineExecutionRequest.
        :rtype: str
        """
        return self._pipeline_execution_arn

    @pipeline_execution_arn.setter
    def pipeline_execution_arn(self, pipeline_execution_arn):
        """Sets the pipeline_execution_arn of this StopPipelineExecutionRequest.


        :param pipeline_execution_arn: The pipeline_execution_arn of this StopPipelineExecutionRequest.
        :type pipeline_execution_arn: str
        """
        if pipeline_execution_arn is None:
            raise ValueError("Invalid value for `pipeline_execution_arn`, must not be `None`")

        self._pipeline_execution_arn = pipeline_execution_arn

    @property
    def client_request_token(self):
        """Gets the client_request_token of this StopPipelineExecutionRequest.


        :return: The client_request_token of this StopPipelineExecutionRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this StopPipelineExecutionRequest.


        :param client_request_token: The client_request_token of this StopPipelineExecutionRequest.
        :type client_request_token: str
        """
        if client_request_token is None:
            raise ValueError("Invalid value for `client_request_token`, must not be `None`")

        self._client_request_token = client_request_token
