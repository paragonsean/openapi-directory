# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeDeviceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_arn: str=None, device_name: str=None, description: str=None, device_fleet_name: str=None, iot_thing_name: str=None, registration_time: datetime=None, latest_heartbeat: datetime=None, models: List=None, max_models: int=None, next_token: str=None, agent_version: str=None):
        """DescribeDeviceResponse - a model defined in OpenAPI

        :param device_arn: The device_arn of this DescribeDeviceResponse.
        :param device_name: The device_name of this DescribeDeviceResponse.
        :param description: The description of this DescribeDeviceResponse.
        :param device_fleet_name: The device_fleet_name of this DescribeDeviceResponse.
        :param iot_thing_name: The iot_thing_name of this DescribeDeviceResponse.
        :param registration_time: The registration_time of this DescribeDeviceResponse.
        :param latest_heartbeat: The latest_heartbeat of this DescribeDeviceResponse.
        :param models: The models of this DescribeDeviceResponse.
        :param max_models: The max_models of this DescribeDeviceResponse.
        :param next_token: The next_token of this DescribeDeviceResponse.
        :param agent_version: The agent_version of this DescribeDeviceResponse.
        """
        self.openapi_types = {
            'device_arn': str,
            'device_name': str,
            'description': str,
            'device_fleet_name': str,
            'iot_thing_name': str,
            'registration_time': datetime,
            'latest_heartbeat': datetime,
            'models': List,
            'max_models': int,
            'next_token': str,
            'agent_version': str
        }

        self.attribute_map = {
            'device_arn': 'DeviceArn',
            'device_name': 'DeviceName',
            'description': 'Description',
            'device_fleet_name': 'DeviceFleetName',
            'iot_thing_name': 'IotThingName',
            'registration_time': 'RegistrationTime',
            'latest_heartbeat': 'LatestHeartbeat',
            'models': 'Models',
            'max_models': 'MaxModels',
            'next_token': 'NextToken',
            'agent_version': 'AgentVersion'
        }

        self._device_arn = device_arn
        self._device_name = device_name
        self._description = description
        self._device_fleet_name = device_fleet_name
        self._iot_thing_name = iot_thing_name
        self._registration_time = registration_time
        self._latest_heartbeat = latest_heartbeat
        self._models = models
        self._max_models = max_models
        self._next_token = next_token
        self._agent_version = agent_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDeviceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDeviceResponse of this DescribeDeviceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_arn(self):
        """Gets the device_arn of this DescribeDeviceResponse.


        :return: The device_arn of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._device_arn

    @device_arn.setter
    def device_arn(self, device_arn):
        """Sets the device_arn of this DescribeDeviceResponse.


        :param device_arn: The device_arn of this DescribeDeviceResponse.
        :type device_arn: str
        """

        self._device_arn = device_arn

    @property
    def device_name(self):
        """Gets the device_name of this DescribeDeviceResponse.


        :return: The device_name of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this DescribeDeviceResponse.


        :param device_name: The device_name of this DescribeDeviceResponse.
        :type device_name: str
        """
        if device_name is None:
            raise ValueError("Invalid value for `device_name`, must not be `None`")

        self._device_name = device_name

    @property
    def description(self):
        """Gets the description of this DescribeDeviceResponse.


        :return: The description of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeDeviceResponse.


        :param description: The description of this DescribeDeviceResponse.
        :type description: str
        """

        self._description = description

    @property
    def device_fleet_name(self):
        """Gets the device_fleet_name of this DescribeDeviceResponse.


        :return: The device_fleet_name of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._device_fleet_name

    @device_fleet_name.setter
    def device_fleet_name(self, device_fleet_name):
        """Sets the device_fleet_name of this DescribeDeviceResponse.


        :param device_fleet_name: The device_fleet_name of this DescribeDeviceResponse.
        :type device_fleet_name: str
        """
        if device_fleet_name is None:
            raise ValueError("Invalid value for `device_fleet_name`, must not be `None`")

        self._device_fleet_name = device_fleet_name

    @property
    def iot_thing_name(self):
        """Gets the iot_thing_name of this DescribeDeviceResponse.


        :return: The iot_thing_name of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._iot_thing_name

    @iot_thing_name.setter
    def iot_thing_name(self, iot_thing_name):
        """Sets the iot_thing_name of this DescribeDeviceResponse.


        :param iot_thing_name: The iot_thing_name of this DescribeDeviceResponse.
        :type iot_thing_name: str
        """

        self._iot_thing_name = iot_thing_name

    @property
    def registration_time(self):
        """Gets the registration_time of this DescribeDeviceResponse.


        :return: The registration_time of this DescribeDeviceResponse.
        :rtype: datetime
        """
        return self._registration_time

    @registration_time.setter
    def registration_time(self, registration_time):
        """Sets the registration_time of this DescribeDeviceResponse.


        :param registration_time: The registration_time of this DescribeDeviceResponse.
        :type registration_time: datetime
        """
        if registration_time is None:
            raise ValueError("Invalid value for `registration_time`, must not be `None`")

        self._registration_time = registration_time

    @property
    def latest_heartbeat(self):
        """Gets the latest_heartbeat of this DescribeDeviceResponse.


        :return: The latest_heartbeat of this DescribeDeviceResponse.
        :rtype: datetime
        """
        return self._latest_heartbeat

    @latest_heartbeat.setter
    def latest_heartbeat(self, latest_heartbeat):
        """Sets the latest_heartbeat of this DescribeDeviceResponse.


        :param latest_heartbeat: The latest_heartbeat of this DescribeDeviceResponse.
        :type latest_heartbeat: datetime
        """

        self._latest_heartbeat = latest_heartbeat

    @property
    def models(self):
        """Gets the models of this DescribeDeviceResponse.


        :return: The models of this DescribeDeviceResponse.
        :rtype: List
        """
        return self._models

    @models.setter
    def models(self, models):
        """Sets the models of this DescribeDeviceResponse.


        :param models: The models of this DescribeDeviceResponse.
        :type models: List
        """

        self._models = models

    @property
    def max_models(self):
        """Gets the max_models of this DescribeDeviceResponse.


        :return: The max_models of this DescribeDeviceResponse.
        :rtype: int
        """
        return self._max_models

    @max_models.setter
    def max_models(self, max_models):
        """Sets the max_models of this DescribeDeviceResponse.


        :param max_models: The max_models of this DescribeDeviceResponse.
        :type max_models: int
        """

        self._max_models = max_models

    @property
    def next_token(self):
        """Gets the next_token of this DescribeDeviceResponse.


        :return: The next_token of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeDeviceResponse.


        :param next_token: The next_token of this DescribeDeviceResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def agent_version(self):
        """Gets the agent_version of this DescribeDeviceResponse.


        :return: The agent_version of this DescribeDeviceResponse.
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this DescribeDeviceResponse.


        :param agent_version: The agent_version of this DescribeDeviceResponse.
        :type agent_version: str
        """

        self._agent_version = agent_version
