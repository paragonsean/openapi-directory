# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListStageDevicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, max_results: int=None, edge_deployment_plan_name: str=None, exclude_devices_deployed_in_other_stage: bool=None, stage_name: str=None):
        """ListStageDevicesRequest - a model defined in OpenAPI

        :param next_token: The next_token of this ListStageDevicesRequest.
        :param max_results: The max_results of this ListStageDevicesRequest.
        :param edge_deployment_plan_name: The edge_deployment_plan_name of this ListStageDevicesRequest.
        :param exclude_devices_deployed_in_other_stage: The exclude_devices_deployed_in_other_stage of this ListStageDevicesRequest.
        :param stage_name: The stage_name of this ListStageDevicesRequest.
        """
        self.openapi_types = {
            'next_token': str,
            'max_results': int,
            'edge_deployment_plan_name': str,
            'exclude_devices_deployed_in_other_stage': bool,
            'stage_name': str
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'edge_deployment_plan_name': 'EdgeDeploymentPlanName',
            'exclude_devices_deployed_in_other_stage': 'ExcludeDevicesDeployedInOtherStage',
            'stage_name': 'StageName'
        }

        self._next_token = next_token
        self._max_results = max_results
        self._edge_deployment_plan_name = edge_deployment_plan_name
        self._exclude_devices_deployed_in_other_stage = exclude_devices_deployed_in_other_stage
        self._stage_name = stage_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListStageDevicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListStageDevicesRequest of this ListStageDevicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListStageDevicesRequest.


        :return: The next_token of this ListStageDevicesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListStageDevicesRequest.


        :param next_token: The next_token of this ListStageDevicesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListStageDevicesRequest.


        :return: The max_results of this ListStageDevicesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListStageDevicesRequest.


        :param max_results: The max_results of this ListStageDevicesRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def edge_deployment_plan_name(self):
        """Gets the edge_deployment_plan_name of this ListStageDevicesRequest.


        :return: The edge_deployment_plan_name of this ListStageDevicesRequest.
        :rtype: str
        """
        return self._edge_deployment_plan_name

    @edge_deployment_plan_name.setter
    def edge_deployment_plan_name(self, edge_deployment_plan_name):
        """Sets the edge_deployment_plan_name of this ListStageDevicesRequest.


        :param edge_deployment_plan_name: The edge_deployment_plan_name of this ListStageDevicesRequest.
        :type edge_deployment_plan_name: str
        """
        if edge_deployment_plan_name is None:
            raise ValueError("Invalid value for `edge_deployment_plan_name`, must not be `None`")

        self._edge_deployment_plan_name = edge_deployment_plan_name

    @property
    def exclude_devices_deployed_in_other_stage(self):
        """Gets the exclude_devices_deployed_in_other_stage of this ListStageDevicesRequest.


        :return: The exclude_devices_deployed_in_other_stage of this ListStageDevicesRequest.
        :rtype: bool
        """
        return self._exclude_devices_deployed_in_other_stage

    @exclude_devices_deployed_in_other_stage.setter
    def exclude_devices_deployed_in_other_stage(self, exclude_devices_deployed_in_other_stage):
        """Sets the exclude_devices_deployed_in_other_stage of this ListStageDevicesRequest.


        :param exclude_devices_deployed_in_other_stage: The exclude_devices_deployed_in_other_stage of this ListStageDevicesRequest.
        :type exclude_devices_deployed_in_other_stage: bool
        """

        self._exclude_devices_deployed_in_other_stage = exclude_devices_deployed_in_other_stage

    @property
    def stage_name(self):
        """Gets the stage_name of this ListStageDevicesRequest.


        :return: The stage_name of this ListStageDevicesRequest.
        :rtype: str
        """
        return self._stage_name

    @stage_name.setter
    def stage_name(self, stage_name):
        """Sets the stage_name of this ListStageDevicesRequest.


        :param stage_name: The stage_name of this ListStageDevicesRequest.
        :type stage_name: str
        """
        if stage_name is None:
            raise ValueError("Invalid value for `stage_name`, must not be `None`")

        self._stage_name = stage_name
