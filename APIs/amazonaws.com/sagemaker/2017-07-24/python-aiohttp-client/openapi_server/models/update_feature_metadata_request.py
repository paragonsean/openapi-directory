# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateFeatureMetadataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_group_name: str=None, feature_name: str=None, description: str=None, parameter_additions: List=None, parameter_removals: List=None):
        """UpdateFeatureMetadataRequest - a model defined in OpenAPI

        :param feature_group_name: The feature_group_name of this UpdateFeatureMetadataRequest.
        :param feature_name: The feature_name of this UpdateFeatureMetadataRequest.
        :param description: The description of this UpdateFeatureMetadataRequest.
        :param parameter_additions: The parameter_additions of this UpdateFeatureMetadataRequest.
        :param parameter_removals: The parameter_removals of this UpdateFeatureMetadataRequest.
        """
        self.openapi_types = {
            'feature_group_name': str,
            'feature_name': str,
            'description': str,
            'parameter_additions': List,
            'parameter_removals': List
        }

        self.attribute_map = {
            'feature_group_name': 'FeatureGroupName',
            'feature_name': 'FeatureName',
            'description': 'Description',
            'parameter_additions': 'ParameterAdditions',
            'parameter_removals': 'ParameterRemovals'
        }

        self._feature_group_name = feature_group_name
        self._feature_name = feature_name
        self._description = description
        self._parameter_additions = parameter_additions
        self._parameter_removals = parameter_removals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFeatureMetadataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFeatureMetadataRequest of this UpdateFeatureMetadataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_group_name(self):
        """Gets the feature_group_name of this UpdateFeatureMetadataRequest.


        :return: The feature_group_name of this UpdateFeatureMetadataRequest.
        :rtype: str
        """
        return self._feature_group_name

    @feature_group_name.setter
    def feature_group_name(self, feature_group_name):
        """Sets the feature_group_name of this UpdateFeatureMetadataRequest.


        :param feature_group_name: The feature_group_name of this UpdateFeatureMetadataRequest.
        :type feature_group_name: str
        """
        if feature_group_name is None:
            raise ValueError("Invalid value for `feature_group_name`, must not be `None`")

        self._feature_group_name = feature_group_name

    @property
    def feature_name(self):
        """Gets the feature_name of this UpdateFeatureMetadataRequest.


        :return: The feature_name of this UpdateFeatureMetadataRequest.
        :rtype: str
        """
        return self._feature_name

    @feature_name.setter
    def feature_name(self, feature_name):
        """Sets the feature_name of this UpdateFeatureMetadataRequest.


        :param feature_name: The feature_name of this UpdateFeatureMetadataRequest.
        :type feature_name: str
        """
        if feature_name is None:
            raise ValueError("Invalid value for `feature_name`, must not be `None`")

        self._feature_name = feature_name

    @property
    def description(self):
        """Gets the description of this UpdateFeatureMetadataRequest.


        :return: The description of this UpdateFeatureMetadataRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateFeatureMetadataRequest.


        :param description: The description of this UpdateFeatureMetadataRequest.
        :type description: str
        """

        self._description = description

    @property
    def parameter_additions(self):
        """Gets the parameter_additions of this UpdateFeatureMetadataRequest.


        :return: The parameter_additions of this UpdateFeatureMetadataRequest.
        :rtype: List
        """
        return self._parameter_additions

    @parameter_additions.setter
    def parameter_additions(self, parameter_additions):
        """Sets the parameter_additions of this UpdateFeatureMetadataRequest.


        :param parameter_additions: The parameter_additions of this UpdateFeatureMetadataRequest.
        :type parameter_additions: List
        """

        self._parameter_additions = parameter_additions

    @property
    def parameter_removals(self):
        """Gets the parameter_removals of this UpdateFeatureMetadataRequest.


        :return: The parameter_removals of this UpdateFeatureMetadataRequest.
        :rtype: List
        """
        return self._parameter_removals

    @parameter_removals.setter
    def parameter_removals(self, parameter_removals):
        """Sets the parameter_removals of this UpdateFeatureMetadataRequest.


        :param parameter_removals: The parameter_removals of this UpdateFeatureMetadataRequest.
        :type parameter_removals: List
        """

        self._parameter_removals = parameter_removals
