# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeProjectOutputServiceCatalogProvisioningDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_id: str=None, provisioning_artifact_id: str=None, path_id: str=None, provisioning_parameters: List=None):
        """DescribeProjectOutputServiceCatalogProvisioningDetails - a model defined in OpenAPI

        :param product_id: The product_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :param provisioning_artifact_id: The provisioning_artifact_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :param path_id: The path_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :param provisioning_parameters: The provisioning_parameters of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        """
        self.openapi_types = {
            'product_id': str,
            'provisioning_artifact_id': str,
            'path_id': str,
            'provisioning_parameters': List
        }

        self.attribute_map = {
            'product_id': 'ProductId',
            'provisioning_artifact_id': 'ProvisioningArtifactId',
            'path_id': 'PathId',
            'provisioning_parameters': 'ProvisioningParameters'
        }

        self._product_id = product_id
        self._provisioning_artifact_id = provisioning_artifact_id
        self._path_id = path_id
        self._provisioning_parameters = provisioning_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeProjectOutputServiceCatalogProvisioningDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeProjectOutput_ServiceCatalogProvisioningDetails of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_id(self):
        """Gets the product_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :return: The product_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :param product_id: The product_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :type product_id: str
        """
        if product_id is None:
            raise ValueError("Invalid value for `product_id`, must not be `None`")

        self._product_id = product_id

    @property
    def provisioning_artifact_id(self):
        """Gets the provisioning_artifact_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :return: The provisioning_artifact_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :rtype: str
        """
        return self._provisioning_artifact_id

    @provisioning_artifact_id.setter
    def provisioning_artifact_id(self, provisioning_artifact_id):
        """Sets the provisioning_artifact_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :param provisioning_artifact_id: The provisioning_artifact_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :type provisioning_artifact_id: str
        """

        self._provisioning_artifact_id = provisioning_artifact_id

    @property
    def path_id(self):
        """Gets the path_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :return: The path_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :rtype: str
        """
        return self._path_id

    @path_id.setter
    def path_id(self, path_id):
        """Sets the path_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :param path_id: The path_id of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :type path_id: str
        """

        self._path_id = path_id

    @property
    def provisioning_parameters(self):
        """Gets the provisioning_parameters of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :return: The provisioning_parameters of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :rtype: List
        """
        return self._provisioning_parameters

    @provisioning_parameters.setter
    def provisioning_parameters(self, provisioning_parameters):
        """Sets the provisioning_parameters of this DescribeProjectOutputServiceCatalogProvisioningDetails.


        :param provisioning_parameters: The provisioning_parameters of this DescribeProjectOutputServiceCatalogProvisioningDetails.
        :type provisioning_parameters: List
        """

        self._provisioning_parameters = provisioning_parameters
