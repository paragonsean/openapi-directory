# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricSpecificationPredefined(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predefined_metric_type: str=None):
        """MetricSpecificationPredefined - a model defined in OpenAPI

        :param predefined_metric_type: The predefined_metric_type of this MetricSpecificationPredefined.
        """
        self.openapi_types = {
            'predefined_metric_type': str
        }

        self.attribute_map = {
            'predefined_metric_type': 'PredefinedMetricType'
        }

        self._predefined_metric_type = predefined_metric_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricSpecificationPredefined':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricSpecification_Predefined of this MetricSpecificationPredefined.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predefined_metric_type(self):
        """Gets the predefined_metric_type of this MetricSpecificationPredefined.


        :return: The predefined_metric_type of this MetricSpecificationPredefined.
        :rtype: str
        """
        return self._predefined_metric_type

    @predefined_metric_type.setter
    def predefined_metric_type(self, predefined_metric_type):
        """Sets the predefined_metric_type of this MetricSpecificationPredefined.


        :param predefined_metric_type: The predefined_metric_type of this MetricSpecificationPredefined.
        :type predefined_metric_type: str
        """

        self._predefined_metric_type = predefined_metric_type
