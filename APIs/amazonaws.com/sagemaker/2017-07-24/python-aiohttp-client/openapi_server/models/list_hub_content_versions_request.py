# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_content_sort_by import HubContentSortBy
from openapi_server.models.hub_content_type import HubContentType
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class ListHubContentVersionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_name: str=None, hub_content_type: HubContentType=None, hub_content_name: str=None, min_version: str=None, max_schema_version: str=None, creation_time_before: datetime=None, creation_time_after: datetime=None, sort_by: HubContentSortBy=None, sort_order: SortOrder=None, max_results: int=None, next_token: str=None):
        """ListHubContentVersionsRequest - a model defined in OpenAPI

        :param hub_name: The hub_name of this ListHubContentVersionsRequest.
        :param hub_content_type: The hub_content_type of this ListHubContentVersionsRequest.
        :param hub_content_name: The hub_content_name of this ListHubContentVersionsRequest.
        :param min_version: The min_version of this ListHubContentVersionsRequest.
        :param max_schema_version: The max_schema_version of this ListHubContentVersionsRequest.
        :param creation_time_before: The creation_time_before of this ListHubContentVersionsRequest.
        :param creation_time_after: The creation_time_after of this ListHubContentVersionsRequest.
        :param sort_by: The sort_by of this ListHubContentVersionsRequest.
        :param sort_order: The sort_order of this ListHubContentVersionsRequest.
        :param max_results: The max_results of this ListHubContentVersionsRequest.
        :param next_token: The next_token of this ListHubContentVersionsRequest.
        """
        self.openapi_types = {
            'hub_name': str,
            'hub_content_type': HubContentType,
            'hub_content_name': str,
            'min_version': str,
            'max_schema_version': str,
            'creation_time_before': datetime,
            'creation_time_after': datetime,
            'sort_by': HubContentSortBy,
            'sort_order': SortOrder,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'hub_name': 'HubName',
            'hub_content_type': 'HubContentType',
            'hub_content_name': 'HubContentName',
            'min_version': 'MinVersion',
            'max_schema_version': 'MaxSchemaVersion',
            'creation_time_before': 'CreationTimeBefore',
            'creation_time_after': 'CreationTimeAfter',
            'sort_by': 'SortBy',
            'sort_order': 'SortOrder',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._hub_name = hub_name
        self._hub_content_type = hub_content_type
        self._hub_content_name = hub_content_name
        self._min_version = min_version
        self._max_schema_version = max_schema_version
        self._creation_time_before = creation_time_before
        self._creation_time_after = creation_time_after
        self._sort_by = sort_by
        self._sort_order = sort_order
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListHubContentVersionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListHubContentVersionsRequest of this ListHubContentVersionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_name(self):
        """Gets the hub_name of this ListHubContentVersionsRequest.


        :return: The hub_name of this ListHubContentVersionsRequest.
        :rtype: str
        """
        return self._hub_name

    @hub_name.setter
    def hub_name(self, hub_name):
        """Sets the hub_name of this ListHubContentVersionsRequest.


        :param hub_name: The hub_name of this ListHubContentVersionsRequest.
        :type hub_name: str
        """
        if hub_name is None:
            raise ValueError("Invalid value for `hub_name`, must not be `None`")

        self._hub_name = hub_name

    @property
    def hub_content_type(self):
        """Gets the hub_content_type of this ListHubContentVersionsRequest.


        :return: The hub_content_type of this ListHubContentVersionsRequest.
        :rtype: HubContentType
        """
        return self._hub_content_type

    @hub_content_type.setter
    def hub_content_type(self, hub_content_type):
        """Sets the hub_content_type of this ListHubContentVersionsRequest.


        :param hub_content_type: The hub_content_type of this ListHubContentVersionsRequest.
        :type hub_content_type: HubContentType
        """
        if hub_content_type is None:
            raise ValueError("Invalid value for `hub_content_type`, must not be `None`")

        self._hub_content_type = hub_content_type

    @property
    def hub_content_name(self):
        """Gets the hub_content_name of this ListHubContentVersionsRequest.


        :return: The hub_content_name of this ListHubContentVersionsRequest.
        :rtype: str
        """
        return self._hub_content_name

    @hub_content_name.setter
    def hub_content_name(self, hub_content_name):
        """Sets the hub_content_name of this ListHubContentVersionsRequest.


        :param hub_content_name: The hub_content_name of this ListHubContentVersionsRequest.
        :type hub_content_name: str
        """
        if hub_content_name is None:
            raise ValueError("Invalid value for `hub_content_name`, must not be `None`")

        self._hub_content_name = hub_content_name

    @property
    def min_version(self):
        """Gets the min_version of this ListHubContentVersionsRequest.


        :return: The min_version of this ListHubContentVersionsRequest.
        :rtype: str
        """
        return self._min_version

    @min_version.setter
    def min_version(self, min_version):
        """Sets the min_version of this ListHubContentVersionsRequest.


        :param min_version: The min_version of this ListHubContentVersionsRequest.
        :type min_version: str
        """

        self._min_version = min_version

    @property
    def max_schema_version(self):
        """Gets the max_schema_version of this ListHubContentVersionsRequest.


        :return: The max_schema_version of this ListHubContentVersionsRequest.
        :rtype: str
        """
        return self._max_schema_version

    @max_schema_version.setter
    def max_schema_version(self, max_schema_version):
        """Sets the max_schema_version of this ListHubContentVersionsRequest.


        :param max_schema_version: The max_schema_version of this ListHubContentVersionsRequest.
        :type max_schema_version: str
        """

        self._max_schema_version = max_schema_version

    @property
    def creation_time_before(self):
        """Gets the creation_time_before of this ListHubContentVersionsRequest.


        :return: The creation_time_before of this ListHubContentVersionsRequest.
        :rtype: datetime
        """
        return self._creation_time_before

    @creation_time_before.setter
    def creation_time_before(self, creation_time_before):
        """Sets the creation_time_before of this ListHubContentVersionsRequest.


        :param creation_time_before: The creation_time_before of this ListHubContentVersionsRequest.
        :type creation_time_before: datetime
        """

        self._creation_time_before = creation_time_before

    @property
    def creation_time_after(self):
        """Gets the creation_time_after of this ListHubContentVersionsRequest.


        :return: The creation_time_after of this ListHubContentVersionsRequest.
        :rtype: datetime
        """
        return self._creation_time_after

    @creation_time_after.setter
    def creation_time_after(self, creation_time_after):
        """Sets the creation_time_after of this ListHubContentVersionsRequest.


        :param creation_time_after: The creation_time_after of this ListHubContentVersionsRequest.
        :type creation_time_after: datetime
        """

        self._creation_time_after = creation_time_after

    @property
    def sort_by(self):
        """Gets the sort_by of this ListHubContentVersionsRequest.


        :return: The sort_by of this ListHubContentVersionsRequest.
        :rtype: HubContentSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListHubContentVersionsRequest.


        :param sort_by: The sort_by of this ListHubContentVersionsRequest.
        :type sort_by: HubContentSortBy
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListHubContentVersionsRequest.


        :return: The sort_order of this ListHubContentVersionsRequest.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListHubContentVersionsRequest.


        :param sort_order: The sort_order of this ListHubContentVersionsRequest.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order

    @property
    def max_results(self):
        """Gets the max_results of this ListHubContentVersionsRequest.


        :return: The max_results of this ListHubContentVersionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListHubContentVersionsRequest.


        :param max_results: The max_results of this ListHubContentVersionsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListHubContentVersionsRequest.


        :return: The next_token of this ListHubContentVersionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListHubContentVersionsRequest.


        :param next_token: The next_token of this ListHubContentVersionsRequest.
        :type next_token: str
        """

        self._next_token = next_token
