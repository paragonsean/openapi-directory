# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitoringJobDefinitionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitoring_job_definition_name: str=None, monitoring_job_definition_arn: str=None, creation_time: datetime=None, endpoint_name: str=None):
        """MonitoringJobDefinitionSummary - a model defined in OpenAPI

        :param monitoring_job_definition_name: The monitoring_job_definition_name of this MonitoringJobDefinitionSummary.
        :param monitoring_job_definition_arn: The monitoring_job_definition_arn of this MonitoringJobDefinitionSummary.
        :param creation_time: The creation_time of this MonitoringJobDefinitionSummary.
        :param endpoint_name: The endpoint_name of this MonitoringJobDefinitionSummary.
        """
        self.openapi_types = {
            'monitoring_job_definition_name': str,
            'monitoring_job_definition_arn': str,
            'creation_time': datetime,
            'endpoint_name': str
        }

        self.attribute_map = {
            'monitoring_job_definition_name': 'MonitoringJobDefinitionName',
            'monitoring_job_definition_arn': 'MonitoringJobDefinitionArn',
            'creation_time': 'CreationTime',
            'endpoint_name': 'EndpointName'
        }

        self._monitoring_job_definition_name = monitoring_job_definition_name
        self._monitoring_job_definition_arn = monitoring_job_definition_arn
        self._creation_time = creation_time
        self._endpoint_name = endpoint_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringJobDefinitionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringJobDefinitionSummary of this MonitoringJobDefinitionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_job_definition_name(self):
        """Gets the monitoring_job_definition_name of this MonitoringJobDefinitionSummary.


        :return: The monitoring_job_definition_name of this MonitoringJobDefinitionSummary.
        :rtype: str
        """
        return self._monitoring_job_definition_name

    @monitoring_job_definition_name.setter
    def monitoring_job_definition_name(self, monitoring_job_definition_name):
        """Sets the monitoring_job_definition_name of this MonitoringJobDefinitionSummary.


        :param monitoring_job_definition_name: The monitoring_job_definition_name of this MonitoringJobDefinitionSummary.
        :type monitoring_job_definition_name: str
        """
        if monitoring_job_definition_name is None:
            raise ValueError("Invalid value for `monitoring_job_definition_name`, must not be `None`")

        self._monitoring_job_definition_name = monitoring_job_definition_name

    @property
    def monitoring_job_definition_arn(self):
        """Gets the monitoring_job_definition_arn of this MonitoringJobDefinitionSummary.


        :return: The monitoring_job_definition_arn of this MonitoringJobDefinitionSummary.
        :rtype: str
        """
        return self._monitoring_job_definition_arn

    @monitoring_job_definition_arn.setter
    def monitoring_job_definition_arn(self, monitoring_job_definition_arn):
        """Sets the monitoring_job_definition_arn of this MonitoringJobDefinitionSummary.


        :param monitoring_job_definition_arn: The monitoring_job_definition_arn of this MonitoringJobDefinitionSummary.
        :type monitoring_job_definition_arn: str
        """
        if monitoring_job_definition_arn is None:
            raise ValueError("Invalid value for `monitoring_job_definition_arn`, must not be `None`")

        self._monitoring_job_definition_arn = monitoring_job_definition_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this MonitoringJobDefinitionSummary.


        :return: The creation_time of this MonitoringJobDefinitionSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this MonitoringJobDefinitionSummary.


        :param creation_time: The creation_time of this MonitoringJobDefinitionSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def endpoint_name(self):
        """Gets the endpoint_name of this MonitoringJobDefinitionSummary.


        :return: The endpoint_name of this MonitoringJobDefinitionSummary.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """Sets the endpoint_name of this MonitoringJobDefinitionSummary.


        :param endpoint_name: The endpoint_name of this MonitoringJobDefinitionSummary.
        :type endpoint_name: str
        """
        if endpoint_name is None:
            raise ValueError("Invalid value for `endpoint_name`, must not be `None`")

        self._endpoint_name = endpoint_name
