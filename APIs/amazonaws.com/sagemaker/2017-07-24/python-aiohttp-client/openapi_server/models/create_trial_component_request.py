# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_trial_component_request_status import CreateTrialComponentRequestStatus
from openapi_server.models.metadata_properties import MetadataProperties
from openapi_server import util


class CreateTrialComponentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trial_component_name: str=None, display_name: str=None, status: CreateTrialComponentRequestStatus=None, start_time: datetime=None, end_time: datetime=None, parameters: Dict=None, input_artifacts: Dict=None, output_artifacts: Dict=None, metadata_properties: MetadataProperties=None, tags: List=None):
        """CreateTrialComponentRequest - a model defined in OpenAPI

        :param trial_component_name: The trial_component_name of this CreateTrialComponentRequest.
        :param display_name: The display_name of this CreateTrialComponentRequest.
        :param status: The status of this CreateTrialComponentRequest.
        :param start_time: The start_time of this CreateTrialComponentRequest.
        :param end_time: The end_time of this CreateTrialComponentRequest.
        :param parameters: The parameters of this CreateTrialComponentRequest.
        :param input_artifacts: The input_artifacts of this CreateTrialComponentRequest.
        :param output_artifacts: The output_artifacts of this CreateTrialComponentRequest.
        :param metadata_properties: The metadata_properties of this CreateTrialComponentRequest.
        :param tags: The tags of this CreateTrialComponentRequest.
        """
        self.openapi_types = {
            'trial_component_name': str,
            'display_name': str,
            'status': CreateTrialComponentRequestStatus,
            'start_time': datetime,
            'end_time': datetime,
            'parameters': Dict,
            'input_artifacts': Dict,
            'output_artifacts': Dict,
            'metadata_properties': MetadataProperties,
            'tags': List
        }

        self.attribute_map = {
            'trial_component_name': 'TrialComponentName',
            'display_name': 'DisplayName',
            'status': 'Status',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'parameters': 'Parameters',
            'input_artifacts': 'InputArtifacts',
            'output_artifacts': 'OutputArtifacts',
            'metadata_properties': 'MetadataProperties',
            'tags': 'Tags'
        }

        self._trial_component_name = trial_component_name
        self._display_name = display_name
        self._status = status
        self._start_time = start_time
        self._end_time = end_time
        self._parameters = parameters
        self._input_artifacts = input_artifacts
        self._output_artifacts = output_artifacts
        self._metadata_properties = metadata_properties
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTrialComponentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTrialComponentRequest of this CreateTrialComponentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trial_component_name(self):
        """Gets the trial_component_name of this CreateTrialComponentRequest.


        :return: The trial_component_name of this CreateTrialComponentRequest.
        :rtype: str
        """
        return self._trial_component_name

    @trial_component_name.setter
    def trial_component_name(self, trial_component_name):
        """Sets the trial_component_name of this CreateTrialComponentRequest.


        :param trial_component_name: The trial_component_name of this CreateTrialComponentRequest.
        :type trial_component_name: str
        """
        if trial_component_name is None:
            raise ValueError("Invalid value for `trial_component_name`, must not be `None`")

        self._trial_component_name = trial_component_name

    @property
    def display_name(self):
        """Gets the display_name of this CreateTrialComponentRequest.


        :return: The display_name of this CreateTrialComponentRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CreateTrialComponentRequest.


        :param display_name: The display_name of this CreateTrialComponentRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def status(self):
        """Gets the status of this CreateTrialComponentRequest.


        :return: The status of this CreateTrialComponentRequest.
        :rtype: CreateTrialComponentRequestStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateTrialComponentRequest.


        :param status: The status of this CreateTrialComponentRequest.
        :type status: CreateTrialComponentRequestStatus
        """

        self._status = status

    @property
    def start_time(self):
        """Gets the start_time of this CreateTrialComponentRequest.


        :return: The start_time of this CreateTrialComponentRequest.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this CreateTrialComponentRequest.


        :param start_time: The start_time of this CreateTrialComponentRequest.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this CreateTrialComponentRequest.


        :return: The end_time of this CreateTrialComponentRequest.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this CreateTrialComponentRequest.


        :param end_time: The end_time of this CreateTrialComponentRequest.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def parameters(self):
        """Gets the parameters of this CreateTrialComponentRequest.


        :return: The parameters of this CreateTrialComponentRequest.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this CreateTrialComponentRequest.


        :param parameters: The parameters of this CreateTrialComponentRequest.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def input_artifacts(self):
        """Gets the input_artifacts of this CreateTrialComponentRequest.


        :return: The input_artifacts of this CreateTrialComponentRequest.
        :rtype: Dict
        """
        return self._input_artifacts

    @input_artifacts.setter
    def input_artifacts(self, input_artifacts):
        """Sets the input_artifacts of this CreateTrialComponentRequest.


        :param input_artifacts: The input_artifacts of this CreateTrialComponentRequest.
        :type input_artifacts: Dict
        """

        self._input_artifacts = input_artifacts

    @property
    def output_artifacts(self):
        """Gets the output_artifacts of this CreateTrialComponentRequest.


        :return: The output_artifacts of this CreateTrialComponentRequest.
        :rtype: Dict
        """
        return self._output_artifacts

    @output_artifacts.setter
    def output_artifacts(self, output_artifacts):
        """Sets the output_artifacts of this CreateTrialComponentRequest.


        :param output_artifacts: The output_artifacts of this CreateTrialComponentRequest.
        :type output_artifacts: Dict
        """

        self._output_artifacts = output_artifacts

    @property
    def metadata_properties(self):
        """Gets the metadata_properties of this CreateTrialComponentRequest.


        :return: The metadata_properties of this CreateTrialComponentRequest.
        :rtype: MetadataProperties
        """
        return self._metadata_properties

    @metadata_properties.setter
    def metadata_properties(self, metadata_properties):
        """Sets the metadata_properties of this CreateTrialComponentRequest.


        :param metadata_properties: The metadata_properties of this CreateTrialComponentRequest.
        :type metadata_properties: MetadataProperties
        """

        self._metadata_properties = metadata_properties

    @property
    def tags(self):
        """Gets the tags of this CreateTrialComponentRequest.


        :return: The tags of this CreateTrialComponentRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateTrialComponentRequest.


        :param tags: The tags of this CreateTrialComponentRequest.
        :type tags: List
        """

        self._tags = tags
