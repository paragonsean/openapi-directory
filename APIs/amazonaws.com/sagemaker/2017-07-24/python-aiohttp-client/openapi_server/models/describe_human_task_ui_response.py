# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.human_task_ui_status import HumanTaskUiStatus
from openapi_server.models.ui_template_info import UiTemplateInfo
from openapi_server import util


class DescribeHumanTaskUiResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, human_task_ui_arn: str=None, human_task_ui_name: str=None, human_task_ui_status: HumanTaskUiStatus=None, creation_time: datetime=None, ui_template: UiTemplateInfo=None):
        """DescribeHumanTaskUiResponse - a model defined in OpenAPI

        :param human_task_ui_arn: The human_task_ui_arn of this DescribeHumanTaskUiResponse.
        :param human_task_ui_name: The human_task_ui_name of this DescribeHumanTaskUiResponse.
        :param human_task_ui_status: The human_task_ui_status of this DescribeHumanTaskUiResponse.
        :param creation_time: The creation_time of this DescribeHumanTaskUiResponse.
        :param ui_template: The ui_template of this DescribeHumanTaskUiResponse.
        """
        self.openapi_types = {
            'human_task_ui_arn': str,
            'human_task_ui_name': str,
            'human_task_ui_status': HumanTaskUiStatus,
            'creation_time': datetime,
            'ui_template': UiTemplateInfo
        }

        self.attribute_map = {
            'human_task_ui_arn': 'HumanTaskUiArn',
            'human_task_ui_name': 'HumanTaskUiName',
            'human_task_ui_status': 'HumanTaskUiStatus',
            'creation_time': 'CreationTime',
            'ui_template': 'UiTemplate'
        }

        self._human_task_ui_arn = human_task_ui_arn
        self._human_task_ui_name = human_task_ui_name
        self._human_task_ui_status = human_task_ui_status
        self._creation_time = creation_time
        self._ui_template = ui_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeHumanTaskUiResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeHumanTaskUiResponse of this DescribeHumanTaskUiResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def human_task_ui_arn(self):
        """Gets the human_task_ui_arn of this DescribeHumanTaskUiResponse.


        :return: The human_task_ui_arn of this DescribeHumanTaskUiResponse.
        :rtype: str
        """
        return self._human_task_ui_arn

    @human_task_ui_arn.setter
    def human_task_ui_arn(self, human_task_ui_arn):
        """Sets the human_task_ui_arn of this DescribeHumanTaskUiResponse.


        :param human_task_ui_arn: The human_task_ui_arn of this DescribeHumanTaskUiResponse.
        :type human_task_ui_arn: str
        """
        if human_task_ui_arn is None:
            raise ValueError("Invalid value for `human_task_ui_arn`, must not be `None`")

        self._human_task_ui_arn = human_task_ui_arn

    @property
    def human_task_ui_name(self):
        """Gets the human_task_ui_name of this DescribeHumanTaskUiResponse.


        :return: The human_task_ui_name of this DescribeHumanTaskUiResponse.
        :rtype: str
        """
        return self._human_task_ui_name

    @human_task_ui_name.setter
    def human_task_ui_name(self, human_task_ui_name):
        """Sets the human_task_ui_name of this DescribeHumanTaskUiResponse.


        :param human_task_ui_name: The human_task_ui_name of this DescribeHumanTaskUiResponse.
        :type human_task_ui_name: str
        """
        if human_task_ui_name is None:
            raise ValueError("Invalid value for `human_task_ui_name`, must not be `None`")

        self._human_task_ui_name = human_task_ui_name

    @property
    def human_task_ui_status(self):
        """Gets the human_task_ui_status of this DescribeHumanTaskUiResponse.


        :return: The human_task_ui_status of this DescribeHumanTaskUiResponse.
        :rtype: HumanTaskUiStatus
        """
        return self._human_task_ui_status

    @human_task_ui_status.setter
    def human_task_ui_status(self, human_task_ui_status):
        """Sets the human_task_ui_status of this DescribeHumanTaskUiResponse.


        :param human_task_ui_status: The human_task_ui_status of this DescribeHumanTaskUiResponse.
        :type human_task_ui_status: HumanTaskUiStatus
        """

        self._human_task_ui_status = human_task_ui_status

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeHumanTaskUiResponse.


        :return: The creation_time of this DescribeHumanTaskUiResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeHumanTaskUiResponse.


        :param creation_time: The creation_time of this DescribeHumanTaskUiResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def ui_template(self):
        """Gets the ui_template of this DescribeHumanTaskUiResponse.


        :return: The ui_template of this DescribeHumanTaskUiResponse.
        :rtype: UiTemplateInfo
        """
        return self._ui_template

    @ui_template.setter
    def ui_template(self, ui_template):
        """Sets the ui_template of this DescribeHumanTaskUiResponse.


        :param ui_template: The ui_template of this DescribeHumanTaskUiResponse.
        :type ui_template: UiTemplateInfo
        """
        if ui_template is None:
            raise ValueError("Invalid value for `ui_template`, must not be `None`")

        self._ui_template = ui_template
