# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_inference_experiment_response_data_storage_config import DescribeInferenceExperimentResponseDataStorageConfig
from openapi_server.models.describe_inference_experiment_response_endpoint_metadata import DescribeInferenceExperimentResponseEndpointMetadata
from openapi_server.models.describe_inference_experiment_response_schedule import DescribeInferenceExperimentResponseSchedule
from openapi_server.models.describe_inference_experiment_response_shadow_mode_config import DescribeInferenceExperimentResponseShadowModeConfig
from openapi_server.models.inference_experiment_status import InferenceExperimentStatus
from openapi_server.models.inference_experiment_type import InferenceExperimentType
from openapi_server import util


class DescribeInferenceExperimentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, type: InferenceExperimentType=None, schedule: DescribeInferenceExperimentResponseSchedule=None, status: InferenceExperimentStatus=None, status_reason: str=None, description: str=None, creation_time: datetime=None, completion_time: datetime=None, last_modified_time: datetime=None, role_arn: str=None, endpoint_metadata: DescribeInferenceExperimentResponseEndpointMetadata=None, model_variants: List=None, data_storage_config: DescribeInferenceExperimentResponseDataStorageConfig=None, shadow_mode_config: DescribeInferenceExperimentResponseShadowModeConfig=None, kms_key: str=None):
        """DescribeInferenceExperimentResponse - a model defined in OpenAPI

        :param arn: The arn of this DescribeInferenceExperimentResponse.
        :param name: The name of this DescribeInferenceExperimentResponse.
        :param type: The type of this DescribeInferenceExperimentResponse.
        :param schedule: The schedule of this DescribeInferenceExperimentResponse.
        :param status: The status of this DescribeInferenceExperimentResponse.
        :param status_reason: The status_reason of this DescribeInferenceExperimentResponse.
        :param description: The description of this DescribeInferenceExperimentResponse.
        :param creation_time: The creation_time of this DescribeInferenceExperimentResponse.
        :param completion_time: The completion_time of this DescribeInferenceExperimentResponse.
        :param last_modified_time: The last_modified_time of this DescribeInferenceExperimentResponse.
        :param role_arn: The role_arn of this DescribeInferenceExperimentResponse.
        :param endpoint_metadata: The endpoint_metadata of this DescribeInferenceExperimentResponse.
        :param model_variants: The model_variants of this DescribeInferenceExperimentResponse.
        :param data_storage_config: The data_storage_config of this DescribeInferenceExperimentResponse.
        :param shadow_mode_config: The shadow_mode_config of this DescribeInferenceExperimentResponse.
        :param kms_key: The kms_key of this DescribeInferenceExperimentResponse.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'type': InferenceExperimentType,
            'schedule': DescribeInferenceExperimentResponseSchedule,
            'status': InferenceExperimentStatus,
            'status_reason': str,
            'description': str,
            'creation_time': datetime,
            'completion_time': datetime,
            'last_modified_time': datetime,
            'role_arn': str,
            'endpoint_metadata': DescribeInferenceExperimentResponseEndpointMetadata,
            'model_variants': List,
            'data_storage_config': DescribeInferenceExperimentResponseDataStorageConfig,
            'shadow_mode_config': DescribeInferenceExperimentResponseShadowModeConfig,
            'kms_key': str
        }

        self.attribute_map = {
            'arn': 'Arn',
            'name': 'Name',
            'type': 'Type',
            'schedule': 'Schedule',
            'status': 'Status',
            'status_reason': 'StatusReason',
            'description': 'Description',
            'creation_time': 'CreationTime',
            'completion_time': 'CompletionTime',
            'last_modified_time': 'LastModifiedTime',
            'role_arn': 'RoleArn',
            'endpoint_metadata': 'EndpointMetadata',
            'model_variants': 'ModelVariants',
            'data_storage_config': 'DataStorageConfig',
            'shadow_mode_config': 'ShadowModeConfig',
            'kms_key': 'KmsKey'
        }

        self._arn = arn
        self._name = name
        self._type = type
        self._schedule = schedule
        self._status = status
        self._status_reason = status_reason
        self._description = description
        self._creation_time = creation_time
        self._completion_time = completion_time
        self._last_modified_time = last_modified_time
        self._role_arn = role_arn
        self._endpoint_metadata = endpoint_metadata
        self._model_variants = model_variants
        self._data_storage_config = data_storage_config
        self._shadow_mode_config = shadow_mode_config
        self._kms_key = kms_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeInferenceExperimentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeInferenceExperimentResponse of this DescribeInferenceExperimentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DescribeInferenceExperimentResponse.


        :return: The arn of this DescribeInferenceExperimentResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeInferenceExperimentResponse.


        :param arn: The arn of this DescribeInferenceExperimentResponse.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this DescribeInferenceExperimentResponse.


        :return: The name of this DescribeInferenceExperimentResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeInferenceExperimentResponse.


        :param name: The name of this DescribeInferenceExperimentResponse.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def type(self):
        """Gets the type of this DescribeInferenceExperimentResponse.


        :return: The type of this DescribeInferenceExperimentResponse.
        :rtype: InferenceExperimentType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeInferenceExperimentResponse.


        :param type: The type of this DescribeInferenceExperimentResponse.
        :type type: InferenceExperimentType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def schedule(self):
        """Gets the schedule of this DescribeInferenceExperimentResponse.


        :return: The schedule of this DescribeInferenceExperimentResponse.
        :rtype: DescribeInferenceExperimentResponseSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this DescribeInferenceExperimentResponse.


        :param schedule: The schedule of this DescribeInferenceExperimentResponse.
        :type schedule: DescribeInferenceExperimentResponseSchedule
        """

        self._schedule = schedule

    @property
    def status(self):
        """Gets the status of this DescribeInferenceExperimentResponse.


        :return: The status of this DescribeInferenceExperimentResponse.
        :rtype: InferenceExperimentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeInferenceExperimentResponse.


        :param status: The status of this DescribeInferenceExperimentResponse.
        :type status: InferenceExperimentStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this DescribeInferenceExperimentResponse.


        :return: The status_reason of this DescribeInferenceExperimentResponse.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this DescribeInferenceExperimentResponse.


        :param status_reason: The status_reason of this DescribeInferenceExperimentResponse.
        :type status_reason: str
        """

        self._status_reason = status_reason

    @property
    def description(self):
        """Gets the description of this DescribeInferenceExperimentResponse.


        :return: The description of this DescribeInferenceExperimentResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeInferenceExperimentResponse.


        :param description: The description of this DescribeInferenceExperimentResponse.
        :type description: str
        """

        self._description = description

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeInferenceExperimentResponse.


        :return: The creation_time of this DescribeInferenceExperimentResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeInferenceExperimentResponse.


        :param creation_time: The creation_time of this DescribeInferenceExperimentResponse.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def completion_time(self):
        """Gets the completion_time of this DescribeInferenceExperimentResponse.


        :return: The completion_time of this DescribeInferenceExperimentResponse.
        :rtype: datetime
        """
        return self._completion_time

    @completion_time.setter
    def completion_time(self, completion_time):
        """Sets the completion_time of this DescribeInferenceExperimentResponse.


        :param completion_time: The completion_time of this DescribeInferenceExperimentResponse.
        :type completion_time: datetime
        """

        self._completion_time = completion_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this DescribeInferenceExperimentResponse.


        :return: The last_modified_time of this DescribeInferenceExperimentResponse.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this DescribeInferenceExperimentResponse.


        :param last_modified_time: The last_modified_time of this DescribeInferenceExperimentResponse.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribeInferenceExperimentResponse.


        :return: The role_arn of this DescribeInferenceExperimentResponse.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribeInferenceExperimentResponse.


        :param role_arn: The role_arn of this DescribeInferenceExperimentResponse.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def endpoint_metadata(self):
        """Gets the endpoint_metadata of this DescribeInferenceExperimentResponse.


        :return: The endpoint_metadata of this DescribeInferenceExperimentResponse.
        :rtype: DescribeInferenceExperimentResponseEndpointMetadata
        """
        return self._endpoint_metadata

    @endpoint_metadata.setter
    def endpoint_metadata(self, endpoint_metadata):
        """Sets the endpoint_metadata of this DescribeInferenceExperimentResponse.


        :param endpoint_metadata: The endpoint_metadata of this DescribeInferenceExperimentResponse.
        :type endpoint_metadata: DescribeInferenceExperimentResponseEndpointMetadata
        """
        if endpoint_metadata is None:
            raise ValueError("Invalid value for `endpoint_metadata`, must not be `None`")

        self._endpoint_metadata = endpoint_metadata

    @property
    def model_variants(self):
        """Gets the model_variants of this DescribeInferenceExperimentResponse.


        :return: The model_variants of this DescribeInferenceExperimentResponse.
        :rtype: List
        """
        return self._model_variants

    @model_variants.setter
    def model_variants(self, model_variants):
        """Sets the model_variants of this DescribeInferenceExperimentResponse.


        :param model_variants: The model_variants of this DescribeInferenceExperimentResponse.
        :type model_variants: List
        """
        if model_variants is None:
            raise ValueError("Invalid value for `model_variants`, must not be `None`")

        self._model_variants = model_variants

    @property
    def data_storage_config(self):
        """Gets the data_storage_config of this DescribeInferenceExperimentResponse.


        :return: The data_storage_config of this DescribeInferenceExperimentResponse.
        :rtype: DescribeInferenceExperimentResponseDataStorageConfig
        """
        return self._data_storage_config

    @data_storage_config.setter
    def data_storage_config(self, data_storage_config):
        """Sets the data_storage_config of this DescribeInferenceExperimentResponse.


        :param data_storage_config: The data_storage_config of this DescribeInferenceExperimentResponse.
        :type data_storage_config: DescribeInferenceExperimentResponseDataStorageConfig
        """

        self._data_storage_config = data_storage_config

    @property
    def shadow_mode_config(self):
        """Gets the shadow_mode_config of this DescribeInferenceExperimentResponse.


        :return: The shadow_mode_config of this DescribeInferenceExperimentResponse.
        :rtype: DescribeInferenceExperimentResponseShadowModeConfig
        """
        return self._shadow_mode_config

    @shadow_mode_config.setter
    def shadow_mode_config(self, shadow_mode_config):
        """Sets the shadow_mode_config of this DescribeInferenceExperimentResponse.


        :param shadow_mode_config: The shadow_mode_config of this DescribeInferenceExperimentResponse.
        :type shadow_mode_config: DescribeInferenceExperimentResponseShadowModeConfig
        """

        self._shadow_mode_config = shadow_mode_config

    @property
    def kms_key(self):
        """Gets the kms_key of this DescribeInferenceExperimentResponse.


        :return: The kms_key of this DescribeInferenceExperimentResponse.
        :rtype: str
        """
        return self._kms_key

    @kms_key.setter
    def kms_key(self, kms_key):
        """Sets the kms_key of this DescribeInferenceExperimentResponse.


        :param kms_key: The kms_key of this DescribeInferenceExperimentResponse.
        :type kms_key: str
        """

        self._kms_key = kms_key
