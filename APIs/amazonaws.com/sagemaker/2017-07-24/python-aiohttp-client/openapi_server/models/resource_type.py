# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    TRAININGJOB = 'TrainingJob'
    EXPERIMENT = 'Experiment'
    EXPERIMENTTRIAL = 'ExperimentTrial'
    EXPERIMENTTRIALCOMPONENT = 'ExperimentTrialComponent'
    ENDPOINT = 'Endpoint'
    MODELPACKAGE = 'ModelPackage'
    MODELPACKAGEGROUP = 'ModelPackageGroup'
    PIPELINE = 'Pipeline'
    PIPELINEEXECUTION = 'PipelineExecution'
    FEATUREGROUP = 'FeatureGroup'
    PROJECT = 'Project'
    FEATUREMETADATA = 'FeatureMetadata'
    HYPERPARAMETERTUNINGJOB = 'HyperParameterTuningJob'
    MODELCARD = 'ModelCard'
    MODEL = 'Model'

    def __init__(self):
        """ResourceType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceType of this ResourceType.
        """
        return util.deserialize_model(dikt, cls)
