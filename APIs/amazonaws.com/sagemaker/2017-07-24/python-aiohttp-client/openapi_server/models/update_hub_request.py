# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateHubRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_name: str=None, hub_description: str=None, hub_display_name: str=None, hub_search_keywords: List=None):
        """UpdateHubRequest - a model defined in OpenAPI

        :param hub_name: The hub_name of this UpdateHubRequest.
        :param hub_description: The hub_description of this UpdateHubRequest.
        :param hub_display_name: The hub_display_name of this UpdateHubRequest.
        :param hub_search_keywords: The hub_search_keywords of this UpdateHubRequest.
        """
        self.openapi_types = {
            'hub_name': str,
            'hub_description': str,
            'hub_display_name': str,
            'hub_search_keywords': List
        }

        self.attribute_map = {
            'hub_name': 'HubName',
            'hub_description': 'HubDescription',
            'hub_display_name': 'HubDisplayName',
            'hub_search_keywords': 'HubSearchKeywords'
        }

        self._hub_name = hub_name
        self._hub_description = hub_description
        self._hub_display_name = hub_display_name
        self._hub_search_keywords = hub_search_keywords

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateHubRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateHubRequest of this UpdateHubRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_name(self):
        """Gets the hub_name of this UpdateHubRequest.


        :return: The hub_name of this UpdateHubRequest.
        :rtype: str
        """
        return self._hub_name

    @hub_name.setter
    def hub_name(self, hub_name):
        """Sets the hub_name of this UpdateHubRequest.


        :param hub_name: The hub_name of this UpdateHubRequest.
        :type hub_name: str
        """
        if hub_name is None:
            raise ValueError("Invalid value for `hub_name`, must not be `None`")

        self._hub_name = hub_name

    @property
    def hub_description(self):
        """Gets the hub_description of this UpdateHubRequest.


        :return: The hub_description of this UpdateHubRequest.
        :rtype: str
        """
        return self._hub_description

    @hub_description.setter
    def hub_description(self, hub_description):
        """Sets the hub_description of this UpdateHubRequest.


        :param hub_description: The hub_description of this UpdateHubRequest.
        :type hub_description: str
        """

        self._hub_description = hub_description

    @property
    def hub_display_name(self):
        """Gets the hub_display_name of this UpdateHubRequest.


        :return: The hub_display_name of this UpdateHubRequest.
        :rtype: str
        """
        return self._hub_display_name

    @hub_display_name.setter
    def hub_display_name(self, hub_display_name):
        """Sets the hub_display_name of this UpdateHubRequest.


        :param hub_display_name: The hub_display_name of this UpdateHubRequest.
        :type hub_display_name: str
        """

        self._hub_display_name = hub_display_name

    @property
    def hub_search_keywords(self):
        """Gets the hub_search_keywords of this UpdateHubRequest.


        :return: The hub_search_keywords of this UpdateHubRequest.
        :rtype: List
        """
        return self._hub_search_keywords

    @hub_search_keywords.setter
    def hub_search_keywords(self, hub_search_keywords):
        """Sets the hub_search_keywords of this UpdateHubRequest.


        :param hub_search_keywords: The hub_search_keywords of this UpdateHubRequest.
        :type hub_search_keywords: List
        """

        self._hub_search_keywords = hub_search_keywords
