# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeFlowDefinitionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flow_definition_name: str=None):
        """DescribeFlowDefinitionRequest - a model defined in OpenAPI

        :param flow_definition_name: The flow_definition_name of this DescribeFlowDefinitionRequest.
        """
        self.openapi_types = {
            'flow_definition_name': str
        }

        self.attribute_map = {
            'flow_definition_name': 'FlowDefinitionName'
        }

        self._flow_definition_name = flow_definition_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFlowDefinitionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFlowDefinitionRequest of this DescribeFlowDefinitionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flow_definition_name(self):
        """Gets the flow_definition_name of this DescribeFlowDefinitionRequest.


        :return: The flow_definition_name of this DescribeFlowDefinitionRequest.
        :rtype: str
        """
        return self._flow_definition_name

    @flow_definition_name.setter
    def flow_definition_name(self, flow_definition_name):
        """Sets the flow_definition_name of this DescribeFlowDefinitionRequest.


        :param flow_definition_name: The flow_definition_name of this DescribeFlowDefinitionRequest.
        :type flow_definition_name: str
        """
        if flow_definition_name is None:
            raise ValueError("Invalid value for `flow_definition_name`, must not be `None`")

        self._flow_definition_name = flow_definition_name
