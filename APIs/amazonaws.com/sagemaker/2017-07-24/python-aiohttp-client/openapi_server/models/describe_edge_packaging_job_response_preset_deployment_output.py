# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.edge_preset_deployment_status import EdgePresetDeploymentStatus
from openapi_server.models.edge_preset_deployment_type import EdgePresetDeploymentType
from openapi_server import util


class DescribeEdgePackagingJobResponsePresetDeploymentOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: EdgePresetDeploymentType=None, artifact: str=None, status: EdgePresetDeploymentStatus=None, status_message: str=None):
        """DescribeEdgePackagingJobResponsePresetDeploymentOutput - a model defined in OpenAPI

        :param type: The type of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :param artifact: The artifact of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :param status: The status of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :param status_message: The status_message of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        """
        self.openapi_types = {
            'type': EdgePresetDeploymentType,
            'artifact': str,
            'status': EdgePresetDeploymentStatus,
            'status_message': str
        }

        self.attribute_map = {
            'type': 'Type',
            'artifact': 'Artifact',
            'status': 'Status',
            'status_message': 'StatusMessage'
        }

        self._type = type
        self._artifact = artifact
        self._status = status
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEdgePackagingJobResponsePresetDeploymentOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEdgePackagingJobResponse_PresetDeploymentOutput of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :return: The type of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :rtype: EdgePresetDeploymentType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :param type: The type of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :type type: EdgePresetDeploymentType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def artifact(self):
        """Gets the artifact of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :return: The artifact of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :rtype: str
        """
        return self._artifact

    @artifact.setter
    def artifact(self, artifact):
        """Sets the artifact of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :param artifact: The artifact of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :type artifact: str
        """

        self._artifact = artifact

    @property
    def status(self):
        """Gets the status of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :return: The status of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :rtype: EdgePresetDeploymentStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :param status: The status of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :type status: EdgePresetDeploymentStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :return: The status_message of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.


        :param status_message: The status_message of this DescribeEdgePackagingJobResponsePresetDeploymentOutput.
        :type status_message: str
        """

        self._status_message = status_message
