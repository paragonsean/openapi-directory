# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSubscribedWorkteamResponseSubscribedWorkteam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam_arn: str=None, marketplace_title: str=None, seller_name: str=None, marketplace_description: str=None, listing_id: str=None):
        """DescribeSubscribedWorkteamResponseSubscribedWorkteam - a model defined in OpenAPI

        :param workteam_arn: The workteam_arn of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :param marketplace_title: The marketplace_title of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :param seller_name: The seller_name of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :param marketplace_description: The marketplace_description of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :param listing_id: The listing_id of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        """
        self.openapi_types = {
            'workteam_arn': str,
            'marketplace_title': str,
            'seller_name': str,
            'marketplace_description': str,
            'listing_id': str
        }

        self.attribute_map = {
            'workteam_arn': 'WorkteamArn',
            'marketplace_title': 'MarketplaceTitle',
            'seller_name': 'SellerName',
            'marketplace_description': 'MarketplaceDescription',
            'listing_id': 'ListingId'
        }

        self._workteam_arn = workteam_arn
        self._marketplace_title = marketplace_title
        self._seller_name = seller_name
        self._marketplace_description = marketplace_description
        self._listing_id = listing_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSubscribedWorkteamResponseSubscribedWorkteam':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSubscribedWorkteamResponse_SubscribedWorkteam of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam_arn(self):
        """Gets the workteam_arn of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :return: The workteam_arn of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :rtype: str
        """
        return self._workteam_arn

    @workteam_arn.setter
    def workteam_arn(self, workteam_arn):
        """Sets the workteam_arn of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :param workteam_arn: The workteam_arn of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :type workteam_arn: str
        """
        if workteam_arn is None:
            raise ValueError("Invalid value for `workteam_arn`, must not be `None`")

        self._workteam_arn = workteam_arn

    @property
    def marketplace_title(self):
        """Gets the marketplace_title of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :return: The marketplace_title of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :rtype: str
        """
        return self._marketplace_title

    @marketplace_title.setter
    def marketplace_title(self, marketplace_title):
        """Sets the marketplace_title of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :param marketplace_title: The marketplace_title of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :type marketplace_title: str
        """

        self._marketplace_title = marketplace_title

    @property
    def seller_name(self):
        """Gets the seller_name of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :return: The seller_name of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :rtype: str
        """
        return self._seller_name

    @seller_name.setter
    def seller_name(self, seller_name):
        """Sets the seller_name of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :param seller_name: The seller_name of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :type seller_name: str
        """

        self._seller_name = seller_name

    @property
    def marketplace_description(self):
        """Gets the marketplace_description of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :return: The marketplace_description of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :rtype: str
        """
        return self._marketplace_description

    @marketplace_description.setter
    def marketplace_description(self, marketplace_description):
        """Sets the marketplace_description of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :param marketplace_description: The marketplace_description of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :type marketplace_description: str
        """

        self._marketplace_description = marketplace_description

    @property
    def listing_id(self):
        """Gets the listing_id of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :return: The listing_id of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :rtype: str
        """
        return self._listing_id

    @listing_id.setter
    def listing_id(self, listing_id):
        """Sets the listing_id of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.


        :param listing_id: The listing_id of this DescribeSubscribedWorkteamResponseSubscribedWorkteam.
        :type listing_id: str
        """

        self._listing_id = listing_id
