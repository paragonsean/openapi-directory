# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_device_fleet_request_output_config import CreateDeviceFleetRequestOutputConfig
from openapi_server.models.get_device_fleet_report_response_device_stats import GetDeviceFleetReportResponseDeviceStats
from openapi_server import util


class GetDeviceFleetReportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_fleet_arn: str=None, device_fleet_name: str=None, output_config: CreateDeviceFleetRequestOutputConfig=None, description: str=None, report_generated: datetime=None, device_stats: GetDeviceFleetReportResponseDeviceStats=None, agent_versions: List=None, model_stats: List=None):
        """GetDeviceFleetReportResponse - a model defined in OpenAPI

        :param device_fleet_arn: The device_fleet_arn of this GetDeviceFleetReportResponse.
        :param device_fleet_name: The device_fleet_name of this GetDeviceFleetReportResponse.
        :param output_config: The output_config of this GetDeviceFleetReportResponse.
        :param description: The description of this GetDeviceFleetReportResponse.
        :param report_generated: The report_generated of this GetDeviceFleetReportResponse.
        :param device_stats: The device_stats of this GetDeviceFleetReportResponse.
        :param agent_versions: The agent_versions of this GetDeviceFleetReportResponse.
        :param model_stats: The model_stats of this GetDeviceFleetReportResponse.
        """
        self.openapi_types = {
            'device_fleet_arn': str,
            'device_fleet_name': str,
            'output_config': CreateDeviceFleetRequestOutputConfig,
            'description': str,
            'report_generated': datetime,
            'device_stats': GetDeviceFleetReportResponseDeviceStats,
            'agent_versions': List,
            'model_stats': List
        }

        self.attribute_map = {
            'device_fleet_arn': 'DeviceFleetArn',
            'device_fleet_name': 'DeviceFleetName',
            'output_config': 'OutputConfig',
            'description': 'Description',
            'report_generated': 'ReportGenerated',
            'device_stats': 'DeviceStats',
            'agent_versions': 'AgentVersions',
            'model_stats': 'ModelStats'
        }

        self._device_fleet_arn = device_fleet_arn
        self._device_fleet_name = device_fleet_name
        self._output_config = output_config
        self._description = description
        self._report_generated = report_generated
        self._device_stats = device_stats
        self._agent_versions = agent_versions
        self._model_stats = model_stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDeviceFleetReportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDeviceFleetReportResponse of this GetDeviceFleetReportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_fleet_arn(self):
        """Gets the device_fleet_arn of this GetDeviceFleetReportResponse.


        :return: The device_fleet_arn of this GetDeviceFleetReportResponse.
        :rtype: str
        """
        return self._device_fleet_arn

    @device_fleet_arn.setter
    def device_fleet_arn(self, device_fleet_arn):
        """Sets the device_fleet_arn of this GetDeviceFleetReportResponse.


        :param device_fleet_arn: The device_fleet_arn of this GetDeviceFleetReportResponse.
        :type device_fleet_arn: str
        """
        if device_fleet_arn is None:
            raise ValueError("Invalid value for `device_fleet_arn`, must not be `None`")

        self._device_fleet_arn = device_fleet_arn

    @property
    def device_fleet_name(self):
        """Gets the device_fleet_name of this GetDeviceFleetReportResponse.


        :return: The device_fleet_name of this GetDeviceFleetReportResponse.
        :rtype: str
        """
        return self._device_fleet_name

    @device_fleet_name.setter
    def device_fleet_name(self, device_fleet_name):
        """Sets the device_fleet_name of this GetDeviceFleetReportResponse.


        :param device_fleet_name: The device_fleet_name of this GetDeviceFleetReportResponse.
        :type device_fleet_name: str
        """
        if device_fleet_name is None:
            raise ValueError("Invalid value for `device_fleet_name`, must not be `None`")

        self._device_fleet_name = device_fleet_name

    @property
    def output_config(self):
        """Gets the output_config of this GetDeviceFleetReportResponse.


        :return: The output_config of this GetDeviceFleetReportResponse.
        :rtype: CreateDeviceFleetRequestOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this GetDeviceFleetReportResponse.


        :param output_config: The output_config of this GetDeviceFleetReportResponse.
        :type output_config: CreateDeviceFleetRequestOutputConfig
        """

        self._output_config = output_config

    @property
    def description(self):
        """Gets the description of this GetDeviceFleetReportResponse.


        :return: The description of this GetDeviceFleetReportResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetDeviceFleetReportResponse.


        :param description: The description of this GetDeviceFleetReportResponse.
        :type description: str
        """

        self._description = description

    @property
    def report_generated(self):
        """Gets the report_generated of this GetDeviceFleetReportResponse.


        :return: The report_generated of this GetDeviceFleetReportResponse.
        :rtype: datetime
        """
        return self._report_generated

    @report_generated.setter
    def report_generated(self, report_generated):
        """Sets the report_generated of this GetDeviceFleetReportResponse.


        :param report_generated: The report_generated of this GetDeviceFleetReportResponse.
        :type report_generated: datetime
        """

        self._report_generated = report_generated

    @property
    def device_stats(self):
        """Gets the device_stats of this GetDeviceFleetReportResponse.


        :return: The device_stats of this GetDeviceFleetReportResponse.
        :rtype: GetDeviceFleetReportResponseDeviceStats
        """
        return self._device_stats

    @device_stats.setter
    def device_stats(self, device_stats):
        """Sets the device_stats of this GetDeviceFleetReportResponse.


        :param device_stats: The device_stats of this GetDeviceFleetReportResponse.
        :type device_stats: GetDeviceFleetReportResponseDeviceStats
        """

        self._device_stats = device_stats

    @property
    def agent_versions(self):
        """Gets the agent_versions of this GetDeviceFleetReportResponse.


        :return: The agent_versions of this GetDeviceFleetReportResponse.
        :rtype: List
        """
        return self._agent_versions

    @agent_versions.setter
    def agent_versions(self, agent_versions):
        """Sets the agent_versions of this GetDeviceFleetReportResponse.


        :param agent_versions: The agent_versions of this GetDeviceFleetReportResponse.
        :type agent_versions: List
        """

        self._agent_versions = agent_versions

    @property
    def model_stats(self):
        """Gets the model_stats of this GetDeviceFleetReportResponse.


        :return: The model_stats of this GetDeviceFleetReportResponse.
        :rtype: List
        """
        return self._model_stats

    @model_stats.setter
    def model_stats(self, model_stats):
        """Sets the model_stats of this GetDeviceFleetReportResponse.


        :param model_stats: The model_stats of this GetDeviceFleetReportResponse.
        :type model_stats: List
        """

        self._model_stats = model_stats
