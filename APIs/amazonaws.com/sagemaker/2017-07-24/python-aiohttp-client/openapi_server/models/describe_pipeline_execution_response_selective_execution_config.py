# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribePipelineExecutionResponseSelectiveExecutionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_pipeline_execution_arn: str=None, selected_steps: List=None):
        """DescribePipelineExecutionResponseSelectiveExecutionConfig - a model defined in OpenAPI

        :param source_pipeline_execution_arn: The source_pipeline_execution_arn of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        :param selected_steps: The selected_steps of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        """
        self.openapi_types = {
            'source_pipeline_execution_arn': str,
            'selected_steps': List
        }

        self.attribute_map = {
            'source_pipeline_execution_arn': 'SourcePipelineExecutionArn',
            'selected_steps': 'SelectedSteps'
        }

        self._source_pipeline_execution_arn = source_pipeline_execution_arn
        self._selected_steps = selected_steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePipelineExecutionResponseSelectiveExecutionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePipelineExecutionResponse_SelectiveExecutionConfig of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_pipeline_execution_arn(self):
        """Gets the source_pipeline_execution_arn of this DescribePipelineExecutionResponseSelectiveExecutionConfig.


        :return: The source_pipeline_execution_arn of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        :rtype: str
        """
        return self._source_pipeline_execution_arn

    @source_pipeline_execution_arn.setter
    def source_pipeline_execution_arn(self, source_pipeline_execution_arn):
        """Sets the source_pipeline_execution_arn of this DescribePipelineExecutionResponseSelectiveExecutionConfig.


        :param source_pipeline_execution_arn: The source_pipeline_execution_arn of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        :type source_pipeline_execution_arn: str
        """
        if source_pipeline_execution_arn is None:
            raise ValueError("Invalid value for `source_pipeline_execution_arn`, must not be `None`")

        self._source_pipeline_execution_arn = source_pipeline_execution_arn

    @property
    def selected_steps(self):
        """Gets the selected_steps of this DescribePipelineExecutionResponseSelectiveExecutionConfig.


        :return: The selected_steps of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        :rtype: List
        """
        return self._selected_steps

    @selected_steps.setter
    def selected_steps(self, selected_steps):
        """Sets the selected_steps of this DescribePipelineExecutionResponseSelectiveExecutionConfig.


        :param selected_steps: The selected_steps of this DescribePipelineExecutionResponseSelectiveExecutionConfig.
        :type selected_steps: List
        """
        if selected_steps is None:
            raise ValueError("Invalid value for `selected_steps`, must not be `None`")

        self._selected_steps = selected_steps
