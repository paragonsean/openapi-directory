# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_ml_metric_enum import AutoMLMetricEnum
from openapi_server.models.auto_ml_metric_extended_enum import AutoMLMetricExtendedEnum
from openapi_server.models.metric_set_source import MetricSetSource
from openapi_server import util


class MetricDatum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_name: AutoMLMetricEnum=None, value: float=None, set: MetricSetSource=None, standard_metric_name: AutoMLMetricExtendedEnum=None):
        """MetricDatum - a model defined in OpenAPI

        :param metric_name: The metric_name of this MetricDatum.
        :param value: The value of this MetricDatum.
        :param set: The set of this MetricDatum.
        :param standard_metric_name: The standard_metric_name of this MetricDatum.
        """
        self.openapi_types = {
            'metric_name': AutoMLMetricEnum,
            'value': float,
            'set': MetricSetSource,
            'standard_metric_name': AutoMLMetricExtendedEnum
        }

        self.attribute_map = {
            'metric_name': 'MetricName',
            'value': 'Value',
            'set': 'Set',
            'standard_metric_name': 'StandardMetricName'
        }

        self._metric_name = metric_name
        self._value = value
        self._set = set
        self._standard_metric_name = standard_metric_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricDatum':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricDatum of this MetricDatum.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_name(self):
        """Gets the metric_name of this MetricDatum.


        :return: The metric_name of this MetricDatum.
        :rtype: AutoMLMetricEnum
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name):
        """Sets the metric_name of this MetricDatum.


        :param metric_name: The metric_name of this MetricDatum.
        :type metric_name: AutoMLMetricEnum
        """

        self._metric_name = metric_name

    @property
    def value(self):
        """Gets the value of this MetricDatum.


        :return: The value of this MetricDatum.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this MetricDatum.


        :param value: The value of this MetricDatum.
        :type value: float
        """

        self._value = value

    @property
    def set(self):
        """Gets the set of this MetricDatum.


        :return: The set of this MetricDatum.
        :rtype: MetricSetSource
        """
        return self._set

    @set.setter
    def set(self, set):
        """Sets the set of this MetricDatum.


        :param set: The set of this MetricDatum.
        :type set: MetricSetSource
        """

        self._set = set

    @property
    def standard_metric_name(self):
        """Gets the standard_metric_name of this MetricDatum.


        :return: The standard_metric_name of this MetricDatum.
        :rtype: AutoMLMetricExtendedEnum
        """
        return self._standard_metric_name

    @standard_metric_name.setter
    def standard_metric_name(self, standard_metric_name):
        """Sets the standard_metric_name of this MetricDatum.


        :param standard_metric_name: The standard_metric_name of this MetricDatum.
        :type standard_metric_name: AutoMLMetricExtendedEnum
        """

        self._standard_metric_name = standard_metric_name
