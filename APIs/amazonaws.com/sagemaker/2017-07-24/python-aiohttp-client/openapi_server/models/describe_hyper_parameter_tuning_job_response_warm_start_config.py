# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hyper_parameter_tuning_job_warm_start_type import HyperParameterTuningJobWarmStartType
from openapi_server import util


class DescribeHyperParameterTuningJobResponseWarmStartConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent_hyper_parameter_tuning_jobs: List=None, warm_start_type: HyperParameterTuningJobWarmStartType=None):
        """DescribeHyperParameterTuningJobResponseWarmStartConfig - a model defined in OpenAPI

        :param parent_hyper_parameter_tuning_jobs: The parent_hyper_parameter_tuning_jobs of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        :param warm_start_type: The warm_start_type of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        """
        self.openapi_types = {
            'parent_hyper_parameter_tuning_jobs': List,
            'warm_start_type': HyperParameterTuningJobWarmStartType
        }

        self.attribute_map = {
            'parent_hyper_parameter_tuning_jobs': 'ParentHyperParameterTuningJobs',
            'warm_start_type': 'WarmStartType'
        }

        self._parent_hyper_parameter_tuning_jobs = parent_hyper_parameter_tuning_jobs
        self._warm_start_type = warm_start_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeHyperParameterTuningJobResponseWarmStartConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeHyperParameterTuningJobResponse_WarmStartConfig of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent_hyper_parameter_tuning_jobs(self):
        """Gets the parent_hyper_parameter_tuning_jobs of this DescribeHyperParameterTuningJobResponseWarmStartConfig.


        :return: The parent_hyper_parameter_tuning_jobs of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        :rtype: List
        """
        return self._parent_hyper_parameter_tuning_jobs

    @parent_hyper_parameter_tuning_jobs.setter
    def parent_hyper_parameter_tuning_jobs(self, parent_hyper_parameter_tuning_jobs):
        """Sets the parent_hyper_parameter_tuning_jobs of this DescribeHyperParameterTuningJobResponseWarmStartConfig.


        :param parent_hyper_parameter_tuning_jobs: The parent_hyper_parameter_tuning_jobs of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        :type parent_hyper_parameter_tuning_jobs: List
        """
        if parent_hyper_parameter_tuning_jobs is None:
            raise ValueError("Invalid value for `parent_hyper_parameter_tuning_jobs`, must not be `None`")

        self._parent_hyper_parameter_tuning_jobs = parent_hyper_parameter_tuning_jobs

    @property
    def warm_start_type(self):
        """Gets the warm_start_type of this DescribeHyperParameterTuningJobResponseWarmStartConfig.


        :return: The warm_start_type of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        :rtype: HyperParameterTuningJobWarmStartType
        """
        return self._warm_start_type

    @warm_start_type.setter
    def warm_start_type(self, warm_start_type):
        """Sets the warm_start_type of this DescribeHyperParameterTuningJobResponseWarmStartConfig.


        :param warm_start_type: The warm_start_type of this DescribeHyperParameterTuningJobResponseWarmStartConfig.
        :type warm_start_type: HyperParameterTuningJobWarmStartType
        """
        if warm_start_type is None:
            raise ValueError("Invalid value for `warm_start_type`, must not be `None`")

        self._warm_start_type = warm_start_type
