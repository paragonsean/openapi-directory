# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_project_input_service_catalog_provisioning_update_details import UpdateProjectInputServiceCatalogProvisioningUpdateDetails
from openapi_server import util


class UpdateProjectInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_name: str=None, project_description: str=None, service_catalog_provisioning_update_details: UpdateProjectInputServiceCatalogProvisioningUpdateDetails=None, tags: List=None):
        """UpdateProjectInput - a model defined in OpenAPI

        :param project_name: The project_name of this UpdateProjectInput.
        :param project_description: The project_description of this UpdateProjectInput.
        :param service_catalog_provisioning_update_details: The service_catalog_provisioning_update_details of this UpdateProjectInput.
        :param tags: The tags of this UpdateProjectInput.
        """
        self.openapi_types = {
            'project_name': str,
            'project_description': str,
            'service_catalog_provisioning_update_details': UpdateProjectInputServiceCatalogProvisioningUpdateDetails,
            'tags': List
        }

        self.attribute_map = {
            'project_name': 'ProjectName',
            'project_description': 'ProjectDescription',
            'service_catalog_provisioning_update_details': 'ServiceCatalogProvisioningUpdateDetails',
            'tags': 'Tags'
        }

        self._project_name = project_name
        self._project_description = project_description
        self._service_catalog_provisioning_update_details = service_catalog_provisioning_update_details
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProjectInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProjectInput of this UpdateProjectInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_name(self):
        """Gets the project_name of this UpdateProjectInput.


        :return: The project_name of this UpdateProjectInput.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this UpdateProjectInput.


        :param project_name: The project_name of this UpdateProjectInput.
        :type project_name: str
        """
        if project_name is None:
            raise ValueError("Invalid value for `project_name`, must not be `None`")

        self._project_name = project_name

    @property
    def project_description(self):
        """Gets the project_description of this UpdateProjectInput.


        :return: The project_description of this UpdateProjectInput.
        :rtype: str
        """
        return self._project_description

    @project_description.setter
    def project_description(self, project_description):
        """Sets the project_description of this UpdateProjectInput.


        :param project_description: The project_description of this UpdateProjectInput.
        :type project_description: str
        """

        self._project_description = project_description

    @property
    def service_catalog_provisioning_update_details(self):
        """Gets the service_catalog_provisioning_update_details of this UpdateProjectInput.


        :return: The service_catalog_provisioning_update_details of this UpdateProjectInput.
        :rtype: UpdateProjectInputServiceCatalogProvisioningUpdateDetails
        """
        return self._service_catalog_provisioning_update_details

    @service_catalog_provisioning_update_details.setter
    def service_catalog_provisioning_update_details(self, service_catalog_provisioning_update_details):
        """Sets the service_catalog_provisioning_update_details of this UpdateProjectInput.


        :param service_catalog_provisioning_update_details: The service_catalog_provisioning_update_details of this UpdateProjectInput.
        :type service_catalog_provisioning_update_details: UpdateProjectInputServiceCatalogProvisioningUpdateDetails
        """

        self._service_catalog_provisioning_update_details = service_catalog_provisioning_update_details

    @property
    def tags(self):
        """Gets the tags of this UpdateProjectInput.


        :return: The tags of this UpdateProjectInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateProjectInput.


        :param tags: The tags of this UpdateProjectInput.
        :type tags: List
        """

        self._tags = tags
