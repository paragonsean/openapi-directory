# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_repository_summary_git_config import CodeRepositorySummaryGitConfig
from openapi_server import util


class CodeRepositorySummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_repository_name: str=None, code_repository_arn: str=None, creation_time: datetime=None, last_modified_time: datetime=None, git_config: CodeRepositorySummaryGitConfig=None):
        """CodeRepositorySummary - a model defined in OpenAPI

        :param code_repository_name: The code_repository_name of this CodeRepositorySummary.
        :param code_repository_arn: The code_repository_arn of this CodeRepositorySummary.
        :param creation_time: The creation_time of this CodeRepositorySummary.
        :param last_modified_time: The last_modified_time of this CodeRepositorySummary.
        :param git_config: The git_config of this CodeRepositorySummary.
        """
        self.openapi_types = {
            'code_repository_name': str,
            'code_repository_arn': str,
            'creation_time': datetime,
            'last_modified_time': datetime,
            'git_config': CodeRepositorySummaryGitConfig
        }

        self.attribute_map = {
            'code_repository_name': 'CodeRepositoryName',
            'code_repository_arn': 'CodeRepositoryArn',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime',
            'git_config': 'GitConfig'
        }

        self._code_repository_name = code_repository_name
        self._code_repository_arn = code_repository_arn
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time
        self._git_config = git_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodeRepositorySummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodeRepositorySummary of this CodeRepositorySummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_repository_name(self):
        """Gets the code_repository_name of this CodeRepositorySummary.


        :return: The code_repository_name of this CodeRepositorySummary.
        :rtype: str
        """
        return self._code_repository_name

    @code_repository_name.setter
    def code_repository_name(self, code_repository_name):
        """Sets the code_repository_name of this CodeRepositorySummary.


        :param code_repository_name: The code_repository_name of this CodeRepositorySummary.
        :type code_repository_name: str
        """
        if code_repository_name is None:
            raise ValueError("Invalid value for `code_repository_name`, must not be `None`")

        self._code_repository_name = code_repository_name

    @property
    def code_repository_arn(self):
        """Gets the code_repository_arn of this CodeRepositorySummary.


        :return: The code_repository_arn of this CodeRepositorySummary.
        :rtype: str
        """
        return self._code_repository_arn

    @code_repository_arn.setter
    def code_repository_arn(self, code_repository_arn):
        """Sets the code_repository_arn of this CodeRepositorySummary.


        :param code_repository_arn: The code_repository_arn of this CodeRepositorySummary.
        :type code_repository_arn: str
        """
        if code_repository_arn is None:
            raise ValueError("Invalid value for `code_repository_arn`, must not be `None`")

        self._code_repository_arn = code_repository_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this CodeRepositorySummary.


        :return: The creation_time of this CodeRepositorySummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CodeRepositorySummary.


        :param creation_time: The creation_time of this CodeRepositorySummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this CodeRepositorySummary.


        :return: The last_modified_time of this CodeRepositorySummary.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this CodeRepositorySummary.


        :param last_modified_time: The last_modified_time of this CodeRepositorySummary.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def git_config(self):
        """Gets the git_config of this CodeRepositorySummary.


        :return: The git_config of this CodeRepositorySummary.
        :rtype: CodeRepositorySummaryGitConfig
        """
        return self._git_config

    @git_config.setter
    def git_config(self, git_config):
        """Sets the git_config of this CodeRepositorySummary.


        :param git_config: The git_config of this CodeRepositorySummary.
        :type git_config: CodeRepositorySummaryGitConfig
        """

        self._git_config = git_config
