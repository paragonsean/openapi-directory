# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.kernel_gateway_image_config_file_system_config import KernelGatewayImageConfigFileSystemConfig
from openapi_server import util


class KernelGatewayImageConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kernel_specs: List=None, file_system_config: KernelGatewayImageConfigFileSystemConfig=None):
        """KernelGatewayImageConfig - a model defined in OpenAPI

        :param kernel_specs: The kernel_specs of this KernelGatewayImageConfig.
        :param file_system_config: The file_system_config of this KernelGatewayImageConfig.
        """
        self.openapi_types = {
            'kernel_specs': List,
            'file_system_config': KernelGatewayImageConfigFileSystemConfig
        }

        self.attribute_map = {
            'kernel_specs': 'KernelSpecs',
            'file_system_config': 'FileSystemConfig'
        }

        self._kernel_specs = kernel_specs
        self._file_system_config = file_system_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KernelGatewayImageConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KernelGatewayImageConfig of this KernelGatewayImageConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kernel_specs(self):
        """Gets the kernel_specs of this KernelGatewayImageConfig.


        :return: The kernel_specs of this KernelGatewayImageConfig.
        :rtype: List
        """
        return self._kernel_specs

    @kernel_specs.setter
    def kernel_specs(self, kernel_specs):
        """Sets the kernel_specs of this KernelGatewayImageConfig.


        :param kernel_specs: The kernel_specs of this KernelGatewayImageConfig.
        :type kernel_specs: List
        """
        if kernel_specs is None:
            raise ValueError("Invalid value for `kernel_specs`, must not be `None`")

        self._kernel_specs = kernel_specs

    @property
    def file_system_config(self):
        """Gets the file_system_config of this KernelGatewayImageConfig.


        :return: The file_system_config of this KernelGatewayImageConfig.
        :rtype: KernelGatewayImageConfigFileSystemConfig
        """
        return self._file_system_config

    @file_system_config.setter
    def file_system_config(self, file_system_config):
        """Sets the file_system_config of this KernelGatewayImageConfig.


        :param file_system_config: The file_system_config of this KernelGatewayImageConfig.
        :type file_system_config: KernelGatewayImageConfigFileSystemConfig
        """

        self._file_system_config = file_system_config
