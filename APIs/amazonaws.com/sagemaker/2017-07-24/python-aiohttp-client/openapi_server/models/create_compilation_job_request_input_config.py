# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.framework import Framework
from openapi_server import util


class CreateCompilationJobRequestInputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_uri: str=None, data_input_config: str=None, framework: Framework=None, framework_version: str=None):
        """CreateCompilationJobRequestInputConfig - a model defined in OpenAPI

        :param s3_uri: The s3_uri of this CreateCompilationJobRequestInputConfig.
        :param data_input_config: The data_input_config of this CreateCompilationJobRequestInputConfig.
        :param framework: The framework of this CreateCompilationJobRequestInputConfig.
        :param framework_version: The framework_version of this CreateCompilationJobRequestInputConfig.
        """
        self.openapi_types = {
            's3_uri': str,
            'data_input_config': str,
            'framework': Framework,
            'framework_version': str
        }

        self.attribute_map = {
            's3_uri': 'S3Uri',
            'data_input_config': 'DataInputConfig',
            'framework': 'Framework',
            'framework_version': 'FrameworkVersion'
        }

        self._s3_uri = s3_uri
        self._data_input_config = data_input_config
        self._framework = framework
        self._framework_version = framework_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCompilationJobRequestInputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCompilationJobRequest_InputConfig of this CreateCompilationJobRequestInputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_uri(self):
        """Gets the s3_uri of this CreateCompilationJobRequestInputConfig.


        :return: The s3_uri of this CreateCompilationJobRequestInputConfig.
        :rtype: str
        """
        return self._s3_uri

    @s3_uri.setter
    def s3_uri(self, s3_uri):
        """Sets the s3_uri of this CreateCompilationJobRequestInputConfig.


        :param s3_uri: The s3_uri of this CreateCompilationJobRequestInputConfig.
        :type s3_uri: str
        """
        if s3_uri is None:
            raise ValueError("Invalid value for `s3_uri`, must not be `None`")

        self._s3_uri = s3_uri

    @property
    def data_input_config(self):
        """Gets the data_input_config of this CreateCompilationJobRequestInputConfig.


        :return: The data_input_config of this CreateCompilationJobRequestInputConfig.
        :rtype: str
        """
        return self._data_input_config

    @data_input_config.setter
    def data_input_config(self, data_input_config):
        """Sets the data_input_config of this CreateCompilationJobRequestInputConfig.


        :param data_input_config: The data_input_config of this CreateCompilationJobRequestInputConfig.
        :type data_input_config: str
        """
        if data_input_config is None:
            raise ValueError("Invalid value for `data_input_config`, must not be `None`")

        self._data_input_config = data_input_config

    @property
    def framework(self):
        """Gets the framework of this CreateCompilationJobRequestInputConfig.


        :return: The framework of this CreateCompilationJobRequestInputConfig.
        :rtype: Framework
        """
        return self._framework

    @framework.setter
    def framework(self, framework):
        """Sets the framework of this CreateCompilationJobRequestInputConfig.


        :param framework: The framework of this CreateCompilationJobRequestInputConfig.
        :type framework: Framework
        """
        if framework is None:
            raise ValueError("Invalid value for `framework`, must not be `None`")

        self._framework = framework

    @property
    def framework_version(self):
        """Gets the framework_version of this CreateCompilationJobRequestInputConfig.


        :return: The framework_version of this CreateCompilationJobRequestInputConfig.
        :rtype: str
        """
        return self._framework_version

    @framework_version.setter
    def framework_version(self, framework_version):
        """Sets the framework_version of this CreateCompilationJobRequestInputConfig.


        :param framework_version: The framework_version of this CreateCompilationJobRequestInputConfig.
        :type framework_version: str
        """

        self._framework_version = framework_version
