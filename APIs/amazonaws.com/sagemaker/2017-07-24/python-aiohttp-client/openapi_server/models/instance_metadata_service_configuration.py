# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceMetadataServiceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, minimum_instance_metadata_service_version: str=None):
        """InstanceMetadataServiceConfiguration - a model defined in OpenAPI

        :param minimum_instance_metadata_service_version: The minimum_instance_metadata_service_version of this InstanceMetadataServiceConfiguration.
        """
        self.openapi_types = {
            'minimum_instance_metadata_service_version': str
        }

        self.attribute_map = {
            'minimum_instance_metadata_service_version': 'MinimumInstanceMetadataServiceVersion'
        }

        self._minimum_instance_metadata_service_version = minimum_instance_metadata_service_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceMetadataServiceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceMetadataServiceConfiguration of this InstanceMetadataServiceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def minimum_instance_metadata_service_version(self):
        """Gets the minimum_instance_metadata_service_version of this InstanceMetadataServiceConfiguration.


        :return: The minimum_instance_metadata_service_version of this InstanceMetadataServiceConfiguration.
        :rtype: str
        """
        return self._minimum_instance_metadata_service_version

    @minimum_instance_metadata_service_version.setter
    def minimum_instance_metadata_service_version(self, minimum_instance_metadata_service_version):
        """Sets the minimum_instance_metadata_service_version of this InstanceMetadataServiceConfiguration.


        :param minimum_instance_metadata_service_version: The minimum_instance_metadata_service_version of this InstanceMetadataServiceConfiguration.
        :type minimum_instance_metadata_service_version: str
        """
        if minimum_instance_metadata_service_version is None:
            raise ValueError("Invalid value for `minimum_instance_metadata_service_version`, must not be `None`")

        self._minimum_instance_metadata_service_version = minimum_instance_metadata_service_version
