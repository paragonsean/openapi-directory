# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSubscribedWorkteamsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name_contains: str=None, next_token: str=None, max_results: int=None):
        """ListSubscribedWorkteamsRequest - a model defined in OpenAPI

        :param name_contains: The name_contains of this ListSubscribedWorkteamsRequest.
        :param next_token: The next_token of this ListSubscribedWorkteamsRequest.
        :param max_results: The max_results of this ListSubscribedWorkteamsRequest.
        """
        self.openapi_types = {
            'name_contains': str,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'name_contains': 'NameContains',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._name_contains = name_contains
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSubscribedWorkteamsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSubscribedWorkteamsRequest of this ListSubscribedWorkteamsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_contains(self):
        """Gets the name_contains of this ListSubscribedWorkteamsRequest.


        :return: The name_contains of this ListSubscribedWorkteamsRequest.
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this ListSubscribedWorkteamsRequest.


        :param name_contains: The name_contains of this ListSubscribedWorkteamsRequest.
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def next_token(self):
        """Gets the next_token of this ListSubscribedWorkteamsRequest.


        :return: The next_token of this ListSubscribedWorkteamsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListSubscribedWorkteamsRequest.


        :param next_token: The next_token of this ListSubscribedWorkteamsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListSubscribedWorkteamsRequest.


        :return: The max_results of this ListSubscribedWorkteamsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListSubscribedWorkteamsRequest.


        :param max_results: The max_results of this ListSubscribedWorkteamsRequest.
        :type max_results: int
        """

        self._max_results = max_results
