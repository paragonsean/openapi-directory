# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.athena_dataset_definition import AthenaDatasetDefinition
from openapi_server.models.data_distribution_type import DataDistributionType
from openapi_server.models.input_mode import InputMode
from openapi_server.models.redshift_dataset_definition import RedshiftDatasetDefinition
from openapi_server import util


class DatasetDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, athena_dataset_definition: AthenaDatasetDefinition=None, redshift_dataset_definition: RedshiftDatasetDefinition=None, local_path: str=None, data_distribution_type: DataDistributionType=None, input_mode: InputMode=None):
        """DatasetDefinition - a model defined in OpenAPI

        :param athena_dataset_definition: The athena_dataset_definition of this DatasetDefinition.
        :param redshift_dataset_definition: The redshift_dataset_definition of this DatasetDefinition.
        :param local_path: The local_path of this DatasetDefinition.
        :param data_distribution_type: The data_distribution_type of this DatasetDefinition.
        :param input_mode: The input_mode of this DatasetDefinition.
        """
        self.openapi_types = {
            'athena_dataset_definition': AthenaDatasetDefinition,
            'redshift_dataset_definition': RedshiftDatasetDefinition,
            'local_path': str,
            'data_distribution_type': DataDistributionType,
            'input_mode': InputMode
        }

        self.attribute_map = {
            'athena_dataset_definition': 'AthenaDatasetDefinition',
            'redshift_dataset_definition': 'RedshiftDatasetDefinition',
            'local_path': 'LocalPath',
            'data_distribution_type': 'DataDistributionType',
            'input_mode': 'InputMode'
        }

        self._athena_dataset_definition = athena_dataset_definition
        self._redshift_dataset_definition = redshift_dataset_definition
        self._local_path = local_path
        self._data_distribution_type = data_distribution_type
        self._input_mode = input_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetDefinition of this DatasetDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def athena_dataset_definition(self):
        """Gets the athena_dataset_definition of this DatasetDefinition.


        :return: The athena_dataset_definition of this DatasetDefinition.
        :rtype: AthenaDatasetDefinition
        """
        return self._athena_dataset_definition

    @athena_dataset_definition.setter
    def athena_dataset_definition(self, athena_dataset_definition):
        """Sets the athena_dataset_definition of this DatasetDefinition.


        :param athena_dataset_definition: The athena_dataset_definition of this DatasetDefinition.
        :type athena_dataset_definition: AthenaDatasetDefinition
        """

        self._athena_dataset_definition = athena_dataset_definition

    @property
    def redshift_dataset_definition(self):
        """Gets the redshift_dataset_definition of this DatasetDefinition.


        :return: The redshift_dataset_definition of this DatasetDefinition.
        :rtype: RedshiftDatasetDefinition
        """
        return self._redshift_dataset_definition

    @redshift_dataset_definition.setter
    def redshift_dataset_definition(self, redshift_dataset_definition):
        """Sets the redshift_dataset_definition of this DatasetDefinition.


        :param redshift_dataset_definition: The redshift_dataset_definition of this DatasetDefinition.
        :type redshift_dataset_definition: RedshiftDatasetDefinition
        """

        self._redshift_dataset_definition = redshift_dataset_definition

    @property
    def local_path(self):
        """Gets the local_path of this DatasetDefinition.


        :return: The local_path of this DatasetDefinition.
        :rtype: str
        """
        return self._local_path

    @local_path.setter
    def local_path(self, local_path):
        """Sets the local_path of this DatasetDefinition.


        :param local_path: The local_path of this DatasetDefinition.
        :type local_path: str
        """

        self._local_path = local_path

    @property
    def data_distribution_type(self):
        """Gets the data_distribution_type of this DatasetDefinition.


        :return: The data_distribution_type of this DatasetDefinition.
        :rtype: DataDistributionType
        """
        return self._data_distribution_type

    @data_distribution_type.setter
    def data_distribution_type(self, data_distribution_type):
        """Sets the data_distribution_type of this DatasetDefinition.


        :param data_distribution_type: The data_distribution_type of this DatasetDefinition.
        :type data_distribution_type: DataDistributionType
        """

        self._data_distribution_type = data_distribution_type

    @property
    def input_mode(self):
        """Gets the input_mode of this DatasetDefinition.


        :return: The input_mode of this DatasetDefinition.
        :rtype: InputMode
        """
        return self._input_mode

    @input_mode.setter
    def input_mode(self, input_mode):
        """Sets the input_mode of this DatasetDefinition.


        :param input_mode: The input_mode of this DatasetDefinition.
        :type input_mode: InputMode
        """

        self._input_mode = input_mode
