# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drift_check_explainability_config_file import DriftCheckExplainabilityConfigFile
from openapi_server.models.drift_check_explainability_constraints import DriftCheckExplainabilityConstraints
from openapi_server import util


class DriftCheckExplainability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constraints: DriftCheckExplainabilityConstraints=None, config_file: DriftCheckExplainabilityConfigFile=None):
        """DriftCheckExplainability - a model defined in OpenAPI

        :param constraints: The constraints of this DriftCheckExplainability.
        :param config_file: The config_file of this DriftCheckExplainability.
        """
        self.openapi_types = {
            'constraints': DriftCheckExplainabilityConstraints,
            'config_file': DriftCheckExplainabilityConfigFile
        }

        self.attribute_map = {
            'constraints': 'Constraints',
            'config_file': 'ConfigFile'
        }

        self._constraints = constraints
        self._config_file = config_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriftCheckExplainability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriftCheckExplainability of this DriftCheckExplainability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constraints(self):
        """Gets the constraints of this DriftCheckExplainability.


        :return: The constraints of this DriftCheckExplainability.
        :rtype: DriftCheckExplainabilityConstraints
        """
        return self._constraints

    @constraints.setter
    def constraints(self, constraints):
        """Sets the constraints of this DriftCheckExplainability.


        :param constraints: The constraints of this DriftCheckExplainability.
        :type constraints: DriftCheckExplainabilityConstraints
        """

        self._constraints = constraints

    @property
    def config_file(self):
        """Gets the config_file of this DriftCheckExplainability.


        :return: The config_file of this DriftCheckExplainability.
        :rtype: DriftCheckExplainabilityConfigFile
        """
        return self._config_file

    @config_file.setter
    def config_file(self, config_file):
        """Sets the config_file of this DriftCheckExplainability.


        :param config_file: The config_file of this DriftCheckExplainability.
        :type config_file: DriftCheckExplainabilityConfigFile
        """

        self._config_file = config_file
