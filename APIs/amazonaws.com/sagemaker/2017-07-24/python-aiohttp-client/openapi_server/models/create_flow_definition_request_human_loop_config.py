# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_workforce_task_price import PublicWorkforceTaskPrice
from openapi_server import util


class CreateFlowDefinitionRequestHumanLoopConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam_arn: str=None, human_task_ui_arn: str=None, task_title: str=None, task_description: str=None, task_count: int=None, task_availability_lifetime_in_seconds: int=None, task_time_limit_in_seconds: int=None, task_keywords: List=None, public_workforce_task_price: PublicWorkforceTaskPrice=None):
        """CreateFlowDefinitionRequestHumanLoopConfig - a model defined in OpenAPI

        :param workteam_arn: The workteam_arn of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param human_task_ui_arn: The human_task_ui_arn of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param task_title: The task_title of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param task_description: The task_description of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param task_count: The task_count of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param task_availability_lifetime_in_seconds: The task_availability_lifetime_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param task_time_limit_in_seconds: The task_time_limit_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param task_keywords: The task_keywords of this CreateFlowDefinitionRequestHumanLoopConfig.
        :param public_workforce_task_price: The public_workforce_task_price of this CreateFlowDefinitionRequestHumanLoopConfig.
        """
        self.openapi_types = {
            'workteam_arn': str,
            'human_task_ui_arn': str,
            'task_title': str,
            'task_description': str,
            'task_count': int,
            'task_availability_lifetime_in_seconds': int,
            'task_time_limit_in_seconds': int,
            'task_keywords': List,
            'public_workforce_task_price': PublicWorkforceTaskPrice
        }

        self.attribute_map = {
            'workteam_arn': 'WorkteamArn',
            'human_task_ui_arn': 'HumanTaskUiArn',
            'task_title': 'TaskTitle',
            'task_description': 'TaskDescription',
            'task_count': 'TaskCount',
            'task_availability_lifetime_in_seconds': 'TaskAvailabilityLifetimeInSeconds',
            'task_time_limit_in_seconds': 'TaskTimeLimitInSeconds',
            'task_keywords': 'TaskKeywords',
            'public_workforce_task_price': 'PublicWorkforceTaskPrice'
        }

        self._workteam_arn = workteam_arn
        self._human_task_ui_arn = human_task_ui_arn
        self._task_title = task_title
        self._task_description = task_description
        self._task_count = task_count
        self._task_availability_lifetime_in_seconds = task_availability_lifetime_in_seconds
        self._task_time_limit_in_seconds = task_time_limit_in_seconds
        self._task_keywords = task_keywords
        self._public_workforce_task_price = public_workforce_task_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFlowDefinitionRequestHumanLoopConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFlowDefinitionRequest_HumanLoopConfig of this CreateFlowDefinitionRequestHumanLoopConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam_arn(self):
        """Gets the workteam_arn of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The workteam_arn of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: str
        """
        return self._workteam_arn

    @workteam_arn.setter
    def workteam_arn(self, workteam_arn):
        """Sets the workteam_arn of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param workteam_arn: The workteam_arn of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type workteam_arn: str
        """
        if workteam_arn is None:
            raise ValueError("Invalid value for `workteam_arn`, must not be `None`")

        self._workteam_arn = workteam_arn

    @property
    def human_task_ui_arn(self):
        """Gets the human_task_ui_arn of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The human_task_ui_arn of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: str
        """
        return self._human_task_ui_arn

    @human_task_ui_arn.setter
    def human_task_ui_arn(self, human_task_ui_arn):
        """Sets the human_task_ui_arn of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param human_task_ui_arn: The human_task_ui_arn of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type human_task_ui_arn: str
        """
        if human_task_ui_arn is None:
            raise ValueError("Invalid value for `human_task_ui_arn`, must not be `None`")

        self._human_task_ui_arn = human_task_ui_arn

    @property
    def task_title(self):
        """Gets the task_title of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The task_title of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: str
        """
        return self._task_title

    @task_title.setter
    def task_title(self, task_title):
        """Sets the task_title of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param task_title: The task_title of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type task_title: str
        """
        if task_title is None:
            raise ValueError("Invalid value for `task_title`, must not be `None`")

        self._task_title = task_title

    @property
    def task_description(self):
        """Gets the task_description of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The task_description of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: str
        """
        return self._task_description

    @task_description.setter
    def task_description(self, task_description):
        """Sets the task_description of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param task_description: The task_description of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type task_description: str
        """
        if task_description is None:
            raise ValueError("Invalid value for `task_description`, must not be `None`")

        self._task_description = task_description

    @property
    def task_count(self):
        """Gets the task_count of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The task_count of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: int
        """
        return self._task_count

    @task_count.setter
    def task_count(self, task_count):
        """Sets the task_count of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param task_count: The task_count of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type task_count: int
        """
        if task_count is None:
            raise ValueError("Invalid value for `task_count`, must not be `None`")

        self._task_count = task_count

    @property
    def task_availability_lifetime_in_seconds(self):
        """Gets the task_availability_lifetime_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The task_availability_lifetime_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: int
        """
        return self._task_availability_lifetime_in_seconds

    @task_availability_lifetime_in_seconds.setter
    def task_availability_lifetime_in_seconds(self, task_availability_lifetime_in_seconds):
        """Sets the task_availability_lifetime_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param task_availability_lifetime_in_seconds: The task_availability_lifetime_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type task_availability_lifetime_in_seconds: int
        """

        self._task_availability_lifetime_in_seconds = task_availability_lifetime_in_seconds

    @property
    def task_time_limit_in_seconds(self):
        """Gets the task_time_limit_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The task_time_limit_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: int
        """
        return self._task_time_limit_in_seconds

    @task_time_limit_in_seconds.setter
    def task_time_limit_in_seconds(self, task_time_limit_in_seconds):
        """Sets the task_time_limit_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param task_time_limit_in_seconds: The task_time_limit_in_seconds of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type task_time_limit_in_seconds: int
        """

        self._task_time_limit_in_seconds = task_time_limit_in_seconds

    @property
    def task_keywords(self):
        """Gets the task_keywords of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The task_keywords of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: List
        """
        return self._task_keywords

    @task_keywords.setter
    def task_keywords(self, task_keywords):
        """Sets the task_keywords of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param task_keywords: The task_keywords of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type task_keywords: List
        """

        self._task_keywords = task_keywords

    @property
    def public_workforce_task_price(self):
        """Gets the public_workforce_task_price of this CreateFlowDefinitionRequestHumanLoopConfig.


        :return: The public_workforce_task_price of this CreateFlowDefinitionRequestHumanLoopConfig.
        :rtype: PublicWorkforceTaskPrice
        """
        return self._public_workforce_task_price

    @public_workforce_task_price.setter
    def public_workforce_task_price(self, public_workforce_task_price):
        """Sets the public_workforce_task_price of this CreateFlowDefinitionRequestHumanLoopConfig.


        :param public_workforce_task_price: The public_workforce_task_price of this CreateFlowDefinitionRequestHumanLoopConfig.
        :type public_workforce_task_price: PublicWorkforceTaskPrice
        """

        self._public_workforce_task_price = public_workforce_task_price
