# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportHubContentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_arn: str=None, hub_content_arn: str=None):
        """ImportHubContentResponse - a model defined in OpenAPI

        :param hub_arn: The hub_arn of this ImportHubContentResponse.
        :param hub_content_arn: The hub_content_arn of this ImportHubContentResponse.
        """
        self.openapi_types = {
            'hub_arn': str,
            'hub_content_arn': str
        }

        self.attribute_map = {
            'hub_arn': 'HubArn',
            'hub_content_arn': 'HubContentArn'
        }

        self._hub_arn = hub_arn
        self._hub_content_arn = hub_content_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportHubContentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportHubContentResponse of this ImportHubContentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_arn(self):
        """Gets the hub_arn of this ImportHubContentResponse.


        :return: The hub_arn of this ImportHubContentResponse.
        :rtype: str
        """
        return self._hub_arn

    @hub_arn.setter
    def hub_arn(self, hub_arn):
        """Sets the hub_arn of this ImportHubContentResponse.


        :param hub_arn: The hub_arn of this ImportHubContentResponse.
        :type hub_arn: str
        """
        if hub_arn is None:
            raise ValueError("Invalid value for `hub_arn`, must not be `None`")

        self._hub_arn = hub_arn

    @property
    def hub_content_arn(self):
        """Gets the hub_content_arn of this ImportHubContentResponse.


        :return: The hub_content_arn of this ImportHubContentResponse.
        :rtype: str
        """
        return self._hub_content_arn

    @hub_content_arn.setter
    def hub_content_arn(self, hub_content_arn):
        """Sets the hub_content_arn of this ImportHubContentResponse.


        :param hub_content_arn: The hub_content_arn of this ImportHubContentResponse.
        :type hub_content_arn: str
        """
        if hub_content_arn is None:
            raise ValueError("Invalid value for `hub_content_arn`, must not be `None`")

        self._hub_content_arn = hub_content_arn
