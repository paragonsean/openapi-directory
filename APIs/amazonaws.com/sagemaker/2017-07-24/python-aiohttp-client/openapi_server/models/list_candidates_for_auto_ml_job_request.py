# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_ml_sort_order import AutoMLSortOrder
from openapi_server.models.candidate_sort_by import CandidateSortBy
from openapi_server.models.candidate_status import CandidateStatus
from openapi_server import util


class ListCandidatesForAutoMLJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_ml_job_name: str=None, status_equals: CandidateStatus=None, candidate_name_equals: str=None, sort_order: AutoMLSortOrder=None, sort_by: CandidateSortBy=None, max_results: int=None, next_token: str=None):
        """ListCandidatesForAutoMLJobRequest - a model defined in OpenAPI

        :param auto_ml_job_name: The auto_ml_job_name of this ListCandidatesForAutoMLJobRequest.
        :param status_equals: The status_equals of this ListCandidatesForAutoMLJobRequest.
        :param candidate_name_equals: The candidate_name_equals of this ListCandidatesForAutoMLJobRequest.
        :param sort_order: The sort_order of this ListCandidatesForAutoMLJobRequest.
        :param sort_by: The sort_by of this ListCandidatesForAutoMLJobRequest.
        :param max_results: The max_results of this ListCandidatesForAutoMLJobRequest.
        :param next_token: The next_token of this ListCandidatesForAutoMLJobRequest.
        """
        self.openapi_types = {
            'auto_ml_job_name': str,
            'status_equals': CandidateStatus,
            'candidate_name_equals': str,
            'sort_order': AutoMLSortOrder,
            'sort_by': CandidateSortBy,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'auto_ml_job_name': 'AutoMLJobName',
            'status_equals': 'StatusEquals',
            'candidate_name_equals': 'CandidateNameEquals',
            'sort_order': 'SortOrder',
            'sort_by': 'SortBy',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._auto_ml_job_name = auto_ml_job_name
        self._status_equals = status_equals
        self._candidate_name_equals = candidate_name_equals
        self._sort_order = sort_order
        self._sort_by = sort_by
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCandidatesForAutoMLJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCandidatesForAutoMLJobRequest of this ListCandidatesForAutoMLJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_ml_job_name(self):
        """Gets the auto_ml_job_name of this ListCandidatesForAutoMLJobRequest.


        :return: The auto_ml_job_name of this ListCandidatesForAutoMLJobRequest.
        :rtype: str
        """
        return self._auto_ml_job_name

    @auto_ml_job_name.setter
    def auto_ml_job_name(self, auto_ml_job_name):
        """Sets the auto_ml_job_name of this ListCandidatesForAutoMLJobRequest.


        :param auto_ml_job_name: The auto_ml_job_name of this ListCandidatesForAutoMLJobRequest.
        :type auto_ml_job_name: str
        """
        if auto_ml_job_name is None:
            raise ValueError("Invalid value for `auto_ml_job_name`, must not be `None`")

        self._auto_ml_job_name = auto_ml_job_name

    @property
    def status_equals(self):
        """Gets the status_equals of this ListCandidatesForAutoMLJobRequest.


        :return: The status_equals of this ListCandidatesForAutoMLJobRequest.
        :rtype: CandidateStatus
        """
        return self._status_equals

    @status_equals.setter
    def status_equals(self, status_equals):
        """Sets the status_equals of this ListCandidatesForAutoMLJobRequest.


        :param status_equals: The status_equals of this ListCandidatesForAutoMLJobRequest.
        :type status_equals: CandidateStatus
        """

        self._status_equals = status_equals

    @property
    def candidate_name_equals(self):
        """Gets the candidate_name_equals of this ListCandidatesForAutoMLJobRequest.


        :return: The candidate_name_equals of this ListCandidatesForAutoMLJobRequest.
        :rtype: str
        """
        return self._candidate_name_equals

    @candidate_name_equals.setter
    def candidate_name_equals(self, candidate_name_equals):
        """Sets the candidate_name_equals of this ListCandidatesForAutoMLJobRequest.


        :param candidate_name_equals: The candidate_name_equals of this ListCandidatesForAutoMLJobRequest.
        :type candidate_name_equals: str
        """

        self._candidate_name_equals = candidate_name_equals

    @property
    def sort_order(self):
        """Gets the sort_order of this ListCandidatesForAutoMLJobRequest.


        :return: The sort_order of this ListCandidatesForAutoMLJobRequest.
        :rtype: AutoMLSortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListCandidatesForAutoMLJobRequest.


        :param sort_order: The sort_order of this ListCandidatesForAutoMLJobRequest.
        :type sort_order: AutoMLSortOrder
        """

        self._sort_order = sort_order

    @property
    def sort_by(self):
        """Gets the sort_by of this ListCandidatesForAutoMLJobRequest.


        :return: The sort_by of this ListCandidatesForAutoMLJobRequest.
        :rtype: CandidateSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListCandidatesForAutoMLJobRequest.


        :param sort_by: The sort_by of this ListCandidatesForAutoMLJobRequest.
        :type sort_by: CandidateSortBy
        """

        self._sort_by = sort_by

    @property
    def max_results(self):
        """Gets the max_results of this ListCandidatesForAutoMLJobRequest.


        :return: The max_results of this ListCandidatesForAutoMLJobRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListCandidatesForAutoMLJobRequest.


        :param max_results: The max_results of this ListCandidatesForAutoMLJobRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListCandidatesForAutoMLJobRequest.


        :return: The next_token of this ListCandidatesForAutoMLJobRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListCandidatesForAutoMLJobRequest.


        :param next_token: The next_token of this ListCandidatesForAutoMLJobRequest.
        :type next_token: str
        """

        self._next_token = next_token
