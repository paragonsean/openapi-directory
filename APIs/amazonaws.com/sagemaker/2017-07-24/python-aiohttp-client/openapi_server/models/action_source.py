# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActionSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_uri: str=None, source_type: str=None, source_id: str=None):
        """ActionSource - a model defined in OpenAPI

        :param source_uri: The source_uri of this ActionSource.
        :param source_type: The source_type of this ActionSource.
        :param source_id: The source_id of this ActionSource.
        """
        self.openapi_types = {
            'source_uri': str,
            'source_type': str,
            'source_id': str
        }

        self.attribute_map = {
            'source_uri': 'SourceUri',
            'source_type': 'SourceType',
            'source_id': 'SourceId'
        }

        self._source_uri = source_uri
        self._source_type = source_type
        self._source_id = source_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionSource of this ActionSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_uri(self):
        """Gets the source_uri of this ActionSource.


        :return: The source_uri of this ActionSource.
        :rtype: str
        """
        return self._source_uri

    @source_uri.setter
    def source_uri(self, source_uri):
        """Sets the source_uri of this ActionSource.


        :param source_uri: The source_uri of this ActionSource.
        :type source_uri: str
        """
        if source_uri is None:
            raise ValueError("Invalid value for `source_uri`, must not be `None`")

        self._source_uri = source_uri

    @property
    def source_type(self):
        """Gets the source_type of this ActionSource.


        :return: The source_type of this ActionSource.
        :rtype: str
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this ActionSource.


        :param source_type: The source_type of this ActionSource.
        :type source_type: str
        """

        self._source_type = source_type

    @property
    def source_id(self):
        """Gets the source_id of this ActionSource.


        :return: The source_id of this ActionSource.
        :rtype: str
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this ActionSource.


        :param source_id: The source_id of this ActionSource.
        :type source_id: str
        """

        self._source_id = source_id
