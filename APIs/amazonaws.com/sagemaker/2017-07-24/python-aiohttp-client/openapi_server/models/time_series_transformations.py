# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeSeriesTransformations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filling: Dict=None, aggregation: Dict=None):
        """TimeSeriesTransformations - a model defined in OpenAPI

        :param filling: The filling of this TimeSeriesTransformations.
        :param aggregation: The aggregation of this TimeSeriesTransformations.
        """
        self.openapi_types = {
            'filling': Dict,
            'aggregation': Dict
        }

        self.attribute_map = {
            'filling': 'Filling',
            'aggregation': 'Aggregation'
        }

        self._filling = filling
        self._aggregation = aggregation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeSeriesTransformations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeSeriesTransformations of this TimeSeriesTransformations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filling(self):
        """Gets the filling of this TimeSeriesTransformations.


        :return: The filling of this TimeSeriesTransformations.
        :rtype: Dict
        """
        return self._filling

    @filling.setter
    def filling(self, filling):
        """Sets the filling of this TimeSeriesTransformations.


        :param filling: The filling of this TimeSeriesTransformations.
        :type filling: Dict
        """

        self._filling = filling

    @property
    def aggregation(self):
        """Gets the aggregation of this TimeSeriesTransformations.


        :return: The aggregation of this TimeSeriesTransformations.
        :rtype: Dict
        """
        return self._aggregation

    @aggregation.setter
    def aggregation(self, aggregation):
        """Sets the aggregation of this TimeSeriesTransformations.


        :param aggregation: The aggregation of this TimeSeriesTransformations.
        :type aggregation: Dict
        """

        self._aggregation = aggregation
