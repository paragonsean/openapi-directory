# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeStudioLifecycleConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, studio_lifecycle_config_name: str=None):
        """DescribeStudioLifecycleConfigRequest - a model defined in OpenAPI

        :param studio_lifecycle_config_name: The studio_lifecycle_config_name of this DescribeStudioLifecycleConfigRequest.
        """
        self.openapi_types = {
            'studio_lifecycle_config_name': str
        }

        self.attribute_map = {
            'studio_lifecycle_config_name': 'StudioLifecycleConfigName'
        }

        self._studio_lifecycle_config_name = studio_lifecycle_config_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStudioLifecycleConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStudioLifecycleConfigRequest of this DescribeStudioLifecycleConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def studio_lifecycle_config_name(self):
        """Gets the studio_lifecycle_config_name of this DescribeStudioLifecycleConfigRequest.


        :return: The studio_lifecycle_config_name of this DescribeStudioLifecycleConfigRequest.
        :rtype: str
        """
        return self._studio_lifecycle_config_name

    @studio_lifecycle_config_name.setter
    def studio_lifecycle_config_name(self, studio_lifecycle_config_name):
        """Sets the studio_lifecycle_config_name of this DescribeStudioLifecycleConfigRequest.


        :param studio_lifecycle_config_name: The studio_lifecycle_config_name of this DescribeStudioLifecycleConfigRequest.
        :type studio_lifecycle_config_name: str
        """
        if studio_lifecycle_config_name is None:
            raise ValueError("Invalid value for `studio_lifecycle_config_name`, must not be `None`")

        self._studio_lifecycle_config_name = studio_lifecycle_config_name
