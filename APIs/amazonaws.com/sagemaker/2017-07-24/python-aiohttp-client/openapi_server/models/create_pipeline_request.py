# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_pipeline_request_parallelism_configuration import CreatePipelineRequestParallelismConfiguration
from openapi_server.models.create_pipeline_request_pipeline_definition_s3_location import CreatePipelineRequestPipelineDefinitionS3Location
from openapi_server import util


class CreatePipelineRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_name: str=None, pipeline_display_name: str=None, pipeline_definition: str=None, pipeline_definition_s3_location: CreatePipelineRequestPipelineDefinitionS3Location=None, pipeline_description: str=None, client_request_token: str=None, role_arn: str=None, tags: List=None, parallelism_configuration: CreatePipelineRequestParallelismConfiguration=None):
        """CreatePipelineRequest - a model defined in OpenAPI

        :param pipeline_name: The pipeline_name of this CreatePipelineRequest.
        :param pipeline_display_name: The pipeline_display_name of this CreatePipelineRequest.
        :param pipeline_definition: The pipeline_definition of this CreatePipelineRequest.
        :param pipeline_definition_s3_location: The pipeline_definition_s3_location of this CreatePipelineRequest.
        :param pipeline_description: The pipeline_description of this CreatePipelineRequest.
        :param client_request_token: The client_request_token of this CreatePipelineRequest.
        :param role_arn: The role_arn of this CreatePipelineRequest.
        :param tags: The tags of this CreatePipelineRequest.
        :param parallelism_configuration: The parallelism_configuration of this CreatePipelineRequest.
        """
        self.openapi_types = {
            'pipeline_name': str,
            'pipeline_display_name': str,
            'pipeline_definition': str,
            'pipeline_definition_s3_location': CreatePipelineRequestPipelineDefinitionS3Location,
            'pipeline_description': str,
            'client_request_token': str,
            'role_arn': str,
            'tags': List,
            'parallelism_configuration': CreatePipelineRequestParallelismConfiguration
        }

        self.attribute_map = {
            'pipeline_name': 'PipelineName',
            'pipeline_display_name': 'PipelineDisplayName',
            'pipeline_definition': 'PipelineDefinition',
            'pipeline_definition_s3_location': 'PipelineDefinitionS3Location',
            'pipeline_description': 'PipelineDescription',
            'client_request_token': 'ClientRequestToken',
            'role_arn': 'RoleArn',
            'tags': 'Tags',
            'parallelism_configuration': 'ParallelismConfiguration'
        }

        self._pipeline_name = pipeline_name
        self._pipeline_display_name = pipeline_display_name
        self._pipeline_definition = pipeline_definition
        self._pipeline_definition_s3_location = pipeline_definition_s3_location
        self._pipeline_description = pipeline_description
        self._client_request_token = client_request_token
        self._role_arn = role_arn
        self._tags = tags
        self._parallelism_configuration = parallelism_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePipelineRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePipelineRequest of this CreatePipelineRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this CreatePipelineRequest.


        :return: The pipeline_name of this CreatePipelineRequest.
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this CreatePipelineRequest.


        :param pipeline_name: The pipeline_name of this CreatePipelineRequest.
        :type pipeline_name: str
        """
        if pipeline_name is None:
            raise ValueError("Invalid value for `pipeline_name`, must not be `None`")

        self._pipeline_name = pipeline_name

    @property
    def pipeline_display_name(self):
        """Gets the pipeline_display_name of this CreatePipelineRequest.


        :return: The pipeline_display_name of this CreatePipelineRequest.
        :rtype: str
        """
        return self._pipeline_display_name

    @pipeline_display_name.setter
    def pipeline_display_name(self, pipeline_display_name):
        """Sets the pipeline_display_name of this CreatePipelineRequest.


        :param pipeline_display_name: The pipeline_display_name of this CreatePipelineRequest.
        :type pipeline_display_name: str
        """

        self._pipeline_display_name = pipeline_display_name

    @property
    def pipeline_definition(self):
        """Gets the pipeline_definition of this CreatePipelineRequest.


        :return: The pipeline_definition of this CreatePipelineRequest.
        :rtype: str
        """
        return self._pipeline_definition

    @pipeline_definition.setter
    def pipeline_definition(self, pipeline_definition):
        """Sets the pipeline_definition of this CreatePipelineRequest.


        :param pipeline_definition: The pipeline_definition of this CreatePipelineRequest.
        :type pipeline_definition: str
        """

        self._pipeline_definition = pipeline_definition

    @property
    def pipeline_definition_s3_location(self):
        """Gets the pipeline_definition_s3_location of this CreatePipelineRequest.


        :return: The pipeline_definition_s3_location of this CreatePipelineRequest.
        :rtype: CreatePipelineRequestPipelineDefinitionS3Location
        """
        return self._pipeline_definition_s3_location

    @pipeline_definition_s3_location.setter
    def pipeline_definition_s3_location(self, pipeline_definition_s3_location):
        """Sets the pipeline_definition_s3_location of this CreatePipelineRequest.


        :param pipeline_definition_s3_location: The pipeline_definition_s3_location of this CreatePipelineRequest.
        :type pipeline_definition_s3_location: CreatePipelineRequestPipelineDefinitionS3Location
        """

        self._pipeline_definition_s3_location = pipeline_definition_s3_location

    @property
    def pipeline_description(self):
        """Gets the pipeline_description of this CreatePipelineRequest.


        :return: The pipeline_description of this CreatePipelineRequest.
        :rtype: str
        """
        return self._pipeline_description

    @pipeline_description.setter
    def pipeline_description(self, pipeline_description):
        """Sets the pipeline_description of this CreatePipelineRequest.


        :param pipeline_description: The pipeline_description of this CreatePipelineRequest.
        :type pipeline_description: str
        """

        self._pipeline_description = pipeline_description

    @property
    def client_request_token(self):
        """Gets the client_request_token of this CreatePipelineRequest.


        :return: The client_request_token of this CreatePipelineRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this CreatePipelineRequest.


        :param client_request_token: The client_request_token of this CreatePipelineRequest.
        :type client_request_token: str
        """
        if client_request_token is None:
            raise ValueError("Invalid value for `client_request_token`, must not be `None`")

        self._client_request_token = client_request_token

    @property
    def role_arn(self):
        """Gets the role_arn of this CreatePipelineRequest.


        :return: The role_arn of this CreatePipelineRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreatePipelineRequest.


        :param role_arn: The role_arn of this CreatePipelineRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this CreatePipelineRequest.


        :return: The tags of this CreatePipelineRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreatePipelineRequest.


        :param tags: The tags of this CreatePipelineRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def parallelism_configuration(self):
        """Gets the parallelism_configuration of this CreatePipelineRequest.


        :return: The parallelism_configuration of this CreatePipelineRequest.
        :rtype: CreatePipelineRequestParallelismConfiguration
        """
        return self._parallelism_configuration

    @parallelism_configuration.setter
    def parallelism_configuration(self, parallelism_configuration):
        """Sets the parallelism_configuration of this CreatePipelineRequest.


        :param parallelism_configuration: The parallelism_configuration of this CreatePipelineRequest.
        :type parallelism_configuration: CreatePipelineRequestParallelismConfiguration
        """

        self._parallelism_configuration = parallelism_configuration
