# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transform_job_status import TransformJobStatus
from openapi_server import util


class TransformJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transform_job_name: str=None, transform_job_arn: str=None, creation_time: datetime=None, transform_end_time: datetime=None, last_modified_time: datetime=None, transform_job_status: TransformJobStatus=None, failure_reason: str=None):
        """TransformJobSummary - a model defined in OpenAPI

        :param transform_job_name: The transform_job_name of this TransformJobSummary.
        :param transform_job_arn: The transform_job_arn of this TransformJobSummary.
        :param creation_time: The creation_time of this TransformJobSummary.
        :param transform_end_time: The transform_end_time of this TransformJobSummary.
        :param last_modified_time: The last_modified_time of this TransformJobSummary.
        :param transform_job_status: The transform_job_status of this TransformJobSummary.
        :param failure_reason: The failure_reason of this TransformJobSummary.
        """
        self.openapi_types = {
            'transform_job_name': str,
            'transform_job_arn': str,
            'creation_time': datetime,
            'transform_end_time': datetime,
            'last_modified_time': datetime,
            'transform_job_status': TransformJobStatus,
            'failure_reason': str
        }

        self.attribute_map = {
            'transform_job_name': 'TransformJobName',
            'transform_job_arn': 'TransformJobArn',
            'creation_time': 'CreationTime',
            'transform_end_time': 'TransformEndTime',
            'last_modified_time': 'LastModifiedTime',
            'transform_job_status': 'TransformJobStatus',
            'failure_reason': 'FailureReason'
        }

        self._transform_job_name = transform_job_name
        self._transform_job_arn = transform_job_arn
        self._creation_time = creation_time
        self._transform_end_time = transform_end_time
        self._last_modified_time = last_modified_time
        self._transform_job_status = transform_job_status
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransformJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransformJobSummary of this TransformJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transform_job_name(self):
        """Gets the transform_job_name of this TransformJobSummary.


        :return: The transform_job_name of this TransformJobSummary.
        :rtype: str
        """
        return self._transform_job_name

    @transform_job_name.setter
    def transform_job_name(self, transform_job_name):
        """Sets the transform_job_name of this TransformJobSummary.


        :param transform_job_name: The transform_job_name of this TransformJobSummary.
        :type transform_job_name: str
        """
        if transform_job_name is None:
            raise ValueError("Invalid value for `transform_job_name`, must not be `None`")

        self._transform_job_name = transform_job_name

    @property
    def transform_job_arn(self):
        """Gets the transform_job_arn of this TransformJobSummary.


        :return: The transform_job_arn of this TransformJobSummary.
        :rtype: str
        """
        return self._transform_job_arn

    @transform_job_arn.setter
    def transform_job_arn(self, transform_job_arn):
        """Sets the transform_job_arn of this TransformJobSummary.


        :param transform_job_arn: The transform_job_arn of this TransformJobSummary.
        :type transform_job_arn: str
        """
        if transform_job_arn is None:
            raise ValueError("Invalid value for `transform_job_arn`, must not be `None`")

        self._transform_job_arn = transform_job_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this TransformJobSummary.


        :return: The creation_time of this TransformJobSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this TransformJobSummary.


        :param creation_time: The creation_time of this TransformJobSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def transform_end_time(self):
        """Gets the transform_end_time of this TransformJobSummary.


        :return: The transform_end_time of this TransformJobSummary.
        :rtype: datetime
        """
        return self._transform_end_time

    @transform_end_time.setter
    def transform_end_time(self, transform_end_time):
        """Sets the transform_end_time of this TransformJobSummary.


        :param transform_end_time: The transform_end_time of this TransformJobSummary.
        :type transform_end_time: datetime
        """

        self._transform_end_time = transform_end_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this TransformJobSummary.


        :return: The last_modified_time of this TransformJobSummary.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this TransformJobSummary.


        :param last_modified_time: The last_modified_time of this TransformJobSummary.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def transform_job_status(self):
        """Gets the transform_job_status of this TransformJobSummary.


        :return: The transform_job_status of this TransformJobSummary.
        :rtype: TransformJobStatus
        """
        return self._transform_job_status

    @transform_job_status.setter
    def transform_job_status(self, transform_job_status):
        """Sets the transform_job_status of this TransformJobSummary.


        :param transform_job_status: The transform_job_status of this TransformJobSummary.
        :type transform_job_status: TransformJobStatus
        """
        if transform_job_status is None:
            raise ValueError("Invalid value for `transform_job_status`, must not be `None`")

        self._transform_job_status = transform_job_status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this TransformJobSummary.


        :return: The failure_reason of this TransformJobSummary.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this TransformJobSummary.


        :param failure_reason: The failure_reason of this TransformJobSummary.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason
