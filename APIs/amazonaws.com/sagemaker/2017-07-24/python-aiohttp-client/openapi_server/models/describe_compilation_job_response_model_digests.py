# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeCompilationJobResponseModelDigests(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_digest: str=None):
        """DescribeCompilationJobResponseModelDigests - a model defined in OpenAPI

        :param artifact_digest: The artifact_digest of this DescribeCompilationJobResponseModelDigests.
        """
        self.openapi_types = {
            'artifact_digest': str
        }

        self.attribute_map = {
            'artifact_digest': 'ArtifactDigest'
        }

        self._artifact_digest = artifact_digest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCompilationJobResponseModelDigests':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCompilationJobResponse_ModelDigests of this DescribeCompilationJobResponseModelDigests.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_digest(self):
        """Gets the artifact_digest of this DescribeCompilationJobResponseModelDigests.


        :return: The artifact_digest of this DescribeCompilationJobResponseModelDigests.
        :rtype: str
        """
        return self._artifact_digest

    @artifact_digest.setter
    def artifact_digest(self, artifact_digest):
        """Sets the artifact_digest of this DescribeCompilationJobResponseModelDigests.


        :param artifact_digest: The artifact_digest of this DescribeCompilationJobResponseModelDigests.
        :type artifact_digest: str
        """

        self._artifact_digest = artifact_digest
