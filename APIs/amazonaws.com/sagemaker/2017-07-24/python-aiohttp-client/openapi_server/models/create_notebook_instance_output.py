# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateNotebookInstanceOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebook_instance_arn: str=None):
        """CreateNotebookInstanceOutput - a model defined in OpenAPI

        :param notebook_instance_arn: The notebook_instance_arn of this CreateNotebookInstanceOutput.
        """
        self.openapi_types = {
            'notebook_instance_arn': str
        }

        self.attribute_map = {
            'notebook_instance_arn': 'NotebookInstanceArn'
        }

        self._notebook_instance_arn = notebook_instance_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNotebookInstanceOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateNotebookInstanceOutput of this CreateNotebookInstanceOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebook_instance_arn(self):
        """Gets the notebook_instance_arn of this CreateNotebookInstanceOutput.


        :return: The notebook_instance_arn of this CreateNotebookInstanceOutput.
        :rtype: str
        """
        return self._notebook_instance_arn

    @notebook_instance_arn.setter
    def notebook_instance_arn(self, notebook_instance_arn):
        """Sets the notebook_instance_arn of this CreateNotebookInstanceOutput.


        :param notebook_instance_arn: The notebook_instance_arn of this CreateNotebookInstanceOutput.
        :type notebook_instance_arn: str
        """

        self._notebook_instance_arn = notebook_instance_arn
