# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_workforce_request_cognito_config import CreateWorkforceRequestCognitoConfig
from openapi_server.models.create_workforce_request_oidc_config import CreateWorkforceRequestOidcConfig
from openapi_server.models.create_workforce_request_workforce_vpc_config import CreateWorkforceRequestWorkforceVpcConfig
from openapi_server.models.source_ip_config import SourceIpConfig
from openapi_server import util


class CreateWorkforceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cognito_config: CreateWorkforceRequestCognitoConfig=None, oidc_config: CreateWorkforceRequestOidcConfig=None, source_ip_config: SourceIpConfig=None, workforce_name: str=None, tags: List=None, workforce_vpc_config: CreateWorkforceRequestWorkforceVpcConfig=None):
        """CreateWorkforceRequest - a model defined in OpenAPI

        :param cognito_config: The cognito_config of this CreateWorkforceRequest.
        :param oidc_config: The oidc_config of this CreateWorkforceRequest.
        :param source_ip_config: The source_ip_config of this CreateWorkforceRequest.
        :param workforce_name: The workforce_name of this CreateWorkforceRequest.
        :param tags: The tags of this CreateWorkforceRequest.
        :param workforce_vpc_config: The workforce_vpc_config of this CreateWorkforceRequest.
        """
        self.openapi_types = {
            'cognito_config': CreateWorkforceRequestCognitoConfig,
            'oidc_config': CreateWorkforceRequestOidcConfig,
            'source_ip_config': SourceIpConfig,
            'workforce_name': str,
            'tags': List,
            'workforce_vpc_config': CreateWorkforceRequestWorkforceVpcConfig
        }

        self.attribute_map = {
            'cognito_config': 'CognitoConfig',
            'oidc_config': 'OidcConfig',
            'source_ip_config': 'SourceIpConfig',
            'workforce_name': 'WorkforceName',
            'tags': 'Tags',
            'workforce_vpc_config': 'WorkforceVpcConfig'
        }

        self._cognito_config = cognito_config
        self._oidc_config = oidc_config
        self._source_ip_config = source_ip_config
        self._workforce_name = workforce_name
        self._tags = tags
        self._workforce_vpc_config = workforce_vpc_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWorkforceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWorkforceRequest of this CreateWorkforceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cognito_config(self):
        """Gets the cognito_config of this CreateWorkforceRequest.


        :return: The cognito_config of this CreateWorkforceRequest.
        :rtype: CreateWorkforceRequestCognitoConfig
        """
        return self._cognito_config

    @cognito_config.setter
    def cognito_config(self, cognito_config):
        """Sets the cognito_config of this CreateWorkforceRequest.


        :param cognito_config: The cognito_config of this CreateWorkforceRequest.
        :type cognito_config: CreateWorkforceRequestCognitoConfig
        """

        self._cognito_config = cognito_config

    @property
    def oidc_config(self):
        """Gets the oidc_config of this CreateWorkforceRequest.


        :return: The oidc_config of this CreateWorkforceRequest.
        :rtype: CreateWorkforceRequestOidcConfig
        """
        return self._oidc_config

    @oidc_config.setter
    def oidc_config(self, oidc_config):
        """Sets the oidc_config of this CreateWorkforceRequest.


        :param oidc_config: The oidc_config of this CreateWorkforceRequest.
        :type oidc_config: CreateWorkforceRequestOidcConfig
        """

        self._oidc_config = oidc_config

    @property
    def source_ip_config(self):
        """Gets the source_ip_config of this CreateWorkforceRequest.


        :return: The source_ip_config of this CreateWorkforceRequest.
        :rtype: SourceIpConfig
        """
        return self._source_ip_config

    @source_ip_config.setter
    def source_ip_config(self, source_ip_config):
        """Sets the source_ip_config of this CreateWorkforceRequest.


        :param source_ip_config: The source_ip_config of this CreateWorkforceRequest.
        :type source_ip_config: SourceIpConfig
        """

        self._source_ip_config = source_ip_config

    @property
    def workforce_name(self):
        """Gets the workforce_name of this CreateWorkforceRequest.


        :return: The workforce_name of this CreateWorkforceRequest.
        :rtype: str
        """
        return self._workforce_name

    @workforce_name.setter
    def workforce_name(self, workforce_name):
        """Sets the workforce_name of this CreateWorkforceRequest.


        :param workforce_name: The workforce_name of this CreateWorkforceRequest.
        :type workforce_name: str
        """
        if workforce_name is None:
            raise ValueError("Invalid value for `workforce_name`, must not be `None`")

        self._workforce_name = workforce_name

    @property
    def tags(self):
        """Gets the tags of this CreateWorkforceRequest.


        :return: The tags of this CreateWorkforceRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateWorkforceRequest.


        :param tags: The tags of this CreateWorkforceRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def workforce_vpc_config(self):
        """Gets the workforce_vpc_config of this CreateWorkforceRequest.


        :return: The workforce_vpc_config of this CreateWorkforceRequest.
        :rtype: CreateWorkforceRequestWorkforceVpcConfig
        """
        return self._workforce_vpc_config

    @workforce_vpc_config.setter
    def workforce_vpc_config(self, workforce_vpc_config):
        """Sets the workforce_vpc_config of this CreateWorkforceRequest.


        :param workforce_vpc_config: The workforce_vpc_config of this CreateWorkforceRequest.
        :type workforce_vpc_config: CreateWorkforceRequestWorkforceVpcConfig
        """

        self._workforce_vpc_config = workforce_vpc_config
