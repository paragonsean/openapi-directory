# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateModelBiasJobDefinitionRequestModelBiasAppSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_uri: str=None, config_uri: str=None, environment: Dict=None):
        """CreateModelBiasJobDefinitionRequestModelBiasAppSpecification - a model defined in OpenAPI

        :param image_uri: The image_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :param config_uri: The config_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :param environment: The environment of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        """
        self.openapi_types = {
            'image_uri': str,
            'config_uri': str,
            'environment': Dict
        }

        self.attribute_map = {
            'image_uri': 'ImageUri',
            'config_uri': 'ConfigUri',
            'environment': 'Environment'
        }

        self._image_uri = image_uri
        self._config_uri = config_uri
        self._environment = environment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelBiasJobDefinitionRequestModelBiasAppSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelBiasJobDefinitionRequest_ModelBiasAppSpecification of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_uri(self):
        """Gets the image_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.


        :return: The image_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :rtype: str
        """
        return self._image_uri

    @image_uri.setter
    def image_uri(self, image_uri):
        """Sets the image_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.


        :param image_uri: The image_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :type image_uri: str
        """
        if image_uri is None:
            raise ValueError("Invalid value for `image_uri`, must not be `None`")

        self._image_uri = image_uri

    @property
    def config_uri(self):
        """Gets the config_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.


        :return: The config_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :rtype: str
        """
        return self._config_uri

    @config_uri.setter
    def config_uri(self, config_uri):
        """Sets the config_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.


        :param config_uri: The config_uri of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :type config_uri: str
        """
        if config_uri is None:
            raise ValueError("Invalid value for `config_uri`, must not be `None`")

        self._config_uri = config_uri

    @property
    def environment(self):
        """Gets the environment of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.


        :return: The environment of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :rtype: Dict
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.


        :param environment: The environment of this CreateModelBiasJobDefinitionRequestModelBiasAppSpecification.
        :type environment: Dict
        """

        self._environment = environment
