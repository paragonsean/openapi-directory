# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_workteam_response_workteam import DescribeWorkteamResponseWorkteam
from openapi_server import util


class DescribeWorkteamResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam: DescribeWorkteamResponseWorkteam=None):
        """DescribeWorkteamResponse - a model defined in OpenAPI

        :param workteam: The workteam of this DescribeWorkteamResponse.
        """
        self.openapi_types = {
            'workteam': DescribeWorkteamResponseWorkteam
        }

        self.attribute_map = {
            'workteam': 'Workteam'
        }

        self._workteam = workteam

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkteamResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkteamResponse of this DescribeWorkteamResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam(self):
        """Gets the workteam of this DescribeWorkteamResponse.


        :return: The workteam of this DescribeWorkteamResponse.
        :rtype: DescribeWorkteamResponseWorkteam
        """
        return self._workteam

    @workteam.setter
    def workteam(self, workteam):
        """Sets the workteam of this DescribeWorkteamResponse.


        :param workteam: The workteam of this DescribeWorkteamResponse.
        :type workteam: DescribeWorkteamResponseWorkteam
        """
        if workteam is None:
            raise ValueError("Invalid value for `workteam`, must not be `None`")

        self._workteam = workteam
