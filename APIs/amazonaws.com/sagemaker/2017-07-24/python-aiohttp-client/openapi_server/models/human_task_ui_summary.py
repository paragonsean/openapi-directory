# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HumanTaskUiSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, human_task_ui_name: str=None, human_task_ui_arn: str=None, creation_time: datetime=None):
        """HumanTaskUiSummary - a model defined in OpenAPI

        :param human_task_ui_name: The human_task_ui_name of this HumanTaskUiSummary.
        :param human_task_ui_arn: The human_task_ui_arn of this HumanTaskUiSummary.
        :param creation_time: The creation_time of this HumanTaskUiSummary.
        """
        self.openapi_types = {
            'human_task_ui_name': str,
            'human_task_ui_arn': str,
            'creation_time': datetime
        }

        self.attribute_map = {
            'human_task_ui_name': 'HumanTaskUiName',
            'human_task_ui_arn': 'HumanTaskUiArn',
            'creation_time': 'CreationTime'
        }

        self._human_task_ui_name = human_task_ui_name
        self._human_task_ui_arn = human_task_ui_arn
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HumanTaskUiSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HumanTaskUiSummary of this HumanTaskUiSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def human_task_ui_name(self):
        """Gets the human_task_ui_name of this HumanTaskUiSummary.


        :return: The human_task_ui_name of this HumanTaskUiSummary.
        :rtype: str
        """
        return self._human_task_ui_name

    @human_task_ui_name.setter
    def human_task_ui_name(self, human_task_ui_name):
        """Sets the human_task_ui_name of this HumanTaskUiSummary.


        :param human_task_ui_name: The human_task_ui_name of this HumanTaskUiSummary.
        :type human_task_ui_name: str
        """
        if human_task_ui_name is None:
            raise ValueError("Invalid value for `human_task_ui_name`, must not be `None`")

        self._human_task_ui_name = human_task_ui_name

    @property
    def human_task_ui_arn(self):
        """Gets the human_task_ui_arn of this HumanTaskUiSummary.


        :return: The human_task_ui_arn of this HumanTaskUiSummary.
        :rtype: str
        """
        return self._human_task_ui_arn

    @human_task_ui_arn.setter
    def human_task_ui_arn(self, human_task_ui_arn):
        """Sets the human_task_ui_arn of this HumanTaskUiSummary.


        :param human_task_ui_arn: The human_task_ui_arn of this HumanTaskUiSummary.
        :type human_task_ui_arn: str
        """
        if human_task_ui_arn is None:
            raise ValueError("Invalid value for `human_task_ui_arn`, must not be `None`")

        self._human_task_ui_arn = human_task_ui_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this HumanTaskUiSummary.


        :return: The creation_time of this HumanTaskUiSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this HumanTaskUiSummary.


        :param creation_time: The creation_time of this HumanTaskUiSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time
