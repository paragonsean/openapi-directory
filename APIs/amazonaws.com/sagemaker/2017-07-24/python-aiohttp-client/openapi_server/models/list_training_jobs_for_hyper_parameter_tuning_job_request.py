# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sort_order import SortOrder
from openapi_server.models.training_job_sort_by_options import TrainingJobSortByOptions
from openapi_server.models.training_job_status import TrainingJobStatus
from openapi_server import util


class ListTrainingJobsForHyperParameterTuningJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hyper_parameter_tuning_job_name: str=None, next_token: str=None, max_results: int=None, status_equals: TrainingJobStatus=None, sort_by: TrainingJobSortByOptions=None, sort_order: SortOrder=None):
        """ListTrainingJobsForHyperParameterTuningJobRequest - a model defined in OpenAPI

        :param hyper_parameter_tuning_job_name: The hyper_parameter_tuning_job_name of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :param next_token: The next_token of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :param max_results: The max_results of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :param status_equals: The status_equals of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :param sort_by: The sort_by of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :param sort_order: The sort_order of this ListTrainingJobsForHyperParameterTuningJobRequest.
        """
        self.openapi_types = {
            'hyper_parameter_tuning_job_name': str,
            'next_token': str,
            'max_results': int,
            'status_equals': TrainingJobStatus,
            'sort_by': TrainingJobSortByOptions,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'hyper_parameter_tuning_job_name': 'HyperParameterTuningJobName',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'status_equals': 'StatusEquals',
            'sort_by': 'SortBy',
            'sort_order': 'SortOrder'
        }

        self._hyper_parameter_tuning_job_name = hyper_parameter_tuning_job_name
        self._next_token = next_token
        self._max_results = max_results
        self._status_equals = status_equals
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTrainingJobsForHyperParameterTuningJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTrainingJobsForHyperParameterTuningJobRequest of this ListTrainingJobsForHyperParameterTuningJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hyper_parameter_tuning_job_name(self):
        """Gets the hyper_parameter_tuning_job_name of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :return: The hyper_parameter_tuning_job_name of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :rtype: str
        """
        return self._hyper_parameter_tuning_job_name

    @hyper_parameter_tuning_job_name.setter
    def hyper_parameter_tuning_job_name(self, hyper_parameter_tuning_job_name):
        """Sets the hyper_parameter_tuning_job_name of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :param hyper_parameter_tuning_job_name: The hyper_parameter_tuning_job_name of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :type hyper_parameter_tuning_job_name: str
        """
        if hyper_parameter_tuning_job_name is None:
            raise ValueError("Invalid value for `hyper_parameter_tuning_job_name`, must not be `None`")

        self._hyper_parameter_tuning_job_name = hyper_parameter_tuning_job_name

    @property
    def next_token(self):
        """Gets the next_token of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :return: The next_token of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :param next_token: The next_token of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :return: The max_results of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :param max_results: The max_results of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def status_equals(self):
        """Gets the status_equals of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :return: The status_equals of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :rtype: TrainingJobStatus
        """
        return self._status_equals

    @status_equals.setter
    def status_equals(self, status_equals):
        """Sets the status_equals of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :param status_equals: The status_equals of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :type status_equals: TrainingJobStatus
        """

        self._status_equals = status_equals

    @property
    def sort_by(self):
        """Gets the sort_by of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :return: The sort_by of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :rtype: TrainingJobSortByOptions
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :param sort_by: The sort_by of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :type sort_by: TrainingJobSortByOptions
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :return: The sort_order of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListTrainingJobsForHyperParameterTuningJobRequest.


        :param sort_order: The sort_order of this ListTrainingJobsForHyperParameterTuningJobRequest.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
