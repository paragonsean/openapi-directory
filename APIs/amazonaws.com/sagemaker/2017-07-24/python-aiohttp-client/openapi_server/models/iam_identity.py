# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IamIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, principal_id: str=None, source_identity: str=None):
        """IamIdentity - a model defined in OpenAPI

        :param arn: The arn of this IamIdentity.
        :param principal_id: The principal_id of this IamIdentity.
        :param source_identity: The source_identity of this IamIdentity.
        """
        self.openapi_types = {
            'arn': str,
            'principal_id': str,
            'source_identity': str
        }

        self.attribute_map = {
            'arn': 'Arn',
            'principal_id': 'PrincipalId',
            'source_identity': 'SourceIdentity'
        }

        self._arn = arn
        self._principal_id = principal_id
        self._source_identity = source_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IamIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IamIdentity of this IamIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this IamIdentity.


        :return: The arn of this IamIdentity.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this IamIdentity.


        :param arn: The arn of this IamIdentity.
        :type arn: str
        """

        self._arn = arn

    @property
    def principal_id(self):
        """Gets the principal_id of this IamIdentity.


        :return: The principal_id of this IamIdentity.
        :rtype: str
        """
        return self._principal_id

    @principal_id.setter
    def principal_id(self, principal_id):
        """Sets the principal_id of this IamIdentity.


        :param principal_id: The principal_id of this IamIdentity.
        :type principal_id: str
        """

        self._principal_id = principal_id

    @property
    def source_identity(self):
        """Gets the source_identity of this IamIdentity.


        :return: The source_identity of this IamIdentity.
        :rtype: str
        """
        return self._source_identity

    @source_identity.setter
    def source_identity(self, source_identity):
        """Sets the source_identity of this IamIdentity.


        :param source_identity: The source_identity of this IamIdentity.
        :type source_identity: str
        """

        self._source_identity = source_identity
