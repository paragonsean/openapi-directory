# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.monitoring_alert_status import MonitoringAlertStatus
from openapi_server import util


class MonitoringAlertHistorySummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitoring_schedule_name: str=None, monitoring_alert_name: str=None, creation_time: datetime=None, alert_status: MonitoringAlertStatus=None):
        """MonitoringAlertHistorySummary - a model defined in OpenAPI

        :param monitoring_schedule_name: The monitoring_schedule_name of this MonitoringAlertHistorySummary.
        :param monitoring_alert_name: The monitoring_alert_name of this MonitoringAlertHistorySummary.
        :param creation_time: The creation_time of this MonitoringAlertHistorySummary.
        :param alert_status: The alert_status of this MonitoringAlertHistorySummary.
        """
        self.openapi_types = {
            'monitoring_schedule_name': str,
            'monitoring_alert_name': str,
            'creation_time': datetime,
            'alert_status': MonitoringAlertStatus
        }

        self.attribute_map = {
            'monitoring_schedule_name': 'MonitoringScheduleName',
            'monitoring_alert_name': 'MonitoringAlertName',
            'creation_time': 'CreationTime',
            'alert_status': 'AlertStatus'
        }

        self._monitoring_schedule_name = monitoring_schedule_name
        self._monitoring_alert_name = monitoring_alert_name
        self._creation_time = creation_time
        self._alert_status = alert_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringAlertHistorySummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringAlertHistorySummary of this MonitoringAlertHistorySummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_schedule_name(self):
        """Gets the monitoring_schedule_name of this MonitoringAlertHistorySummary.


        :return: The monitoring_schedule_name of this MonitoringAlertHistorySummary.
        :rtype: str
        """
        return self._monitoring_schedule_name

    @monitoring_schedule_name.setter
    def monitoring_schedule_name(self, monitoring_schedule_name):
        """Sets the monitoring_schedule_name of this MonitoringAlertHistorySummary.


        :param monitoring_schedule_name: The monitoring_schedule_name of this MonitoringAlertHistorySummary.
        :type monitoring_schedule_name: str
        """
        if monitoring_schedule_name is None:
            raise ValueError("Invalid value for `monitoring_schedule_name`, must not be `None`")

        self._monitoring_schedule_name = monitoring_schedule_name

    @property
    def monitoring_alert_name(self):
        """Gets the monitoring_alert_name of this MonitoringAlertHistorySummary.


        :return: The monitoring_alert_name of this MonitoringAlertHistorySummary.
        :rtype: str
        """
        return self._monitoring_alert_name

    @monitoring_alert_name.setter
    def monitoring_alert_name(self, monitoring_alert_name):
        """Sets the monitoring_alert_name of this MonitoringAlertHistorySummary.


        :param monitoring_alert_name: The monitoring_alert_name of this MonitoringAlertHistorySummary.
        :type monitoring_alert_name: str
        """
        if monitoring_alert_name is None:
            raise ValueError("Invalid value for `monitoring_alert_name`, must not be `None`")

        self._monitoring_alert_name = monitoring_alert_name

    @property
    def creation_time(self):
        """Gets the creation_time of this MonitoringAlertHistorySummary.


        :return: The creation_time of this MonitoringAlertHistorySummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this MonitoringAlertHistorySummary.


        :param creation_time: The creation_time of this MonitoringAlertHistorySummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def alert_status(self):
        """Gets the alert_status of this MonitoringAlertHistorySummary.


        :return: The alert_status of this MonitoringAlertHistorySummary.
        :rtype: MonitoringAlertStatus
        """
        return self._alert_status

    @alert_status.setter
    def alert_status(self, alert_status):
        """Sets the alert_status of this MonitoringAlertHistorySummary.


        :param alert_status: The alert_status of this MonitoringAlertHistorySummary.
        :type alert_status: MonitoringAlertStatus
        """
        if alert_status is None:
            raise ValueError("Invalid value for `alert_status`, must not be `None`")

        self._alert_status = alert_status
