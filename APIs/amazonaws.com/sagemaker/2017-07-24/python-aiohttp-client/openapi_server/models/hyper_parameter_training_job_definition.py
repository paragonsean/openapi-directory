# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.checkpoint_config import CheckpointConfig
from openapi_server.models.create_training_job_request_retry_strategy import CreateTrainingJobRequestRetryStrategy
from openapi_server.models.hyper_parameter_training_job_definition_algorithm_specification import HyperParameterTrainingJobDefinitionAlgorithmSpecification
from openapi_server.models.hyper_parameter_training_job_definition_hyper_parameter_tuning_resource_config import HyperParameterTrainingJobDefinitionHyperParameterTuningResourceConfig
from openapi_server.models.hyper_parameter_training_job_definition_output_data_config import HyperParameterTrainingJobDefinitionOutputDataConfig
from openapi_server.models.hyper_parameter_training_job_definition_resource_config import HyperParameterTrainingJobDefinitionResourceConfig
from openapi_server.models.hyper_parameter_training_job_definition_stopping_condition import HyperParameterTrainingJobDefinitionStoppingCondition
from openapi_server.models.hyper_parameter_training_job_definition_vpc_config import HyperParameterTrainingJobDefinitionVpcConfig
from openapi_server.models.hyper_parameter_tuning_job_objective import HyperParameterTuningJobObjective
from openapi_server.models.parameter_ranges import ParameterRanges
from openapi_server import util


class HyperParameterTrainingJobDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, definition_name: str=None, tuning_objective: HyperParameterTuningJobObjective=None, hyper_parameter_ranges: ParameterRanges=None, static_hyper_parameters: Dict=None, algorithm_specification: HyperParameterTrainingJobDefinitionAlgorithmSpecification=None, role_arn: str=None, input_data_config: List=None, vpc_config: HyperParameterTrainingJobDefinitionVpcConfig=None, output_data_config: HyperParameterTrainingJobDefinitionOutputDataConfig=None, resource_config: HyperParameterTrainingJobDefinitionResourceConfig=None, stopping_condition: HyperParameterTrainingJobDefinitionStoppingCondition=None, enable_network_isolation: bool=None, enable_inter_container_traffic_encryption: bool=None, enable_managed_spot_training: bool=None, checkpoint_config: CheckpointConfig=None, retry_strategy: CreateTrainingJobRequestRetryStrategy=None, hyper_parameter_tuning_resource_config: HyperParameterTrainingJobDefinitionHyperParameterTuningResourceConfig=None, environment: Dict=None):
        """HyperParameterTrainingJobDefinition - a model defined in OpenAPI

        :param definition_name: The definition_name of this HyperParameterTrainingJobDefinition.
        :param tuning_objective: The tuning_objective of this HyperParameterTrainingJobDefinition.
        :param hyper_parameter_ranges: The hyper_parameter_ranges of this HyperParameterTrainingJobDefinition.
        :param static_hyper_parameters: The static_hyper_parameters of this HyperParameterTrainingJobDefinition.
        :param algorithm_specification: The algorithm_specification of this HyperParameterTrainingJobDefinition.
        :param role_arn: The role_arn of this HyperParameterTrainingJobDefinition.
        :param input_data_config: The input_data_config of this HyperParameterTrainingJobDefinition.
        :param vpc_config: The vpc_config of this HyperParameterTrainingJobDefinition.
        :param output_data_config: The output_data_config of this HyperParameterTrainingJobDefinition.
        :param resource_config: The resource_config of this HyperParameterTrainingJobDefinition.
        :param stopping_condition: The stopping_condition of this HyperParameterTrainingJobDefinition.
        :param enable_network_isolation: The enable_network_isolation of this HyperParameterTrainingJobDefinition.
        :param enable_inter_container_traffic_encryption: The enable_inter_container_traffic_encryption of this HyperParameterTrainingJobDefinition.
        :param enable_managed_spot_training: The enable_managed_spot_training of this HyperParameterTrainingJobDefinition.
        :param checkpoint_config: The checkpoint_config of this HyperParameterTrainingJobDefinition.
        :param retry_strategy: The retry_strategy of this HyperParameterTrainingJobDefinition.
        :param hyper_parameter_tuning_resource_config: The hyper_parameter_tuning_resource_config of this HyperParameterTrainingJobDefinition.
        :param environment: The environment of this HyperParameterTrainingJobDefinition.
        """
        self.openapi_types = {
            'definition_name': str,
            'tuning_objective': HyperParameterTuningJobObjective,
            'hyper_parameter_ranges': ParameterRanges,
            'static_hyper_parameters': Dict,
            'algorithm_specification': HyperParameterTrainingJobDefinitionAlgorithmSpecification,
            'role_arn': str,
            'input_data_config': List,
            'vpc_config': HyperParameterTrainingJobDefinitionVpcConfig,
            'output_data_config': HyperParameterTrainingJobDefinitionOutputDataConfig,
            'resource_config': HyperParameterTrainingJobDefinitionResourceConfig,
            'stopping_condition': HyperParameterTrainingJobDefinitionStoppingCondition,
            'enable_network_isolation': bool,
            'enable_inter_container_traffic_encryption': bool,
            'enable_managed_spot_training': bool,
            'checkpoint_config': CheckpointConfig,
            'retry_strategy': CreateTrainingJobRequestRetryStrategy,
            'hyper_parameter_tuning_resource_config': HyperParameterTrainingJobDefinitionHyperParameterTuningResourceConfig,
            'environment': Dict
        }

        self.attribute_map = {
            'definition_name': 'DefinitionName',
            'tuning_objective': 'TuningObjective',
            'hyper_parameter_ranges': 'HyperParameterRanges',
            'static_hyper_parameters': 'StaticHyperParameters',
            'algorithm_specification': 'AlgorithmSpecification',
            'role_arn': 'RoleArn',
            'input_data_config': 'InputDataConfig',
            'vpc_config': 'VpcConfig',
            'output_data_config': 'OutputDataConfig',
            'resource_config': 'ResourceConfig',
            'stopping_condition': 'StoppingCondition',
            'enable_network_isolation': 'EnableNetworkIsolation',
            'enable_inter_container_traffic_encryption': 'EnableInterContainerTrafficEncryption',
            'enable_managed_spot_training': 'EnableManagedSpotTraining',
            'checkpoint_config': 'CheckpointConfig',
            'retry_strategy': 'RetryStrategy',
            'hyper_parameter_tuning_resource_config': 'HyperParameterTuningResourceConfig',
            'environment': 'Environment'
        }

        self._definition_name = definition_name
        self._tuning_objective = tuning_objective
        self._hyper_parameter_ranges = hyper_parameter_ranges
        self._static_hyper_parameters = static_hyper_parameters
        self._algorithm_specification = algorithm_specification
        self._role_arn = role_arn
        self._input_data_config = input_data_config
        self._vpc_config = vpc_config
        self._output_data_config = output_data_config
        self._resource_config = resource_config
        self._stopping_condition = stopping_condition
        self._enable_network_isolation = enable_network_isolation
        self._enable_inter_container_traffic_encryption = enable_inter_container_traffic_encryption
        self._enable_managed_spot_training = enable_managed_spot_training
        self._checkpoint_config = checkpoint_config
        self._retry_strategy = retry_strategy
        self._hyper_parameter_tuning_resource_config = hyper_parameter_tuning_resource_config
        self._environment = environment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperParameterTrainingJobDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperParameterTrainingJobDefinition of this HyperParameterTrainingJobDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def definition_name(self):
        """Gets the definition_name of this HyperParameterTrainingJobDefinition.


        :return: The definition_name of this HyperParameterTrainingJobDefinition.
        :rtype: str
        """
        return self._definition_name

    @definition_name.setter
    def definition_name(self, definition_name):
        """Sets the definition_name of this HyperParameterTrainingJobDefinition.


        :param definition_name: The definition_name of this HyperParameterTrainingJobDefinition.
        :type definition_name: str
        """

        self._definition_name = definition_name

    @property
    def tuning_objective(self):
        """Gets the tuning_objective of this HyperParameterTrainingJobDefinition.


        :return: The tuning_objective of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTuningJobObjective
        """
        return self._tuning_objective

    @tuning_objective.setter
    def tuning_objective(self, tuning_objective):
        """Sets the tuning_objective of this HyperParameterTrainingJobDefinition.


        :param tuning_objective: The tuning_objective of this HyperParameterTrainingJobDefinition.
        :type tuning_objective: HyperParameterTuningJobObjective
        """

        self._tuning_objective = tuning_objective

    @property
    def hyper_parameter_ranges(self):
        """Gets the hyper_parameter_ranges of this HyperParameterTrainingJobDefinition.


        :return: The hyper_parameter_ranges of this HyperParameterTrainingJobDefinition.
        :rtype: ParameterRanges
        """
        return self._hyper_parameter_ranges

    @hyper_parameter_ranges.setter
    def hyper_parameter_ranges(self, hyper_parameter_ranges):
        """Sets the hyper_parameter_ranges of this HyperParameterTrainingJobDefinition.


        :param hyper_parameter_ranges: The hyper_parameter_ranges of this HyperParameterTrainingJobDefinition.
        :type hyper_parameter_ranges: ParameterRanges
        """

        self._hyper_parameter_ranges = hyper_parameter_ranges

    @property
    def static_hyper_parameters(self):
        """Gets the static_hyper_parameters of this HyperParameterTrainingJobDefinition.


        :return: The static_hyper_parameters of this HyperParameterTrainingJobDefinition.
        :rtype: Dict
        """
        return self._static_hyper_parameters

    @static_hyper_parameters.setter
    def static_hyper_parameters(self, static_hyper_parameters):
        """Sets the static_hyper_parameters of this HyperParameterTrainingJobDefinition.


        :param static_hyper_parameters: The static_hyper_parameters of this HyperParameterTrainingJobDefinition.
        :type static_hyper_parameters: Dict
        """

        self._static_hyper_parameters = static_hyper_parameters

    @property
    def algorithm_specification(self):
        """Gets the algorithm_specification of this HyperParameterTrainingJobDefinition.


        :return: The algorithm_specification of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTrainingJobDefinitionAlgorithmSpecification
        """
        return self._algorithm_specification

    @algorithm_specification.setter
    def algorithm_specification(self, algorithm_specification):
        """Sets the algorithm_specification of this HyperParameterTrainingJobDefinition.


        :param algorithm_specification: The algorithm_specification of this HyperParameterTrainingJobDefinition.
        :type algorithm_specification: HyperParameterTrainingJobDefinitionAlgorithmSpecification
        """
        if algorithm_specification is None:
            raise ValueError("Invalid value for `algorithm_specification`, must not be `None`")

        self._algorithm_specification = algorithm_specification

    @property
    def role_arn(self):
        """Gets the role_arn of this HyperParameterTrainingJobDefinition.


        :return: The role_arn of this HyperParameterTrainingJobDefinition.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this HyperParameterTrainingJobDefinition.


        :param role_arn: The role_arn of this HyperParameterTrainingJobDefinition.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def input_data_config(self):
        """Gets the input_data_config of this HyperParameterTrainingJobDefinition.


        :return: The input_data_config of this HyperParameterTrainingJobDefinition.
        :rtype: List
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this HyperParameterTrainingJobDefinition.


        :param input_data_config: The input_data_config of this HyperParameterTrainingJobDefinition.
        :type input_data_config: List
        """

        self._input_data_config = input_data_config

    @property
    def vpc_config(self):
        """Gets the vpc_config of this HyperParameterTrainingJobDefinition.


        :return: The vpc_config of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTrainingJobDefinitionVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this HyperParameterTrainingJobDefinition.


        :param vpc_config: The vpc_config of this HyperParameterTrainingJobDefinition.
        :type vpc_config: HyperParameterTrainingJobDefinitionVpcConfig
        """

        self._vpc_config = vpc_config

    @property
    def output_data_config(self):
        """Gets the output_data_config of this HyperParameterTrainingJobDefinition.


        :return: The output_data_config of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTrainingJobDefinitionOutputDataConfig
        """
        return self._output_data_config

    @output_data_config.setter
    def output_data_config(self, output_data_config):
        """Sets the output_data_config of this HyperParameterTrainingJobDefinition.


        :param output_data_config: The output_data_config of this HyperParameterTrainingJobDefinition.
        :type output_data_config: HyperParameterTrainingJobDefinitionOutputDataConfig
        """
        if output_data_config is None:
            raise ValueError("Invalid value for `output_data_config`, must not be `None`")

        self._output_data_config = output_data_config

    @property
    def resource_config(self):
        """Gets the resource_config of this HyperParameterTrainingJobDefinition.


        :return: The resource_config of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTrainingJobDefinitionResourceConfig
        """
        return self._resource_config

    @resource_config.setter
    def resource_config(self, resource_config):
        """Sets the resource_config of this HyperParameterTrainingJobDefinition.


        :param resource_config: The resource_config of this HyperParameterTrainingJobDefinition.
        :type resource_config: HyperParameterTrainingJobDefinitionResourceConfig
        """

        self._resource_config = resource_config

    @property
    def stopping_condition(self):
        """Gets the stopping_condition of this HyperParameterTrainingJobDefinition.


        :return: The stopping_condition of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTrainingJobDefinitionStoppingCondition
        """
        return self._stopping_condition

    @stopping_condition.setter
    def stopping_condition(self, stopping_condition):
        """Sets the stopping_condition of this HyperParameterTrainingJobDefinition.


        :param stopping_condition: The stopping_condition of this HyperParameterTrainingJobDefinition.
        :type stopping_condition: HyperParameterTrainingJobDefinitionStoppingCondition
        """
        if stopping_condition is None:
            raise ValueError("Invalid value for `stopping_condition`, must not be `None`")

        self._stopping_condition = stopping_condition

    @property
    def enable_network_isolation(self):
        """Gets the enable_network_isolation of this HyperParameterTrainingJobDefinition.


        :return: The enable_network_isolation of this HyperParameterTrainingJobDefinition.
        :rtype: bool
        """
        return self._enable_network_isolation

    @enable_network_isolation.setter
    def enable_network_isolation(self, enable_network_isolation):
        """Sets the enable_network_isolation of this HyperParameterTrainingJobDefinition.


        :param enable_network_isolation: The enable_network_isolation of this HyperParameterTrainingJobDefinition.
        :type enable_network_isolation: bool
        """

        self._enable_network_isolation = enable_network_isolation

    @property
    def enable_inter_container_traffic_encryption(self):
        """Gets the enable_inter_container_traffic_encryption of this HyperParameterTrainingJobDefinition.


        :return: The enable_inter_container_traffic_encryption of this HyperParameterTrainingJobDefinition.
        :rtype: bool
        """
        return self._enable_inter_container_traffic_encryption

    @enable_inter_container_traffic_encryption.setter
    def enable_inter_container_traffic_encryption(self, enable_inter_container_traffic_encryption):
        """Sets the enable_inter_container_traffic_encryption of this HyperParameterTrainingJobDefinition.


        :param enable_inter_container_traffic_encryption: The enable_inter_container_traffic_encryption of this HyperParameterTrainingJobDefinition.
        :type enable_inter_container_traffic_encryption: bool
        """

        self._enable_inter_container_traffic_encryption = enable_inter_container_traffic_encryption

    @property
    def enable_managed_spot_training(self):
        """Gets the enable_managed_spot_training of this HyperParameterTrainingJobDefinition.


        :return: The enable_managed_spot_training of this HyperParameterTrainingJobDefinition.
        :rtype: bool
        """
        return self._enable_managed_spot_training

    @enable_managed_spot_training.setter
    def enable_managed_spot_training(self, enable_managed_spot_training):
        """Sets the enable_managed_spot_training of this HyperParameterTrainingJobDefinition.


        :param enable_managed_spot_training: The enable_managed_spot_training of this HyperParameterTrainingJobDefinition.
        :type enable_managed_spot_training: bool
        """

        self._enable_managed_spot_training = enable_managed_spot_training

    @property
    def checkpoint_config(self):
        """Gets the checkpoint_config of this HyperParameterTrainingJobDefinition.


        :return: The checkpoint_config of this HyperParameterTrainingJobDefinition.
        :rtype: CheckpointConfig
        """
        return self._checkpoint_config

    @checkpoint_config.setter
    def checkpoint_config(self, checkpoint_config):
        """Sets the checkpoint_config of this HyperParameterTrainingJobDefinition.


        :param checkpoint_config: The checkpoint_config of this HyperParameterTrainingJobDefinition.
        :type checkpoint_config: CheckpointConfig
        """

        self._checkpoint_config = checkpoint_config

    @property
    def retry_strategy(self):
        """Gets the retry_strategy of this HyperParameterTrainingJobDefinition.


        :return: The retry_strategy of this HyperParameterTrainingJobDefinition.
        :rtype: CreateTrainingJobRequestRetryStrategy
        """
        return self._retry_strategy

    @retry_strategy.setter
    def retry_strategy(self, retry_strategy):
        """Sets the retry_strategy of this HyperParameterTrainingJobDefinition.


        :param retry_strategy: The retry_strategy of this HyperParameterTrainingJobDefinition.
        :type retry_strategy: CreateTrainingJobRequestRetryStrategy
        """

        self._retry_strategy = retry_strategy

    @property
    def hyper_parameter_tuning_resource_config(self):
        """Gets the hyper_parameter_tuning_resource_config of this HyperParameterTrainingJobDefinition.


        :return: The hyper_parameter_tuning_resource_config of this HyperParameterTrainingJobDefinition.
        :rtype: HyperParameterTrainingJobDefinitionHyperParameterTuningResourceConfig
        """
        return self._hyper_parameter_tuning_resource_config

    @hyper_parameter_tuning_resource_config.setter
    def hyper_parameter_tuning_resource_config(self, hyper_parameter_tuning_resource_config):
        """Sets the hyper_parameter_tuning_resource_config of this HyperParameterTrainingJobDefinition.


        :param hyper_parameter_tuning_resource_config: The hyper_parameter_tuning_resource_config of this HyperParameterTrainingJobDefinition.
        :type hyper_parameter_tuning_resource_config: HyperParameterTrainingJobDefinitionHyperParameterTuningResourceConfig
        """

        self._hyper_parameter_tuning_resource_config = hyper_parameter_tuning_resource_config

    @property
    def environment(self):
        """Gets the environment of this HyperParameterTrainingJobDefinition.


        :return: The environment of this HyperParameterTrainingJobDefinition.
        :rtype: Dict
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this HyperParameterTrainingJobDefinition.


        :param environment: The environment of this HyperParameterTrainingJobDefinition.
        :type environment: Dict
        """

        self._environment = environment
