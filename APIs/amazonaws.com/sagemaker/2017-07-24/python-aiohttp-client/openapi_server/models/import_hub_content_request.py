# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_content_type import HubContentType
from openapi_server import util


class ImportHubContentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_content_name: str=None, hub_content_version: str=None, hub_content_type: HubContentType=None, document_schema_version: str=None, hub_name: str=None, hub_content_display_name: str=None, hub_content_description: str=None, hub_content_markdown: str=None, hub_content_document: str=None, hub_content_search_keywords: List=None, tags: List=None):
        """ImportHubContentRequest - a model defined in OpenAPI

        :param hub_content_name: The hub_content_name of this ImportHubContentRequest.
        :param hub_content_version: The hub_content_version of this ImportHubContentRequest.
        :param hub_content_type: The hub_content_type of this ImportHubContentRequest.
        :param document_schema_version: The document_schema_version of this ImportHubContentRequest.
        :param hub_name: The hub_name of this ImportHubContentRequest.
        :param hub_content_display_name: The hub_content_display_name of this ImportHubContentRequest.
        :param hub_content_description: The hub_content_description of this ImportHubContentRequest.
        :param hub_content_markdown: The hub_content_markdown of this ImportHubContentRequest.
        :param hub_content_document: The hub_content_document of this ImportHubContentRequest.
        :param hub_content_search_keywords: The hub_content_search_keywords of this ImportHubContentRequest.
        :param tags: The tags of this ImportHubContentRequest.
        """
        self.openapi_types = {
            'hub_content_name': str,
            'hub_content_version': str,
            'hub_content_type': HubContentType,
            'document_schema_version': str,
            'hub_name': str,
            'hub_content_display_name': str,
            'hub_content_description': str,
            'hub_content_markdown': str,
            'hub_content_document': str,
            'hub_content_search_keywords': List,
            'tags': List
        }

        self.attribute_map = {
            'hub_content_name': 'HubContentName',
            'hub_content_version': 'HubContentVersion',
            'hub_content_type': 'HubContentType',
            'document_schema_version': 'DocumentSchemaVersion',
            'hub_name': 'HubName',
            'hub_content_display_name': 'HubContentDisplayName',
            'hub_content_description': 'HubContentDescription',
            'hub_content_markdown': 'HubContentMarkdown',
            'hub_content_document': 'HubContentDocument',
            'hub_content_search_keywords': 'HubContentSearchKeywords',
            'tags': 'Tags'
        }

        self._hub_content_name = hub_content_name
        self._hub_content_version = hub_content_version
        self._hub_content_type = hub_content_type
        self._document_schema_version = document_schema_version
        self._hub_name = hub_name
        self._hub_content_display_name = hub_content_display_name
        self._hub_content_description = hub_content_description
        self._hub_content_markdown = hub_content_markdown
        self._hub_content_document = hub_content_document
        self._hub_content_search_keywords = hub_content_search_keywords
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportHubContentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportHubContentRequest of this ImportHubContentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_content_name(self):
        """Gets the hub_content_name of this ImportHubContentRequest.


        :return: The hub_content_name of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_content_name

    @hub_content_name.setter
    def hub_content_name(self, hub_content_name):
        """Sets the hub_content_name of this ImportHubContentRequest.


        :param hub_content_name: The hub_content_name of this ImportHubContentRequest.
        :type hub_content_name: str
        """
        if hub_content_name is None:
            raise ValueError("Invalid value for `hub_content_name`, must not be `None`")

        self._hub_content_name = hub_content_name

    @property
    def hub_content_version(self):
        """Gets the hub_content_version of this ImportHubContentRequest.


        :return: The hub_content_version of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_content_version

    @hub_content_version.setter
    def hub_content_version(self, hub_content_version):
        """Sets the hub_content_version of this ImportHubContentRequest.


        :param hub_content_version: The hub_content_version of this ImportHubContentRequest.
        :type hub_content_version: str
        """

        self._hub_content_version = hub_content_version

    @property
    def hub_content_type(self):
        """Gets the hub_content_type of this ImportHubContentRequest.


        :return: The hub_content_type of this ImportHubContentRequest.
        :rtype: HubContentType
        """
        return self._hub_content_type

    @hub_content_type.setter
    def hub_content_type(self, hub_content_type):
        """Sets the hub_content_type of this ImportHubContentRequest.


        :param hub_content_type: The hub_content_type of this ImportHubContentRequest.
        :type hub_content_type: HubContentType
        """
        if hub_content_type is None:
            raise ValueError("Invalid value for `hub_content_type`, must not be `None`")

        self._hub_content_type = hub_content_type

    @property
    def document_schema_version(self):
        """Gets the document_schema_version of this ImportHubContentRequest.


        :return: The document_schema_version of this ImportHubContentRequest.
        :rtype: str
        """
        return self._document_schema_version

    @document_schema_version.setter
    def document_schema_version(self, document_schema_version):
        """Sets the document_schema_version of this ImportHubContentRequest.


        :param document_schema_version: The document_schema_version of this ImportHubContentRequest.
        :type document_schema_version: str
        """
        if document_schema_version is None:
            raise ValueError("Invalid value for `document_schema_version`, must not be `None`")

        self._document_schema_version = document_schema_version

    @property
    def hub_name(self):
        """Gets the hub_name of this ImportHubContentRequest.


        :return: The hub_name of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_name

    @hub_name.setter
    def hub_name(self, hub_name):
        """Sets the hub_name of this ImportHubContentRequest.


        :param hub_name: The hub_name of this ImportHubContentRequest.
        :type hub_name: str
        """
        if hub_name is None:
            raise ValueError("Invalid value for `hub_name`, must not be `None`")

        self._hub_name = hub_name

    @property
    def hub_content_display_name(self):
        """Gets the hub_content_display_name of this ImportHubContentRequest.


        :return: The hub_content_display_name of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_content_display_name

    @hub_content_display_name.setter
    def hub_content_display_name(self, hub_content_display_name):
        """Sets the hub_content_display_name of this ImportHubContentRequest.


        :param hub_content_display_name: The hub_content_display_name of this ImportHubContentRequest.
        :type hub_content_display_name: str
        """

        self._hub_content_display_name = hub_content_display_name

    @property
    def hub_content_description(self):
        """Gets the hub_content_description of this ImportHubContentRequest.


        :return: The hub_content_description of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_content_description

    @hub_content_description.setter
    def hub_content_description(self, hub_content_description):
        """Sets the hub_content_description of this ImportHubContentRequest.


        :param hub_content_description: The hub_content_description of this ImportHubContentRequest.
        :type hub_content_description: str
        """

        self._hub_content_description = hub_content_description

    @property
    def hub_content_markdown(self):
        """Gets the hub_content_markdown of this ImportHubContentRequest.


        :return: The hub_content_markdown of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_content_markdown

    @hub_content_markdown.setter
    def hub_content_markdown(self, hub_content_markdown):
        """Sets the hub_content_markdown of this ImportHubContentRequest.


        :param hub_content_markdown: The hub_content_markdown of this ImportHubContentRequest.
        :type hub_content_markdown: str
        """

        self._hub_content_markdown = hub_content_markdown

    @property
    def hub_content_document(self):
        """Gets the hub_content_document of this ImportHubContentRequest.


        :return: The hub_content_document of this ImportHubContentRequest.
        :rtype: str
        """
        return self._hub_content_document

    @hub_content_document.setter
    def hub_content_document(self, hub_content_document):
        """Sets the hub_content_document of this ImportHubContentRequest.


        :param hub_content_document: The hub_content_document of this ImportHubContentRequest.
        :type hub_content_document: str
        """
        if hub_content_document is None:
            raise ValueError("Invalid value for `hub_content_document`, must not be `None`")

        self._hub_content_document = hub_content_document

    @property
    def hub_content_search_keywords(self):
        """Gets the hub_content_search_keywords of this ImportHubContentRequest.


        :return: The hub_content_search_keywords of this ImportHubContentRequest.
        :rtype: List
        """
        return self._hub_content_search_keywords

    @hub_content_search_keywords.setter
    def hub_content_search_keywords(self, hub_content_search_keywords):
        """Sets the hub_content_search_keywords of this ImportHubContentRequest.


        :param hub_content_search_keywords: The hub_content_search_keywords of this ImportHubContentRequest.
        :type hub_content_search_keywords: List
        """

        self._hub_content_search_keywords = hub_content_search_keywords

    @property
    def tags(self):
        """Gets the tags of this ImportHubContentRequest.


        :return: The tags of this ImportHubContentRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ImportHubContentRequest.


        :param tags: The tags of this ImportHubContentRequest.
        :type tags: List
        """

        self._tags = tags
