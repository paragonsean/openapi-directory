# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_status import DomainStatus
from openapi_server import util


class DomainDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_arn: str=None, domain_id: str=None, domain_name: str=None, status: DomainStatus=None, creation_time: datetime=None, last_modified_time: datetime=None, url: str=None):
        """DomainDetails - a model defined in OpenAPI

        :param domain_arn: The domain_arn of this DomainDetails.
        :param domain_id: The domain_id of this DomainDetails.
        :param domain_name: The domain_name of this DomainDetails.
        :param status: The status of this DomainDetails.
        :param creation_time: The creation_time of this DomainDetails.
        :param last_modified_time: The last_modified_time of this DomainDetails.
        :param url: The url of this DomainDetails.
        """
        self.openapi_types = {
            'domain_arn': str,
            'domain_id': str,
            'domain_name': str,
            'status': DomainStatus,
            'creation_time': datetime,
            'last_modified_time': datetime,
            'url': str
        }

        self.attribute_map = {
            'domain_arn': 'DomainArn',
            'domain_id': 'DomainId',
            'domain_name': 'DomainName',
            'status': 'Status',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime',
            'url': 'Url'
        }

        self._domain_arn = domain_arn
        self._domain_id = domain_id
        self._domain_name = domain_name
        self._status = status
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainDetails of this DomainDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_arn(self):
        """Gets the domain_arn of this DomainDetails.


        :return: The domain_arn of this DomainDetails.
        :rtype: str
        """
        return self._domain_arn

    @domain_arn.setter
    def domain_arn(self, domain_arn):
        """Sets the domain_arn of this DomainDetails.


        :param domain_arn: The domain_arn of this DomainDetails.
        :type domain_arn: str
        """

        self._domain_arn = domain_arn

    @property
    def domain_id(self):
        """Gets the domain_id of this DomainDetails.


        :return: The domain_id of this DomainDetails.
        :rtype: str
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this DomainDetails.


        :param domain_id: The domain_id of this DomainDetails.
        :type domain_id: str
        """

        self._domain_id = domain_id

    @property
    def domain_name(self):
        """Gets the domain_name of this DomainDetails.


        :return: The domain_name of this DomainDetails.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this DomainDetails.


        :param domain_name: The domain_name of this DomainDetails.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def status(self):
        """Gets the status of this DomainDetails.


        :return: The status of this DomainDetails.
        :rtype: DomainStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DomainDetails.


        :param status: The status of this DomainDetails.
        :type status: DomainStatus
        """

        self._status = status

    @property
    def creation_time(self):
        """Gets the creation_time of this DomainDetails.


        :return: The creation_time of this DomainDetails.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DomainDetails.


        :param creation_time: The creation_time of this DomainDetails.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this DomainDetails.


        :return: The last_modified_time of this DomainDetails.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this DomainDetails.


        :param last_modified_time: The last_modified_time of this DomainDetails.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def url(self):
        """Gets the url of this DomainDetails.


        :return: The url of this DomainDetails.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this DomainDetails.


        :param url: The url of this DomainDetails.
        :type url: str
        """

        self._url = url
