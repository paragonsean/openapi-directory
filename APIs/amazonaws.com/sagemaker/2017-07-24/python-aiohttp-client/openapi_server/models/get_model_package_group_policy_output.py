# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetModelPackageGroupPolicyOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_policy: str=None):
        """GetModelPackageGroupPolicyOutput - a model defined in OpenAPI

        :param resource_policy: The resource_policy of this GetModelPackageGroupPolicyOutput.
        """
        self.openapi_types = {
            'resource_policy': str
        }

        self.attribute_map = {
            'resource_policy': 'ResourcePolicy'
        }

        self._resource_policy = resource_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetModelPackageGroupPolicyOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetModelPackageGroupPolicyOutput of this GetModelPackageGroupPolicyOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_policy(self):
        """Gets the resource_policy of this GetModelPackageGroupPolicyOutput.


        :return: The resource_policy of this GetModelPackageGroupPolicyOutput.
        :rtype: str
        """
        return self._resource_policy

    @resource_policy.setter
    def resource_policy(self, resource_policy):
        """Sets the resource_policy of this GetModelPackageGroupPolicyOutput.


        :param resource_policy: The resource_policy of this GetModelPackageGroupPolicyOutput.
        :type resource_policy: str
        """
        if resource_policy is None:
            raise ValueError("Invalid value for `resource_policy`, must not be `None`")

        self._resource_policy = resource_policy
