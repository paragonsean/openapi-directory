# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_content_type import HubContentType
from openapi_server import util


class DescribeHubContentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_name: str=None, hub_content_type: HubContentType=None, hub_content_name: str=None, hub_content_version: str=None):
        """DescribeHubContentRequest - a model defined in OpenAPI

        :param hub_name: The hub_name of this DescribeHubContentRequest.
        :param hub_content_type: The hub_content_type of this DescribeHubContentRequest.
        :param hub_content_name: The hub_content_name of this DescribeHubContentRequest.
        :param hub_content_version: The hub_content_version of this DescribeHubContentRequest.
        """
        self.openapi_types = {
            'hub_name': str,
            'hub_content_type': HubContentType,
            'hub_content_name': str,
            'hub_content_version': str
        }

        self.attribute_map = {
            'hub_name': 'HubName',
            'hub_content_type': 'HubContentType',
            'hub_content_name': 'HubContentName',
            'hub_content_version': 'HubContentVersion'
        }

        self._hub_name = hub_name
        self._hub_content_type = hub_content_type
        self._hub_content_name = hub_content_name
        self._hub_content_version = hub_content_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeHubContentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeHubContentRequest of this DescribeHubContentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_name(self):
        """Gets the hub_name of this DescribeHubContentRequest.


        :return: The hub_name of this DescribeHubContentRequest.
        :rtype: str
        """
        return self._hub_name

    @hub_name.setter
    def hub_name(self, hub_name):
        """Sets the hub_name of this DescribeHubContentRequest.


        :param hub_name: The hub_name of this DescribeHubContentRequest.
        :type hub_name: str
        """
        if hub_name is None:
            raise ValueError("Invalid value for `hub_name`, must not be `None`")

        self._hub_name = hub_name

    @property
    def hub_content_type(self):
        """Gets the hub_content_type of this DescribeHubContentRequest.


        :return: The hub_content_type of this DescribeHubContentRequest.
        :rtype: HubContentType
        """
        return self._hub_content_type

    @hub_content_type.setter
    def hub_content_type(self, hub_content_type):
        """Sets the hub_content_type of this DescribeHubContentRequest.


        :param hub_content_type: The hub_content_type of this DescribeHubContentRequest.
        :type hub_content_type: HubContentType
        """
        if hub_content_type is None:
            raise ValueError("Invalid value for `hub_content_type`, must not be `None`")

        self._hub_content_type = hub_content_type

    @property
    def hub_content_name(self):
        """Gets the hub_content_name of this DescribeHubContentRequest.


        :return: The hub_content_name of this DescribeHubContentRequest.
        :rtype: str
        """
        return self._hub_content_name

    @hub_content_name.setter
    def hub_content_name(self, hub_content_name):
        """Sets the hub_content_name of this DescribeHubContentRequest.


        :param hub_content_name: The hub_content_name of this DescribeHubContentRequest.
        :type hub_content_name: str
        """
        if hub_content_name is None:
            raise ValueError("Invalid value for `hub_content_name`, must not be `None`")

        self._hub_content_name = hub_content_name

    @property
    def hub_content_version(self):
        """Gets the hub_content_version of this DescribeHubContentRequest.


        :return: The hub_content_version of this DescribeHubContentRequest.
        :rtype: str
        """
        return self._hub_content_version

    @hub_content_version.setter
    def hub_content_version(self, hub_content_version):
        """Sets the hub_content_version of this DescribeHubContentRequest.


        :param hub_content_version: The hub_content_version of this DescribeHubContentRequest.
        :type hub_content_version: str
        """

        self._hub_content_version = hub_content_version
