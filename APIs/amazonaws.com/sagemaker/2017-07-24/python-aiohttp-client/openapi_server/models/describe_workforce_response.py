# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_workforce_response_workforce import DescribeWorkforceResponseWorkforce
from openapi_server import util


class DescribeWorkforceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workforce: DescribeWorkforceResponseWorkforce=None):
        """DescribeWorkforceResponse - a model defined in OpenAPI

        :param workforce: The workforce of this DescribeWorkforceResponse.
        """
        self.openapi_types = {
            'workforce': DescribeWorkforceResponseWorkforce
        }

        self.attribute_map = {
            'workforce': 'Workforce'
        }

        self._workforce = workforce

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkforceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkforceResponse of this DescribeWorkforceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workforce(self):
        """Gets the workforce of this DescribeWorkforceResponse.


        :return: The workforce of this DescribeWorkforceResponse.
        :rtype: DescribeWorkforceResponseWorkforce
        """
        return self._workforce

    @workforce.setter
    def workforce(self, workforce):
        """Sets the workforce of this DescribeWorkforceResponse.


        :param workforce: The workforce of this DescribeWorkforceResponse.
        :type workforce: DescribeWorkforceResponseWorkforce
        """
        if workforce is None:
            raise ValueError("Invalid value for `workforce`, must not be `None`")

        self._workforce = workforce
