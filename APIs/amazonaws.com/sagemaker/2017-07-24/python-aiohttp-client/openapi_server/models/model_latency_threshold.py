# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModelLatencyThreshold(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percentile: str=None, value_in_milliseconds: int=None):
        """ModelLatencyThreshold - a model defined in OpenAPI

        :param percentile: The percentile of this ModelLatencyThreshold.
        :param value_in_milliseconds: The value_in_milliseconds of this ModelLatencyThreshold.
        """
        self.openapi_types = {
            'percentile': str,
            'value_in_milliseconds': int
        }

        self.attribute_map = {
            'percentile': 'Percentile',
            'value_in_milliseconds': 'ValueInMilliseconds'
        }

        self._percentile = percentile
        self._value_in_milliseconds = value_in_milliseconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelLatencyThreshold':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelLatencyThreshold of this ModelLatencyThreshold.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percentile(self):
        """Gets the percentile of this ModelLatencyThreshold.


        :return: The percentile of this ModelLatencyThreshold.
        :rtype: str
        """
        return self._percentile

    @percentile.setter
    def percentile(self, percentile):
        """Sets the percentile of this ModelLatencyThreshold.


        :param percentile: The percentile of this ModelLatencyThreshold.
        :type percentile: str
        """

        self._percentile = percentile

    @property
    def value_in_milliseconds(self):
        """Gets the value_in_milliseconds of this ModelLatencyThreshold.


        :return: The value_in_milliseconds of this ModelLatencyThreshold.
        :rtype: int
        """
        return self._value_in_milliseconds

    @value_in_milliseconds.setter
    def value_in_milliseconds(self, value_in_milliseconds):
        """Sets the value_in_milliseconds of this ModelLatencyThreshold.


        :param value_in_milliseconds: The value_in_milliseconds of this ModelLatencyThreshold.
        :type value_in_milliseconds: int
        """

        self._value_in_milliseconds = value_in_milliseconds
