# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_training_job_request_profiler_config import UpdateTrainingJobRequestProfilerConfig
from openapi_server.models.update_training_job_request_resource_config import UpdateTrainingJobRequestResourceConfig
from openapi_server import util


class UpdateTrainingJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, training_job_name: str=None, profiler_config: UpdateTrainingJobRequestProfilerConfig=None, profiler_rule_configurations: List=None, resource_config: UpdateTrainingJobRequestResourceConfig=None):
        """UpdateTrainingJobRequest - a model defined in OpenAPI

        :param training_job_name: The training_job_name of this UpdateTrainingJobRequest.
        :param profiler_config: The profiler_config of this UpdateTrainingJobRequest.
        :param profiler_rule_configurations: The profiler_rule_configurations of this UpdateTrainingJobRequest.
        :param resource_config: The resource_config of this UpdateTrainingJobRequest.
        """
        self.openapi_types = {
            'training_job_name': str,
            'profiler_config': UpdateTrainingJobRequestProfilerConfig,
            'profiler_rule_configurations': List,
            'resource_config': UpdateTrainingJobRequestResourceConfig
        }

        self.attribute_map = {
            'training_job_name': 'TrainingJobName',
            'profiler_config': 'ProfilerConfig',
            'profiler_rule_configurations': 'ProfilerRuleConfigurations',
            'resource_config': 'ResourceConfig'
        }

        self._training_job_name = training_job_name
        self._profiler_config = profiler_config
        self._profiler_rule_configurations = profiler_rule_configurations
        self._resource_config = resource_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTrainingJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTrainingJobRequest of this UpdateTrainingJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def training_job_name(self):
        """Gets the training_job_name of this UpdateTrainingJobRequest.


        :return: The training_job_name of this UpdateTrainingJobRequest.
        :rtype: str
        """
        return self._training_job_name

    @training_job_name.setter
    def training_job_name(self, training_job_name):
        """Sets the training_job_name of this UpdateTrainingJobRequest.


        :param training_job_name: The training_job_name of this UpdateTrainingJobRequest.
        :type training_job_name: str
        """
        if training_job_name is None:
            raise ValueError("Invalid value for `training_job_name`, must not be `None`")

        self._training_job_name = training_job_name

    @property
    def profiler_config(self):
        """Gets the profiler_config of this UpdateTrainingJobRequest.


        :return: The profiler_config of this UpdateTrainingJobRequest.
        :rtype: UpdateTrainingJobRequestProfilerConfig
        """
        return self._profiler_config

    @profiler_config.setter
    def profiler_config(self, profiler_config):
        """Sets the profiler_config of this UpdateTrainingJobRequest.


        :param profiler_config: The profiler_config of this UpdateTrainingJobRequest.
        :type profiler_config: UpdateTrainingJobRequestProfilerConfig
        """

        self._profiler_config = profiler_config

    @property
    def profiler_rule_configurations(self):
        """Gets the profiler_rule_configurations of this UpdateTrainingJobRequest.


        :return: The profiler_rule_configurations of this UpdateTrainingJobRequest.
        :rtype: List
        """
        return self._profiler_rule_configurations

    @profiler_rule_configurations.setter
    def profiler_rule_configurations(self, profiler_rule_configurations):
        """Sets the profiler_rule_configurations of this UpdateTrainingJobRequest.


        :param profiler_rule_configurations: The profiler_rule_configurations of this UpdateTrainingJobRequest.
        :type profiler_rule_configurations: List
        """

        self._profiler_rule_configurations = profiler_rule_configurations

    @property
    def resource_config(self):
        """Gets the resource_config of this UpdateTrainingJobRequest.


        :return: The resource_config of this UpdateTrainingJobRequest.
        :rtype: UpdateTrainingJobRequestResourceConfig
        """
        return self._resource_config

    @resource_config.setter
    def resource_config(self, resource_config):
        """Sets the resource_config of this UpdateTrainingJobRequest.


        :param resource_config: The resource_config of this UpdateTrainingJobRequest.
        :type resource_config: UpdateTrainingJobRequestResourceConfig
        """

        self._resource_config = resource_config
