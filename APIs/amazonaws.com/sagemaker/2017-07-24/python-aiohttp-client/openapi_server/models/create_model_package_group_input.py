# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateModelPackageGroupInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_package_group_name: str=None, model_package_group_description: str=None, tags: List=None):
        """CreateModelPackageGroupInput - a model defined in OpenAPI

        :param model_package_group_name: The model_package_group_name of this CreateModelPackageGroupInput.
        :param model_package_group_description: The model_package_group_description of this CreateModelPackageGroupInput.
        :param tags: The tags of this CreateModelPackageGroupInput.
        """
        self.openapi_types = {
            'model_package_group_name': str,
            'model_package_group_description': str,
            'tags': List
        }

        self.attribute_map = {
            'model_package_group_name': 'ModelPackageGroupName',
            'model_package_group_description': 'ModelPackageGroupDescription',
            'tags': 'Tags'
        }

        self._model_package_group_name = model_package_group_name
        self._model_package_group_description = model_package_group_description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelPackageGroupInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelPackageGroupInput of this CreateModelPackageGroupInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_package_group_name(self):
        """Gets the model_package_group_name of this CreateModelPackageGroupInput.


        :return: The model_package_group_name of this CreateModelPackageGroupInput.
        :rtype: str
        """
        return self._model_package_group_name

    @model_package_group_name.setter
    def model_package_group_name(self, model_package_group_name):
        """Sets the model_package_group_name of this CreateModelPackageGroupInput.


        :param model_package_group_name: The model_package_group_name of this CreateModelPackageGroupInput.
        :type model_package_group_name: str
        """
        if model_package_group_name is None:
            raise ValueError("Invalid value for `model_package_group_name`, must not be `None`")

        self._model_package_group_name = model_package_group_name

    @property
    def model_package_group_description(self):
        """Gets the model_package_group_description of this CreateModelPackageGroupInput.


        :return: The model_package_group_description of this CreateModelPackageGroupInput.
        :rtype: str
        """
        return self._model_package_group_description

    @model_package_group_description.setter
    def model_package_group_description(self, model_package_group_description):
        """Sets the model_package_group_description of this CreateModelPackageGroupInput.


        :param model_package_group_description: The model_package_group_description of this CreateModelPackageGroupInput.
        :type model_package_group_description: str
        """

        self._model_package_group_description = model_package_group_description

    @property
    def tags(self):
        """Gets the tags of this CreateModelPackageGroupInput.


        :return: The tags of this CreateModelPackageGroupInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateModelPackageGroupInput.


        :param tags: The tags of this CreateModelPackageGroupInput.
        :type tags: List
        """

        self._tags = tags
