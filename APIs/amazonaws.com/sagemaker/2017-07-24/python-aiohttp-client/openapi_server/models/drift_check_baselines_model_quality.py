# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.drift_check_model_quality_constraints import DriftCheckModelQualityConstraints
from openapi_server.models.drift_check_model_quality_statistics import DriftCheckModelQualityStatistics
from openapi_server import util


class DriftCheckBaselinesModelQuality(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, statistics: DriftCheckModelQualityStatistics=None, constraints: DriftCheckModelQualityConstraints=None):
        """DriftCheckBaselinesModelQuality - a model defined in OpenAPI

        :param statistics: The statistics of this DriftCheckBaselinesModelQuality.
        :param constraints: The constraints of this DriftCheckBaselinesModelQuality.
        """
        self.openapi_types = {
            'statistics': DriftCheckModelQualityStatistics,
            'constraints': DriftCheckModelQualityConstraints
        }

        self.attribute_map = {
            'statistics': 'Statistics',
            'constraints': 'Constraints'
        }

        self._statistics = statistics
        self._constraints = constraints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriftCheckBaselinesModelQuality':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriftCheckBaselines_ModelQuality of this DriftCheckBaselinesModelQuality.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def statistics(self):
        """Gets the statistics of this DriftCheckBaselinesModelQuality.


        :return: The statistics of this DriftCheckBaselinesModelQuality.
        :rtype: DriftCheckModelQualityStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this DriftCheckBaselinesModelQuality.


        :param statistics: The statistics of this DriftCheckBaselinesModelQuality.
        :type statistics: DriftCheckModelQualityStatistics
        """

        self._statistics = statistics

    @property
    def constraints(self):
        """Gets the constraints of this DriftCheckBaselinesModelQuality.


        :return: The constraints of this DriftCheckBaselinesModelQuality.
        :rtype: DriftCheckModelQualityConstraints
        """
        return self._constraints

    @constraints.setter
    def constraints(self, constraints):
        """Sets the constraints of this DriftCheckBaselinesModelQuality.


        :param constraints: The constraints of this DriftCheckBaselinesModelQuality.
        :type constraints: DriftCheckModelQualityConstraints
        """

        self._constraints = constraints
