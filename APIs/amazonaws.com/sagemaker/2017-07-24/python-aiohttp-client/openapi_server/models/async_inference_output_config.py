# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.async_inference_output_config_notification_config import AsyncInferenceOutputConfigNotificationConfig
from openapi_server import util


class AsyncInferenceOutputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_key_id: str=None, s3_output_path: str=None, notification_config: AsyncInferenceOutputConfigNotificationConfig=None, s3_failure_path: str=None):
        """AsyncInferenceOutputConfig - a model defined in OpenAPI

        :param kms_key_id: The kms_key_id of this AsyncInferenceOutputConfig.
        :param s3_output_path: The s3_output_path of this AsyncInferenceOutputConfig.
        :param notification_config: The notification_config of this AsyncInferenceOutputConfig.
        :param s3_failure_path: The s3_failure_path of this AsyncInferenceOutputConfig.
        """
        self.openapi_types = {
            'kms_key_id': str,
            's3_output_path': str,
            'notification_config': AsyncInferenceOutputConfigNotificationConfig,
            's3_failure_path': str
        }

        self.attribute_map = {
            'kms_key_id': 'KmsKeyId',
            's3_output_path': 'S3OutputPath',
            'notification_config': 'NotificationConfig',
            's3_failure_path': 'S3FailurePath'
        }

        self._kms_key_id = kms_key_id
        self._s3_output_path = s3_output_path
        self._notification_config = notification_config
        self._s3_failure_path = s3_failure_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AsyncInferenceOutputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AsyncInferenceOutputConfig of this AsyncInferenceOutputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this AsyncInferenceOutputConfig.


        :return: The kms_key_id of this AsyncInferenceOutputConfig.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this AsyncInferenceOutputConfig.


        :param kms_key_id: The kms_key_id of this AsyncInferenceOutputConfig.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def s3_output_path(self):
        """Gets the s3_output_path of this AsyncInferenceOutputConfig.


        :return: The s3_output_path of this AsyncInferenceOutputConfig.
        :rtype: str
        """
        return self._s3_output_path

    @s3_output_path.setter
    def s3_output_path(self, s3_output_path):
        """Sets the s3_output_path of this AsyncInferenceOutputConfig.


        :param s3_output_path: The s3_output_path of this AsyncInferenceOutputConfig.
        :type s3_output_path: str
        """

        self._s3_output_path = s3_output_path

    @property
    def notification_config(self):
        """Gets the notification_config of this AsyncInferenceOutputConfig.


        :return: The notification_config of this AsyncInferenceOutputConfig.
        :rtype: AsyncInferenceOutputConfigNotificationConfig
        """
        return self._notification_config

    @notification_config.setter
    def notification_config(self, notification_config):
        """Sets the notification_config of this AsyncInferenceOutputConfig.


        :param notification_config: The notification_config of this AsyncInferenceOutputConfig.
        :type notification_config: AsyncInferenceOutputConfigNotificationConfig
        """

        self._notification_config = notification_config

    @property
    def s3_failure_path(self):
        """Gets the s3_failure_path of this AsyncInferenceOutputConfig.


        :return: The s3_failure_path of this AsyncInferenceOutputConfig.
        :rtype: str
        """
        return self._s3_failure_path

    @s3_failure_path.setter
    def s3_failure_path(self, s3_failure_path):
        """Sets the s3_failure_path of this AsyncInferenceOutputConfig.


        :param s3_failure_path: The s3_failure_path of this AsyncInferenceOutputConfig.
        :type s3_failure_path: str
        """

        self._s3_failure_path = s3_failure_path
