# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.boolean_operator import BooleanOperator
from openapi_server import util


class SearchRequestSearchExpression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: List=None, nested_filters: List=None, sub_expressions: List=None, operator: BooleanOperator=None):
        """SearchRequestSearchExpression - a model defined in OpenAPI

        :param filters: The filters of this SearchRequestSearchExpression.
        :param nested_filters: The nested_filters of this SearchRequestSearchExpression.
        :param sub_expressions: The sub_expressions of this SearchRequestSearchExpression.
        :param operator: The operator of this SearchRequestSearchExpression.
        """
        self.openapi_types = {
            'filters': List,
            'nested_filters': List,
            'sub_expressions': List,
            'operator': BooleanOperator
        }

        self.attribute_map = {
            'filters': 'Filters',
            'nested_filters': 'NestedFilters',
            'sub_expressions': 'SubExpressions',
            'operator': 'Operator'
        }

        self._filters = filters
        self._nested_filters = nested_filters
        self._sub_expressions = sub_expressions
        self._operator = operator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchRequestSearchExpression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchRequest_SearchExpression of this SearchRequestSearchExpression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this SearchRequestSearchExpression.


        :return: The filters of this SearchRequestSearchExpression.
        :rtype: List
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this SearchRequestSearchExpression.


        :param filters: The filters of this SearchRequestSearchExpression.
        :type filters: List
        """

        self._filters = filters

    @property
    def nested_filters(self):
        """Gets the nested_filters of this SearchRequestSearchExpression.


        :return: The nested_filters of this SearchRequestSearchExpression.
        :rtype: List
        """
        return self._nested_filters

    @nested_filters.setter
    def nested_filters(self, nested_filters):
        """Sets the nested_filters of this SearchRequestSearchExpression.


        :param nested_filters: The nested_filters of this SearchRequestSearchExpression.
        :type nested_filters: List
        """

        self._nested_filters = nested_filters

    @property
    def sub_expressions(self):
        """Gets the sub_expressions of this SearchRequestSearchExpression.


        :return: The sub_expressions of this SearchRequestSearchExpression.
        :rtype: List
        """
        return self._sub_expressions

    @sub_expressions.setter
    def sub_expressions(self, sub_expressions):
        """Sets the sub_expressions of this SearchRequestSearchExpression.


        :param sub_expressions: The sub_expressions of this SearchRequestSearchExpression.
        :type sub_expressions: List
        """

        self._sub_expressions = sub_expressions

    @property
    def operator(self):
        """Gets the operator of this SearchRequestSearchExpression.


        :return: The operator of this SearchRequestSearchExpression.
        :rtype: BooleanOperator
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this SearchRequestSearchExpression.


        :param operator: The operator of this SearchRequestSearchExpression.
        :type operator: BooleanOperator
        """

        self._operator = operator
