# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_notebook_instance_input_instance_metadata_service_configuration import CreateNotebookInstanceInputInstanceMetadataServiceConfiguration
from openapi_server.models.direct_internet_access import DirectInternetAccess
from openapi_server.models.instance_type import InstanceType
from openapi_server.models.root_access import RootAccess
from openapi_server import util


class CreateNotebookInstanceInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebook_instance_name: str=None, instance_type: InstanceType=None, subnet_id: str=None, security_group_ids: List=None, role_arn: str=None, kms_key_id: str=None, tags: List=None, lifecycle_config_name: str=None, direct_internet_access: DirectInternetAccess=None, volume_size_in_gb: int=None, accelerator_types: List=None, default_code_repository: str=None, additional_code_repositories: List=None, root_access: RootAccess=None, platform_identifier: str=None, instance_metadata_service_configuration: CreateNotebookInstanceInputInstanceMetadataServiceConfiguration=None):
        """CreateNotebookInstanceInput - a model defined in OpenAPI

        :param notebook_instance_name: The notebook_instance_name of this CreateNotebookInstanceInput.
        :param instance_type: The instance_type of this CreateNotebookInstanceInput.
        :param subnet_id: The subnet_id of this CreateNotebookInstanceInput.
        :param security_group_ids: The security_group_ids of this CreateNotebookInstanceInput.
        :param role_arn: The role_arn of this CreateNotebookInstanceInput.
        :param kms_key_id: The kms_key_id of this CreateNotebookInstanceInput.
        :param tags: The tags of this CreateNotebookInstanceInput.
        :param lifecycle_config_name: The lifecycle_config_name of this CreateNotebookInstanceInput.
        :param direct_internet_access: The direct_internet_access of this CreateNotebookInstanceInput.
        :param volume_size_in_gb: The volume_size_in_gb of this CreateNotebookInstanceInput.
        :param accelerator_types: The accelerator_types of this CreateNotebookInstanceInput.
        :param default_code_repository: The default_code_repository of this CreateNotebookInstanceInput.
        :param additional_code_repositories: The additional_code_repositories of this CreateNotebookInstanceInput.
        :param root_access: The root_access of this CreateNotebookInstanceInput.
        :param platform_identifier: The platform_identifier of this CreateNotebookInstanceInput.
        :param instance_metadata_service_configuration: The instance_metadata_service_configuration of this CreateNotebookInstanceInput.
        """
        self.openapi_types = {
            'notebook_instance_name': str,
            'instance_type': InstanceType,
            'subnet_id': str,
            'security_group_ids': List,
            'role_arn': str,
            'kms_key_id': str,
            'tags': List,
            'lifecycle_config_name': str,
            'direct_internet_access': DirectInternetAccess,
            'volume_size_in_gb': int,
            'accelerator_types': List,
            'default_code_repository': str,
            'additional_code_repositories': List,
            'root_access': RootAccess,
            'platform_identifier': str,
            'instance_metadata_service_configuration': CreateNotebookInstanceInputInstanceMetadataServiceConfiguration
        }

        self.attribute_map = {
            'notebook_instance_name': 'NotebookInstanceName',
            'instance_type': 'InstanceType',
            'subnet_id': 'SubnetId',
            'security_group_ids': 'SecurityGroupIds',
            'role_arn': 'RoleArn',
            'kms_key_id': 'KmsKeyId',
            'tags': 'Tags',
            'lifecycle_config_name': 'LifecycleConfigName',
            'direct_internet_access': 'DirectInternetAccess',
            'volume_size_in_gb': 'VolumeSizeInGB',
            'accelerator_types': 'AcceleratorTypes',
            'default_code_repository': 'DefaultCodeRepository',
            'additional_code_repositories': 'AdditionalCodeRepositories',
            'root_access': 'RootAccess',
            'platform_identifier': 'PlatformIdentifier',
            'instance_metadata_service_configuration': 'InstanceMetadataServiceConfiguration'
        }

        self._notebook_instance_name = notebook_instance_name
        self._instance_type = instance_type
        self._subnet_id = subnet_id
        self._security_group_ids = security_group_ids
        self._role_arn = role_arn
        self._kms_key_id = kms_key_id
        self._tags = tags
        self._lifecycle_config_name = lifecycle_config_name
        self._direct_internet_access = direct_internet_access
        self._volume_size_in_gb = volume_size_in_gb
        self._accelerator_types = accelerator_types
        self._default_code_repository = default_code_repository
        self._additional_code_repositories = additional_code_repositories
        self._root_access = root_access
        self._platform_identifier = platform_identifier
        self._instance_metadata_service_configuration = instance_metadata_service_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNotebookInstanceInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateNotebookInstanceInput of this CreateNotebookInstanceInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebook_instance_name(self):
        """Gets the notebook_instance_name of this CreateNotebookInstanceInput.


        :return: The notebook_instance_name of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._notebook_instance_name

    @notebook_instance_name.setter
    def notebook_instance_name(self, notebook_instance_name):
        """Sets the notebook_instance_name of this CreateNotebookInstanceInput.


        :param notebook_instance_name: The notebook_instance_name of this CreateNotebookInstanceInput.
        :type notebook_instance_name: str
        """
        if notebook_instance_name is None:
            raise ValueError("Invalid value for `notebook_instance_name`, must not be `None`")

        self._notebook_instance_name = notebook_instance_name

    @property
    def instance_type(self):
        """Gets the instance_type of this CreateNotebookInstanceInput.


        :return: The instance_type of this CreateNotebookInstanceInput.
        :rtype: InstanceType
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this CreateNotebookInstanceInput.


        :param instance_type: The instance_type of this CreateNotebookInstanceInput.
        :type instance_type: InstanceType
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type

    @property
    def subnet_id(self):
        """Gets the subnet_id of this CreateNotebookInstanceInput.


        :return: The subnet_id of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this CreateNotebookInstanceInput.


        :param subnet_id: The subnet_id of this CreateNotebookInstanceInput.
        :type subnet_id: str
        """

        self._subnet_id = subnet_id

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this CreateNotebookInstanceInput.


        :return: The security_group_ids of this CreateNotebookInstanceInput.
        :rtype: List
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this CreateNotebookInstanceInput.


        :param security_group_ids: The security_group_ids of this CreateNotebookInstanceInput.
        :type security_group_ids: List
        """

        self._security_group_ids = security_group_ids

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateNotebookInstanceInput.


        :return: The role_arn of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateNotebookInstanceInput.


        :param role_arn: The role_arn of this CreateNotebookInstanceInput.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CreateNotebookInstanceInput.


        :return: The kms_key_id of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CreateNotebookInstanceInput.


        :param kms_key_id: The kms_key_id of this CreateNotebookInstanceInput.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def tags(self):
        """Gets the tags of this CreateNotebookInstanceInput.


        :return: The tags of this CreateNotebookInstanceInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateNotebookInstanceInput.


        :param tags: The tags of this CreateNotebookInstanceInput.
        :type tags: List
        """

        self._tags = tags

    @property
    def lifecycle_config_name(self):
        """Gets the lifecycle_config_name of this CreateNotebookInstanceInput.


        :return: The lifecycle_config_name of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._lifecycle_config_name

    @lifecycle_config_name.setter
    def lifecycle_config_name(self, lifecycle_config_name):
        """Sets the lifecycle_config_name of this CreateNotebookInstanceInput.


        :param lifecycle_config_name: The lifecycle_config_name of this CreateNotebookInstanceInput.
        :type lifecycle_config_name: str
        """

        self._lifecycle_config_name = lifecycle_config_name

    @property
    def direct_internet_access(self):
        """Gets the direct_internet_access of this CreateNotebookInstanceInput.


        :return: The direct_internet_access of this CreateNotebookInstanceInput.
        :rtype: DirectInternetAccess
        """
        return self._direct_internet_access

    @direct_internet_access.setter
    def direct_internet_access(self, direct_internet_access):
        """Sets the direct_internet_access of this CreateNotebookInstanceInput.


        :param direct_internet_access: The direct_internet_access of this CreateNotebookInstanceInput.
        :type direct_internet_access: DirectInternetAccess
        """

        self._direct_internet_access = direct_internet_access

    @property
    def volume_size_in_gb(self):
        """Gets the volume_size_in_gb of this CreateNotebookInstanceInput.


        :return: The volume_size_in_gb of this CreateNotebookInstanceInput.
        :rtype: int
        """
        return self._volume_size_in_gb

    @volume_size_in_gb.setter
    def volume_size_in_gb(self, volume_size_in_gb):
        """Sets the volume_size_in_gb of this CreateNotebookInstanceInput.


        :param volume_size_in_gb: The volume_size_in_gb of this CreateNotebookInstanceInput.
        :type volume_size_in_gb: int
        """

        self._volume_size_in_gb = volume_size_in_gb

    @property
    def accelerator_types(self):
        """Gets the accelerator_types of this CreateNotebookInstanceInput.


        :return: The accelerator_types of this CreateNotebookInstanceInput.
        :rtype: List
        """
        return self._accelerator_types

    @accelerator_types.setter
    def accelerator_types(self, accelerator_types):
        """Sets the accelerator_types of this CreateNotebookInstanceInput.


        :param accelerator_types: The accelerator_types of this CreateNotebookInstanceInput.
        :type accelerator_types: List
        """

        self._accelerator_types = accelerator_types

    @property
    def default_code_repository(self):
        """Gets the default_code_repository of this CreateNotebookInstanceInput.


        :return: The default_code_repository of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._default_code_repository

    @default_code_repository.setter
    def default_code_repository(self, default_code_repository):
        """Sets the default_code_repository of this CreateNotebookInstanceInput.


        :param default_code_repository: The default_code_repository of this CreateNotebookInstanceInput.
        :type default_code_repository: str
        """

        self._default_code_repository = default_code_repository

    @property
    def additional_code_repositories(self):
        """Gets the additional_code_repositories of this CreateNotebookInstanceInput.


        :return: The additional_code_repositories of this CreateNotebookInstanceInput.
        :rtype: List
        """
        return self._additional_code_repositories

    @additional_code_repositories.setter
    def additional_code_repositories(self, additional_code_repositories):
        """Sets the additional_code_repositories of this CreateNotebookInstanceInput.


        :param additional_code_repositories: The additional_code_repositories of this CreateNotebookInstanceInput.
        :type additional_code_repositories: List
        """

        self._additional_code_repositories = additional_code_repositories

    @property
    def root_access(self):
        """Gets the root_access of this CreateNotebookInstanceInput.


        :return: The root_access of this CreateNotebookInstanceInput.
        :rtype: RootAccess
        """
        return self._root_access

    @root_access.setter
    def root_access(self, root_access):
        """Sets the root_access of this CreateNotebookInstanceInput.


        :param root_access: The root_access of this CreateNotebookInstanceInput.
        :type root_access: RootAccess
        """

        self._root_access = root_access

    @property
    def platform_identifier(self):
        """Gets the platform_identifier of this CreateNotebookInstanceInput.


        :return: The platform_identifier of this CreateNotebookInstanceInput.
        :rtype: str
        """
        return self._platform_identifier

    @platform_identifier.setter
    def platform_identifier(self, platform_identifier):
        """Sets the platform_identifier of this CreateNotebookInstanceInput.


        :param platform_identifier: The platform_identifier of this CreateNotebookInstanceInput.
        :type platform_identifier: str
        """

        self._platform_identifier = platform_identifier

    @property
    def instance_metadata_service_configuration(self):
        """Gets the instance_metadata_service_configuration of this CreateNotebookInstanceInput.


        :return: The instance_metadata_service_configuration of this CreateNotebookInstanceInput.
        :rtype: CreateNotebookInstanceInputInstanceMetadataServiceConfiguration
        """
        return self._instance_metadata_service_configuration

    @instance_metadata_service_configuration.setter
    def instance_metadata_service_configuration(self, instance_metadata_service_configuration):
        """Sets the instance_metadata_service_configuration of this CreateNotebookInstanceInput.


        :param instance_metadata_service_configuration: The instance_metadata_service_configuration of this CreateNotebookInstanceInput.
        :type instance_metadata_service_configuration: CreateNotebookInstanceInputInstanceMetadataServiceConfiguration
        """

        self._instance_metadata_service_configuration = instance_metadata_service_configuration
