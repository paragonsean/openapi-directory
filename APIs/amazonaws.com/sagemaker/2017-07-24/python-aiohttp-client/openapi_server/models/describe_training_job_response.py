# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.checkpoint_config import CheckpointConfig
from openapi_server.models.create_training_job_request_retry_strategy import CreateTrainingJobRequestRetryStrategy
from openapi_server.models.create_training_job_request_stopping_condition import CreateTrainingJobRequestStoppingCondition
from openapi_server.models.debug_hook_config import DebugHookConfig
from openapi_server.models.describe_training_job_response_algorithm_specification import DescribeTrainingJobResponseAlgorithmSpecification
from openapi_server.models.describe_training_job_response_model_artifacts import DescribeTrainingJobResponseModelArtifacts
from openapi_server.models.describe_training_job_response_output_data_config import DescribeTrainingJobResponseOutputDataConfig
from openapi_server.models.describe_training_job_response_resource_config import DescribeTrainingJobResponseResourceConfig
from openapi_server.models.describe_training_job_response_vpc_config import DescribeTrainingJobResponseVpcConfig
from openapi_server.models.describe_training_job_response_warm_pool_status import DescribeTrainingJobResponseWarmPoolStatus
from openapi_server.models.experiment_config import ExperimentConfig
from openapi_server.models.profiler_config import ProfilerConfig
from openapi_server.models.profiling_status import ProfilingStatus
from openapi_server.models.secondary_status import SecondaryStatus
from openapi_server.models.tensor_board_output_config import TensorBoardOutputConfig
from openapi_server.models.training_job_status import TrainingJobStatus
from openapi_server import util


class DescribeTrainingJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, training_job_name: str=None, training_job_arn: str=None, tuning_job_arn: str=None, labeling_job_arn: str=None, auto_ml_job_arn: str=None, model_artifacts: DescribeTrainingJobResponseModelArtifacts=None, training_job_status: TrainingJobStatus=None, secondary_status: SecondaryStatus=None, failure_reason: str=None, hyper_parameters: Dict=None, algorithm_specification: DescribeTrainingJobResponseAlgorithmSpecification=None, role_arn: str=None, input_data_config: List=None, output_data_config: DescribeTrainingJobResponseOutputDataConfig=None, resource_config: DescribeTrainingJobResponseResourceConfig=None, vpc_config: DescribeTrainingJobResponseVpcConfig=None, stopping_condition: CreateTrainingJobRequestStoppingCondition=None, creation_time: datetime=None, training_start_time: datetime=None, training_end_time: datetime=None, last_modified_time: datetime=None, secondary_status_transitions: List=None, final_metric_data_list: List=None, enable_network_isolation: bool=None, enable_inter_container_traffic_encryption: bool=None, enable_managed_spot_training: bool=None, checkpoint_config: CheckpointConfig=None, training_time_in_seconds: int=None, billable_time_in_seconds: int=None, debug_hook_config: DebugHookConfig=None, experiment_config: ExperimentConfig=None, debug_rule_configurations: List=None, tensor_board_output_config: TensorBoardOutputConfig=None, debug_rule_evaluation_statuses: List=None, profiler_config: ProfilerConfig=None, profiler_rule_configurations: List=None, profiler_rule_evaluation_statuses: List=None, profiling_status: ProfilingStatus=None, retry_strategy: CreateTrainingJobRequestRetryStrategy=None, environment: Dict=None, warm_pool_status: DescribeTrainingJobResponseWarmPoolStatus=None):
        """DescribeTrainingJobResponse - a model defined in OpenAPI

        :param training_job_name: The training_job_name of this DescribeTrainingJobResponse.
        :param training_job_arn: The training_job_arn of this DescribeTrainingJobResponse.
        :param tuning_job_arn: The tuning_job_arn of this DescribeTrainingJobResponse.
        :param labeling_job_arn: The labeling_job_arn of this DescribeTrainingJobResponse.
        :param auto_ml_job_arn: The auto_ml_job_arn of this DescribeTrainingJobResponse.
        :param model_artifacts: The model_artifacts of this DescribeTrainingJobResponse.
        :param training_job_status: The training_job_status of this DescribeTrainingJobResponse.
        :param secondary_status: The secondary_status of this DescribeTrainingJobResponse.
        :param failure_reason: The failure_reason of this DescribeTrainingJobResponse.
        :param hyper_parameters: The hyper_parameters of this DescribeTrainingJobResponse.
        :param algorithm_specification: The algorithm_specification of this DescribeTrainingJobResponse.
        :param role_arn: The role_arn of this DescribeTrainingJobResponse.
        :param input_data_config: The input_data_config of this DescribeTrainingJobResponse.
        :param output_data_config: The output_data_config of this DescribeTrainingJobResponse.
        :param resource_config: The resource_config of this DescribeTrainingJobResponse.
        :param vpc_config: The vpc_config of this DescribeTrainingJobResponse.
        :param stopping_condition: The stopping_condition of this DescribeTrainingJobResponse.
        :param creation_time: The creation_time of this DescribeTrainingJobResponse.
        :param training_start_time: The training_start_time of this DescribeTrainingJobResponse.
        :param training_end_time: The training_end_time of this DescribeTrainingJobResponse.
        :param last_modified_time: The last_modified_time of this DescribeTrainingJobResponse.
        :param secondary_status_transitions: The secondary_status_transitions of this DescribeTrainingJobResponse.
        :param final_metric_data_list: The final_metric_data_list of this DescribeTrainingJobResponse.
        :param enable_network_isolation: The enable_network_isolation of this DescribeTrainingJobResponse.
        :param enable_inter_container_traffic_encryption: The enable_inter_container_traffic_encryption of this DescribeTrainingJobResponse.
        :param enable_managed_spot_training: The enable_managed_spot_training of this DescribeTrainingJobResponse.
        :param checkpoint_config: The checkpoint_config of this DescribeTrainingJobResponse.
        :param training_time_in_seconds: The training_time_in_seconds of this DescribeTrainingJobResponse.
        :param billable_time_in_seconds: The billable_time_in_seconds of this DescribeTrainingJobResponse.
        :param debug_hook_config: The debug_hook_config of this DescribeTrainingJobResponse.
        :param experiment_config: The experiment_config of this DescribeTrainingJobResponse.
        :param debug_rule_configurations: The debug_rule_configurations of this DescribeTrainingJobResponse.
        :param tensor_board_output_config: The tensor_board_output_config of this DescribeTrainingJobResponse.
        :param debug_rule_evaluation_statuses: The debug_rule_evaluation_statuses of this DescribeTrainingJobResponse.
        :param profiler_config: The profiler_config of this DescribeTrainingJobResponse.
        :param profiler_rule_configurations: The profiler_rule_configurations of this DescribeTrainingJobResponse.
        :param profiler_rule_evaluation_statuses: The profiler_rule_evaluation_statuses of this DescribeTrainingJobResponse.
        :param profiling_status: The profiling_status of this DescribeTrainingJobResponse.
        :param retry_strategy: The retry_strategy of this DescribeTrainingJobResponse.
        :param environment: The environment of this DescribeTrainingJobResponse.
        :param warm_pool_status: The warm_pool_status of this DescribeTrainingJobResponse.
        """
        self.openapi_types = {
            'training_job_name': str,
            'training_job_arn': str,
            'tuning_job_arn': str,
            'labeling_job_arn': str,
            'auto_ml_job_arn': str,
            'model_artifacts': DescribeTrainingJobResponseModelArtifacts,
            'training_job_status': TrainingJobStatus,
            'secondary_status': SecondaryStatus,
            'failure_reason': str,
            'hyper_parameters': Dict,
            'algorithm_specification': DescribeTrainingJobResponseAlgorithmSpecification,
            'role_arn': str,
            'input_data_config': List,
            'output_data_config': DescribeTrainingJobResponseOutputDataConfig,
            'resource_config': DescribeTrainingJobResponseResourceConfig,
            'vpc_config': DescribeTrainingJobResponseVpcConfig,
            'stopping_condition': CreateTrainingJobRequestStoppingCondition,
            'creation_time': datetime,
            'training_start_time': datetime,
            'training_end_time': datetime,
            'last_modified_time': datetime,
            'secondary_status_transitions': List,
            'final_metric_data_list': List,
            'enable_network_isolation': bool,
            'enable_inter_container_traffic_encryption': bool,
            'enable_managed_spot_training': bool,
            'checkpoint_config': CheckpointConfig,
            'training_time_in_seconds': int,
            'billable_time_in_seconds': int,
            'debug_hook_config': DebugHookConfig,
            'experiment_config': ExperimentConfig,
            'debug_rule_configurations': List,
            'tensor_board_output_config': TensorBoardOutputConfig,
            'debug_rule_evaluation_statuses': List,
            'profiler_config': ProfilerConfig,
            'profiler_rule_configurations': List,
            'profiler_rule_evaluation_statuses': List,
            'profiling_status': ProfilingStatus,
            'retry_strategy': CreateTrainingJobRequestRetryStrategy,
            'environment': Dict,
            'warm_pool_status': DescribeTrainingJobResponseWarmPoolStatus
        }

        self.attribute_map = {
            'training_job_name': 'TrainingJobName',
            'training_job_arn': 'TrainingJobArn',
            'tuning_job_arn': 'TuningJobArn',
            'labeling_job_arn': 'LabelingJobArn',
            'auto_ml_job_arn': 'AutoMLJobArn',
            'model_artifacts': 'ModelArtifacts',
            'training_job_status': 'TrainingJobStatus',
            'secondary_status': 'SecondaryStatus',
            'failure_reason': 'FailureReason',
            'hyper_parameters': 'HyperParameters',
            'algorithm_specification': 'AlgorithmSpecification',
            'role_arn': 'RoleArn',
            'input_data_config': 'InputDataConfig',
            'output_data_config': 'OutputDataConfig',
            'resource_config': 'ResourceConfig',
            'vpc_config': 'VpcConfig',
            'stopping_condition': 'StoppingCondition',
            'creation_time': 'CreationTime',
            'training_start_time': 'TrainingStartTime',
            'training_end_time': 'TrainingEndTime',
            'last_modified_time': 'LastModifiedTime',
            'secondary_status_transitions': 'SecondaryStatusTransitions',
            'final_metric_data_list': 'FinalMetricDataList',
            'enable_network_isolation': 'EnableNetworkIsolation',
            'enable_inter_container_traffic_encryption': 'EnableInterContainerTrafficEncryption',
            'enable_managed_spot_training': 'EnableManagedSpotTraining',
            'checkpoint_config': 'CheckpointConfig',
            'training_time_in_seconds': 'TrainingTimeInSeconds',
            'billable_time_in_seconds': 'BillableTimeInSeconds',
            'debug_hook_config': 'DebugHookConfig',
            'experiment_config': 'ExperimentConfig',
            'debug_rule_configurations': 'DebugRuleConfigurations',
            'tensor_board_output_config': 'TensorBoardOutputConfig',
            'debug_rule_evaluation_statuses': 'DebugRuleEvaluationStatuses',
            'profiler_config': 'ProfilerConfig',
            'profiler_rule_configurations': 'ProfilerRuleConfigurations',
            'profiler_rule_evaluation_statuses': 'ProfilerRuleEvaluationStatuses',
            'profiling_status': 'ProfilingStatus',
            'retry_strategy': 'RetryStrategy',
            'environment': 'Environment',
            'warm_pool_status': 'WarmPoolStatus'
        }

        self._training_job_name = training_job_name
        self._training_job_arn = training_job_arn
        self._tuning_job_arn = tuning_job_arn
        self._labeling_job_arn = labeling_job_arn
        self._auto_ml_job_arn = auto_ml_job_arn
        self._model_artifacts = model_artifacts
        self._training_job_status = training_job_status
        self._secondary_status = secondary_status
        self._failure_reason = failure_reason
        self._hyper_parameters = hyper_parameters
        self._algorithm_specification = algorithm_specification
        self._role_arn = role_arn
        self._input_data_config = input_data_config
        self._output_data_config = output_data_config
        self._resource_config = resource_config
        self._vpc_config = vpc_config
        self._stopping_condition = stopping_condition
        self._creation_time = creation_time
        self._training_start_time = training_start_time
        self._training_end_time = training_end_time
        self._last_modified_time = last_modified_time
        self._secondary_status_transitions = secondary_status_transitions
        self._final_metric_data_list = final_metric_data_list
        self._enable_network_isolation = enable_network_isolation
        self._enable_inter_container_traffic_encryption = enable_inter_container_traffic_encryption
        self._enable_managed_spot_training = enable_managed_spot_training
        self._checkpoint_config = checkpoint_config
        self._training_time_in_seconds = training_time_in_seconds
        self._billable_time_in_seconds = billable_time_in_seconds
        self._debug_hook_config = debug_hook_config
        self._experiment_config = experiment_config
        self._debug_rule_configurations = debug_rule_configurations
        self._tensor_board_output_config = tensor_board_output_config
        self._debug_rule_evaluation_statuses = debug_rule_evaluation_statuses
        self._profiler_config = profiler_config
        self._profiler_rule_configurations = profiler_rule_configurations
        self._profiler_rule_evaluation_statuses = profiler_rule_evaluation_statuses
        self._profiling_status = profiling_status
        self._retry_strategy = retry_strategy
        self._environment = environment
        self._warm_pool_status = warm_pool_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTrainingJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTrainingJobResponse of this DescribeTrainingJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def training_job_name(self):
        """Gets the training_job_name of this DescribeTrainingJobResponse.


        :return: The training_job_name of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._training_job_name

    @training_job_name.setter
    def training_job_name(self, training_job_name):
        """Sets the training_job_name of this DescribeTrainingJobResponse.


        :param training_job_name: The training_job_name of this DescribeTrainingJobResponse.
        :type training_job_name: str
        """
        if training_job_name is None:
            raise ValueError("Invalid value for `training_job_name`, must not be `None`")

        self._training_job_name = training_job_name

    @property
    def training_job_arn(self):
        """Gets the training_job_arn of this DescribeTrainingJobResponse.


        :return: The training_job_arn of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._training_job_arn

    @training_job_arn.setter
    def training_job_arn(self, training_job_arn):
        """Sets the training_job_arn of this DescribeTrainingJobResponse.


        :param training_job_arn: The training_job_arn of this DescribeTrainingJobResponse.
        :type training_job_arn: str
        """
        if training_job_arn is None:
            raise ValueError("Invalid value for `training_job_arn`, must not be `None`")

        self._training_job_arn = training_job_arn

    @property
    def tuning_job_arn(self):
        """Gets the tuning_job_arn of this DescribeTrainingJobResponse.


        :return: The tuning_job_arn of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._tuning_job_arn

    @tuning_job_arn.setter
    def tuning_job_arn(self, tuning_job_arn):
        """Sets the tuning_job_arn of this DescribeTrainingJobResponse.


        :param tuning_job_arn: The tuning_job_arn of this DescribeTrainingJobResponse.
        :type tuning_job_arn: str
        """

        self._tuning_job_arn = tuning_job_arn

    @property
    def labeling_job_arn(self):
        """Gets the labeling_job_arn of this DescribeTrainingJobResponse.


        :return: The labeling_job_arn of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._labeling_job_arn

    @labeling_job_arn.setter
    def labeling_job_arn(self, labeling_job_arn):
        """Sets the labeling_job_arn of this DescribeTrainingJobResponse.


        :param labeling_job_arn: The labeling_job_arn of this DescribeTrainingJobResponse.
        :type labeling_job_arn: str
        """

        self._labeling_job_arn = labeling_job_arn

    @property
    def auto_ml_job_arn(self):
        """Gets the auto_ml_job_arn of this DescribeTrainingJobResponse.


        :return: The auto_ml_job_arn of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._auto_ml_job_arn

    @auto_ml_job_arn.setter
    def auto_ml_job_arn(self, auto_ml_job_arn):
        """Sets the auto_ml_job_arn of this DescribeTrainingJobResponse.


        :param auto_ml_job_arn: The auto_ml_job_arn of this DescribeTrainingJobResponse.
        :type auto_ml_job_arn: str
        """

        self._auto_ml_job_arn = auto_ml_job_arn

    @property
    def model_artifacts(self):
        """Gets the model_artifacts of this DescribeTrainingJobResponse.


        :return: The model_artifacts of this DescribeTrainingJobResponse.
        :rtype: DescribeTrainingJobResponseModelArtifacts
        """
        return self._model_artifacts

    @model_artifacts.setter
    def model_artifacts(self, model_artifacts):
        """Sets the model_artifacts of this DescribeTrainingJobResponse.


        :param model_artifacts: The model_artifacts of this DescribeTrainingJobResponse.
        :type model_artifacts: DescribeTrainingJobResponseModelArtifacts
        """
        if model_artifacts is None:
            raise ValueError("Invalid value for `model_artifacts`, must not be `None`")

        self._model_artifacts = model_artifacts

    @property
    def training_job_status(self):
        """Gets the training_job_status of this DescribeTrainingJobResponse.


        :return: The training_job_status of this DescribeTrainingJobResponse.
        :rtype: TrainingJobStatus
        """
        return self._training_job_status

    @training_job_status.setter
    def training_job_status(self, training_job_status):
        """Sets the training_job_status of this DescribeTrainingJobResponse.


        :param training_job_status: The training_job_status of this DescribeTrainingJobResponse.
        :type training_job_status: TrainingJobStatus
        """
        if training_job_status is None:
            raise ValueError("Invalid value for `training_job_status`, must not be `None`")

        self._training_job_status = training_job_status

    @property
    def secondary_status(self):
        """Gets the secondary_status of this DescribeTrainingJobResponse.


        :return: The secondary_status of this DescribeTrainingJobResponse.
        :rtype: SecondaryStatus
        """
        return self._secondary_status

    @secondary_status.setter
    def secondary_status(self, secondary_status):
        """Sets the secondary_status of this DescribeTrainingJobResponse.


        :param secondary_status: The secondary_status of this DescribeTrainingJobResponse.
        :type secondary_status: SecondaryStatus
        """
        if secondary_status is None:
            raise ValueError("Invalid value for `secondary_status`, must not be `None`")

        self._secondary_status = secondary_status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this DescribeTrainingJobResponse.


        :return: The failure_reason of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this DescribeTrainingJobResponse.


        :param failure_reason: The failure_reason of this DescribeTrainingJobResponse.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def hyper_parameters(self):
        """Gets the hyper_parameters of this DescribeTrainingJobResponse.


        :return: The hyper_parameters of this DescribeTrainingJobResponse.
        :rtype: Dict
        """
        return self._hyper_parameters

    @hyper_parameters.setter
    def hyper_parameters(self, hyper_parameters):
        """Sets the hyper_parameters of this DescribeTrainingJobResponse.


        :param hyper_parameters: The hyper_parameters of this DescribeTrainingJobResponse.
        :type hyper_parameters: Dict
        """

        self._hyper_parameters = hyper_parameters

    @property
    def algorithm_specification(self):
        """Gets the algorithm_specification of this DescribeTrainingJobResponse.


        :return: The algorithm_specification of this DescribeTrainingJobResponse.
        :rtype: DescribeTrainingJobResponseAlgorithmSpecification
        """
        return self._algorithm_specification

    @algorithm_specification.setter
    def algorithm_specification(self, algorithm_specification):
        """Sets the algorithm_specification of this DescribeTrainingJobResponse.


        :param algorithm_specification: The algorithm_specification of this DescribeTrainingJobResponse.
        :type algorithm_specification: DescribeTrainingJobResponseAlgorithmSpecification
        """
        if algorithm_specification is None:
            raise ValueError("Invalid value for `algorithm_specification`, must not be `None`")

        self._algorithm_specification = algorithm_specification

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribeTrainingJobResponse.


        :return: The role_arn of this DescribeTrainingJobResponse.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribeTrainingJobResponse.


        :param role_arn: The role_arn of this DescribeTrainingJobResponse.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def input_data_config(self):
        """Gets the input_data_config of this DescribeTrainingJobResponse.


        :return: The input_data_config of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this DescribeTrainingJobResponse.


        :param input_data_config: The input_data_config of this DescribeTrainingJobResponse.
        :type input_data_config: List
        """

        self._input_data_config = input_data_config

    @property
    def output_data_config(self):
        """Gets the output_data_config of this DescribeTrainingJobResponse.


        :return: The output_data_config of this DescribeTrainingJobResponse.
        :rtype: DescribeTrainingJobResponseOutputDataConfig
        """
        return self._output_data_config

    @output_data_config.setter
    def output_data_config(self, output_data_config):
        """Sets the output_data_config of this DescribeTrainingJobResponse.


        :param output_data_config: The output_data_config of this DescribeTrainingJobResponse.
        :type output_data_config: DescribeTrainingJobResponseOutputDataConfig
        """

        self._output_data_config = output_data_config

    @property
    def resource_config(self):
        """Gets the resource_config of this DescribeTrainingJobResponse.


        :return: The resource_config of this DescribeTrainingJobResponse.
        :rtype: DescribeTrainingJobResponseResourceConfig
        """
        return self._resource_config

    @resource_config.setter
    def resource_config(self, resource_config):
        """Sets the resource_config of this DescribeTrainingJobResponse.


        :param resource_config: The resource_config of this DescribeTrainingJobResponse.
        :type resource_config: DescribeTrainingJobResponseResourceConfig
        """
        if resource_config is None:
            raise ValueError("Invalid value for `resource_config`, must not be `None`")

        self._resource_config = resource_config

    @property
    def vpc_config(self):
        """Gets the vpc_config of this DescribeTrainingJobResponse.


        :return: The vpc_config of this DescribeTrainingJobResponse.
        :rtype: DescribeTrainingJobResponseVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this DescribeTrainingJobResponse.


        :param vpc_config: The vpc_config of this DescribeTrainingJobResponse.
        :type vpc_config: DescribeTrainingJobResponseVpcConfig
        """

        self._vpc_config = vpc_config

    @property
    def stopping_condition(self):
        """Gets the stopping_condition of this DescribeTrainingJobResponse.


        :return: The stopping_condition of this DescribeTrainingJobResponse.
        :rtype: CreateTrainingJobRequestStoppingCondition
        """
        return self._stopping_condition

    @stopping_condition.setter
    def stopping_condition(self, stopping_condition):
        """Sets the stopping_condition of this DescribeTrainingJobResponse.


        :param stopping_condition: The stopping_condition of this DescribeTrainingJobResponse.
        :type stopping_condition: CreateTrainingJobRequestStoppingCondition
        """
        if stopping_condition is None:
            raise ValueError("Invalid value for `stopping_condition`, must not be `None`")

        self._stopping_condition = stopping_condition

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeTrainingJobResponse.


        :return: The creation_time of this DescribeTrainingJobResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeTrainingJobResponse.


        :param creation_time: The creation_time of this DescribeTrainingJobResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def training_start_time(self):
        """Gets the training_start_time of this DescribeTrainingJobResponse.


        :return: The training_start_time of this DescribeTrainingJobResponse.
        :rtype: datetime
        """
        return self._training_start_time

    @training_start_time.setter
    def training_start_time(self, training_start_time):
        """Sets the training_start_time of this DescribeTrainingJobResponse.


        :param training_start_time: The training_start_time of this DescribeTrainingJobResponse.
        :type training_start_time: datetime
        """

        self._training_start_time = training_start_time

    @property
    def training_end_time(self):
        """Gets the training_end_time of this DescribeTrainingJobResponse.


        :return: The training_end_time of this DescribeTrainingJobResponse.
        :rtype: datetime
        """
        return self._training_end_time

    @training_end_time.setter
    def training_end_time(self, training_end_time):
        """Sets the training_end_time of this DescribeTrainingJobResponse.


        :param training_end_time: The training_end_time of this DescribeTrainingJobResponse.
        :type training_end_time: datetime
        """

        self._training_end_time = training_end_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this DescribeTrainingJobResponse.


        :return: The last_modified_time of this DescribeTrainingJobResponse.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this DescribeTrainingJobResponse.


        :param last_modified_time: The last_modified_time of this DescribeTrainingJobResponse.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def secondary_status_transitions(self):
        """Gets the secondary_status_transitions of this DescribeTrainingJobResponse.


        :return: The secondary_status_transitions of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._secondary_status_transitions

    @secondary_status_transitions.setter
    def secondary_status_transitions(self, secondary_status_transitions):
        """Sets the secondary_status_transitions of this DescribeTrainingJobResponse.


        :param secondary_status_transitions: The secondary_status_transitions of this DescribeTrainingJobResponse.
        :type secondary_status_transitions: List
        """

        self._secondary_status_transitions = secondary_status_transitions

    @property
    def final_metric_data_list(self):
        """Gets the final_metric_data_list of this DescribeTrainingJobResponse.


        :return: The final_metric_data_list of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._final_metric_data_list

    @final_metric_data_list.setter
    def final_metric_data_list(self, final_metric_data_list):
        """Sets the final_metric_data_list of this DescribeTrainingJobResponse.


        :param final_metric_data_list: The final_metric_data_list of this DescribeTrainingJobResponse.
        :type final_metric_data_list: List
        """

        self._final_metric_data_list = final_metric_data_list

    @property
    def enable_network_isolation(self):
        """Gets the enable_network_isolation of this DescribeTrainingJobResponse.


        :return: The enable_network_isolation of this DescribeTrainingJobResponse.
        :rtype: bool
        """
        return self._enable_network_isolation

    @enable_network_isolation.setter
    def enable_network_isolation(self, enable_network_isolation):
        """Sets the enable_network_isolation of this DescribeTrainingJobResponse.


        :param enable_network_isolation: The enable_network_isolation of this DescribeTrainingJobResponse.
        :type enable_network_isolation: bool
        """

        self._enable_network_isolation = enable_network_isolation

    @property
    def enable_inter_container_traffic_encryption(self):
        """Gets the enable_inter_container_traffic_encryption of this DescribeTrainingJobResponse.


        :return: The enable_inter_container_traffic_encryption of this DescribeTrainingJobResponse.
        :rtype: bool
        """
        return self._enable_inter_container_traffic_encryption

    @enable_inter_container_traffic_encryption.setter
    def enable_inter_container_traffic_encryption(self, enable_inter_container_traffic_encryption):
        """Sets the enable_inter_container_traffic_encryption of this DescribeTrainingJobResponse.


        :param enable_inter_container_traffic_encryption: The enable_inter_container_traffic_encryption of this DescribeTrainingJobResponse.
        :type enable_inter_container_traffic_encryption: bool
        """

        self._enable_inter_container_traffic_encryption = enable_inter_container_traffic_encryption

    @property
    def enable_managed_spot_training(self):
        """Gets the enable_managed_spot_training of this DescribeTrainingJobResponse.


        :return: The enable_managed_spot_training of this DescribeTrainingJobResponse.
        :rtype: bool
        """
        return self._enable_managed_spot_training

    @enable_managed_spot_training.setter
    def enable_managed_spot_training(self, enable_managed_spot_training):
        """Sets the enable_managed_spot_training of this DescribeTrainingJobResponse.


        :param enable_managed_spot_training: The enable_managed_spot_training of this DescribeTrainingJobResponse.
        :type enable_managed_spot_training: bool
        """

        self._enable_managed_spot_training = enable_managed_spot_training

    @property
    def checkpoint_config(self):
        """Gets the checkpoint_config of this DescribeTrainingJobResponse.


        :return: The checkpoint_config of this DescribeTrainingJobResponse.
        :rtype: CheckpointConfig
        """
        return self._checkpoint_config

    @checkpoint_config.setter
    def checkpoint_config(self, checkpoint_config):
        """Sets the checkpoint_config of this DescribeTrainingJobResponse.


        :param checkpoint_config: The checkpoint_config of this DescribeTrainingJobResponse.
        :type checkpoint_config: CheckpointConfig
        """

        self._checkpoint_config = checkpoint_config

    @property
    def training_time_in_seconds(self):
        """Gets the training_time_in_seconds of this DescribeTrainingJobResponse.


        :return: The training_time_in_seconds of this DescribeTrainingJobResponse.
        :rtype: int
        """
        return self._training_time_in_seconds

    @training_time_in_seconds.setter
    def training_time_in_seconds(self, training_time_in_seconds):
        """Sets the training_time_in_seconds of this DescribeTrainingJobResponse.


        :param training_time_in_seconds: The training_time_in_seconds of this DescribeTrainingJobResponse.
        :type training_time_in_seconds: int
        """

        self._training_time_in_seconds = training_time_in_seconds

    @property
    def billable_time_in_seconds(self):
        """Gets the billable_time_in_seconds of this DescribeTrainingJobResponse.


        :return: The billable_time_in_seconds of this DescribeTrainingJobResponse.
        :rtype: int
        """
        return self._billable_time_in_seconds

    @billable_time_in_seconds.setter
    def billable_time_in_seconds(self, billable_time_in_seconds):
        """Sets the billable_time_in_seconds of this DescribeTrainingJobResponse.


        :param billable_time_in_seconds: The billable_time_in_seconds of this DescribeTrainingJobResponse.
        :type billable_time_in_seconds: int
        """

        self._billable_time_in_seconds = billable_time_in_seconds

    @property
    def debug_hook_config(self):
        """Gets the debug_hook_config of this DescribeTrainingJobResponse.


        :return: The debug_hook_config of this DescribeTrainingJobResponse.
        :rtype: DebugHookConfig
        """
        return self._debug_hook_config

    @debug_hook_config.setter
    def debug_hook_config(self, debug_hook_config):
        """Sets the debug_hook_config of this DescribeTrainingJobResponse.


        :param debug_hook_config: The debug_hook_config of this DescribeTrainingJobResponse.
        :type debug_hook_config: DebugHookConfig
        """

        self._debug_hook_config = debug_hook_config

    @property
    def experiment_config(self):
        """Gets the experiment_config of this DescribeTrainingJobResponse.


        :return: The experiment_config of this DescribeTrainingJobResponse.
        :rtype: ExperimentConfig
        """
        return self._experiment_config

    @experiment_config.setter
    def experiment_config(self, experiment_config):
        """Sets the experiment_config of this DescribeTrainingJobResponse.


        :param experiment_config: The experiment_config of this DescribeTrainingJobResponse.
        :type experiment_config: ExperimentConfig
        """

        self._experiment_config = experiment_config

    @property
    def debug_rule_configurations(self):
        """Gets the debug_rule_configurations of this DescribeTrainingJobResponse.


        :return: The debug_rule_configurations of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._debug_rule_configurations

    @debug_rule_configurations.setter
    def debug_rule_configurations(self, debug_rule_configurations):
        """Sets the debug_rule_configurations of this DescribeTrainingJobResponse.


        :param debug_rule_configurations: The debug_rule_configurations of this DescribeTrainingJobResponse.
        :type debug_rule_configurations: List
        """

        self._debug_rule_configurations = debug_rule_configurations

    @property
    def tensor_board_output_config(self):
        """Gets the tensor_board_output_config of this DescribeTrainingJobResponse.


        :return: The tensor_board_output_config of this DescribeTrainingJobResponse.
        :rtype: TensorBoardOutputConfig
        """
        return self._tensor_board_output_config

    @tensor_board_output_config.setter
    def tensor_board_output_config(self, tensor_board_output_config):
        """Sets the tensor_board_output_config of this DescribeTrainingJobResponse.


        :param tensor_board_output_config: The tensor_board_output_config of this DescribeTrainingJobResponse.
        :type tensor_board_output_config: TensorBoardOutputConfig
        """

        self._tensor_board_output_config = tensor_board_output_config

    @property
    def debug_rule_evaluation_statuses(self):
        """Gets the debug_rule_evaluation_statuses of this DescribeTrainingJobResponse.


        :return: The debug_rule_evaluation_statuses of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._debug_rule_evaluation_statuses

    @debug_rule_evaluation_statuses.setter
    def debug_rule_evaluation_statuses(self, debug_rule_evaluation_statuses):
        """Sets the debug_rule_evaluation_statuses of this DescribeTrainingJobResponse.


        :param debug_rule_evaluation_statuses: The debug_rule_evaluation_statuses of this DescribeTrainingJobResponse.
        :type debug_rule_evaluation_statuses: List
        """

        self._debug_rule_evaluation_statuses = debug_rule_evaluation_statuses

    @property
    def profiler_config(self):
        """Gets the profiler_config of this DescribeTrainingJobResponse.


        :return: The profiler_config of this DescribeTrainingJobResponse.
        :rtype: ProfilerConfig
        """
        return self._profiler_config

    @profiler_config.setter
    def profiler_config(self, profiler_config):
        """Sets the profiler_config of this DescribeTrainingJobResponse.


        :param profiler_config: The profiler_config of this DescribeTrainingJobResponse.
        :type profiler_config: ProfilerConfig
        """

        self._profiler_config = profiler_config

    @property
    def profiler_rule_configurations(self):
        """Gets the profiler_rule_configurations of this DescribeTrainingJobResponse.


        :return: The profiler_rule_configurations of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._profiler_rule_configurations

    @profiler_rule_configurations.setter
    def profiler_rule_configurations(self, profiler_rule_configurations):
        """Sets the profiler_rule_configurations of this DescribeTrainingJobResponse.


        :param profiler_rule_configurations: The profiler_rule_configurations of this DescribeTrainingJobResponse.
        :type profiler_rule_configurations: List
        """

        self._profiler_rule_configurations = profiler_rule_configurations

    @property
    def profiler_rule_evaluation_statuses(self):
        """Gets the profiler_rule_evaluation_statuses of this DescribeTrainingJobResponse.


        :return: The profiler_rule_evaluation_statuses of this DescribeTrainingJobResponse.
        :rtype: List
        """
        return self._profiler_rule_evaluation_statuses

    @profiler_rule_evaluation_statuses.setter
    def profiler_rule_evaluation_statuses(self, profiler_rule_evaluation_statuses):
        """Sets the profiler_rule_evaluation_statuses of this DescribeTrainingJobResponse.


        :param profiler_rule_evaluation_statuses: The profiler_rule_evaluation_statuses of this DescribeTrainingJobResponse.
        :type profiler_rule_evaluation_statuses: List
        """

        self._profiler_rule_evaluation_statuses = profiler_rule_evaluation_statuses

    @property
    def profiling_status(self):
        """Gets the profiling_status of this DescribeTrainingJobResponse.


        :return: The profiling_status of this DescribeTrainingJobResponse.
        :rtype: ProfilingStatus
        """
        return self._profiling_status

    @profiling_status.setter
    def profiling_status(self, profiling_status):
        """Sets the profiling_status of this DescribeTrainingJobResponse.


        :param profiling_status: The profiling_status of this DescribeTrainingJobResponse.
        :type profiling_status: ProfilingStatus
        """

        self._profiling_status = profiling_status

    @property
    def retry_strategy(self):
        """Gets the retry_strategy of this DescribeTrainingJobResponse.


        :return: The retry_strategy of this DescribeTrainingJobResponse.
        :rtype: CreateTrainingJobRequestRetryStrategy
        """
        return self._retry_strategy

    @retry_strategy.setter
    def retry_strategy(self, retry_strategy):
        """Sets the retry_strategy of this DescribeTrainingJobResponse.


        :param retry_strategy: The retry_strategy of this DescribeTrainingJobResponse.
        :type retry_strategy: CreateTrainingJobRequestRetryStrategy
        """

        self._retry_strategy = retry_strategy

    @property
    def environment(self):
        """Gets the environment of this DescribeTrainingJobResponse.


        :return: The environment of this DescribeTrainingJobResponse.
        :rtype: Dict
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this DescribeTrainingJobResponse.


        :param environment: The environment of this DescribeTrainingJobResponse.
        :type environment: Dict
        """

        self._environment = environment

    @property
    def warm_pool_status(self):
        """Gets the warm_pool_status of this DescribeTrainingJobResponse.


        :return: The warm_pool_status of this DescribeTrainingJobResponse.
        :rtype: DescribeTrainingJobResponseWarmPoolStatus
        """
        return self._warm_pool_status

    @warm_pool_status.setter
    def warm_pool_status(self, warm_pool_status):
        """Sets the warm_pool_status of this DescribeTrainingJobResponse.


        :param warm_pool_status: The warm_pool_status of this DescribeTrainingJobResponse.
        :type warm_pool_status: DescribeTrainingJobResponseWarmPoolStatus
        """

        self._warm_pool_status = warm_pool_status
