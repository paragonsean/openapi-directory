# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateWorkforceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workforce_arn: str=None):
        """CreateWorkforceResponse - a model defined in OpenAPI

        :param workforce_arn: The workforce_arn of this CreateWorkforceResponse.
        """
        self.openapi_types = {
            'workforce_arn': str
        }

        self.attribute_map = {
            'workforce_arn': 'WorkforceArn'
        }

        self._workforce_arn = workforce_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWorkforceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWorkforceResponse of this CreateWorkforceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workforce_arn(self):
        """Gets the workforce_arn of this CreateWorkforceResponse.


        :return: The workforce_arn of this CreateWorkforceResponse.
        :rtype: str
        """
        return self._workforce_arn

    @workforce_arn.setter
    def workforce_arn(self, workforce_arn):
        """Sets the workforce_arn of this CreateWorkforceResponse.


        :param workforce_arn: The workforce_arn of this CreateWorkforceResponse.
        :type workforce_arn: str
        """
        if workforce_arn is None:
            raise ValueError("Invalid value for `workforce_arn`, must not be `None`")

        self._workforce_arn = workforce_arn
