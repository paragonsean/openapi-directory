# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint import Endpoint
from openapi_server.models.feature_group import FeatureGroup
from openapi_server.models.model_dashboard_model import ModelDashboardModel
from openapi_server.models.model_package import ModelPackage
from openapi_server.models.model_package_group import ModelPackageGroup
from openapi_server.models.pipeline import Pipeline
from openapi_server.models.pipeline_execution import PipelineExecution
from openapi_server.models.search_record_experiment import SearchRecordExperiment
from openapi_server.models.search_record_feature_metadata import SearchRecordFeatureMetadata
from openapi_server.models.search_record_hyper_parameter_tuning_job import SearchRecordHyperParameterTuningJob
from openapi_server.models.search_record_model_card import SearchRecordModelCard
from openapi_server.models.search_record_project import SearchRecordProject
from openapi_server.models.search_record_training_job import SearchRecordTrainingJob
from openapi_server.models.search_record_trial import SearchRecordTrial
from openapi_server.models.search_record_trial_component import SearchRecordTrialComponent
from openapi_server import util


class SearchRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, training_job: SearchRecordTrainingJob=None, experiment: SearchRecordExperiment=None, trial: SearchRecordTrial=None, trial_component: SearchRecordTrialComponent=None, endpoint: Endpoint=None, model_package: ModelPackage=None, model_package_group: ModelPackageGroup=None, pipeline: Pipeline=None, pipeline_execution: PipelineExecution=None, feature_group: FeatureGroup=None, project: SearchRecordProject=None, feature_metadata: SearchRecordFeatureMetadata=None, hyper_parameter_tuning_job: SearchRecordHyperParameterTuningJob=None, model: ModelDashboardModel=None, model_card: SearchRecordModelCard=None):
        """SearchRecord - a model defined in OpenAPI

        :param training_job: The training_job of this SearchRecord.
        :param experiment: The experiment of this SearchRecord.
        :param trial: The trial of this SearchRecord.
        :param trial_component: The trial_component of this SearchRecord.
        :param endpoint: The endpoint of this SearchRecord.
        :param model_package: The model_package of this SearchRecord.
        :param model_package_group: The model_package_group of this SearchRecord.
        :param pipeline: The pipeline of this SearchRecord.
        :param pipeline_execution: The pipeline_execution of this SearchRecord.
        :param feature_group: The feature_group of this SearchRecord.
        :param project: The project of this SearchRecord.
        :param feature_metadata: The feature_metadata of this SearchRecord.
        :param hyper_parameter_tuning_job: The hyper_parameter_tuning_job of this SearchRecord.
        :param model: The model of this SearchRecord.
        :param model_card: The model_card of this SearchRecord.
        """
        self.openapi_types = {
            'training_job': SearchRecordTrainingJob,
            'experiment': SearchRecordExperiment,
            'trial': SearchRecordTrial,
            'trial_component': SearchRecordTrialComponent,
            'endpoint': Endpoint,
            'model_package': ModelPackage,
            'model_package_group': ModelPackageGroup,
            'pipeline': Pipeline,
            'pipeline_execution': PipelineExecution,
            'feature_group': FeatureGroup,
            'project': SearchRecordProject,
            'feature_metadata': SearchRecordFeatureMetadata,
            'hyper_parameter_tuning_job': SearchRecordHyperParameterTuningJob,
            'model': ModelDashboardModel,
            'model_card': SearchRecordModelCard
        }

        self.attribute_map = {
            'training_job': 'TrainingJob',
            'experiment': 'Experiment',
            'trial': 'Trial',
            'trial_component': 'TrialComponent',
            'endpoint': 'Endpoint',
            'model_package': 'ModelPackage',
            'model_package_group': 'ModelPackageGroup',
            'pipeline': 'Pipeline',
            'pipeline_execution': 'PipelineExecution',
            'feature_group': 'FeatureGroup',
            'project': 'Project',
            'feature_metadata': 'FeatureMetadata',
            'hyper_parameter_tuning_job': 'HyperParameterTuningJob',
            'model': 'Model',
            'model_card': 'ModelCard'
        }

        self._training_job = training_job
        self._experiment = experiment
        self._trial = trial
        self._trial_component = trial_component
        self._endpoint = endpoint
        self._model_package = model_package
        self._model_package_group = model_package_group
        self._pipeline = pipeline
        self._pipeline_execution = pipeline_execution
        self._feature_group = feature_group
        self._project = project
        self._feature_metadata = feature_metadata
        self._hyper_parameter_tuning_job = hyper_parameter_tuning_job
        self._model = model
        self._model_card = model_card

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchRecord of this SearchRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def training_job(self):
        """Gets the training_job of this SearchRecord.


        :return: The training_job of this SearchRecord.
        :rtype: SearchRecordTrainingJob
        """
        return self._training_job

    @training_job.setter
    def training_job(self, training_job):
        """Sets the training_job of this SearchRecord.


        :param training_job: The training_job of this SearchRecord.
        :type training_job: SearchRecordTrainingJob
        """

        self._training_job = training_job

    @property
    def experiment(self):
        """Gets the experiment of this SearchRecord.


        :return: The experiment of this SearchRecord.
        :rtype: SearchRecordExperiment
        """
        return self._experiment

    @experiment.setter
    def experiment(self, experiment):
        """Sets the experiment of this SearchRecord.


        :param experiment: The experiment of this SearchRecord.
        :type experiment: SearchRecordExperiment
        """

        self._experiment = experiment

    @property
    def trial(self):
        """Gets the trial of this SearchRecord.


        :return: The trial of this SearchRecord.
        :rtype: SearchRecordTrial
        """
        return self._trial

    @trial.setter
    def trial(self, trial):
        """Sets the trial of this SearchRecord.


        :param trial: The trial of this SearchRecord.
        :type trial: SearchRecordTrial
        """

        self._trial = trial

    @property
    def trial_component(self):
        """Gets the trial_component of this SearchRecord.


        :return: The trial_component of this SearchRecord.
        :rtype: SearchRecordTrialComponent
        """
        return self._trial_component

    @trial_component.setter
    def trial_component(self, trial_component):
        """Sets the trial_component of this SearchRecord.


        :param trial_component: The trial_component of this SearchRecord.
        :type trial_component: SearchRecordTrialComponent
        """

        self._trial_component = trial_component

    @property
    def endpoint(self):
        """Gets the endpoint of this SearchRecord.


        :return: The endpoint of this SearchRecord.
        :rtype: Endpoint
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this SearchRecord.


        :param endpoint: The endpoint of this SearchRecord.
        :type endpoint: Endpoint
        """

        self._endpoint = endpoint

    @property
    def model_package(self):
        """Gets the model_package of this SearchRecord.


        :return: The model_package of this SearchRecord.
        :rtype: ModelPackage
        """
        return self._model_package

    @model_package.setter
    def model_package(self, model_package):
        """Sets the model_package of this SearchRecord.


        :param model_package: The model_package of this SearchRecord.
        :type model_package: ModelPackage
        """

        self._model_package = model_package

    @property
    def model_package_group(self):
        """Gets the model_package_group of this SearchRecord.


        :return: The model_package_group of this SearchRecord.
        :rtype: ModelPackageGroup
        """
        return self._model_package_group

    @model_package_group.setter
    def model_package_group(self, model_package_group):
        """Sets the model_package_group of this SearchRecord.


        :param model_package_group: The model_package_group of this SearchRecord.
        :type model_package_group: ModelPackageGroup
        """

        self._model_package_group = model_package_group

    @property
    def pipeline(self):
        """Gets the pipeline of this SearchRecord.


        :return: The pipeline of this SearchRecord.
        :rtype: Pipeline
        """
        return self._pipeline

    @pipeline.setter
    def pipeline(self, pipeline):
        """Sets the pipeline of this SearchRecord.


        :param pipeline: The pipeline of this SearchRecord.
        :type pipeline: Pipeline
        """

        self._pipeline = pipeline

    @property
    def pipeline_execution(self):
        """Gets the pipeline_execution of this SearchRecord.


        :return: The pipeline_execution of this SearchRecord.
        :rtype: PipelineExecution
        """
        return self._pipeline_execution

    @pipeline_execution.setter
    def pipeline_execution(self, pipeline_execution):
        """Sets the pipeline_execution of this SearchRecord.


        :param pipeline_execution: The pipeline_execution of this SearchRecord.
        :type pipeline_execution: PipelineExecution
        """

        self._pipeline_execution = pipeline_execution

    @property
    def feature_group(self):
        """Gets the feature_group of this SearchRecord.


        :return: The feature_group of this SearchRecord.
        :rtype: FeatureGroup
        """
        return self._feature_group

    @feature_group.setter
    def feature_group(self, feature_group):
        """Sets the feature_group of this SearchRecord.


        :param feature_group: The feature_group of this SearchRecord.
        :type feature_group: FeatureGroup
        """

        self._feature_group = feature_group

    @property
    def project(self):
        """Gets the project of this SearchRecord.


        :return: The project of this SearchRecord.
        :rtype: SearchRecordProject
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this SearchRecord.


        :param project: The project of this SearchRecord.
        :type project: SearchRecordProject
        """

        self._project = project

    @property
    def feature_metadata(self):
        """Gets the feature_metadata of this SearchRecord.


        :return: The feature_metadata of this SearchRecord.
        :rtype: SearchRecordFeatureMetadata
        """
        return self._feature_metadata

    @feature_metadata.setter
    def feature_metadata(self, feature_metadata):
        """Sets the feature_metadata of this SearchRecord.


        :param feature_metadata: The feature_metadata of this SearchRecord.
        :type feature_metadata: SearchRecordFeatureMetadata
        """

        self._feature_metadata = feature_metadata

    @property
    def hyper_parameter_tuning_job(self):
        """Gets the hyper_parameter_tuning_job of this SearchRecord.


        :return: The hyper_parameter_tuning_job of this SearchRecord.
        :rtype: SearchRecordHyperParameterTuningJob
        """
        return self._hyper_parameter_tuning_job

    @hyper_parameter_tuning_job.setter
    def hyper_parameter_tuning_job(self, hyper_parameter_tuning_job):
        """Sets the hyper_parameter_tuning_job of this SearchRecord.


        :param hyper_parameter_tuning_job: The hyper_parameter_tuning_job of this SearchRecord.
        :type hyper_parameter_tuning_job: SearchRecordHyperParameterTuningJob
        """

        self._hyper_parameter_tuning_job = hyper_parameter_tuning_job

    @property
    def model(self):
        """Gets the model of this SearchRecord.


        :return: The model of this SearchRecord.
        :rtype: ModelDashboardModel
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this SearchRecord.


        :param model: The model of this SearchRecord.
        :type model: ModelDashboardModel
        """

        self._model = model

    @property
    def model_card(self):
        """Gets the model_card of this SearchRecord.


        :return: The model_card of this SearchRecord.
        :rtype: SearchRecordModelCard
        """
        return self._model_card

    @model_card.setter
    def model_card(self, model_card):
        """Sets the model_card of this SearchRecord.


        :param model_card: The model_card of this SearchRecord.
        :type model_card: SearchRecordModelCard
        """

        self._model_card = model_card
