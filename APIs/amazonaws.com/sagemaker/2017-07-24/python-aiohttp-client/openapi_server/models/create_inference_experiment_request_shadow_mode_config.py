# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateInferenceExperimentRequestShadowModeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_model_variant_name: str=None, shadow_model_variants: List=None):
        """CreateInferenceExperimentRequestShadowModeConfig - a model defined in OpenAPI

        :param source_model_variant_name: The source_model_variant_name of this CreateInferenceExperimentRequestShadowModeConfig.
        :param shadow_model_variants: The shadow_model_variants of this CreateInferenceExperimentRequestShadowModeConfig.
        """
        self.openapi_types = {
            'source_model_variant_name': str,
            'shadow_model_variants': List
        }

        self.attribute_map = {
            'source_model_variant_name': 'SourceModelVariantName',
            'shadow_model_variants': 'ShadowModelVariants'
        }

        self._source_model_variant_name = source_model_variant_name
        self._shadow_model_variants = shadow_model_variants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInferenceExperimentRequestShadowModeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInferenceExperimentRequest_ShadowModeConfig of this CreateInferenceExperimentRequestShadowModeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_model_variant_name(self):
        """Gets the source_model_variant_name of this CreateInferenceExperimentRequestShadowModeConfig.


        :return: The source_model_variant_name of this CreateInferenceExperimentRequestShadowModeConfig.
        :rtype: str
        """
        return self._source_model_variant_name

    @source_model_variant_name.setter
    def source_model_variant_name(self, source_model_variant_name):
        """Sets the source_model_variant_name of this CreateInferenceExperimentRequestShadowModeConfig.


        :param source_model_variant_name: The source_model_variant_name of this CreateInferenceExperimentRequestShadowModeConfig.
        :type source_model_variant_name: str
        """
        if source_model_variant_name is None:
            raise ValueError("Invalid value for `source_model_variant_name`, must not be `None`")

        self._source_model_variant_name = source_model_variant_name

    @property
    def shadow_model_variants(self):
        """Gets the shadow_model_variants of this CreateInferenceExperimentRequestShadowModeConfig.


        :return: The shadow_model_variants of this CreateInferenceExperimentRequestShadowModeConfig.
        :rtype: List
        """
        return self._shadow_model_variants

    @shadow_model_variants.setter
    def shadow_model_variants(self, shadow_model_variants):
        """Sets the shadow_model_variants of this CreateInferenceExperimentRequestShadowModeConfig.


        :param shadow_model_variants: The shadow_model_variants of this CreateInferenceExperimentRequestShadowModeConfig.
        :type shadow_model_variants: List
        """
        if shadow_model_variants is None:
            raise ValueError("Invalid value for `shadow_model_variants`, must not be `None`")

        self._shadow_model_variants = shadow_model_variants
