# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryLineageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vertices: List=None, edges: List=None, next_token: str=None):
        """QueryLineageResponse - a model defined in OpenAPI

        :param vertices: The vertices of this QueryLineageResponse.
        :param edges: The edges of this QueryLineageResponse.
        :param next_token: The next_token of this QueryLineageResponse.
        """
        self.openapi_types = {
            'vertices': List,
            'edges': List,
            'next_token': str
        }

        self.attribute_map = {
            'vertices': 'Vertices',
            'edges': 'Edges',
            'next_token': 'NextToken'
        }

        self._vertices = vertices
        self._edges = edges
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryLineageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryLineageResponse of this QueryLineageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vertices(self):
        """Gets the vertices of this QueryLineageResponse.


        :return: The vertices of this QueryLineageResponse.
        :rtype: List
        """
        return self._vertices

    @vertices.setter
    def vertices(self, vertices):
        """Sets the vertices of this QueryLineageResponse.


        :param vertices: The vertices of this QueryLineageResponse.
        :type vertices: List
        """

        self._vertices = vertices

    @property
    def edges(self):
        """Gets the edges of this QueryLineageResponse.


        :return: The edges of this QueryLineageResponse.
        :rtype: List
        """
        return self._edges

    @edges.setter
    def edges(self, edges):
        """Sets the edges of this QueryLineageResponse.


        :param edges: The edges of this QueryLineageResponse.
        :type edges: List
        """

        self._edges = edges

    @property
    def next_token(self):
        """Gets the next_token of this QueryLineageResponse.


        :return: The next_token of this QueryLineageResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this QueryLineageResponse.


        :param next_token: The next_token of this QueryLineageResponse.
        :type next_token: str
        """

        self._next_token = next_token
