# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.trial_component_primary_status import TrialComponentPrimaryStatus
from openapi_server import util


class TrialComponentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_status: TrialComponentPrimaryStatus=None, message: str=None):
        """TrialComponentStatus - a model defined in OpenAPI

        :param primary_status: The primary_status of this TrialComponentStatus.
        :param message: The message of this TrialComponentStatus.
        """
        self.openapi_types = {
            'primary_status': TrialComponentPrimaryStatus,
            'message': str
        }

        self.attribute_map = {
            'primary_status': 'PrimaryStatus',
            'message': 'Message'
        }

        self._primary_status = primary_status
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrialComponentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrialComponentStatus of this TrialComponentStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_status(self):
        """Gets the primary_status of this TrialComponentStatus.


        :return: The primary_status of this TrialComponentStatus.
        :rtype: TrialComponentPrimaryStatus
        """
        return self._primary_status

    @primary_status.setter
    def primary_status(self, primary_status):
        """Sets the primary_status of this TrialComponentStatus.


        :param primary_status: The primary_status of this TrialComponentStatus.
        :type primary_status: TrialComponentPrimaryStatus
        """

        self._primary_status = primary_status

    @property
    def message(self):
        """Gets the message of this TrialComponentStatus.


        :return: The message of this TrialComponentStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TrialComponentStatus.


        :param message: The message of this TrialComponentStatus.
        :type message: str
        """

        self._message = message
