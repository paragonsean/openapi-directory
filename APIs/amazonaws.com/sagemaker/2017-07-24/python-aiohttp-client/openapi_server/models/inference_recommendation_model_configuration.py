# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InferenceRecommendationModelConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inference_specification_name: str=None, environment_parameters: List=None, compilation_job_name: str=None):
        """InferenceRecommendationModelConfiguration - a model defined in OpenAPI

        :param inference_specification_name: The inference_specification_name of this InferenceRecommendationModelConfiguration.
        :param environment_parameters: The environment_parameters of this InferenceRecommendationModelConfiguration.
        :param compilation_job_name: The compilation_job_name of this InferenceRecommendationModelConfiguration.
        """
        self.openapi_types = {
            'inference_specification_name': str,
            'environment_parameters': List,
            'compilation_job_name': str
        }

        self.attribute_map = {
            'inference_specification_name': 'InferenceSpecificationName',
            'environment_parameters': 'EnvironmentParameters',
            'compilation_job_name': 'CompilationJobName'
        }

        self._inference_specification_name = inference_specification_name
        self._environment_parameters = environment_parameters
        self._compilation_job_name = compilation_job_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InferenceRecommendationModelConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InferenceRecommendation_ModelConfiguration of this InferenceRecommendationModelConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inference_specification_name(self):
        """Gets the inference_specification_name of this InferenceRecommendationModelConfiguration.


        :return: The inference_specification_name of this InferenceRecommendationModelConfiguration.
        :rtype: str
        """
        return self._inference_specification_name

    @inference_specification_name.setter
    def inference_specification_name(self, inference_specification_name):
        """Sets the inference_specification_name of this InferenceRecommendationModelConfiguration.


        :param inference_specification_name: The inference_specification_name of this InferenceRecommendationModelConfiguration.
        :type inference_specification_name: str
        """

        self._inference_specification_name = inference_specification_name

    @property
    def environment_parameters(self):
        """Gets the environment_parameters of this InferenceRecommendationModelConfiguration.


        :return: The environment_parameters of this InferenceRecommendationModelConfiguration.
        :rtype: List
        """
        return self._environment_parameters

    @environment_parameters.setter
    def environment_parameters(self, environment_parameters):
        """Sets the environment_parameters of this InferenceRecommendationModelConfiguration.


        :param environment_parameters: The environment_parameters of this InferenceRecommendationModelConfiguration.
        :type environment_parameters: List
        """

        self._environment_parameters = environment_parameters

    @property
    def compilation_job_name(self):
        """Gets the compilation_job_name of this InferenceRecommendationModelConfiguration.


        :return: The compilation_job_name of this InferenceRecommendationModelConfiguration.
        :rtype: str
        """
        return self._compilation_job_name

    @compilation_job_name.setter
    def compilation_job_name(self, compilation_job_name):
        """Sets the compilation_job_name of this InferenceRecommendationModelConfiguration.


        :param compilation_job_name: The compilation_job_name of this InferenceRecommendationModelConfiguration.
        :type compilation_job_name: str
        """

        self._compilation_job_name = compilation_job_name
