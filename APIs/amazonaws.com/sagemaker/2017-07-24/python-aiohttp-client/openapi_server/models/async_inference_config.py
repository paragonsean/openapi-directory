# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.async_inference_config_client_config import AsyncInferenceConfigClientConfig
from openapi_server.models.async_inference_config_output_config import AsyncInferenceConfigOutputConfig
from openapi_server import util


class AsyncInferenceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_config: AsyncInferenceConfigClientConfig=None, output_config: AsyncInferenceConfigOutputConfig=None):
        """AsyncInferenceConfig - a model defined in OpenAPI

        :param client_config: The client_config of this AsyncInferenceConfig.
        :param output_config: The output_config of this AsyncInferenceConfig.
        """
        self.openapi_types = {
            'client_config': AsyncInferenceConfigClientConfig,
            'output_config': AsyncInferenceConfigOutputConfig
        }

        self.attribute_map = {
            'client_config': 'ClientConfig',
            'output_config': 'OutputConfig'
        }

        self._client_config = client_config
        self._output_config = output_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AsyncInferenceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AsyncInferenceConfig of this AsyncInferenceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_config(self):
        """Gets the client_config of this AsyncInferenceConfig.


        :return: The client_config of this AsyncInferenceConfig.
        :rtype: AsyncInferenceConfigClientConfig
        """
        return self._client_config

    @client_config.setter
    def client_config(self, client_config):
        """Sets the client_config of this AsyncInferenceConfig.


        :param client_config: The client_config of this AsyncInferenceConfig.
        :type client_config: AsyncInferenceConfigClientConfig
        """

        self._client_config = client_config

    @property
    def output_config(self):
        """Gets the output_config of this AsyncInferenceConfig.


        :return: The output_config of this AsyncInferenceConfig.
        :rtype: AsyncInferenceConfigOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this AsyncInferenceConfig.


        :param output_config: The output_config of this AsyncInferenceConfig.
        :type output_config: AsyncInferenceConfigOutputConfig
        """
        if output_config is None:
            raise ValueError("Invalid value for `output_config`, must not be `None`")

        self._output_config = output_config
