# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.processing_output_feature_store_output import ProcessingOutputFeatureStoreOutput
from openapi_server.models.processing_output_s3_output import ProcessingOutputS3Output
from openapi_server import util


class ProcessingOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, output_name: str=None, s3_output: ProcessingOutputS3Output=None, feature_store_output: ProcessingOutputFeatureStoreOutput=None, app_managed: bool=None):
        """ProcessingOutput - a model defined in OpenAPI

        :param output_name: The output_name of this ProcessingOutput.
        :param s3_output: The s3_output of this ProcessingOutput.
        :param feature_store_output: The feature_store_output of this ProcessingOutput.
        :param app_managed: The app_managed of this ProcessingOutput.
        """
        self.openapi_types = {
            'output_name': str,
            's3_output': ProcessingOutputS3Output,
            'feature_store_output': ProcessingOutputFeatureStoreOutput,
            'app_managed': bool
        }

        self.attribute_map = {
            'output_name': 'OutputName',
            's3_output': 'S3Output',
            'feature_store_output': 'FeatureStoreOutput',
            'app_managed': 'AppManaged'
        }

        self._output_name = output_name
        self._s3_output = s3_output
        self._feature_store_output = feature_store_output
        self._app_managed = app_managed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProcessingOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProcessingOutput of this ProcessingOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def output_name(self):
        """Gets the output_name of this ProcessingOutput.


        :return: The output_name of this ProcessingOutput.
        :rtype: str
        """
        return self._output_name

    @output_name.setter
    def output_name(self, output_name):
        """Sets the output_name of this ProcessingOutput.


        :param output_name: The output_name of this ProcessingOutput.
        :type output_name: str
        """
        if output_name is None:
            raise ValueError("Invalid value for `output_name`, must not be `None`")

        self._output_name = output_name

    @property
    def s3_output(self):
        """Gets the s3_output of this ProcessingOutput.


        :return: The s3_output of this ProcessingOutput.
        :rtype: ProcessingOutputS3Output
        """
        return self._s3_output

    @s3_output.setter
    def s3_output(self, s3_output):
        """Sets the s3_output of this ProcessingOutput.


        :param s3_output: The s3_output of this ProcessingOutput.
        :type s3_output: ProcessingOutputS3Output
        """

        self._s3_output = s3_output

    @property
    def feature_store_output(self):
        """Gets the feature_store_output of this ProcessingOutput.


        :return: The feature_store_output of this ProcessingOutput.
        :rtype: ProcessingOutputFeatureStoreOutput
        """
        return self._feature_store_output

    @feature_store_output.setter
    def feature_store_output(self, feature_store_output):
        """Sets the feature_store_output of this ProcessingOutput.


        :param feature_store_output: The feature_store_output of this ProcessingOutput.
        :type feature_store_output: ProcessingOutputFeatureStoreOutput
        """

        self._feature_store_output = feature_store_output

    @property
    def app_managed(self):
        """Gets the app_managed of this ProcessingOutput.


        :return: The app_managed of this ProcessingOutput.
        :rtype: bool
        """
        return self._app_managed

    @app_managed.setter
    def app_managed(self, app_managed):
        """Sets the app_managed of this ProcessingOutput.


        :param app_managed: The app_managed of this ProcessingOutput.
        :type app_managed: bool
        """

        self._app_managed = app_managed
