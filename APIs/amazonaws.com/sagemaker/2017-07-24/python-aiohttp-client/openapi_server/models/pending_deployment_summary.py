# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PendingDeploymentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_config_name: str=None, production_variants: List=None, start_time: datetime=None, shadow_production_variants: List=None):
        """PendingDeploymentSummary - a model defined in OpenAPI

        :param endpoint_config_name: The endpoint_config_name of this PendingDeploymentSummary.
        :param production_variants: The production_variants of this PendingDeploymentSummary.
        :param start_time: The start_time of this PendingDeploymentSummary.
        :param shadow_production_variants: The shadow_production_variants of this PendingDeploymentSummary.
        """
        self.openapi_types = {
            'endpoint_config_name': str,
            'production_variants': List,
            'start_time': datetime,
            'shadow_production_variants': List
        }

        self.attribute_map = {
            'endpoint_config_name': 'EndpointConfigName',
            'production_variants': 'ProductionVariants',
            'start_time': 'StartTime',
            'shadow_production_variants': 'ShadowProductionVariants'
        }

        self._endpoint_config_name = endpoint_config_name
        self._production_variants = production_variants
        self._start_time = start_time
        self._shadow_production_variants = shadow_production_variants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PendingDeploymentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PendingDeploymentSummary of this PendingDeploymentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_config_name(self):
        """Gets the endpoint_config_name of this PendingDeploymentSummary.


        :return: The endpoint_config_name of this PendingDeploymentSummary.
        :rtype: str
        """
        return self._endpoint_config_name

    @endpoint_config_name.setter
    def endpoint_config_name(self, endpoint_config_name):
        """Sets the endpoint_config_name of this PendingDeploymentSummary.


        :param endpoint_config_name: The endpoint_config_name of this PendingDeploymentSummary.
        :type endpoint_config_name: str
        """
        if endpoint_config_name is None:
            raise ValueError("Invalid value for `endpoint_config_name`, must not be `None`")

        self._endpoint_config_name = endpoint_config_name

    @property
    def production_variants(self):
        """Gets the production_variants of this PendingDeploymentSummary.


        :return: The production_variants of this PendingDeploymentSummary.
        :rtype: List
        """
        return self._production_variants

    @production_variants.setter
    def production_variants(self, production_variants):
        """Sets the production_variants of this PendingDeploymentSummary.


        :param production_variants: The production_variants of this PendingDeploymentSummary.
        :type production_variants: List
        """

        self._production_variants = production_variants

    @property
    def start_time(self):
        """Gets the start_time of this PendingDeploymentSummary.


        :return: The start_time of this PendingDeploymentSummary.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this PendingDeploymentSummary.


        :param start_time: The start_time of this PendingDeploymentSummary.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def shadow_production_variants(self):
        """Gets the shadow_production_variants of this PendingDeploymentSummary.


        :return: The shadow_production_variants of this PendingDeploymentSummary.
        :rtype: List
        """
        return self._shadow_production_variants

    @shadow_production_variants.setter
    def shadow_production_variants(self, shadow_production_variants):
        """Sets the shadow_production_variants of this PendingDeploymentSummary.


        :param shadow_production_variants: The shadow_production_variants of this PendingDeploymentSummary.
        :type shadow_production_variants: List
        """

        self._shadow_production_variants = shadow_production_variants
