# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_workteam_request_notification_configuration import UpdateWorkteamRequestNotificationConfiguration
from openapi_server import util


class UpdateWorkteamRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam_name: str=None, member_definitions: List=None, description: str=None, notification_configuration: UpdateWorkteamRequestNotificationConfiguration=None):
        """UpdateWorkteamRequest - a model defined in OpenAPI

        :param workteam_name: The workteam_name of this UpdateWorkteamRequest.
        :param member_definitions: The member_definitions of this UpdateWorkteamRequest.
        :param description: The description of this UpdateWorkteamRequest.
        :param notification_configuration: The notification_configuration of this UpdateWorkteamRequest.
        """
        self.openapi_types = {
            'workteam_name': str,
            'member_definitions': List,
            'description': str,
            'notification_configuration': UpdateWorkteamRequestNotificationConfiguration
        }

        self.attribute_map = {
            'workteam_name': 'WorkteamName',
            'member_definitions': 'MemberDefinitions',
            'description': 'Description',
            'notification_configuration': 'NotificationConfiguration'
        }

        self._workteam_name = workteam_name
        self._member_definitions = member_definitions
        self._description = description
        self._notification_configuration = notification_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateWorkteamRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateWorkteamRequest of this UpdateWorkteamRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam_name(self):
        """Gets the workteam_name of this UpdateWorkteamRequest.


        :return: The workteam_name of this UpdateWorkteamRequest.
        :rtype: str
        """
        return self._workteam_name

    @workteam_name.setter
    def workteam_name(self, workteam_name):
        """Sets the workteam_name of this UpdateWorkteamRequest.


        :param workteam_name: The workteam_name of this UpdateWorkteamRequest.
        :type workteam_name: str
        """
        if workteam_name is None:
            raise ValueError("Invalid value for `workteam_name`, must not be `None`")

        self._workteam_name = workteam_name

    @property
    def member_definitions(self):
        """Gets the member_definitions of this UpdateWorkteamRequest.


        :return: The member_definitions of this UpdateWorkteamRequest.
        :rtype: List
        """
        return self._member_definitions

    @member_definitions.setter
    def member_definitions(self, member_definitions):
        """Sets the member_definitions of this UpdateWorkteamRequest.


        :param member_definitions: The member_definitions of this UpdateWorkteamRequest.
        :type member_definitions: List
        """

        self._member_definitions = member_definitions

    @property
    def description(self):
        """Gets the description of this UpdateWorkteamRequest.


        :return: The description of this UpdateWorkteamRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateWorkteamRequest.


        :param description: The description of this UpdateWorkteamRequest.
        :type description: str
        """

        self._description = description

    @property
    def notification_configuration(self):
        """Gets the notification_configuration of this UpdateWorkteamRequest.


        :return: The notification_configuration of this UpdateWorkteamRequest.
        :rtype: UpdateWorkteamRequestNotificationConfiguration
        """
        return self._notification_configuration

    @notification_configuration.setter
    def notification_configuration(self, notification_configuration):
        """Sets the notification_configuration of this UpdateWorkteamRequest.


        :param notification_configuration: The notification_configuration of this UpdateWorkteamRequest.
        :type notification_configuration: UpdateWorkteamRequestNotificationConfiguration
        """

        self._notification_configuration = notification_configuration
