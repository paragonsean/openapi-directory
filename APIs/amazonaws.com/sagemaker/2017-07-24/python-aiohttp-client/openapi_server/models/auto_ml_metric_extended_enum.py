# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoMLMetricExtendedEnum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ACCURACY = 'Accuracy'
    MSE = 'MSE'
    F1 = 'F1'
    F1MACRO = 'F1macro'
    AUC = 'AUC'
    RMSE = 'RMSE'
    MAE = 'MAE'
    R2 = 'R2'
    BALANCEDACCURACY = 'BalancedAccuracy'
    PRECISION = 'Precision'
    PRECISIONMACRO = 'PrecisionMacro'
    RECALL = 'Recall'
    RECALLMACRO = 'RecallMacro'
    LOGLOSS = 'LogLoss'
    INFERENCELATENCY = 'InferenceLatency'
    MAPE = 'MAPE'
    MASE = 'MASE'
    WAPE = 'WAPE'
    AVERAGEWEIGHTEDQUANTILELOSS = 'AverageWeightedQuantileLoss'

    def __init__(self):
        """AutoMLMetricExtendedEnum - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoMLMetricExtendedEnum':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoMLMetricExtendedEnum of this AutoMLMetricExtendedEnum.
        """
        return util.deserialize_model(dikt, cls)
