# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeWorkteamRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam_name: str=None):
        """DescribeWorkteamRequest - a model defined in OpenAPI

        :param workteam_name: The workteam_name of this DescribeWorkteamRequest.
        """
        self.openapi_types = {
            'workteam_name': str
        }

        self.attribute_map = {
            'workteam_name': 'WorkteamName'
        }

        self._workteam_name = workteam_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkteamRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkteamRequest of this DescribeWorkteamRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam_name(self):
        """Gets the workteam_name of this DescribeWorkteamRequest.


        :return: The workteam_name of this DescribeWorkteamRequest.
        :rtype: str
        """
        return self._workteam_name

    @workteam_name.setter
    def workteam_name(self, workteam_name):
        """Sets the workteam_name of this DescribeWorkteamRequest.


        :param workteam_name: The workteam_name of this DescribeWorkteamRequest.
        :type workteam_name: str
        """
        if workteam_name is None:
            raise ValueError("Invalid value for `workteam_name`, must not be `None`")

        self._workteam_name = workteam_name
