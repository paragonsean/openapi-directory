# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compilation_job_status import CompilationJobStatus
from openapi_server.models.create_compilation_job_request_stopping_condition import CreateCompilationJobRequestStoppingCondition
from openapi_server.models.create_compilation_job_request_vpc_config import CreateCompilationJobRequestVpcConfig
from openapi_server.models.describe_compilation_job_response_input_config import DescribeCompilationJobResponseInputConfig
from openapi_server.models.describe_compilation_job_response_model_artifacts import DescribeCompilationJobResponseModelArtifacts
from openapi_server.models.describe_compilation_job_response_model_digests import DescribeCompilationJobResponseModelDigests
from openapi_server.models.describe_compilation_job_response_output_config import DescribeCompilationJobResponseOutputConfig
from openapi_server import util


class DescribeCompilationJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compilation_job_name: str=None, compilation_job_arn: str=None, compilation_job_status: CompilationJobStatus=None, compilation_start_time: datetime=None, compilation_end_time: datetime=None, stopping_condition: CreateCompilationJobRequestStoppingCondition=None, inference_image: str=None, model_package_version_arn: str=None, creation_time: datetime=None, last_modified_time: datetime=None, failure_reason: str=None, model_artifacts: DescribeCompilationJobResponseModelArtifacts=None, model_digests: DescribeCompilationJobResponseModelDigests=None, role_arn: str=None, input_config: DescribeCompilationJobResponseInputConfig=None, output_config: DescribeCompilationJobResponseOutputConfig=None, vpc_config: CreateCompilationJobRequestVpcConfig=None):
        """DescribeCompilationJobResponse - a model defined in OpenAPI

        :param compilation_job_name: The compilation_job_name of this DescribeCompilationJobResponse.
        :param compilation_job_arn: The compilation_job_arn of this DescribeCompilationJobResponse.
        :param compilation_job_status: The compilation_job_status of this DescribeCompilationJobResponse.
        :param compilation_start_time: The compilation_start_time of this DescribeCompilationJobResponse.
        :param compilation_end_time: The compilation_end_time of this DescribeCompilationJobResponse.
        :param stopping_condition: The stopping_condition of this DescribeCompilationJobResponse.
        :param inference_image: The inference_image of this DescribeCompilationJobResponse.
        :param model_package_version_arn: The model_package_version_arn of this DescribeCompilationJobResponse.
        :param creation_time: The creation_time of this DescribeCompilationJobResponse.
        :param last_modified_time: The last_modified_time of this DescribeCompilationJobResponse.
        :param failure_reason: The failure_reason of this DescribeCompilationJobResponse.
        :param model_artifacts: The model_artifacts of this DescribeCompilationJobResponse.
        :param model_digests: The model_digests of this DescribeCompilationJobResponse.
        :param role_arn: The role_arn of this DescribeCompilationJobResponse.
        :param input_config: The input_config of this DescribeCompilationJobResponse.
        :param output_config: The output_config of this DescribeCompilationJobResponse.
        :param vpc_config: The vpc_config of this DescribeCompilationJobResponse.
        """
        self.openapi_types = {
            'compilation_job_name': str,
            'compilation_job_arn': str,
            'compilation_job_status': CompilationJobStatus,
            'compilation_start_time': datetime,
            'compilation_end_time': datetime,
            'stopping_condition': CreateCompilationJobRequestStoppingCondition,
            'inference_image': str,
            'model_package_version_arn': str,
            'creation_time': datetime,
            'last_modified_time': datetime,
            'failure_reason': str,
            'model_artifacts': DescribeCompilationJobResponseModelArtifacts,
            'model_digests': DescribeCompilationJobResponseModelDigests,
            'role_arn': str,
            'input_config': DescribeCompilationJobResponseInputConfig,
            'output_config': DescribeCompilationJobResponseOutputConfig,
            'vpc_config': CreateCompilationJobRequestVpcConfig
        }

        self.attribute_map = {
            'compilation_job_name': 'CompilationJobName',
            'compilation_job_arn': 'CompilationJobArn',
            'compilation_job_status': 'CompilationJobStatus',
            'compilation_start_time': 'CompilationStartTime',
            'compilation_end_time': 'CompilationEndTime',
            'stopping_condition': 'StoppingCondition',
            'inference_image': 'InferenceImage',
            'model_package_version_arn': 'ModelPackageVersionArn',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime',
            'failure_reason': 'FailureReason',
            'model_artifacts': 'ModelArtifacts',
            'model_digests': 'ModelDigests',
            'role_arn': 'RoleArn',
            'input_config': 'InputConfig',
            'output_config': 'OutputConfig',
            'vpc_config': 'VpcConfig'
        }

        self._compilation_job_name = compilation_job_name
        self._compilation_job_arn = compilation_job_arn
        self._compilation_job_status = compilation_job_status
        self._compilation_start_time = compilation_start_time
        self._compilation_end_time = compilation_end_time
        self._stopping_condition = stopping_condition
        self._inference_image = inference_image
        self._model_package_version_arn = model_package_version_arn
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time
        self._failure_reason = failure_reason
        self._model_artifacts = model_artifacts
        self._model_digests = model_digests
        self._role_arn = role_arn
        self._input_config = input_config
        self._output_config = output_config
        self._vpc_config = vpc_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCompilationJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCompilationJobResponse of this DescribeCompilationJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compilation_job_name(self):
        """Gets the compilation_job_name of this DescribeCompilationJobResponse.


        :return: The compilation_job_name of this DescribeCompilationJobResponse.
        :rtype: str
        """
        return self._compilation_job_name

    @compilation_job_name.setter
    def compilation_job_name(self, compilation_job_name):
        """Sets the compilation_job_name of this DescribeCompilationJobResponse.


        :param compilation_job_name: The compilation_job_name of this DescribeCompilationJobResponse.
        :type compilation_job_name: str
        """
        if compilation_job_name is None:
            raise ValueError("Invalid value for `compilation_job_name`, must not be `None`")

        self._compilation_job_name = compilation_job_name

    @property
    def compilation_job_arn(self):
        """Gets the compilation_job_arn of this DescribeCompilationJobResponse.


        :return: The compilation_job_arn of this DescribeCompilationJobResponse.
        :rtype: str
        """
        return self._compilation_job_arn

    @compilation_job_arn.setter
    def compilation_job_arn(self, compilation_job_arn):
        """Sets the compilation_job_arn of this DescribeCompilationJobResponse.


        :param compilation_job_arn: The compilation_job_arn of this DescribeCompilationJobResponse.
        :type compilation_job_arn: str
        """
        if compilation_job_arn is None:
            raise ValueError("Invalid value for `compilation_job_arn`, must not be `None`")

        self._compilation_job_arn = compilation_job_arn

    @property
    def compilation_job_status(self):
        """Gets the compilation_job_status of this DescribeCompilationJobResponse.


        :return: The compilation_job_status of this DescribeCompilationJobResponse.
        :rtype: CompilationJobStatus
        """
        return self._compilation_job_status

    @compilation_job_status.setter
    def compilation_job_status(self, compilation_job_status):
        """Sets the compilation_job_status of this DescribeCompilationJobResponse.


        :param compilation_job_status: The compilation_job_status of this DescribeCompilationJobResponse.
        :type compilation_job_status: CompilationJobStatus
        """
        if compilation_job_status is None:
            raise ValueError("Invalid value for `compilation_job_status`, must not be `None`")

        self._compilation_job_status = compilation_job_status

    @property
    def compilation_start_time(self):
        """Gets the compilation_start_time of this DescribeCompilationJobResponse.


        :return: The compilation_start_time of this DescribeCompilationJobResponse.
        :rtype: datetime
        """
        return self._compilation_start_time

    @compilation_start_time.setter
    def compilation_start_time(self, compilation_start_time):
        """Sets the compilation_start_time of this DescribeCompilationJobResponse.


        :param compilation_start_time: The compilation_start_time of this DescribeCompilationJobResponse.
        :type compilation_start_time: datetime
        """

        self._compilation_start_time = compilation_start_time

    @property
    def compilation_end_time(self):
        """Gets the compilation_end_time of this DescribeCompilationJobResponse.


        :return: The compilation_end_time of this DescribeCompilationJobResponse.
        :rtype: datetime
        """
        return self._compilation_end_time

    @compilation_end_time.setter
    def compilation_end_time(self, compilation_end_time):
        """Sets the compilation_end_time of this DescribeCompilationJobResponse.


        :param compilation_end_time: The compilation_end_time of this DescribeCompilationJobResponse.
        :type compilation_end_time: datetime
        """

        self._compilation_end_time = compilation_end_time

    @property
    def stopping_condition(self):
        """Gets the stopping_condition of this DescribeCompilationJobResponse.


        :return: The stopping_condition of this DescribeCompilationJobResponse.
        :rtype: CreateCompilationJobRequestStoppingCondition
        """
        return self._stopping_condition

    @stopping_condition.setter
    def stopping_condition(self, stopping_condition):
        """Sets the stopping_condition of this DescribeCompilationJobResponse.


        :param stopping_condition: The stopping_condition of this DescribeCompilationJobResponse.
        :type stopping_condition: CreateCompilationJobRequestStoppingCondition
        """
        if stopping_condition is None:
            raise ValueError("Invalid value for `stopping_condition`, must not be `None`")

        self._stopping_condition = stopping_condition

    @property
    def inference_image(self):
        """Gets the inference_image of this DescribeCompilationJobResponse.


        :return: The inference_image of this DescribeCompilationJobResponse.
        :rtype: str
        """
        return self._inference_image

    @inference_image.setter
    def inference_image(self, inference_image):
        """Sets the inference_image of this DescribeCompilationJobResponse.


        :param inference_image: The inference_image of this DescribeCompilationJobResponse.
        :type inference_image: str
        """

        self._inference_image = inference_image

    @property
    def model_package_version_arn(self):
        """Gets the model_package_version_arn of this DescribeCompilationJobResponse.


        :return: The model_package_version_arn of this DescribeCompilationJobResponse.
        :rtype: str
        """
        return self._model_package_version_arn

    @model_package_version_arn.setter
    def model_package_version_arn(self, model_package_version_arn):
        """Sets the model_package_version_arn of this DescribeCompilationJobResponse.


        :param model_package_version_arn: The model_package_version_arn of this DescribeCompilationJobResponse.
        :type model_package_version_arn: str
        """

        self._model_package_version_arn = model_package_version_arn

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeCompilationJobResponse.


        :return: The creation_time of this DescribeCompilationJobResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeCompilationJobResponse.


        :param creation_time: The creation_time of this DescribeCompilationJobResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this DescribeCompilationJobResponse.


        :return: The last_modified_time of this DescribeCompilationJobResponse.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this DescribeCompilationJobResponse.


        :param last_modified_time: The last_modified_time of this DescribeCompilationJobResponse.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def failure_reason(self):
        """Gets the failure_reason of this DescribeCompilationJobResponse.


        :return: The failure_reason of this DescribeCompilationJobResponse.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this DescribeCompilationJobResponse.


        :param failure_reason: The failure_reason of this DescribeCompilationJobResponse.
        :type failure_reason: str
        """
        if failure_reason is None:
            raise ValueError("Invalid value for `failure_reason`, must not be `None`")

        self._failure_reason = failure_reason

    @property
    def model_artifacts(self):
        """Gets the model_artifacts of this DescribeCompilationJobResponse.


        :return: The model_artifacts of this DescribeCompilationJobResponse.
        :rtype: DescribeCompilationJobResponseModelArtifacts
        """
        return self._model_artifacts

    @model_artifacts.setter
    def model_artifacts(self, model_artifacts):
        """Sets the model_artifacts of this DescribeCompilationJobResponse.


        :param model_artifacts: The model_artifacts of this DescribeCompilationJobResponse.
        :type model_artifacts: DescribeCompilationJobResponseModelArtifacts
        """
        if model_artifacts is None:
            raise ValueError("Invalid value for `model_artifacts`, must not be `None`")

        self._model_artifacts = model_artifacts

    @property
    def model_digests(self):
        """Gets the model_digests of this DescribeCompilationJobResponse.


        :return: The model_digests of this DescribeCompilationJobResponse.
        :rtype: DescribeCompilationJobResponseModelDigests
        """
        return self._model_digests

    @model_digests.setter
    def model_digests(self, model_digests):
        """Sets the model_digests of this DescribeCompilationJobResponse.


        :param model_digests: The model_digests of this DescribeCompilationJobResponse.
        :type model_digests: DescribeCompilationJobResponseModelDigests
        """

        self._model_digests = model_digests

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribeCompilationJobResponse.


        :return: The role_arn of this DescribeCompilationJobResponse.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribeCompilationJobResponse.


        :param role_arn: The role_arn of this DescribeCompilationJobResponse.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def input_config(self):
        """Gets the input_config of this DescribeCompilationJobResponse.


        :return: The input_config of this DescribeCompilationJobResponse.
        :rtype: DescribeCompilationJobResponseInputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this DescribeCompilationJobResponse.


        :param input_config: The input_config of this DescribeCompilationJobResponse.
        :type input_config: DescribeCompilationJobResponseInputConfig
        """
        if input_config is None:
            raise ValueError("Invalid value for `input_config`, must not be `None`")

        self._input_config = input_config

    @property
    def output_config(self):
        """Gets the output_config of this DescribeCompilationJobResponse.


        :return: The output_config of this DescribeCompilationJobResponse.
        :rtype: DescribeCompilationJobResponseOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this DescribeCompilationJobResponse.


        :param output_config: The output_config of this DescribeCompilationJobResponse.
        :type output_config: DescribeCompilationJobResponseOutputConfig
        """
        if output_config is None:
            raise ValueError("Invalid value for `output_config`, must not be `None`")

        self._output_config = output_config

    @property
    def vpc_config(self):
        """Gets the vpc_config of this DescribeCompilationJobResponse.


        :return: The vpc_config of this DescribeCompilationJobResponse.
        :rtype: CreateCompilationJobRequestVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this DescribeCompilationJobResponse.


        :param vpc_config: The vpc_config of this DescribeCompilationJobResponse.
        :type vpc_config: CreateCompilationJobRequestVpcConfig
        """

        self._vpc_config = vpc_config
