# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShadowModelVariantConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shadow_model_variant_name: str=None, sampling_percentage: int=None):
        """ShadowModelVariantConfig - a model defined in OpenAPI

        :param shadow_model_variant_name: The shadow_model_variant_name of this ShadowModelVariantConfig.
        :param sampling_percentage: The sampling_percentage of this ShadowModelVariantConfig.
        """
        self.openapi_types = {
            'shadow_model_variant_name': str,
            'sampling_percentage': int
        }

        self.attribute_map = {
            'shadow_model_variant_name': 'ShadowModelVariantName',
            'sampling_percentage': 'SamplingPercentage'
        }

        self._shadow_model_variant_name = shadow_model_variant_name
        self._sampling_percentage = sampling_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShadowModelVariantConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShadowModelVariantConfig of this ShadowModelVariantConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shadow_model_variant_name(self):
        """Gets the shadow_model_variant_name of this ShadowModelVariantConfig.


        :return: The shadow_model_variant_name of this ShadowModelVariantConfig.
        :rtype: str
        """
        return self._shadow_model_variant_name

    @shadow_model_variant_name.setter
    def shadow_model_variant_name(self, shadow_model_variant_name):
        """Sets the shadow_model_variant_name of this ShadowModelVariantConfig.


        :param shadow_model_variant_name: The shadow_model_variant_name of this ShadowModelVariantConfig.
        :type shadow_model_variant_name: str
        """
        if shadow_model_variant_name is None:
            raise ValueError("Invalid value for `shadow_model_variant_name`, must not be `None`")

        self._shadow_model_variant_name = shadow_model_variant_name

    @property
    def sampling_percentage(self):
        """Gets the sampling_percentage of this ShadowModelVariantConfig.


        :return: The sampling_percentage of this ShadowModelVariantConfig.
        :rtype: int
        """
        return self._sampling_percentage

    @sampling_percentage.setter
    def sampling_percentage(self, sampling_percentage):
        """Sets the sampling_percentage of this ShadowModelVariantConfig.


        :param sampling_percentage: The sampling_percentage of this ShadowModelVariantConfig.
        :type sampling_percentage: int
        """
        if sampling_percentage is None:
            raise ValueError("Invalid value for `sampling_percentage`, must not be `None`")

        self._sampling_percentage = sampling_percentage
