# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_package_group_status import ModelPackageGroupStatus
from openapi_server import util


class ModelPackageGroupSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_package_group_name: str=None, model_package_group_arn: str=None, model_package_group_description: str=None, creation_time: datetime=None, model_package_group_status: ModelPackageGroupStatus=None):
        """ModelPackageGroupSummary - a model defined in OpenAPI

        :param model_package_group_name: The model_package_group_name of this ModelPackageGroupSummary.
        :param model_package_group_arn: The model_package_group_arn of this ModelPackageGroupSummary.
        :param model_package_group_description: The model_package_group_description of this ModelPackageGroupSummary.
        :param creation_time: The creation_time of this ModelPackageGroupSummary.
        :param model_package_group_status: The model_package_group_status of this ModelPackageGroupSummary.
        """
        self.openapi_types = {
            'model_package_group_name': str,
            'model_package_group_arn': str,
            'model_package_group_description': str,
            'creation_time': datetime,
            'model_package_group_status': ModelPackageGroupStatus
        }

        self.attribute_map = {
            'model_package_group_name': 'ModelPackageGroupName',
            'model_package_group_arn': 'ModelPackageGroupArn',
            'model_package_group_description': 'ModelPackageGroupDescription',
            'creation_time': 'CreationTime',
            'model_package_group_status': 'ModelPackageGroupStatus'
        }

        self._model_package_group_name = model_package_group_name
        self._model_package_group_arn = model_package_group_arn
        self._model_package_group_description = model_package_group_description
        self._creation_time = creation_time
        self._model_package_group_status = model_package_group_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelPackageGroupSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelPackageGroupSummary of this ModelPackageGroupSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_package_group_name(self):
        """Gets the model_package_group_name of this ModelPackageGroupSummary.


        :return: The model_package_group_name of this ModelPackageGroupSummary.
        :rtype: str
        """
        return self._model_package_group_name

    @model_package_group_name.setter
    def model_package_group_name(self, model_package_group_name):
        """Sets the model_package_group_name of this ModelPackageGroupSummary.


        :param model_package_group_name: The model_package_group_name of this ModelPackageGroupSummary.
        :type model_package_group_name: str
        """
        if model_package_group_name is None:
            raise ValueError("Invalid value for `model_package_group_name`, must not be `None`")

        self._model_package_group_name = model_package_group_name

    @property
    def model_package_group_arn(self):
        """Gets the model_package_group_arn of this ModelPackageGroupSummary.


        :return: The model_package_group_arn of this ModelPackageGroupSummary.
        :rtype: str
        """
        return self._model_package_group_arn

    @model_package_group_arn.setter
    def model_package_group_arn(self, model_package_group_arn):
        """Sets the model_package_group_arn of this ModelPackageGroupSummary.


        :param model_package_group_arn: The model_package_group_arn of this ModelPackageGroupSummary.
        :type model_package_group_arn: str
        """
        if model_package_group_arn is None:
            raise ValueError("Invalid value for `model_package_group_arn`, must not be `None`")

        self._model_package_group_arn = model_package_group_arn

    @property
    def model_package_group_description(self):
        """Gets the model_package_group_description of this ModelPackageGroupSummary.


        :return: The model_package_group_description of this ModelPackageGroupSummary.
        :rtype: str
        """
        return self._model_package_group_description

    @model_package_group_description.setter
    def model_package_group_description(self, model_package_group_description):
        """Sets the model_package_group_description of this ModelPackageGroupSummary.


        :param model_package_group_description: The model_package_group_description of this ModelPackageGroupSummary.
        :type model_package_group_description: str
        """

        self._model_package_group_description = model_package_group_description

    @property
    def creation_time(self):
        """Gets the creation_time of this ModelPackageGroupSummary.


        :return: The creation_time of this ModelPackageGroupSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ModelPackageGroupSummary.


        :param creation_time: The creation_time of this ModelPackageGroupSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def model_package_group_status(self):
        """Gets the model_package_group_status of this ModelPackageGroupSummary.


        :return: The model_package_group_status of this ModelPackageGroupSummary.
        :rtype: ModelPackageGroupStatus
        """
        return self._model_package_group_status

    @model_package_group_status.setter
    def model_package_group_status(self, model_package_group_status):
        """Sets the model_package_group_status of this ModelPackageGroupSummary.


        :param model_package_group_status: The model_package_group_status of this ModelPackageGroupSummary.
        :type model_package_group_status: ModelPackageGroupStatus
        """
        if model_package_group_status is None:
            raise ValueError("Invalid value for `model_package_group_status`, must not be `None`")

        self._model_package_group_status = model_package_group_status
