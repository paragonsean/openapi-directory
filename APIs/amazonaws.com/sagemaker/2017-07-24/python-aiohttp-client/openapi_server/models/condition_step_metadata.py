# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.condition_outcome import ConditionOutcome
from openapi_server import util


class ConditionStepMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, outcome: ConditionOutcome=None):
        """ConditionStepMetadata - a model defined in OpenAPI

        :param outcome: The outcome of this ConditionStepMetadata.
        """
        self.openapi_types = {
            'outcome': ConditionOutcome
        }

        self.attribute_map = {
            'outcome': 'Outcome'
        }

        self._outcome = outcome

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConditionStepMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConditionStepMetadata of this ConditionStepMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outcome(self):
        """Gets the outcome of this ConditionStepMetadata.


        :return: The outcome of this ConditionStepMetadata.
        :rtype: ConditionOutcome
        """
        return self._outcome

    @outcome.setter
    def outcome(self, outcome):
        """Sets the outcome of this ConditionStepMetadata.


        :param outcome: The outcome of this ConditionStepMetadata.
        :type outcome: ConditionOutcome
        """

        self._outcome = outcome
