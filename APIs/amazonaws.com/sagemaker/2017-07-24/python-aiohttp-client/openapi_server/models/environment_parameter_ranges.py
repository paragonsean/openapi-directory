# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnvironmentParameterRanges(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categorical_parameter_ranges: List=None):
        """EnvironmentParameterRanges - a model defined in OpenAPI

        :param categorical_parameter_ranges: The categorical_parameter_ranges of this EnvironmentParameterRanges.
        """
        self.openapi_types = {
            'categorical_parameter_ranges': List
        }

        self.attribute_map = {
            'categorical_parameter_ranges': 'CategoricalParameterRanges'
        }

        self._categorical_parameter_ranges = categorical_parameter_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvironmentParameterRanges':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvironmentParameterRanges of this EnvironmentParameterRanges.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categorical_parameter_ranges(self):
        """Gets the categorical_parameter_ranges of this EnvironmentParameterRanges.


        :return: The categorical_parameter_ranges of this EnvironmentParameterRanges.
        :rtype: List
        """
        return self._categorical_parameter_ranges

    @categorical_parameter_ranges.setter
    def categorical_parameter_ranges(self, categorical_parameter_ranges):
        """Sets the categorical_parameter_ranges of this EnvironmentParameterRanges.


        :param categorical_parameter_ranges: The categorical_parameter_ranges of this EnvironmentParameterRanges.
        :type categorical_parameter_ranges: List
        """

        self._categorical_parameter_ranges = categorical_parameter_ranges
