# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListInferenceExperimentsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inference_experiments: List=None, next_token: str=None):
        """ListInferenceExperimentsResponse - a model defined in OpenAPI

        :param inference_experiments: The inference_experiments of this ListInferenceExperimentsResponse.
        :param next_token: The next_token of this ListInferenceExperimentsResponse.
        """
        self.openapi_types = {
            'inference_experiments': List,
            'next_token': str
        }

        self.attribute_map = {
            'inference_experiments': 'InferenceExperiments',
            'next_token': 'NextToken'
        }

        self._inference_experiments = inference_experiments
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListInferenceExperimentsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListInferenceExperimentsResponse of this ListInferenceExperimentsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inference_experiments(self):
        """Gets the inference_experiments of this ListInferenceExperimentsResponse.


        :return: The inference_experiments of this ListInferenceExperimentsResponse.
        :rtype: List
        """
        return self._inference_experiments

    @inference_experiments.setter
    def inference_experiments(self, inference_experiments):
        """Sets the inference_experiments of this ListInferenceExperimentsResponse.


        :param inference_experiments: The inference_experiments of this ListInferenceExperimentsResponse.
        :type inference_experiments: List
        """

        self._inference_experiments = inference_experiments

    @property
    def next_token(self):
        """Gets the next_token of this ListInferenceExperimentsResponse.


        :return: The next_token of this ListInferenceExperimentsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListInferenceExperimentsResponse.


        :param next_token: The next_token of this ListInferenceExperimentsResponse.
        :type next_token: str
        """

        self._next_token = next_token
