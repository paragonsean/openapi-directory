# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_auto_ml_job_request_model_deploy_config import CreateAutoMLJobRequestModelDeployConfig
from openapi_server.models.create_auto_ml_job_v2_request_auto_ml_job_objective import CreateAutoMLJobV2RequestAutoMLJobObjective
from openapi_server.models.create_auto_ml_job_v2_request_auto_ml_problem_type_config import CreateAutoMLJobV2RequestAutoMLProblemTypeConfig
from openapi_server.models.create_auto_ml_job_v2_request_data_split_config import CreateAutoMLJobV2RequestDataSplitConfig
from openapi_server.models.create_auto_ml_job_v2_request_output_data_config import CreateAutoMLJobV2RequestOutputDataConfig
from openapi_server.models.create_auto_ml_job_v2_request_security_config import CreateAutoMLJobV2RequestSecurityConfig
from openapi_server import util


class CreateAutoMLJobV2Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_ml_job_name: str=None, auto_ml_job_input_data_config: List=None, output_data_config: CreateAutoMLJobV2RequestOutputDataConfig=None, auto_ml_problem_type_config: CreateAutoMLJobV2RequestAutoMLProblemTypeConfig=None, role_arn: str=None, tags: List=None, security_config: CreateAutoMLJobV2RequestSecurityConfig=None, auto_ml_job_objective: CreateAutoMLJobV2RequestAutoMLJobObjective=None, model_deploy_config: CreateAutoMLJobRequestModelDeployConfig=None, data_split_config: CreateAutoMLJobV2RequestDataSplitConfig=None):
        """CreateAutoMLJobV2Request - a model defined in OpenAPI

        :param auto_ml_job_name: The auto_ml_job_name of this CreateAutoMLJobV2Request.
        :param auto_ml_job_input_data_config: The auto_ml_job_input_data_config of this CreateAutoMLJobV2Request.
        :param output_data_config: The output_data_config of this CreateAutoMLJobV2Request.
        :param auto_ml_problem_type_config: The auto_ml_problem_type_config of this CreateAutoMLJobV2Request.
        :param role_arn: The role_arn of this CreateAutoMLJobV2Request.
        :param tags: The tags of this CreateAutoMLJobV2Request.
        :param security_config: The security_config of this CreateAutoMLJobV2Request.
        :param auto_ml_job_objective: The auto_ml_job_objective of this CreateAutoMLJobV2Request.
        :param model_deploy_config: The model_deploy_config of this CreateAutoMLJobV2Request.
        :param data_split_config: The data_split_config of this CreateAutoMLJobV2Request.
        """
        self.openapi_types = {
            'auto_ml_job_name': str,
            'auto_ml_job_input_data_config': List,
            'output_data_config': CreateAutoMLJobV2RequestOutputDataConfig,
            'auto_ml_problem_type_config': CreateAutoMLJobV2RequestAutoMLProblemTypeConfig,
            'role_arn': str,
            'tags': List,
            'security_config': CreateAutoMLJobV2RequestSecurityConfig,
            'auto_ml_job_objective': CreateAutoMLJobV2RequestAutoMLJobObjective,
            'model_deploy_config': CreateAutoMLJobRequestModelDeployConfig,
            'data_split_config': CreateAutoMLJobV2RequestDataSplitConfig
        }

        self.attribute_map = {
            'auto_ml_job_name': 'AutoMLJobName',
            'auto_ml_job_input_data_config': 'AutoMLJobInputDataConfig',
            'output_data_config': 'OutputDataConfig',
            'auto_ml_problem_type_config': 'AutoMLProblemTypeConfig',
            'role_arn': 'RoleArn',
            'tags': 'Tags',
            'security_config': 'SecurityConfig',
            'auto_ml_job_objective': 'AutoMLJobObjective',
            'model_deploy_config': 'ModelDeployConfig',
            'data_split_config': 'DataSplitConfig'
        }

        self._auto_ml_job_name = auto_ml_job_name
        self._auto_ml_job_input_data_config = auto_ml_job_input_data_config
        self._output_data_config = output_data_config
        self._auto_ml_problem_type_config = auto_ml_problem_type_config
        self._role_arn = role_arn
        self._tags = tags
        self._security_config = security_config
        self._auto_ml_job_objective = auto_ml_job_objective
        self._model_deploy_config = model_deploy_config
        self._data_split_config = data_split_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAutoMLJobV2Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAutoMLJobV2Request of this CreateAutoMLJobV2Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_ml_job_name(self):
        """Gets the auto_ml_job_name of this CreateAutoMLJobV2Request.


        :return: The auto_ml_job_name of this CreateAutoMLJobV2Request.
        :rtype: str
        """
        return self._auto_ml_job_name

    @auto_ml_job_name.setter
    def auto_ml_job_name(self, auto_ml_job_name):
        """Sets the auto_ml_job_name of this CreateAutoMLJobV2Request.


        :param auto_ml_job_name: The auto_ml_job_name of this CreateAutoMLJobV2Request.
        :type auto_ml_job_name: str
        """
        if auto_ml_job_name is None:
            raise ValueError("Invalid value for `auto_ml_job_name`, must not be `None`")

        self._auto_ml_job_name = auto_ml_job_name

    @property
    def auto_ml_job_input_data_config(self):
        """Gets the auto_ml_job_input_data_config of this CreateAutoMLJobV2Request.


        :return: The auto_ml_job_input_data_config of this CreateAutoMLJobV2Request.
        :rtype: List
        """
        return self._auto_ml_job_input_data_config

    @auto_ml_job_input_data_config.setter
    def auto_ml_job_input_data_config(self, auto_ml_job_input_data_config):
        """Sets the auto_ml_job_input_data_config of this CreateAutoMLJobV2Request.


        :param auto_ml_job_input_data_config: The auto_ml_job_input_data_config of this CreateAutoMLJobV2Request.
        :type auto_ml_job_input_data_config: List
        """
        if auto_ml_job_input_data_config is None:
            raise ValueError("Invalid value for `auto_ml_job_input_data_config`, must not be `None`")

        self._auto_ml_job_input_data_config = auto_ml_job_input_data_config

    @property
    def output_data_config(self):
        """Gets the output_data_config of this CreateAutoMLJobV2Request.


        :return: The output_data_config of this CreateAutoMLJobV2Request.
        :rtype: CreateAutoMLJobV2RequestOutputDataConfig
        """
        return self._output_data_config

    @output_data_config.setter
    def output_data_config(self, output_data_config):
        """Sets the output_data_config of this CreateAutoMLJobV2Request.


        :param output_data_config: The output_data_config of this CreateAutoMLJobV2Request.
        :type output_data_config: CreateAutoMLJobV2RequestOutputDataConfig
        """
        if output_data_config is None:
            raise ValueError("Invalid value for `output_data_config`, must not be `None`")

        self._output_data_config = output_data_config

    @property
    def auto_ml_problem_type_config(self):
        """Gets the auto_ml_problem_type_config of this CreateAutoMLJobV2Request.


        :return: The auto_ml_problem_type_config of this CreateAutoMLJobV2Request.
        :rtype: CreateAutoMLJobV2RequestAutoMLProblemTypeConfig
        """
        return self._auto_ml_problem_type_config

    @auto_ml_problem_type_config.setter
    def auto_ml_problem_type_config(self, auto_ml_problem_type_config):
        """Sets the auto_ml_problem_type_config of this CreateAutoMLJobV2Request.


        :param auto_ml_problem_type_config: The auto_ml_problem_type_config of this CreateAutoMLJobV2Request.
        :type auto_ml_problem_type_config: CreateAutoMLJobV2RequestAutoMLProblemTypeConfig
        """
        if auto_ml_problem_type_config is None:
            raise ValueError("Invalid value for `auto_ml_problem_type_config`, must not be `None`")

        self._auto_ml_problem_type_config = auto_ml_problem_type_config

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateAutoMLJobV2Request.


        :return: The role_arn of this CreateAutoMLJobV2Request.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateAutoMLJobV2Request.


        :param role_arn: The role_arn of this CreateAutoMLJobV2Request.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this CreateAutoMLJobV2Request.


        :return: The tags of this CreateAutoMLJobV2Request.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAutoMLJobV2Request.


        :param tags: The tags of this CreateAutoMLJobV2Request.
        :type tags: List
        """

        self._tags = tags

    @property
    def security_config(self):
        """Gets the security_config of this CreateAutoMLJobV2Request.


        :return: The security_config of this CreateAutoMLJobV2Request.
        :rtype: CreateAutoMLJobV2RequestSecurityConfig
        """
        return self._security_config

    @security_config.setter
    def security_config(self, security_config):
        """Sets the security_config of this CreateAutoMLJobV2Request.


        :param security_config: The security_config of this CreateAutoMLJobV2Request.
        :type security_config: CreateAutoMLJobV2RequestSecurityConfig
        """

        self._security_config = security_config

    @property
    def auto_ml_job_objective(self):
        """Gets the auto_ml_job_objective of this CreateAutoMLJobV2Request.


        :return: The auto_ml_job_objective of this CreateAutoMLJobV2Request.
        :rtype: CreateAutoMLJobV2RequestAutoMLJobObjective
        """
        return self._auto_ml_job_objective

    @auto_ml_job_objective.setter
    def auto_ml_job_objective(self, auto_ml_job_objective):
        """Sets the auto_ml_job_objective of this CreateAutoMLJobV2Request.


        :param auto_ml_job_objective: The auto_ml_job_objective of this CreateAutoMLJobV2Request.
        :type auto_ml_job_objective: CreateAutoMLJobV2RequestAutoMLJobObjective
        """

        self._auto_ml_job_objective = auto_ml_job_objective

    @property
    def model_deploy_config(self):
        """Gets the model_deploy_config of this CreateAutoMLJobV2Request.


        :return: The model_deploy_config of this CreateAutoMLJobV2Request.
        :rtype: CreateAutoMLJobRequestModelDeployConfig
        """
        return self._model_deploy_config

    @model_deploy_config.setter
    def model_deploy_config(self, model_deploy_config):
        """Sets the model_deploy_config of this CreateAutoMLJobV2Request.


        :param model_deploy_config: The model_deploy_config of this CreateAutoMLJobV2Request.
        :type model_deploy_config: CreateAutoMLJobRequestModelDeployConfig
        """

        self._model_deploy_config = model_deploy_config

    @property
    def data_split_config(self):
        """Gets the data_split_config of this CreateAutoMLJobV2Request.


        :return: The data_split_config of this CreateAutoMLJobV2Request.
        :rtype: CreateAutoMLJobV2RequestDataSplitConfig
        """
        return self._data_split_config

    @data_split_config.setter
    def data_split_config(self, data_split_config):
        """Sets the data_split_config of this CreateAutoMLJobV2Request.


        :param data_split_config: The data_split_config of this CreateAutoMLJobV2Request.
        :type data_split_config: CreateAutoMLJobV2RequestDataSplitConfig
        """

        self._data_split_config = data_split_config
