# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_status import ActionStatus
from openapi_server import util


class UpdateActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, description: str=None, status: ActionStatus=None, properties: Dict=None, properties_to_remove: List=None):
        """UpdateActionRequest - a model defined in OpenAPI

        :param action_name: The action_name of this UpdateActionRequest.
        :param description: The description of this UpdateActionRequest.
        :param status: The status of this UpdateActionRequest.
        :param properties: The properties of this UpdateActionRequest.
        :param properties_to_remove: The properties_to_remove of this UpdateActionRequest.
        """
        self.openapi_types = {
            'action_name': str,
            'description': str,
            'status': ActionStatus,
            'properties': Dict,
            'properties_to_remove': List
        }

        self.attribute_map = {
            'action_name': 'ActionName',
            'description': 'Description',
            'status': 'Status',
            'properties': 'Properties',
            'properties_to_remove': 'PropertiesToRemove'
        }

        self._action_name = action_name
        self._description = description
        self._status = status
        self._properties = properties
        self._properties_to_remove = properties_to_remove

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateActionRequest of this UpdateActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this UpdateActionRequest.


        :return: The action_name of this UpdateActionRequest.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this UpdateActionRequest.


        :param action_name: The action_name of this UpdateActionRequest.
        :type action_name: str
        """
        if action_name is None:
            raise ValueError("Invalid value for `action_name`, must not be `None`")

        self._action_name = action_name

    @property
    def description(self):
        """Gets the description of this UpdateActionRequest.


        :return: The description of this UpdateActionRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateActionRequest.


        :param description: The description of this UpdateActionRequest.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this UpdateActionRequest.


        :return: The status of this UpdateActionRequest.
        :rtype: ActionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateActionRequest.


        :param status: The status of this UpdateActionRequest.
        :type status: ActionStatus
        """

        self._status = status

    @property
    def properties(self):
        """Gets the properties of this UpdateActionRequest.


        :return: The properties of this UpdateActionRequest.
        :rtype: Dict
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this UpdateActionRequest.


        :param properties: The properties of this UpdateActionRequest.
        :type properties: Dict
        """

        self._properties = properties

    @property
    def properties_to_remove(self):
        """Gets the properties_to_remove of this UpdateActionRequest.


        :return: The properties_to_remove of this UpdateActionRequest.
        :rtype: List
        """
        return self._properties_to_remove

    @properties_to_remove.setter
    def properties_to_remove(self, properties_to_remove):
        """Sets the properties_to_remove of this UpdateActionRequest.


        :param properties_to_remove: The properties_to_remove of this UpdateActionRequest.
        :type properties_to_remove: List
        """

        self._properties_to_remove = properties_to_remove
