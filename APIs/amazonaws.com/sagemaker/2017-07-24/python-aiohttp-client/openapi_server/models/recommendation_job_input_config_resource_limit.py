# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendationJobInputConfigResourceLimit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_number_of_tests: int=None, max_parallel_of_tests: int=None):
        """RecommendationJobInputConfigResourceLimit - a model defined in OpenAPI

        :param max_number_of_tests: The max_number_of_tests of this RecommendationJobInputConfigResourceLimit.
        :param max_parallel_of_tests: The max_parallel_of_tests of this RecommendationJobInputConfigResourceLimit.
        """
        self.openapi_types = {
            'max_number_of_tests': int,
            'max_parallel_of_tests': int
        }

        self.attribute_map = {
            'max_number_of_tests': 'MaxNumberOfTests',
            'max_parallel_of_tests': 'MaxParallelOfTests'
        }

        self._max_number_of_tests = max_number_of_tests
        self._max_parallel_of_tests = max_parallel_of_tests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationJobInputConfigResourceLimit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationJobInputConfig_ResourceLimit of this RecommendationJobInputConfigResourceLimit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_number_of_tests(self):
        """Gets the max_number_of_tests of this RecommendationJobInputConfigResourceLimit.


        :return: The max_number_of_tests of this RecommendationJobInputConfigResourceLimit.
        :rtype: int
        """
        return self._max_number_of_tests

    @max_number_of_tests.setter
    def max_number_of_tests(self, max_number_of_tests):
        """Sets the max_number_of_tests of this RecommendationJobInputConfigResourceLimit.


        :param max_number_of_tests: The max_number_of_tests of this RecommendationJobInputConfigResourceLimit.
        :type max_number_of_tests: int
        """

        self._max_number_of_tests = max_number_of_tests

    @property
    def max_parallel_of_tests(self):
        """Gets the max_parallel_of_tests of this RecommendationJobInputConfigResourceLimit.


        :return: The max_parallel_of_tests of this RecommendationJobInputConfigResourceLimit.
        :rtype: int
        """
        return self._max_parallel_of_tests

    @max_parallel_of_tests.setter
    def max_parallel_of_tests(self, max_parallel_of_tests):
        """Sets the max_parallel_of_tests of this RecommendationJobInputConfigResourceLimit.


        :param max_parallel_of_tests: The max_parallel_of_tests of this RecommendationJobInputConfigResourceLimit.
        :type max_parallel_of_tests: int
        """

        self._max_parallel_of_tests = max_parallel_of_tests
