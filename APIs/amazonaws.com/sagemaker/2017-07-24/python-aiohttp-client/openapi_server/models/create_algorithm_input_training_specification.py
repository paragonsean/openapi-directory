# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAlgorithmInputTrainingSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, training_image: str=None, training_image_digest: str=None, supported_hyper_parameters: List=None, supported_training_instance_types: List=None, supports_distributed_training: bool=None, metric_definitions: List=None, training_channels: List=None, supported_tuning_job_objective_metrics: List=None):
        """CreateAlgorithmInputTrainingSpecification - a model defined in OpenAPI

        :param training_image: The training_image of this CreateAlgorithmInputTrainingSpecification.
        :param training_image_digest: The training_image_digest of this CreateAlgorithmInputTrainingSpecification.
        :param supported_hyper_parameters: The supported_hyper_parameters of this CreateAlgorithmInputTrainingSpecification.
        :param supported_training_instance_types: The supported_training_instance_types of this CreateAlgorithmInputTrainingSpecification.
        :param supports_distributed_training: The supports_distributed_training of this CreateAlgorithmInputTrainingSpecification.
        :param metric_definitions: The metric_definitions of this CreateAlgorithmInputTrainingSpecification.
        :param training_channels: The training_channels of this CreateAlgorithmInputTrainingSpecification.
        :param supported_tuning_job_objective_metrics: The supported_tuning_job_objective_metrics of this CreateAlgorithmInputTrainingSpecification.
        """
        self.openapi_types = {
            'training_image': str,
            'training_image_digest': str,
            'supported_hyper_parameters': List,
            'supported_training_instance_types': List,
            'supports_distributed_training': bool,
            'metric_definitions': List,
            'training_channels': List,
            'supported_tuning_job_objective_metrics': List
        }

        self.attribute_map = {
            'training_image': 'TrainingImage',
            'training_image_digest': 'TrainingImageDigest',
            'supported_hyper_parameters': 'SupportedHyperParameters',
            'supported_training_instance_types': 'SupportedTrainingInstanceTypes',
            'supports_distributed_training': 'SupportsDistributedTraining',
            'metric_definitions': 'MetricDefinitions',
            'training_channels': 'TrainingChannels',
            'supported_tuning_job_objective_metrics': 'SupportedTuningJobObjectiveMetrics'
        }

        self._training_image = training_image
        self._training_image_digest = training_image_digest
        self._supported_hyper_parameters = supported_hyper_parameters
        self._supported_training_instance_types = supported_training_instance_types
        self._supports_distributed_training = supports_distributed_training
        self._metric_definitions = metric_definitions
        self._training_channels = training_channels
        self._supported_tuning_job_objective_metrics = supported_tuning_job_objective_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAlgorithmInputTrainingSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAlgorithmInput_TrainingSpecification of this CreateAlgorithmInputTrainingSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def training_image(self):
        """Gets the training_image of this CreateAlgorithmInputTrainingSpecification.


        :return: The training_image of this CreateAlgorithmInputTrainingSpecification.
        :rtype: str
        """
        return self._training_image

    @training_image.setter
    def training_image(self, training_image):
        """Sets the training_image of this CreateAlgorithmInputTrainingSpecification.


        :param training_image: The training_image of this CreateAlgorithmInputTrainingSpecification.
        :type training_image: str
        """
        if training_image is None:
            raise ValueError("Invalid value for `training_image`, must not be `None`")

        self._training_image = training_image

    @property
    def training_image_digest(self):
        """Gets the training_image_digest of this CreateAlgorithmInputTrainingSpecification.


        :return: The training_image_digest of this CreateAlgorithmInputTrainingSpecification.
        :rtype: str
        """
        return self._training_image_digest

    @training_image_digest.setter
    def training_image_digest(self, training_image_digest):
        """Sets the training_image_digest of this CreateAlgorithmInputTrainingSpecification.


        :param training_image_digest: The training_image_digest of this CreateAlgorithmInputTrainingSpecification.
        :type training_image_digest: str
        """

        self._training_image_digest = training_image_digest

    @property
    def supported_hyper_parameters(self):
        """Gets the supported_hyper_parameters of this CreateAlgorithmInputTrainingSpecification.


        :return: The supported_hyper_parameters of this CreateAlgorithmInputTrainingSpecification.
        :rtype: List
        """
        return self._supported_hyper_parameters

    @supported_hyper_parameters.setter
    def supported_hyper_parameters(self, supported_hyper_parameters):
        """Sets the supported_hyper_parameters of this CreateAlgorithmInputTrainingSpecification.


        :param supported_hyper_parameters: The supported_hyper_parameters of this CreateAlgorithmInputTrainingSpecification.
        :type supported_hyper_parameters: List
        """

        self._supported_hyper_parameters = supported_hyper_parameters

    @property
    def supported_training_instance_types(self):
        """Gets the supported_training_instance_types of this CreateAlgorithmInputTrainingSpecification.


        :return: The supported_training_instance_types of this CreateAlgorithmInputTrainingSpecification.
        :rtype: List
        """
        return self._supported_training_instance_types

    @supported_training_instance_types.setter
    def supported_training_instance_types(self, supported_training_instance_types):
        """Sets the supported_training_instance_types of this CreateAlgorithmInputTrainingSpecification.


        :param supported_training_instance_types: The supported_training_instance_types of this CreateAlgorithmInputTrainingSpecification.
        :type supported_training_instance_types: List
        """
        if supported_training_instance_types is None:
            raise ValueError("Invalid value for `supported_training_instance_types`, must not be `None`")

        self._supported_training_instance_types = supported_training_instance_types

    @property
    def supports_distributed_training(self):
        """Gets the supports_distributed_training of this CreateAlgorithmInputTrainingSpecification.


        :return: The supports_distributed_training of this CreateAlgorithmInputTrainingSpecification.
        :rtype: bool
        """
        return self._supports_distributed_training

    @supports_distributed_training.setter
    def supports_distributed_training(self, supports_distributed_training):
        """Sets the supports_distributed_training of this CreateAlgorithmInputTrainingSpecification.


        :param supports_distributed_training: The supports_distributed_training of this CreateAlgorithmInputTrainingSpecification.
        :type supports_distributed_training: bool
        """

        self._supports_distributed_training = supports_distributed_training

    @property
    def metric_definitions(self):
        """Gets the metric_definitions of this CreateAlgorithmInputTrainingSpecification.


        :return: The metric_definitions of this CreateAlgorithmInputTrainingSpecification.
        :rtype: List
        """
        return self._metric_definitions

    @metric_definitions.setter
    def metric_definitions(self, metric_definitions):
        """Sets the metric_definitions of this CreateAlgorithmInputTrainingSpecification.


        :param metric_definitions: The metric_definitions of this CreateAlgorithmInputTrainingSpecification.
        :type metric_definitions: List
        """

        self._metric_definitions = metric_definitions

    @property
    def training_channels(self):
        """Gets the training_channels of this CreateAlgorithmInputTrainingSpecification.


        :return: The training_channels of this CreateAlgorithmInputTrainingSpecification.
        :rtype: List
        """
        return self._training_channels

    @training_channels.setter
    def training_channels(self, training_channels):
        """Sets the training_channels of this CreateAlgorithmInputTrainingSpecification.


        :param training_channels: The training_channels of this CreateAlgorithmInputTrainingSpecification.
        :type training_channels: List
        """
        if training_channels is None:
            raise ValueError("Invalid value for `training_channels`, must not be `None`")

        self._training_channels = training_channels

    @property
    def supported_tuning_job_objective_metrics(self):
        """Gets the supported_tuning_job_objective_metrics of this CreateAlgorithmInputTrainingSpecification.


        :return: The supported_tuning_job_objective_metrics of this CreateAlgorithmInputTrainingSpecification.
        :rtype: List
        """
        return self._supported_tuning_job_objective_metrics

    @supported_tuning_job_objective_metrics.setter
    def supported_tuning_job_objective_metrics(self, supported_tuning_job_objective_metrics):
        """Sets the supported_tuning_job_objective_metrics of this CreateAlgorithmInputTrainingSpecification.


        :param supported_tuning_job_objective_metrics: The supported_tuning_job_objective_metrics of this CreateAlgorithmInputTrainingSpecification.
        :type supported_tuning_job_objective_metrics: List
        """

        self._supported_tuning_job_objective_metrics = supported_tuning_job_objective_metrics
