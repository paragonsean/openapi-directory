# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.jupyter_server_app_settings import JupyterServerAppSettings
from openapi_server.models.kernel_gateway_app_settings import KernelGatewayAppSettings
from openapi_server import util


class DefaultSpaceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_role: str=None, security_groups: List=None, jupyter_server_app_settings: JupyterServerAppSettings=None, kernel_gateway_app_settings: KernelGatewayAppSettings=None):
        """DefaultSpaceSettings - a model defined in OpenAPI

        :param execution_role: The execution_role of this DefaultSpaceSettings.
        :param security_groups: The security_groups of this DefaultSpaceSettings.
        :param jupyter_server_app_settings: The jupyter_server_app_settings of this DefaultSpaceSettings.
        :param kernel_gateway_app_settings: The kernel_gateway_app_settings of this DefaultSpaceSettings.
        """
        self.openapi_types = {
            'execution_role': str,
            'security_groups': List,
            'jupyter_server_app_settings': JupyterServerAppSettings,
            'kernel_gateway_app_settings': KernelGatewayAppSettings
        }

        self.attribute_map = {
            'execution_role': 'ExecutionRole',
            'security_groups': 'SecurityGroups',
            'jupyter_server_app_settings': 'JupyterServerAppSettings',
            'kernel_gateway_app_settings': 'KernelGatewayAppSettings'
        }

        self._execution_role = execution_role
        self._security_groups = security_groups
        self._jupyter_server_app_settings = jupyter_server_app_settings
        self._kernel_gateway_app_settings = kernel_gateway_app_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefaultSpaceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefaultSpaceSettings of this DefaultSpaceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_role(self):
        """Gets the execution_role of this DefaultSpaceSettings.


        :return: The execution_role of this DefaultSpaceSettings.
        :rtype: str
        """
        return self._execution_role

    @execution_role.setter
    def execution_role(self, execution_role):
        """Sets the execution_role of this DefaultSpaceSettings.


        :param execution_role: The execution_role of this DefaultSpaceSettings.
        :type execution_role: str
        """

        self._execution_role = execution_role

    @property
    def security_groups(self):
        """Gets the security_groups of this DefaultSpaceSettings.


        :return: The security_groups of this DefaultSpaceSettings.
        :rtype: List
        """
        return self._security_groups

    @security_groups.setter
    def security_groups(self, security_groups):
        """Sets the security_groups of this DefaultSpaceSettings.


        :param security_groups: The security_groups of this DefaultSpaceSettings.
        :type security_groups: List
        """

        self._security_groups = security_groups

    @property
    def jupyter_server_app_settings(self):
        """Gets the jupyter_server_app_settings of this DefaultSpaceSettings.


        :return: The jupyter_server_app_settings of this DefaultSpaceSettings.
        :rtype: JupyterServerAppSettings
        """
        return self._jupyter_server_app_settings

    @jupyter_server_app_settings.setter
    def jupyter_server_app_settings(self, jupyter_server_app_settings):
        """Sets the jupyter_server_app_settings of this DefaultSpaceSettings.


        :param jupyter_server_app_settings: The jupyter_server_app_settings of this DefaultSpaceSettings.
        :type jupyter_server_app_settings: JupyterServerAppSettings
        """

        self._jupyter_server_app_settings = jupyter_server_app_settings

    @property
    def kernel_gateway_app_settings(self):
        """Gets the kernel_gateway_app_settings of this DefaultSpaceSettings.


        :return: The kernel_gateway_app_settings of this DefaultSpaceSettings.
        :rtype: KernelGatewayAppSettings
        """
        return self._kernel_gateway_app_settings

    @kernel_gateway_app_settings.setter
    def kernel_gateway_app_settings(self, kernel_gateway_app_settings):
        """Sets the kernel_gateway_app_settings of this DefaultSpaceSettings.


        :param kernel_gateway_app_settings: The kernel_gateway_app_settings of this DefaultSpaceSettings.
        :type kernel_gateway_app_settings: KernelGatewayAppSettings
        """

        self._kernel_gateway_app_settings = kernel_gateway_app_settings
