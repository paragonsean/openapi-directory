# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_security_group_management import AppSecurityGroupManagement
from openapi_server.models.create_user_profile_request_user_settings import CreateUserProfileRequestUserSettings
from openapi_server.models.update_domain_request_default_space_settings import UpdateDomainRequestDefaultSpaceSettings
from openapi_server.models.update_domain_request_domain_settings_for_update import UpdateDomainRequestDomainSettingsForUpdate
from openapi_server import util


class UpdateDomainRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_id: str=None, default_user_settings: CreateUserProfileRequestUserSettings=None, domain_settings_for_update: UpdateDomainRequestDomainSettingsForUpdate=None, default_space_settings: UpdateDomainRequestDefaultSpaceSettings=None, app_security_group_management: AppSecurityGroupManagement=None):
        """UpdateDomainRequest - a model defined in OpenAPI

        :param domain_id: The domain_id of this UpdateDomainRequest.
        :param default_user_settings: The default_user_settings of this UpdateDomainRequest.
        :param domain_settings_for_update: The domain_settings_for_update of this UpdateDomainRequest.
        :param default_space_settings: The default_space_settings of this UpdateDomainRequest.
        :param app_security_group_management: The app_security_group_management of this UpdateDomainRequest.
        """
        self.openapi_types = {
            'domain_id': str,
            'default_user_settings': CreateUserProfileRequestUserSettings,
            'domain_settings_for_update': UpdateDomainRequestDomainSettingsForUpdate,
            'default_space_settings': UpdateDomainRequestDefaultSpaceSettings,
            'app_security_group_management': AppSecurityGroupManagement
        }

        self.attribute_map = {
            'domain_id': 'DomainId',
            'default_user_settings': 'DefaultUserSettings',
            'domain_settings_for_update': 'DomainSettingsForUpdate',
            'default_space_settings': 'DefaultSpaceSettings',
            'app_security_group_management': 'AppSecurityGroupManagement'
        }

        self._domain_id = domain_id
        self._default_user_settings = default_user_settings
        self._domain_settings_for_update = domain_settings_for_update
        self._default_space_settings = default_space_settings
        self._app_security_group_management = app_security_group_management

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDomainRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDomainRequest of this UpdateDomainRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_id(self):
        """Gets the domain_id of this UpdateDomainRequest.


        :return: The domain_id of this UpdateDomainRequest.
        :rtype: str
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this UpdateDomainRequest.


        :param domain_id: The domain_id of this UpdateDomainRequest.
        :type domain_id: str
        """
        if domain_id is None:
            raise ValueError("Invalid value for `domain_id`, must not be `None`")

        self._domain_id = domain_id

    @property
    def default_user_settings(self):
        """Gets the default_user_settings of this UpdateDomainRequest.


        :return: The default_user_settings of this UpdateDomainRequest.
        :rtype: CreateUserProfileRequestUserSettings
        """
        return self._default_user_settings

    @default_user_settings.setter
    def default_user_settings(self, default_user_settings):
        """Sets the default_user_settings of this UpdateDomainRequest.


        :param default_user_settings: The default_user_settings of this UpdateDomainRequest.
        :type default_user_settings: CreateUserProfileRequestUserSettings
        """

        self._default_user_settings = default_user_settings

    @property
    def domain_settings_for_update(self):
        """Gets the domain_settings_for_update of this UpdateDomainRequest.


        :return: The domain_settings_for_update of this UpdateDomainRequest.
        :rtype: UpdateDomainRequestDomainSettingsForUpdate
        """
        return self._domain_settings_for_update

    @domain_settings_for_update.setter
    def domain_settings_for_update(self, domain_settings_for_update):
        """Sets the domain_settings_for_update of this UpdateDomainRequest.


        :param domain_settings_for_update: The domain_settings_for_update of this UpdateDomainRequest.
        :type domain_settings_for_update: UpdateDomainRequestDomainSettingsForUpdate
        """

        self._domain_settings_for_update = domain_settings_for_update

    @property
    def default_space_settings(self):
        """Gets the default_space_settings of this UpdateDomainRequest.


        :return: The default_space_settings of this UpdateDomainRequest.
        :rtype: UpdateDomainRequestDefaultSpaceSettings
        """
        return self._default_space_settings

    @default_space_settings.setter
    def default_space_settings(self, default_space_settings):
        """Sets the default_space_settings of this UpdateDomainRequest.


        :param default_space_settings: The default_space_settings of this UpdateDomainRequest.
        :type default_space_settings: UpdateDomainRequestDefaultSpaceSettings
        """

        self._default_space_settings = default_space_settings

    @property
    def app_security_group_management(self):
        """Gets the app_security_group_management of this UpdateDomainRequest.


        :return: The app_security_group_management of this UpdateDomainRequest.
        :rtype: AppSecurityGroupManagement
        """
        return self._app_security_group_management

    @app_security_group_management.setter
    def app_security_group_management(self, app_security_group_management):
        """Sets the app_security_group_management of this UpdateDomainRequest.


        :param app_security_group_management: The app_security_group_management of this UpdateDomainRequest.
        :type app_security_group_management: AppSecurityGroupManagement
        """

        self._app_security_group_management = app_security_group_management
