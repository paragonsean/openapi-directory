# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_status import HubStatus
from openapi_server import util


class HubInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_name: str=None, hub_arn: str=None, hub_display_name: str=None, hub_description: str=None, hub_search_keywords: List=None, hub_status: HubStatus=None, creation_time: datetime=None, last_modified_time: datetime=None):
        """HubInfo - a model defined in OpenAPI

        :param hub_name: The hub_name of this HubInfo.
        :param hub_arn: The hub_arn of this HubInfo.
        :param hub_display_name: The hub_display_name of this HubInfo.
        :param hub_description: The hub_description of this HubInfo.
        :param hub_search_keywords: The hub_search_keywords of this HubInfo.
        :param hub_status: The hub_status of this HubInfo.
        :param creation_time: The creation_time of this HubInfo.
        :param last_modified_time: The last_modified_time of this HubInfo.
        """
        self.openapi_types = {
            'hub_name': str,
            'hub_arn': str,
            'hub_display_name': str,
            'hub_description': str,
            'hub_search_keywords': List,
            'hub_status': HubStatus,
            'creation_time': datetime,
            'last_modified_time': datetime
        }

        self.attribute_map = {
            'hub_name': 'HubName',
            'hub_arn': 'HubArn',
            'hub_display_name': 'HubDisplayName',
            'hub_description': 'HubDescription',
            'hub_search_keywords': 'HubSearchKeywords',
            'hub_status': 'HubStatus',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime'
        }

        self._hub_name = hub_name
        self._hub_arn = hub_arn
        self._hub_display_name = hub_display_name
        self._hub_description = hub_description
        self._hub_search_keywords = hub_search_keywords
        self._hub_status = hub_status
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HubInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HubInfo of this HubInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_name(self):
        """Gets the hub_name of this HubInfo.


        :return: The hub_name of this HubInfo.
        :rtype: str
        """
        return self._hub_name

    @hub_name.setter
    def hub_name(self, hub_name):
        """Sets the hub_name of this HubInfo.


        :param hub_name: The hub_name of this HubInfo.
        :type hub_name: str
        """
        if hub_name is None:
            raise ValueError("Invalid value for `hub_name`, must not be `None`")

        self._hub_name = hub_name

    @property
    def hub_arn(self):
        """Gets the hub_arn of this HubInfo.


        :return: The hub_arn of this HubInfo.
        :rtype: str
        """
        return self._hub_arn

    @hub_arn.setter
    def hub_arn(self, hub_arn):
        """Sets the hub_arn of this HubInfo.


        :param hub_arn: The hub_arn of this HubInfo.
        :type hub_arn: str
        """
        if hub_arn is None:
            raise ValueError("Invalid value for `hub_arn`, must not be `None`")

        self._hub_arn = hub_arn

    @property
    def hub_display_name(self):
        """Gets the hub_display_name of this HubInfo.


        :return: The hub_display_name of this HubInfo.
        :rtype: str
        """
        return self._hub_display_name

    @hub_display_name.setter
    def hub_display_name(self, hub_display_name):
        """Sets the hub_display_name of this HubInfo.


        :param hub_display_name: The hub_display_name of this HubInfo.
        :type hub_display_name: str
        """

        self._hub_display_name = hub_display_name

    @property
    def hub_description(self):
        """Gets the hub_description of this HubInfo.


        :return: The hub_description of this HubInfo.
        :rtype: str
        """
        return self._hub_description

    @hub_description.setter
    def hub_description(self, hub_description):
        """Sets the hub_description of this HubInfo.


        :param hub_description: The hub_description of this HubInfo.
        :type hub_description: str
        """

        self._hub_description = hub_description

    @property
    def hub_search_keywords(self):
        """Gets the hub_search_keywords of this HubInfo.


        :return: The hub_search_keywords of this HubInfo.
        :rtype: List
        """
        return self._hub_search_keywords

    @hub_search_keywords.setter
    def hub_search_keywords(self, hub_search_keywords):
        """Sets the hub_search_keywords of this HubInfo.


        :param hub_search_keywords: The hub_search_keywords of this HubInfo.
        :type hub_search_keywords: List
        """

        self._hub_search_keywords = hub_search_keywords

    @property
    def hub_status(self):
        """Gets the hub_status of this HubInfo.


        :return: The hub_status of this HubInfo.
        :rtype: HubStatus
        """
        return self._hub_status

    @hub_status.setter
    def hub_status(self, hub_status):
        """Sets the hub_status of this HubInfo.


        :param hub_status: The hub_status of this HubInfo.
        :type hub_status: HubStatus
        """
        if hub_status is None:
            raise ValueError("Invalid value for `hub_status`, must not be `None`")

        self._hub_status = hub_status

    @property
    def creation_time(self):
        """Gets the creation_time of this HubInfo.


        :return: The creation_time of this HubInfo.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this HubInfo.


        :param creation_time: The creation_time of this HubInfo.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this HubInfo.


        :return: The last_modified_time of this HubInfo.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this HubInfo.


        :param last_modified_time: The last_modified_time of this HubInfo.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time
