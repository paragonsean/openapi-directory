# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateEdgeDeploymentStageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edge_deployment_plan_name: str=None, stages: List=None):
        """CreateEdgeDeploymentStageRequest - a model defined in OpenAPI

        :param edge_deployment_plan_name: The edge_deployment_plan_name of this CreateEdgeDeploymentStageRequest.
        :param stages: The stages of this CreateEdgeDeploymentStageRequest.
        """
        self.openapi_types = {
            'edge_deployment_plan_name': str,
            'stages': List
        }

        self.attribute_map = {
            'edge_deployment_plan_name': 'EdgeDeploymentPlanName',
            'stages': 'Stages'
        }

        self._edge_deployment_plan_name = edge_deployment_plan_name
        self._stages = stages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateEdgeDeploymentStageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateEdgeDeploymentStageRequest of this CreateEdgeDeploymentStageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edge_deployment_plan_name(self):
        """Gets the edge_deployment_plan_name of this CreateEdgeDeploymentStageRequest.


        :return: The edge_deployment_plan_name of this CreateEdgeDeploymentStageRequest.
        :rtype: str
        """
        return self._edge_deployment_plan_name

    @edge_deployment_plan_name.setter
    def edge_deployment_plan_name(self, edge_deployment_plan_name):
        """Sets the edge_deployment_plan_name of this CreateEdgeDeploymentStageRequest.


        :param edge_deployment_plan_name: The edge_deployment_plan_name of this CreateEdgeDeploymentStageRequest.
        :type edge_deployment_plan_name: str
        """
        if edge_deployment_plan_name is None:
            raise ValueError("Invalid value for `edge_deployment_plan_name`, must not be `None`")

        self._edge_deployment_plan_name = edge_deployment_plan_name

    @property
    def stages(self):
        """Gets the stages of this CreateEdgeDeploymentStageRequest.


        :return: The stages of this CreateEdgeDeploymentStageRequest.
        :rtype: List
        """
        return self._stages

    @stages.setter
    def stages(self, stages):
        """Sets the stages of this CreateEdgeDeploymentStageRequest.


        :param stages: The stages of this CreateEdgeDeploymentStageRequest.
        :type stages: List
        """
        if stages is None:
            raise ValueError("Invalid value for `stages`, must not be `None`")

        self._stages = stages
