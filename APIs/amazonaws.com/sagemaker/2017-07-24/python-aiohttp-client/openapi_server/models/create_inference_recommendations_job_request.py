# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_inference_recommendations_job_request_input_config import CreateInferenceRecommendationsJobRequestInputConfig
from openapi_server.models.create_inference_recommendations_job_request_output_config import CreateInferenceRecommendationsJobRequestOutputConfig
from openapi_server.models.create_inference_recommendations_job_request_stopping_conditions import CreateInferenceRecommendationsJobRequestStoppingConditions
from openapi_server.models.recommendation_job_type import RecommendationJobType
from openapi_server import util


class CreateInferenceRecommendationsJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_name: str=None, job_type: RecommendationJobType=None, role_arn: str=None, input_config: CreateInferenceRecommendationsJobRequestInputConfig=None, job_description: str=None, stopping_conditions: CreateInferenceRecommendationsJobRequestStoppingConditions=None, output_config: CreateInferenceRecommendationsJobRequestOutputConfig=None, tags: List=None):
        """CreateInferenceRecommendationsJobRequest - a model defined in OpenAPI

        :param job_name: The job_name of this CreateInferenceRecommendationsJobRequest.
        :param job_type: The job_type of this CreateInferenceRecommendationsJobRequest.
        :param role_arn: The role_arn of this CreateInferenceRecommendationsJobRequest.
        :param input_config: The input_config of this CreateInferenceRecommendationsJobRequest.
        :param job_description: The job_description of this CreateInferenceRecommendationsJobRequest.
        :param stopping_conditions: The stopping_conditions of this CreateInferenceRecommendationsJobRequest.
        :param output_config: The output_config of this CreateInferenceRecommendationsJobRequest.
        :param tags: The tags of this CreateInferenceRecommendationsJobRequest.
        """
        self.openapi_types = {
            'job_name': str,
            'job_type': RecommendationJobType,
            'role_arn': str,
            'input_config': CreateInferenceRecommendationsJobRequestInputConfig,
            'job_description': str,
            'stopping_conditions': CreateInferenceRecommendationsJobRequestStoppingConditions,
            'output_config': CreateInferenceRecommendationsJobRequestOutputConfig,
            'tags': List
        }

        self.attribute_map = {
            'job_name': 'JobName',
            'job_type': 'JobType',
            'role_arn': 'RoleArn',
            'input_config': 'InputConfig',
            'job_description': 'JobDescription',
            'stopping_conditions': 'StoppingConditions',
            'output_config': 'OutputConfig',
            'tags': 'Tags'
        }

        self._job_name = job_name
        self._job_type = job_type
        self._role_arn = role_arn
        self._input_config = input_config
        self._job_description = job_description
        self._stopping_conditions = stopping_conditions
        self._output_config = output_config
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInferenceRecommendationsJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInferenceRecommendationsJobRequest of this CreateInferenceRecommendationsJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_name(self):
        """Gets the job_name of this CreateInferenceRecommendationsJobRequest.


        :return: The job_name of this CreateInferenceRecommendationsJobRequest.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this CreateInferenceRecommendationsJobRequest.


        :param job_name: The job_name of this CreateInferenceRecommendationsJobRequest.
        :type job_name: str
        """
        if job_name is None:
            raise ValueError("Invalid value for `job_name`, must not be `None`")

        self._job_name = job_name

    @property
    def job_type(self):
        """Gets the job_type of this CreateInferenceRecommendationsJobRequest.


        :return: The job_type of this CreateInferenceRecommendationsJobRequest.
        :rtype: RecommendationJobType
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this CreateInferenceRecommendationsJobRequest.


        :param job_type: The job_type of this CreateInferenceRecommendationsJobRequest.
        :type job_type: RecommendationJobType
        """
        if job_type is None:
            raise ValueError("Invalid value for `job_type`, must not be `None`")

        self._job_type = job_type

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateInferenceRecommendationsJobRequest.


        :return: The role_arn of this CreateInferenceRecommendationsJobRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateInferenceRecommendationsJobRequest.


        :param role_arn: The role_arn of this CreateInferenceRecommendationsJobRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def input_config(self):
        """Gets the input_config of this CreateInferenceRecommendationsJobRequest.


        :return: The input_config of this CreateInferenceRecommendationsJobRequest.
        :rtype: CreateInferenceRecommendationsJobRequestInputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this CreateInferenceRecommendationsJobRequest.


        :param input_config: The input_config of this CreateInferenceRecommendationsJobRequest.
        :type input_config: CreateInferenceRecommendationsJobRequestInputConfig
        """
        if input_config is None:
            raise ValueError("Invalid value for `input_config`, must not be `None`")

        self._input_config = input_config

    @property
    def job_description(self):
        """Gets the job_description of this CreateInferenceRecommendationsJobRequest.


        :return: The job_description of this CreateInferenceRecommendationsJobRequest.
        :rtype: str
        """
        return self._job_description

    @job_description.setter
    def job_description(self, job_description):
        """Sets the job_description of this CreateInferenceRecommendationsJobRequest.


        :param job_description: The job_description of this CreateInferenceRecommendationsJobRequest.
        :type job_description: str
        """

        self._job_description = job_description

    @property
    def stopping_conditions(self):
        """Gets the stopping_conditions of this CreateInferenceRecommendationsJobRequest.


        :return: The stopping_conditions of this CreateInferenceRecommendationsJobRequest.
        :rtype: CreateInferenceRecommendationsJobRequestStoppingConditions
        """
        return self._stopping_conditions

    @stopping_conditions.setter
    def stopping_conditions(self, stopping_conditions):
        """Sets the stopping_conditions of this CreateInferenceRecommendationsJobRequest.


        :param stopping_conditions: The stopping_conditions of this CreateInferenceRecommendationsJobRequest.
        :type stopping_conditions: CreateInferenceRecommendationsJobRequestStoppingConditions
        """

        self._stopping_conditions = stopping_conditions

    @property
    def output_config(self):
        """Gets the output_config of this CreateInferenceRecommendationsJobRequest.


        :return: The output_config of this CreateInferenceRecommendationsJobRequest.
        :rtype: CreateInferenceRecommendationsJobRequestOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this CreateInferenceRecommendationsJobRequest.


        :param output_config: The output_config of this CreateInferenceRecommendationsJobRequest.
        :type output_config: CreateInferenceRecommendationsJobRequestOutputConfig
        """

        self._output_config = output_config

    @property
    def tags(self):
        """Gets the tags of this CreateInferenceRecommendationsJobRequest.


        :return: The tags of this CreateInferenceRecommendationsJobRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateInferenceRecommendationsJobRequest.


        :param tags: The tags of this CreateInferenceRecommendationsJobRequest.
        :type tags: List
        """

        self._tags = tags
