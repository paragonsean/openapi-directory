# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.r_studio_server_pro_access_status import RStudioServerProAccessStatus
from openapi_server.models.r_studio_server_pro_user_group import RStudioServerProUserGroup
from openapi_server import util


class UserSettingsRStudioServerProAppSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_status: RStudioServerProAccessStatus=None, user_group: RStudioServerProUserGroup=None):
        """UserSettingsRStudioServerProAppSettings - a model defined in OpenAPI

        :param access_status: The access_status of this UserSettingsRStudioServerProAppSettings.
        :param user_group: The user_group of this UserSettingsRStudioServerProAppSettings.
        """
        self.openapi_types = {
            'access_status': RStudioServerProAccessStatus,
            'user_group': RStudioServerProUserGroup
        }

        self.attribute_map = {
            'access_status': 'AccessStatus',
            'user_group': 'UserGroup'
        }

        self._access_status = access_status
        self._user_group = user_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserSettingsRStudioServerProAppSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserSettings_RStudioServerProAppSettings of this UserSettingsRStudioServerProAppSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_status(self):
        """Gets the access_status of this UserSettingsRStudioServerProAppSettings.


        :return: The access_status of this UserSettingsRStudioServerProAppSettings.
        :rtype: RStudioServerProAccessStatus
        """
        return self._access_status

    @access_status.setter
    def access_status(self, access_status):
        """Sets the access_status of this UserSettingsRStudioServerProAppSettings.


        :param access_status: The access_status of this UserSettingsRStudioServerProAppSettings.
        :type access_status: RStudioServerProAccessStatus
        """

        self._access_status = access_status

    @property
    def user_group(self):
        """Gets the user_group of this UserSettingsRStudioServerProAppSettings.


        :return: The user_group of this UserSettingsRStudioServerProAppSettings.
        :rtype: RStudioServerProUserGroup
        """
        return self._user_group

    @user_group.setter
    def user_group(self, user_group):
        """Sets the user_group of this UserSettingsRStudioServerProAppSettings.


        :param user_group: The user_group of this UserSettingsRStudioServerProAppSettings.
        :type user_group: RStudioServerProUserGroup
        """

        self._user_group = user_group
