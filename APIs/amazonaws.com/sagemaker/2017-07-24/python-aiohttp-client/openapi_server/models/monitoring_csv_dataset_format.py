# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitoringCsvDatasetFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, header: bool=None):
        """MonitoringCsvDatasetFormat - a model defined in OpenAPI

        :param header: The header of this MonitoringCsvDatasetFormat.
        """
        self.openapi_types = {
            'header': bool
        }

        self.attribute_map = {
            'header': 'Header'
        }

        self._header = header

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringCsvDatasetFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringCsvDatasetFormat of this MonitoringCsvDatasetFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header(self):
        """Gets the header of this MonitoringCsvDatasetFormat.


        :return: The header of this MonitoringCsvDatasetFormat.
        :rtype: bool
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this MonitoringCsvDatasetFormat.


        :param header: The header of this MonitoringCsvDatasetFormat.
        :type header: bool
        """

        self._header = header
