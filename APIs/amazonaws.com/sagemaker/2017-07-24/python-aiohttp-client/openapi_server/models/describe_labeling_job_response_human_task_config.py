# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.human_task_config_annotation_consolidation_config import HumanTaskConfigAnnotationConsolidationConfig
from openapi_server.models.human_task_config_public_workforce_task_price import HumanTaskConfigPublicWorkforceTaskPrice
from openapi_server.models.human_task_config_ui_config import HumanTaskConfigUiConfig
from openapi_server import util


class DescribeLabelingJobResponseHumanTaskConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam_arn: str=None, ui_config: HumanTaskConfigUiConfig=None, pre_human_task_lambda_arn: str=None, task_keywords: List=None, task_title: str=None, task_description: str=None, number_of_human_workers_per_data_object: int=None, task_time_limit_in_seconds: int=None, task_availability_lifetime_in_seconds: int=None, max_concurrent_task_count: int=None, annotation_consolidation_config: HumanTaskConfigAnnotationConsolidationConfig=None, public_workforce_task_price: HumanTaskConfigPublicWorkforceTaskPrice=None):
        """DescribeLabelingJobResponseHumanTaskConfig - a model defined in OpenAPI

        :param workteam_arn: The workteam_arn of this DescribeLabelingJobResponseHumanTaskConfig.
        :param ui_config: The ui_config of this DescribeLabelingJobResponseHumanTaskConfig.
        :param pre_human_task_lambda_arn: The pre_human_task_lambda_arn of this DescribeLabelingJobResponseHumanTaskConfig.
        :param task_keywords: The task_keywords of this DescribeLabelingJobResponseHumanTaskConfig.
        :param task_title: The task_title of this DescribeLabelingJobResponseHumanTaskConfig.
        :param task_description: The task_description of this DescribeLabelingJobResponseHumanTaskConfig.
        :param number_of_human_workers_per_data_object: The number_of_human_workers_per_data_object of this DescribeLabelingJobResponseHumanTaskConfig.
        :param task_time_limit_in_seconds: The task_time_limit_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.
        :param task_availability_lifetime_in_seconds: The task_availability_lifetime_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.
        :param max_concurrent_task_count: The max_concurrent_task_count of this DescribeLabelingJobResponseHumanTaskConfig.
        :param annotation_consolidation_config: The annotation_consolidation_config of this DescribeLabelingJobResponseHumanTaskConfig.
        :param public_workforce_task_price: The public_workforce_task_price of this DescribeLabelingJobResponseHumanTaskConfig.
        """
        self.openapi_types = {
            'workteam_arn': str,
            'ui_config': HumanTaskConfigUiConfig,
            'pre_human_task_lambda_arn': str,
            'task_keywords': List,
            'task_title': str,
            'task_description': str,
            'number_of_human_workers_per_data_object': int,
            'task_time_limit_in_seconds': int,
            'task_availability_lifetime_in_seconds': int,
            'max_concurrent_task_count': int,
            'annotation_consolidation_config': HumanTaskConfigAnnotationConsolidationConfig,
            'public_workforce_task_price': HumanTaskConfigPublicWorkforceTaskPrice
        }

        self.attribute_map = {
            'workteam_arn': 'WorkteamArn',
            'ui_config': 'UiConfig',
            'pre_human_task_lambda_arn': 'PreHumanTaskLambdaArn',
            'task_keywords': 'TaskKeywords',
            'task_title': 'TaskTitle',
            'task_description': 'TaskDescription',
            'number_of_human_workers_per_data_object': 'NumberOfHumanWorkersPerDataObject',
            'task_time_limit_in_seconds': 'TaskTimeLimitInSeconds',
            'task_availability_lifetime_in_seconds': 'TaskAvailabilityLifetimeInSeconds',
            'max_concurrent_task_count': 'MaxConcurrentTaskCount',
            'annotation_consolidation_config': 'AnnotationConsolidationConfig',
            'public_workforce_task_price': 'PublicWorkforceTaskPrice'
        }

        self._workteam_arn = workteam_arn
        self._ui_config = ui_config
        self._pre_human_task_lambda_arn = pre_human_task_lambda_arn
        self._task_keywords = task_keywords
        self._task_title = task_title
        self._task_description = task_description
        self._number_of_human_workers_per_data_object = number_of_human_workers_per_data_object
        self._task_time_limit_in_seconds = task_time_limit_in_seconds
        self._task_availability_lifetime_in_seconds = task_availability_lifetime_in_seconds
        self._max_concurrent_task_count = max_concurrent_task_count
        self._annotation_consolidation_config = annotation_consolidation_config
        self._public_workforce_task_price = public_workforce_task_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeLabelingJobResponseHumanTaskConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeLabelingJobResponse_HumanTaskConfig of this DescribeLabelingJobResponseHumanTaskConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam_arn(self):
        """Gets the workteam_arn of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The workteam_arn of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: str
        """
        return self._workteam_arn

    @workteam_arn.setter
    def workteam_arn(self, workteam_arn):
        """Sets the workteam_arn of this DescribeLabelingJobResponseHumanTaskConfig.


        :param workteam_arn: The workteam_arn of this DescribeLabelingJobResponseHumanTaskConfig.
        :type workteam_arn: str
        """
        if workteam_arn is None:
            raise ValueError("Invalid value for `workteam_arn`, must not be `None`")

        self._workteam_arn = workteam_arn

    @property
    def ui_config(self):
        """Gets the ui_config of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The ui_config of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: HumanTaskConfigUiConfig
        """
        return self._ui_config

    @ui_config.setter
    def ui_config(self, ui_config):
        """Sets the ui_config of this DescribeLabelingJobResponseHumanTaskConfig.


        :param ui_config: The ui_config of this DescribeLabelingJobResponseHumanTaskConfig.
        :type ui_config: HumanTaskConfigUiConfig
        """
        if ui_config is None:
            raise ValueError("Invalid value for `ui_config`, must not be `None`")

        self._ui_config = ui_config

    @property
    def pre_human_task_lambda_arn(self):
        """Gets the pre_human_task_lambda_arn of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The pre_human_task_lambda_arn of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: str
        """
        return self._pre_human_task_lambda_arn

    @pre_human_task_lambda_arn.setter
    def pre_human_task_lambda_arn(self, pre_human_task_lambda_arn):
        """Sets the pre_human_task_lambda_arn of this DescribeLabelingJobResponseHumanTaskConfig.


        :param pre_human_task_lambda_arn: The pre_human_task_lambda_arn of this DescribeLabelingJobResponseHumanTaskConfig.
        :type pre_human_task_lambda_arn: str
        """
        if pre_human_task_lambda_arn is None:
            raise ValueError("Invalid value for `pre_human_task_lambda_arn`, must not be `None`")

        self._pre_human_task_lambda_arn = pre_human_task_lambda_arn

    @property
    def task_keywords(self):
        """Gets the task_keywords of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The task_keywords of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: List
        """
        return self._task_keywords

    @task_keywords.setter
    def task_keywords(self, task_keywords):
        """Sets the task_keywords of this DescribeLabelingJobResponseHumanTaskConfig.


        :param task_keywords: The task_keywords of this DescribeLabelingJobResponseHumanTaskConfig.
        :type task_keywords: List
        """

        self._task_keywords = task_keywords

    @property
    def task_title(self):
        """Gets the task_title of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The task_title of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: str
        """
        return self._task_title

    @task_title.setter
    def task_title(self, task_title):
        """Sets the task_title of this DescribeLabelingJobResponseHumanTaskConfig.


        :param task_title: The task_title of this DescribeLabelingJobResponseHumanTaskConfig.
        :type task_title: str
        """
        if task_title is None:
            raise ValueError("Invalid value for `task_title`, must not be `None`")

        self._task_title = task_title

    @property
    def task_description(self):
        """Gets the task_description of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The task_description of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: str
        """
        return self._task_description

    @task_description.setter
    def task_description(self, task_description):
        """Sets the task_description of this DescribeLabelingJobResponseHumanTaskConfig.


        :param task_description: The task_description of this DescribeLabelingJobResponseHumanTaskConfig.
        :type task_description: str
        """
        if task_description is None:
            raise ValueError("Invalid value for `task_description`, must not be `None`")

        self._task_description = task_description

    @property
    def number_of_human_workers_per_data_object(self):
        """Gets the number_of_human_workers_per_data_object of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The number_of_human_workers_per_data_object of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: int
        """
        return self._number_of_human_workers_per_data_object

    @number_of_human_workers_per_data_object.setter
    def number_of_human_workers_per_data_object(self, number_of_human_workers_per_data_object):
        """Sets the number_of_human_workers_per_data_object of this DescribeLabelingJobResponseHumanTaskConfig.


        :param number_of_human_workers_per_data_object: The number_of_human_workers_per_data_object of this DescribeLabelingJobResponseHumanTaskConfig.
        :type number_of_human_workers_per_data_object: int
        """
        if number_of_human_workers_per_data_object is None:
            raise ValueError("Invalid value for `number_of_human_workers_per_data_object`, must not be `None`")

        self._number_of_human_workers_per_data_object = number_of_human_workers_per_data_object

    @property
    def task_time_limit_in_seconds(self):
        """Gets the task_time_limit_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The task_time_limit_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: int
        """
        return self._task_time_limit_in_seconds

    @task_time_limit_in_seconds.setter
    def task_time_limit_in_seconds(self, task_time_limit_in_seconds):
        """Sets the task_time_limit_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.


        :param task_time_limit_in_seconds: The task_time_limit_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.
        :type task_time_limit_in_seconds: int
        """
        if task_time_limit_in_seconds is None:
            raise ValueError("Invalid value for `task_time_limit_in_seconds`, must not be `None`")

        self._task_time_limit_in_seconds = task_time_limit_in_seconds

    @property
    def task_availability_lifetime_in_seconds(self):
        """Gets the task_availability_lifetime_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The task_availability_lifetime_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: int
        """
        return self._task_availability_lifetime_in_seconds

    @task_availability_lifetime_in_seconds.setter
    def task_availability_lifetime_in_seconds(self, task_availability_lifetime_in_seconds):
        """Sets the task_availability_lifetime_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.


        :param task_availability_lifetime_in_seconds: The task_availability_lifetime_in_seconds of this DescribeLabelingJobResponseHumanTaskConfig.
        :type task_availability_lifetime_in_seconds: int
        """

        self._task_availability_lifetime_in_seconds = task_availability_lifetime_in_seconds

    @property
    def max_concurrent_task_count(self):
        """Gets the max_concurrent_task_count of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The max_concurrent_task_count of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: int
        """
        return self._max_concurrent_task_count

    @max_concurrent_task_count.setter
    def max_concurrent_task_count(self, max_concurrent_task_count):
        """Sets the max_concurrent_task_count of this DescribeLabelingJobResponseHumanTaskConfig.


        :param max_concurrent_task_count: The max_concurrent_task_count of this DescribeLabelingJobResponseHumanTaskConfig.
        :type max_concurrent_task_count: int
        """

        self._max_concurrent_task_count = max_concurrent_task_count

    @property
    def annotation_consolidation_config(self):
        """Gets the annotation_consolidation_config of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The annotation_consolidation_config of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: HumanTaskConfigAnnotationConsolidationConfig
        """
        return self._annotation_consolidation_config

    @annotation_consolidation_config.setter
    def annotation_consolidation_config(self, annotation_consolidation_config):
        """Sets the annotation_consolidation_config of this DescribeLabelingJobResponseHumanTaskConfig.


        :param annotation_consolidation_config: The annotation_consolidation_config of this DescribeLabelingJobResponseHumanTaskConfig.
        :type annotation_consolidation_config: HumanTaskConfigAnnotationConsolidationConfig
        """
        if annotation_consolidation_config is None:
            raise ValueError("Invalid value for `annotation_consolidation_config`, must not be `None`")

        self._annotation_consolidation_config = annotation_consolidation_config

    @property
    def public_workforce_task_price(self):
        """Gets the public_workforce_task_price of this DescribeLabelingJobResponseHumanTaskConfig.


        :return: The public_workforce_task_price of this DescribeLabelingJobResponseHumanTaskConfig.
        :rtype: HumanTaskConfigPublicWorkforceTaskPrice
        """
        return self._public_workforce_task_price

    @public_workforce_task_price.setter
    def public_workforce_task_price(self, public_workforce_task_price):
        """Sets the public_workforce_task_price of this DescribeLabelingJobResponseHumanTaskConfig.


        :param public_workforce_task_price: The public_workforce_task_price of this DescribeLabelingJobResponseHumanTaskConfig.
        :type public_workforce_task_price: HumanTaskConfigPublicWorkforceTaskPrice
        """

        self._public_workforce_task_price = public_workforce_task_price
