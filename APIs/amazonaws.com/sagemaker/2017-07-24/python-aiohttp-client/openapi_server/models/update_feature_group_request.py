# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_feature_group_request_online_store_config import UpdateFeatureGroupRequestOnlineStoreConfig
from openapi_server import util


class UpdateFeatureGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_group_name: str=None, feature_additions: List=None, online_store_config: UpdateFeatureGroupRequestOnlineStoreConfig=None):
        """UpdateFeatureGroupRequest - a model defined in OpenAPI

        :param feature_group_name: The feature_group_name of this UpdateFeatureGroupRequest.
        :param feature_additions: The feature_additions of this UpdateFeatureGroupRequest.
        :param online_store_config: The online_store_config of this UpdateFeatureGroupRequest.
        """
        self.openapi_types = {
            'feature_group_name': str,
            'feature_additions': List,
            'online_store_config': UpdateFeatureGroupRequestOnlineStoreConfig
        }

        self.attribute_map = {
            'feature_group_name': 'FeatureGroupName',
            'feature_additions': 'FeatureAdditions',
            'online_store_config': 'OnlineStoreConfig'
        }

        self._feature_group_name = feature_group_name
        self._feature_additions = feature_additions
        self._online_store_config = online_store_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFeatureGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFeatureGroupRequest of this UpdateFeatureGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_group_name(self):
        """Gets the feature_group_name of this UpdateFeatureGroupRequest.


        :return: The feature_group_name of this UpdateFeatureGroupRequest.
        :rtype: str
        """
        return self._feature_group_name

    @feature_group_name.setter
    def feature_group_name(self, feature_group_name):
        """Sets the feature_group_name of this UpdateFeatureGroupRequest.


        :param feature_group_name: The feature_group_name of this UpdateFeatureGroupRequest.
        :type feature_group_name: str
        """
        if feature_group_name is None:
            raise ValueError("Invalid value for `feature_group_name`, must not be `None`")

        self._feature_group_name = feature_group_name

    @property
    def feature_additions(self):
        """Gets the feature_additions of this UpdateFeatureGroupRequest.


        :return: The feature_additions of this UpdateFeatureGroupRequest.
        :rtype: List
        """
        return self._feature_additions

    @feature_additions.setter
    def feature_additions(self, feature_additions):
        """Sets the feature_additions of this UpdateFeatureGroupRequest.


        :param feature_additions: The feature_additions of this UpdateFeatureGroupRequest.
        :type feature_additions: List
        """

        self._feature_additions = feature_additions

    @property
    def online_store_config(self):
        """Gets the online_store_config of this UpdateFeatureGroupRequest.


        :return: The online_store_config of this UpdateFeatureGroupRequest.
        :rtype: UpdateFeatureGroupRequestOnlineStoreConfig
        """
        return self._online_store_config

    @online_store_config.setter
    def online_store_config(self, online_store_config):
        """Sets the online_store_config of this UpdateFeatureGroupRequest.


        :param online_store_config: The online_store_config of this UpdateFeatureGroupRequest.
        :type online_store_config: UpdateFeatureGroupRequestOnlineStoreConfig
        """

        self._online_store_config = online_store_config
