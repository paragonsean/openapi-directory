# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.complete_on_convergence import CompleteOnConvergence
from openapi_server import util


class TuningJobCompletionCriteriaConvergenceDetected(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, complete_on_convergence: CompleteOnConvergence=None):
        """TuningJobCompletionCriteriaConvergenceDetected - a model defined in OpenAPI

        :param complete_on_convergence: The complete_on_convergence of this TuningJobCompletionCriteriaConvergenceDetected.
        """
        self.openapi_types = {
            'complete_on_convergence': CompleteOnConvergence
        }

        self.attribute_map = {
            'complete_on_convergence': 'CompleteOnConvergence'
        }

        self._complete_on_convergence = complete_on_convergence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TuningJobCompletionCriteriaConvergenceDetected':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TuningJobCompletionCriteria_ConvergenceDetected of this TuningJobCompletionCriteriaConvergenceDetected.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def complete_on_convergence(self):
        """Gets the complete_on_convergence of this TuningJobCompletionCriteriaConvergenceDetected.


        :return: The complete_on_convergence of this TuningJobCompletionCriteriaConvergenceDetected.
        :rtype: CompleteOnConvergence
        """
        return self._complete_on_convergence

    @complete_on_convergence.setter
    def complete_on_convergence(self, complete_on_convergence):
        """Sets the complete_on_convergence of this TuningJobCompletionCriteriaConvergenceDetected.


        :param complete_on_convergence: The complete_on_convergence of this TuningJobCompletionCriteriaConvergenceDetected.
        :type complete_on_convergence: CompleteOnConvergence
        """

        self._complete_on_convergence = complete_on_convergence
