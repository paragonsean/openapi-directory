# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pending_production_variant_summary_current_serverless_config import PendingProductionVariantSummaryCurrentServerlessConfig
from openapi_server.models.production_variant_summary_desired_serverless_config import ProductionVariantSummaryDesiredServerlessConfig
from openapi_server import util


class ProductionVariantSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, variant_name: str=None, deployed_images: List=None, current_weight: float=None, desired_weight: float=None, current_instance_count: int=None, desired_instance_count: int=None, variant_status: List=None, current_serverless_config: PendingProductionVariantSummaryCurrentServerlessConfig=None, desired_serverless_config: ProductionVariantSummaryDesiredServerlessConfig=None):
        """ProductionVariantSummary - a model defined in OpenAPI

        :param variant_name: The variant_name of this ProductionVariantSummary.
        :param deployed_images: The deployed_images of this ProductionVariantSummary.
        :param current_weight: The current_weight of this ProductionVariantSummary.
        :param desired_weight: The desired_weight of this ProductionVariantSummary.
        :param current_instance_count: The current_instance_count of this ProductionVariantSummary.
        :param desired_instance_count: The desired_instance_count of this ProductionVariantSummary.
        :param variant_status: The variant_status of this ProductionVariantSummary.
        :param current_serverless_config: The current_serverless_config of this ProductionVariantSummary.
        :param desired_serverless_config: The desired_serverless_config of this ProductionVariantSummary.
        """
        self.openapi_types = {
            'variant_name': str,
            'deployed_images': List,
            'current_weight': float,
            'desired_weight': float,
            'current_instance_count': int,
            'desired_instance_count': int,
            'variant_status': List,
            'current_serverless_config': PendingProductionVariantSummaryCurrentServerlessConfig,
            'desired_serverless_config': ProductionVariantSummaryDesiredServerlessConfig
        }

        self.attribute_map = {
            'variant_name': 'VariantName',
            'deployed_images': 'DeployedImages',
            'current_weight': 'CurrentWeight',
            'desired_weight': 'DesiredWeight',
            'current_instance_count': 'CurrentInstanceCount',
            'desired_instance_count': 'DesiredInstanceCount',
            'variant_status': 'VariantStatus',
            'current_serverless_config': 'CurrentServerlessConfig',
            'desired_serverless_config': 'DesiredServerlessConfig'
        }

        self._variant_name = variant_name
        self._deployed_images = deployed_images
        self._current_weight = current_weight
        self._desired_weight = desired_weight
        self._current_instance_count = current_instance_count
        self._desired_instance_count = desired_instance_count
        self._variant_status = variant_status
        self._current_serverless_config = current_serverless_config
        self._desired_serverless_config = desired_serverless_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductionVariantSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductionVariantSummary of this ProductionVariantSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def variant_name(self):
        """Gets the variant_name of this ProductionVariantSummary.


        :return: The variant_name of this ProductionVariantSummary.
        :rtype: str
        """
        return self._variant_name

    @variant_name.setter
    def variant_name(self, variant_name):
        """Sets the variant_name of this ProductionVariantSummary.


        :param variant_name: The variant_name of this ProductionVariantSummary.
        :type variant_name: str
        """
        if variant_name is None:
            raise ValueError("Invalid value for `variant_name`, must not be `None`")

        self._variant_name = variant_name

    @property
    def deployed_images(self):
        """Gets the deployed_images of this ProductionVariantSummary.


        :return: The deployed_images of this ProductionVariantSummary.
        :rtype: List
        """
        return self._deployed_images

    @deployed_images.setter
    def deployed_images(self, deployed_images):
        """Sets the deployed_images of this ProductionVariantSummary.


        :param deployed_images: The deployed_images of this ProductionVariantSummary.
        :type deployed_images: List
        """

        self._deployed_images = deployed_images

    @property
    def current_weight(self):
        """Gets the current_weight of this ProductionVariantSummary.


        :return: The current_weight of this ProductionVariantSummary.
        :rtype: float
        """
        return self._current_weight

    @current_weight.setter
    def current_weight(self, current_weight):
        """Sets the current_weight of this ProductionVariantSummary.


        :param current_weight: The current_weight of this ProductionVariantSummary.
        :type current_weight: float
        """

        self._current_weight = current_weight

    @property
    def desired_weight(self):
        """Gets the desired_weight of this ProductionVariantSummary.


        :return: The desired_weight of this ProductionVariantSummary.
        :rtype: float
        """
        return self._desired_weight

    @desired_weight.setter
    def desired_weight(self, desired_weight):
        """Sets the desired_weight of this ProductionVariantSummary.


        :param desired_weight: The desired_weight of this ProductionVariantSummary.
        :type desired_weight: float
        """

        self._desired_weight = desired_weight

    @property
    def current_instance_count(self):
        """Gets the current_instance_count of this ProductionVariantSummary.


        :return: The current_instance_count of this ProductionVariantSummary.
        :rtype: int
        """
        return self._current_instance_count

    @current_instance_count.setter
    def current_instance_count(self, current_instance_count):
        """Sets the current_instance_count of this ProductionVariantSummary.


        :param current_instance_count: The current_instance_count of this ProductionVariantSummary.
        :type current_instance_count: int
        """

        self._current_instance_count = current_instance_count

    @property
    def desired_instance_count(self):
        """Gets the desired_instance_count of this ProductionVariantSummary.


        :return: The desired_instance_count of this ProductionVariantSummary.
        :rtype: int
        """
        return self._desired_instance_count

    @desired_instance_count.setter
    def desired_instance_count(self, desired_instance_count):
        """Sets the desired_instance_count of this ProductionVariantSummary.


        :param desired_instance_count: The desired_instance_count of this ProductionVariantSummary.
        :type desired_instance_count: int
        """

        self._desired_instance_count = desired_instance_count

    @property
    def variant_status(self):
        """Gets the variant_status of this ProductionVariantSummary.


        :return: The variant_status of this ProductionVariantSummary.
        :rtype: List
        """
        return self._variant_status

    @variant_status.setter
    def variant_status(self, variant_status):
        """Sets the variant_status of this ProductionVariantSummary.


        :param variant_status: The variant_status of this ProductionVariantSummary.
        :type variant_status: List
        """

        self._variant_status = variant_status

    @property
    def current_serverless_config(self):
        """Gets the current_serverless_config of this ProductionVariantSummary.


        :return: The current_serverless_config of this ProductionVariantSummary.
        :rtype: PendingProductionVariantSummaryCurrentServerlessConfig
        """
        return self._current_serverless_config

    @current_serverless_config.setter
    def current_serverless_config(self, current_serverless_config):
        """Sets the current_serverless_config of this ProductionVariantSummary.


        :param current_serverless_config: The current_serverless_config of this ProductionVariantSummary.
        :type current_serverless_config: PendingProductionVariantSummaryCurrentServerlessConfig
        """

        self._current_serverless_config = current_serverless_config

    @property
    def desired_serverless_config(self):
        """Gets the desired_serverless_config of this ProductionVariantSummary.


        :return: The desired_serverless_config of this ProductionVariantSummary.
        :rtype: ProductionVariantSummaryDesiredServerlessConfig
        """
        return self._desired_serverless_config

    @desired_serverless_config.setter
    def desired_serverless_config(self, desired_serverless_config):
        """Sets the desired_serverless_config of this ProductionVariantSummary.


        :param desired_serverless_config: The desired_serverless_config of this ProductionVariantSummary.
        :type desired_serverless_config: ProductionVariantSummaryDesiredServerlessConfig
        """

        self._desired_serverless_config = desired_serverless_config
