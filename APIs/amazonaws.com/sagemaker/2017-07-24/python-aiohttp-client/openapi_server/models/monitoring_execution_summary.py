# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_status import ExecutionStatus
from openapi_server.models.monitoring_type import MonitoringType
from openapi_server import util


class MonitoringExecutionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitoring_schedule_name: str=None, scheduled_time: datetime=None, creation_time: datetime=None, last_modified_time: datetime=None, monitoring_execution_status: ExecutionStatus=None, processing_job_arn: str=None, endpoint_name: str=None, failure_reason: str=None, monitoring_job_definition_name: str=None, monitoring_type: MonitoringType=None):
        """MonitoringExecutionSummary - a model defined in OpenAPI

        :param monitoring_schedule_name: The monitoring_schedule_name of this MonitoringExecutionSummary.
        :param scheduled_time: The scheduled_time of this MonitoringExecutionSummary.
        :param creation_time: The creation_time of this MonitoringExecutionSummary.
        :param last_modified_time: The last_modified_time of this MonitoringExecutionSummary.
        :param monitoring_execution_status: The monitoring_execution_status of this MonitoringExecutionSummary.
        :param processing_job_arn: The processing_job_arn of this MonitoringExecutionSummary.
        :param endpoint_name: The endpoint_name of this MonitoringExecutionSummary.
        :param failure_reason: The failure_reason of this MonitoringExecutionSummary.
        :param monitoring_job_definition_name: The monitoring_job_definition_name of this MonitoringExecutionSummary.
        :param monitoring_type: The monitoring_type of this MonitoringExecutionSummary.
        """
        self.openapi_types = {
            'monitoring_schedule_name': str,
            'scheduled_time': datetime,
            'creation_time': datetime,
            'last_modified_time': datetime,
            'monitoring_execution_status': ExecutionStatus,
            'processing_job_arn': str,
            'endpoint_name': str,
            'failure_reason': str,
            'monitoring_job_definition_name': str,
            'monitoring_type': MonitoringType
        }

        self.attribute_map = {
            'monitoring_schedule_name': 'MonitoringScheduleName',
            'scheduled_time': 'ScheduledTime',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime',
            'monitoring_execution_status': 'MonitoringExecutionStatus',
            'processing_job_arn': 'ProcessingJobArn',
            'endpoint_name': 'EndpointName',
            'failure_reason': 'FailureReason',
            'monitoring_job_definition_name': 'MonitoringJobDefinitionName',
            'monitoring_type': 'MonitoringType'
        }

        self._monitoring_schedule_name = monitoring_schedule_name
        self._scheduled_time = scheduled_time
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time
        self._monitoring_execution_status = monitoring_execution_status
        self._processing_job_arn = processing_job_arn
        self._endpoint_name = endpoint_name
        self._failure_reason = failure_reason
        self._monitoring_job_definition_name = monitoring_job_definition_name
        self._monitoring_type = monitoring_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoringExecutionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoringExecutionSummary of this MonitoringExecutionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_schedule_name(self):
        """Gets the monitoring_schedule_name of this MonitoringExecutionSummary.


        :return: The monitoring_schedule_name of this MonitoringExecutionSummary.
        :rtype: str
        """
        return self._monitoring_schedule_name

    @monitoring_schedule_name.setter
    def monitoring_schedule_name(self, monitoring_schedule_name):
        """Sets the monitoring_schedule_name of this MonitoringExecutionSummary.


        :param monitoring_schedule_name: The monitoring_schedule_name of this MonitoringExecutionSummary.
        :type monitoring_schedule_name: str
        """
        if monitoring_schedule_name is None:
            raise ValueError("Invalid value for `monitoring_schedule_name`, must not be `None`")

        self._monitoring_schedule_name = monitoring_schedule_name

    @property
    def scheduled_time(self):
        """Gets the scheduled_time of this MonitoringExecutionSummary.


        :return: The scheduled_time of this MonitoringExecutionSummary.
        :rtype: datetime
        """
        return self._scheduled_time

    @scheduled_time.setter
    def scheduled_time(self, scheduled_time):
        """Sets the scheduled_time of this MonitoringExecutionSummary.


        :param scheduled_time: The scheduled_time of this MonitoringExecutionSummary.
        :type scheduled_time: datetime
        """
        if scheduled_time is None:
            raise ValueError("Invalid value for `scheduled_time`, must not be `None`")

        self._scheduled_time = scheduled_time

    @property
    def creation_time(self):
        """Gets the creation_time of this MonitoringExecutionSummary.


        :return: The creation_time of this MonitoringExecutionSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this MonitoringExecutionSummary.


        :param creation_time: The creation_time of this MonitoringExecutionSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this MonitoringExecutionSummary.


        :return: The last_modified_time of this MonitoringExecutionSummary.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this MonitoringExecutionSummary.


        :param last_modified_time: The last_modified_time of this MonitoringExecutionSummary.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def monitoring_execution_status(self):
        """Gets the monitoring_execution_status of this MonitoringExecutionSummary.


        :return: The monitoring_execution_status of this MonitoringExecutionSummary.
        :rtype: ExecutionStatus
        """
        return self._monitoring_execution_status

    @monitoring_execution_status.setter
    def monitoring_execution_status(self, monitoring_execution_status):
        """Sets the monitoring_execution_status of this MonitoringExecutionSummary.


        :param monitoring_execution_status: The monitoring_execution_status of this MonitoringExecutionSummary.
        :type monitoring_execution_status: ExecutionStatus
        """
        if monitoring_execution_status is None:
            raise ValueError("Invalid value for `monitoring_execution_status`, must not be `None`")

        self._monitoring_execution_status = monitoring_execution_status

    @property
    def processing_job_arn(self):
        """Gets the processing_job_arn of this MonitoringExecutionSummary.


        :return: The processing_job_arn of this MonitoringExecutionSummary.
        :rtype: str
        """
        return self._processing_job_arn

    @processing_job_arn.setter
    def processing_job_arn(self, processing_job_arn):
        """Sets the processing_job_arn of this MonitoringExecutionSummary.


        :param processing_job_arn: The processing_job_arn of this MonitoringExecutionSummary.
        :type processing_job_arn: str
        """

        self._processing_job_arn = processing_job_arn

    @property
    def endpoint_name(self):
        """Gets the endpoint_name of this MonitoringExecutionSummary.


        :return: The endpoint_name of this MonitoringExecutionSummary.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """Sets the endpoint_name of this MonitoringExecutionSummary.


        :param endpoint_name: The endpoint_name of this MonitoringExecutionSummary.
        :type endpoint_name: str
        """

        self._endpoint_name = endpoint_name

    @property
    def failure_reason(self):
        """Gets the failure_reason of this MonitoringExecutionSummary.


        :return: The failure_reason of this MonitoringExecutionSummary.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this MonitoringExecutionSummary.


        :param failure_reason: The failure_reason of this MonitoringExecutionSummary.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def monitoring_job_definition_name(self):
        """Gets the monitoring_job_definition_name of this MonitoringExecutionSummary.


        :return: The monitoring_job_definition_name of this MonitoringExecutionSummary.
        :rtype: str
        """
        return self._monitoring_job_definition_name

    @monitoring_job_definition_name.setter
    def monitoring_job_definition_name(self, monitoring_job_definition_name):
        """Sets the monitoring_job_definition_name of this MonitoringExecutionSummary.


        :param monitoring_job_definition_name: The monitoring_job_definition_name of this MonitoringExecutionSummary.
        :type monitoring_job_definition_name: str
        """

        self._monitoring_job_definition_name = monitoring_job_definition_name

    @property
    def monitoring_type(self):
        """Gets the monitoring_type of this MonitoringExecutionSummary.


        :return: The monitoring_type of this MonitoringExecutionSummary.
        :rtype: MonitoringType
        """
        return self._monitoring_type

    @monitoring_type.setter
    def monitoring_type(self, monitoring_type):
        """Sets the monitoring_type of this MonitoringExecutionSummary.


        :param monitoring_type: The monitoring_type of this MonitoringExecutionSummary.
        :type monitoring_type: MonitoringType
        """

        self._monitoring_type = monitoring_type
