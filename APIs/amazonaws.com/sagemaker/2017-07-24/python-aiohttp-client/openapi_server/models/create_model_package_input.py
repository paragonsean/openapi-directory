# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_model_package_input_drift_check_baselines import CreateModelPackageInputDriftCheckBaselines
from openapi_server.models.create_model_package_input_inference_specification import CreateModelPackageInputInferenceSpecification
from openapi_server.models.create_model_package_input_model_metrics import CreateModelPackageInputModelMetrics
from openapi_server.models.create_model_package_input_source_algorithm_specification import CreateModelPackageInputSourceAlgorithmSpecification
from openapi_server.models.create_model_package_input_validation_specification import CreateModelPackageInputValidationSpecification
from openapi_server.models.metadata_properties import MetadataProperties
from openapi_server.models.model_approval_status import ModelApprovalStatus
from openapi_server import util


class CreateModelPackageInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_package_name: str=None, model_package_group_name: str=None, model_package_description: str=None, inference_specification: CreateModelPackageInputInferenceSpecification=None, validation_specification: CreateModelPackageInputValidationSpecification=None, source_algorithm_specification: CreateModelPackageInputSourceAlgorithmSpecification=None, certify_for_marketplace: bool=None, tags: List=None, model_approval_status: ModelApprovalStatus=None, metadata_properties: MetadataProperties=None, model_metrics: CreateModelPackageInputModelMetrics=None, client_token: str=None, customer_metadata_properties: Dict=None, drift_check_baselines: CreateModelPackageInputDriftCheckBaselines=None, domain: str=None, task: str=None, sample_payload_url: str=None, additional_inference_specifications: List=None):
        """CreateModelPackageInput - a model defined in OpenAPI

        :param model_package_name: The model_package_name of this CreateModelPackageInput.
        :param model_package_group_name: The model_package_group_name of this CreateModelPackageInput.
        :param model_package_description: The model_package_description of this CreateModelPackageInput.
        :param inference_specification: The inference_specification of this CreateModelPackageInput.
        :param validation_specification: The validation_specification of this CreateModelPackageInput.
        :param source_algorithm_specification: The source_algorithm_specification of this CreateModelPackageInput.
        :param certify_for_marketplace: The certify_for_marketplace of this CreateModelPackageInput.
        :param tags: The tags of this CreateModelPackageInput.
        :param model_approval_status: The model_approval_status of this CreateModelPackageInput.
        :param metadata_properties: The metadata_properties of this CreateModelPackageInput.
        :param model_metrics: The model_metrics of this CreateModelPackageInput.
        :param client_token: The client_token of this CreateModelPackageInput.
        :param customer_metadata_properties: The customer_metadata_properties of this CreateModelPackageInput.
        :param drift_check_baselines: The drift_check_baselines of this CreateModelPackageInput.
        :param domain: The domain of this CreateModelPackageInput.
        :param task: The task of this CreateModelPackageInput.
        :param sample_payload_url: The sample_payload_url of this CreateModelPackageInput.
        :param additional_inference_specifications: The additional_inference_specifications of this CreateModelPackageInput.
        """
        self.openapi_types = {
            'model_package_name': str,
            'model_package_group_name': str,
            'model_package_description': str,
            'inference_specification': CreateModelPackageInputInferenceSpecification,
            'validation_specification': CreateModelPackageInputValidationSpecification,
            'source_algorithm_specification': CreateModelPackageInputSourceAlgorithmSpecification,
            'certify_for_marketplace': bool,
            'tags': List,
            'model_approval_status': ModelApprovalStatus,
            'metadata_properties': MetadataProperties,
            'model_metrics': CreateModelPackageInputModelMetrics,
            'client_token': str,
            'customer_metadata_properties': Dict,
            'drift_check_baselines': CreateModelPackageInputDriftCheckBaselines,
            'domain': str,
            'task': str,
            'sample_payload_url': str,
            'additional_inference_specifications': List
        }

        self.attribute_map = {
            'model_package_name': 'ModelPackageName',
            'model_package_group_name': 'ModelPackageGroupName',
            'model_package_description': 'ModelPackageDescription',
            'inference_specification': 'InferenceSpecification',
            'validation_specification': 'ValidationSpecification',
            'source_algorithm_specification': 'SourceAlgorithmSpecification',
            'certify_for_marketplace': 'CertifyForMarketplace',
            'tags': 'Tags',
            'model_approval_status': 'ModelApprovalStatus',
            'metadata_properties': 'MetadataProperties',
            'model_metrics': 'ModelMetrics',
            'client_token': 'ClientToken',
            'customer_metadata_properties': 'CustomerMetadataProperties',
            'drift_check_baselines': 'DriftCheckBaselines',
            'domain': 'Domain',
            'task': 'Task',
            'sample_payload_url': 'SamplePayloadUrl',
            'additional_inference_specifications': 'AdditionalInferenceSpecifications'
        }

        self._model_package_name = model_package_name
        self._model_package_group_name = model_package_group_name
        self._model_package_description = model_package_description
        self._inference_specification = inference_specification
        self._validation_specification = validation_specification
        self._source_algorithm_specification = source_algorithm_specification
        self._certify_for_marketplace = certify_for_marketplace
        self._tags = tags
        self._model_approval_status = model_approval_status
        self._metadata_properties = metadata_properties
        self._model_metrics = model_metrics
        self._client_token = client_token
        self._customer_metadata_properties = customer_metadata_properties
        self._drift_check_baselines = drift_check_baselines
        self._domain = domain
        self._task = task
        self._sample_payload_url = sample_payload_url
        self._additional_inference_specifications = additional_inference_specifications

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelPackageInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelPackageInput of this CreateModelPackageInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_package_name(self):
        """Gets the model_package_name of this CreateModelPackageInput.


        :return: The model_package_name of this CreateModelPackageInput.
        :rtype: str
        """
        return self._model_package_name

    @model_package_name.setter
    def model_package_name(self, model_package_name):
        """Sets the model_package_name of this CreateModelPackageInput.


        :param model_package_name: The model_package_name of this CreateModelPackageInput.
        :type model_package_name: str
        """

        self._model_package_name = model_package_name

    @property
    def model_package_group_name(self):
        """Gets the model_package_group_name of this CreateModelPackageInput.


        :return: The model_package_group_name of this CreateModelPackageInput.
        :rtype: str
        """
        return self._model_package_group_name

    @model_package_group_name.setter
    def model_package_group_name(self, model_package_group_name):
        """Sets the model_package_group_name of this CreateModelPackageInput.


        :param model_package_group_name: The model_package_group_name of this CreateModelPackageInput.
        :type model_package_group_name: str
        """

        self._model_package_group_name = model_package_group_name

    @property
    def model_package_description(self):
        """Gets the model_package_description of this CreateModelPackageInput.


        :return: The model_package_description of this CreateModelPackageInput.
        :rtype: str
        """
        return self._model_package_description

    @model_package_description.setter
    def model_package_description(self, model_package_description):
        """Sets the model_package_description of this CreateModelPackageInput.


        :param model_package_description: The model_package_description of this CreateModelPackageInput.
        :type model_package_description: str
        """

        self._model_package_description = model_package_description

    @property
    def inference_specification(self):
        """Gets the inference_specification of this CreateModelPackageInput.


        :return: The inference_specification of this CreateModelPackageInput.
        :rtype: CreateModelPackageInputInferenceSpecification
        """
        return self._inference_specification

    @inference_specification.setter
    def inference_specification(self, inference_specification):
        """Sets the inference_specification of this CreateModelPackageInput.


        :param inference_specification: The inference_specification of this CreateModelPackageInput.
        :type inference_specification: CreateModelPackageInputInferenceSpecification
        """

        self._inference_specification = inference_specification

    @property
    def validation_specification(self):
        """Gets the validation_specification of this CreateModelPackageInput.


        :return: The validation_specification of this CreateModelPackageInput.
        :rtype: CreateModelPackageInputValidationSpecification
        """
        return self._validation_specification

    @validation_specification.setter
    def validation_specification(self, validation_specification):
        """Sets the validation_specification of this CreateModelPackageInput.


        :param validation_specification: The validation_specification of this CreateModelPackageInput.
        :type validation_specification: CreateModelPackageInputValidationSpecification
        """

        self._validation_specification = validation_specification

    @property
    def source_algorithm_specification(self):
        """Gets the source_algorithm_specification of this CreateModelPackageInput.


        :return: The source_algorithm_specification of this CreateModelPackageInput.
        :rtype: CreateModelPackageInputSourceAlgorithmSpecification
        """
        return self._source_algorithm_specification

    @source_algorithm_specification.setter
    def source_algorithm_specification(self, source_algorithm_specification):
        """Sets the source_algorithm_specification of this CreateModelPackageInput.


        :param source_algorithm_specification: The source_algorithm_specification of this CreateModelPackageInput.
        :type source_algorithm_specification: CreateModelPackageInputSourceAlgorithmSpecification
        """

        self._source_algorithm_specification = source_algorithm_specification

    @property
    def certify_for_marketplace(self):
        """Gets the certify_for_marketplace of this CreateModelPackageInput.


        :return: The certify_for_marketplace of this CreateModelPackageInput.
        :rtype: bool
        """
        return self._certify_for_marketplace

    @certify_for_marketplace.setter
    def certify_for_marketplace(self, certify_for_marketplace):
        """Sets the certify_for_marketplace of this CreateModelPackageInput.


        :param certify_for_marketplace: The certify_for_marketplace of this CreateModelPackageInput.
        :type certify_for_marketplace: bool
        """

        self._certify_for_marketplace = certify_for_marketplace

    @property
    def tags(self):
        """Gets the tags of this CreateModelPackageInput.


        :return: The tags of this CreateModelPackageInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateModelPackageInput.


        :param tags: The tags of this CreateModelPackageInput.
        :type tags: List
        """

        self._tags = tags

    @property
    def model_approval_status(self):
        """Gets the model_approval_status of this CreateModelPackageInput.


        :return: The model_approval_status of this CreateModelPackageInput.
        :rtype: ModelApprovalStatus
        """
        return self._model_approval_status

    @model_approval_status.setter
    def model_approval_status(self, model_approval_status):
        """Sets the model_approval_status of this CreateModelPackageInput.


        :param model_approval_status: The model_approval_status of this CreateModelPackageInput.
        :type model_approval_status: ModelApprovalStatus
        """

        self._model_approval_status = model_approval_status

    @property
    def metadata_properties(self):
        """Gets the metadata_properties of this CreateModelPackageInput.


        :return: The metadata_properties of this CreateModelPackageInput.
        :rtype: MetadataProperties
        """
        return self._metadata_properties

    @metadata_properties.setter
    def metadata_properties(self, metadata_properties):
        """Sets the metadata_properties of this CreateModelPackageInput.


        :param metadata_properties: The metadata_properties of this CreateModelPackageInput.
        :type metadata_properties: MetadataProperties
        """

        self._metadata_properties = metadata_properties

    @property
    def model_metrics(self):
        """Gets the model_metrics of this CreateModelPackageInput.


        :return: The model_metrics of this CreateModelPackageInput.
        :rtype: CreateModelPackageInputModelMetrics
        """
        return self._model_metrics

    @model_metrics.setter
    def model_metrics(self, model_metrics):
        """Sets the model_metrics of this CreateModelPackageInput.


        :param model_metrics: The model_metrics of this CreateModelPackageInput.
        :type model_metrics: CreateModelPackageInputModelMetrics
        """

        self._model_metrics = model_metrics

    @property
    def client_token(self):
        """Gets the client_token of this CreateModelPackageInput.


        :return: The client_token of this CreateModelPackageInput.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateModelPackageInput.


        :param client_token: The client_token of this CreateModelPackageInput.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def customer_metadata_properties(self):
        """Gets the customer_metadata_properties of this CreateModelPackageInput.


        :return: The customer_metadata_properties of this CreateModelPackageInput.
        :rtype: Dict
        """
        return self._customer_metadata_properties

    @customer_metadata_properties.setter
    def customer_metadata_properties(self, customer_metadata_properties):
        """Sets the customer_metadata_properties of this CreateModelPackageInput.


        :param customer_metadata_properties: The customer_metadata_properties of this CreateModelPackageInput.
        :type customer_metadata_properties: Dict
        """

        self._customer_metadata_properties = customer_metadata_properties

    @property
    def drift_check_baselines(self):
        """Gets the drift_check_baselines of this CreateModelPackageInput.


        :return: The drift_check_baselines of this CreateModelPackageInput.
        :rtype: CreateModelPackageInputDriftCheckBaselines
        """
        return self._drift_check_baselines

    @drift_check_baselines.setter
    def drift_check_baselines(self, drift_check_baselines):
        """Sets the drift_check_baselines of this CreateModelPackageInput.


        :param drift_check_baselines: The drift_check_baselines of this CreateModelPackageInput.
        :type drift_check_baselines: CreateModelPackageInputDriftCheckBaselines
        """

        self._drift_check_baselines = drift_check_baselines

    @property
    def domain(self):
        """Gets the domain of this CreateModelPackageInput.


        :return: The domain of this CreateModelPackageInput.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this CreateModelPackageInput.


        :param domain: The domain of this CreateModelPackageInput.
        :type domain: str
        """

        self._domain = domain

    @property
    def task(self):
        """Gets the task of this CreateModelPackageInput.


        :return: The task of this CreateModelPackageInput.
        :rtype: str
        """
        return self._task

    @task.setter
    def task(self, task):
        """Sets the task of this CreateModelPackageInput.


        :param task: The task of this CreateModelPackageInput.
        :type task: str
        """

        self._task = task

    @property
    def sample_payload_url(self):
        """Gets the sample_payload_url of this CreateModelPackageInput.


        :return: The sample_payload_url of this CreateModelPackageInput.
        :rtype: str
        """
        return self._sample_payload_url

    @sample_payload_url.setter
    def sample_payload_url(self, sample_payload_url):
        """Sets the sample_payload_url of this CreateModelPackageInput.


        :param sample_payload_url: The sample_payload_url of this CreateModelPackageInput.
        :type sample_payload_url: str
        """

        self._sample_payload_url = sample_payload_url

    @property
    def additional_inference_specifications(self):
        """Gets the additional_inference_specifications of this CreateModelPackageInput.


        :return: The additional_inference_specifications of this CreateModelPackageInput.
        :rtype: List
        """
        return self._additional_inference_specifications

    @additional_inference_specifications.setter
    def additional_inference_specifications(self, additional_inference_specifications):
        """Sets the additional_inference_specifications of this CreateModelPackageInput.


        :param additional_inference_specifications: The additional_inference_specifications of this CreateModelPackageInput.
        :type additional_inference_specifications: List
        """

        self._additional_inference_specifications = additional_inference_specifications
