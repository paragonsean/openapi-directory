# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hyper_parameter_tuning_job_status import HyperParameterTuningJobStatus
from openapi_server.models.hyper_parameter_tuning_job_strategy_type import HyperParameterTuningJobStrategyType
from openapi_server.models.hyper_parameter_tuning_job_summary_objective_status_counters import HyperParameterTuningJobSummaryObjectiveStatusCounters
from openapi_server.models.hyper_parameter_tuning_job_summary_resource_limits import HyperParameterTuningJobSummaryResourceLimits
from openapi_server.models.hyper_parameter_tuning_job_summary_training_job_status_counters import HyperParameterTuningJobSummaryTrainingJobStatusCounters
from openapi_server import util


class HyperParameterTuningJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hyper_parameter_tuning_job_name: str=None, hyper_parameter_tuning_job_arn: str=None, hyper_parameter_tuning_job_status: HyperParameterTuningJobStatus=None, strategy: HyperParameterTuningJobStrategyType=None, creation_time: datetime=None, hyper_parameter_tuning_end_time: datetime=None, last_modified_time: datetime=None, training_job_status_counters: HyperParameterTuningJobSummaryTrainingJobStatusCounters=None, objective_status_counters: HyperParameterTuningJobSummaryObjectiveStatusCounters=None, resource_limits: HyperParameterTuningJobSummaryResourceLimits=None):
        """HyperParameterTuningJobSummary - a model defined in OpenAPI

        :param hyper_parameter_tuning_job_name: The hyper_parameter_tuning_job_name of this HyperParameterTuningJobSummary.
        :param hyper_parameter_tuning_job_arn: The hyper_parameter_tuning_job_arn of this HyperParameterTuningJobSummary.
        :param hyper_parameter_tuning_job_status: The hyper_parameter_tuning_job_status of this HyperParameterTuningJobSummary.
        :param strategy: The strategy of this HyperParameterTuningJobSummary.
        :param creation_time: The creation_time of this HyperParameterTuningJobSummary.
        :param hyper_parameter_tuning_end_time: The hyper_parameter_tuning_end_time of this HyperParameterTuningJobSummary.
        :param last_modified_time: The last_modified_time of this HyperParameterTuningJobSummary.
        :param training_job_status_counters: The training_job_status_counters of this HyperParameterTuningJobSummary.
        :param objective_status_counters: The objective_status_counters of this HyperParameterTuningJobSummary.
        :param resource_limits: The resource_limits of this HyperParameterTuningJobSummary.
        """
        self.openapi_types = {
            'hyper_parameter_tuning_job_name': str,
            'hyper_parameter_tuning_job_arn': str,
            'hyper_parameter_tuning_job_status': HyperParameterTuningJobStatus,
            'strategy': HyperParameterTuningJobStrategyType,
            'creation_time': datetime,
            'hyper_parameter_tuning_end_time': datetime,
            'last_modified_time': datetime,
            'training_job_status_counters': HyperParameterTuningJobSummaryTrainingJobStatusCounters,
            'objective_status_counters': HyperParameterTuningJobSummaryObjectiveStatusCounters,
            'resource_limits': HyperParameterTuningJobSummaryResourceLimits
        }

        self.attribute_map = {
            'hyper_parameter_tuning_job_name': 'HyperParameterTuningJobName',
            'hyper_parameter_tuning_job_arn': 'HyperParameterTuningJobArn',
            'hyper_parameter_tuning_job_status': 'HyperParameterTuningJobStatus',
            'strategy': 'Strategy',
            'creation_time': 'CreationTime',
            'hyper_parameter_tuning_end_time': 'HyperParameterTuningEndTime',
            'last_modified_time': 'LastModifiedTime',
            'training_job_status_counters': 'TrainingJobStatusCounters',
            'objective_status_counters': 'ObjectiveStatusCounters',
            'resource_limits': 'ResourceLimits'
        }

        self._hyper_parameter_tuning_job_name = hyper_parameter_tuning_job_name
        self._hyper_parameter_tuning_job_arn = hyper_parameter_tuning_job_arn
        self._hyper_parameter_tuning_job_status = hyper_parameter_tuning_job_status
        self._strategy = strategy
        self._creation_time = creation_time
        self._hyper_parameter_tuning_end_time = hyper_parameter_tuning_end_time
        self._last_modified_time = last_modified_time
        self._training_job_status_counters = training_job_status_counters
        self._objective_status_counters = objective_status_counters
        self._resource_limits = resource_limits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HyperParameterTuningJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HyperParameterTuningJobSummary of this HyperParameterTuningJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hyper_parameter_tuning_job_name(self):
        """Gets the hyper_parameter_tuning_job_name of this HyperParameterTuningJobSummary.


        :return: The hyper_parameter_tuning_job_name of this HyperParameterTuningJobSummary.
        :rtype: str
        """
        return self._hyper_parameter_tuning_job_name

    @hyper_parameter_tuning_job_name.setter
    def hyper_parameter_tuning_job_name(self, hyper_parameter_tuning_job_name):
        """Sets the hyper_parameter_tuning_job_name of this HyperParameterTuningJobSummary.


        :param hyper_parameter_tuning_job_name: The hyper_parameter_tuning_job_name of this HyperParameterTuningJobSummary.
        :type hyper_parameter_tuning_job_name: str
        """
        if hyper_parameter_tuning_job_name is None:
            raise ValueError("Invalid value for `hyper_parameter_tuning_job_name`, must not be `None`")

        self._hyper_parameter_tuning_job_name = hyper_parameter_tuning_job_name

    @property
    def hyper_parameter_tuning_job_arn(self):
        """Gets the hyper_parameter_tuning_job_arn of this HyperParameterTuningJobSummary.


        :return: The hyper_parameter_tuning_job_arn of this HyperParameterTuningJobSummary.
        :rtype: str
        """
        return self._hyper_parameter_tuning_job_arn

    @hyper_parameter_tuning_job_arn.setter
    def hyper_parameter_tuning_job_arn(self, hyper_parameter_tuning_job_arn):
        """Sets the hyper_parameter_tuning_job_arn of this HyperParameterTuningJobSummary.


        :param hyper_parameter_tuning_job_arn: The hyper_parameter_tuning_job_arn of this HyperParameterTuningJobSummary.
        :type hyper_parameter_tuning_job_arn: str
        """
        if hyper_parameter_tuning_job_arn is None:
            raise ValueError("Invalid value for `hyper_parameter_tuning_job_arn`, must not be `None`")

        self._hyper_parameter_tuning_job_arn = hyper_parameter_tuning_job_arn

    @property
    def hyper_parameter_tuning_job_status(self):
        """Gets the hyper_parameter_tuning_job_status of this HyperParameterTuningJobSummary.


        :return: The hyper_parameter_tuning_job_status of this HyperParameterTuningJobSummary.
        :rtype: HyperParameterTuningJobStatus
        """
        return self._hyper_parameter_tuning_job_status

    @hyper_parameter_tuning_job_status.setter
    def hyper_parameter_tuning_job_status(self, hyper_parameter_tuning_job_status):
        """Sets the hyper_parameter_tuning_job_status of this HyperParameterTuningJobSummary.


        :param hyper_parameter_tuning_job_status: The hyper_parameter_tuning_job_status of this HyperParameterTuningJobSummary.
        :type hyper_parameter_tuning_job_status: HyperParameterTuningJobStatus
        """
        if hyper_parameter_tuning_job_status is None:
            raise ValueError("Invalid value for `hyper_parameter_tuning_job_status`, must not be `None`")

        self._hyper_parameter_tuning_job_status = hyper_parameter_tuning_job_status

    @property
    def strategy(self):
        """Gets the strategy of this HyperParameterTuningJobSummary.


        :return: The strategy of this HyperParameterTuningJobSummary.
        :rtype: HyperParameterTuningJobStrategyType
        """
        return self._strategy

    @strategy.setter
    def strategy(self, strategy):
        """Sets the strategy of this HyperParameterTuningJobSummary.


        :param strategy: The strategy of this HyperParameterTuningJobSummary.
        :type strategy: HyperParameterTuningJobStrategyType
        """
        if strategy is None:
            raise ValueError("Invalid value for `strategy`, must not be `None`")

        self._strategy = strategy

    @property
    def creation_time(self):
        """Gets the creation_time of this HyperParameterTuningJobSummary.


        :return: The creation_time of this HyperParameterTuningJobSummary.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this HyperParameterTuningJobSummary.


        :param creation_time: The creation_time of this HyperParameterTuningJobSummary.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time

    @property
    def hyper_parameter_tuning_end_time(self):
        """Gets the hyper_parameter_tuning_end_time of this HyperParameterTuningJobSummary.


        :return: The hyper_parameter_tuning_end_time of this HyperParameterTuningJobSummary.
        :rtype: datetime
        """
        return self._hyper_parameter_tuning_end_time

    @hyper_parameter_tuning_end_time.setter
    def hyper_parameter_tuning_end_time(self, hyper_parameter_tuning_end_time):
        """Sets the hyper_parameter_tuning_end_time of this HyperParameterTuningJobSummary.


        :param hyper_parameter_tuning_end_time: The hyper_parameter_tuning_end_time of this HyperParameterTuningJobSummary.
        :type hyper_parameter_tuning_end_time: datetime
        """

        self._hyper_parameter_tuning_end_time = hyper_parameter_tuning_end_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this HyperParameterTuningJobSummary.


        :return: The last_modified_time of this HyperParameterTuningJobSummary.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this HyperParameterTuningJobSummary.


        :param last_modified_time: The last_modified_time of this HyperParameterTuningJobSummary.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def training_job_status_counters(self):
        """Gets the training_job_status_counters of this HyperParameterTuningJobSummary.


        :return: The training_job_status_counters of this HyperParameterTuningJobSummary.
        :rtype: HyperParameterTuningJobSummaryTrainingJobStatusCounters
        """
        return self._training_job_status_counters

    @training_job_status_counters.setter
    def training_job_status_counters(self, training_job_status_counters):
        """Sets the training_job_status_counters of this HyperParameterTuningJobSummary.


        :param training_job_status_counters: The training_job_status_counters of this HyperParameterTuningJobSummary.
        :type training_job_status_counters: HyperParameterTuningJobSummaryTrainingJobStatusCounters
        """
        if training_job_status_counters is None:
            raise ValueError("Invalid value for `training_job_status_counters`, must not be `None`")

        self._training_job_status_counters = training_job_status_counters

    @property
    def objective_status_counters(self):
        """Gets the objective_status_counters of this HyperParameterTuningJobSummary.


        :return: The objective_status_counters of this HyperParameterTuningJobSummary.
        :rtype: HyperParameterTuningJobSummaryObjectiveStatusCounters
        """
        return self._objective_status_counters

    @objective_status_counters.setter
    def objective_status_counters(self, objective_status_counters):
        """Sets the objective_status_counters of this HyperParameterTuningJobSummary.


        :param objective_status_counters: The objective_status_counters of this HyperParameterTuningJobSummary.
        :type objective_status_counters: HyperParameterTuningJobSummaryObjectiveStatusCounters
        """
        if objective_status_counters is None:
            raise ValueError("Invalid value for `objective_status_counters`, must not be `None`")

        self._objective_status_counters = objective_status_counters

    @property
    def resource_limits(self):
        """Gets the resource_limits of this HyperParameterTuningJobSummary.


        :return: The resource_limits of this HyperParameterTuningJobSummary.
        :rtype: HyperParameterTuningJobSummaryResourceLimits
        """
        return self._resource_limits

    @resource_limits.setter
    def resource_limits(self, resource_limits):
        """Sets the resource_limits of this HyperParameterTuningJobSummary.


        :param resource_limits: The resource_limits of this HyperParameterTuningJobSummary.
        :type resource_limits: HyperParameterTuningJobSummaryResourceLimits
        """

        self._resource_limits = resource_limits
