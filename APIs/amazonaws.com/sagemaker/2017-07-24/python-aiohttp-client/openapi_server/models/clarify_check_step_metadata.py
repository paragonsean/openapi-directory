# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClarifyCheckStepMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_type: str=None, baseline_used_for_drift_check_constraints: str=None, calculated_baseline_constraints: str=None, model_package_group_name: str=None, violation_report: str=None, check_job_arn: str=None, skip_check: bool=None, register_new_baseline: bool=None):
        """ClarifyCheckStepMetadata - a model defined in OpenAPI

        :param check_type: The check_type of this ClarifyCheckStepMetadata.
        :param baseline_used_for_drift_check_constraints: The baseline_used_for_drift_check_constraints of this ClarifyCheckStepMetadata.
        :param calculated_baseline_constraints: The calculated_baseline_constraints of this ClarifyCheckStepMetadata.
        :param model_package_group_name: The model_package_group_name of this ClarifyCheckStepMetadata.
        :param violation_report: The violation_report of this ClarifyCheckStepMetadata.
        :param check_job_arn: The check_job_arn of this ClarifyCheckStepMetadata.
        :param skip_check: The skip_check of this ClarifyCheckStepMetadata.
        :param register_new_baseline: The register_new_baseline of this ClarifyCheckStepMetadata.
        """
        self.openapi_types = {
            'check_type': str,
            'baseline_used_for_drift_check_constraints': str,
            'calculated_baseline_constraints': str,
            'model_package_group_name': str,
            'violation_report': str,
            'check_job_arn': str,
            'skip_check': bool,
            'register_new_baseline': bool
        }

        self.attribute_map = {
            'check_type': 'CheckType',
            'baseline_used_for_drift_check_constraints': 'BaselineUsedForDriftCheckConstraints',
            'calculated_baseline_constraints': 'CalculatedBaselineConstraints',
            'model_package_group_name': 'ModelPackageGroupName',
            'violation_report': 'ViolationReport',
            'check_job_arn': 'CheckJobArn',
            'skip_check': 'SkipCheck',
            'register_new_baseline': 'RegisterNewBaseline'
        }

        self._check_type = check_type
        self._baseline_used_for_drift_check_constraints = baseline_used_for_drift_check_constraints
        self._calculated_baseline_constraints = calculated_baseline_constraints
        self._model_package_group_name = model_package_group_name
        self._violation_report = violation_report
        self._check_job_arn = check_job_arn
        self._skip_check = skip_check
        self._register_new_baseline = register_new_baseline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClarifyCheckStepMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClarifyCheckStepMetadata of this ClarifyCheckStepMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_type(self):
        """Gets the check_type of this ClarifyCheckStepMetadata.


        :return: The check_type of this ClarifyCheckStepMetadata.
        :rtype: str
        """
        return self._check_type

    @check_type.setter
    def check_type(self, check_type):
        """Sets the check_type of this ClarifyCheckStepMetadata.


        :param check_type: The check_type of this ClarifyCheckStepMetadata.
        :type check_type: str
        """

        self._check_type = check_type

    @property
    def baseline_used_for_drift_check_constraints(self):
        """Gets the baseline_used_for_drift_check_constraints of this ClarifyCheckStepMetadata.


        :return: The baseline_used_for_drift_check_constraints of this ClarifyCheckStepMetadata.
        :rtype: str
        """
        return self._baseline_used_for_drift_check_constraints

    @baseline_used_for_drift_check_constraints.setter
    def baseline_used_for_drift_check_constraints(self, baseline_used_for_drift_check_constraints):
        """Sets the baseline_used_for_drift_check_constraints of this ClarifyCheckStepMetadata.


        :param baseline_used_for_drift_check_constraints: The baseline_used_for_drift_check_constraints of this ClarifyCheckStepMetadata.
        :type baseline_used_for_drift_check_constraints: str
        """

        self._baseline_used_for_drift_check_constraints = baseline_used_for_drift_check_constraints

    @property
    def calculated_baseline_constraints(self):
        """Gets the calculated_baseline_constraints of this ClarifyCheckStepMetadata.


        :return: The calculated_baseline_constraints of this ClarifyCheckStepMetadata.
        :rtype: str
        """
        return self._calculated_baseline_constraints

    @calculated_baseline_constraints.setter
    def calculated_baseline_constraints(self, calculated_baseline_constraints):
        """Sets the calculated_baseline_constraints of this ClarifyCheckStepMetadata.


        :param calculated_baseline_constraints: The calculated_baseline_constraints of this ClarifyCheckStepMetadata.
        :type calculated_baseline_constraints: str
        """

        self._calculated_baseline_constraints = calculated_baseline_constraints

    @property
    def model_package_group_name(self):
        """Gets the model_package_group_name of this ClarifyCheckStepMetadata.


        :return: The model_package_group_name of this ClarifyCheckStepMetadata.
        :rtype: str
        """
        return self._model_package_group_name

    @model_package_group_name.setter
    def model_package_group_name(self, model_package_group_name):
        """Sets the model_package_group_name of this ClarifyCheckStepMetadata.


        :param model_package_group_name: The model_package_group_name of this ClarifyCheckStepMetadata.
        :type model_package_group_name: str
        """

        self._model_package_group_name = model_package_group_name

    @property
    def violation_report(self):
        """Gets the violation_report of this ClarifyCheckStepMetadata.


        :return: The violation_report of this ClarifyCheckStepMetadata.
        :rtype: str
        """
        return self._violation_report

    @violation_report.setter
    def violation_report(self, violation_report):
        """Sets the violation_report of this ClarifyCheckStepMetadata.


        :param violation_report: The violation_report of this ClarifyCheckStepMetadata.
        :type violation_report: str
        """

        self._violation_report = violation_report

    @property
    def check_job_arn(self):
        """Gets the check_job_arn of this ClarifyCheckStepMetadata.


        :return: The check_job_arn of this ClarifyCheckStepMetadata.
        :rtype: str
        """
        return self._check_job_arn

    @check_job_arn.setter
    def check_job_arn(self, check_job_arn):
        """Sets the check_job_arn of this ClarifyCheckStepMetadata.


        :param check_job_arn: The check_job_arn of this ClarifyCheckStepMetadata.
        :type check_job_arn: str
        """

        self._check_job_arn = check_job_arn

    @property
    def skip_check(self):
        """Gets the skip_check of this ClarifyCheckStepMetadata.


        :return: The skip_check of this ClarifyCheckStepMetadata.
        :rtype: bool
        """
        return self._skip_check

    @skip_check.setter
    def skip_check(self, skip_check):
        """Sets the skip_check of this ClarifyCheckStepMetadata.


        :param skip_check: The skip_check of this ClarifyCheckStepMetadata.
        :type skip_check: bool
        """

        self._skip_check = skip_check

    @property
    def register_new_baseline(self):
        """Gets the register_new_baseline of this ClarifyCheckStepMetadata.


        :return: The register_new_baseline of this ClarifyCheckStepMetadata.
        :rtype: bool
        """
        return self._register_new_baseline

    @register_new_baseline.setter
    def register_new_baseline(self, register_new_baseline):
        """Sets the register_new_baseline of this ClarifyCheckStepMetadata.


        :param register_new_baseline: The register_new_baseline of this ClarifyCheckStepMetadata.
        :type register_new_baseline: bool
        """

        self._register_new_baseline = register_new_baseline
