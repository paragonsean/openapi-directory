# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateTrainingJobRequestResourceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keep_alive_period_in_seconds: int=None):
        """UpdateTrainingJobRequestResourceConfig - a model defined in OpenAPI

        :param keep_alive_period_in_seconds: The keep_alive_period_in_seconds of this UpdateTrainingJobRequestResourceConfig.
        """
        self.openapi_types = {
            'keep_alive_period_in_seconds': int
        }

        self.attribute_map = {
            'keep_alive_period_in_seconds': 'KeepAlivePeriodInSeconds'
        }

        self._keep_alive_period_in_seconds = keep_alive_period_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTrainingJobRequestResourceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTrainingJobRequest_ResourceConfig of this UpdateTrainingJobRequestResourceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keep_alive_period_in_seconds(self):
        """Gets the keep_alive_period_in_seconds of this UpdateTrainingJobRequestResourceConfig.


        :return: The keep_alive_period_in_seconds of this UpdateTrainingJobRequestResourceConfig.
        :rtype: int
        """
        return self._keep_alive_period_in_seconds

    @keep_alive_period_in_seconds.setter
    def keep_alive_period_in_seconds(self, keep_alive_period_in_seconds):
        """Sets the keep_alive_period_in_seconds of this UpdateTrainingJobRequestResourceConfig.


        :param keep_alive_period_in_seconds: The keep_alive_period_in_seconds of this UpdateTrainingJobRequestResourceConfig.
        :type keep_alive_period_in_seconds: int
        """
        if keep_alive_period_in_seconds is None:
            raise ValueError("Invalid value for `keep_alive_period_in_seconds`, must not be `None`")

        self._keep_alive_period_in_seconds = keep_alive_period_in_seconds
