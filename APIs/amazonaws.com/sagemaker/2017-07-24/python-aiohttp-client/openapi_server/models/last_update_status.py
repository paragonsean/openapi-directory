# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.last_update_status_value import LastUpdateStatusValue
from openapi_server import util


class LastUpdateStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: LastUpdateStatusValue=None, failure_reason: str=None):
        """LastUpdateStatus - a model defined in OpenAPI

        :param status: The status of this LastUpdateStatus.
        :param failure_reason: The failure_reason of this LastUpdateStatus.
        """
        self.openapi_types = {
            'status': LastUpdateStatusValue,
            'failure_reason': str
        }

        self.attribute_map = {
            'status': 'Status',
            'failure_reason': 'FailureReason'
        }

        self._status = status
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LastUpdateStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LastUpdateStatus of this LastUpdateStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this LastUpdateStatus.


        :return: The status of this LastUpdateStatus.
        :rtype: LastUpdateStatusValue
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LastUpdateStatus.


        :param status: The status of this LastUpdateStatus.
        :type status: LastUpdateStatusValue
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this LastUpdateStatus.


        :return: The failure_reason of this LastUpdateStatus.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this LastUpdateStatus.


        :param failure_reason: The failure_reason of this LastUpdateStatus.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason
