# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtifactSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_uri: str=None, source_types: List=None):
        """ArtifactSource - a model defined in OpenAPI

        :param source_uri: The source_uri of this ArtifactSource.
        :param source_types: The source_types of this ArtifactSource.
        """
        self.openapi_types = {
            'source_uri': str,
            'source_types': List
        }

        self.attribute_map = {
            'source_uri': 'SourceUri',
            'source_types': 'SourceTypes'
        }

        self._source_uri = source_uri
        self._source_types = source_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtifactSource of this ArtifactSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_uri(self):
        """Gets the source_uri of this ArtifactSource.


        :return: The source_uri of this ArtifactSource.
        :rtype: str
        """
        return self._source_uri

    @source_uri.setter
    def source_uri(self, source_uri):
        """Sets the source_uri of this ArtifactSource.


        :param source_uri: The source_uri of this ArtifactSource.
        :type source_uri: str
        """
        if source_uri is None:
            raise ValueError("Invalid value for `source_uri`, must not be `None`")

        self._source_uri = source_uri

    @property
    def source_types(self):
        """Gets the source_types of this ArtifactSource.


        :return: The source_types of this ArtifactSource.
        :rtype: List
        """
        return self._source_types

    @source_types.setter
    def source_types(self, source_types):
        """Sets the source_types of this ArtifactSource.


        :param source_types: The source_types of this ArtifactSource.
        :type source_types: List
        """

        self._source_types = source_types
