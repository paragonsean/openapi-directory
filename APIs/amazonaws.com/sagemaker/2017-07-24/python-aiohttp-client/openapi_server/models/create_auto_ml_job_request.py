# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_auto_ml_job_request_auto_ml_job_config import CreateAutoMLJobRequestAutoMLJobConfig
from openapi_server.models.create_auto_ml_job_request_auto_ml_job_objective import CreateAutoMLJobRequestAutoMLJobObjective
from openapi_server.models.create_auto_ml_job_request_model_deploy_config import CreateAutoMLJobRequestModelDeployConfig
from openapi_server.models.create_auto_ml_job_request_output_data_config import CreateAutoMLJobRequestOutputDataConfig
from openapi_server.models.problem_type import ProblemType
from openapi_server import util


class CreateAutoMLJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_ml_job_name: str=None, input_data_config: List=None, output_data_config: CreateAutoMLJobRequestOutputDataConfig=None, problem_type: ProblemType=None, auto_ml_job_objective: CreateAutoMLJobRequestAutoMLJobObjective=None, auto_ml_job_config: CreateAutoMLJobRequestAutoMLJobConfig=None, role_arn: str=None, generate_candidate_definitions_only: bool=None, tags: List=None, model_deploy_config: CreateAutoMLJobRequestModelDeployConfig=None):
        """CreateAutoMLJobRequest - a model defined in OpenAPI

        :param auto_ml_job_name: The auto_ml_job_name of this CreateAutoMLJobRequest.
        :param input_data_config: The input_data_config of this CreateAutoMLJobRequest.
        :param output_data_config: The output_data_config of this CreateAutoMLJobRequest.
        :param problem_type: The problem_type of this CreateAutoMLJobRequest.
        :param auto_ml_job_objective: The auto_ml_job_objective of this CreateAutoMLJobRequest.
        :param auto_ml_job_config: The auto_ml_job_config of this CreateAutoMLJobRequest.
        :param role_arn: The role_arn of this CreateAutoMLJobRequest.
        :param generate_candidate_definitions_only: The generate_candidate_definitions_only of this CreateAutoMLJobRequest.
        :param tags: The tags of this CreateAutoMLJobRequest.
        :param model_deploy_config: The model_deploy_config of this CreateAutoMLJobRequest.
        """
        self.openapi_types = {
            'auto_ml_job_name': str,
            'input_data_config': List,
            'output_data_config': CreateAutoMLJobRequestOutputDataConfig,
            'problem_type': ProblemType,
            'auto_ml_job_objective': CreateAutoMLJobRequestAutoMLJobObjective,
            'auto_ml_job_config': CreateAutoMLJobRequestAutoMLJobConfig,
            'role_arn': str,
            'generate_candidate_definitions_only': bool,
            'tags': List,
            'model_deploy_config': CreateAutoMLJobRequestModelDeployConfig
        }

        self.attribute_map = {
            'auto_ml_job_name': 'AutoMLJobName',
            'input_data_config': 'InputDataConfig',
            'output_data_config': 'OutputDataConfig',
            'problem_type': 'ProblemType',
            'auto_ml_job_objective': 'AutoMLJobObjective',
            'auto_ml_job_config': 'AutoMLJobConfig',
            'role_arn': 'RoleArn',
            'generate_candidate_definitions_only': 'GenerateCandidateDefinitionsOnly',
            'tags': 'Tags',
            'model_deploy_config': 'ModelDeployConfig'
        }

        self._auto_ml_job_name = auto_ml_job_name
        self._input_data_config = input_data_config
        self._output_data_config = output_data_config
        self._problem_type = problem_type
        self._auto_ml_job_objective = auto_ml_job_objective
        self._auto_ml_job_config = auto_ml_job_config
        self._role_arn = role_arn
        self._generate_candidate_definitions_only = generate_candidate_definitions_only
        self._tags = tags
        self._model_deploy_config = model_deploy_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAutoMLJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAutoMLJobRequest of this CreateAutoMLJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_ml_job_name(self):
        """Gets the auto_ml_job_name of this CreateAutoMLJobRequest.


        :return: The auto_ml_job_name of this CreateAutoMLJobRequest.
        :rtype: str
        """
        return self._auto_ml_job_name

    @auto_ml_job_name.setter
    def auto_ml_job_name(self, auto_ml_job_name):
        """Sets the auto_ml_job_name of this CreateAutoMLJobRequest.


        :param auto_ml_job_name: The auto_ml_job_name of this CreateAutoMLJobRequest.
        :type auto_ml_job_name: str
        """
        if auto_ml_job_name is None:
            raise ValueError("Invalid value for `auto_ml_job_name`, must not be `None`")

        self._auto_ml_job_name = auto_ml_job_name

    @property
    def input_data_config(self):
        """Gets the input_data_config of this CreateAutoMLJobRequest.


        :return: The input_data_config of this CreateAutoMLJobRequest.
        :rtype: List
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this CreateAutoMLJobRequest.


        :param input_data_config: The input_data_config of this CreateAutoMLJobRequest.
        :type input_data_config: List
        """
        if input_data_config is None:
            raise ValueError("Invalid value for `input_data_config`, must not be `None`")

        self._input_data_config = input_data_config

    @property
    def output_data_config(self):
        """Gets the output_data_config of this CreateAutoMLJobRequest.


        :return: The output_data_config of this CreateAutoMLJobRequest.
        :rtype: CreateAutoMLJobRequestOutputDataConfig
        """
        return self._output_data_config

    @output_data_config.setter
    def output_data_config(self, output_data_config):
        """Sets the output_data_config of this CreateAutoMLJobRequest.


        :param output_data_config: The output_data_config of this CreateAutoMLJobRequest.
        :type output_data_config: CreateAutoMLJobRequestOutputDataConfig
        """
        if output_data_config is None:
            raise ValueError("Invalid value for `output_data_config`, must not be `None`")

        self._output_data_config = output_data_config

    @property
    def problem_type(self):
        """Gets the problem_type of this CreateAutoMLJobRequest.


        :return: The problem_type of this CreateAutoMLJobRequest.
        :rtype: ProblemType
        """
        return self._problem_type

    @problem_type.setter
    def problem_type(self, problem_type):
        """Sets the problem_type of this CreateAutoMLJobRequest.


        :param problem_type: The problem_type of this CreateAutoMLJobRequest.
        :type problem_type: ProblemType
        """

        self._problem_type = problem_type

    @property
    def auto_ml_job_objective(self):
        """Gets the auto_ml_job_objective of this CreateAutoMLJobRequest.


        :return: The auto_ml_job_objective of this CreateAutoMLJobRequest.
        :rtype: CreateAutoMLJobRequestAutoMLJobObjective
        """
        return self._auto_ml_job_objective

    @auto_ml_job_objective.setter
    def auto_ml_job_objective(self, auto_ml_job_objective):
        """Sets the auto_ml_job_objective of this CreateAutoMLJobRequest.


        :param auto_ml_job_objective: The auto_ml_job_objective of this CreateAutoMLJobRequest.
        :type auto_ml_job_objective: CreateAutoMLJobRequestAutoMLJobObjective
        """

        self._auto_ml_job_objective = auto_ml_job_objective

    @property
    def auto_ml_job_config(self):
        """Gets the auto_ml_job_config of this CreateAutoMLJobRequest.


        :return: The auto_ml_job_config of this CreateAutoMLJobRequest.
        :rtype: CreateAutoMLJobRequestAutoMLJobConfig
        """
        return self._auto_ml_job_config

    @auto_ml_job_config.setter
    def auto_ml_job_config(self, auto_ml_job_config):
        """Sets the auto_ml_job_config of this CreateAutoMLJobRequest.


        :param auto_ml_job_config: The auto_ml_job_config of this CreateAutoMLJobRequest.
        :type auto_ml_job_config: CreateAutoMLJobRequestAutoMLJobConfig
        """

        self._auto_ml_job_config = auto_ml_job_config

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateAutoMLJobRequest.


        :return: The role_arn of this CreateAutoMLJobRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateAutoMLJobRequest.


        :param role_arn: The role_arn of this CreateAutoMLJobRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def generate_candidate_definitions_only(self):
        """Gets the generate_candidate_definitions_only of this CreateAutoMLJobRequest.


        :return: The generate_candidate_definitions_only of this CreateAutoMLJobRequest.
        :rtype: bool
        """
        return self._generate_candidate_definitions_only

    @generate_candidate_definitions_only.setter
    def generate_candidate_definitions_only(self, generate_candidate_definitions_only):
        """Sets the generate_candidate_definitions_only of this CreateAutoMLJobRequest.


        :param generate_candidate_definitions_only: The generate_candidate_definitions_only of this CreateAutoMLJobRequest.
        :type generate_candidate_definitions_only: bool
        """

        self._generate_candidate_definitions_only = generate_candidate_definitions_only

    @property
    def tags(self):
        """Gets the tags of this CreateAutoMLJobRequest.


        :return: The tags of this CreateAutoMLJobRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAutoMLJobRequest.


        :param tags: The tags of this CreateAutoMLJobRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def model_deploy_config(self):
        """Gets the model_deploy_config of this CreateAutoMLJobRequest.


        :return: The model_deploy_config of this CreateAutoMLJobRequest.
        :rtype: CreateAutoMLJobRequestModelDeployConfig
        """
        return self._model_deploy_config

    @model_deploy_config.setter
    def model_deploy_config(self, model_deploy_config):
        """Sets the model_deploy_config of this CreateAutoMLJobRequest.


        :param model_deploy_config: The model_deploy_config of this CreateAutoMLJobRequest.
        :type model_deploy_config: CreateAutoMLJobRequestModelDeployConfig
        """

        self._model_deploy_config = model_deploy_config
