# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_trial_component_request_status import UpdateTrialComponentRequestStatus
from openapi_server import util


class UpdateTrialComponentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trial_component_name: str=None, display_name: str=None, status: UpdateTrialComponentRequestStatus=None, start_time: datetime=None, end_time: datetime=None, parameters: Dict=None, parameters_to_remove: List=None, input_artifacts: Dict=None, input_artifacts_to_remove: List=None, output_artifacts: Dict=None, output_artifacts_to_remove: List=None):
        """UpdateTrialComponentRequest - a model defined in OpenAPI

        :param trial_component_name: The trial_component_name of this UpdateTrialComponentRequest.
        :param display_name: The display_name of this UpdateTrialComponentRequest.
        :param status: The status of this UpdateTrialComponentRequest.
        :param start_time: The start_time of this UpdateTrialComponentRequest.
        :param end_time: The end_time of this UpdateTrialComponentRequest.
        :param parameters: The parameters of this UpdateTrialComponentRequest.
        :param parameters_to_remove: The parameters_to_remove of this UpdateTrialComponentRequest.
        :param input_artifacts: The input_artifacts of this UpdateTrialComponentRequest.
        :param input_artifacts_to_remove: The input_artifacts_to_remove of this UpdateTrialComponentRequest.
        :param output_artifacts: The output_artifacts of this UpdateTrialComponentRequest.
        :param output_artifacts_to_remove: The output_artifacts_to_remove of this UpdateTrialComponentRequest.
        """
        self.openapi_types = {
            'trial_component_name': str,
            'display_name': str,
            'status': UpdateTrialComponentRequestStatus,
            'start_time': datetime,
            'end_time': datetime,
            'parameters': Dict,
            'parameters_to_remove': List,
            'input_artifacts': Dict,
            'input_artifacts_to_remove': List,
            'output_artifacts': Dict,
            'output_artifacts_to_remove': List
        }

        self.attribute_map = {
            'trial_component_name': 'TrialComponentName',
            'display_name': 'DisplayName',
            'status': 'Status',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'parameters': 'Parameters',
            'parameters_to_remove': 'ParametersToRemove',
            'input_artifacts': 'InputArtifacts',
            'input_artifacts_to_remove': 'InputArtifactsToRemove',
            'output_artifacts': 'OutputArtifacts',
            'output_artifacts_to_remove': 'OutputArtifactsToRemove'
        }

        self._trial_component_name = trial_component_name
        self._display_name = display_name
        self._status = status
        self._start_time = start_time
        self._end_time = end_time
        self._parameters = parameters
        self._parameters_to_remove = parameters_to_remove
        self._input_artifacts = input_artifacts
        self._input_artifacts_to_remove = input_artifacts_to_remove
        self._output_artifacts = output_artifacts
        self._output_artifacts_to_remove = output_artifacts_to_remove

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTrialComponentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTrialComponentRequest of this UpdateTrialComponentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trial_component_name(self):
        """Gets the trial_component_name of this UpdateTrialComponentRequest.


        :return: The trial_component_name of this UpdateTrialComponentRequest.
        :rtype: str
        """
        return self._trial_component_name

    @trial_component_name.setter
    def trial_component_name(self, trial_component_name):
        """Sets the trial_component_name of this UpdateTrialComponentRequest.


        :param trial_component_name: The trial_component_name of this UpdateTrialComponentRequest.
        :type trial_component_name: str
        """
        if trial_component_name is None:
            raise ValueError("Invalid value for `trial_component_name`, must not be `None`")

        self._trial_component_name = trial_component_name

    @property
    def display_name(self):
        """Gets the display_name of this UpdateTrialComponentRequest.


        :return: The display_name of this UpdateTrialComponentRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UpdateTrialComponentRequest.


        :param display_name: The display_name of this UpdateTrialComponentRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def status(self):
        """Gets the status of this UpdateTrialComponentRequest.


        :return: The status of this UpdateTrialComponentRequest.
        :rtype: UpdateTrialComponentRequestStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateTrialComponentRequest.


        :param status: The status of this UpdateTrialComponentRequest.
        :type status: UpdateTrialComponentRequestStatus
        """

        self._status = status

    @property
    def start_time(self):
        """Gets the start_time of this UpdateTrialComponentRequest.


        :return: The start_time of this UpdateTrialComponentRequest.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this UpdateTrialComponentRequest.


        :param start_time: The start_time of this UpdateTrialComponentRequest.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this UpdateTrialComponentRequest.


        :return: The end_time of this UpdateTrialComponentRequest.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this UpdateTrialComponentRequest.


        :param end_time: The end_time of this UpdateTrialComponentRequest.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def parameters(self):
        """Gets the parameters of this UpdateTrialComponentRequest.


        :return: The parameters of this UpdateTrialComponentRequest.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this UpdateTrialComponentRequest.


        :param parameters: The parameters of this UpdateTrialComponentRequest.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def parameters_to_remove(self):
        """Gets the parameters_to_remove of this UpdateTrialComponentRequest.


        :return: The parameters_to_remove of this UpdateTrialComponentRequest.
        :rtype: List
        """
        return self._parameters_to_remove

    @parameters_to_remove.setter
    def parameters_to_remove(self, parameters_to_remove):
        """Sets the parameters_to_remove of this UpdateTrialComponentRequest.


        :param parameters_to_remove: The parameters_to_remove of this UpdateTrialComponentRequest.
        :type parameters_to_remove: List
        """

        self._parameters_to_remove = parameters_to_remove

    @property
    def input_artifacts(self):
        """Gets the input_artifacts of this UpdateTrialComponentRequest.


        :return: The input_artifacts of this UpdateTrialComponentRequest.
        :rtype: Dict
        """
        return self._input_artifacts

    @input_artifacts.setter
    def input_artifacts(self, input_artifacts):
        """Sets the input_artifacts of this UpdateTrialComponentRequest.


        :param input_artifacts: The input_artifacts of this UpdateTrialComponentRequest.
        :type input_artifacts: Dict
        """

        self._input_artifacts = input_artifacts

    @property
    def input_artifacts_to_remove(self):
        """Gets the input_artifacts_to_remove of this UpdateTrialComponentRequest.


        :return: The input_artifacts_to_remove of this UpdateTrialComponentRequest.
        :rtype: List
        """
        return self._input_artifacts_to_remove

    @input_artifacts_to_remove.setter
    def input_artifacts_to_remove(self, input_artifacts_to_remove):
        """Sets the input_artifacts_to_remove of this UpdateTrialComponentRequest.


        :param input_artifacts_to_remove: The input_artifacts_to_remove of this UpdateTrialComponentRequest.
        :type input_artifacts_to_remove: List
        """

        self._input_artifacts_to_remove = input_artifacts_to_remove

    @property
    def output_artifacts(self):
        """Gets the output_artifacts of this UpdateTrialComponentRequest.


        :return: The output_artifacts of this UpdateTrialComponentRequest.
        :rtype: Dict
        """
        return self._output_artifacts

    @output_artifacts.setter
    def output_artifacts(self, output_artifacts):
        """Sets the output_artifacts of this UpdateTrialComponentRequest.


        :param output_artifacts: The output_artifacts of this UpdateTrialComponentRequest.
        :type output_artifacts: Dict
        """

        self._output_artifacts = output_artifacts

    @property
    def output_artifacts_to_remove(self):
        """Gets the output_artifacts_to_remove of this UpdateTrialComponentRequest.


        :return: The output_artifacts_to_remove of this UpdateTrialComponentRequest.
        :rtype: List
        """
        return self._output_artifacts_to_remove

    @output_artifacts_to_remove.setter
    def output_artifacts_to_remove(self, output_artifacts_to_remove):
        """Sets the output_artifacts_to_remove of this UpdateTrialComponentRequest.


        :param output_artifacts_to_remove: The output_artifacts_to_remove of this UpdateTrialComponentRequest.
        :type output_artifacts_to_remove: List
        """

        self._output_artifacts_to_remove = output_artifacts_to_remove
