# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_compression_type import OutputCompressionType
from openapi_server import util


class OutputDataConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_key_id: str=None, s3_output_path: str=None, compression_type: OutputCompressionType=None):
        """OutputDataConfig - a model defined in OpenAPI

        :param kms_key_id: The kms_key_id of this OutputDataConfig.
        :param s3_output_path: The s3_output_path of this OutputDataConfig.
        :param compression_type: The compression_type of this OutputDataConfig.
        """
        self.openapi_types = {
            'kms_key_id': str,
            's3_output_path': str,
            'compression_type': OutputCompressionType
        }

        self.attribute_map = {
            'kms_key_id': 'KmsKeyId',
            's3_output_path': 'S3OutputPath',
            'compression_type': 'CompressionType'
        }

        self._kms_key_id = kms_key_id
        self._s3_output_path = s3_output_path
        self._compression_type = compression_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputDataConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputDataConfig of this OutputDataConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this OutputDataConfig.


        :return: The kms_key_id of this OutputDataConfig.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this OutputDataConfig.


        :param kms_key_id: The kms_key_id of this OutputDataConfig.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def s3_output_path(self):
        """Gets the s3_output_path of this OutputDataConfig.


        :return: The s3_output_path of this OutputDataConfig.
        :rtype: str
        """
        return self._s3_output_path

    @s3_output_path.setter
    def s3_output_path(self, s3_output_path):
        """Sets the s3_output_path of this OutputDataConfig.


        :param s3_output_path: The s3_output_path of this OutputDataConfig.
        :type s3_output_path: str
        """
        if s3_output_path is None:
            raise ValueError("Invalid value for `s3_output_path`, must not be `None`")

        self._s3_output_path = s3_output_path

    @property
    def compression_type(self):
        """Gets the compression_type of this OutputDataConfig.


        :return: The compression_type of this OutputDataConfig.
        :rtype: OutputCompressionType
        """
        return self._compression_type

    @compression_type.setter
    def compression_type(self, compression_type):
        """Sets the compression_type of this OutputDataConfig.


        :param compression_type: The compression_type of this OutputDataConfig.
        :type compression_type: OutputCompressionType
        """

        self._compression_type = compression_type
