# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateImageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, display_name: str=None, image_name: str=None, role_arn: str=None, tags: List=None):
        """CreateImageRequest - a model defined in OpenAPI

        :param description: The description of this CreateImageRequest.
        :param display_name: The display_name of this CreateImageRequest.
        :param image_name: The image_name of this CreateImageRequest.
        :param role_arn: The role_arn of this CreateImageRequest.
        :param tags: The tags of this CreateImageRequest.
        """
        self.openapi_types = {
            'description': str,
            'display_name': str,
            'image_name': str,
            'role_arn': str,
            'tags': List
        }

        self.attribute_map = {
            'description': 'Description',
            'display_name': 'DisplayName',
            'image_name': 'ImageName',
            'role_arn': 'RoleArn',
            'tags': 'Tags'
        }

        self._description = description
        self._display_name = display_name
        self._image_name = image_name
        self._role_arn = role_arn
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateImageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateImageRequest of this CreateImageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CreateImageRequest.


        :return: The description of this CreateImageRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateImageRequest.


        :param description: The description of this CreateImageRequest.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this CreateImageRequest.


        :return: The display_name of this CreateImageRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CreateImageRequest.


        :param display_name: The display_name of this CreateImageRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def image_name(self):
        """Gets the image_name of this CreateImageRequest.


        :return: The image_name of this CreateImageRequest.
        :rtype: str
        """
        return self._image_name

    @image_name.setter
    def image_name(self, image_name):
        """Sets the image_name of this CreateImageRequest.


        :param image_name: The image_name of this CreateImageRequest.
        :type image_name: str
        """
        if image_name is None:
            raise ValueError("Invalid value for `image_name`, must not be `None`")

        self._image_name = image_name

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateImageRequest.


        :return: The role_arn of this CreateImageRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateImageRequest.


        :param role_arn: The role_arn of this CreateImageRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this CreateImageRequest.


        :return: The tags of this CreateImageRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateImageRequest.


        :param tags: The tags of this CreateImageRequest.
        :type tags: List
        """

        self._tags = tags
