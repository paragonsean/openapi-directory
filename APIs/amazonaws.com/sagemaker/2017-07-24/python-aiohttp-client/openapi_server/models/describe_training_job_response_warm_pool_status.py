# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.warm_pool_resource_status import WarmPoolResourceStatus
from openapi_server import util


class DescribeTrainingJobResponseWarmPoolStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: WarmPoolResourceStatus=None, resource_retained_billable_time_in_seconds: int=None, reused_by_job: str=None):
        """DescribeTrainingJobResponseWarmPoolStatus - a model defined in OpenAPI

        :param status: The status of this DescribeTrainingJobResponseWarmPoolStatus.
        :param resource_retained_billable_time_in_seconds: The resource_retained_billable_time_in_seconds of this DescribeTrainingJobResponseWarmPoolStatus.
        :param reused_by_job: The reused_by_job of this DescribeTrainingJobResponseWarmPoolStatus.
        """
        self.openapi_types = {
            'status': WarmPoolResourceStatus,
            'resource_retained_billable_time_in_seconds': int,
            'reused_by_job': str
        }

        self.attribute_map = {
            'status': 'Status',
            'resource_retained_billable_time_in_seconds': 'ResourceRetainedBillableTimeInSeconds',
            'reused_by_job': 'ReusedByJob'
        }

        self._status = status
        self._resource_retained_billable_time_in_seconds = resource_retained_billable_time_in_seconds
        self._reused_by_job = reused_by_job

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTrainingJobResponseWarmPoolStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTrainingJobResponse_WarmPoolStatus of this DescribeTrainingJobResponseWarmPoolStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this DescribeTrainingJobResponseWarmPoolStatus.


        :return: The status of this DescribeTrainingJobResponseWarmPoolStatus.
        :rtype: WarmPoolResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeTrainingJobResponseWarmPoolStatus.


        :param status: The status of this DescribeTrainingJobResponseWarmPoolStatus.
        :type status: WarmPoolResourceStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def resource_retained_billable_time_in_seconds(self):
        """Gets the resource_retained_billable_time_in_seconds of this DescribeTrainingJobResponseWarmPoolStatus.


        :return: The resource_retained_billable_time_in_seconds of this DescribeTrainingJobResponseWarmPoolStatus.
        :rtype: int
        """
        return self._resource_retained_billable_time_in_seconds

    @resource_retained_billable_time_in_seconds.setter
    def resource_retained_billable_time_in_seconds(self, resource_retained_billable_time_in_seconds):
        """Sets the resource_retained_billable_time_in_seconds of this DescribeTrainingJobResponseWarmPoolStatus.


        :param resource_retained_billable_time_in_seconds: The resource_retained_billable_time_in_seconds of this DescribeTrainingJobResponseWarmPoolStatus.
        :type resource_retained_billable_time_in_seconds: int
        """

        self._resource_retained_billable_time_in_seconds = resource_retained_billable_time_in_seconds

    @property
    def reused_by_job(self):
        """Gets the reused_by_job of this DescribeTrainingJobResponseWarmPoolStatus.


        :return: The reused_by_job of this DescribeTrainingJobResponseWarmPoolStatus.
        :rtype: str
        """
        return self._reused_by_job

    @reused_by_job.setter
    def reused_by_job(self, reused_by_job):
        """Sets the reused_by_job of this DescribeTrainingJobResponseWarmPoolStatus.


        :param reused_by_job: The reused_by_job of this DescribeTrainingJobResponseWarmPoolStatus.
        :type reused_by_job: str
        """

        self._reused_by_job = reused_by_job
