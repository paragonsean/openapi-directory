# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.algorithm_validation_profile_training_job_definition import AlgorithmValidationProfileTrainingJobDefinition
from openapi_server.models.algorithm_validation_profile_transform_job_definition import AlgorithmValidationProfileTransformJobDefinition
from openapi_server import util


class AlgorithmValidationProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profile_name: str=None, training_job_definition: AlgorithmValidationProfileTrainingJobDefinition=None, transform_job_definition: AlgorithmValidationProfileTransformJobDefinition=None):
        """AlgorithmValidationProfile - a model defined in OpenAPI

        :param profile_name: The profile_name of this AlgorithmValidationProfile.
        :param training_job_definition: The training_job_definition of this AlgorithmValidationProfile.
        :param transform_job_definition: The transform_job_definition of this AlgorithmValidationProfile.
        """
        self.openapi_types = {
            'profile_name': str,
            'training_job_definition': AlgorithmValidationProfileTrainingJobDefinition,
            'transform_job_definition': AlgorithmValidationProfileTransformJobDefinition
        }

        self.attribute_map = {
            'profile_name': 'ProfileName',
            'training_job_definition': 'TrainingJobDefinition',
            'transform_job_definition': 'TransformJobDefinition'
        }

        self._profile_name = profile_name
        self._training_job_definition = training_job_definition
        self._transform_job_definition = transform_job_definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlgorithmValidationProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlgorithmValidationProfile of this AlgorithmValidationProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profile_name(self):
        """Gets the profile_name of this AlgorithmValidationProfile.


        :return: The profile_name of this AlgorithmValidationProfile.
        :rtype: str
        """
        return self._profile_name

    @profile_name.setter
    def profile_name(self, profile_name):
        """Sets the profile_name of this AlgorithmValidationProfile.


        :param profile_name: The profile_name of this AlgorithmValidationProfile.
        :type profile_name: str
        """
        if profile_name is None:
            raise ValueError("Invalid value for `profile_name`, must not be `None`")

        self._profile_name = profile_name

    @property
    def training_job_definition(self):
        """Gets the training_job_definition of this AlgorithmValidationProfile.


        :return: The training_job_definition of this AlgorithmValidationProfile.
        :rtype: AlgorithmValidationProfileTrainingJobDefinition
        """
        return self._training_job_definition

    @training_job_definition.setter
    def training_job_definition(self, training_job_definition):
        """Sets the training_job_definition of this AlgorithmValidationProfile.


        :param training_job_definition: The training_job_definition of this AlgorithmValidationProfile.
        :type training_job_definition: AlgorithmValidationProfileTrainingJobDefinition
        """
        if training_job_definition is None:
            raise ValueError("Invalid value for `training_job_definition`, must not be `None`")

        self._training_job_definition = training_job_definition

    @property
    def transform_job_definition(self):
        """Gets the transform_job_definition of this AlgorithmValidationProfile.


        :return: The transform_job_definition of this AlgorithmValidationProfile.
        :rtype: AlgorithmValidationProfileTransformJobDefinition
        """
        return self._transform_job_definition

    @transform_job_definition.setter
    def transform_job_definition(self, transform_job_definition):
        """Sets the transform_job_definition of this AlgorithmValidationProfile.


        :param transform_job_definition: The transform_job_definition of this AlgorithmValidationProfile.
        :type transform_job_definition: AlgorithmValidationProfileTransformJobDefinition
        """

        self._transform_job_definition = transform_job_definition
