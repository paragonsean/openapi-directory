# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateTransformJobRequestDataCaptureConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_s3_uri: str=None, kms_key_id: str=None, generate_inference_id: bool=None):
        """CreateTransformJobRequestDataCaptureConfig - a model defined in OpenAPI

        :param destination_s3_uri: The destination_s3_uri of this CreateTransformJobRequestDataCaptureConfig.
        :param kms_key_id: The kms_key_id of this CreateTransformJobRequestDataCaptureConfig.
        :param generate_inference_id: The generate_inference_id of this CreateTransformJobRequestDataCaptureConfig.
        """
        self.openapi_types = {
            'destination_s3_uri': str,
            'kms_key_id': str,
            'generate_inference_id': bool
        }

        self.attribute_map = {
            'destination_s3_uri': 'DestinationS3Uri',
            'kms_key_id': 'KmsKeyId',
            'generate_inference_id': 'GenerateInferenceId'
        }

        self._destination_s3_uri = destination_s3_uri
        self._kms_key_id = kms_key_id
        self._generate_inference_id = generate_inference_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateTransformJobRequestDataCaptureConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateTransformJobRequest_DataCaptureConfig of this CreateTransformJobRequestDataCaptureConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_s3_uri(self):
        """Gets the destination_s3_uri of this CreateTransformJobRequestDataCaptureConfig.


        :return: The destination_s3_uri of this CreateTransformJobRequestDataCaptureConfig.
        :rtype: str
        """
        return self._destination_s3_uri

    @destination_s3_uri.setter
    def destination_s3_uri(self, destination_s3_uri):
        """Sets the destination_s3_uri of this CreateTransformJobRequestDataCaptureConfig.


        :param destination_s3_uri: The destination_s3_uri of this CreateTransformJobRequestDataCaptureConfig.
        :type destination_s3_uri: str
        """
        if destination_s3_uri is None:
            raise ValueError("Invalid value for `destination_s3_uri`, must not be `None`")

        self._destination_s3_uri = destination_s3_uri

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CreateTransformJobRequestDataCaptureConfig.


        :return: The kms_key_id of this CreateTransformJobRequestDataCaptureConfig.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CreateTransformJobRequestDataCaptureConfig.


        :param kms_key_id: The kms_key_id of this CreateTransformJobRequestDataCaptureConfig.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def generate_inference_id(self):
        """Gets the generate_inference_id of this CreateTransformJobRequestDataCaptureConfig.


        :return: The generate_inference_id of this CreateTransformJobRequestDataCaptureConfig.
        :rtype: bool
        """
        return self._generate_inference_id

    @generate_inference_id.setter
    def generate_inference_id(self, generate_inference_id):
        """Sets the generate_inference_id of this CreateTransformJobRequestDataCaptureConfig.


        :param generate_inference_id: The generate_inference_id of this CreateTransformJobRequestDataCaptureConfig.
        :type generate_inference_id: bool
        """

        self._generate_inference_id = generate_inference_id
