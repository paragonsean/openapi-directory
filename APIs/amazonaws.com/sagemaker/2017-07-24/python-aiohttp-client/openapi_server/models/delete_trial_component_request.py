# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteTrialComponentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trial_component_name: str=None):
        """DeleteTrialComponentRequest - a model defined in OpenAPI

        :param trial_component_name: The trial_component_name of this DeleteTrialComponentRequest.
        """
        self.openapi_types = {
            'trial_component_name': str
        }

        self.attribute_map = {
            'trial_component_name': 'TrialComponentName'
        }

        self._trial_component_name = trial_component_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteTrialComponentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteTrialComponentRequest of this DeleteTrialComponentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trial_component_name(self):
        """Gets the trial_component_name of this DeleteTrialComponentRequest.


        :return: The trial_component_name of this DeleteTrialComponentRequest.
        :rtype: str
        """
        return self._trial_component_name

    @trial_component_name.setter
    def trial_component_name(self, trial_component_name):
        """Sets the trial_component_name of this DeleteTrialComponentRequest.


        :param trial_component_name: The trial_component_name of this DeleteTrialComponentRequest.
        :type trial_component_name: str
        """
        if trial_component_name is None:
            raise ValueError("Invalid value for `trial_component_name`, must not be `None`")

        self._trial_component_name = trial_component_name
