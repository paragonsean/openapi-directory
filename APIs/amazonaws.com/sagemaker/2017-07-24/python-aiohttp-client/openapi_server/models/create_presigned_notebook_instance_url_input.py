# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreatePresignedNotebookInstanceUrlInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebook_instance_name: str=None, session_expiration_duration_in_seconds: int=None):
        """CreatePresignedNotebookInstanceUrlInput - a model defined in OpenAPI

        :param notebook_instance_name: The notebook_instance_name of this CreatePresignedNotebookInstanceUrlInput.
        :param session_expiration_duration_in_seconds: The session_expiration_duration_in_seconds of this CreatePresignedNotebookInstanceUrlInput.
        """
        self.openapi_types = {
            'notebook_instance_name': str,
            'session_expiration_duration_in_seconds': int
        }

        self.attribute_map = {
            'notebook_instance_name': 'NotebookInstanceName',
            'session_expiration_duration_in_seconds': 'SessionExpirationDurationInSeconds'
        }

        self._notebook_instance_name = notebook_instance_name
        self._session_expiration_duration_in_seconds = session_expiration_duration_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePresignedNotebookInstanceUrlInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePresignedNotebookInstanceUrlInput of this CreatePresignedNotebookInstanceUrlInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebook_instance_name(self):
        """Gets the notebook_instance_name of this CreatePresignedNotebookInstanceUrlInput.


        :return: The notebook_instance_name of this CreatePresignedNotebookInstanceUrlInput.
        :rtype: str
        """
        return self._notebook_instance_name

    @notebook_instance_name.setter
    def notebook_instance_name(self, notebook_instance_name):
        """Sets the notebook_instance_name of this CreatePresignedNotebookInstanceUrlInput.


        :param notebook_instance_name: The notebook_instance_name of this CreatePresignedNotebookInstanceUrlInput.
        :type notebook_instance_name: str
        """
        if notebook_instance_name is None:
            raise ValueError("Invalid value for `notebook_instance_name`, must not be `None`")

        self._notebook_instance_name = notebook_instance_name

    @property
    def session_expiration_duration_in_seconds(self):
        """Gets the session_expiration_duration_in_seconds of this CreatePresignedNotebookInstanceUrlInput.


        :return: The session_expiration_duration_in_seconds of this CreatePresignedNotebookInstanceUrlInput.
        :rtype: int
        """
        return self._session_expiration_duration_in_seconds

    @session_expiration_duration_in_seconds.setter
    def session_expiration_duration_in_seconds(self, session_expiration_duration_in_seconds):
        """Sets the session_expiration_duration_in_seconds of this CreatePresignedNotebookInstanceUrlInput.


        :param session_expiration_duration_in_seconds: The session_expiration_duration_in_seconds of this CreatePresignedNotebookInstanceUrlInput.
        :type session_expiration_duration_in_seconds: int
        """

        self._session_expiration_duration_in_seconds = session_expiration_duration_in_seconds
