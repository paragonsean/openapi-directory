# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_status import ActionStatus
from openapi_server.models.create_action_request_source import CreateActionRequestSource
from openapi_server.models.metadata_properties import MetadataProperties
from openapi_server import util


class CreateActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, source: CreateActionRequestSource=None, action_type: str=None, description: str=None, status: ActionStatus=None, properties: Dict=None, metadata_properties: MetadataProperties=None, tags: List=None):
        """CreateActionRequest - a model defined in OpenAPI

        :param action_name: The action_name of this CreateActionRequest.
        :param source: The source of this CreateActionRequest.
        :param action_type: The action_type of this CreateActionRequest.
        :param description: The description of this CreateActionRequest.
        :param status: The status of this CreateActionRequest.
        :param properties: The properties of this CreateActionRequest.
        :param metadata_properties: The metadata_properties of this CreateActionRequest.
        :param tags: The tags of this CreateActionRequest.
        """
        self.openapi_types = {
            'action_name': str,
            'source': CreateActionRequestSource,
            'action_type': str,
            'description': str,
            'status': ActionStatus,
            'properties': Dict,
            'metadata_properties': MetadataProperties,
            'tags': List
        }

        self.attribute_map = {
            'action_name': 'ActionName',
            'source': 'Source',
            'action_type': 'ActionType',
            'description': 'Description',
            'status': 'Status',
            'properties': 'Properties',
            'metadata_properties': 'MetadataProperties',
            'tags': 'Tags'
        }

        self._action_name = action_name
        self._source = source
        self._action_type = action_type
        self._description = description
        self._status = status
        self._properties = properties
        self._metadata_properties = metadata_properties
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateActionRequest of this CreateActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this CreateActionRequest.


        :return: The action_name of this CreateActionRequest.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this CreateActionRequest.


        :param action_name: The action_name of this CreateActionRequest.
        :type action_name: str
        """
        if action_name is None:
            raise ValueError("Invalid value for `action_name`, must not be `None`")

        self._action_name = action_name

    @property
    def source(self):
        """Gets the source of this CreateActionRequest.


        :return: The source of this CreateActionRequest.
        :rtype: CreateActionRequestSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this CreateActionRequest.


        :param source: The source of this CreateActionRequest.
        :type source: CreateActionRequestSource
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")

        self._source = source

    @property
    def action_type(self):
        """Gets the action_type of this CreateActionRequest.


        :return: The action_type of this CreateActionRequest.
        :rtype: str
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this CreateActionRequest.


        :param action_type: The action_type of this CreateActionRequest.
        :type action_type: str
        """
        if action_type is None:
            raise ValueError("Invalid value for `action_type`, must not be `None`")

        self._action_type = action_type

    @property
    def description(self):
        """Gets the description of this CreateActionRequest.


        :return: The description of this CreateActionRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateActionRequest.


        :param description: The description of this CreateActionRequest.
        :type description: str
        """

        self._description = description

    @property
    def status(self):
        """Gets the status of this CreateActionRequest.


        :return: The status of this CreateActionRequest.
        :rtype: ActionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateActionRequest.


        :param status: The status of this CreateActionRequest.
        :type status: ActionStatus
        """

        self._status = status

    @property
    def properties(self):
        """Gets the properties of this CreateActionRequest.


        :return: The properties of this CreateActionRequest.
        :rtype: Dict
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this CreateActionRequest.


        :param properties: The properties of this CreateActionRequest.
        :type properties: Dict
        """

        self._properties = properties

    @property
    def metadata_properties(self):
        """Gets the metadata_properties of this CreateActionRequest.


        :return: The metadata_properties of this CreateActionRequest.
        :rtype: MetadataProperties
        """
        return self._metadata_properties

    @metadata_properties.setter
    def metadata_properties(self, metadata_properties):
        """Sets the metadata_properties of this CreateActionRequest.


        :param metadata_properties: The metadata_properties of this CreateActionRequest.
        :type metadata_properties: MetadataProperties
        """

        self._metadata_properties = metadata_properties

    @property
    def tags(self):
        """Gets the tags of this CreateActionRequest.


        :return: The tags of this CreateActionRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateActionRequest.


        :param tags: The tags of this CreateActionRequest.
        :type tags: List
        """

        self._tags = tags
