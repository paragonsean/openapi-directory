# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceIpConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cidrs: List=None):
        """SourceIpConfig - a model defined in OpenAPI

        :param cidrs: The cidrs of this SourceIpConfig.
        """
        self.openapi_types = {
            'cidrs': List
        }

        self.attribute_map = {
            'cidrs': 'Cidrs'
        }

        self._cidrs = cidrs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceIpConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceIpConfig of this SourceIpConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cidrs(self):
        """Gets the cidrs of this SourceIpConfig.


        :return: The cidrs of this SourceIpConfig.
        :rtype: List
        """
        return self._cidrs

    @cidrs.setter
    def cidrs(self, cidrs):
        """Sets the cidrs of this SourceIpConfig.


        :param cidrs: The cidrs of this SourceIpConfig.
        :type cidrs: List
        """
        if cidrs is None:
            raise ValueError("Invalid value for `cidrs`, must not be `None`")

        self._cidrs = cidrs
