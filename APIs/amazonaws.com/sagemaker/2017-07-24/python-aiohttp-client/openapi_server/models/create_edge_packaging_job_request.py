# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_edge_packaging_job_request_output_config import CreateEdgePackagingJobRequestOutputConfig
from openapi_server import util


class CreateEdgePackagingJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edge_packaging_job_name: str=None, compilation_job_name: str=None, model_name: str=None, model_version: str=None, role_arn: str=None, output_config: CreateEdgePackagingJobRequestOutputConfig=None, resource_key: str=None, tags: List=None):
        """CreateEdgePackagingJobRequest - a model defined in OpenAPI

        :param edge_packaging_job_name: The edge_packaging_job_name of this CreateEdgePackagingJobRequest.
        :param compilation_job_name: The compilation_job_name of this CreateEdgePackagingJobRequest.
        :param model_name: The model_name of this CreateEdgePackagingJobRequest.
        :param model_version: The model_version of this CreateEdgePackagingJobRequest.
        :param role_arn: The role_arn of this CreateEdgePackagingJobRequest.
        :param output_config: The output_config of this CreateEdgePackagingJobRequest.
        :param resource_key: The resource_key of this CreateEdgePackagingJobRequest.
        :param tags: The tags of this CreateEdgePackagingJobRequest.
        """
        self.openapi_types = {
            'edge_packaging_job_name': str,
            'compilation_job_name': str,
            'model_name': str,
            'model_version': str,
            'role_arn': str,
            'output_config': CreateEdgePackagingJobRequestOutputConfig,
            'resource_key': str,
            'tags': List
        }

        self.attribute_map = {
            'edge_packaging_job_name': 'EdgePackagingJobName',
            'compilation_job_name': 'CompilationJobName',
            'model_name': 'ModelName',
            'model_version': 'ModelVersion',
            'role_arn': 'RoleArn',
            'output_config': 'OutputConfig',
            'resource_key': 'ResourceKey',
            'tags': 'Tags'
        }

        self._edge_packaging_job_name = edge_packaging_job_name
        self._compilation_job_name = compilation_job_name
        self._model_name = model_name
        self._model_version = model_version
        self._role_arn = role_arn
        self._output_config = output_config
        self._resource_key = resource_key
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateEdgePackagingJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateEdgePackagingJobRequest of this CreateEdgePackagingJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edge_packaging_job_name(self):
        """Gets the edge_packaging_job_name of this CreateEdgePackagingJobRequest.


        :return: The edge_packaging_job_name of this CreateEdgePackagingJobRequest.
        :rtype: str
        """
        return self._edge_packaging_job_name

    @edge_packaging_job_name.setter
    def edge_packaging_job_name(self, edge_packaging_job_name):
        """Sets the edge_packaging_job_name of this CreateEdgePackagingJobRequest.


        :param edge_packaging_job_name: The edge_packaging_job_name of this CreateEdgePackagingJobRequest.
        :type edge_packaging_job_name: str
        """
        if edge_packaging_job_name is None:
            raise ValueError("Invalid value for `edge_packaging_job_name`, must not be `None`")

        self._edge_packaging_job_name = edge_packaging_job_name

    @property
    def compilation_job_name(self):
        """Gets the compilation_job_name of this CreateEdgePackagingJobRequest.


        :return: The compilation_job_name of this CreateEdgePackagingJobRequest.
        :rtype: str
        """
        return self._compilation_job_name

    @compilation_job_name.setter
    def compilation_job_name(self, compilation_job_name):
        """Sets the compilation_job_name of this CreateEdgePackagingJobRequest.


        :param compilation_job_name: The compilation_job_name of this CreateEdgePackagingJobRequest.
        :type compilation_job_name: str
        """
        if compilation_job_name is None:
            raise ValueError("Invalid value for `compilation_job_name`, must not be `None`")

        self._compilation_job_name = compilation_job_name

    @property
    def model_name(self):
        """Gets the model_name of this CreateEdgePackagingJobRequest.


        :return: The model_name of this CreateEdgePackagingJobRequest.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this CreateEdgePackagingJobRequest.


        :param model_name: The model_name of this CreateEdgePackagingJobRequest.
        :type model_name: str
        """
        if model_name is None:
            raise ValueError("Invalid value for `model_name`, must not be `None`")

        self._model_name = model_name

    @property
    def model_version(self):
        """Gets the model_version of this CreateEdgePackagingJobRequest.


        :return: The model_version of this CreateEdgePackagingJobRequest.
        :rtype: str
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this CreateEdgePackagingJobRequest.


        :param model_version: The model_version of this CreateEdgePackagingJobRequest.
        :type model_version: str
        """
        if model_version is None:
            raise ValueError("Invalid value for `model_version`, must not be `None`")

        self._model_version = model_version

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateEdgePackagingJobRequest.


        :return: The role_arn of this CreateEdgePackagingJobRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateEdgePackagingJobRequest.


        :param role_arn: The role_arn of this CreateEdgePackagingJobRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")

        self._role_arn = role_arn

    @property
    def output_config(self):
        """Gets the output_config of this CreateEdgePackagingJobRequest.


        :return: The output_config of this CreateEdgePackagingJobRequest.
        :rtype: CreateEdgePackagingJobRequestOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this CreateEdgePackagingJobRequest.


        :param output_config: The output_config of this CreateEdgePackagingJobRequest.
        :type output_config: CreateEdgePackagingJobRequestOutputConfig
        """
        if output_config is None:
            raise ValueError("Invalid value for `output_config`, must not be `None`")

        self._output_config = output_config

    @property
    def resource_key(self):
        """Gets the resource_key of this CreateEdgePackagingJobRequest.


        :return: The resource_key of this CreateEdgePackagingJobRequest.
        :rtype: str
        """
        return self._resource_key

    @resource_key.setter
    def resource_key(self, resource_key):
        """Sets the resource_key of this CreateEdgePackagingJobRequest.


        :param resource_key: The resource_key of this CreateEdgePackagingJobRequest.
        :type resource_key: str
        """

        self._resource_key = resource_key

    @property
    def tags(self):
        """Gets the tags of this CreateEdgePackagingJobRequest.


        :return: The tags of this CreateEdgePackagingJobRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateEdgePackagingJobRequest.


        :param tags: The tags of this CreateEdgePackagingJobRequest.
        :type tags: List
        """

        self._tags = tags
