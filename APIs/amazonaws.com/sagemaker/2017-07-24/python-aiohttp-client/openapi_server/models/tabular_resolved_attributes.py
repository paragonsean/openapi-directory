# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.problem_type import ProblemType
from openapi_server import util


class TabularResolvedAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, problem_type: ProblemType=None):
        """TabularResolvedAttributes - a model defined in OpenAPI

        :param problem_type: The problem_type of this TabularResolvedAttributes.
        """
        self.openapi_types = {
            'problem_type': ProblemType
        }

        self.attribute_map = {
            'problem_type': 'ProblemType'
        }

        self._problem_type = problem_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TabularResolvedAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TabularResolvedAttributes of this TabularResolvedAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def problem_type(self):
        """Gets the problem_type of this TabularResolvedAttributes.


        :return: The problem_type of this TabularResolvedAttributes.
        :rtype: ProblemType
        """
        return self._problem_type

    @problem_type.setter
    def problem_type(self, problem_type):
        """Sets the problem_type of this TabularResolvedAttributes.


        :param problem_type: The problem_type of this TabularResolvedAttributes.
        :type problem_type: ProblemType
        """

        self._problem_type = problem_type
