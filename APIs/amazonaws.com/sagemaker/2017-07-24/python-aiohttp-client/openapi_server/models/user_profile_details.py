# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_profile_status import UserProfileStatus
from openapi_server import util


class UserProfileDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_id: str=None, user_profile_name: str=None, status: UserProfileStatus=None, creation_time: datetime=None, last_modified_time: datetime=None):
        """UserProfileDetails - a model defined in OpenAPI

        :param domain_id: The domain_id of this UserProfileDetails.
        :param user_profile_name: The user_profile_name of this UserProfileDetails.
        :param status: The status of this UserProfileDetails.
        :param creation_time: The creation_time of this UserProfileDetails.
        :param last_modified_time: The last_modified_time of this UserProfileDetails.
        """
        self.openapi_types = {
            'domain_id': str,
            'user_profile_name': str,
            'status': UserProfileStatus,
            'creation_time': datetime,
            'last_modified_time': datetime
        }

        self.attribute_map = {
            'domain_id': 'DomainId',
            'user_profile_name': 'UserProfileName',
            'status': 'Status',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime'
        }

        self._domain_id = domain_id
        self._user_profile_name = user_profile_name
        self._status = status
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserProfileDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserProfileDetails of this UserProfileDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_id(self):
        """Gets the domain_id of this UserProfileDetails.


        :return: The domain_id of this UserProfileDetails.
        :rtype: str
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this UserProfileDetails.


        :param domain_id: The domain_id of this UserProfileDetails.
        :type domain_id: str
        """

        self._domain_id = domain_id

    @property
    def user_profile_name(self):
        """Gets the user_profile_name of this UserProfileDetails.


        :return: The user_profile_name of this UserProfileDetails.
        :rtype: str
        """
        return self._user_profile_name

    @user_profile_name.setter
    def user_profile_name(self, user_profile_name):
        """Sets the user_profile_name of this UserProfileDetails.


        :param user_profile_name: The user_profile_name of this UserProfileDetails.
        :type user_profile_name: str
        """

        self._user_profile_name = user_profile_name

    @property
    def status(self):
        """Gets the status of this UserProfileDetails.


        :return: The status of this UserProfileDetails.
        :rtype: UserProfileStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UserProfileDetails.


        :param status: The status of this UserProfileDetails.
        :type status: UserProfileStatus
        """

        self._status = status

    @property
    def creation_time(self):
        """Gets the creation_time of this UserProfileDetails.


        :return: The creation_time of this UserProfileDetails.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this UserProfileDetails.


        :param creation_time: The creation_time of this UserProfileDetails.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this UserProfileDetails.


        :return: The last_modified_time of this UserProfileDetails.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this UserProfileDetails.


        :param last_modified_time: The last_modified_time of this UserProfileDetails.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time
