# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature_group_last_update_status import FeatureGroupLastUpdateStatus
from openapi_server.models.feature_group_status import FeatureGroupStatus
from openapi_server.models.offline_store_config import OfflineStoreConfig
from openapi_server.models.offline_store_status import OfflineStoreStatus
from openapi_server.models.online_store_config import OnlineStoreConfig
from openapi_server import util


class FeatureGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_group_arn: str=None, feature_group_name: str=None, record_identifier_feature_name: str=None, event_time_feature_name: str=None, feature_definitions: List=None, creation_time: datetime=None, last_modified_time: datetime=None, online_store_config: OnlineStoreConfig=None, offline_store_config: OfflineStoreConfig=None, role_arn: str=None, feature_group_status: FeatureGroupStatus=None, offline_store_status: OfflineStoreStatus=None, last_update_status: FeatureGroupLastUpdateStatus=None, failure_reason: str=None, description: str=None, tags: List=None):
        """FeatureGroup - a model defined in OpenAPI

        :param feature_group_arn: The feature_group_arn of this FeatureGroup.
        :param feature_group_name: The feature_group_name of this FeatureGroup.
        :param record_identifier_feature_name: The record_identifier_feature_name of this FeatureGroup.
        :param event_time_feature_name: The event_time_feature_name of this FeatureGroup.
        :param feature_definitions: The feature_definitions of this FeatureGroup.
        :param creation_time: The creation_time of this FeatureGroup.
        :param last_modified_time: The last_modified_time of this FeatureGroup.
        :param online_store_config: The online_store_config of this FeatureGroup.
        :param offline_store_config: The offline_store_config of this FeatureGroup.
        :param role_arn: The role_arn of this FeatureGroup.
        :param feature_group_status: The feature_group_status of this FeatureGroup.
        :param offline_store_status: The offline_store_status of this FeatureGroup.
        :param last_update_status: The last_update_status of this FeatureGroup.
        :param failure_reason: The failure_reason of this FeatureGroup.
        :param description: The description of this FeatureGroup.
        :param tags: The tags of this FeatureGroup.
        """
        self.openapi_types = {
            'feature_group_arn': str,
            'feature_group_name': str,
            'record_identifier_feature_name': str,
            'event_time_feature_name': str,
            'feature_definitions': List,
            'creation_time': datetime,
            'last_modified_time': datetime,
            'online_store_config': OnlineStoreConfig,
            'offline_store_config': OfflineStoreConfig,
            'role_arn': str,
            'feature_group_status': FeatureGroupStatus,
            'offline_store_status': OfflineStoreStatus,
            'last_update_status': FeatureGroupLastUpdateStatus,
            'failure_reason': str,
            'description': str,
            'tags': List
        }

        self.attribute_map = {
            'feature_group_arn': 'FeatureGroupArn',
            'feature_group_name': 'FeatureGroupName',
            'record_identifier_feature_name': 'RecordIdentifierFeatureName',
            'event_time_feature_name': 'EventTimeFeatureName',
            'feature_definitions': 'FeatureDefinitions',
            'creation_time': 'CreationTime',
            'last_modified_time': 'LastModifiedTime',
            'online_store_config': 'OnlineStoreConfig',
            'offline_store_config': 'OfflineStoreConfig',
            'role_arn': 'RoleArn',
            'feature_group_status': 'FeatureGroupStatus',
            'offline_store_status': 'OfflineStoreStatus',
            'last_update_status': 'LastUpdateStatus',
            'failure_reason': 'FailureReason',
            'description': 'Description',
            'tags': 'Tags'
        }

        self._feature_group_arn = feature_group_arn
        self._feature_group_name = feature_group_name
        self._record_identifier_feature_name = record_identifier_feature_name
        self._event_time_feature_name = event_time_feature_name
        self._feature_definitions = feature_definitions
        self._creation_time = creation_time
        self._last_modified_time = last_modified_time
        self._online_store_config = online_store_config
        self._offline_store_config = offline_store_config
        self._role_arn = role_arn
        self._feature_group_status = feature_group_status
        self._offline_store_status = offline_store_status
        self._last_update_status = last_update_status
        self._failure_reason = failure_reason
        self._description = description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeatureGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeatureGroup of this FeatureGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_group_arn(self):
        """Gets the feature_group_arn of this FeatureGroup.


        :return: The feature_group_arn of this FeatureGroup.
        :rtype: str
        """
        return self._feature_group_arn

    @feature_group_arn.setter
    def feature_group_arn(self, feature_group_arn):
        """Sets the feature_group_arn of this FeatureGroup.


        :param feature_group_arn: The feature_group_arn of this FeatureGroup.
        :type feature_group_arn: str
        """

        self._feature_group_arn = feature_group_arn

    @property
    def feature_group_name(self):
        """Gets the feature_group_name of this FeatureGroup.


        :return: The feature_group_name of this FeatureGroup.
        :rtype: str
        """
        return self._feature_group_name

    @feature_group_name.setter
    def feature_group_name(self, feature_group_name):
        """Sets the feature_group_name of this FeatureGroup.


        :param feature_group_name: The feature_group_name of this FeatureGroup.
        :type feature_group_name: str
        """

        self._feature_group_name = feature_group_name

    @property
    def record_identifier_feature_name(self):
        """Gets the record_identifier_feature_name of this FeatureGroup.


        :return: The record_identifier_feature_name of this FeatureGroup.
        :rtype: str
        """
        return self._record_identifier_feature_name

    @record_identifier_feature_name.setter
    def record_identifier_feature_name(self, record_identifier_feature_name):
        """Sets the record_identifier_feature_name of this FeatureGroup.


        :param record_identifier_feature_name: The record_identifier_feature_name of this FeatureGroup.
        :type record_identifier_feature_name: str
        """

        self._record_identifier_feature_name = record_identifier_feature_name

    @property
    def event_time_feature_name(self):
        """Gets the event_time_feature_name of this FeatureGroup.


        :return: The event_time_feature_name of this FeatureGroup.
        :rtype: str
        """
        return self._event_time_feature_name

    @event_time_feature_name.setter
    def event_time_feature_name(self, event_time_feature_name):
        """Sets the event_time_feature_name of this FeatureGroup.


        :param event_time_feature_name: The event_time_feature_name of this FeatureGroup.
        :type event_time_feature_name: str
        """

        self._event_time_feature_name = event_time_feature_name

    @property
    def feature_definitions(self):
        """Gets the feature_definitions of this FeatureGroup.


        :return: The feature_definitions of this FeatureGroup.
        :rtype: List
        """
        return self._feature_definitions

    @feature_definitions.setter
    def feature_definitions(self, feature_definitions):
        """Sets the feature_definitions of this FeatureGroup.


        :param feature_definitions: The feature_definitions of this FeatureGroup.
        :type feature_definitions: List
        """

        self._feature_definitions = feature_definitions

    @property
    def creation_time(self):
        """Gets the creation_time of this FeatureGroup.


        :return: The creation_time of this FeatureGroup.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this FeatureGroup.


        :param creation_time: The creation_time of this FeatureGroup.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this FeatureGroup.


        :return: The last_modified_time of this FeatureGroup.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this FeatureGroup.


        :param last_modified_time: The last_modified_time of this FeatureGroup.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def online_store_config(self):
        """Gets the online_store_config of this FeatureGroup.


        :return: The online_store_config of this FeatureGroup.
        :rtype: OnlineStoreConfig
        """
        return self._online_store_config

    @online_store_config.setter
    def online_store_config(self, online_store_config):
        """Sets the online_store_config of this FeatureGroup.


        :param online_store_config: The online_store_config of this FeatureGroup.
        :type online_store_config: OnlineStoreConfig
        """

        self._online_store_config = online_store_config

    @property
    def offline_store_config(self):
        """Gets the offline_store_config of this FeatureGroup.


        :return: The offline_store_config of this FeatureGroup.
        :rtype: OfflineStoreConfig
        """
        return self._offline_store_config

    @offline_store_config.setter
    def offline_store_config(self, offline_store_config):
        """Sets the offline_store_config of this FeatureGroup.


        :param offline_store_config: The offline_store_config of this FeatureGroup.
        :type offline_store_config: OfflineStoreConfig
        """

        self._offline_store_config = offline_store_config

    @property
    def role_arn(self):
        """Gets the role_arn of this FeatureGroup.


        :return: The role_arn of this FeatureGroup.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this FeatureGroup.


        :param role_arn: The role_arn of this FeatureGroup.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def feature_group_status(self):
        """Gets the feature_group_status of this FeatureGroup.


        :return: The feature_group_status of this FeatureGroup.
        :rtype: FeatureGroupStatus
        """
        return self._feature_group_status

    @feature_group_status.setter
    def feature_group_status(self, feature_group_status):
        """Sets the feature_group_status of this FeatureGroup.


        :param feature_group_status: The feature_group_status of this FeatureGroup.
        :type feature_group_status: FeatureGroupStatus
        """

        self._feature_group_status = feature_group_status

    @property
    def offline_store_status(self):
        """Gets the offline_store_status of this FeatureGroup.


        :return: The offline_store_status of this FeatureGroup.
        :rtype: OfflineStoreStatus
        """
        return self._offline_store_status

    @offline_store_status.setter
    def offline_store_status(self, offline_store_status):
        """Sets the offline_store_status of this FeatureGroup.


        :param offline_store_status: The offline_store_status of this FeatureGroup.
        :type offline_store_status: OfflineStoreStatus
        """

        self._offline_store_status = offline_store_status

    @property
    def last_update_status(self):
        """Gets the last_update_status of this FeatureGroup.


        :return: The last_update_status of this FeatureGroup.
        :rtype: FeatureGroupLastUpdateStatus
        """
        return self._last_update_status

    @last_update_status.setter
    def last_update_status(self, last_update_status):
        """Sets the last_update_status of this FeatureGroup.


        :param last_update_status: The last_update_status of this FeatureGroup.
        :type last_update_status: FeatureGroupLastUpdateStatus
        """

        self._last_update_status = last_update_status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this FeatureGroup.


        :return: The failure_reason of this FeatureGroup.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this FeatureGroup.


        :param failure_reason: The failure_reason of this FeatureGroup.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def description(self):
        """Gets the description of this FeatureGroup.


        :return: The description of this FeatureGroup.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this FeatureGroup.


        :param description: The description of this FeatureGroup.
        :type description: str
        """

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this FeatureGroup.


        :return: The tags of this FeatureGroup.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this FeatureGroup.


        :param tags: The tags of this FeatureGroup.
        :type tags: List
        """

        self._tags = tags
