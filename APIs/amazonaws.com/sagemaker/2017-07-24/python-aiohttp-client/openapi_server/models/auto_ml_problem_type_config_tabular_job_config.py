# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_ml_job_completion_criteria import AutoMLJobCompletionCriteria
from openapi_server.models.auto_ml_mode import AutoMLMode
from openapi_server.models.problem_type import ProblemType
from openapi_server.models.tabular_job_config_candidate_generation_config import TabularJobConfigCandidateGenerationConfig
from openapi_server import util


class AutoMLProblemTypeConfigTabularJobConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, candidate_generation_config: TabularJobConfigCandidateGenerationConfig=None, completion_criteria: AutoMLJobCompletionCriteria=None, feature_specification_s3_uri: str=None, mode: AutoMLMode=None, generate_candidate_definitions_only: bool=None, problem_type: ProblemType=None, target_attribute_name: str=None, sample_weight_attribute_name: str=None):
        """AutoMLProblemTypeConfigTabularJobConfig - a model defined in OpenAPI

        :param candidate_generation_config: The candidate_generation_config of this AutoMLProblemTypeConfigTabularJobConfig.
        :param completion_criteria: The completion_criteria of this AutoMLProblemTypeConfigTabularJobConfig.
        :param feature_specification_s3_uri: The feature_specification_s3_uri of this AutoMLProblemTypeConfigTabularJobConfig.
        :param mode: The mode of this AutoMLProblemTypeConfigTabularJobConfig.
        :param generate_candidate_definitions_only: The generate_candidate_definitions_only of this AutoMLProblemTypeConfigTabularJobConfig.
        :param problem_type: The problem_type of this AutoMLProblemTypeConfigTabularJobConfig.
        :param target_attribute_name: The target_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.
        :param sample_weight_attribute_name: The sample_weight_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.
        """
        self.openapi_types = {
            'candidate_generation_config': TabularJobConfigCandidateGenerationConfig,
            'completion_criteria': AutoMLJobCompletionCriteria,
            'feature_specification_s3_uri': str,
            'mode': AutoMLMode,
            'generate_candidate_definitions_only': bool,
            'problem_type': ProblemType,
            'target_attribute_name': str,
            'sample_weight_attribute_name': str
        }

        self.attribute_map = {
            'candidate_generation_config': 'CandidateGenerationConfig',
            'completion_criteria': 'CompletionCriteria',
            'feature_specification_s3_uri': 'FeatureSpecificationS3Uri',
            'mode': 'Mode',
            'generate_candidate_definitions_only': 'GenerateCandidateDefinitionsOnly',
            'problem_type': 'ProblemType',
            'target_attribute_name': 'TargetAttributeName',
            'sample_weight_attribute_name': 'SampleWeightAttributeName'
        }

        self._candidate_generation_config = candidate_generation_config
        self._completion_criteria = completion_criteria
        self._feature_specification_s3_uri = feature_specification_s3_uri
        self._mode = mode
        self._generate_candidate_definitions_only = generate_candidate_definitions_only
        self._problem_type = problem_type
        self._target_attribute_name = target_attribute_name
        self._sample_weight_attribute_name = sample_weight_attribute_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoMLProblemTypeConfigTabularJobConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoMLProblemTypeConfig_TabularJobConfig of this AutoMLProblemTypeConfigTabularJobConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def candidate_generation_config(self):
        """Gets the candidate_generation_config of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The candidate_generation_config of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: TabularJobConfigCandidateGenerationConfig
        """
        return self._candidate_generation_config

    @candidate_generation_config.setter
    def candidate_generation_config(self, candidate_generation_config):
        """Sets the candidate_generation_config of this AutoMLProblemTypeConfigTabularJobConfig.


        :param candidate_generation_config: The candidate_generation_config of this AutoMLProblemTypeConfigTabularJobConfig.
        :type candidate_generation_config: TabularJobConfigCandidateGenerationConfig
        """

        self._candidate_generation_config = candidate_generation_config

    @property
    def completion_criteria(self):
        """Gets the completion_criteria of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The completion_criteria of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: AutoMLJobCompletionCriteria
        """
        return self._completion_criteria

    @completion_criteria.setter
    def completion_criteria(self, completion_criteria):
        """Sets the completion_criteria of this AutoMLProblemTypeConfigTabularJobConfig.


        :param completion_criteria: The completion_criteria of this AutoMLProblemTypeConfigTabularJobConfig.
        :type completion_criteria: AutoMLJobCompletionCriteria
        """

        self._completion_criteria = completion_criteria

    @property
    def feature_specification_s3_uri(self):
        """Gets the feature_specification_s3_uri of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The feature_specification_s3_uri of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: str
        """
        return self._feature_specification_s3_uri

    @feature_specification_s3_uri.setter
    def feature_specification_s3_uri(self, feature_specification_s3_uri):
        """Sets the feature_specification_s3_uri of this AutoMLProblemTypeConfigTabularJobConfig.


        :param feature_specification_s3_uri: The feature_specification_s3_uri of this AutoMLProblemTypeConfigTabularJobConfig.
        :type feature_specification_s3_uri: str
        """

        self._feature_specification_s3_uri = feature_specification_s3_uri

    @property
    def mode(self):
        """Gets the mode of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The mode of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: AutoMLMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this AutoMLProblemTypeConfigTabularJobConfig.


        :param mode: The mode of this AutoMLProblemTypeConfigTabularJobConfig.
        :type mode: AutoMLMode
        """

        self._mode = mode

    @property
    def generate_candidate_definitions_only(self):
        """Gets the generate_candidate_definitions_only of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The generate_candidate_definitions_only of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: bool
        """
        return self._generate_candidate_definitions_only

    @generate_candidate_definitions_only.setter
    def generate_candidate_definitions_only(self, generate_candidate_definitions_only):
        """Sets the generate_candidate_definitions_only of this AutoMLProblemTypeConfigTabularJobConfig.


        :param generate_candidate_definitions_only: The generate_candidate_definitions_only of this AutoMLProblemTypeConfigTabularJobConfig.
        :type generate_candidate_definitions_only: bool
        """

        self._generate_candidate_definitions_only = generate_candidate_definitions_only

    @property
    def problem_type(self):
        """Gets the problem_type of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The problem_type of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: ProblemType
        """
        return self._problem_type

    @problem_type.setter
    def problem_type(self, problem_type):
        """Sets the problem_type of this AutoMLProblemTypeConfigTabularJobConfig.


        :param problem_type: The problem_type of this AutoMLProblemTypeConfigTabularJobConfig.
        :type problem_type: ProblemType
        """

        self._problem_type = problem_type

    @property
    def target_attribute_name(self):
        """Gets the target_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The target_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: str
        """
        return self._target_attribute_name

    @target_attribute_name.setter
    def target_attribute_name(self, target_attribute_name):
        """Sets the target_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.


        :param target_attribute_name: The target_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.
        :type target_attribute_name: str
        """
        if target_attribute_name is None:
            raise ValueError("Invalid value for `target_attribute_name`, must not be `None`")

        self._target_attribute_name = target_attribute_name

    @property
    def sample_weight_attribute_name(self):
        """Gets the sample_weight_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.


        :return: The sample_weight_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.
        :rtype: str
        """
        return self._sample_weight_attribute_name

    @sample_weight_attribute_name.setter
    def sample_weight_attribute_name(self, sample_weight_attribute_name):
        """Sets the sample_weight_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.


        :param sample_weight_attribute_name: The sample_weight_attribute_name of this AutoMLProblemTypeConfigTabularJobConfig.
        :type sample_weight_attribute_name: str
        """

        self._sample_weight_attribute_name = sample_weight_attribute_name
