# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateArtifactRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_arn: str=None, artifact_name: str=None, properties: Dict=None, properties_to_remove: List=None):
        """UpdateArtifactRequest - a model defined in OpenAPI

        :param artifact_arn: The artifact_arn of this UpdateArtifactRequest.
        :param artifact_name: The artifact_name of this UpdateArtifactRequest.
        :param properties: The properties of this UpdateArtifactRequest.
        :param properties_to_remove: The properties_to_remove of this UpdateArtifactRequest.
        """
        self.openapi_types = {
            'artifact_arn': str,
            'artifact_name': str,
            'properties': Dict,
            'properties_to_remove': List
        }

        self.attribute_map = {
            'artifact_arn': 'ArtifactArn',
            'artifact_name': 'ArtifactName',
            'properties': 'Properties',
            'properties_to_remove': 'PropertiesToRemove'
        }

        self._artifact_arn = artifact_arn
        self._artifact_name = artifact_name
        self._properties = properties
        self._properties_to_remove = properties_to_remove

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateArtifactRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateArtifactRequest of this UpdateArtifactRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_arn(self):
        """Gets the artifact_arn of this UpdateArtifactRequest.


        :return: The artifact_arn of this UpdateArtifactRequest.
        :rtype: str
        """
        return self._artifact_arn

    @artifact_arn.setter
    def artifact_arn(self, artifact_arn):
        """Sets the artifact_arn of this UpdateArtifactRequest.


        :param artifact_arn: The artifact_arn of this UpdateArtifactRequest.
        :type artifact_arn: str
        """
        if artifact_arn is None:
            raise ValueError("Invalid value for `artifact_arn`, must not be `None`")

        self._artifact_arn = artifact_arn

    @property
    def artifact_name(self):
        """Gets the artifact_name of this UpdateArtifactRequest.


        :return: The artifact_name of this UpdateArtifactRequest.
        :rtype: str
        """
        return self._artifact_name

    @artifact_name.setter
    def artifact_name(self, artifact_name):
        """Sets the artifact_name of this UpdateArtifactRequest.


        :param artifact_name: The artifact_name of this UpdateArtifactRequest.
        :type artifact_name: str
        """

        self._artifact_name = artifact_name

    @property
    def properties(self):
        """Gets the properties of this UpdateArtifactRequest.


        :return: The properties of this UpdateArtifactRequest.
        :rtype: Dict
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this UpdateArtifactRequest.


        :param properties: The properties of this UpdateArtifactRequest.
        :type properties: Dict
        """

        self._properties = properties

    @property
    def properties_to_remove(self):
        """Gets the properties_to_remove of this UpdateArtifactRequest.


        :return: The properties_to_remove of this UpdateArtifactRequest.
        :rtype: List
        """
        return self._properties_to_remove

    @properties_to_remove.setter
    def properties_to_remove(self, properties_to_remove):
        """Sets the properties_to_remove of this UpdateArtifactRequest.


        :param properties_to_remove: The properties_to_remove of this UpdateArtifactRequest.
        :type properties_to_remove: List
        """

        self._properties_to_remove = properties_to_remove
