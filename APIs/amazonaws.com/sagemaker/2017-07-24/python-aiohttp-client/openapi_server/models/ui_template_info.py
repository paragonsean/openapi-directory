# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UiTemplateInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, content_sha256: str=None):
        """UiTemplateInfo - a model defined in OpenAPI

        :param url: The url of this UiTemplateInfo.
        :param content_sha256: The content_sha256 of this UiTemplateInfo.
        """
        self.openapi_types = {
            'url': str,
            'content_sha256': str
        }

        self.attribute_map = {
            'url': 'Url',
            'content_sha256': 'ContentSha256'
        }

        self._url = url
        self._content_sha256 = content_sha256

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UiTemplateInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UiTemplateInfo of this UiTemplateInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this UiTemplateInfo.


        :return: The url of this UiTemplateInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this UiTemplateInfo.


        :param url: The url of this UiTemplateInfo.
        :type url: str
        """

        self._url = url

    @property
    def content_sha256(self):
        """Gets the content_sha256 of this UiTemplateInfo.


        :return: The content_sha256 of this UiTemplateInfo.
        :rtype: str
        """
        return self._content_sha256

    @content_sha256.setter
    def content_sha256(self, content_sha256):
        """Sets the content_sha256 of this UiTemplateInfo.


        :param content_sha256: The content_sha256 of this UiTemplateInfo.
        :type content_sha256: str
        """

        self._content_sha256 = content_sha256
