# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hub_content_status import HubContentStatus
from openapi_server.models.hub_content_type import HubContentType
from openapi_server import util


class DescribeHubContentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_content_name: str=None, hub_content_arn: str=None, hub_content_version: str=None, hub_content_type: HubContentType=None, document_schema_version: str=None, hub_name: str=None, hub_arn: str=None, hub_content_display_name: str=None, hub_content_description: str=None, hub_content_markdown: str=None, hub_content_document: str=None, hub_content_search_keywords: List=None, hub_content_dependencies: List=None, hub_content_status: HubContentStatus=None, failure_reason: str=None, creation_time: datetime=None):
        """DescribeHubContentResponse - a model defined in OpenAPI

        :param hub_content_name: The hub_content_name of this DescribeHubContentResponse.
        :param hub_content_arn: The hub_content_arn of this DescribeHubContentResponse.
        :param hub_content_version: The hub_content_version of this DescribeHubContentResponse.
        :param hub_content_type: The hub_content_type of this DescribeHubContentResponse.
        :param document_schema_version: The document_schema_version of this DescribeHubContentResponse.
        :param hub_name: The hub_name of this DescribeHubContentResponse.
        :param hub_arn: The hub_arn of this DescribeHubContentResponse.
        :param hub_content_display_name: The hub_content_display_name of this DescribeHubContentResponse.
        :param hub_content_description: The hub_content_description of this DescribeHubContentResponse.
        :param hub_content_markdown: The hub_content_markdown of this DescribeHubContentResponse.
        :param hub_content_document: The hub_content_document of this DescribeHubContentResponse.
        :param hub_content_search_keywords: The hub_content_search_keywords of this DescribeHubContentResponse.
        :param hub_content_dependencies: The hub_content_dependencies of this DescribeHubContentResponse.
        :param hub_content_status: The hub_content_status of this DescribeHubContentResponse.
        :param failure_reason: The failure_reason of this DescribeHubContentResponse.
        :param creation_time: The creation_time of this DescribeHubContentResponse.
        """
        self.openapi_types = {
            'hub_content_name': str,
            'hub_content_arn': str,
            'hub_content_version': str,
            'hub_content_type': HubContentType,
            'document_schema_version': str,
            'hub_name': str,
            'hub_arn': str,
            'hub_content_display_name': str,
            'hub_content_description': str,
            'hub_content_markdown': str,
            'hub_content_document': str,
            'hub_content_search_keywords': List,
            'hub_content_dependencies': List,
            'hub_content_status': HubContentStatus,
            'failure_reason': str,
            'creation_time': datetime
        }

        self.attribute_map = {
            'hub_content_name': 'HubContentName',
            'hub_content_arn': 'HubContentArn',
            'hub_content_version': 'HubContentVersion',
            'hub_content_type': 'HubContentType',
            'document_schema_version': 'DocumentSchemaVersion',
            'hub_name': 'HubName',
            'hub_arn': 'HubArn',
            'hub_content_display_name': 'HubContentDisplayName',
            'hub_content_description': 'HubContentDescription',
            'hub_content_markdown': 'HubContentMarkdown',
            'hub_content_document': 'HubContentDocument',
            'hub_content_search_keywords': 'HubContentSearchKeywords',
            'hub_content_dependencies': 'HubContentDependencies',
            'hub_content_status': 'HubContentStatus',
            'failure_reason': 'FailureReason',
            'creation_time': 'CreationTime'
        }

        self._hub_content_name = hub_content_name
        self._hub_content_arn = hub_content_arn
        self._hub_content_version = hub_content_version
        self._hub_content_type = hub_content_type
        self._document_schema_version = document_schema_version
        self._hub_name = hub_name
        self._hub_arn = hub_arn
        self._hub_content_display_name = hub_content_display_name
        self._hub_content_description = hub_content_description
        self._hub_content_markdown = hub_content_markdown
        self._hub_content_document = hub_content_document
        self._hub_content_search_keywords = hub_content_search_keywords
        self._hub_content_dependencies = hub_content_dependencies
        self._hub_content_status = hub_content_status
        self._failure_reason = failure_reason
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeHubContentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeHubContentResponse of this DescribeHubContentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_content_name(self):
        """Gets the hub_content_name of this DescribeHubContentResponse.


        :return: The hub_content_name of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_name

    @hub_content_name.setter
    def hub_content_name(self, hub_content_name):
        """Sets the hub_content_name of this DescribeHubContentResponse.


        :param hub_content_name: The hub_content_name of this DescribeHubContentResponse.
        :type hub_content_name: str
        """
        if hub_content_name is None:
            raise ValueError("Invalid value for `hub_content_name`, must not be `None`")

        self._hub_content_name = hub_content_name

    @property
    def hub_content_arn(self):
        """Gets the hub_content_arn of this DescribeHubContentResponse.


        :return: The hub_content_arn of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_arn

    @hub_content_arn.setter
    def hub_content_arn(self, hub_content_arn):
        """Sets the hub_content_arn of this DescribeHubContentResponse.


        :param hub_content_arn: The hub_content_arn of this DescribeHubContentResponse.
        :type hub_content_arn: str
        """
        if hub_content_arn is None:
            raise ValueError("Invalid value for `hub_content_arn`, must not be `None`")

        self._hub_content_arn = hub_content_arn

    @property
    def hub_content_version(self):
        """Gets the hub_content_version of this DescribeHubContentResponse.


        :return: The hub_content_version of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_version

    @hub_content_version.setter
    def hub_content_version(self, hub_content_version):
        """Sets the hub_content_version of this DescribeHubContentResponse.


        :param hub_content_version: The hub_content_version of this DescribeHubContentResponse.
        :type hub_content_version: str
        """
        if hub_content_version is None:
            raise ValueError("Invalid value for `hub_content_version`, must not be `None`")

        self._hub_content_version = hub_content_version

    @property
    def hub_content_type(self):
        """Gets the hub_content_type of this DescribeHubContentResponse.


        :return: The hub_content_type of this DescribeHubContentResponse.
        :rtype: HubContentType
        """
        return self._hub_content_type

    @hub_content_type.setter
    def hub_content_type(self, hub_content_type):
        """Sets the hub_content_type of this DescribeHubContentResponse.


        :param hub_content_type: The hub_content_type of this DescribeHubContentResponse.
        :type hub_content_type: HubContentType
        """
        if hub_content_type is None:
            raise ValueError("Invalid value for `hub_content_type`, must not be `None`")

        self._hub_content_type = hub_content_type

    @property
    def document_schema_version(self):
        """Gets the document_schema_version of this DescribeHubContentResponse.


        :return: The document_schema_version of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._document_schema_version

    @document_schema_version.setter
    def document_schema_version(self, document_schema_version):
        """Sets the document_schema_version of this DescribeHubContentResponse.


        :param document_schema_version: The document_schema_version of this DescribeHubContentResponse.
        :type document_schema_version: str
        """
        if document_schema_version is None:
            raise ValueError("Invalid value for `document_schema_version`, must not be `None`")

        self._document_schema_version = document_schema_version

    @property
    def hub_name(self):
        """Gets the hub_name of this DescribeHubContentResponse.


        :return: The hub_name of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_name

    @hub_name.setter
    def hub_name(self, hub_name):
        """Sets the hub_name of this DescribeHubContentResponse.


        :param hub_name: The hub_name of this DescribeHubContentResponse.
        :type hub_name: str
        """
        if hub_name is None:
            raise ValueError("Invalid value for `hub_name`, must not be `None`")

        self._hub_name = hub_name

    @property
    def hub_arn(self):
        """Gets the hub_arn of this DescribeHubContentResponse.


        :return: The hub_arn of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_arn

    @hub_arn.setter
    def hub_arn(self, hub_arn):
        """Sets the hub_arn of this DescribeHubContentResponse.


        :param hub_arn: The hub_arn of this DescribeHubContentResponse.
        :type hub_arn: str
        """
        if hub_arn is None:
            raise ValueError("Invalid value for `hub_arn`, must not be `None`")

        self._hub_arn = hub_arn

    @property
    def hub_content_display_name(self):
        """Gets the hub_content_display_name of this DescribeHubContentResponse.


        :return: The hub_content_display_name of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_display_name

    @hub_content_display_name.setter
    def hub_content_display_name(self, hub_content_display_name):
        """Sets the hub_content_display_name of this DescribeHubContentResponse.


        :param hub_content_display_name: The hub_content_display_name of this DescribeHubContentResponse.
        :type hub_content_display_name: str
        """

        self._hub_content_display_name = hub_content_display_name

    @property
    def hub_content_description(self):
        """Gets the hub_content_description of this DescribeHubContentResponse.


        :return: The hub_content_description of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_description

    @hub_content_description.setter
    def hub_content_description(self, hub_content_description):
        """Sets the hub_content_description of this DescribeHubContentResponse.


        :param hub_content_description: The hub_content_description of this DescribeHubContentResponse.
        :type hub_content_description: str
        """

        self._hub_content_description = hub_content_description

    @property
    def hub_content_markdown(self):
        """Gets the hub_content_markdown of this DescribeHubContentResponse.


        :return: The hub_content_markdown of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_markdown

    @hub_content_markdown.setter
    def hub_content_markdown(self, hub_content_markdown):
        """Sets the hub_content_markdown of this DescribeHubContentResponse.


        :param hub_content_markdown: The hub_content_markdown of this DescribeHubContentResponse.
        :type hub_content_markdown: str
        """

        self._hub_content_markdown = hub_content_markdown

    @property
    def hub_content_document(self):
        """Gets the hub_content_document of this DescribeHubContentResponse.


        :return: The hub_content_document of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._hub_content_document

    @hub_content_document.setter
    def hub_content_document(self, hub_content_document):
        """Sets the hub_content_document of this DescribeHubContentResponse.


        :param hub_content_document: The hub_content_document of this DescribeHubContentResponse.
        :type hub_content_document: str
        """
        if hub_content_document is None:
            raise ValueError("Invalid value for `hub_content_document`, must not be `None`")

        self._hub_content_document = hub_content_document

    @property
    def hub_content_search_keywords(self):
        """Gets the hub_content_search_keywords of this DescribeHubContentResponse.


        :return: The hub_content_search_keywords of this DescribeHubContentResponse.
        :rtype: List
        """
        return self._hub_content_search_keywords

    @hub_content_search_keywords.setter
    def hub_content_search_keywords(self, hub_content_search_keywords):
        """Sets the hub_content_search_keywords of this DescribeHubContentResponse.


        :param hub_content_search_keywords: The hub_content_search_keywords of this DescribeHubContentResponse.
        :type hub_content_search_keywords: List
        """

        self._hub_content_search_keywords = hub_content_search_keywords

    @property
    def hub_content_dependencies(self):
        """Gets the hub_content_dependencies of this DescribeHubContentResponse.


        :return: The hub_content_dependencies of this DescribeHubContentResponse.
        :rtype: List
        """
        return self._hub_content_dependencies

    @hub_content_dependencies.setter
    def hub_content_dependencies(self, hub_content_dependencies):
        """Sets the hub_content_dependencies of this DescribeHubContentResponse.


        :param hub_content_dependencies: The hub_content_dependencies of this DescribeHubContentResponse.
        :type hub_content_dependencies: List
        """

        self._hub_content_dependencies = hub_content_dependencies

    @property
    def hub_content_status(self):
        """Gets the hub_content_status of this DescribeHubContentResponse.


        :return: The hub_content_status of this DescribeHubContentResponse.
        :rtype: HubContentStatus
        """
        return self._hub_content_status

    @hub_content_status.setter
    def hub_content_status(self, hub_content_status):
        """Sets the hub_content_status of this DescribeHubContentResponse.


        :param hub_content_status: The hub_content_status of this DescribeHubContentResponse.
        :type hub_content_status: HubContentStatus
        """
        if hub_content_status is None:
            raise ValueError("Invalid value for `hub_content_status`, must not be `None`")

        self._hub_content_status = hub_content_status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this DescribeHubContentResponse.


        :return: The failure_reason of this DescribeHubContentResponse.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this DescribeHubContentResponse.


        :param failure_reason: The failure_reason of this DescribeHubContentResponse.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeHubContentResponse.


        :return: The creation_time of this DescribeHubContentResponse.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeHubContentResponse.


        :param creation_time: The creation_time of this DescribeHubContentResponse.
        :type creation_time: datetime
        """
        if creation_time is None:
            raise ValueError("Invalid value for `creation_time`, must not be `None`")

        self._creation_time = creation_time
