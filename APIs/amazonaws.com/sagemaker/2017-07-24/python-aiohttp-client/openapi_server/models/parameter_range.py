# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameter_range_categorical_parameter_range_specification import ParameterRangeCategoricalParameterRangeSpecification
from openapi_server.models.parameter_range_continuous_parameter_range_specification import ParameterRangeContinuousParameterRangeSpecification
from openapi_server.models.parameter_range_integer_parameter_range_specification import ParameterRangeIntegerParameterRangeSpecification
from openapi_server import util


class ParameterRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, integer_parameter_range_specification: ParameterRangeIntegerParameterRangeSpecification=None, continuous_parameter_range_specification: ParameterRangeContinuousParameterRangeSpecification=None, categorical_parameter_range_specification: ParameterRangeCategoricalParameterRangeSpecification=None):
        """ParameterRange - a model defined in OpenAPI

        :param integer_parameter_range_specification: The integer_parameter_range_specification of this ParameterRange.
        :param continuous_parameter_range_specification: The continuous_parameter_range_specification of this ParameterRange.
        :param categorical_parameter_range_specification: The categorical_parameter_range_specification of this ParameterRange.
        """
        self.openapi_types = {
            'integer_parameter_range_specification': ParameterRangeIntegerParameterRangeSpecification,
            'continuous_parameter_range_specification': ParameterRangeContinuousParameterRangeSpecification,
            'categorical_parameter_range_specification': ParameterRangeCategoricalParameterRangeSpecification
        }

        self.attribute_map = {
            'integer_parameter_range_specification': 'IntegerParameterRangeSpecification',
            'continuous_parameter_range_specification': 'ContinuousParameterRangeSpecification',
            'categorical_parameter_range_specification': 'CategoricalParameterRangeSpecification'
        }

        self._integer_parameter_range_specification = integer_parameter_range_specification
        self._continuous_parameter_range_specification = continuous_parameter_range_specification
        self._categorical_parameter_range_specification = categorical_parameter_range_specification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParameterRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParameterRange of this ParameterRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def integer_parameter_range_specification(self):
        """Gets the integer_parameter_range_specification of this ParameterRange.


        :return: The integer_parameter_range_specification of this ParameterRange.
        :rtype: ParameterRangeIntegerParameterRangeSpecification
        """
        return self._integer_parameter_range_specification

    @integer_parameter_range_specification.setter
    def integer_parameter_range_specification(self, integer_parameter_range_specification):
        """Sets the integer_parameter_range_specification of this ParameterRange.


        :param integer_parameter_range_specification: The integer_parameter_range_specification of this ParameterRange.
        :type integer_parameter_range_specification: ParameterRangeIntegerParameterRangeSpecification
        """

        self._integer_parameter_range_specification = integer_parameter_range_specification

    @property
    def continuous_parameter_range_specification(self):
        """Gets the continuous_parameter_range_specification of this ParameterRange.


        :return: The continuous_parameter_range_specification of this ParameterRange.
        :rtype: ParameterRangeContinuousParameterRangeSpecification
        """
        return self._continuous_parameter_range_specification

    @continuous_parameter_range_specification.setter
    def continuous_parameter_range_specification(self, continuous_parameter_range_specification):
        """Sets the continuous_parameter_range_specification of this ParameterRange.


        :param continuous_parameter_range_specification: The continuous_parameter_range_specification of this ParameterRange.
        :type continuous_parameter_range_specification: ParameterRangeContinuousParameterRangeSpecification
        """

        self._continuous_parameter_range_specification = continuous_parameter_range_specification

    @property
    def categorical_parameter_range_specification(self):
        """Gets the categorical_parameter_range_specification of this ParameterRange.


        :return: The categorical_parameter_range_specification of this ParameterRange.
        :rtype: ParameterRangeCategoricalParameterRangeSpecification
        """
        return self._categorical_parameter_range_specification

    @categorical_parameter_range_specification.setter
    def categorical_parameter_range_specification(self, categorical_parameter_range_specification):
        """Sets the categorical_parameter_range_specification of this ParameterRange.


        :param categorical_parameter_range_specification: The categorical_parameter_range_specification of this ParameterRange.
        :type categorical_parameter_range_specification: ParameterRangeCategoricalParameterRangeSpecification
        """

        self._categorical_parameter_range_specification = categorical_parameter_range_specification
