# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.container_definition_image_config import ContainerDefinitionImageConfig
from openapi_server.models.container_definition_model_data_source import ContainerDefinitionModelDataSource
from openapi_server.models.container_definition_multi_model_config import ContainerDefinitionMultiModelConfig
from openapi_server.models.container_mode import ContainerMode
from openapi_server import util


class CreateModelInputPrimaryContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_hostname: str=None, image: str=None, image_config: ContainerDefinitionImageConfig=None, mode: ContainerMode=None, model_data_url: str=None, environment: Dict=None, model_package_name: str=None, inference_specification_name: str=None, multi_model_config: ContainerDefinitionMultiModelConfig=None, model_data_source: ContainerDefinitionModelDataSource=None):
        """CreateModelInputPrimaryContainer - a model defined in OpenAPI

        :param container_hostname: The container_hostname of this CreateModelInputPrimaryContainer.
        :param image: The image of this CreateModelInputPrimaryContainer.
        :param image_config: The image_config of this CreateModelInputPrimaryContainer.
        :param mode: The mode of this CreateModelInputPrimaryContainer.
        :param model_data_url: The model_data_url of this CreateModelInputPrimaryContainer.
        :param environment: The environment of this CreateModelInputPrimaryContainer.
        :param model_package_name: The model_package_name of this CreateModelInputPrimaryContainer.
        :param inference_specification_name: The inference_specification_name of this CreateModelInputPrimaryContainer.
        :param multi_model_config: The multi_model_config of this CreateModelInputPrimaryContainer.
        :param model_data_source: The model_data_source of this CreateModelInputPrimaryContainer.
        """
        self.openapi_types = {
            'container_hostname': str,
            'image': str,
            'image_config': ContainerDefinitionImageConfig,
            'mode': ContainerMode,
            'model_data_url': str,
            'environment': Dict,
            'model_package_name': str,
            'inference_specification_name': str,
            'multi_model_config': ContainerDefinitionMultiModelConfig,
            'model_data_source': ContainerDefinitionModelDataSource
        }

        self.attribute_map = {
            'container_hostname': 'ContainerHostname',
            'image': 'Image',
            'image_config': 'ImageConfig',
            'mode': 'Mode',
            'model_data_url': 'ModelDataUrl',
            'environment': 'Environment',
            'model_package_name': 'ModelPackageName',
            'inference_specification_name': 'InferenceSpecificationName',
            'multi_model_config': 'MultiModelConfig',
            'model_data_source': 'ModelDataSource'
        }

        self._container_hostname = container_hostname
        self._image = image
        self._image_config = image_config
        self._mode = mode
        self._model_data_url = model_data_url
        self._environment = environment
        self._model_package_name = model_package_name
        self._inference_specification_name = inference_specification_name
        self._multi_model_config = multi_model_config
        self._model_data_source = model_data_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelInputPrimaryContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelInput_PrimaryContainer of this CreateModelInputPrimaryContainer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_hostname(self):
        """Gets the container_hostname of this CreateModelInputPrimaryContainer.


        :return: The container_hostname of this CreateModelInputPrimaryContainer.
        :rtype: str
        """
        return self._container_hostname

    @container_hostname.setter
    def container_hostname(self, container_hostname):
        """Sets the container_hostname of this CreateModelInputPrimaryContainer.


        :param container_hostname: The container_hostname of this CreateModelInputPrimaryContainer.
        :type container_hostname: str
        """

        self._container_hostname = container_hostname

    @property
    def image(self):
        """Gets the image of this CreateModelInputPrimaryContainer.


        :return: The image of this CreateModelInputPrimaryContainer.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this CreateModelInputPrimaryContainer.


        :param image: The image of this CreateModelInputPrimaryContainer.
        :type image: str
        """

        self._image = image

    @property
    def image_config(self):
        """Gets the image_config of this CreateModelInputPrimaryContainer.


        :return: The image_config of this CreateModelInputPrimaryContainer.
        :rtype: ContainerDefinitionImageConfig
        """
        return self._image_config

    @image_config.setter
    def image_config(self, image_config):
        """Sets the image_config of this CreateModelInputPrimaryContainer.


        :param image_config: The image_config of this CreateModelInputPrimaryContainer.
        :type image_config: ContainerDefinitionImageConfig
        """

        self._image_config = image_config

    @property
    def mode(self):
        """Gets the mode of this CreateModelInputPrimaryContainer.


        :return: The mode of this CreateModelInputPrimaryContainer.
        :rtype: ContainerMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this CreateModelInputPrimaryContainer.


        :param mode: The mode of this CreateModelInputPrimaryContainer.
        :type mode: ContainerMode
        """

        self._mode = mode

    @property
    def model_data_url(self):
        """Gets the model_data_url of this CreateModelInputPrimaryContainer.


        :return: The model_data_url of this CreateModelInputPrimaryContainer.
        :rtype: str
        """
        return self._model_data_url

    @model_data_url.setter
    def model_data_url(self, model_data_url):
        """Sets the model_data_url of this CreateModelInputPrimaryContainer.


        :param model_data_url: The model_data_url of this CreateModelInputPrimaryContainer.
        :type model_data_url: str
        """

        self._model_data_url = model_data_url

    @property
    def environment(self):
        """Gets the environment of this CreateModelInputPrimaryContainer.


        :return: The environment of this CreateModelInputPrimaryContainer.
        :rtype: Dict
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this CreateModelInputPrimaryContainer.


        :param environment: The environment of this CreateModelInputPrimaryContainer.
        :type environment: Dict
        """

        self._environment = environment

    @property
    def model_package_name(self):
        """Gets the model_package_name of this CreateModelInputPrimaryContainer.


        :return: The model_package_name of this CreateModelInputPrimaryContainer.
        :rtype: str
        """
        return self._model_package_name

    @model_package_name.setter
    def model_package_name(self, model_package_name):
        """Sets the model_package_name of this CreateModelInputPrimaryContainer.


        :param model_package_name: The model_package_name of this CreateModelInputPrimaryContainer.
        :type model_package_name: str
        """

        self._model_package_name = model_package_name

    @property
    def inference_specification_name(self):
        """Gets the inference_specification_name of this CreateModelInputPrimaryContainer.


        :return: The inference_specification_name of this CreateModelInputPrimaryContainer.
        :rtype: str
        """
        return self._inference_specification_name

    @inference_specification_name.setter
    def inference_specification_name(self, inference_specification_name):
        """Sets the inference_specification_name of this CreateModelInputPrimaryContainer.


        :param inference_specification_name: The inference_specification_name of this CreateModelInputPrimaryContainer.
        :type inference_specification_name: str
        """

        self._inference_specification_name = inference_specification_name

    @property
    def multi_model_config(self):
        """Gets the multi_model_config of this CreateModelInputPrimaryContainer.


        :return: The multi_model_config of this CreateModelInputPrimaryContainer.
        :rtype: ContainerDefinitionMultiModelConfig
        """
        return self._multi_model_config

    @multi_model_config.setter
    def multi_model_config(self, multi_model_config):
        """Sets the multi_model_config of this CreateModelInputPrimaryContainer.


        :param multi_model_config: The multi_model_config of this CreateModelInputPrimaryContainer.
        :type multi_model_config: ContainerDefinitionMultiModelConfig
        """

        self._multi_model_config = multi_model_config

    @property
    def model_data_source(self):
        """Gets the model_data_source of this CreateModelInputPrimaryContainer.


        :return: The model_data_source of this CreateModelInputPrimaryContainer.
        :rtype: ContainerDefinitionModelDataSource
        """
        return self._model_data_source

    @model_data_source.setter
    def model_data_source(self, model_data_source):
        """Sets the model_data_source of this CreateModelInputPrimaryContainer.


        :param model_data_source: The model_data_source of this CreateModelInputPrimaryContainer.
        :type model_data_source: ContainerDefinitionModelDataSource
        """

        self._model_data_source = model_data_source
