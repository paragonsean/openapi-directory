# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RetryStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maximum_retry_attempts: int=None):
        """RetryStrategy - a model defined in OpenAPI

        :param maximum_retry_attempts: The maximum_retry_attempts of this RetryStrategy.
        """
        self.openapi_types = {
            'maximum_retry_attempts': int
        }

        self.attribute_map = {
            'maximum_retry_attempts': 'MaximumRetryAttempts'
        }

        self._maximum_retry_attempts = maximum_retry_attempts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetryStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetryStrategy of this RetryStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maximum_retry_attempts(self):
        """Gets the maximum_retry_attempts of this RetryStrategy.


        :return: The maximum_retry_attempts of this RetryStrategy.
        :rtype: int
        """
        return self._maximum_retry_attempts

    @maximum_retry_attempts.setter
    def maximum_retry_attempts(self, maximum_retry_attempts):
        """Sets the maximum_retry_attempts of this RetryStrategy.


        :param maximum_retry_attempts: The maximum_retry_attempts of this RetryStrategy.
        :type maximum_retry_attempts: int
        """
        if maximum_retry_attempts is None:
            raise ValueError("Invalid value for `maximum_retry_attempts`, must not be `None`")

        self._maximum_retry_attempts = maximum_retry_attempts
