# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.explainability_report import ExplainabilityReport
from openapi_server import util


class Explainability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, report: ExplainabilityReport=None):
        """Explainability - a model defined in OpenAPI

        :param report: The report of this Explainability.
        """
        self.openapi_types = {
            'report': ExplainabilityReport
        }

        self.attribute_map = {
            'report': 'Report'
        }

        self._report = report

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Explainability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Explainability of this Explainability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def report(self):
        """Gets the report of this Explainability.


        :return: The report of this Explainability.
        :rtype: ExplainabilityReport
        """
        return self._report

    @report.setter
    def report(self, report):
        """Sets the report of this Explainability.


        :param report: The report of this Explainability.
        :type report: ExplainabilityReport
        """

        self._report = report
