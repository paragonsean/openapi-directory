# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteImageVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_name: str=None, version: int=None, alias: str=None):
        """DeleteImageVersionRequest - a model defined in OpenAPI

        :param image_name: The image_name of this DeleteImageVersionRequest.
        :param version: The version of this DeleteImageVersionRequest.
        :param alias: The alias of this DeleteImageVersionRequest.
        """
        self.openapi_types = {
            'image_name': str,
            'version': int,
            'alias': str
        }

        self.attribute_map = {
            'image_name': 'ImageName',
            'version': 'Version',
            'alias': 'Alias'
        }

        self._image_name = image_name
        self._version = version
        self._alias = alias

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteImageVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteImageVersionRequest of this DeleteImageVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_name(self):
        """Gets the image_name of this DeleteImageVersionRequest.


        :return: The image_name of this DeleteImageVersionRequest.
        :rtype: str
        """
        return self._image_name

    @image_name.setter
    def image_name(self, image_name):
        """Sets the image_name of this DeleteImageVersionRequest.


        :param image_name: The image_name of this DeleteImageVersionRequest.
        :type image_name: str
        """
        if image_name is None:
            raise ValueError("Invalid value for `image_name`, must not be `None`")

        self._image_name = image_name

    @property
    def version(self):
        """Gets the version of this DeleteImageVersionRequest.


        :return: The version of this DeleteImageVersionRequest.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeleteImageVersionRequest.


        :param version: The version of this DeleteImageVersionRequest.
        :type version: int
        """

        self._version = version

    @property
    def alias(self):
        """Gets the alias of this DeleteImageVersionRequest.


        :return: The alias of this DeleteImageVersionRequest.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this DeleteImageVersionRequest.


        :param alias: The alias of this DeleteImageVersionRequest.
        :type alias: str
        """

        self._alias = alias
