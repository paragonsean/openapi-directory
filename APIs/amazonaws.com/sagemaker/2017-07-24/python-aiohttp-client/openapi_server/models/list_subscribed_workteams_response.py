# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSubscribedWorkteamsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscribed_workteams: List=None, next_token: str=None):
        """ListSubscribedWorkteamsResponse - a model defined in OpenAPI

        :param subscribed_workteams: The subscribed_workteams of this ListSubscribedWorkteamsResponse.
        :param next_token: The next_token of this ListSubscribedWorkteamsResponse.
        """
        self.openapi_types = {
            'subscribed_workteams': List,
            'next_token': str
        }

        self.attribute_map = {
            'subscribed_workteams': 'SubscribedWorkteams',
            'next_token': 'NextToken'
        }

        self._subscribed_workteams = subscribed_workteams
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSubscribedWorkteamsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSubscribedWorkteamsResponse of this ListSubscribedWorkteamsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscribed_workteams(self):
        """Gets the subscribed_workteams of this ListSubscribedWorkteamsResponse.


        :return: The subscribed_workteams of this ListSubscribedWorkteamsResponse.
        :rtype: List
        """
        return self._subscribed_workteams

    @subscribed_workteams.setter
    def subscribed_workteams(self, subscribed_workteams):
        """Sets the subscribed_workteams of this ListSubscribedWorkteamsResponse.


        :param subscribed_workteams: The subscribed_workteams of this ListSubscribedWorkteamsResponse.
        :type subscribed_workteams: List
        """
        if subscribed_workteams is None:
            raise ValueError("Invalid value for `subscribed_workteams`, must not be `None`")

        self._subscribed_workteams = subscribed_workteams

    @property
    def next_token(self):
        """Gets the next_token of this ListSubscribedWorkteamsResponse.


        :return: The next_token of this ListSubscribedWorkteamsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListSubscribedWorkteamsResponse.


        :param next_token: The next_token of this ListSubscribedWorkteamsResponse.
        :type next_token: str
        """

        self._next_token = next_token
