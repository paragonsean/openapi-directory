# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_workteam_request_notification_configuration import CreateWorkteamRequestNotificationConfiguration
from openapi_server import util


class CreateWorkteamRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workteam_name: str=None, workforce_name: str=None, member_definitions: List=None, description: str=None, notification_configuration: CreateWorkteamRequestNotificationConfiguration=None, tags: List=None):
        """CreateWorkteamRequest - a model defined in OpenAPI

        :param workteam_name: The workteam_name of this CreateWorkteamRequest.
        :param workforce_name: The workforce_name of this CreateWorkteamRequest.
        :param member_definitions: The member_definitions of this CreateWorkteamRequest.
        :param description: The description of this CreateWorkteamRequest.
        :param notification_configuration: The notification_configuration of this CreateWorkteamRequest.
        :param tags: The tags of this CreateWorkteamRequest.
        """
        self.openapi_types = {
            'workteam_name': str,
            'workforce_name': str,
            'member_definitions': List,
            'description': str,
            'notification_configuration': CreateWorkteamRequestNotificationConfiguration,
            'tags': List
        }

        self.attribute_map = {
            'workteam_name': 'WorkteamName',
            'workforce_name': 'WorkforceName',
            'member_definitions': 'MemberDefinitions',
            'description': 'Description',
            'notification_configuration': 'NotificationConfiguration',
            'tags': 'Tags'
        }

        self._workteam_name = workteam_name
        self._workforce_name = workforce_name
        self._member_definitions = member_definitions
        self._description = description
        self._notification_configuration = notification_configuration
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWorkteamRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWorkteamRequest of this CreateWorkteamRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workteam_name(self):
        """Gets the workteam_name of this CreateWorkteamRequest.


        :return: The workteam_name of this CreateWorkteamRequest.
        :rtype: str
        """
        return self._workteam_name

    @workteam_name.setter
    def workteam_name(self, workteam_name):
        """Sets the workteam_name of this CreateWorkteamRequest.


        :param workteam_name: The workteam_name of this CreateWorkteamRequest.
        :type workteam_name: str
        """
        if workteam_name is None:
            raise ValueError("Invalid value for `workteam_name`, must not be `None`")

        self._workteam_name = workteam_name

    @property
    def workforce_name(self):
        """Gets the workforce_name of this CreateWorkteamRequest.


        :return: The workforce_name of this CreateWorkteamRequest.
        :rtype: str
        """
        return self._workforce_name

    @workforce_name.setter
    def workforce_name(self, workforce_name):
        """Sets the workforce_name of this CreateWorkteamRequest.


        :param workforce_name: The workforce_name of this CreateWorkteamRequest.
        :type workforce_name: str
        """

        self._workforce_name = workforce_name

    @property
    def member_definitions(self):
        """Gets the member_definitions of this CreateWorkteamRequest.


        :return: The member_definitions of this CreateWorkteamRequest.
        :rtype: List
        """
        return self._member_definitions

    @member_definitions.setter
    def member_definitions(self, member_definitions):
        """Sets the member_definitions of this CreateWorkteamRequest.


        :param member_definitions: The member_definitions of this CreateWorkteamRequest.
        :type member_definitions: List
        """
        if member_definitions is None:
            raise ValueError("Invalid value for `member_definitions`, must not be `None`")

        self._member_definitions = member_definitions

    @property
    def description(self):
        """Gets the description of this CreateWorkteamRequest.


        :return: The description of this CreateWorkteamRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateWorkteamRequest.


        :param description: The description of this CreateWorkteamRequest.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def notification_configuration(self):
        """Gets the notification_configuration of this CreateWorkteamRequest.


        :return: The notification_configuration of this CreateWorkteamRequest.
        :rtype: CreateWorkteamRequestNotificationConfiguration
        """
        return self._notification_configuration

    @notification_configuration.setter
    def notification_configuration(self, notification_configuration):
        """Sets the notification_configuration of this CreateWorkteamRequest.


        :param notification_configuration: The notification_configuration of this CreateWorkteamRequest.
        :type notification_configuration: CreateWorkteamRequestNotificationConfiguration
        """

        self._notification_configuration = notification_configuration

    @property
    def tags(self):
        """Gets the tags of this CreateWorkteamRequest.


        :return: The tags of this CreateWorkteamRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateWorkteamRequest.


        :param tags: The tags of this CreateWorkteamRequest.
        :type tags: List
        """

        self._tags = tags
