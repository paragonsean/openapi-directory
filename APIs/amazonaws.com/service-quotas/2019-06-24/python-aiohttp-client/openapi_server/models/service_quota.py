# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_quota_error_reason import ServiceQuotaErrorReason
from openapi_server.models.service_quota_period import ServiceQuotaPeriod
from openapi_server.models.service_quota_usage_metric import ServiceQuotaUsageMetric
from openapi_server import util


class ServiceQuota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_code: str=None, service_name: str=None, quota_arn: str=None, quota_code: str=None, quota_name: str=None, value: float=None, unit: str=None, adjustable: bool=None, global_quota: bool=None, usage_metric: ServiceQuotaUsageMetric=None, period: ServiceQuotaPeriod=None, error_reason: ServiceQuotaErrorReason=None):
        """ServiceQuota - a model defined in OpenAPI

        :param service_code: The service_code of this ServiceQuota.
        :param service_name: The service_name of this ServiceQuota.
        :param quota_arn: The quota_arn of this ServiceQuota.
        :param quota_code: The quota_code of this ServiceQuota.
        :param quota_name: The quota_name of this ServiceQuota.
        :param value: The value of this ServiceQuota.
        :param unit: The unit of this ServiceQuota.
        :param adjustable: The adjustable of this ServiceQuota.
        :param global_quota: The global_quota of this ServiceQuota.
        :param usage_metric: The usage_metric of this ServiceQuota.
        :param period: The period of this ServiceQuota.
        :param error_reason: The error_reason of this ServiceQuota.
        """
        self.openapi_types = {
            'service_code': str,
            'service_name': str,
            'quota_arn': str,
            'quota_code': str,
            'quota_name': str,
            'value': float,
            'unit': str,
            'adjustable': bool,
            'global_quota': bool,
            'usage_metric': ServiceQuotaUsageMetric,
            'period': ServiceQuotaPeriod,
            'error_reason': ServiceQuotaErrorReason
        }

        self.attribute_map = {
            'service_code': 'ServiceCode',
            'service_name': 'ServiceName',
            'quota_arn': 'QuotaArn',
            'quota_code': 'QuotaCode',
            'quota_name': 'QuotaName',
            'value': 'Value',
            'unit': 'Unit',
            'adjustable': 'Adjustable',
            'global_quota': 'GlobalQuota',
            'usage_metric': 'UsageMetric',
            'period': 'Period',
            'error_reason': 'ErrorReason'
        }

        self._service_code = service_code
        self._service_name = service_name
        self._quota_arn = quota_arn
        self._quota_code = quota_code
        self._quota_name = quota_name
        self._value = value
        self._unit = unit
        self._adjustable = adjustable
        self._global_quota = global_quota
        self._usage_metric = usage_metric
        self._period = period
        self._error_reason = error_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceQuota of this ServiceQuota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_code(self):
        """Gets the service_code of this ServiceQuota.


        :return: The service_code of this ServiceQuota.
        :rtype: str
        """
        return self._service_code

    @service_code.setter
    def service_code(self, service_code):
        """Sets the service_code of this ServiceQuota.


        :param service_code: The service_code of this ServiceQuota.
        :type service_code: str
        """

        self._service_code = service_code

    @property
    def service_name(self):
        """Gets the service_name of this ServiceQuota.


        :return: The service_name of this ServiceQuota.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceQuota.


        :param service_name: The service_name of this ServiceQuota.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def quota_arn(self):
        """Gets the quota_arn of this ServiceQuota.


        :return: The quota_arn of this ServiceQuota.
        :rtype: str
        """
        return self._quota_arn

    @quota_arn.setter
    def quota_arn(self, quota_arn):
        """Sets the quota_arn of this ServiceQuota.


        :param quota_arn: The quota_arn of this ServiceQuota.
        :type quota_arn: str
        """

        self._quota_arn = quota_arn

    @property
    def quota_code(self):
        """Gets the quota_code of this ServiceQuota.


        :return: The quota_code of this ServiceQuota.
        :rtype: str
        """
        return self._quota_code

    @quota_code.setter
    def quota_code(self, quota_code):
        """Sets the quota_code of this ServiceQuota.


        :param quota_code: The quota_code of this ServiceQuota.
        :type quota_code: str
        """

        self._quota_code = quota_code

    @property
    def quota_name(self):
        """Gets the quota_name of this ServiceQuota.


        :return: The quota_name of this ServiceQuota.
        :rtype: str
        """
        return self._quota_name

    @quota_name.setter
    def quota_name(self, quota_name):
        """Sets the quota_name of this ServiceQuota.


        :param quota_name: The quota_name of this ServiceQuota.
        :type quota_name: str
        """

        self._quota_name = quota_name

    @property
    def value(self):
        """Gets the value of this ServiceQuota.


        :return: The value of this ServiceQuota.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ServiceQuota.


        :param value: The value of this ServiceQuota.
        :type value: float
        """

        self._value = value

    @property
    def unit(self):
        """Gets the unit of this ServiceQuota.


        :return: The unit of this ServiceQuota.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this ServiceQuota.


        :param unit: The unit of this ServiceQuota.
        :type unit: str
        """

        self._unit = unit

    @property
    def adjustable(self):
        """Gets the adjustable of this ServiceQuota.


        :return: The adjustable of this ServiceQuota.
        :rtype: bool
        """
        return self._adjustable

    @adjustable.setter
    def adjustable(self, adjustable):
        """Sets the adjustable of this ServiceQuota.


        :param adjustable: The adjustable of this ServiceQuota.
        :type adjustable: bool
        """

        self._adjustable = adjustable

    @property
    def global_quota(self):
        """Gets the global_quota of this ServiceQuota.


        :return: The global_quota of this ServiceQuota.
        :rtype: bool
        """
        return self._global_quota

    @global_quota.setter
    def global_quota(self, global_quota):
        """Sets the global_quota of this ServiceQuota.


        :param global_quota: The global_quota of this ServiceQuota.
        :type global_quota: bool
        """

        self._global_quota = global_quota

    @property
    def usage_metric(self):
        """Gets the usage_metric of this ServiceQuota.


        :return: The usage_metric of this ServiceQuota.
        :rtype: ServiceQuotaUsageMetric
        """
        return self._usage_metric

    @usage_metric.setter
    def usage_metric(self, usage_metric):
        """Sets the usage_metric of this ServiceQuota.


        :param usage_metric: The usage_metric of this ServiceQuota.
        :type usage_metric: ServiceQuotaUsageMetric
        """

        self._usage_metric = usage_metric

    @property
    def period(self):
        """Gets the period of this ServiceQuota.


        :return: The period of this ServiceQuota.
        :rtype: ServiceQuotaPeriod
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this ServiceQuota.


        :param period: The period of this ServiceQuota.
        :type period: ServiceQuotaPeriod
        """

        self._period = period

    @property
    def error_reason(self):
        """Gets the error_reason of this ServiceQuota.


        :return: The error_reason of this ServiceQuota.
        :rtype: ServiceQuotaErrorReason
        """
        return self._error_reason

    @error_reason.setter
    def error_reason(self, error_reason):
        """Sets the error_reason of this ServiceQuota.


        :param error_reason: The error_reason of this ServiceQuota.
        :type error_reason: ServiceQuotaErrorReason
        """

        self._error_reason = error_reason
