# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutServiceQuotaIncreaseRequestIntoTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quota_code: str=None, service_code: str=None, aws_region: str=None, desired_value: float=None):
        """PutServiceQuotaIncreaseRequestIntoTemplateRequest - a model defined in OpenAPI

        :param quota_code: The quota_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :param service_code: The service_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :param aws_region: The aws_region of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :param desired_value: The desired_value of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        """
        self.openapi_types = {
            'quota_code': str,
            'service_code': str,
            'aws_region': str,
            'desired_value': float
        }

        self.attribute_map = {
            'quota_code': 'QuotaCode',
            'service_code': 'ServiceCode',
            'aws_region': 'AwsRegion',
            'desired_value': 'DesiredValue'
        }

        self._quota_code = quota_code
        self._service_code = service_code
        self._aws_region = aws_region
        self._desired_value = desired_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutServiceQuotaIncreaseRequestIntoTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutServiceQuotaIncreaseRequestIntoTemplateRequest of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quota_code(self):
        """Gets the quota_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :return: The quota_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :rtype: str
        """
        return self._quota_code

    @quota_code.setter
    def quota_code(self, quota_code):
        """Sets the quota_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :param quota_code: The quota_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :type quota_code: str
        """
        if quota_code is None:
            raise ValueError("Invalid value for `quota_code`, must not be `None`")

        self._quota_code = quota_code

    @property
    def service_code(self):
        """Gets the service_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :return: The service_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :rtype: str
        """
        return self._service_code

    @service_code.setter
    def service_code(self, service_code):
        """Sets the service_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :param service_code: The service_code of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :type service_code: str
        """
        if service_code is None:
            raise ValueError("Invalid value for `service_code`, must not be `None`")

        self._service_code = service_code

    @property
    def aws_region(self):
        """Gets the aws_region of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :return: The aws_region of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :rtype: str
        """
        return self._aws_region

    @aws_region.setter
    def aws_region(self, aws_region):
        """Sets the aws_region of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :param aws_region: The aws_region of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :type aws_region: str
        """
        if aws_region is None:
            raise ValueError("Invalid value for `aws_region`, must not be `None`")

        self._aws_region = aws_region

    @property
    def desired_value(self):
        """Gets the desired_value of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :return: The desired_value of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :rtype: float
        """
        return self._desired_value

    @desired_value.setter
    def desired_value(self, desired_value):
        """Sets the desired_value of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.


        :param desired_value: The desired_value of this PutServiceQuotaIncreaseRequestIntoTemplateRequest.
        :type desired_value: float
        """
        if desired_value is None:
            raise ValueError("Invalid value for `desired_value`, must not be `None`")

        self._desired_value = desired_value
