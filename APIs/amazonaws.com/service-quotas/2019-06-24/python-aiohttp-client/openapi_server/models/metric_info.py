# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metric_namespace: str=None, metric_name: str=None, metric_dimensions: Dict=None, metric_statistic_recommendation: str=None):
        """MetricInfo - a model defined in OpenAPI

        :param metric_namespace: The metric_namespace of this MetricInfo.
        :param metric_name: The metric_name of this MetricInfo.
        :param metric_dimensions: The metric_dimensions of this MetricInfo.
        :param metric_statistic_recommendation: The metric_statistic_recommendation of this MetricInfo.
        """
        self.openapi_types = {
            'metric_namespace': str,
            'metric_name': str,
            'metric_dimensions': Dict,
            'metric_statistic_recommendation': str
        }

        self.attribute_map = {
            'metric_namespace': 'MetricNamespace',
            'metric_name': 'MetricName',
            'metric_dimensions': 'MetricDimensions',
            'metric_statistic_recommendation': 'MetricStatisticRecommendation'
        }

        self._metric_namespace = metric_namespace
        self._metric_name = metric_name
        self._metric_dimensions = metric_dimensions
        self._metric_statistic_recommendation = metric_statistic_recommendation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricInfo of this MetricInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metric_namespace(self):
        """Gets the metric_namespace of this MetricInfo.


        :return: The metric_namespace of this MetricInfo.
        :rtype: str
        """
        return self._metric_namespace

    @metric_namespace.setter
    def metric_namespace(self, metric_namespace):
        """Sets the metric_namespace of this MetricInfo.


        :param metric_namespace: The metric_namespace of this MetricInfo.
        :type metric_namespace: str
        """

        self._metric_namespace = metric_namespace

    @property
    def metric_name(self):
        """Gets the metric_name of this MetricInfo.


        :return: The metric_name of this MetricInfo.
        :rtype: str
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name):
        """Sets the metric_name of this MetricInfo.


        :param metric_name: The metric_name of this MetricInfo.
        :type metric_name: str
        """

        self._metric_name = metric_name

    @property
    def metric_dimensions(self):
        """Gets the metric_dimensions of this MetricInfo.


        :return: The metric_dimensions of this MetricInfo.
        :rtype: Dict
        """
        return self._metric_dimensions

    @metric_dimensions.setter
    def metric_dimensions(self, metric_dimensions):
        """Sets the metric_dimensions of this MetricInfo.


        :param metric_dimensions: The metric_dimensions of this MetricInfo.
        :type metric_dimensions: Dict
        """

        self._metric_dimensions = metric_dimensions

    @property
    def metric_statistic_recommendation(self):
        """Gets the metric_statistic_recommendation of this MetricInfo.


        :return: The metric_statistic_recommendation of this MetricInfo.
        :rtype: str
        """
        return self._metric_statistic_recommendation

    @metric_statistic_recommendation.setter
    def metric_statistic_recommendation(self, metric_statistic_recommendation):
        """Sets the metric_statistic_recommendation of this MetricInfo.


        :param metric_statistic_recommendation: The metric_statistic_recommendation of this MetricInfo.
        :type metric_statistic_recommendation: str
        """

        self._metric_statistic_recommendation = metric_statistic_recommendation
