/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeleteServiceQuotaIncreaseRequestFromTemplateRequest from '../model/DeleteServiceQuotaIncreaseRequestFromTemplateRequest';
import GetAWSDefaultServiceQuotaRequest from '../model/GetAWSDefaultServiceQuotaRequest';
import GetAWSDefaultServiceQuotaResponse from '../model/GetAWSDefaultServiceQuotaResponse';
import GetAssociationForServiceQuotaTemplateResponse from '../model/GetAssociationForServiceQuotaTemplateResponse';
import GetRequestedServiceQuotaChangeRequest from '../model/GetRequestedServiceQuotaChangeRequest';
import GetRequestedServiceQuotaChangeResponse from '../model/GetRequestedServiceQuotaChangeResponse';
import GetServiceQuotaIncreaseRequestFromTemplateRequest from '../model/GetServiceQuotaIncreaseRequestFromTemplateRequest';
import GetServiceQuotaIncreaseRequestFromTemplateResponse from '../model/GetServiceQuotaIncreaseRequestFromTemplateResponse';
import GetServiceQuotaRequest from '../model/GetServiceQuotaRequest';
import GetServiceQuotaResponse from '../model/GetServiceQuotaResponse';
import ListAWSDefaultServiceQuotasRequest from '../model/ListAWSDefaultServiceQuotasRequest';
import ListAWSDefaultServiceQuotasResponse from '../model/ListAWSDefaultServiceQuotasResponse';
import ListRequestedServiceQuotaChangeHistoryByQuotaRequest from '../model/ListRequestedServiceQuotaChangeHistoryByQuotaRequest';
import ListRequestedServiceQuotaChangeHistoryByQuotaResponse from '../model/ListRequestedServiceQuotaChangeHistoryByQuotaResponse';
import ListRequestedServiceQuotaChangeHistoryRequest from '../model/ListRequestedServiceQuotaChangeHistoryRequest';
import ListRequestedServiceQuotaChangeHistoryResponse from '../model/ListRequestedServiceQuotaChangeHistoryResponse';
import ListServiceQuotaIncreaseRequestsInTemplateRequest from '../model/ListServiceQuotaIncreaseRequestsInTemplateRequest';
import ListServiceQuotaIncreaseRequestsInTemplateResponse from '../model/ListServiceQuotaIncreaseRequestsInTemplateResponse';
import ListServiceQuotasRequest from '../model/ListServiceQuotasRequest';
import ListServiceQuotasResponse from '../model/ListServiceQuotasResponse';
import ListServicesRequest from '../model/ListServicesRequest';
import ListServicesResponse from '../model/ListServicesResponse';
import ListTagsForResourceRequest from '../model/ListTagsForResourceRequest';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import PutServiceQuotaIncreaseRequestIntoTemplateRequest from '../model/PutServiceQuotaIncreaseRequestIntoTemplateRequest';
import PutServiceQuotaIncreaseRequestIntoTemplateResponse from '../model/PutServiceQuotaIncreaseRequestIntoTemplateResponse';
import RequestServiceQuotaIncreaseRequest from '../model/RequestServiceQuotaIncreaseRequest';
import RequestServiceQuotaIncreaseResponse from '../model/RequestServiceQuotaIncreaseResponse';
import TagResourceRequest from '../model/TagResourceRequest';
import UntagResourceRequest from '../model/UntagResourceRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2019-06-24
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the associateServiceQuotaTemplate operation.
     * @callback module:api/DefaultApi~associateServiceQuotaTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates your quota request template with your organization. When a new account is created in your organization, the quota increase requests in the template are automatically applied to the account. You can add a quota increase request for any adjustable quota to your template.
     * @param {module:model/String} xAmzTarget 
     * @param {Object.<String, Object>} body 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateServiceQuotaTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    associateServiceQuotaTemplate(xAmzTarget, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling associateServiceQuotaTemplate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling associateServiceQuotaTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.AssociateServiceQuotaTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteServiceQuotaIncreaseRequestFromTemplate operation.
     * @callback module:api/DefaultApi~deleteServiceQuotaIncreaseRequestFromTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the quota increase request for the specified quota from your quota request template.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteServiceQuotaIncreaseRequestFromTemplateRequest} deleteServiceQuotaIncreaseRequestFromTemplateRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteServiceQuotaIncreaseRequestFromTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteServiceQuotaIncreaseRequestFromTemplate(xAmzTarget, deleteServiceQuotaIncreaseRequestFromTemplateRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteServiceQuotaIncreaseRequestFromTemplateRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteServiceQuotaIncreaseRequestFromTemplate");
      }
      // verify the required parameter 'deleteServiceQuotaIncreaseRequestFromTemplateRequest' is set
      if (deleteServiceQuotaIncreaseRequestFromTemplateRequest === undefined || deleteServiceQuotaIncreaseRequestFromTemplateRequest === null) {
        throw new Error("Missing the required parameter 'deleteServiceQuotaIncreaseRequestFromTemplateRequest' when calling deleteServiceQuotaIncreaseRequestFromTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.DeleteServiceQuotaIncreaseRequestFromTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateServiceQuotaTemplate operation.
     * @callback module:api/DefaultApi~disassociateServiceQuotaTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables your quota request template. After a template is disabled, the quota increase requests in the template are not applied to new accounts in your organization. Disabling a quota request template does not apply its quota increase requests.
     * @param {module:model/String} xAmzTarget 
     * @param {Object.<String, Object>} body 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateServiceQuotaTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociateServiceQuotaTemplate(xAmzTarget, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling disassociateServiceQuotaTemplate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling disassociateServiceQuotaTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.DisassociateServiceQuotaTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAWSDefaultServiceQuota operation.
     * @callback module:api/DefaultApi~getAWSDefaultServiceQuotaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAWSDefaultServiceQuotaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the default value for the specified quota. The default value does not reflect any quota increases.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetAWSDefaultServiceQuotaRequest} getAWSDefaultServiceQuotaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAWSDefaultServiceQuotaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAWSDefaultServiceQuotaResponse}
     */
    getAWSDefaultServiceQuota(xAmzTarget, getAWSDefaultServiceQuotaRequest, opts, callback) {
      opts = opts || {};
      let postBody = getAWSDefaultServiceQuotaRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getAWSDefaultServiceQuota");
      }
      // verify the required parameter 'getAWSDefaultServiceQuotaRequest' is set
      if (getAWSDefaultServiceQuotaRequest === undefined || getAWSDefaultServiceQuotaRequest === null) {
        throw new Error("Missing the required parameter 'getAWSDefaultServiceQuotaRequest' when calling getAWSDefaultServiceQuota");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAWSDefaultServiceQuotaResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.GetAWSDefaultServiceQuota', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssociationForServiceQuotaTemplate operation.
     * @callback module:api/DefaultApi~getAssociationForServiceQuotaTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssociationForServiceQuotaTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the status of the association for the quota request template.
     * @param {module:model/String} xAmzTarget 
     * @param {Object.<String, Object>} body 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAssociationForServiceQuotaTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssociationForServiceQuotaTemplateResponse}
     */
    getAssociationForServiceQuotaTemplate(xAmzTarget, body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getAssociationForServiceQuotaTemplate");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getAssociationForServiceQuotaTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetAssociationForServiceQuotaTemplateResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.GetAssociationForServiceQuotaTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRequestedServiceQuotaChange operation.
     * @callback module:api/DefaultApi~getRequestedServiceQuotaChangeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRequestedServiceQuotaChangeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the specified quota increase request.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetRequestedServiceQuotaChangeRequest} getRequestedServiceQuotaChangeRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getRequestedServiceQuotaChangeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRequestedServiceQuotaChangeResponse}
     */
    getRequestedServiceQuotaChange(xAmzTarget, getRequestedServiceQuotaChangeRequest, opts, callback) {
      opts = opts || {};
      let postBody = getRequestedServiceQuotaChangeRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getRequestedServiceQuotaChange");
      }
      // verify the required parameter 'getRequestedServiceQuotaChangeRequest' is set
      if (getRequestedServiceQuotaChangeRequest === undefined || getRequestedServiceQuotaChangeRequest === null) {
        throw new Error("Missing the required parameter 'getRequestedServiceQuotaChangeRequest' when calling getRequestedServiceQuotaChange");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetRequestedServiceQuotaChangeResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.GetRequestedServiceQuotaChange', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceQuota operation.
     * @callback module:api/DefaultApi~getServiceQuotaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetServiceQuotaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the applied quota value for the specified quota. For some quotas, only the default values are available. If the applied quota value is not available for a quota, the quota is not retrieved.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetServiceQuotaRequest} getServiceQuotaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getServiceQuotaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetServiceQuotaResponse}
     */
    getServiceQuota(xAmzTarget, getServiceQuotaRequest, opts, callback) {
      opts = opts || {};
      let postBody = getServiceQuotaRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getServiceQuota");
      }
      // verify the required parameter 'getServiceQuotaRequest' is set
      if (getServiceQuotaRequest === undefined || getServiceQuotaRequest === null) {
        throw new Error("Missing the required parameter 'getServiceQuotaRequest' when calling getServiceQuota");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetServiceQuotaResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.GetServiceQuota', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getServiceQuotaIncreaseRequestFromTemplate operation.
     * @callback module:api/DefaultApi~getServiceQuotaIncreaseRequestFromTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetServiceQuotaIncreaseRequestFromTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the specified quota increase request in your quota request template.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/GetServiceQuotaIncreaseRequestFromTemplateRequest} getServiceQuotaIncreaseRequestFromTemplateRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getServiceQuotaIncreaseRequestFromTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetServiceQuotaIncreaseRequestFromTemplateResponse}
     */
    getServiceQuotaIncreaseRequestFromTemplate(xAmzTarget, getServiceQuotaIncreaseRequestFromTemplateRequest, opts, callback) {
      opts = opts || {};
      let postBody = getServiceQuotaIncreaseRequestFromTemplateRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling getServiceQuotaIncreaseRequestFromTemplate");
      }
      // verify the required parameter 'getServiceQuotaIncreaseRequestFromTemplateRequest' is set
      if (getServiceQuotaIncreaseRequestFromTemplateRequest === undefined || getServiceQuotaIncreaseRequestFromTemplateRequest === null) {
        throw new Error("Missing the required parameter 'getServiceQuotaIncreaseRequestFromTemplateRequest' when calling getServiceQuotaIncreaseRequestFromTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetServiceQuotaIncreaseRequestFromTemplateResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.GetServiceQuotaIncreaseRequestFromTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAWSDefaultServiceQuotas operation.
     * @callback module:api/DefaultApi~listAWSDefaultServiceQuotasCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAWSDefaultServiceQuotasResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the default values for the quotas for the specified AWS service. A default value does not reflect any quota increases.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListAWSDefaultServiceQuotasRequest} listAWSDefaultServiceQuotasRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listAWSDefaultServiceQuotasCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAWSDefaultServiceQuotasResponse}
     */
    listAWSDefaultServiceQuotas(xAmzTarget, listAWSDefaultServiceQuotasRequest, opts, callback) {
      opts = opts || {};
      let postBody = listAWSDefaultServiceQuotasRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listAWSDefaultServiceQuotas");
      }
      // verify the required parameter 'listAWSDefaultServiceQuotasRequest' is set
      if (listAWSDefaultServiceQuotasRequest === undefined || listAWSDefaultServiceQuotasRequest === null) {
        throw new Error("Missing the required parameter 'listAWSDefaultServiceQuotasRequest' when calling listAWSDefaultServiceQuotas");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListAWSDefaultServiceQuotasResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListAWSDefaultServiceQuotas', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listRequestedServiceQuotaChangeHistory operation.
     * @callback module:api/DefaultApi~listRequestedServiceQuotaChangeHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListRequestedServiceQuotaChangeHistoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the quota increase requests for the specified service.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListRequestedServiceQuotaChangeHistoryRequest} listRequestedServiceQuotaChangeHistoryRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listRequestedServiceQuotaChangeHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListRequestedServiceQuotaChangeHistoryResponse}
     */
    listRequestedServiceQuotaChangeHistory(xAmzTarget, listRequestedServiceQuotaChangeHistoryRequest, opts, callback) {
      opts = opts || {};
      let postBody = listRequestedServiceQuotaChangeHistoryRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listRequestedServiceQuotaChangeHistory");
      }
      // verify the required parameter 'listRequestedServiceQuotaChangeHistoryRequest' is set
      if (listRequestedServiceQuotaChangeHistoryRequest === undefined || listRequestedServiceQuotaChangeHistoryRequest === null) {
        throw new Error("Missing the required parameter 'listRequestedServiceQuotaChangeHistoryRequest' when calling listRequestedServiceQuotaChangeHistory");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListRequestedServiceQuotaChangeHistoryResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListRequestedServiceQuotaChangeHistory', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listRequestedServiceQuotaChangeHistoryByQuota operation.
     * @callback module:api/DefaultApi~listRequestedServiceQuotaChangeHistoryByQuotaCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListRequestedServiceQuotaChangeHistoryByQuotaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the quota increase requests for the specified quota.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListRequestedServiceQuotaChangeHistoryByQuotaRequest} listRequestedServiceQuotaChangeHistoryByQuotaRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listRequestedServiceQuotaChangeHistoryByQuotaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListRequestedServiceQuotaChangeHistoryByQuotaResponse}
     */
    listRequestedServiceQuotaChangeHistoryByQuota(xAmzTarget, listRequestedServiceQuotaChangeHistoryByQuotaRequest, opts, callback) {
      opts = opts || {};
      let postBody = listRequestedServiceQuotaChangeHistoryByQuotaRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listRequestedServiceQuotaChangeHistoryByQuota");
      }
      // verify the required parameter 'listRequestedServiceQuotaChangeHistoryByQuotaRequest' is set
      if (listRequestedServiceQuotaChangeHistoryByQuotaRequest === undefined || listRequestedServiceQuotaChangeHistoryByQuotaRequest === null) {
        throw new Error("Missing the required parameter 'listRequestedServiceQuotaChangeHistoryByQuotaRequest' when calling listRequestedServiceQuotaChangeHistoryByQuota");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListRequestedServiceQuotaChangeHistoryByQuotaResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListRequestedServiceQuotaChangeHistoryByQuota', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listServiceQuotaIncreaseRequestsInTemplate operation.
     * @callback module:api/DefaultApi~listServiceQuotaIncreaseRequestsInTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServiceQuotaIncreaseRequestsInTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the quota increase requests in the specified quota request template.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListServiceQuotaIncreaseRequestsInTemplateRequest} listServiceQuotaIncreaseRequestsInTemplateRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listServiceQuotaIncreaseRequestsInTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServiceQuotaIncreaseRequestsInTemplateResponse}
     */
    listServiceQuotaIncreaseRequestsInTemplate(xAmzTarget, listServiceQuotaIncreaseRequestsInTemplateRequest, opts, callback) {
      opts = opts || {};
      let postBody = listServiceQuotaIncreaseRequestsInTemplateRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listServiceQuotaIncreaseRequestsInTemplate");
      }
      // verify the required parameter 'listServiceQuotaIncreaseRequestsInTemplateRequest' is set
      if (listServiceQuotaIncreaseRequestsInTemplateRequest === undefined || listServiceQuotaIncreaseRequestsInTemplateRequest === null) {
        throw new Error("Missing the required parameter 'listServiceQuotaIncreaseRequestsInTemplateRequest' when calling listServiceQuotaIncreaseRequestsInTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListServiceQuotaIncreaseRequestsInTemplateResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListServiceQuotaIncreaseRequestsInTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listServiceQuotas operation.
     * @callback module:api/DefaultApi~listServiceQuotasCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServiceQuotasResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the applied quota values for the specified AWS service. For some quotas, only the default values are available. If the applied quota value is not available for a quota, the quota is not retrieved.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListServiceQuotasRequest} listServiceQuotasRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listServiceQuotasCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServiceQuotasResponse}
     */
    listServiceQuotas(xAmzTarget, listServiceQuotasRequest, opts, callback) {
      opts = opts || {};
      let postBody = listServiceQuotasRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listServiceQuotas");
      }
      // verify the required parameter 'listServiceQuotasRequest' is set
      if (listServiceQuotasRequest === undefined || listServiceQuotasRequest === null) {
        throw new Error("Missing the required parameter 'listServiceQuotasRequest' when calling listServiceQuotas");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListServiceQuotasResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListServiceQuotas', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listServices operation.
     * @callback module:api/DefaultApi~listServicesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the names and codes for the services integrated with Service Quotas.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListServicesRequest} listServicesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listServicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServicesResponse}
     */
    listServices(xAmzTarget, listServicesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listServicesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listServices");
      }
      // verify the required parameter 'listServicesRequest' is set
      if (listServicesRequest === undefined || listServicesRequest === null) {
        throw new Error("Missing the required parameter 'listServicesRequest' when calling listServices");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListServicesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListServices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of the tags assigned to the specified applied quota.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ListTagsForResourceRequest} listTagsForResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(xAmzTarget, listTagsForResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTagsForResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling listTagsForResource");
      }
      // verify the required parameter 'listTagsForResourceRequest' is set
      if (listTagsForResourceRequest === undefined || listTagsForResourceRequest === null) {
        throw new Error("Missing the required parameter 'listTagsForResourceRequest' when calling listTagsForResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.ListTagsForResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putServiceQuotaIncreaseRequestIntoTemplate operation.
     * @callback module:api/DefaultApi~putServiceQuotaIncreaseRequestIntoTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutServiceQuotaIncreaseRequestIntoTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a quota increase request to your quota request template.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/PutServiceQuotaIncreaseRequestIntoTemplateRequest} putServiceQuotaIncreaseRequestIntoTemplateRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putServiceQuotaIncreaseRequestIntoTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutServiceQuotaIncreaseRequestIntoTemplateResponse}
     */
    putServiceQuotaIncreaseRequestIntoTemplate(xAmzTarget, putServiceQuotaIncreaseRequestIntoTemplateRequest, opts, callback) {
      opts = opts || {};
      let postBody = putServiceQuotaIncreaseRequestIntoTemplateRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling putServiceQuotaIncreaseRequestIntoTemplate");
      }
      // verify the required parameter 'putServiceQuotaIncreaseRequestIntoTemplateRequest' is set
      if (putServiceQuotaIncreaseRequestIntoTemplateRequest === undefined || putServiceQuotaIncreaseRequestIntoTemplateRequest === null) {
        throw new Error("Missing the required parameter 'putServiceQuotaIncreaseRequestIntoTemplateRequest' when calling putServiceQuotaIncreaseRequestIntoTemplate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutServiceQuotaIncreaseRequestIntoTemplateResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.PutServiceQuotaIncreaseRequestIntoTemplate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestServiceQuotaIncrease operation.
     * @callback module:api/DefaultApi~requestServiceQuotaIncreaseCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RequestServiceQuotaIncreaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submits a quota increase request for the specified quota.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/RequestServiceQuotaIncreaseRequest} requestServiceQuotaIncreaseRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~requestServiceQuotaIncreaseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RequestServiceQuotaIncreaseResponse}
     */
    requestServiceQuotaIncrease(xAmzTarget, requestServiceQuotaIncreaseRequest, opts, callback) {
      opts = opts || {};
      let postBody = requestServiceQuotaIncreaseRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling requestServiceQuotaIncrease");
      }
      // verify the required parameter 'requestServiceQuotaIncreaseRequest' is set
      if (requestServiceQuotaIncreaseRequest === undefined || requestServiceQuotaIncreaseRequest === null) {
        throw new Error("Missing the required parameter 'requestServiceQuotaIncreaseRequest' when calling requestServiceQuotaIncrease");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RequestServiceQuotaIncreaseResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.RequestServiceQuotaIncrease', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds tags to the specified applied quota. You can include one or more tags to add to the quota.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(xAmzTarget, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.TagResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes tags from the specified applied quota. You can specify one or more tags to remove.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UntagResourceRequest} untagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(xAmzTarget, untagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagResourceRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling untagResource");
      }
      // verify the required parameter 'untagResourceRequest' is set
      if (untagResourceRequest === undefined || untagResourceRequest === null) {
        throw new Error("Missing the required parameter 'untagResourceRequest' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=ServiceQuotasV20190624.UntagResource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
