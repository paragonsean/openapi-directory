/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceQuotas);
  }
}(this, function(expect, ServiceQuotas) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceQuotas.RequestedServiceQuotaChange();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RequestedServiceQuotaChange', function() {
    it('should create an instance of RequestedServiceQuotaChange', function() {
      // uncomment below and update the code to test RequestedServiceQuotaChange
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be.a(ServiceQuotas.RequestedServiceQuotaChange);
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property caseId (base name: "CaseId")', function() {
      // uncomment below and update the code to test the property caseId
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property serviceCode (base name: "ServiceCode")', function() {
      // uncomment below and update the code to test the property serviceCode
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property serviceName (base name: "ServiceName")', function() {
      // uncomment below and update the code to test the property serviceName
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property quotaCode (base name: "QuotaCode")', function() {
      // uncomment below and update the code to test the property quotaCode
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property quotaName (base name: "QuotaName")', function() {
      // uncomment below and update the code to test the property quotaName
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property desiredValue (base name: "DesiredValue")', function() {
      // uncomment below and update the code to test the property desiredValue
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "Created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "LastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property requester (base name: "Requester")', function() {
      // uncomment below and update the code to test the property requester
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property quotaArn (base name: "QuotaArn")', function() {
      // uncomment below and update the code to test the property quotaArn
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property globalQuota (base name: "GlobalQuota")', function() {
      // uncomment below and update the code to test the property globalQuota
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "Unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instance = new ServiceQuotas.RequestedServiceQuotaChange();
      //expect(instance).to.be();
    });

  });

}));
