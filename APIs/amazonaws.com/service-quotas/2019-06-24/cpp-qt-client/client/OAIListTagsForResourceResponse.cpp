/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTagsForResourceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTagsForResourceResponse::OAIListTagsForResourceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTagsForResourceResponse::OAIListTagsForResourceResponse() {
    this->initializeModel();
}

OAIListTagsForResourceResponse::~OAIListTagsForResourceResponse() {}

void OAIListTagsForResourceResponse::initializeModel() {

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIListTagsForResourceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTagsForResourceResponse::fromJsonObject(QJsonObject json) {

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIListTagsForResourceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTagsForResourceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QList OAIListTagsForResourceResponse::getTags() const {
    return m_tags;
}
void OAIListTagsForResourceResponse::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIListTagsForResourceResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIListTagsForResourceResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIListTagsForResourceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTagsForResourceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
