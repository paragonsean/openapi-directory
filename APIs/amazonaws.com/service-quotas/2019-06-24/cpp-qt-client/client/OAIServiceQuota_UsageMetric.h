/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceQuota_UsageMetric.h
 *
 * 
 */

#ifndef OAIServiceQuota_UsageMetric_H
#define OAIServiceQuota_UsageMetric_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServiceQuota_UsageMetric : public OAIObject {
public:
    OAIServiceQuota_UsageMetric();
    OAIServiceQuota_UsageMetric(QString json);
    ~OAIServiceQuota_UsageMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMetricNamespace() const;
    void setMetricNamespace(const QString &metric_namespace);
    bool is_metric_namespace_Set() const;
    bool is_metric_namespace_Valid() const;

    QString getMetricName() const;
    void setMetricName(const QString &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    QMap getMetricDimensions() const;
    void setMetricDimensions(const QMap &metric_dimensions);
    bool is_metric_dimensions_Set() const;
    bool is_metric_dimensions_Valid() const;

    QString getMetricStatisticRecommendation() const;
    void setMetricStatisticRecommendation(const QString &metric_statistic_recommendation);
    bool is_metric_statistic_recommendation_Set() const;
    bool is_metric_statistic_recommendation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_metric_namespace;
    bool m_metric_namespace_isSet;
    bool m_metric_namespace_isValid;

    QString m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    QMap m_metric_dimensions;
    bool m_metric_dimensions_isSet;
    bool m_metric_dimensions_isValid;

    QString m_metric_statistic_recommendation;
    bool m_metric_statistic_recommendation_isSet;
    bool m_metric_statistic_recommendation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceQuota_UsageMetric)

#endif // OAIServiceQuota_UsageMetric_H
