/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestServiceQuotaIncreaseRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestServiceQuotaIncreaseRequest::OAIRequestServiceQuotaIncreaseRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestServiceQuotaIncreaseRequest::OAIRequestServiceQuotaIncreaseRequest() {
    this->initializeModel();
}

OAIRequestServiceQuotaIncreaseRequest::~OAIRequestServiceQuotaIncreaseRequest() {}

void OAIRequestServiceQuotaIncreaseRequest::initializeModel() {

    m_service_code_isSet = false;
    m_service_code_isValid = false;

    m_quota_code_isSet = false;
    m_quota_code_isValid = false;

    m_desired_value_isSet = false;
    m_desired_value_isValid = false;
}

void OAIRequestServiceQuotaIncreaseRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequestServiceQuotaIncreaseRequest::fromJsonObject(QJsonObject json) {

    m_service_code_isValid = ::OpenAPI::fromJsonValue(m_service_code, json[QString("ServiceCode")]);
    m_service_code_isSet = !json[QString("ServiceCode")].isNull() && m_service_code_isValid;

    m_quota_code_isValid = ::OpenAPI::fromJsonValue(m_quota_code, json[QString("QuotaCode")]);
    m_quota_code_isSet = !json[QString("QuotaCode")].isNull() && m_quota_code_isValid;

    m_desired_value_isValid = ::OpenAPI::fromJsonValue(m_desired_value, json[QString("DesiredValue")]);
    m_desired_value_isSet = !json[QString("DesiredValue")].isNull() && m_desired_value_isValid;
}

QString OAIRequestServiceQuotaIncreaseRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequestServiceQuotaIncreaseRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_service_code_isSet) {
        obj.insert(QString("ServiceCode"), ::OpenAPI::toJsonValue(m_service_code));
    }
    if (m_quota_code_isSet) {
        obj.insert(QString("QuotaCode"), ::OpenAPI::toJsonValue(m_quota_code));
    }
    if (m_desired_value_isSet) {
        obj.insert(QString("DesiredValue"), ::OpenAPI::toJsonValue(m_desired_value));
    }
    return obj;
}

QString OAIRequestServiceQuotaIncreaseRequest::getServiceCode() const {
    return m_service_code;
}
void OAIRequestServiceQuotaIncreaseRequest::setServiceCode(const QString &service_code) {
    m_service_code = service_code;
    m_service_code_isSet = true;
}

bool OAIRequestServiceQuotaIncreaseRequest::is_service_code_Set() const{
    return m_service_code_isSet;
}

bool OAIRequestServiceQuotaIncreaseRequest::is_service_code_Valid() const{
    return m_service_code_isValid;
}

QString OAIRequestServiceQuotaIncreaseRequest::getQuotaCode() const {
    return m_quota_code;
}
void OAIRequestServiceQuotaIncreaseRequest::setQuotaCode(const QString &quota_code) {
    m_quota_code = quota_code;
    m_quota_code_isSet = true;
}

bool OAIRequestServiceQuotaIncreaseRequest::is_quota_code_Set() const{
    return m_quota_code_isSet;
}

bool OAIRequestServiceQuotaIncreaseRequest::is_quota_code_Valid() const{
    return m_quota_code_isValid;
}

double OAIRequestServiceQuotaIncreaseRequest::getDesiredValue() const {
    return m_desired_value;
}
void OAIRequestServiceQuotaIncreaseRequest::setDesiredValue(const double &desired_value) {
    m_desired_value = desired_value;
    m_desired_value_isSet = true;
}

bool OAIRequestServiceQuotaIncreaseRequest::is_desired_value_Set() const{
    return m_desired_value_isSet;
}

bool OAIRequestServiceQuotaIncreaseRequest::is_desired_value_Valid() const{
    return m_desired_value_isValid;
}

bool OAIRequestServiceQuotaIncreaseRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desired_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequestServiceQuotaIncreaseRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_service_code_isValid && m_quota_code_isValid && m_desired_value_isValid && true;
}

} // namespace OpenAPI
