/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestStatus::OAIRequestStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestStatus::OAIRequestStatus() {
    this->initializeModel();
}

OAIRequestStatus::~OAIRequestStatus() {}

void OAIRequestStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRequestStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRequestStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASE_OPENED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestStatus::CASE_OPENED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPROVED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestStatus::APPROVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DENIED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestStatus::DENIED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASE_CLOSED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequestStatus::CASE_CLOSED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRequestStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRequestStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRequestStatus::PENDING:
            val = "PENDING";
            break;
        case eOAIRequestStatus::CASE_OPENED:
            val = "CASE_OPENED";
            break;
        case eOAIRequestStatus::APPROVED:
            val = "APPROVED";
            break;
        case eOAIRequestStatus::DENIED:
            val = "DENIED";
            break;
        case eOAIRequestStatus::CASE_CLOSED:
            val = "CASE_CLOSED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRequestStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRequestStatus::eOAIRequestStatus OAIRequestStatus::getValue() const {
    return m_value;
}

void OAIRequestStatus::setValue(const OAIRequestStatus::eOAIRequestStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRequestStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRequestStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
