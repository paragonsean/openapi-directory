/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetServiceQuotaResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetServiceQuotaResponse::OAIGetServiceQuotaResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetServiceQuotaResponse::OAIGetServiceQuotaResponse() {
    this->initializeModel();
}

OAIGetServiceQuotaResponse::~OAIGetServiceQuotaResponse() {}

void OAIGetServiceQuotaResponse::initializeModel() {

    m_quota_isSet = false;
    m_quota_isValid = false;
}

void OAIGetServiceQuotaResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetServiceQuotaResponse::fromJsonObject(QJsonObject json) {

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("Quota")]);
    m_quota_isSet = !json[QString("Quota")].isNull() && m_quota_isValid;
}

QString OAIGetServiceQuotaResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetServiceQuotaResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_quota.isSet()) {
        obj.insert(QString("Quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    return obj;
}

OAIGetAWSDefaultServiceQuotaResponse_Quota OAIGetServiceQuotaResponse::getQuota() const {
    return m_quota;
}
void OAIGetServiceQuotaResponse::setQuota(const OAIGetAWSDefaultServiceQuotaResponse_Quota &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIGetServiceQuotaResponse::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIGetServiceQuotaResponse::is_quota_Valid() const{
    return m_quota_isValid;
}

bool OAIGetServiceQuotaResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetServiceQuotaResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
