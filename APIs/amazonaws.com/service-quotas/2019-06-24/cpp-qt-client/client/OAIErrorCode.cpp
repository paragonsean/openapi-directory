/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErrorCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErrorCode::OAIErrorCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErrorCode::OAIErrorCode() {
    this->initializeModel();
}

OAIErrorCode::~OAIErrorCode() {}

void OAIErrorCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIErrorCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIErrorCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEPENDENCY_ACCESS_DENIED_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCode::DEPENDENCY_ACCESS_DENIED_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEPENDENCY_THROTTLING_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCode::DEPENDENCY_THROTTLING_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEPENDENCY_SERVICE_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCode::DEPENDENCY_SERVICE_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SERVICE_QUOTA_NOT_AVAILABLE_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIErrorCode::SERVICE_QUOTA_NOT_AVAILABLE_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIErrorCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIErrorCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIErrorCode::DEPENDENCY_ACCESS_DENIED_ERROR:
            val = "DEPENDENCY_ACCESS_DENIED_ERROR";
            break;
        case eOAIErrorCode::DEPENDENCY_THROTTLING_ERROR:
            val = "DEPENDENCY_THROTTLING_ERROR";
            break;
        case eOAIErrorCode::DEPENDENCY_SERVICE_ERROR:
            val = "DEPENDENCY_SERVICE_ERROR";
            break;
        case eOAIErrorCode::SERVICE_QUOTA_NOT_AVAILABLE_ERROR:
            val = "SERVICE_QUOTA_NOT_AVAILABLE_ERROR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIErrorCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIErrorCode::eOAIErrorCode OAIErrorCode::getValue() const {
    return m_value;
}

void OAIErrorCode::setValue(const OAIErrorCode::eOAIErrorCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIErrorCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIErrorCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
