/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestServiceQuotaIncreaseResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestServiceQuotaIncreaseResponse::OAIRequestServiceQuotaIncreaseResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestServiceQuotaIncreaseResponse::OAIRequestServiceQuotaIncreaseResponse() {
    this->initializeModel();
}

OAIRequestServiceQuotaIncreaseResponse::~OAIRequestServiceQuotaIncreaseResponse() {}

void OAIRequestServiceQuotaIncreaseResponse::initializeModel() {

    m_requested_quota_isSet = false;
    m_requested_quota_isValid = false;
}

void OAIRequestServiceQuotaIncreaseResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequestServiceQuotaIncreaseResponse::fromJsonObject(QJsonObject json) {

    m_requested_quota_isValid = ::OpenAPI::fromJsonValue(m_requested_quota, json[QString("RequestedQuota")]);
    m_requested_quota_isSet = !json[QString("RequestedQuota")].isNull() && m_requested_quota_isValid;
}

QString OAIRequestServiceQuotaIncreaseResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequestServiceQuotaIncreaseResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_requested_quota.isSet()) {
        obj.insert(QString("RequestedQuota"), ::OpenAPI::toJsonValue(m_requested_quota));
    }
    return obj;
}

OAIGetRequestedServiceQuotaChangeResponse_RequestedQuota OAIRequestServiceQuotaIncreaseResponse::getRequestedQuota() const {
    return m_requested_quota;
}
void OAIRequestServiceQuotaIncreaseResponse::setRequestedQuota(const OAIGetRequestedServiceQuotaChangeResponse_RequestedQuota &requested_quota) {
    m_requested_quota = requested_quota;
    m_requested_quota_isSet = true;
}

bool OAIRequestServiceQuotaIncreaseResponse::is_requested_quota_Set() const{
    return m_requested_quota_isSet;
}

bool OAIRequestServiceQuotaIncreaseResponse::is_requested_quota_Valid() const{
    return m_requested_quota_isValid;
}

bool OAIRequestServiceQuotaIncreaseResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_requested_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequestServiceQuotaIncreaseResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
