/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest() {
    this->initializeModel();
}

OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::~OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest() {}

void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::initializeModel() {

    m_quota_code_isSet = false;
    m_quota_code_isValid = false;

    m_service_code_isSet = false;
    m_service_code_isValid = false;

    m_aws_region_isSet = false;
    m_aws_region_isValid = false;

    m_desired_value_isSet = false;
    m_desired_value_isValid = false;
}

void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::fromJsonObject(QJsonObject json) {

    m_quota_code_isValid = ::OpenAPI::fromJsonValue(m_quota_code, json[QString("QuotaCode")]);
    m_quota_code_isSet = !json[QString("QuotaCode")].isNull() && m_quota_code_isValid;

    m_service_code_isValid = ::OpenAPI::fromJsonValue(m_service_code, json[QString("ServiceCode")]);
    m_service_code_isSet = !json[QString("ServiceCode")].isNull() && m_service_code_isValid;

    m_aws_region_isValid = ::OpenAPI::fromJsonValue(m_aws_region, json[QString("AwsRegion")]);
    m_aws_region_isSet = !json[QString("AwsRegion")].isNull() && m_aws_region_isValid;

    m_desired_value_isValid = ::OpenAPI::fromJsonValue(m_desired_value, json[QString("DesiredValue")]);
    m_desired_value_isSet = !json[QString("DesiredValue")].isNull() && m_desired_value_isValid;
}

QString OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_quota_code_isSet) {
        obj.insert(QString("QuotaCode"), ::OpenAPI::toJsonValue(m_quota_code));
    }
    if (m_service_code_isSet) {
        obj.insert(QString("ServiceCode"), ::OpenAPI::toJsonValue(m_service_code));
    }
    if (m_aws_region_isSet) {
        obj.insert(QString("AwsRegion"), ::OpenAPI::toJsonValue(m_aws_region));
    }
    if (m_desired_value_isSet) {
        obj.insert(QString("DesiredValue"), ::OpenAPI::toJsonValue(m_desired_value));
    }
    return obj;
}

QString OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::getQuotaCode() const {
    return m_quota_code;
}
void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::setQuotaCode(const QString &quota_code) {
    m_quota_code = quota_code;
    m_quota_code_isSet = true;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_quota_code_Set() const{
    return m_quota_code_isSet;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_quota_code_Valid() const{
    return m_quota_code_isValid;
}

QString OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::getServiceCode() const {
    return m_service_code;
}
void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::setServiceCode(const QString &service_code) {
    m_service_code = service_code;
    m_service_code_isSet = true;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_service_code_Set() const{
    return m_service_code_isSet;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_service_code_Valid() const{
    return m_service_code_isValid;
}

QString OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::getAwsRegion() const {
    return m_aws_region;
}
void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::setAwsRegion(const QString &aws_region) {
    m_aws_region = aws_region;
    m_aws_region_isSet = true;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_aws_region_Set() const{
    return m_aws_region_isSet;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_aws_region_Valid() const{
    return m_aws_region_isValid;
}

double OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::getDesiredValue() const {
    return m_desired_value;
}
void OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::setDesiredValue(const double &desired_value) {
    m_desired_value = desired_value;
    m_desired_value_isSet = true;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_desired_value_Set() const{
    return m_desired_value_isSet;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::is_desired_value_Valid() const{
    return m_desired_value_isValid;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quota_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desired_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_quota_code_isValid && m_service_code_isValid && m_aws_region_isValid && m_desired_value_isValid && true;
}

} // namespace OpenAPI
