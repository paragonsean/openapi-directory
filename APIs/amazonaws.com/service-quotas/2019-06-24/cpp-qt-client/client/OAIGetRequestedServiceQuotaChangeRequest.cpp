/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRequestedServiceQuotaChangeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRequestedServiceQuotaChangeRequest::OAIGetRequestedServiceQuotaChangeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRequestedServiceQuotaChangeRequest::OAIGetRequestedServiceQuotaChangeRequest() {
    this->initializeModel();
}

OAIGetRequestedServiceQuotaChangeRequest::~OAIGetRequestedServiceQuotaChangeRequest() {}

void OAIGetRequestedServiceQuotaChangeRequest::initializeModel() {

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIGetRequestedServiceQuotaChangeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRequestedServiceQuotaChangeRequest::fromJsonObject(QJsonObject json) {

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("RequestId")]);
    m_request_id_isSet = !json[QString("RequestId")].isNull() && m_request_id_isValid;
}

QString OAIGetRequestedServiceQuotaChangeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRequestedServiceQuotaChangeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_request_id_isSet) {
        obj.insert(QString("RequestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QString OAIGetRequestedServiceQuotaChangeRequest::getRequestId() const {
    return m_request_id;
}
void OAIGetRequestedServiceQuotaChangeRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIGetRequestedServiceQuotaChangeRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIGetRequestedServiceQuotaChangeRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIGetRequestedServiceQuotaChangeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRequestedServiceQuotaChangeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_request_id_isValid && true;
}

} // namespace OpenAPI
