/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse() {
    this->initializeModel();
}

OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::~OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse() {}

void OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::initializeModel() {

    m_service_quota_increase_request_in_template_isSet = false;
    m_service_quota_increase_request_in_template_isValid = false;
}

void OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::fromJsonObject(QJsonObject json) {

    m_service_quota_increase_request_in_template_isValid = ::OpenAPI::fromJsonValue(m_service_quota_increase_request_in_template, json[QString("ServiceQuotaIncreaseRequestInTemplate")]);
    m_service_quota_increase_request_in_template_isSet = !json[QString("ServiceQuotaIncreaseRequestInTemplate")].isNull() && m_service_quota_increase_request_in_template_isValid;
}

QString OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_service_quota_increase_request_in_template.isSet()) {
        obj.insert(QString("ServiceQuotaIncreaseRequestInTemplate"), ::OpenAPI::toJsonValue(m_service_quota_increase_request_in_template));
    }
    return obj;
}

OAIGetServiceQuotaIncreaseRequestFromTemplateResponse_ServiceQuotaIncreaseRequestInTemplate OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::getServiceQuotaIncreaseRequestInTemplate() const {
    return m_service_quota_increase_request_in_template;
}
void OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::setServiceQuotaIncreaseRequestInTemplate(const OAIGetServiceQuotaIncreaseRequestFromTemplateResponse_ServiceQuotaIncreaseRequestInTemplate &service_quota_increase_request_in_template) {
    m_service_quota_increase_request_in_template = service_quota_increase_request_in_template;
    m_service_quota_increase_request_in_template_isSet = true;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::is_service_quota_increase_request_in_template_Set() const{
    return m_service_quota_increase_request_in_template_isSet;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::is_service_quota_increase_request_in_template_Valid() const{
    return m_service_quota_increase_request_in_template_isValid;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_quota_increase_request_in_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutServiceQuotaIncreaseRequestIntoTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
