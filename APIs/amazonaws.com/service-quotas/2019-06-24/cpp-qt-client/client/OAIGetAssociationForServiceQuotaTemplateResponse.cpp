/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAssociationForServiceQuotaTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAssociationForServiceQuotaTemplateResponse::OAIGetAssociationForServiceQuotaTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAssociationForServiceQuotaTemplateResponse::OAIGetAssociationForServiceQuotaTemplateResponse() {
    this->initializeModel();
}

OAIGetAssociationForServiceQuotaTemplateResponse::~OAIGetAssociationForServiceQuotaTemplateResponse() {}

void OAIGetAssociationForServiceQuotaTemplateResponse::initializeModel() {

    m_service_quota_template_association_status_isSet = false;
    m_service_quota_template_association_status_isValid = false;
}

void OAIGetAssociationForServiceQuotaTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAssociationForServiceQuotaTemplateResponse::fromJsonObject(QJsonObject json) {

    m_service_quota_template_association_status_isValid = ::OpenAPI::fromJsonValue(m_service_quota_template_association_status, json[QString("ServiceQuotaTemplateAssociationStatus")]);
    m_service_quota_template_association_status_isSet = !json[QString("ServiceQuotaTemplateAssociationStatus")].isNull() && m_service_quota_template_association_status_isValid;
}

QString OAIGetAssociationForServiceQuotaTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAssociationForServiceQuotaTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_service_quota_template_association_status.isSet()) {
        obj.insert(QString("ServiceQuotaTemplateAssociationStatus"), ::OpenAPI::toJsonValue(m_service_quota_template_association_status));
    }
    return obj;
}

OAIServiceQuotaTemplateAssociationStatus OAIGetAssociationForServiceQuotaTemplateResponse::getServiceQuotaTemplateAssociationStatus() const {
    return m_service_quota_template_association_status;
}
void OAIGetAssociationForServiceQuotaTemplateResponse::setServiceQuotaTemplateAssociationStatus(const OAIServiceQuotaTemplateAssociationStatus &service_quota_template_association_status) {
    m_service_quota_template_association_status = service_quota_template_association_status;
    m_service_quota_template_association_status_isSet = true;
}

bool OAIGetAssociationForServiceQuotaTemplateResponse::is_service_quota_template_association_status_Set() const{
    return m_service_quota_template_association_status_isSet;
}

bool OAIGetAssociationForServiceQuotaTemplateResponse::is_service_quota_template_association_status_Valid() const{
    return m_service_quota_template_association_status_isValid;
}

bool OAIGetAssociationForServiceQuotaTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_quota_template_association_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAssociationForServiceQuotaTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
