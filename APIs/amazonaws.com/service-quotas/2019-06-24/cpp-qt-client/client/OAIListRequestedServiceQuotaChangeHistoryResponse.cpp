/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListRequestedServiceQuotaChangeHistoryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListRequestedServiceQuotaChangeHistoryResponse::OAIListRequestedServiceQuotaChangeHistoryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListRequestedServiceQuotaChangeHistoryResponse::OAIListRequestedServiceQuotaChangeHistoryResponse() {
    this->initializeModel();
}

OAIListRequestedServiceQuotaChangeHistoryResponse::~OAIListRequestedServiceQuotaChangeHistoryResponse() {}

void OAIListRequestedServiceQuotaChangeHistoryResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_requested_quotas_isSet = false;
    m_requested_quotas_isValid = false;
}

void OAIListRequestedServiceQuotaChangeHistoryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListRequestedServiceQuotaChangeHistoryResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_requested_quotas_isValid = ::OpenAPI::fromJsonValue(m_requested_quotas, json[QString("RequestedQuotas")]);
    m_requested_quotas_isSet = !json[QString("RequestedQuotas")].isNull() && m_requested_quotas_isValid;
}

QString OAIListRequestedServiceQuotaChangeHistoryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListRequestedServiceQuotaChangeHistoryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_requested_quotas.isSet()) {
        obj.insert(QString("RequestedQuotas"), ::OpenAPI::toJsonValue(m_requested_quotas));
    }
    return obj;
}

QString OAIListRequestedServiceQuotaChangeHistoryResponse::getNextToken() const {
    return m_next_token;
}
void OAIListRequestedServiceQuotaChangeHistoryResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListRequestedServiceQuotaChangeHistoryResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListRequestedServiceQuotaChangeHistoryResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListRequestedServiceQuotaChangeHistoryResponse::getRequestedQuotas() const {
    return m_requested_quotas;
}
void OAIListRequestedServiceQuotaChangeHistoryResponse::setRequestedQuotas(const QList &requested_quotas) {
    m_requested_quotas = requested_quotas;
    m_requested_quotas_isSet = true;
}

bool OAIListRequestedServiceQuotaChangeHistoryResponse::is_requested_quotas_Set() const{
    return m_requested_quotas_isSet;
}

bool OAIListRequestedServiceQuotaChangeHistoryResponse::is_requested_quotas_Valid() const{
    return m_requested_quotas_isValid;
}

bool OAIListRequestedServiceQuotaChangeHistoryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requested_quotas.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListRequestedServiceQuotaChangeHistoryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
