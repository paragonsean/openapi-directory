/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRequestedServiceQuotaChangeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRequestedServiceQuotaChangeResponse::OAIGetRequestedServiceQuotaChangeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRequestedServiceQuotaChangeResponse::OAIGetRequestedServiceQuotaChangeResponse() {
    this->initializeModel();
}

OAIGetRequestedServiceQuotaChangeResponse::~OAIGetRequestedServiceQuotaChangeResponse() {}

void OAIGetRequestedServiceQuotaChangeResponse::initializeModel() {

    m_requested_quota_isSet = false;
    m_requested_quota_isValid = false;
}

void OAIGetRequestedServiceQuotaChangeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRequestedServiceQuotaChangeResponse::fromJsonObject(QJsonObject json) {

    m_requested_quota_isValid = ::OpenAPI::fromJsonValue(m_requested_quota, json[QString("RequestedQuota")]);
    m_requested_quota_isSet = !json[QString("RequestedQuota")].isNull() && m_requested_quota_isValid;
}

QString OAIGetRequestedServiceQuotaChangeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRequestedServiceQuotaChangeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_requested_quota.isSet()) {
        obj.insert(QString("RequestedQuota"), ::OpenAPI::toJsonValue(m_requested_quota));
    }
    return obj;
}

OAIGetRequestedServiceQuotaChangeResponse_RequestedQuota OAIGetRequestedServiceQuotaChangeResponse::getRequestedQuota() const {
    return m_requested_quota;
}
void OAIGetRequestedServiceQuotaChangeResponse::setRequestedQuota(const OAIGetRequestedServiceQuotaChangeResponse_RequestedQuota &requested_quota) {
    m_requested_quota = requested_quota;
    m_requested_quota_isSet = true;
}

bool OAIGetRequestedServiceQuotaChangeResponse::is_requested_quota_Set() const{
    return m_requested_quota_isSet;
}

bool OAIGetRequestedServiceQuotaChangeResponse::is_requested_quota_Valid() const{
    return m_requested_quota_isValid;
}

bool OAIGetRequestedServiceQuotaChangeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_requested_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRequestedServiceQuotaChangeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
