/**
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceQuotaIncreaseRequestInTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceQuotaIncreaseRequestInTemplate::OAIServiceQuotaIncreaseRequestInTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceQuotaIncreaseRequestInTemplate::OAIServiceQuotaIncreaseRequestInTemplate() {
    this->initializeModel();
}

OAIServiceQuotaIncreaseRequestInTemplate::~OAIServiceQuotaIncreaseRequestInTemplate() {}

void OAIServiceQuotaIncreaseRequestInTemplate::initializeModel() {

    m_service_code_isSet = false;
    m_service_code_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;

    m_quota_code_isSet = false;
    m_quota_code_isValid = false;

    m_quota_name_isSet = false;
    m_quota_name_isValid = false;

    m_desired_value_isSet = false;
    m_desired_value_isValid = false;

    m_aws_region_isSet = false;
    m_aws_region_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;

    m_global_quota_isSet = false;
    m_global_quota_isValid = false;
}

void OAIServiceQuotaIncreaseRequestInTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceQuotaIncreaseRequestInTemplate::fromJsonObject(QJsonObject json) {

    m_service_code_isValid = ::OpenAPI::fromJsonValue(m_service_code, json[QString("ServiceCode")]);
    m_service_code_isSet = !json[QString("ServiceCode")].isNull() && m_service_code_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("ServiceName")]);
    m_service_name_isSet = !json[QString("ServiceName")].isNull() && m_service_name_isValid;

    m_quota_code_isValid = ::OpenAPI::fromJsonValue(m_quota_code, json[QString("QuotaCode")]);
    m_quota_code_isSet = !json[QString("QuotaCode")].isNull() && m_quota_code_isValid;

    m_quota_name_isValid = ::OpenAPI::fromJsonValue(m_quota_name, json[QString("QuotaName")]);
    m_quota_name_isSet = !json[QString("QuotaName")].isNull() && m_quota_name_isValid;

    m_desired_value_isValid = ::OpenAPI::fromJsonValue(m_desired_value, json[QString("DesiredValue")]);
    m_desired_value_isSet = !json[QString("DesiredValue")].isNull() && m_desired_value_isValid;

    m_aws_region_isValid = ::OpenAPI::fromJsonValue(m_aws_region, json[QString("AwsRegion")]);
    m_aws_region_isSet = !json[QString("AwsRegion")].isNull() && m_aws_region_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("Unit")]);
    m_unit_isSet = !json[QString("Unit")].isNull() && m_unit_isValid;

    m_global_quota_isValid = ::OpenAPI::fromJsonValue(m_global_quota, json[QString("GlobalQuota")]);
    m_global_quota_isSet = !json[QString("GlobalQuota")].isNull() && m_global_quota_isValid;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceQuotaIncreaseRequestInTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_service_code_isSet) {
        obj.insert(QString("ServiceCode"), ::OpenAPI::toJsonValue(m_service_code));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("ServiceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    if (m_quota_code_isSet) {
        obj.insert(QString("QuotaCode"), ::OpenAPI::toJsonValue(m_quota_code));
    }
    if (m_quota_name_isSet) {
        obj.insert(QString("QuotaName"), ::OpenAPI::toJsonValue(m_quota_name));
    }
    if (m_desired_value_isSet) {
        obj.insert(QString("DesiredValue"), ::OpenAPI::toJsonValue(m_desired_value));
    }
    if (m_aws_region_isSet) {
        obj.insert(QString("AwsRegion"), ::OpenAPI::toJsonValue(m_aws_region));
    }
    if (m_unit_isSet) {
        obj.insert(QString("Unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    if (m_global_quota_isSet) {
        obj.insert(QString("GlobalQuota"), ::OpenAPI::toJsonValue(m_global_quota));
    }
    return obj;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::getServiceCode() const {
    return m_service_code;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setServiceCode(const QString &service_code) {
    m_service_code = service_code;
    m_service_code_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_service_code_Set() const{
    return m_service_code_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_service_code_Valid() const{
    return m_service_code_isValid;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::getServiceName() const {
    return m_service_name;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_service_name_Valid() const{
    return m_service_name_isValid;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::getQuotaCode() const {
    return m_quota_code;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setQuotaCode(const QString &quota_code) {
    m_quota_code = quota_code;
    m_quota_code_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_quota_code_Set() const{
    return m_quota_code_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_quota_code_Valid() const{
    return m_quota_code_isValid;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::getQuotaName() const {
    return m_quota_name;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setQuotaName(const QString &quota_name) {
    m_quota_name = quota_name;
    m_quota_name_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_quota_name_Set() const{
    return m_quota_name_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_quota_name_Valid() const{
    return m_quota_name_isValid;
}

double OAIServiceQuotaIncreaseRequestInTemplate::getDesiredValue() const {
    return m_desired_value;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setDesiredValue(const double &desired_value) {
    m_desired_value = desired_value;
    m_desired_value_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_desired_value_Set() const{
    return m_desired_value_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_desired_value_Valid() const{
    return m_desired_value_isValid;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::getAwsRegion() const {
    return m_aws_region;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setAwsRegion(const QString &aws_region) {
    m_aws_region = aws_region;
    m_aws_region_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_aws_region_Set() const{
    return m_aws_region_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_aws_region_Valid() const{
    return m_aws_region_isValid;
}

QString OAIServiceQuotaIncreaseRequestInTemplate::getUnit() const {
    return m_unit;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_unit_Valid() const{
    return m_unit_isValid;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::getGlobalQuota() const {
    return m_global_quota;
}
void OAIServiceQuotaIncreaseRequestInTemplate::setGlobalQuota(const bool &global_quota) {
    m_global_quota = global_quota;
    m_global_quota_isSet = true;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_global_quota_Set() const{
    return m_global_quota_isSet;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::is_global_quota_Valid() const{
    return m_global_quota_isValid;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desired_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_global_quota_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceQuotaIncreaseRequestInTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
