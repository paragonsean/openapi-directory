/*
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListRequestedServiceQuotaChangeHistoryByQuotaResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:40.825308-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListRequestedServiceQuotaChangeHistoryByQuotaResponse {
  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_REQUESTED_QUOTAS = "RequestedQuotas";
  @SerializedName(SERIALIZED_NAME_REQUESTED_QUOTAS)
  private List requestedQuotas;

  public ListRequestedServiceQuotaChangeHistoryByQuotaResponse() {
  }

  public ListRequestedServiceQuotaChangeHistoryByQuotaResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public ListRequestedServiceQuotaChangeHistoryByQuotaResponse requestedQuotas(List requestedQuotas) {
    this.requestedQuotas = requestedQuotas;
    return this;
  }

  /**
   * Get requestedQuotas
   * @return requestedQuotas
   */
  @javax.annotation.Nullable
  public List getRequestedQuotas() {
    return requestedQuotas;
  }

  public void setRequestedQuotas(List requestedQuotas) {
    this.requestedQuotas = requestedQuotas;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListRequestedServiceQuotaChangeHistoryByQuotaResponse listRequestedServiceQuotaChangeHistoryByQuotaResponse = (ListRequestedServiceQuotaChangeHistoryByQuotaResponse) o;
    return Objects.equals(this.nextToken, listRequestedServiceQuotaChangeHistoryByQuotaResponse.nextToken) &&
        Objects.equals(this.requestedQuotas, listRequestedServiceQuotaChangeHistoryByQuotaResponse.requestedQuotas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextToken, requestedQuotas);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListRequestedServiceQuotaChangeHistoryByQuotaResponse {\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    requestedQuotas: ").append(toIndentedString(requestedQuotas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("NextToken");
    openapiFields.add("RequestedQuotas");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListRequestedServiceQuotaChangeHistoryByQuotaResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListRequestedServiceQuotaChangeHistoryByQuotaResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListRequestedServiceQuotaChangeHistoryByQuotaResponse is not found in the empty JSON string", ListRequestedServiceQuotaChangeHistoryByQuotaResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListRequestedServiceQuotaChangeHistoryByQuotaResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListRequestedServiceQuotaChangeHistoryByQuotaResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
      // validate the optional field `RequestedQuotas`
      if (jsonObj.get("RequestedQuotas") != null && !jsonObj.get("RequestedQuotas").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("RequestedQuotas"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListRequestedServiceQuotaChangeHistoryByQuotaResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListRequestedServiceQuotaChangeHistoryByQuotaResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListRequestedServiceQuotaChangeHistoryByQuotaResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListRequestedServiceQuotaChangeHistoryByQuotaResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListRequestedServiceQuotaChangeHistoryByQuotaResponse>() {
           @Override
           public void write(JsonWriter out, ListRequestedServiceQuotaChangeHistoryByQuotaResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListRequestedServiceQuotaChangeHistoryByQuotaResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListRequestedServiceQuotaChangeHistoryByQuotaResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListRequestedServiceQuotaChangeHistoryByQuotaResponse
   * @throws IOException if the JSON string is invalid with respect to ListRequestedServiceQuotaChangeHistoryByQuotaResponse
   */
  public static ListRequestedServiceQuotaChangeHistoryByQuotaResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListRequestedServiceQuotaChangeHistoryByQuotaResponse.class);
  }

  /**
   * Convert an instance of ListRequestedServiceQuotaChangeHistoryByQuotaResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

