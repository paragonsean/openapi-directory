/*
 * Service Quotas
 * With Service Quotas, you can view and manage your quotas easily as your AWS workloads grow. Quotas, also referred to as limits, are the maximum number of resources that you can create in your AWS account. For more information, see the <a href=\"https://docs.aws.amazon.com/servicequotas/latest/userguide/\">Service Quotas User Guide</a>.
 *
 * The version of the OpenAPI document: 2019-06-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.RequestStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetRequestedServiceQuotaChangeResponseRequestedQuota
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:40.825308-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetRequestedServiceQuotaChangeResponseRequestedQuota {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CASE_ID = "CaseId";
  @SerializedName(SERIALIZED_NAME_CASE_ID)
  private String caseId;

  public static final String SERIALIZED_NAME_SERVICE_CODE = "ServiceCode";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODE)
  private String serviceCode;

  public static final String SERIALIZED_NAME_SERVICE_NAME = "ServiceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private String serviceName;

  public static final String SERIALIZED_NAME_QUOTA_CODE = "QuotaCode";
  @SerializedName(SERIALIZED_NAME_QUOTA_CODE)
  private String quotaCode;

  public static final String SERIALIZED_NAME_QUOTA_NAME = "QuotaName";
  @SerializedName(SERIALIZED_NAME_QUOTA_NAME)
  private String quotaName;

  public static final String SERIALIZED_NAME_DESIRED_VALUE = "DesiredValue";
  @SerializedName(SERIALIZED_NAME_DESIRED_VALUE)
  private Double desiredValue;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RequestStatus status;

  public static final String SERIALIZED_NAME_CREATED = "Created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_REQUESTER = "Requester";
  @SerializedName(SERIALIZED_NAME_REQUESTER)
  private String requester;

  public static final String SERIALIZED_NAME_QUOTA_ARN = "QuotaArn";
  @SerializedName(SERIALIZED_NAME_QUOTA_ARN)
  private String quotaArn;

  public static final String SERIALIZED_NAME_GLOBAL_QUOTA = "GlobalQuota";
  @SerializedName(SERIALIZED_NAME_GLOBAL_QUOTA)
  private Boolean globalQuota;

  public static final String SERIALIZED_NAME_UNIT = "Unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public GetRequestedServiceQuotaChangeResponseRequestedQuota() {
  }

  public GetRequestedServiceQuotaChangeResponseRequestedQuota id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota caseId(String caseId) {
    this.caseId = caseId;
    return this;
  }

  /**
   * Get caseId
   * @return caseId
   */
  @javax.annotation.Nullable
  public String getCaseId() {
    return caseId;
  }

  public void setCaseId(String caseId) {
    this.caseId = caseId;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota serviceCode(String serviceCode) {
    this.serviceCode = serviceCode;
    return this;
  }

  /**
   * Get serviceCode
   * @return serviceCode
   */
  @javax.annotation.Nullable
  public String getServiceCode() {
    return serviceCode;
  }

  public void setServiceCode(String serviceCode) {
    this.serviceCode = serviceCode;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   */
  @javax.annotation.Nullable
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota quotaCode(String quotaCode) {
    this.quotaCode = quotaCode;
    return this;
  }

  /**
   * Get quotaCode
   * @return quotaCode
   */
  @javax.annotation.Nullable
  public String getQuotaCode() {
    return quotaCode;
  }

  public void setQuotaCode(String quotaCode) {
    this.quotaCode = quotaCode;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota quotaName(String quotaName) {
    this.quotaName = quotaName;
    return this;
  }

  /**
   * Get quotaName
   * @return quotaName
   */
  @javax.annotation.Nullable
  public String getQuotaName() {
    return quotaName;
  }

  public void setQuotaName(String quotaName) {
    this.quotaName = quotaName;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota desiredValue(Double desiredValue) {
    this.desiredValue = desiredValue;
    return this;
  }

  /**
   * Get desiredValue
   * @return desiredValue
   */
  @javax.annotation.Nullable
  public Double getDesiredValue() {
    return desiredValue;
  }

  public void setDesiredValue(Double desiredValue) {
    this.desiredValue = desiredValue;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota status(RequestStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public RequestStatus getStatus() {
    return status;
  }

  public void setStatus(RequestStatus status) {
    this.status = status;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota requester(String requester) {
    this.requester = requester;
    return this;
  }

  /**
   * Get requester
   * @return requester
   */
  @javax.annotation.Nullable
  public String getRequester() {
    return requester;
  }

  public void setRequester(String requester) {
    this.requester = requester;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota quotaArn(String quotaArn) {
    this.quotaArn = quotaArn;
    return this;
  }

  /**
   * Get quotaArn
   * @return quotaArn
   */
  @javax.annotation.Nullable
  public String getQuotaArn() {
    return quotaArn;
  }

  public void setQuotaArn(String quotaArn) {
    this.quotaArn = quotaArn;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota globalQuota(Boolean globalQuota) {
    this.globalQuota = globalQuota;
    return this;
  }

  /**
   * Get globalQuota
   * @return globalQuota
   */
  @javax.annotation.Nullable
  public Boolean getGlobalQuota() {
    return globalQuota;
  }

  public void setGlobalQuota(Boolean globalQuota) {
    this.globalQuota = globalQuota;
  }


  public GetRequestedServiceQuotaChangeResponseRequestedQuota unit(String unit) {
    this.unit = unit;
    return this;
  }

  /**
   * Get unit
   * @return unit
   */
  @javax.annotation.Nullable
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRequestedServiceQuotaChangeResponseRequestedQuota getRequestedServiceQuotaChangeResponseRequestedQuota = (GetRequestedServiceQuotaChangeResponseRequestedQuota) o;
    return Objects.equals(this.id, getRequestedServiceQuotaChangeResponseRequestedQuota.id) &&
        Objects.equals(this.caseId, getRequestedServiceQuotaChangeResponseRequestedQuota.caseId) &&
        Objects.equals(this.serviceCode, getRequestedServiceQuotaChangeResponseRequestedQuota.serviceCode) &&
        Objects.equals(this.serviceName, getRequestedServiceQuotaChangeResponseRequestedQuota.serviceName) &&
        Objects.equals(this.quotaCode, getRequestedServiceQuotaChangeResponseRequestedQuota.quotaCode) &&
        Objects.equals(this.quotaName, getRequestedServiceQuotaChangeResponseRequestedQuota.quotaName) &&
        Objects.equals(this.desiredValue, getRequestedServiceQuotaChangeResponseRequestedQuota.desiredValue) &&
        Objects.equals(this.status, getRequestedServiceQuotaChangeResponseRequestedQuota.status) &&
        Objects.equals(this.created, getRequestedServiceQuotaChangeResponseRequestedQuota.created) &&
        Objects.equals(this.lastUpdated, getRequestedServiceQuotaChangeResponseRequestedQuota.lastUpdated) &&
        Objects.equals(this.requester, getRequestedServiceQuotaChangeResponseRequestedQuota.requester) &&
        Objects.equals(this.quotaArn, getRequestedServiceQuotaChangeResponseRequestedQuota.quotaArn) &&
        Objects.equals(this.globalQuota, getRequestedServiceQuotaChangeResponseRequestedQuota.globalQuota) &&
        Objects.equals(this.unit, getRequestedServiceQuotaChangeResponseRequestedQuota.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, caseId, serviceCode, serviceName, quotaCode, quotaName, desiredValue, status, created, lastUpdated, requester, quotaArn, globalQuota, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRequestedServiceQuotaChangeResponseRequestedQuota {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    quotaCode: ").append(toIndentedString(quotaCode)).append("\n");
    sb.append("    quotaName: ").append(toIndentedString(quotaName)).append("\n");
    sb.append("    desiredValue: ").append(toIndentedString(desiredValue)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    requester: ").append(toIndentedString(requester)).append("\n");
    sb.append("    quotaArn: ").append(toIndentedString(quotaArn)).append("\n");
    sb.append("    globalQuota: ").append(toIndentedString(globalQuota)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("CaseId");
    openapiFields.add("ServiceCode");
    openapiFields.add("ServiceName");
    openapiFields.add("QuotaCode");
    openapiFields.add("QuotaName");
    openapiFields.add("DesiredValue");
    openapiFields.add("Status");
    openapiFields.add("Created");
    openapiFields.add("LastUpdated");
    openapiFields.add("Requester");
    openapiFields.add("QuotaArn");
    openapiFields.add("GlobalQuota");
    openapiFields.add("Unit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetRequestedServiceQuotaChangeResponseRequestedQuota
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetRequestedServiceQuotaChangeResponseRequestedQuota.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetRequestedServiceQuotaChangeResponseRequestedQuota is not found in the empty JSON string", GetRequestedServiceQuotaChangeResponseRequestedQuota.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetRequestedServiceQuotaChangeResponseRequestedQuota.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetRequestedServiceQuotaChangeResponseRequestedQuota` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `CaseId`
      if (jsonObj.get("CaseId") != null && !jsonObj.get("CaseId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CaseId"));
      }
      // validate the optional field `ServiceCode`
      if (jsonObj.get("ServiceCode") != null && !jsonObj.get("ServiceCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceCode"));
      }
      // validate the optional field `ServiceName`
      if (jsonObj.get("ServiceName") != null && !jsonObj.get("ServiceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceName"));
      }
      // validate the optional field `QuotaCode`
      if (jsonObj.get("QuotaCode") != null && !jsonObj.get("QuotaCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("QuotaCode"));
      }
      // validate the optional field `QuotaName`
      if (jsonObj.get("QuotaName") != null && !jsonObj.get("QuotaName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("QuotaName"));
      }
      // validate the optional field `DesiredValue`
      if (jsonObj.get("DesiredValue") != null && !jsonObj.get("DesiredValue").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("DesiredValue"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        RequestStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Created`
      if (jsonObj.get("Created") != null && !jsonObj.get("Created").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("Created"));
      }
      // validate the optional field `LastUpdated`
      if (jsonObj.get("LastUpdated") != null && !jsonObj.get("LastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdated"));
      }
      // validate the optional field `Requester`
      if (jsonObj.get("Requester") != null && !jsonObj.get("Requester").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Requester"));
      }
      // validate the optional field `QuotaArn`
      if (jsonObj.get("QuotaArn") != null && !jsonObj.get("QuotaArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("QuotaArn"));
      }
      // validate the optional field `GlobalQuota`
      if (jsonObj.get("GlobalQuota") != null && !jsonObj.get("GlobalQuota").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("GlobalQuota"));
      }
      // validate the optional field `Unit`
      if (jsonObj.get("Unit") != null && !jsonObj.get("Unit").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Unit"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetRequestedServiceQuotaChangeResponseRequestedQuota.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetRequestedServiceQuotaChangeResponseRequestedQuota' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetRequestedServiceQuotaChangeResponseRequestedQuota> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetRequestedServiceQuotaChangeResponseRequestedQuota.class));

       return (TypeAdapter<T>) new TypeAdapter<GetRequestedServiceQuotaChangeResponseRequestedQuota>() {
           @Override
           public void write(JsonWriter out, GetRequestedServiceQuotaChangeResponseRequestedQuota value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetRequestedServiceQuotaChangeResponseRequestedQuota read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetRequestedServiceQuotaChangeResponseRequestedQuota given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetRequestedServiceQuotaChangeResponseRequestedQuota
   * @throws IOException if the JSON string is invalid with respect to GetRequestedServiceQuotaChangeResponseRequestedQuota
   */
  public static GetRequestedServiceQuotaChangeResponseRequestedQuota fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetRequestedServiceQuotaChangeResponseRequestedQuota.class);
  }

  /**
   * Convert an instance of GetRequestedServiceQuotaChangeResponseRequestedQuota to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

