/*
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CollaborationQueryLogStatus;
import org.openapitools.client.model.CreateCollaborationInputDataEncryptionMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCollaborationInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:09.594695-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCollaborationInput {
  public static final String SERIALIZED_NAME_MEMBERS = "members";
  @SerializedName(SERIALIZED_NAME_MEMBERS)
  private List members;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CREATOR_MEMBER_ABILITIES = "creatorMemberAbilities";
  @SerializedName(SERIALIZED_NAME_CREATOR_MEMBER_ABILITIES)
  private List creatorMemberAbilities;

  public static final String SERIALIZED_NAME_CREATOR_DISPLAY_NAME = "creatorDisplayName";
  @SerializedName(SERIALIZED_NAME_CREATOR_DISPLAY_NAME)
  private String creatorDisplayName;

  public static final String SERIALIZED_NAME_DATA_ENCRYPTION_METADATA = "dataEncryptionMetadata";
  @SerializedName(SERIALIZED_NAME_DATA_ENCRYPTION_METADATA)
  private CreateCollaborationInputDataEncryptionMetadata dataEncryptionMetadata;

  public static final String SERIALIZED_NAME_QUERY_LOG_STATUS = "queryLogStatus";
  @SerializedName(SERIALIZED_NAME_QUERY_LOG_STATUS)
  private CollaborationQueryLogStatus queryLogStatus;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public CreateCollaborationInput() {
  }

  public CreateCollaborationInput members(List members) {
    this.members = members;
    return this;
  }

  /**
   * Get members
   * @return members
   */
  @javax.annotation.Nonnull
  public List getMembers() {
    return members;
  }

  public void setMembers(List members) {
    this.members = members;
  }


  public CreateCollaborationInput name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateCollaborationInput description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateCollaborationInput creatorMemberAbilities(List creatorMemberAbilities) {
    this.creatorMemberAbilities = creatorMemberAbilities;
    return this;
  }

  /**
   * Get creatorMemberAbilities
   * @return creatorMemberAbilities
   */
  @javax.annotation.Nonnull
  public List getCreatorMemberAbilities() {
    return creatorMemberAbilities;
  }

  public void setCreatorMemberAbilities(List creatorMemberAbilities) {
    this.creatorMemberAbilities = creatorMemberAbilities;
  }


  public CreateCollaborationInput creatorDisplayName(String creatorDisplayName) {
    this.creatorDisplayName = creatorDisplayName;
    return this;
  }

  /**
   * Get creatorDisplayName
   * @return creatorDisplayName
   */
  @javax.annotation.Nonnull
  public String getCreatorDisplayName() {
    return creatorDisplayName;
  }

  public void setCreatorDisplayName(String creatorDisplayName) {
    this.creatorDisplayName = creatorDisplayName;
  }


  public CreateCollaborationInput dataEncryptionMetadata(CreateCollaborationInputDataEncryptionMetadata dataEncryptionMetadata) {
    this.dataEncryptionMetadata = dataEncryptionMetadata;
    return this;
  }

  /**
   * Get dataEncryptionMetadata
   * @return dataEncryptionMetadata
   */
  @javax.annotation.Nullable
  public CreateCollaborationInputDataEncryptionMetadata getDataEncryptionMetadata() {
    return dataEncryptionMetadata;
  }

  public void setDataEncryptionMetadata(CreateCollaborationInputDataEncryptionMetadata dataEncryptionMetadata) {
    this.dataEncryptionMetadata = dataEncryptionMetadata;
  }


  public CreateCollaborationInput queryLogStatus(CollaborationQueryLogStatus queryLogStatus) {
    this.queryLogStatus = queryLogStatus;
    return this;
  }

  /**
   * Get queryLogStatus
   * @return queryLogStatus
   */
  @javax.annotation.Nonnull
  public CollaborationQueryLogStatus getQueryLogStatus() {
    return queryLogStatus;
  }

  public void setQueryLogStatus(CollaborationQueryLogStatus queryLogStatus) {
    this.queryLogStatus = queryLogStatus;
  }


  public CreateCollaborationInput tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCollaborationInput createCollaborationInput = (CreateCollaborationInput) o;
    return Objects.equals(this.members, createCollaborationInput.members) &&
        Objects.equals(this.name, createCollaborationInput.name) &&
        Objects.equals(this.description, createCollaborationInput.description) &&
        Objects.equals(this.creatorMemberAbilities, createCollaborationInput.creatorMemberAbilities) &&
        Objects.equals(this.creatorDisplayName, createCollaborationInput.creatorDisplayName) &&
        Objects.equals(this.dataEncryptionMetadata, createCollaborationInput.dataEncryptionMetadata) &&
        Objects.equals(this.queryLogStatus, createCollaborationInput.queryLogStatus) &&
        Objects.equals(this.tags, createCollaborationInput.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(members, name, description, creatorMemberAbilities, creatorDisplayName, dataEncryptionMetadata, queryLogStatus, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCollaborationInput {\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    creatorMemberAbilities: ").append(toIndentedString(creatorMemberAbilities)).append("\n");
    sb.append("    creatorDisplayName: ").append(toIndentedString(creatorDisplayName)).append("\n");
    sb.append("    dataEncryptionMetadata: ").append(toIndentedString(dataEncryptionMetadata)).append("\n");
    sb.append("    queryLogStatus: ").append(toIndentedString(queryLogStatus)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("members");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("creatorMemberAbilities");
    openapiFields.add("creatorDisplayName");
    openapiFields.add("dataEncryptionMetadata");
    openapiFields.add("queryLogStatus");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("members");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("creatorMemberAbilities");
    openapiRequiredFields.add("creatorDisplayName");
    openapiRequiredFields.add("queryLogStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCollaborationInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCollaborationInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCollaborationInput is not found in the empty JSON string", CreateCollaborationInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCollaborationInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCollaborationInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCollaborationInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `members`
      List.validateJsonElement(jsonObj.get("members"));
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the required field `description`
      String.validateJsonElement(jsonObj.get("description"));
      // validate the required field `creatorMemberAbilities`
      List.validateJsonElement(jsonObj.get("creatorMemberAbilities"));
      // validate the required field `creatorDisplayName`
      String.validateJsonElement(jsonObj.get("creatorDisplayName"));
      // validate the optional field `dataEncryptionMetadata`
      if (jsonObj.get("dataEncryptionMetadata") != null && !jsonObj.get("dataEncryptionMetadata").isJsonNull()) {
        CreateCollaborationInputDataEncryptionMetadata.validateJsonElement(jsonObj.get("dataEncryptionMetadata"));
      }
      // validate the required field `queryLogStatus`
      CollaborationQueryLogStatus.validateJsonElement(jsonObj.get("queryLogStatus"));
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCollaborationInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCollaborationInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCollaborationInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCollaborationInput.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCollaborationInput>() {
           @Override
           public void write(JsonWriter out, CreateCollaborationInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCollaborationInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCollaborationInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCollaborationInput
   * @throws IOException if the JSON string is invalid with respect to CreateCollaborationInput
   */
  public static CreateCollaborationInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCollaborationInput.class);
  }

  /**
   * Convert an instance of CreateCollaborationInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

