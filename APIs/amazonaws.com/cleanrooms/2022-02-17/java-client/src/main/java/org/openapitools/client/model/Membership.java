/*
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MembershipQueryLogStatus;
import org.openapitools.client.model.MembershipStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The membership object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:09.594695-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Membership {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_COLLABORATION_ARN = "collaborationArn";
  @SerializedName(SERIALIZED_NAME_COLLABORATION_ARN)
  private String collaborationArn;

  public static final String SERIALIZED_NAME_COLLABORATION_ID = "collaborationId";
  @SerializedName(SERIALIZED_NAME_COLLABORATION_ID)
  private String collaborationId;

  public static final String SERIALIZED_NAME_COLLABORATION_CREATOR_ACCOUNT_ID = "collaborationCreatorAccountId";
  @SerializedName(SERIALIZED_NAME_COLLABORATION_CREATOR_ACCOUNT_ID)
  private String collaborationCreatorAccountId;

  public static final String SERIALIZED_NAME_COLLABORATION_CREATOR_DISPLAY_NAME = "collaborationCreatorDisplayName";
  @SerializedName(SERIALIZED_NAME_COLLABORATION_CREATOR_DISPLAY_NAME)
  private String collaborationCreatorDisplayName;

  public static final String SERIALIZED_NAME_COLLABORATION_NAME = "collaborationName";
  @SerializedName(SERIALIZED_NAME_COLLABORATION_NAME)
  private String collaborationName;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private OffsetDateTime createTime;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private OffsetDateTime updateTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private MembershipStatus status;

  public static final String SERIALIZED_NAME_MEMBER_ABILITIES = "memberAbilities";
  @SerializedName(SERIALIZED_NAME_MEMBER_ABILITIES)
  private List memberAbilities;

  public static final String SERIALIZED_NAME_QUERY_LOG_STATUS = "queryLogStatus";
  @SerializedName(SERIALIZED_NAME_QUERY_LOG_STATUS)
  private MembershipQueryLogStatus queryLogStatus;

  public Membership() {
  }

  public Membership id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Membership arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public Membership collaborationArn(String collaborationArn) {
    this.collaborationArn = collaborationArn;
    return this;
  }

  /**
   * Get collaborationArn
   * @return collaborationArn
   */
  @javax.annotation.Nonnull
  public String getCollaborationArn() {
    return collaborationArn;
  }

  public void setCollaborationArn(String collaborationArn) {
    this.collaborationArn = collaborationArn;
  }


  public Membership collaborationId(String collaborationId) {
    this.collaborationId = collaborationId;
    return this;
  }

  /**
   * Get collaborationId
   * @return collaborationId
   */
  @javax.annotation.Nonnull
  public String getCollaborationId() {
    return collaborationId;
  }

  public void setCollaborationId(String collaborationId) {
    this.collaborationId = collaborationId;
  }


  public Membership collaborationCreatorAccountId(String collaborationCreatorAccountId) {
    this.collaborationCreatorAccountId = collaborationCreatorAccountId;
    return this;
  }

  /**
   * Get collaborationCreatorAccountId
   * @return collaborationCreatorAccountId
   */
  @javax.annotation.Nonnull
  public String getCollaborationCreatorAccountId() {
    return collaborationCreatorAccountId;
  }

  public void setCollaborationCreatorAccountId(String collaborationCreatorAccountId) {
    this.collaborationCreatorAccountId = collaborationCreatorAccountId;
  }


  public Membership collaborationCreatorDisplayName(String collaborationCreatorDisplayName) {
    this.collaborationCreatorDisplayName = collaborationCreatorDisplayName;
    return this;
  }

  /**
   * Get collaborationCreatorDisplayName
   * @return collaborationCreatorDisplayName
   */
  @javax.annotation.Nonnull
  public String getCollaborationCreatorDisplayName() {
    return collaborationCreatorDisplayName;
  }

  public void setCollaborationCreatorDisplayName(String collaborationCreatorDisplayName) {
    this.collaborationCreatorDisplayName = collaborationCreatorDisplayName;
  }


  public Membership collaborationName(String collaborationName) {
    this.collaborationName = collaborationName;
    return this;
  }

  /**
   * Get collaborationName
   * @return collaborationName
   */
  @javax.annotation.Nonnull
  public String getCollaborationName() {
    return collaborationName;
  }

  public void setCollaborationName(String collaborationName) {
    this.collaborationName = collaborationName;
  }


  public Membership createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Get createTime
   * @return createTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }


  public Membership updateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Get updateTime
   * @return updateTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public Membership status(MembershipStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public MembershipStatus getStatus() {
    return status;
  }

  public void setStatus(MembershipStatus status) {
    this.status = status;
  }


  public Membership memberAbilities(List memberAbilities) {
    this.memberAbilities = memberAbilities;
    return this;
  }

  /**
   * Get memberAbilities
   * @return memberAbilities
   */
  @javax.annotation.Nonnull
  public List getMemberAbilities() {
    return memberAbilities;
  }

  public void setMemberAbilities(List memberAbilities) {
    this.memberAbilities = memberAbilities;
  }


  public Membership queryLogStatus(MembershipQueryLogStatus queryLogStatus) {
    this.queryLogStatus = queryLogStatus;
    return this;
  }

  /**
   * Get queryLogStatus
   * @return queryLogStatus
   */
  @javax.annotation.Nonnull
  public MembershipQueryLogStatus getQueryLogStatus() {
    return queryLogStatus;
  }

  public void setQueryLogStatus(MembershipQueryLogStatus queryLogStatus) {
    this.queryLogStatus = queryLogStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Membership membership = (Membership) o;
    return Objects.equals(this.id, membership.id) &&
        Objects.equals(this.arn, membership.arn) &&
        Objects.equals(this.collaborationArn, membership.collaborationArn) &&
        Objects.equals(this.collaborationId, membership.collaborationId) &&
        Objects.equals(this.collaborationCreatorAccountId, membership.collaborationCreatorAccountId) &&
        Objects.equals(this.collaborationCreatorDisplayName, membership.collaborationCreatorDisplayName) &&
        Objects.equals(this.collaborationName, membership.collaborationName) &&
        Objects.equals(this.createTime, membership.createTime) &&
        Objects.equals(this.updateTime, membership.updateTime) &&
        Objects.equals(this.status, membership.status) &&
        Objects.equals(this.memberAbilities, membership.memberAbilities) &&
        Objects.equals(this.queryLogStatus, membership.queryLogStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, arn, collaborationArn, collaborationId, collaborationCreatorAccountId, collaborationCreatorDisplayName, collaborationName, createTime, updateTime, status, memberAbilities, queryLogStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Membership {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    collaborationArn: ").append(toIndentedString(collaborationArn)).append("\n");
    sb.append("    collaborationId: ").append(toIndentedString(collaborationId)).append("\n");
    sb.append("    collaborationCreatorAccountId: ").append(toIndentedString(collaborationCreatorAccountId)).append("\n");
    sb.append("    collaborationCreatorDisplayName: ").append(toIndentedString(collaborationCreatorDisplayName)).append("\n");
    sb.append("    collaborationName: ").append(toIndentedString(collaborationName)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    memberAbilities: ").append(toIndentedString(memberAbilities)).append("\n");
    sb.append("    queryLogStatus: ").append(toIndentedString(queryLogStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("arn");
    openapiFields.add("collaborationArn");
    openapiFields.add("collaborationId");
    openapiFields.add("collaborationCreatorAccountId");
    openapiFields.add("collaborationCreatorDisplayName");
    openapiFields.add("collaborationName");
    openapiFields.add("createTime");
    openapiFields.add("updateTime");
    openapiFields.add("status");
    openapiFields.add("memberAbilities");
    openapiFields.add("queryLogStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("arn");
    openapiRequiredFields.add("collaborationArn");
    openapiRequiredFields.add("collaborationId");
    openapiRequiredFields.add("collaborationCreatorAccountId");
    openapiRequiredFields.add("collaborationCreatorDisplayName");
    openapiRequiredFields.add("collaborationName");
    openapiRequiredFields.add("createTime");
    openapiRequiredFields.add("updateTime");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("memberAbilities");
    openapiRequiredFields.add("queryLogStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Membership
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Membership.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Membership is not found in the empty JSON string", Membership.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Membership.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Membership` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Membership.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `id`
      String.validateJsonElement(jsonObj.get("id"));
      // validate the required field `arn`
      String.validateJsonElement(jsonObj.get("arn"));
      // validate the required field `collaborationArn`
      String.validateJsonElement(jsonObj.get("collaborationArn"));
      // validate the required field `collaborationId`
      String.validateJsonElement(jsonObj.get("collaborationId"));
      // validate the required field `collaborationCreatorAccountId`
      String.validateJsonElement(jsonObj.get("collaborationCreatorAccountId"));
      // validate the required field `collaborationCreatorDisplayName`
      String.validateJsonElement(jsonObj.get("collaborationCreatorDisplayName"));
      // validate the required field `collaborationName`
      String.validateJsonElement(jsonObj.get("collaborationName"));
      // validate the required field `createTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("createTime"));
      // validate the required field `updateTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("updateTime"));
      // validate the required field `status`
      MembershipStatus.validateJsonElement(jsonObj.get("status"));
      // validate the required field `memberAbilities`
      List.validateJsonElement(jsonObj.get("memberAbilities"));
      // validate the required field `queryLogStatus`
      MembershipQueryLogStatus.validateJsonElement(jsonObj.get("queryLogStatus"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Membership.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Membership' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Membership> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Membership.class));

       return (TypeAdapter<T>) new TypeAdapter<Membership>() {
           @Override
           public void write(JsonWriter out, Membership value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Membership read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Membership given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Membership
   * @throws IOException if the JSON string is invalid with respect to Membership
   */
  public static Membership fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Membership.class);
  }

  /**
   * Convert an instance of Membership to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

