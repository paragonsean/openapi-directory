/*
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProtectedQueryStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:09.594695-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProtectedQueryStatistics {
  public static final String SERIALIZED_NAME_TOTAL_DURATION_IN_MILLIS = "totalDurationInMillis";
  @SerializedName(SERIALIZED_NAME_TOTAL_DURATION_IN_MILLIS)
  private Integer totalDurationInMillis;

  public ProtectedQueryStatistics() {
  }

  public ProtectedQueryStatistics totalDurationInMillis(Integer totalDurationInMillis) {
    this.totalDurationInMillis = totalDurationInMillis;
    return this;
  }

  /**
   * Get totalDurationInMillis
   * @return totalDurationInMillis
   */
  @javax.annotation.Nullable
  public Integer getTotalDurationInMillis() {
    return totalDurationInMillis;
  }

  public void setTotalDurationInMillis(Integer totalDurationInMillis) {
    this.totalDurationInMillis = totalDurationInMillis;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProtectedQueryStatistics protectedQueryStatistics = (ProtectedQueryStatistics) o;
    return Objects.equals(this.totalDurationInMillis, protectedQueryStatistics.totalDurationInMillis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalDurationInMillis);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProtectedQueryStatistics {\n");
    sb.append("    totalDurationInMillis: ").append(toIndentedString(totalDurationInMillis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("totalDurationInMillis");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProtectedQueryStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProtectedQueryStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProtectedQueryStatistics is not found in the empty JSON string", ProtectedQueryStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProtectedQueryStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProtectedQueryStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `totalDurationInMillis`
      if (jsonObj.get("totalDurationInMillis") != null && !jsonObj.get("totalDurationInMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalDurationInMillis"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProtectedQueryStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProtectedQueryStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProtectedQueryStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProtectedQueryStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<ProtectedQueryStatistics>() {
           @Override
           public void write(JsonWriter out, ProtectedQueryStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProtectedQueryStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProtectedQueryStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProtectedQueryStatistics
   * @throws IOException if the JSON string is invalid with respect to ProtectedQueryStatistics
   */
  public static ProtectedQueryStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProtectedQueryStatistics.class);
  }

  /**
   * Convert an instance of ProtectedQueryStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

