/*
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AnalysisRuleCustom;
import org.openapitools.client.model.ConfiguredTableAnalysisRulePolicyV1Aggregation;
import org.openapitools.client.model.ConfiguredTableAnalysisRulePolicyV1List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:09.594695-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 {
  public static final String SERIALIZED_NAME_LIST = "list";
  @SerializedName(SERIALIZED_NAME_LIST)
  private ConfiguredTableAnalysisRulePolicyV1List _list;

  public static final String SERIALIZED_NAME_AGGREGATION = "aggregation";
  @SerializedName(SERIALIZED_NAME_AGGREGATION)
  private ConfiguredTableAnalysisRulePolicyV1Aggregation aggregation;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private AnalysisRuleCustom custom;

  public CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1() {
  }

  public CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 _list(ConfiguredTableAnalysisRulePolicyV1List _list) {
    this._list = _list;
    return this;
  }

  /**
   * Get _list
   * @return _list
   */
  @javax.annotation.Nullable
  public ConfiguredTableAnalysisRulePolicyV1List getList() {
    return _list;
  }

  public void setList(ConfiguredTableAnalysisRulePolicyV1List _list) {
    this._list = _list;
  }


  public CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 aggregation(ConfiguredTableAnalysisRulePolicyV1Aggregation aggregation) {
    this.aggregation = aggregation;
    return this;
  }

  /**
   * Get aggregation
   * @return aggregation
   */
  @javax.annotation.Nullable
  public ConfiguredTableAnalysisRulePolicyV1Aggregation getAggregation() {
    return aggregation;
  }

  public void setAggregation(ConfiguredTableAnalysisRulePolicyV1Aggregation aggregation) {
    this.aggregation = aggregation;
  }


  public CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 custom(AnalysisRuleCustom custom) {
    this.custom = custom;
    return this;
  }

  /**
   * Get custom
   * @return custom
   */
  @javax.annotation.Nullable
  public AnalysisRuleCustom getCustom() {
    return custom;
  }

  public void setCustom(AnalysisRuleCustom custom) {
    this.custom = custom;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 createConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 = (CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1) o;
    return Objects.equals(this._list, createConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1._list) &&
        Objects.equals(this.aggregation, createConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.aggregation) &&
        Objects.equals(this.custom, createConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.custom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_list, aggregation, custom);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 {\n");
    sb.append("    _list: ").append(toIndentedString(_list)).append("\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("list");
    openapiFields.add("aggregation");
    openapiFields.add("custom");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 is not found in the empty JSON string", CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `list`
      if (jsonObj.get("list") != null && !jsonObj.get("list").isJsonNull()) {
        ConfiguredTableAnalysisRulePolicyV1List.validateJsonElement(jsonObj.get("list"));
      }
      // validate the optional field `aggregation`
      if (jsonObj.get("aggregation") != null && !jsonObj.get("aggregation").isJsonNull()) {
        ConfiguredTableAnalysisRulePolicyV1Aggregation.validateJsonElement(jsonObj.get("aggregation"));
      }
      // validate the optional field `custom`
      if (jsonObj.get("custom") != null && !jsonObj.get("custom").isJsonNull()) {
        AnalysisRuleCustom.validateJsonElement(jsonObj.get("custom"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1>() {
           @Override
           public void write(JsonWriter out, CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1
   * @throws IOException if the JSON string is invalid with respect to CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1
   */
  public static CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1.class);
  }

  /**
   * Convert an instance of CreateConfiguredTableAnalysisRuleRequestAnalysisRulePolicyV1 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

