/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsCleanRoomsService);
  }
}(this, function(expect, AwsCleanRoomsService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsCleanRoomsService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('batchGetCollaborationAnalysisTemplate', function() {
      it('should call batchGetCollaborationAnalysisTemplate successfully', function(done) {
        //uncomment below and update the code to test batchGetCollaborationAnalysisTemplate
        //instance.batchGetCollaborationAnalysisTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetSchema', function() {
      it('should call batchGetSchema successfully', function(done) {
        //uncomment below and update the code to test batchGetSchema
        //instance.batchGetSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAnalysisTemplate', function() {
      it('should call createAnalysisTemplate successfully', function(done) {
        //uncomment below and update the code to test createAnalysisTemplate
        //instance.createAnalysisTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCollaboration', function() {
      it('should call createCollaboration successfully', function(done) {
        //uncomment below and update the code to test createCollaboration
        //instance.createCollaboration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConfiguredTable', function() {
      it('should call createConfiguredTable successfully', function(done) {
        //uncomment below and update the code to test createConfiguredTable
        //instance.createConfiguredTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConfiguredTableAnalysisRule', function() {
      it('should call createConfiguredTableAnalysisRule successfully', function(done) {
        //uncomment below and update the code to test createConfiguredTableAnalysisRule
        //instance.createConfiguredTableAnalysisRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConfiguredTableAssociation', function() {
      it('should call createConfiguredTableAssociation successfully', function(done) {
        //uncomment below and update the code to test createConfiguredTableAssociation
        //instance.createConfiguredTableAssociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMembership', function() {
      it('should call createMembership successfully', function(done) {
        //uncomment below and update the code to test createMembership
        //instance.createMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnalysisTemplate', function() {
      it('should call deleteAnalysisTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteAnalysisTemplate
        //instance.deleteAnalysisTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollaboration', function() {
      it('should call deleteCollaboration successfully', function(done) {
        //uncomment below and update the code to test deleteCollaboration
        //instance.deleteCollaboration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConfiguredTable', function() {
      it('should call deleteConfiguredTable successfully', function(done) {
        //uncomment below and update the code to test deleteConfiguredTable
        //instance.deleteConfiguredTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConfiguredTableAnalysisRule', function() {
      it('should call deleteConfiguredTableAnalysisRule successfully', function(done) {
        //uncomment below and update the code to test deleteConfiguredTableAnalysisRule
        //instance.deleteConfiguredTableAnalysisRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConfiguredTableAssociation', function() {
      it('should call deleteConfiguredTableAssociation successfully', function(done) {
        //uncomment below and update the code to test deleteConfiguredTableAssociation
        //instance.deleteConfiguredTableAssociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMember', function() {
      it('should call deleteMember successfully', function(done) {
        //uncomment below and update the code to test deleteMember
        //instance.deleteMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMembership', function() {
      it('should call deleteMembership successfully', function(done) {
        //uncomment below and update the code to test deleteMembership
        //instance.deleteMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnalysisTemplate', function() {
      it('should call getAnalysisTemplate successfully', function(done) {
        //uncomment below and update the code to test getAnalysisTemplate
        //instance.getAnalysisTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollaboration', function() {
      it('should call getCollaboration successfully', function(done) {
        //uncomment below and update the code to test getCollaboration
        //instance.getCollaboration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollaborationAnalysisTemplate', function() {
      it('should call getCollaborationAnalysisTemplate successfully', function(done) {
        //uncomment below and update the code to test getCollaborationAnalysisTemplate
        //instance.getCollaborationAnalysisTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfiguredTable', function() {
      it('should call getConfiguredTable successfully', function(done) {
        //uncomment below and update the code to test getConfiguredTable
        //instance.getConfiguredTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfiguredTableAnalysisRule', function() {
      it('should call getConfiguredTableAnalysisRule successfully', function(done) {
        //uncomment below and update the code to test getConfiguredTableAnalysisRule
        //instance.getConfiguredTableAnalysisRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfiguredTableAssociation', function() {
      it('should call getConfiguredTableAssociation successfully', function(done) {
        //uncomment below and update the code to test getConfiguredTableAssociation
        //instance.getConfiguredTableAssociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMembership', function() {
      it('should call getMembership successfully', function(done) {
        //uncomment below and update the code to test getMembership
        //instance.getMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProtectedQuery', function() {
      it('should call getProtectedQuery successfully', function(done) {
        //uncomment below and update the code to test getProtectedQuery
        //instance.getProtectedQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSchema', function() {
      it('should call getSchema successfully', function(done) {
        //uncomment below and update the code to test getSchema
        //instance.getSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSchemaAnalysisRule', function() {
      it('should call getSchemaAnalysisRule successfully', function(done) {
        //uncomment below and update the code to test getSchemaAnalysisRule
        //instance.getSchemaAnalysisRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAnalysisTemplates', function() {
      it('should call listAnalysisTemplates successfully', function(done) {
        //uncomment below and update the code to test listAnalysisTemplates
        //instance.listAnalysisTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCollaborationAnalysisTemplates', function() {
      it('should call listCollaborationAnalysisTemplates successfully', function(done) {
        //uncomment below and update the code to test listCollaborationAnalysisTemplates
        //instance.listCollaborationAnalysisTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCollaborations', function() {
      it('should call listCollaborations successfully', function(done) {
        //uncomment below and update the code to test listCollaborations
        //instance.listCollaborations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfiguredTableAssociations', function() {
      it('should call listConfiguredTableAssociations successfully', function(done) {
        //uncomment below and update the code to test listConfiguredTableAssociations
        //instance.listConfiguredTableAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConfiguredTables', function() {
      it('should call listConfiguredTables successfully', function(done) {
        //uncomment below and update the code to test listConfiguredTables
        //instance.listConfiguredTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMembers', function() {
      it('should call listMembers successfully', function(done) {
        //uncomment below and update the code to test listMembers
        //instance.listMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMemberships', function() {
      it('should call listMemberships successfully', function(done) {
        //uncomment below and update the code to test listMemberships
        //instance.listMemberships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProtectedQueries', function() {
      it('should call listProtectedQueries successfully', function(done) {
        //uncomment below and update the code to test listProtectedQueries
        //instance.listProtectedQueries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSchemas', function() {
      it('should call listSchemas successfully', function(done) {
        //uncomment below and update the code to test listSchemas
        //instance.listSchemas(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startProtectedQuery', function() {
      it('should call startProtectedQuery successfully', function(done) {
        //uncomment below and update the code to test startProtectedQuery
        //instance.startProtectedQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAnalysisTemplate', function() {
      it('should call updateAnalysisTemplate successfully', function(done) {
        //uncomment below and update the code to test updateAnalysisTemplate
        //instance.updateAnalysisTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCollaboration', function() {
      it('should call updateCollaboration successfully', function(done) {
        //uncomment below and update the code to test updateCollaboration
        //instance.updateCollaboration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConfiguredTable', function() {
      it('should call updateConfiguredTable successfully', function(done) {
        //uncomment below and update the code to test updateConfiguredTable
        //instance.updateConfiguredTable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConfiguredTableAnalysisRule', function() {
      it('should call updateConfiguredTableAnalysisRule successfully', function(done) {
        //uncomment below and update the code to test updateConfiguredTableAnalysisRule
        //instance.updateConfiguredTableAnalysisRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConfiguredTableAssociation', function() {
      it('should call updateConfiguredTableAssociation successfully', function(done) {
        //uncomment below and update the code to test updateConfiguredTableAssociation
        //instance.updateConfiguredTableAssociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMembership', function() {
      it('should call updateMembership successfully', function(done) {
        //uncomment below and update the code to test updateMembership
        //instance.updateMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProtectedQuery', function() {
      it('should call updateProtectedQuery successfully', function(done) {
        //uncomment below and update the code to test updateProtectedQuery
        //instance.updateProtectedQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
