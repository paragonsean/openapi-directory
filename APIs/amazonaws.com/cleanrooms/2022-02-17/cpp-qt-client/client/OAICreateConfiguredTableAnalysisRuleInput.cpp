/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTableAnalysisRuleInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTableAnalysisRuleInput::OAICreateConfiguredTableAnalysisRuleInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTableAnalysisRuleInput::OAICreateConfiguredTableAnalysisRuleInput() {
    this->initializeModel();
}

OAICreateConfiguredTableAnalysisRuleInput::~OAICreateConfiguredTableAnalysisRuleInput() {}

void OAICreateConfiguredTableAnalysisRuleInput::initializeModel() {

    m_analysis_rule_type_isSet = false;
    m_analysis_rule_type_isValid = false;

    m_analysis_rule_policy_isSet = false;
    m_analysis_rule_policy_isValid = false;
}

void OAICreateConfiguredTableAnalysisRuleInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTableAnalysisRuleInput::fromJsonObject(QJsonObject json) {

    m_analysis_rule_type_isValid = ::OpenAPI::fromJsonValue(m_analysis_rule_type, json[QString("analysisRuleType")]);
    m_analysis_rule_type_isSet = !json[QString("analysisRuleType")].isNull() && m_analysis_rule_type_isValid;

    m_analysis_rule_policy_isValid = ::OpenAPI::fromJsonValue(m_analysis_rule_policy, json[QString("analysisRulePolicy")]);
    m_analysis_rule_policy_isSet = !json[QString("analysisRulePolicy")].isNull() && m_analysis_rule_policy_isValid;
}

QString OAICreateConfiguredTableAnalysisRuleInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTableAnalysisRuleInput::asJsonObject() const {
    QJsonObject obj;
    if (m_analysis_rule_type.isSet()) {
        obj.insert(QString("analysisRuleType"), ::OpenAPI::toJsonValue(m_analysis_rule_type));
    }
    if (m_analysis_rule_policy.isSet()) {
        obj.insert(QString("analysisRulePolicy"), ::OpenAPI::toJsonValue(m_analysis_rule_policy));
    }
    return obj;
}

OAIConfiguredTableAnalysisRuleType OAICreateConfiguredTableAnalysisRuleInput::getAnalysisRuleType() const {
    return m_analysis_rule_type;
}
void OAICreateConfiguredTableAnalysisRuleInput::setAnalysisRuleType(const OAIConfiguredTableAnalysisRuleType &analysis_rule_type) {
    m_analysis_rule_type = analysis_rule_type;
    m_analysis_rule_type_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleInput::is_analysis_rule_type_Set() const{
    return m_analysis_rule_type_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleInput::is_analysis_rule_type_Valid() const{
    return m_analysis_rule_type_isValid;
}

OAICreateConfiguredTableAnalysisRuleInput_analysisRulePolicy OAICreateConfiguredTableAnalysisRuleInput::getAnalysisRulePolicy() const {
    return m_analysis_rule_policy;
}
void OAICreateConfiguredTableAnalysisRuleInput::setAnalysisRulePolicy(const OAICreateConfiguredTableAnalysisRuleInput_analysisRulePolicy &analysis_rule_policy) {
    m_analysis_rule_policy = analysis_rule_policy;
    m_analysis_rule_policy_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleInput::is_analysis_rule_policy_Set() const{
    return m_analysis_rule_policy_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleInput::is_analysis_rule_policy_Valid() const{
    return m_analysis_rule_policy_isValid;
}

bool OAICreateConfiguredTableAnalysisRuleInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analysis_rule_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_analysis_rule_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTableAnalysisRuleInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_analysis_rule_type_isValid && m_analysis_rule_policy_isValid && true;
}

} // namespace OpenAPI
