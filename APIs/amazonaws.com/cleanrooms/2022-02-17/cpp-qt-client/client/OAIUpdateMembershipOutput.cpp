/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMembershipOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMembershipOutput::OAIUpdateMembershipOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMembershipOutput::OAIUpdateMembershipOutput() {
    this->initializeModel();
}

OAIUpdateMembershipOutput::~OAIUpdateMembershipOutput() {}

void OAIUpdateMembershipOutput::initializeModel() {

    m_membership_isSet = false;
    m_membership_isValid = false;
}

void OAIUpdateMembershipOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateMembershipOutput::fromJsonObject(QJsonObject json) {

    m_membership_isValid = ::OpenAPI::fromJsonValue(m_membership, json[QString("membership")]);
    m_membership_isSet = !json[QString("membership")].isNull() && m_membership_isValid;
}

QString OAIUpdateMembershipOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateMembershipOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_membership.isSet()) {
        obj.insert(QString("membership"), ::OpenAPI::toJsonValue(m_membership));
    }
    return obj;
}

OAIMembership OAIUpdateMembershipOutput::getMembership() const {
    return m_membership;
}
void OAIUpdateMembershipOutput::setMembership(const OAIMembership &membership) {
    m_membership = membership;
    m_membership_isSet = true;
}

bool OAIUpdateMembershipOutput::is_membership_Set() const{
    return m_membership_isSet;
}

bool OAIUpdateMembershipOutput::is_membership_Valid() const{
    return m_membership_isValid;
}

bool OAIUpdateMembershipOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_membership.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateMembershipOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_membership_isValid && true;
}

} // namespace OpenAPI
