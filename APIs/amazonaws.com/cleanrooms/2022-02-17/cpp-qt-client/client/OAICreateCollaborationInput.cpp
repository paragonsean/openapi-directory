/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCollaborationInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCollaborationInput::OAICreateCollaborationInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCollaborationInput::OAICreateCollaborationInput() {
    this->initializeModel();
}

OAICreateCollaborationInput::~OAICreateCollaborationInput() {}

void OAICreateCollaborationInput::initializeModel() {

    m_members_isSet = false;
    m_members_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_creator_member_abilities_isSet = false;
    m_creator_member_abilities_isValid = false;

    m_creator_display_name_isSet = false;
    m_creator_display_name_isValid = false;

    m_data_encryption_metadata_isSet = false;
    m_data_encryption_metadata_isValid = false;

    m_query_log_status_isSet = false;
    m_query_log_status_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateCollaborationInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCollaborationInput::fromJsonObject(QJsonObject json) {

    m_members_isValid = ::OpenAPI::fromJsonValue(m_members, json[QString("members")]);
    m_members_isSet = !json[QString("members")].isNull() && m_members_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_creator_member_abilities_isValid = ::OpenAPI::fromJsonValue(m_creator_member_abilities, json[QString("creatorMemberAbilities")]);
    m_creator_member_abilities_isSet = !json[QString("creatorMemberAbilities")].isNull() && m_creator_member_abilities_isValid;

    m_creator_display_name_isValid = ::OpenAPI::fromJsonValue(m_creator_display_name, json[QString("creatorDisplayName")]);
    m_creator_display_name_isSet = !json[QString("creatorDisplayName")].isNull() && m_creator_display_name_isValid;

    m_data_encryption_metadata_isValid = ::OpenAPI::fromJsonValue(m_data_encryption_metadata, json[QString("dataEncryptionMetadata")]);
    m_data_encryption_metadata_isSet = !json[QString("dataEncryptionMetadata")].isNull() && m_data_encryption_metadata_isValid;

    m_query_log_status_isValid = ::OpenAPI::fromJsonValue(m_query_log_status, json[QString("queryLogStatus")]);
    m_query_log_status_isSet = !json[QString("queryLogStatus")].isNull() && m_query_log_status_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateCollaborationInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCollaborationInput::asJsonObject() const {
    QJsonObject obj;
    if (m_members.isSet()) {
        obj.insert(QString("members"), ::OpenAPI::toJsonValue(m_members));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_creator_member_abilities.isSet()) {
        obj.insert(QString("creatorMemberAbilities"), ::OpenAPI::toJsonValue(m_creator_member_abilities));
    }
    if (m_creator_display_name_isSet) {
        obj.insert(QString("creatorDisplayName"), ::OpenAPI::toJsonValue(m_creator_display_name));
    }
    if (m_data_encryption_metadata.isSet()) {
        obj.insert(QString("dataEncryptionMetadata"), ::OpenAPI::toJsonValue(m_data_encryption_metadata));
    }
    if (m_query_log_status.isSet()) {
        obj.insert(QString("queryLogStatus"), ::OpenAPI::toJsonValue(m_query_log_status));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QList OAICreateCollaborationInput::getMembers() const {
    return m_members;
}
void OAICreateCollaborationInput::setMembers(const QList &members) {
    m_members = members;
    m_members_isSet = true;
}

bool OAICreateCollaborationInput::is_members_Set() const{
    return m_members_isSet;
}

bool OAICreateCollaborationInput::is_members_Valid() const{
    return m_members_isValid;
}

QString OAICreateCollaborationInput::getName() const {
    return m_name;
}
void OAICreateCollaborationInput::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateCollaborationInput::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateCollaborationInput::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateCollaborationInput::getDescription() const {
    return m_description;
}
void OAICreateCollaborationInput::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateCollaborationInput::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateCollaborationInput::is_description_Valid() const{
    return m_description_isValid;
}

QList OAICreateCollaborationInput::getCreatorMemberAbilities() const {
    return m_creator_member_abilities;
}
void OAICreateCollaborationInput::setCreatorMemberAbilities(const QList &creator_member_abilities) {
    m_creator_member_abilities = creator_member_abilities;
    m_creator_member_abilities_isSet = true;
}

bool OAICreateCollaborationInput::is_creator_member_abilities_Set() const{
    return m_creator_member_abilities_isSet;
}

bool OAICreateCollaborationInput::is_creator_member_abilities_Valid() const{
    return m_creator_member_abilities_isValid;
}

QString OAICreateCollaborationInput::getCreatorDisplayName() const {
    return m_creator_display_name;
}
void OAICreateCollaborationInput::setCreatorDisplayName(const QString &creator_display_name) {
    m_creator_display_name = creator_display_name;
    m_creator_display_name_isSet = true;
}

bool OAICreateCollaborationInput::is_creator_display_name_Set() const{
    return m_creator_display_name_isSet;
}

bool OAICreateCollaborationInput::is_creator_display_name_Valid() const{
    return m_creator_display_name_isValid;
}

OAICreateCollaborationInput_dataEncryptionMetadata OAICreateCollaborationInput::getDataEncryptionMetadata() const {
    return m_data_encryption_metadata;
}
void OAICreateCollaborationInput::setDataEncryptionMetadata(const OAICreateCollaborationInput_dataEncryptionMetadata &data_encryption_metadata) {
    m_data_encryption_metadata = data_encryption_metadata;
    m_data_encryption_metadata_isSet = true;
}

bool OAICreateCollaborationInput::is_data_encryption_metadata_Set() const{
    return m_data_encryption_metadata_isSet;
}

bool OAICreateCollaborationInput::is_data_encryption_metadata_Valid() const{
    return m_data_encryption_metadata_isValid;
}

OAICollaborationQueryLogStatus OAICreateCollaborationInput::getQueryLogStatus() const {
    return m_query_log_status;
}
void OAICreateCollaborationInput::setQueryLogStatus(const OAICollaborationQueryLogStatus &query_log_status) {
    m_query_log_status = query_log_status;
    m_query_log_status_isSet = true;
}

bool OAICreateCollaborationInput::is_query_log_status_Set() const{
    return m_query_log_status_isSet;
}

bool OAICreateCollaborationInput::is_query_log_status_Valid() const{
    return m_query_log_status_isValid;
}

QMap OAICreateCollaborationInput::getTags() const {
    return m_tags;
}
void OAICreateCollaborationInput::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateCollaborationInput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateCollaborationInput::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateCollaborationInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_members.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator_member_abilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_encryption_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_log_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCollaborationInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_members_isValid && m_name_isValid && m_description_isValid && m_creator_member_abilities_isValid && m_creator_display_name_isValid && m_query_log_status_isValid && true;
}

} // namespace OpenAPI
