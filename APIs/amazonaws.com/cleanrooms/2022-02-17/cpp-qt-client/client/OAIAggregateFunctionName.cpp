/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAggregateFunctionName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAggregateFunctionName::OAIAggregateFunctionName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAggregateFunctionName::OAIAggregateFunctionName() {
    this->initializeModel();
}

OAIAggregateFunctionName::~OAIAggregateFunctionName() {}

void OAIAggregateFunctionName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAggregateFunctionName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAggregateFunctionName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SUM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAggregateFunctionName::SUM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUM_DISTINCT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAggregateFunctionName::SUM_DISTINCT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAggregateFunctionName::COUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COUNT_DISTINCT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAggregateFunctionName::COUNT_DISTINCT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AVG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAggregateFunctionName::AVG;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAggregateFunctionName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAggregateFunctionName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAggregateFunctionName::SUM:
            val = "SUM";
            break;
        case eOAIAggregateFunctionName::SUM_DISTINCT:
            val = "SUM_DISTINCT";
            break;
        case eOAIAggregateFunctionName::COUNT:
            val = "COUNT";
            break;
        case eOAIAggregateFunctionName::COUNT_DISTINCT:
            val = "COUNT_DISTINCT";
            break;
        case eOAIAggregateFunctionName::AVG:
            val = "AVG";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAggregateFunctionName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAggregateFunctionName::eOAIAggregateFunctionName OAIAggregateFunctionName::getValue() const {
    return m_value;
}

void OAIAggregateFunctionName::setValue(const OAIAggregateFunctionName::eOAIAggregateFunctionName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAggregateFunctionName::isSet() const {
    
    return m_value_isSet;
}

bool OAIAggregateFunctionName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
