/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICollaboration_dataEncryptionMetadata.h
 *
 * 
 */

#ifndef OAICollaboration_dataEncryptionMetadata_H
#define OAICollaboration_dataEncryptionMetadata_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICollaboration_dataEncryptionMetadata : public OAIObject {
public:
    OAICollaboration_dataEncryptionMetadata();
    OAICollaboration_dataEncryptionMetadata(QString json);
    ~OAICollaboration_dataEncryptionMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAllowCleartext() const;
    void setAllowCleartext(const bool &allow_cleartext);
    bool is_allow_cleartext_Set() const;
    bool is_allow_cleartext_Valid() const;

    bool getAllowDuplicates() const;
    void setAllowDuplicates(const bool &allow_duplicates);
    bool is_allow_duplicates_Set() const;
    bool is_allow_duplicates_Valid() const;

    bool getAllowJoinsOnColumnsWithDifferentNames() const;
    void setAllowJoinsOnColumnsWithDifferentNames(const bool &allow_joins_on_columns_with_different_names);
    bool is_allow_joins_on_columns_with_different_names_Set() const;
    bool is_allow_joins_on_columns_with_different_names_Valid() const;

    bool getPreserveNulls() const;
    void setPreserveNulls(const bool &preserve_nulls);
    bool is_preserve_nulls_Set() const;
    bool is_preserve_nulls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_cleartext;
    bool m_allow_cleartext_isSet;
    bool m_allow_cleartext_isValid;

    bool m_allow_duplicates;
    bool m_allow_duplicates_isSet;
    bool m_allow_duplicates_isValid;

    bool m_allow_joins_on_columns_with_different_names;
    bool m_allow_joins_on_columns_with_different_names_isSet;
    bool m_allow_joins_on_columns_with_different_names_isValid;

    bool m_preserve_nulls;
    bool m_preserve_nulls_isSet;
    bool m_preserve_nulls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICollaboration_dataEncryptionMetadata)

#endif // OAICollaboration_dataEncryptionMetadata_H
