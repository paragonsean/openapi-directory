/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfiguredTableAnalysisRulePolicyV1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfiguredTableAnalysisRulePolicyV1::OAIConfiguredTableAnalysisRulePolicyV1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfiguredTableAnalysisRulePolicyV1::OAIConfiguredTableAnalysisRulePolicyV1() {
    this->initializeModel();
}

OAIConfiguredTableAnalysisRulePolicyV1::~OAIConfiguredTableAnalysisRulePolicyV1() {}

void OAIConfiguredTableAnalysisRulePolicyV1::initializeModel() {

    m_list_isSet = false;
    m_list_isValid = false;

    m_aggregation_isSet = false;
    m_aggregation_isValid = false;

    m_custom_isSet = false;
    m_custom_isValid = false;
}

void OAIConfiguredTableAnalysisRulePolicyV1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfiguredTableAnalysisRulePolicyV1::fromJsonObject(QJsonObject json) {

    m_list_isValid = ::OpenAPI::fromJsonValue(m_list, json[QString("list")]);
    m_list_isSet = !json[QString("list")].isNull() && m_list_isValid;

    m_aggregation_isValid = ::OpenAPI::fromJsonValue(m_aggregation, json[QString("aggregation")]);
    m_aggregation_isSet = !json[QString("aggregation")].isNull() && m_aggregation_isValid;

    m_custom_isValid = ::OpenAPI::fromJsonValue(m_custom, json[QString("custom")]);
    m_custom_isSet = !json[QString("custom")].isNull() && m_custom_isValid;
}

QString OAIConfiguredTableAnalysisRulePolicyV1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfiguredTableAnalysisRulePolicyV1::asJsonObject() const {
    QJsonObject obj;
    if (m_list.isSet()) {
        obj.insert(QString("list"), ::OpenAPI::toJsonValue(m_list));
    }
    if (m_aggregation.isSet()) {
        obj.insert(QString("aggregation"), ::OpenAPI::toJsonValue(m_aggregation));
    }
    if (m_custom.isSet()) {
        obj.insert(QString("custom"), ::OpenAPI::toJsonValue(m_custom));
    }
    return obj;
}

OAIConfiguredTableAnalysisRulePolicyV1_list OAIConfiguredTableAnalysisRulePolicyV1::getList() const {
    return m_list;
}
void OAIConfiguredTableAnalysisRulePolicyV1::setList(const OAIConfiguredTableAnalysisRulePolicyV1_list &list) {
    m_list = list;
    m_list_isSet = true;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::is_list_Set() const{
    return m_list_isSet;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::is_list_Valid() const{
    return m_list_isValid;
}

OAIConfiguredTableAnalysisRulePolicyV1_aggregation OAIConfiguredTableAnalysisRulePolicyV1::getAggregation() const {
    return m_aggregation;
}
void OAIConfiguredTableAnalysisRulePolicyV1::setAggregation(const OAIConfiguredTableAnalysisRulePolicyV1_aggregation &aggregation) {
    m_aggregation = aggregation;
    m_aggregation_isSet = true;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::is_aggregation_Set() const{
    return m_aggregation_isSet;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::is_aggregation_Valid() const{
    return m_aggregation_isValid;
}

OAIAnalysisRuleCustom OAIConfiguredTableAnalysisRulePolicyV1::getCustom() const {
    return m_custom;
}
void OAIConfiguredTableAnalysisRulePolicyV1::setCustom(const OAIAnalysisRuleCustom &custom) {
    m_custom = custom;
    m_custom_isSet = true;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::is_custom_Set() const{
    return m_custom_isSet;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::is_custom_Valid() const{
    return m_custom_isValid;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggregation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfiguredTableAnalysisRulePolicyV1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
