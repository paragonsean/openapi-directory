/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfiguredTable_tableReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfiguredTable_tableReference::OAIConfiguredTable_tableReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfiguredTable_tableReference::OAIConfiguredTable_tableReference() {
    this->initializeModel();
}

OAIConfiguredTable_tableReference::~OAIConfiguredTable_tableReference() {}

void OAIConfiguredTable_tableReference::initializeModel() {

    m_glue_isSet = false;
    m_glue_isValid = false;
}

void OAIConfiguredTable_tableReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfiguredTable_tableReference::fromJsonObject(QJsonObject json) {

    m_glue_isValid = ::OpenAPI::fromJsonValue(m_glue, json[QString("glue")]);
    m_glue_isSet = !json[QString("glue")].isNull() && m_glue_isValid;
}

QString OAIConfiguredTable_tableReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfiguredTable_tableReference::asJsonObject() const {
    QJsonObject obj;
    if (m_glue.isSet()) {
        obj.insert(QString("glue"), ::OpenAPI::toJsonValue(m_glue));
    }
    return obj;
}

OAICreateConfiguredTable_request_tableReference_glue OAIConfiguredTable_tableReference::getGlue() const {
    return m_glue;
}
void OAIConfiguredTable_tableReference::setGlue(const OAICreateConfiguredTable_request_tableReference_glue &glue) {
    m_glue = glue;
    m_glue_isSet = true;
}

bool OAIConfiguredTable_tableReference::is_glue_Set() const{
    return m_glue_isSet;
}

bool OAIConfiguredTable_tableReference::is_glue_Valid() const{
    return m_glue_isValid;
}

bool OAIConfiguredTable_tableReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_glue.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfiguredTable_tableReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
