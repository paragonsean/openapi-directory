/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterableMemberStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterableMemberStatus::OAIFilterableMemberStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterableMemberStatus::OAIFilterableMemberStatus() {
    this->initializeModel();
}

OAIFilterableMemberStatus::~OAIFilterableMemberStatus() {}

void OAIFilterableMemberStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFilterableMemberStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFilterableMemberStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("INVITED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterableMemberStatus::INVITED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterableMemberStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFilterableMemberStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFilterableMemberStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFilterableMemberStatus::INVITED:
            val = "INVITED";
            break;
        case eOAIFilterableMemberStatus::ACTIVE:
            val = "ACTIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFilterableMemberStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFilterableMemberStatus::eOAIFilterableMemberStatus OAIFilterableMemberStatus::getValue() const {
    return m_value;
}

void OAIFilterableMemberStatus::setValue(const OAIFilterableMemberStatus::eOAIFilterableMemberStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFilterableMemberStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIFilterableMemberStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
