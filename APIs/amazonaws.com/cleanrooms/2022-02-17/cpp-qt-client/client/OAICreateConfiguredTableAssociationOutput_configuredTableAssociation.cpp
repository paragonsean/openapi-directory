/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTableAssociationOutput_configuredTableAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::OAICreateConfiguredTableAssociationOutput_configuredTableAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::OAICreateConfiguredTableAssociationOutput_configuredTableAssociation() {
    this->initializeModel();
}

OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::~OAICreateConfiguredTableAssociationOutput_configuredTableAssociation() {}

void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_configured_table_id_isSet = false;
    m_configured_table_id_isValid = false;

    m_configured_table_arn_isSet = false;
    m_configured_table_arn_isValid = false;

    m_membership_id_isSet = false;
    m_membership_id_isValid = false;

    m_membership_arn_isSet = false;
    m_membership_arn_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_configured_table_id_isValid = ::OpenAPI::fromJsonValue(m_configured_table_id, json[QString("configuredTableId")]);
    m_configured_table_id_isSet = !json[QString("configuredTableId")].isNull() && m_configured_table_id_isValid;

    m_configured_table_arn_isValid = ::OpenAPI::fromJsonValue(m_configured_table_arn, json[QString("configuredTableArn")]);
    m_configured_table_arn_isSet = !json[QString("configuredTableArn")].isNull() && m_configured_table_arn_isValid;

    m_membership_id_isValid = ::OpenAPI::fromJsonValue(m_membership_id, json[QString("membershipId")]);
    m_membership_id_isSet = !json[QString("membershipId")].isNull() && m_membership_id_isValid;

    m_membership_arn_isValid = ::OpenAPI::fromJsonValue(m_membership_arn, json[QString("membershipArn")]);
    m_membership_arn_isSet = !json[QString("membershipArn")].isNull() && m_membership_arn_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("roleArn")]);
    m_role_arn_isSet = !json[QString("roleArn")].isNull() && m_role_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_configured_table_id_isSet) {
        obj.insert(QString("configuredTableId"), ::OpenAPI::toJsonValue(m_configured_table_id));
    }
    if (m_configured_table_arn_isSet) {
        obj.insert(QString("configuredTableArn"), ::OpenAPI::toJsonValue(m_configured_table_arn));
    }
    if (m_membership_id_isSet) {
        obj.insert(QString("membershipId"), ::OpenAPI::toJsonValue(m_membership_id));
    }
    if (m_membership_arn_isSet) {
        obj.insert(QString("membershipArn"), ::OpenAPI::toJsonValue(m_membership_arn));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("roleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getArn() const {
    return m_arn;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getId() const {
    return m_id;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getConfiguredTableId() const {
    return m_configured_table_id;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setConfiguredTableId(const QString &configured_table_id) {
    m_configured_table_id = configured_table_id;
    m_configured_table_id_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_configured_table_id_Set() const{
    return m_configured_table_id_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_configured_table_id_Valid() const{
    return m_configured_table_id_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getConfiguredTableArn() const {
    return m_configured_table_arn;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setConfiguredTableArn(const QString &configured_table_arn) {
    m_configured_table_arn = configured_table_arn;
    m_configured_table_arn_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_configured_table_arn_Set() const{
    return m_configured_table_arn_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_configured_table_arn_Valid() const{
    return m_configured_table_arn_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getMembershipId() const {
    return m_membership_id;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setMembershipId(const QString &membership_id) {
    m_membership_id = membership_id;
    m_membership_id_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_membership_id_Set() const{
    return m_membership_id_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_membership_id_Valid() const{
    return m_membership_id_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getMembershipArn() const {
    return m_membership_arn;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setMembershipArn(const QString &membership_arn) {
    m_membership_arn = membership_arn;
    m_membership_arn_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_membership_arn_Set() const{
    return m_membership_arn_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_membership_arn_Valid() const{
    return m_membership_arn_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getRoleArn() const {
    return m_role_arn;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getName() const {
    return m_name;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getDescription() const {
    return m_description;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getCreateTime() const {
    return m_create_time;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QDateTime OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::getUpdateTime() const {
    return m_update_time;
}
void OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configured_table_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configured_table_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTableAssociationOutput_configuredTableAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && m_id_isValid && m_configured_table_id_isValid && m_configured_table_arn_isValid && m_membership_id_isValid && m_membership_arn_isValid && m_role_arn_isValid && m_name_isValid && m_create_time_isValid && m_update_time_isValid && true;
}

} // namespace OpenAPI
