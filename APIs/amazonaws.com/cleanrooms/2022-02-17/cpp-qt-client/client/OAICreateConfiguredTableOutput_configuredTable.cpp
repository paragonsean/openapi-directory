/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTableOutput_configuredTable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTableOutput_configuredTable::OAICreateConfiguredTableOutput_configuredTable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTableOutput_configuredTable::OAICreateConfiguredTableOutput_configuredTable() {
    this->initializeModel();
}

OAICreateConfiguredTableOutput_configuredTable::~OAICreateConfiguredTableOutput_configuredTable() {}

void OAICreateConfiguredTableOutput_configuredTable::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_table_reference_isSet = false;
    m_table_reference_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_analysis_rule_types_isSet = false;
    m_analysis_rule_types_isValid = false;

    m_analysis_method_isSet = false;
    m_analysis_method_isValid = false;

    m_allowed_columns_isSet = false;
    m_allowed_columns_isValid = false;
}

void OAICreateConfiguredTableOutput_configuredTable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTableOutput_configuredTable::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_table_reference_isValid = ::OpenAPI::fromJsonValue(m_table_reference, json[QString("tableReference")]);
    m_table_reference_isSet = !json[QString("tableReference")].isNull() && m_table_reference_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_analysis_rule_types_isValid = ::OpenAPI::fromJsonValue(m_analysis_rule_types, json[QString("analysisRuleTypes")]);
    m_analysis_rule_types_isSet = !json[QString("analysisRuleTypes")].isNull() && m_analysis_rule_types_isValid;

    m_analysis_method_isValid = ::OpenAPI::fromJsonValue(m_analysis_method, json[QString("analysisMethod")]);
    m_analysis_method_isSet = !json[QString("analysisMethod")].isNull() && m_analysis_method_isValid;

    m_allowed_columns_isValid = ::OpenAPI::fromJsonValue(m_allowed_columns, json[QString("allowedColumns")]);
    m_allowed_columns_isSet = !json[QString("allowedColumns")].isNull() && m_allowed_columns_isValid;
}

QString OAICreateConfiguredTableOutput_configuredTable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTableOutput_configuredTable::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_table_reference.isSet()) {
        obj.insert(QString("tableReference"), ::OpenAPI::toJsonValue(m_table_reference));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_analysis_rule_types.isSet()) {
        obj.insert(QString("analysisRuleTypes"), ::OpenAPI::toJsonValue(m_analysis_rule_types));
    }
    if (m_analysis_method.isSet()) {
        obj.insert(QString("analysisMethod"), ::OpenAPI::toJsonValue(m_analysis_method));
    }
    if (m_allowed_columns.isSet()) {
        obj.insert(QString("allowedColumns"), ::OpenAPI::toJsonValue(m_allowed_columns));
    }
    return obj;
}

QString OAICreateConfiguredTableOutput_configuredTable::getId() const {
    return m_id;
}
void OAICreateConfiguredTableOutput_configuredTable::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateConfiguredTableOutput_configuredTable::getArn() const {
    return m_arn;
}
void OAICreateConfiguredTableOutput_configuredTable::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateConfiguredTableOutput_configuredTable::getName() const {
    return m_name;
}
void OAICreateConfiguredTableOutput_configuredTable::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateConfiguredTableOutput_configuredTable::getDescription() const {
    return m_description;
}
void OAICreateConfiguredTableOutput_configuredTable::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_description_Valid() const{
    return m_description_isValid;
}

OAIConfiguredTable_tableReference OAICreateConfiguredTableOutput_configuredTable::getTableReference() const {
    return m_table_reference;
}
void OAICreateConfiguredTableOutput_configuredTable::setTableReference(const OAIConfiguredTable_tableReference &table_reference) {
    m_table_reference = table_reference;
    m_table_reference_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_table_reference_Set() const{
    return m_table_reference_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_table_reference_Valid() const{
    return m_table_reference_isValid;
}

QDateTime OAICreateConfiguredTableOutput_configuredTable::getCreateTime() const {
    return m_create_time;
}
void OAICreateConfiguredTableOutput_configuredTable::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QDateTime OAICreateConfiguredTableOutput_configuredTable::getUpdateTime() const {
    return m_update_time;
}
void OAICreateConfiguredTableOutput_configuredTable::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QList OAICreateConfiguredTableOutput_configuredTable::getAnalysisRuleTypes() const {
    return m_analysis_rule_types;
}
void OAICreateConfiguredTableOutput_configuredTable::setAnalysisRuleTypes(const QList &analysis_rule_types) {
    m_analysis_rule_types = analysis_rule_types;
    m_analysis_rule_types_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_analysis_rule_types_Set() const{
    return m_analysis_rule_types_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_analysis_rule_types_Valid() const{
    return m_analysis_rule_types_isValid;
}

OAIAnalysisMethod OAICreateConfiguredTableOutput_configuredTable::getAnalysisMethod() const {
    return m_analysis_method;
}
void OAICreateConfiguredTableOutput_configuredTable::setAnalysisMethod(const OAIAnalysisMethod &analysis_method) {
    m_analysis_method = analysis_method;
    m_analysis_method_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_analysis_method_Set() const{
    return m_analysis_method_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_analysis_method_Valid() const{
    return m_analysis_method_isValid;
}

QList OAICreateConfiguredTableOutput_configuredTable::getAllowedColumns() const {
    return m_allowed_columns;
}
void OAICreateConfiguredTableOutput_configuredTable::setAllowedColumns(const QList &allowed_columns) {
    m_allowed_columns = allowed_columns;
    m_allowed_columns_isSet = true;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_allowed_columns_Set() const{
    return m_allowed_columns_isSet;
}

bool OAICreateConfiguredTableOutput_configuredTable::is_allowed_columns_Valid() const{
    return m_allowed_columns_isValid;
}

bool OAICreateConfiguredTableOutput_configuredTable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_analysis_rule_types.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_analysis_method.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_allowed_columns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTableOutput_configuredTable::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_arn_isValid && m_name_isValid && m_table_reference_isValid && m_create_time_isValid && m_update_time_isValid && m_analysis_rule_types_isValid && m_analysis_method_isValid && m_allowed_columns_isValid && true;
}

} // namespace OpenAPI
