/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSchemaOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSchemaOutput::OAIGetSchemaOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSchemaOutput::OAIGetSchemaOutput() {
    this->initializeModel();
}

OAIGetSchemaOutput::~OAIGetSchemaOutput() {}

void OAIGetSchemaOutput::initializeModel() {

    m_schema_isSet = false;
    m_schema_isValid = false;
}

void OAIGetSchemaOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSchemaOutput::fromJsonObject(QJsonObject json) {

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("schema")]);
    m_schema_isSet = !json[QString("schema")].isNull() && m_schema_isValid;
}

QString OAIGetSchemaOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSchemaOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_schema.isSet()) {
        obj.insert(QString("schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    return obj;
}

OAIGetSchemaOutput_schema OAIGetSchemaOutput::getSchema() const {
    return m_schema;
}
void OAIGetSchemaOutput::setSchema(const OAIGetSchemaOutput_schema &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAIGetSchemaOutput::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAIGetSchemaOutput::is_schema_Valid() const{
    return m_schema_isValid;
}

bool OAIGetSchemaOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSchemaOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schema_isValid && true;
}

} // namespace OpenAPI
