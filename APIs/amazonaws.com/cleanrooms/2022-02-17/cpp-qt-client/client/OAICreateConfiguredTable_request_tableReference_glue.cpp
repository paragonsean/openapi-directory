/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTable_request_tableReference_glue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTable_request_tableReference_glue::OAICreateConfiguredTable_request_tableReference_glue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTable_request_tableReference_glue::OAICreateConfiguredTable_request_tableReference_glue() {
    this->initializeModel();
}

OAICreateConfiguredTable_request_tableReference_glue::~OAICreateConfiguredTable_request_tableReference_glue() {}

void OAICreateConfiguredTable_request_tableReference_glue::initializeModel() {

    m_table_name_isSet = false;
    m_table_name_isValid = false;

    m_database_name_isSet = false;
    m_database_name_isValid = false;
}

void OAICreateConfiguredTable_request_tableReference_glue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTable_request_tableReference_glue::fromJsonObject(QJsonObject json) {

    m_table_name_isValid = ::OpenAPI::fromJsonValue(m_table_name, json[QString("tableName")]);
    m_table_name_isSet = !json[QString("tableName")].isNull() && m_table_name_isValid;

    m_database_name_isValid = ::OpenAPI::fromJsonValue(m_database_name, json[QString("databaseName")]);
    m_database_name_isSet = !json[QString("databaseName")].isNull() && m_database_name_isValid;
}

QString OAICreateConfiguredTable_request_tableReference_glue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTable_request_tableReference_glue::asJsonObject() const {
    QJsonObject obj;
    if (m_table_name_isSet) {
        obj.insert(QString("tableName"), ::OpenAPI::toJsonValue(m_table_name));
    }
    if (m_database_name_isSet) {
        obj.insert(QString("databaseName"), ::OpenAPI::toJsonValue(m_database_name));
    }
    return obj;
}

QString OAICreateConfiguredTable_request_tableReference_glue::getTableName() const {
    return m_table_name;
}
void OAICreateConfiguredTable_request_tableReference_glue::setTableName(const QString &table_name) {
    m_table_name = table_name;
    m_table_name_isSet = true;
}

bool OAICreateConfiguredTable_request_tableReference_glue::is_table_name_Set() const{
    return m_table_name_isSet;
}

bool OAICreateConfiguredTable_request_tableReference_glue::is_table_name_Valid() const{
    return m_table_name_isValid;
}

QString OAICreateConfiguredTable_request_tableReference_glue::getDatabaseName() const {
    return m_database_name;
}
void OAICreateConfiguredTable_request_tableReference_glue::setDatabaseName(const QString &database_name) {
    m_database_name = database_name;
    m_database_name_isSet = true;
}

bool OAICreateConfiguredTable_request_tableReference_glue::is_database_name_Set() const{
    return m_database_name_isSet;
}

bool OAICreateConfiguredTable_request_tableReference_glue::is_database_name_Valid() const{
    return m_database_name_isValid;
}

bool OAICreateConfiguredTable_request_tableReference_glue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_table_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTable_request_tableReference_glue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_table_name_isValid && m_database_name_isValid && true;
}

} // namespace OpenAPI
