/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateConfiguredTableOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateConfiguredTableOutput::OAIUpdateConfiguredTableOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateConfiguredTableOutput::OAIUpdateConfiguredTableOutput() {
    this->initializeModel();
}

OAIUpdateConfiguredTableOutput::~OAIUpdateConfiguredTableOutput() {}

void OAIUpdateConfiguredTableOutput::initializeModel() {

    m_configured_table_isSet = false;
    m_configured_table_isValid = false;
}

void OAIUpdateConfiguredTableOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateConfiguredTableOutput::fromJsonObject(QJsonObject json) {

    m_configured_table_isValid = ::OpenAPI::fromJsonValue(m_configured_table, json[QString("configuredTable")]);
    m_configured_table_isSet = !json[QString("configuredTable")].isNull() && m_configured_table_isValid;
}

QString OAIUpdateConfiguredTableOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateConfiguredTableOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_configured_table.isSet()) {
        obj.insert(QString("configuredTable"), ::OpenAPI::toJsonValue(m_configured_table));
    }
    return obj;
}

OAIUpdateConfiguredTableOutput_configuredTable OAIUpdateConfiguredTableOutput::getConfiguredTable() const {
    return m_configured_table;
}
void OAIUpdateConfiguredTableOutput::setConfiguredTable(const OAIUpdateConfiguredTableOutput_configuredTable &configured_table) {
    m_configured_table = configured_table;
    m_configured_table_isSet = true;
}

bool OAIUpdateConfiguredTableOutput::is_configured_table_Set() const{
    return m_configured_table_isSet;
}

bool OAIUpdateConfiguredTableOutput::is_configured_table_Valid() const{
    return m_configured_table_isValid;
}

bool OAIUpdateConfiguredTableOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configured_table.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateConfiguredTableOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configured_table_isValid && true;
}

} // namespace OpenAPI
