/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMemberSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMemberSpecification::OAIMemberSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMemberSpecification::OAIMemberSpecification() {
    this->initializeModel();
}

OAIMemberSpecification::~OAIMemberSpecification() {}

void OAIMemberSpecification::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_member_abilities_isSet = false;
    m_member_abilities_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;
}

void OAIMemberSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMemberSpecification::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_member_abilities_isValid = ::OpenAPI::fromJsonValue(m_member_abilities, json[QString("memberAbilities")]);
    m_member_abilities_isSet = !json[QString("memberAbilities")].isNull() && m_member_abilities_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;
}

QString OAIMemberSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMemberSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_member_abilities.isSet()) {
        obj.insert(QString("memberAbilities"), ::OpenAPI::toJsonValue(m_member_abilities));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    return obj;
}

QString OAIMemberSpecification::getAccountId() const {
    return m_account_id;
}
void OAIMemberSpecification::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIMemberSpecification::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIMemberSpecification::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QList OAIMemberSpecification::getMemberAbilities() const {
    return m_member_abilities;
}
void OAIMemberSpecification::setMemberAbilities(const QList &member_abilities) {
    m_member_abilities = member_abilities;
    m_member_abilities_isSet = true;
}

bool OAIMemberSpecification::is_member_abilities_Set() const{
    return m_member_abilities_isSet;
}

bool OAIMemberSpecification::is_member_abilities_Valid() const{
    return m_member_abilities_isValid;
}

QString OAIMemberSpecification::getDisplayName() const {
    return m_display_name;
}
void OAIMemberSpecification::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIMemberSpecification::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIMemberSpecification::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIMemberSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_abilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMemberSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_member_abilities_isValid && m_display_name_isValid && true;
}

} // namespace OpenAPI
