/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalysisRule_policy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalysisRule_policy::OAIAnalysisRule_policy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalysisRule_policy::OAIAnalysisRule_policy() {
    this->initializeModel();
}

OAIAnalysisRule_policy::~OAIAnalysisRule_policy() {}

void OAIAnalysisRule_policy::initializeModel() {

    m_v1_isSet = false;
    m_v1_isValid = false;
}

void OAIAnalysisRule_policy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalysisRule_policy::fromJsonObject(QJsonObject json) {

    m_v1_isValid = ::OpenAPI::fromJsonValue(m_v1, json[QString("v1")]);
    m_v1_isSet = !json[QString("v1")].isNull() && m_v1_isValid;
}

QString OAIAnalysisRule_policy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalysisRule_policy::asJsonObject() const {
    QJsonObject obj;
    if (m_v1.isSet()) {
        obj.insert(QString("v1"), ::OpenAPI::toJsonValue(m_v1));
    }
    return obj;
}

OAIAnalysisRulePolicy_v1 OAIAnalysisRule_policy::getV1() const {
    return m_v1;
}
void OAIAnalysisRule_policy::setV1(const OAIAnalysisRulePolicy_v1 &v1) {
    m_v1 = v1;
    m_v1_isSet = true;
}

bool OAIAnalysisRule_policy::is_v1_Set() const{
    return m_v1_isSet;
}

bool OAIAnalysisRule_policy::is_v1_Valid() const{
    return m_v1_isValid;
}

bool OAIAnalysisRule_policy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_v1.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalysisRule_policy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
