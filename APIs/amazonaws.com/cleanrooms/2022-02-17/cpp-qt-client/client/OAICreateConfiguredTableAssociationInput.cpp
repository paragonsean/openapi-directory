/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTableAssociationInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTableAssociationInput::OAICreateConfiguredTableAssociationInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTableAssociationInput::OAICreateConfiguredTableAssociationInput() {
    this->initializeModel();
}

OAICreateConfiguredTableAssociationInput::~OAICreateConfiguredTableAssociationInput() {}

void OAICreateConfiguredTableAssociationInput::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_configured_table_identifier_isSet = false;
    m_configured_table_identifier_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateConfiguredTableAssociationInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTableAssociationInput::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_configured_table_identifier_isValid = ::OpenAPI::fromJsonValue(m_configured_table_identifier, json[QString("configuredTableIdentifier")]);
    m_configured_table_identifier_isSet = !json[QString("configuredTableIdentifier")].isNull() && m_configured_table_identifier_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("roleArn")]);
    m_role_arn_isSet = !json[QString("roleArn")].isNull() && m_role_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateConfiguredTableAssociationInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTableAssociationInput::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_configured_table_identifier_isSet) {
        obj.insert(QString("configuredTableIdentifier"), ::OpenAPI::toJsonValue(m_configured_table_identifier));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("roleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateConfiguredTableAssociationInput::getName() const {
    return m_name;
}
void OAICreateConfiguredTableAssociationInput::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateConfiguredTableAssociationInput::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateConfiguredTableAssociationInput::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateConfiguredTableAssociationInput::getDescription() const {
    return m_description;
}
void OAICreateConfiguredTableAssociationInput::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateConfiguredTableAssociationInput::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateConfiguredTableAssociationInput::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateConfiguredTableAssociationInput::getConfiguredTableIdentifier() const {
    return m_configured_table_identifier;
}
void OAICreateConfiguredTableAssociationInput::setConfiguredTableIdentifier(const QString &configured_table_identifier) {
    m_configured_table_identifier = configured_table_identifier;
    m_configured_table_identifier_isSet = true;
}

bool OAICreateConfiguredTableAssociationInput::is_configured_table_identifier_Set() const{
    return m_configured_table_identifier_isSet;
}

bool OAICreateConfiguredTableAssociationInput::is_configured_table_identifier_Valid() const{
    return m_configured_table_identifier_isValid;
}

QString OAICreateConfiguredTableAssociationInput::getRoleArn() const {
    return m_role_arn;
}
void OAICreateConfiguredTableAssociationInput::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAICreateConfiguredTableAssociationInput::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAICreateConfiguredTableAssociationInput::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QMap OAICreateConfiguredTableAssociationInput::getTags() const {
    return m_tags;
}
void OAICreateConfiguredTableAssociationInput::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateConfiguredTableAssociationInput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateConfiguredTableAssociationInput::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateConfiguredTableAssociationInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configured_table_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTableAssociationInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_configured_table_identifier_isValid && m_role_arn_isValid && true;
}

} // namespace OpenAPI
