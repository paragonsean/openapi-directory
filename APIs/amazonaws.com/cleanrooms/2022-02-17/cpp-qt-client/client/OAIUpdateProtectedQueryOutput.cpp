/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateProtectedQueryOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateProtectedQueryOutput::OAIUpdateProtectedQueryOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateProtectedQueryOutput::OAIUpdateProtectedQueryOutput() {
    this->initializeModel();
}

OAIUpdateProtectedQueryOutput::~OAIUpdateProtectedQueryOutput() {}

void OAIUpdateProtectedQueryOutput::initializeModel() {

    m_protected_query_isSet = false;
    m_protected_query_isValid = false;
}

void OAIUpdateProtectedQueryOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateProtectedQueryOutput::fromJsonObject(QJsonObject json) {

    m_protected_query_isValid = ::OpenAPI::fromJsonValue(m_protected_query, json[QString("protectedQuery")]);
    m_protected_query_isSet = !json[QString("protectedQuery")].isNull() && m_protected_query_isValid;
}

QString OAIUpdateProtectedQueryOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateProtectedQueryOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_protected_query.isSet()) {
        obj.insert(QString("protectedQuery"), ::OpenAPI::toJsonValue(m_protected_query));
    }
    return obj;
}

OAIUpdateProtectedQueryOutput_protectedQuery OAIUpdateProtectedQueryOutput::getProtectedQuery() const {
    return m_protected_query;
}
void OAIUpdateProtectedQueryOutput::setProtectedQuery(const OAIUpdateProtectedQueryOutput_protectedQuery &protected_query) {
    m_protected_query = protected_query;
    m_protected_query_isSet = true;
}

bool OAIUpdateProtectedQueryOutput::is_protected_query_Set() const{
    return m_protected_query_isSet;
}

bool OAIUpdateProtectedQueryOutput::is_protected_query_Valid() const{
    return m_protected_query_isValid;
}

bool OAIUpdateProtectedQueryOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_protected_query.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateProtectedQueryOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_protected_query_isValid && true;
}

} // namespace OpenAPI
