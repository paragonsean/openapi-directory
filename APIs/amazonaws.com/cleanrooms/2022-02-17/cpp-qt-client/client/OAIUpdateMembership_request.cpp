/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMembership_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMembership_request::OAIUpdateMembership_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMembership_request::OAIUpdateMembership_request() {
    this->initializeModel();
}

OAIUpdateMembership_request::~OAIUpdateMembership_request() {}

void OAIUpdateMembership_request::initializeModel() {

    m_query_log_status_isSet = false;
    m_query_log_status_isValid = false;
}

void OAIUpdateMembership_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateMembership_request::fromJsonObject(QJsonObject json) {

    m_query_log_status_isValid = ::OpenAPI::fromJsonValue(m_query_log_status, json[QString("queryLogStatus")]);
    m_query_log_status_isSet = !json[QString("queryLogStatus")].isNull() && m_query_log_status_isValid;
}

QString OAIUpdateMembership_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateMembership_request::asJsonObject() const {
    QJsonObject obj;
    if (m_query_log_status_isSet) {
        obj.insert(QString("queryLogStatus"), ::OpenAPI::toJsonValue(m_query_log_status));
    }
    return obj;
}

QString OAIUpdateMembership_request::getQueryLogStatus() const {
    return m_query_log_status;
}
void OAIUpdateMembership_request::setQueryLogStatus(const QString &query_log_status) {
    m_query_log_status = query_log_status;
    m_query_log_status_isSet = true;
}

bool OAIUpdateMembership_request::is_query_log_status_Set() const{
    return m_query_log_status_isSet;
}

bool OAIUpdateMembership_request::is_query_log_status_Valid() const{
    return m_query_log_status_isValid;
}

bool OAIUpdateMembership_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_query_log_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateMembership_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
