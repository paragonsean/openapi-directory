/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartProtectedQueryInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartProtectedQueryInput::OAIStartProtectedQueryInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartProtectedQueryInput::OAIStartProtectedQueryInput() {
    this->initializeModel();
}

OAIStartProtectedQueryInput::~OAIStartProtectedQueryInput() {}

void OAIStartProtectedQueryInput::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_sql_parameters_isSet = false;
    m_sql_parameters_isValid = false;

    m_result_configuration_isSet = false;
    m_result_configuration_isValid = false;
}

void OAIStartProtectedQueryInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartProtectedQueryInput::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_sql_parameters_isValid = ::OpenAPI::fromJsonValue(m_sql_parameters, json[QString("sqlParameters")]);
    m_sql_parameters_isSet = !json[QString("sqlParameters")].isNull() && m_sql_parameters_isValid;

    m_result_configuration_isValid = ::OpenAPI::fromJsonValue(m_result_configuration, json[QString("resultConfiguration")]);
    m_result_configuration_isSet = !json[QString("resultConfiguration")].isNull() && m_result_configuration_isValid;
}

QString OAIStartProtectedQueryInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartProtectedQueryInput::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_sql_parameters.isSet()) {
        obj.insert(QString("sqlParameters"), ::OpenAPI::toJsonValue(m_sql_parameters));
    }
    if (m_result_configuration.isSet()) {
        obj.insert(QString("resultConfiguration"), ::OpenAPI::toJsonValue(m_result_configuration));
    }
    return obj;
}

OAIProtectedQueryType OAIStartProtectedQueryInput::getType() const {
    return m_type;
}
void OAIStartProtectedQueryInput::setType(const OAIProtectedQueryType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIStartProtectedQueryInput::is_type_Set() const{
    return m_type_isSet;
}

bool OAIStartProtectedQueryInput::is_type_Valid() const{
    return m_type_isValid;
}

OAIStartProtectedQueryInput_sqlParameters OAIStartProtectedQueryInput::getSqlParameters() const {
    return m_sql_parameters;
}
void OAIStartProtectedQueryInput::setSqlParameters(const OAIStartProtectedQueryInput_sqlParameters &sql_parameters) {
    m_sql_parameters = sql_parameters;
    m_sql_parameters_isSet = true;
}

bool OAIStartProtectedQueryInput::is_sql_parameters_Set() const{
    return m_sql_parameters_isSet;
}

bool OAIStartProtectedQueryInput::is_sql_parameters_Valid() const{
    return m_sql_parameters_isValid;
}

OAIStartProtectedQueryInput_resultConfiguration OAIStartProtectedQueryInput::getResultConfiguration() const {
    return m_result_configuration;
}
void OAIStartProtectedQueryInput::setResultConfiguration(const OAIStartProtectedQueryInput_resultConfiguration &result_configuration) {
    m_result_configuration = result_configuration;
    m_result_configuration_isSet = true;
}

bool OAIStartProtectedQueryInput::is_result_configuration_Set() const{
    return m_result_configuration_isSet;
}

bool OAIStartProtectedQueryInput::is_result_configuration_Valid() const{
    return m_result_configuration_isValid;
}

bool OAIStartProtectedQueryInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartProtectedQueryInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && m_sql_parameters_isValid && m_result_configuration_isValid && true;
}

} // namespace OpenAPI
