/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAnalysisTemplate_request.h
 *
 * 
 */

#ifndef OAICreateAnalysisTemplate_request_H
#define OAICreateAnalysisTemplate_request_H

#include <QJsonObject>

#include "OAIAnalysisParameter.h"
#include "OAICreateAnalysisTemplate_request_source.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAnalysisTemplate_request_source;
class OAIAnalysisParameter;

class OAICreateAnalysisTemplate_request : public OAIObject {
public:
    OAICreateAnalysisTemplate_request();
    OAICreateAnalysisTemplate_request(QString json);
    ~OAICreateAnalysisTemplate_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    OAICreateAnalysisTemplate_request_source getSource() const;
    void setSource(const OAICreateAnalysisTemplate_request_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList<OAIAnalysisParameter> getAnalysisParameters() const;
    void setAnalysisParameters(const QList<OAIAnalysisParameter> &analysis_parameters);
    bool is_analysis_parameters_Set() const;
    bool is_analysis_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    OAICreateAnalysisTemplate_request_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList<OAIAnalysisParameter> m_analysis_parameters;
    bool m_analysis_parameters_isSet;
    bool m_analysis_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAnalysisTemplate_request)

#endif // OAICreateAnalysisTemplate_request_H
