/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembershipStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembershipStatus::OAIMembershipStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembershipStatus::OAIMembershipStatus() {
    this->initializeModel();
}

OAIMembershipStatus::~OAIMembershipStatus() {}

void OAIMembershipStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMembershipStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMembershipStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMembershipStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REMOVED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMembershipStatus::REMOVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COLLABORATION_DELETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMembershipStatus::COLLABORATION_DELETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMembershipStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMembershipStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMembershipStatus::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIMembershipStatus::REMOVED:
            val = "REMOVED";
            break;
        case eOAIMembershipStatus::COLLABORATION_DELETED:
            val = "COLLABORATION_DELETED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMembershipStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMembershipStatus::eOAIMembershipStatus OAIMembershipStatus::getValue() const {
    return m_value;
}

void OAIMembershipStatus::setValue(const OAIMembershipStatus::eOAIMembershipStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMembershipStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIMembershipStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
