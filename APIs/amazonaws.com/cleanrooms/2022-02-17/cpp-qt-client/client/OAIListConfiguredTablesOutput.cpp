/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListConfiguredTablesOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListConfiguredTablesOutput::OAIListConfiguredTablesOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListConfiguredTablesOutput::OAIListConfiguredTablesOutput() {
    this->initializeModel();
}

OAIListConfiguredTablesOutput::~OAIListConfiguredTablesOutput() {}

void OAIListConfiguredTablesOutput::initializeModel() {

    m_configured_table_summaries_isSet = false;
    m_configured_table_summaries_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListConfiguredTablesOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListConfiguredTablesOutput::fromJsonObject(QJsonObject json) {

    m_configured_table_summaries_isValid = ::OpenAPI::fromJsonValue(m_configured_table_summaries, json[QString("configuredTableSummaries")]);
    m_configured_table_summaries_isSet = !json[QString("configuredTableSummaries")].isNull() && m_configured_table_summaries_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListConfiguredTablesOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListConfiguredTablesOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_configured_table_summaries.isSet()) {
        obj.insert(QString("configuredTableSummaries"), ::OpenAPI::toJsonValue(m_configured_table_summaries));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListConfiguredTablesOutput::getConfiguredTableSummaries() const {
    return m_configured_table_summaries;
}
void OAIListConfiguredTablesOutput::setConfiguredTableSummaries(const QList &configured_table_summaries) {
    m_configured_table_summaries = configured_table_summaries;
    m_configured_table_summaries_isSet = true;
}

bool OAIListConfiguredTablesOutput::is_configured_table_summaries_Set() const{
    return m_configured_table_summaries_isSet;
}

bool OAIListConfiguredTablesOutput::is_configured_table_summaries_Valid() const{
    return m_configured_table_summaries_isValid;
}

QString OAIListConfiguredTablesOutput::getNextToken() const {
    return m_next_token;
}
void OAIListConfiguredTablesOutput::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListConfiguredTablesOutput::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListConfiguredTablesOutput::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListConfiguredTablesOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configured_table_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListConfiguredTablesOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configured_table_summaries_isValid && true;
}

} // namespace OpenAPI
