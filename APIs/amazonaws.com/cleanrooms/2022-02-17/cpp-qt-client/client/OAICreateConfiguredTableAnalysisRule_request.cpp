/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTableAnalysisRule_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTableAnalysisRule_request::OAICreateConfiguredTableAnalysisRule_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTableAnalysisRule_request::OAICreateConfiguredTableAnalysisRule_request() {
    this->initializeModel();
}

OAICreateConfiguredTableAnalysisRule_request::~OAICreateConfiguredTableAnalysisRule_request() {}

void OAICreateConfiguredTableAnalysisRule_request::initializeModel() {

    m_analysis_rule_type_isSet = false;
    m_analysis_rule_type_isValid = false;

    m_analysis_rule_policy_isSet = false;
    m_analysis_rule_policy_isValid = false;
}

void OAICreateConfiguredTableAnalysisRule_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTableAnalysisRule_request::fromJsonObject(QJsonObject json) {

    m_analysis_rule_type_isValid = ::OpenAPI::fromJsonValue(m_analysis_rule_type, json[QString("analysisRuleType")]);
    m_analysis_rule_type_isSet = !json[QString("analysisRuleType")].isNull() && m_analysis_rule_type_isValid;

    m_analysis_rule_policy_isValid = ::OpenAPI::fromJsonValue(m_analysis_rule_policy, json[QString("analysisRulePolicy")]);
    m_analysis_rule_policy_isSet = !json[QString("analysisRulePolicy")].isNull() && m_analysis_rule_policy_isValid;
}

QString OAICreateConfiguredTableAnalysisRule_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTableAnalysisRule_request::asJsonObject() const {
    QJsonObject obj;
    if (m_analysis_rule_type_isSet) {
        obj.insert(QString("analysisRuleType"), ::OpenAPI::toJsonValue(m_analysis_rule_type));
    }
    if (m_analysis_rule_policy.isSet()) {
        obj.insert(QString("analysisRulePolicy"), ::OpenAPI::toJsonValue(m_analysis_rule_policy));
    }
    return obj;
}

QString OAICreateConfiguredTableAnalysisRule_request::getAnalysisRuleType() const {
    return m_analysis_rule_type;
}
void OAICreateConfiguredTableAnalysisRule_request::setAnalysisRuleType(const QString &analysis_rule_type) {
    m_analysis_rule_type = analysis_rule_type;
    m_analysis_rule_type_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRule_request::is_analysis_rule_type_Set() const{
    return m_analysis_rule_type_isSet;
}

bool OAICreateConfiguredTableAnalysisRule_request::is_analysis_rule_type_Valid() const{
    return m_analysis_rule_type_isValid;
}

OAICreateConfiguredTableAnalysisRule_request_analysisRulePolicy OAICreateConfiguredTableAnalysisRule_request::getAnalysisRulePolicy() const {
    return m_analysis_rule_policy;
}
void OAICreateConfiguredTableAnalysisRule_request::setAnalysisRulePolicy(const OAICreateConfiguredTableAnalysisRule_request_analysisRulePolicy &analysis_rule_policy) {
    m_analysis_rule_policy = analysis_rule_policy;
    m_analysis_rule_policy_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRule_request::is_analysis_rule_policy_Set() const{
    return m_analysis_rule_policy_isSet;
}

bool OAICreateConfiguredTableAnalysisRule_request::is_analysis_rule_policy_Valid() const{
    return m_analysis_rule_policy_isValid;
}

bool OAICreateConfiguredTableAnalysisRule_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analysis_rule_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_analysis_rule_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTableAnalysisRule_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_analysis_rule_type_isValid && m_analysis_rule_policy_isValid && true;
}

} // namespace OpenAPI
