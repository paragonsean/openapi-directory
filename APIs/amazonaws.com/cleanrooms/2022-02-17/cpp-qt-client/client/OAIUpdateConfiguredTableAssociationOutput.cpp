/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateConfiguredTableAssociationOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateConfiguredTableAssociationOutput::OAIUpdateConfiguredTableAssociationOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateConfiguredTableAssociationOutput::OAIUpdateConfiguredTableAssociationOutput() {
    this->initializeModel();
}

OAIUpdateConfiguredTableAssociationOutput::~OAIUpdateConfiguredTableAssociationOutput() {}

void OAIUpdateConfiguredTableAssociationOutput::initializeModel() {

    m_configured_table_association_isSet = false;
    m_configured_table_association_isValid = false;
}

void OAIUpdateConfiguredTableAssociationOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateConfiguredTableAssociationOutput::fromJsonObject(QJsonObject json) {

    m_configured_table_association_isValid = ::OpenAPI::fromJsonValue(m_configured_table_association, json[QString("configuredTableAssociation")]);
    m_configured_table_association_isSet = !json[QString("configuredTableAssociation")].isNull() && m_configured_table_association_isValid;
}

QString OAIUpdateConfiguredTableAssociationOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateConfiguredTableAssociationOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_configured_table_association.isSet()) {
        obj.insert(QString("configuredTableAssociation"), ::OpenAPI::toJsonValue(m_configured_table_association));
    }
    return obj;
}

OAIUpdateConfiguredTableAssociationOutput_configuredTableAssociation OAIUpdateConfiguredTableAssociationOutput::getConfiguredTableAssociation() const {
    return m_configured_table_association;
}
void OAIUpdateConfiguredTableAssociationOutput::setConfiguredTableAssociation(const OAIUpdateConfiguredTableAssociationOutput_configuredTableAssociation &configured_table_association) {
    m_configured_table_association = configured_table_association;
    m_configured_table_association_isSet = true;
}

bool OAIUpdateConfiguredTableAssociationOutput::is_configured_table_association_Set() const{
    return m_configured_table_association_isSet;
}

bool OAIUpdateConfiguredTableAssociationOutput::is_configured_table_association_Valid() const{
    return m_configured_table_association_isValid;
}

bool OAIUpdateConfiguredTableAssociationOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configured_table_association.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateConfiguredTableAssociationOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configured_table_association_isValid && true;
}

} // namespace OpenAPI
