/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchemaSummary.h
 *
 * The schema summary for the objects listed by the request.
 */

#ifndef OAISchemaSummary_H
#define OAISchemaSummary_H

#include <QJsonObject>

#include "OAIAnalysisMethod.h"
#include "OAISchemaType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISchemaSummary : public OAIObject {
public:
    OAISchemaSummary();
    OAISchemaSummary(QString json);
    ~OAISchemaSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAISchemaType getType() const;
    void setType(const OAISchemaType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getCreatorAccountId() const;
    void setCreatorAccountId(const QString &creator_account_id);
    bool is_creator_account_id_Set() const;
    bool is_creator_account_id_Valid() const;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getCollaborationId() const;
    void setCollaborationId(const QString &collaboration_id);
    bool is_collaboration_id_Set() const;
    bool is_collaboration_id_Valid() const;

    QString getCollaborationArn() const;
    void setCollaborationArn(const QString &collaboration_arn);
    bool is_collaboration_arn_Set() const;
    bool is_collaboration_arn_Valid() const;

    QList getAnalysisRuleTypes() const;
    void setAnalysisRuleTypes(const QList &analysis_rule_types);
    bool is_analysis_rule_types_Set() const;
    bool is_analysis_rule_types_Valid() const;

    OAIAnalysisMethod getAnalysisMethod() const;
    void setAnalysisMethod(const OAIAnalysisMethod &analysis_method);
    bool is_analysis_method_Set() const;
    bool is_analysis_method_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAISchemaType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_creator_account_id;
    bool m_creator_account_id_isSet;
    bool m_creator_account_id_isValid;

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QDateTime m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_collaboration_id;
    bool m_collaboration_id_isSet;
    bool m_collaboration_id_isValid;

    QString m_collaboration_arn;
    bool m_collaboration_arn_isSet;
    bool m_collaboration_arn_isValid;

    QList m_analysis_rule_types;
    bool m_analysis_rule_types_isSet;
    bool m_analysis_rule_types_isValid;

    OAIAnalysisMethod m_analysis_method;
    bool m_analysis_method_isSet;
    bool m_analysis_method_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchemaSummary)

#endif // OAISchemaSummary_H
