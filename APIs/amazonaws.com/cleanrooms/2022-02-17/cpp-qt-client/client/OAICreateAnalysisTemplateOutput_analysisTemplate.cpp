/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAnalysisTemplateOutput_analysisTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAnalysisTemplateOutput_analysisTemplate::OAICreateAnalysisTemplateOutput_analysisTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAnalysisTemplateOutput_analysisTemplate::OAICreateAnalysisTemplateOutput_analysisTemplate() {
    this->initializeModel();
}

OAICreateAnalysisTemplateOutput_analysisTemplate::~OAICreateAnalysisTemplateOutput_analysisTemplate() {}

void OAICreateAnalysisTemplateOutput_analysisTemplate::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_collaboration_id_isSet = false;
    m_collaboration_id_isValid = false;

    m_collaboration_arn_isSet = false;
    m_collaboration_arn_isValid = false;

    m_membership_id_isSet = false;
    m_membership_id_isValid = false;

    m_membership_arn_isSet = false;
    m_membership_arn_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_schema_isSet = false;
    m_schema_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_analysis_parameters_isSet = false;
    m_analysis_parameters_isValid = false;
}

void OAICreateAnalysisTemplateOutput_analysisTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAnalysisTemplateOutput_analysisTemplate::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_collaboration_id_isValid = ::OpenAPI::fromJsonValue(m_collaboration_id, json[QString("collaborationId")]);
    m_collaboration_id_isSet = !json[QString("collaborationId")].isNull() && m_collaboration_id_isValid;

    m_collaboration_arn_isValid = ::OpenAPI::fromJsonValue(m_collaboration_arn, json[QString("collaborationArn")]);
    m_collaboration_arn_isSet = !json[QString("collaborationArn")].isNull() && m_collaboration_arn_isValid;

    m_membership_id_isValid = ::OpenAPI::fromJsonValue(m_membership_id, json[QString("membershipId")]);
    m_membership_id_isSet = !json[QString("membershipId")].isNull() && m_membership_id_isValid;

    m_membership_arn_isValid = ::OpenAPI::fromJsonValue(m_membership_arn, json[QString("membershipArn")]);
    m_membership_arn_isSet = !json[QString("membershipArn")].isNull() && m_membership_arn_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("schema")]);
    m_schema_isSet = !json[QString("schema")].isNull() && m_schema_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_analysis_parameters_isValid = ::OpenAPI::fromJsonValue(m_analysis_parameters, json[QString("analysisParameters")]);
    m_analysis_parameters_isSet = !json[QString("analysisParameters")].isNull() && m_analysis_parameters_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAnalysisTemplateOutput_analysisTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_collaboration_id_isSet) {
        obj.insert(QString("collaborationId"), ::OpenAPI::toJsonValue(m_collaboration_id));
    }
    if (m_collaboration_arn_isSet) {
        obj.insert(QString("collaborationArn"), ::OpenAPI::toJsonValue(m_collaboration_arn));
    }
    if (m_membership_id_isSet) {
        obj.insert(QString("membershipId"), ::OpenAPI::toJsonValue(m_membership_id));
    }
    if (m_membership_arn_isSet) {
        obj.insert(QString("membershipArn"), ::OpenAPI::toJsonValue(m_membership_arn));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_schema.isSet()) {
        obj.insert(QString("schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    if (m_format.isSet()) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_source.isSet()) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_analysis_parameters.isSet()) {
        obj.insert(QString("analysisParameters"), ::OpenAPI::toJsonValue(m_analysis_parameters));
    }
    return obj;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getId() const {
    return m_id;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getArn() const {
    return m_arn;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getCollaborationId() const {
    return m_collaboration_id;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setCollaborationId(const QString &collaboration_id) {
    m_collaboration_id = collaboration_id;
    m_collaboration_id_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_collaboration_id_Set() const{
    return m_collaboration_id_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_collaboration_id_Valid() const{
    return m_collaboration_id_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getCollaborationArn() const {
    return m_collaboration_arn;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setCollaborationArn(const QString &collaboration_arn) {
    m_collaboration_arn = collaboration_arn;
    m_collaboration_arn_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_collaboration_arn_Set() const{
    return m_collaboration_arn_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_collaboration_arn_Valid() const{
    return m_collaboration_arn_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getMembershipId() const {
    return m_membership_id;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setMembershipId(const QString &membership_id) {
    m_membership_id = membership_id;
    m_membership_id_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_membership_id_Set() const{
    return m_membership_id_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_membership_id_Valid() const{
    return m_membership_id_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getMembershipArn() const {
    return m_membership_arn;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setMembershipArn(const QString &membership_arn) {
    m_membership_arn = membership_arn;
    m_membership_arn_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_membership_arn_Set() const{
    return m_membership_arn_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_membership_arn_Valid() const{
    return m_membership_arn_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getDescription() const {
    return m_description;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateAnalysisTemplateOutput_analysisTemplate::getName() const {
    return m_name;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAICreateAnalysisTemplateOutput_analysisTemplate::getCreateTime() const {
    return m_create_time;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QDateTime OAICreateAnalysisTemplateOutput_analysisTemplate::getUpdateTime() const {
    return m_update_time;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAIAnalysisTemplate_schema OAICreateAnalysisTemplateOutput_analysisTemplate::getSchema() const {
    return m_schema;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setSchema(const OAIAnalysisTemplate_schema &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_schema_Valid() const{
    return m_schema_isValid;
}

OAIAnalysisFormat OAICreateAnalysisTemplateOutput_analysisTemplate::getFormat() const {
    return m_format;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setFormat(const OAIAnalysisFormat &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_format_Set() const{
    return m_format_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_format_Valid() const{
    return m_format_isValid;
}

OAIAnalysisTemplate_source OAICreateAnalysisTemplateOutput_analysisTemplate::getSource() const {
    return m_source;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setSource(const OAIAnalysisTemplate_source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_source_Set() const{
    return m_source_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_source_Valid() const{
    return m_source_isValid;
}

QList OAICreateAnalysisTemplateOutput_analysisTemplate::getAnalysisParameters() const {
    return m_analysis_parameters;
}
void OAICreateAnalysisTemplateOutput_analysisTemplate::setAnalysisParameters(const QList &analysis_parameters) {
    m_analysis_parameters = analysis_parameters;
    m_analysis_parameters_isSet = true;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_analysis_parameters_Set() const{
    return m_analysis_parameters_isSet;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::is_analysis_parameters_Valid() const{
    return m_analysis_parameters_isValid;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_collaboration_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_collaboration_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_analysis_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAnalysisTemplateOutput_analysisTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_arn_isValid && m_collaboration_id_isValid && m_collaboration_arn_isValid && m_membership_id_isValid && m_membership_arn_isValid && m_name_isValid && m_create_time_isValid && m_update_time_isValid && m_schema_isValid && m_format_isValid && m_source_isValid && true;
}

} // namespace OpenAPI
