/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateProtectedQueryOutput_protectedQuery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateProtectedQueryOutput_protectedQuery::OAIUpdateProtectedQueryOutput_protectedQuery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateProtectedQueryOutput_protectedQuery::OAIUpdateProtectedQueryOutput_protectedQuery() {
    this->initializeModel();
}

OAIUpdateProtectedQueryOutput_protectedQuery::~OAIUpdateProtectedQueryOutput_protectedQuery() {}

void OAIUpdateProtectedQueryOutput_protectedQuery::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_membership_id_isSet = false;
    m_membership_id_isValid = false;

    m_membership_arn_isSet = false;
    m_membership_arn_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_sql_parameters_isSet = false;
    m_sql_parameters_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_result_configuration_isSet = false;
    m_result_configuration_isValid = false;

    m_statistics_isSet = false;
    m_statistics_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;
}

void OAIUpdateProtectedQueryOutput_protectedQuery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateProtectedQueryOutput_protectedQuery::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_membership_id_isValid = ::OpenAPI::fromJsonValue(m_membership_id, json[QString("membershipId")]);
    m_membership_id_isSet = !json[QString("membershipId")].isNull() && m_membership_id_isValid;

    m_membership_arn_isValid = ::OpenAPI::fromJsonValue(m_membership_arn, json[QString("membershipArn")]);
    m_membership_arn_isSet = !json[QString("membershipArn")].isNull() && m_membership_arn_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_sql_parameters_isValid = ::OpenAPI::fromJsonValue(m_sql_parameters, json[QString("sqlParameters")]);
    m_sql_parameters_isSet = !json[QString("sqlParameters")].isNull() && m_sql_parameters_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_result_configuration_isValid = ::OpenAPI::fromJsonValue(m_result_configuration, json[QString("resultConfiguration")]);
    m_result_configuration_isSet = !json[QString("resultConfiguration")].isNull() && m_result_configuration_isValid;

    m_statistics_isValid = ::OpenAPI::fromJsonValue(m_statistics, json[QString("statistics")]);
    m_statistics_isSet = !json[QString("statistics")].isNull() && m_statistics_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;
}

QString OAIUpdateProtectedQueryOutput_protectedQuery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateProtectedQueryOutput_protectedQuery::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_membership_id_isSet) {
        obj.insert(QString("membershipId"), ::OpenAPI::toJsonValue(m_membership_id));
    }
    if (m_membership_arn_isSet) {
        obj.insert(QString("membershipArn"), ::OpenAPI::toJsonValue(m_membership_arn));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_sql_parameters.isSet()) {
        obj.insert(QString("sqlParameters"), ::OpenAPI::toJsonValue(m_sql_parameters));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_result_configuration.isSet()) {
        obj.insert(QString("resultConfiguration"), ::OpenAPI::toJsonValue(m_result_configuration));
    }
    if (m_statistics.isSet()) {
        obj.insert(QString("statistics"), ::OpenAPI::toJsonValue(m_statistics));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    return obj;
}

QString OAIUpdateProtectedQueryOutput_protectedQuery::getId() const {
    return m_id;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIUpdateProtectedQueryOutput_protectedQuery::getMembershipId() const {
    return m_membership_id;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setMembershipId(const QString &membership_id) {
    m_membership_id = membership_id;
    m_membership_id_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_membership_id_Set() const{
    return m_membership_id_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_membership_id_Valid() const{
    return m_membership_id_isValid;
}

QString OAIUpdateProtectedQueryOutput_protectedQuery::getMembershipArn() const {
    return m_membership_arn;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setMembershipArn(const QString &membership_arn) {
    m_membership_arn = membership_arn;
    m_membership_arn_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_membership_arn_Set() const{
    return m_membership_arn_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_membership_arn_Valid() const{
    return m_membership_arn_isValid;
}

QDateTime OAIUpdateProtectedQueryOutput_protectedQuery::getCreateTime() const {
    return m_create_time;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIProtectedQuery_sqlParameters OAIUpdateProtectedQueryOutput_protectedQuery::getSqlParameters() const {
    return m_sql_parameters;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setSqlParameters(const OAIProtectedQuery_sqlParameters &sql_parameters) {
    m_sql_parameters = sql_parameters;
    m_sql_parameters_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_sql_parameters_Set() const{
    return m_sql_parameters_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_sql_parameters_Valid() const{
    return m_sql_parameters_isValid;
}

OAIProtectedQueryStatus OAIUpdateProtectedQueryOutput_protectedQuery::getStatus() const {
    return m_status;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setStatus(const OAIProtectedQueryStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_status_Valid() const{
    return m_status_isValid;
}

OAIProtectedQuery_resultConfiguration OAIUpdateProtectedQueryOutput_protectedQuery::getResultConfiguration() const {
    return m_result_configuration;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setResultConfiguration(const OAIProtectedQuery_resultConfiguration &result_configuration) {
    m_result_configuration = result_configuration;
    m_result_configuration_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_result_configuration_Set() const{
    return m_result_configuration_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_result_configuration_Valid() const{
    return m_result_configuration_isValid;
}

OAIProtectedQuery_statistics OAIUpdateProtectedQueryOutput_protectedQuery::getStatistics() const {
    return m_statistics;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setStatistics(const OAIProtectedQuery_statistics &statistics) {
    m_statistics = statistics;
    m_statistics_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_statistics_Set() const{
    return m_statistics_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_statistics_Valid() const{
    return m_statistics_isValid;
}

OAIProtectedQuery_result OAIUpdateProtectedQueryOutput_protectedQuery::getResult() const {
    return m_result;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setResult(const OAIProtectedQuery_result &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_result_Set() const{
    return m_result_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_result_Valid() const{
    return m_result_isValid;
}

OAIProtectedQuery_error OAIUpdateProtectedQueryOutput_protectedQuery::getError() const {
    return m_error;
}
void OAIUpdateProtectedQueryOutput_protectedQuery::setError(const OAIProtectedQuery_error &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_error_Set() const{
    return m_error_isSet;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::is_error_Valid() const{
    return m_error_isValid;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateProtectedQueryOutput_protectedQuery::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_membership_id_isValid && m_membership_arn_isValid && m_create_time_isValid && m_sql_parameters_isValid && m_status_isValid && m_result_configuration_isValid && true;
}

} // namespace OpenAPI
