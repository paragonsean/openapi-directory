/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration() {
    this->initializeModel();
}

OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::~OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration() {}

void OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::initializeModel() {

    m_s3_isSet = false;
    m_s3_isValid = false;
}

void OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::fromJsonObject(QJsonObject json) {

    m_s3_isValid = ::OpenAPI::fromJsonValue(m_s3, json[QString("s3")]);
    m_s3_isSet = !json[QString("s3")].isNull() && m_s3_isValid;
}

QString OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_s3.isSet()) {
        obj.insert(QString("s3"), ::OpenAPI::toJsonValue(m_s3));
    }
    return obj;
}

OAIProtectedQueryOutputConfiguration_s3 OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::getS3() const {
    return m_s3;
}
void OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::setS3(const OAIProtectedQueryOutputConfiguration_s3 &s3) {
    m_s3 = s3;
    m_s3_isSet = true;
}

bool OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::is_s3_Set() const{
    return m_s3_isSet;
}

bool OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::is_s3_Valid() const{
    return m_s3_isValid;
}

bool OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartProtectedQuery_request_resultConfiguration_outputConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
