/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateConfiguredTableInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateConfiguredTableInput::OAIUpdateConfiguredTableInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateConfiguredTableInput::OAIUpdateConfiguredTableInput() {
    this->initializeModel();
}

OAIUpdateConfiguredTableInput::~OAIUpdateConfiguredTableInput() {}

void OAIUpdateConfiguredTableInput::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIUpdateConfiguredTableInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateConfiguredTableInput::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIUpdateConfiguredTableInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateConfiguredTableInput::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIUpdateConfiguredTableInput::getName() const {
    return m_name;
}
void OAIUpdateConfiguredTableInput::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateConfiguredTableInput::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateConfiguredTableInput::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateConfiguredTableInput::getDescription() const {
    return m_description;
}
void OAIUpdateConfiguredTableInput::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateConfiguredTableInput::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateConfiguredTableInput::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIUpdateConfiguredTableInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateConfiguredTableInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
