/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfiguredTableAnalysisRuleOutput_analysisRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::OAICreateConfiguredTableAnalysisRuleOutput_analysisRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::OAICreateConfiguredTableAnalysisRuleOutput_analysisRule() {
    this->initializeModel();
}

OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::~OAICreateConfiguredTableAnalysisRuleOutput_analysisRule() {}

void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::initializeModel() {

    m_configured_table_id_isSet = false;
    m_configured_table_id_isValid = false;

    m_configured_table_arn_isSet = false;
    m_configured_table_arn_isValid = false;

    m_policy_isSet = false;
    m_policy_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::fromJsonObject(QJsonObject json) {

    m_configured_table_id_isValid = ::OpenAPI::fromJsonValue(m_configured_table_id, json[QString("configuredTableId")]);
    m_configured_table_id_isSet = !json[QString("configuredTableId")].isNull() && m_configured_table_id_isValid;

    m_configured_table_arn_isValid = ::OpenAPI::fromJsonValue(m_configured_table_arn, json[QString("configuredTableArn")]);
    m_configured_table_arn_isSet = !json[QString("configuredTableArn")].isNull() && m_configured_table_arn_isValid;

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::asJsonObject() const {
    QJsonObject obj;
    if (m_configured_table_id_isSet) {
        obj.insert(QString("configuredTableId"), ::OpenAPI::toJsonValue(m_configured_table_id));
    }
    if (m_configured_table_arn_isSet) {
        obj.insert(QString("configuredTableArn"), ::OpenAPI::toJsonValue(m_configured_table_arn));
    }
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::getConfiguredTableId() const {
    return m_configured_table_id;
}
void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::setConfiguredTableId(const QString &configured_table_id) {
    m_configured_table_id = configured_table_id;
    m_configured_table_id_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_configured_table_id_Set() const{
    return m_configured_table_id_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_configured_table_id_Valid() const{
    return m_configured_table_id_isValid;
}

QString OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::getConfiguredTableArn() const {
    return m_configured_table_arn;
}
void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::setConfiguredTableArn(const QString &configured_table_arn) {
    m_configured_table_arn = configured_table_arn;
    m_configured_table_arn_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_configured_table_arn_Set() const{
    return m_configured_table_arn_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_configured_table_arn_Valid() const{
    return m_configured_table_arn_isValid;
}

OAIConfiguredTableAnalysisRule_policy OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::getPolicy() const {
    return m_policy;
}
void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::setPolicy(const OAIConfiguredTableAnalysisRule_policy &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_policy_Valid() const{
    return m_policy_isValid;
}

OAIConfiguredTableAnalysisRuleType OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::getType() const {
    return m_type;
}
void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::setType(const OAIConfiguredTableAnalysisRuleType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_type_Valid() const{
    return m_type_isValid;
}

QDateTime OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::getCreateTime() const {
    return m_create_time;
}
void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QDateTime OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::getUpdateTime() const {
    return m_update_time;
}
void OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configured_table_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configured_table_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfiguredTableAnalysisRuleOutput_analysisRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configured_table_id_isValid && m_configured_table_arn_isValid && m_policy_isValid && m_type_isValid && m_create_time_isValid && m_update_time_isValid && true;
}

} // namespace OpenAPI
