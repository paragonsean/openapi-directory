/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListMembershipsOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListMembershipsOutput::OAIListMembershipsOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListMembershipsOutput::OAIListMembershipsOutput() {
    this->initializeModel();
}

OAIListMembershipsOutput::~OAIListMembershipsOutput() {}

void OAIListMembershipsOutput::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_membership_summaries_isSet = false;
    m_membership_summaries_isValid = false;
}

void OAIListMembershipsOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListMembershipsOutput::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_membership_summaries_isValid = ::OpenAPI::fromJsonValue(m_membership_summaries, json[QString("membershipSummaries")]);
    m_membership_summaries_isSet = !json[QString("membershipSummaries")].isNull() && m_membership_summaries_isValid;
}

QString OAIListMembershipsOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListMembershipsOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_membership_summaries.isSet()) {
        obj.insert(QString("membershipSummaries"), ::OpenAPI::toJsonValue(m_membership_summaries));
    }
    return obj;
}

QString OAIListMembershipsOutput::getNextToken() const {
    return m_next_token;
}
void OAIListMembershipsOutput::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListMembershipsOutput::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListMembershipsOutput::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListMembershipsOutput::getMembershipSummaries() const {
    return m_membership_summaries;
}
void OAIListMembershipsOutput::setMembershipSummaries(const QList &membership_summaries) {
    m_membership_summaries = membership_summaries;
    m_membership_summaries_isSet = true;
}

bool OAIListMembershipsOutput::is_membership_summaries_Set() const{
    return m_membership_summaries_isSet;
}

bool OAIListMembershipsOutput::is_membership_summaries_Valid() const{
    return m_membership_summaries_isValid;
}

bool OAIListMembershipsOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListMembershipsOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_membership_summaries_isValid && true;
}

} // namespace OpenAPI
