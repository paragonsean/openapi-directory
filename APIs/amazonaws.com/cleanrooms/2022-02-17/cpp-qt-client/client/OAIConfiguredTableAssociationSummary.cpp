/**
 * AWS Clean Rooms Service
 * <p>Welcome to the <i>Clean Rooms API Reference</i>.</p> <p>Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can query and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.</p> <p>To learn more about Clean Rooms concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html\">Clean Rooms User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2022-02-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfiguredTableAssociationSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfiguredTableAssociationSummary::OAIConfiguredTableAssociationSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfiguredTableAssociationSummary::OAIConfiguredTableAssociationSummary() {
    this->initializeModel();
}

OAIConfiguredTableAssociationSummary::~OAIConfiguredTableAssociationSummary() {}

void OAIConfiguredTableAssociationSummary::initializeModel() {

    m_configured_table_id_isSet = false;
    m_configured_table_id_isValid = false;

    m_membership_id_isSet = false;
    m_membership_id_isValid = false;

    m_membership_arn_isSet = false;
    m_membership_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;
}

void OAIConfiguredTableAssociationSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfiguredTableAssociationSummary::fromJsonObject(QJsonObject json) {

    m_configured_table_id_isValid = ::OpenAPI::fromJsonValue(m_configured_table_id, json[QString("configuredTableId")]);
    m_configured_table_id_isSet = !json[QString("configuredTableId")].isNull() && m_configured_table_id_isValid;

    m_membership_id_isValid = ::OpenAPI::fromJsonValue(m_membership_id, json[QString("membershipId")]);
    m_membership_id_isSet = !json[QString("membershipId")].isNull() && m_membership_id_isValid;

    m_membership_arn_isValid = ::OpenAPI::fromJsonValue(m_membership_arn, json[QString("membershipArn")]);
    m_membership_arn_isSet = !json[QString("membershipArn")].isNull() && m_membership_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;
}

QString OAIConfiguredTableAssociationSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfiguredTableAssociationSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_configured_table_id_isSet) {
        obj.insert(QString("configuredTableId"), ::OpenAPI::toJsonValue(m_configured_table_id));
    }
    if (m_membership_id_isSet) {
        obj.insert(QString("membershipId"), ::OpenAPI::toJsonValue(m_membership_id));
    }
    if (m_membership_arn_isSet) {
        obj.insert(QString("membershipArn"), ::OpenAPI::toJsonValue(m_membership_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    return obj;
}

QString OAIConfiguredTableAssociationSummary::getConfiguredTableId() const {
    return m_configured_table_id;
}
void OAIConfiguredTableAssociationSummary::setConfiguredTableId(const QString &configured_table_id) {
    m_configured_table_id = configured_table_id;
    m_configured_table_id_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_configured_table_id_Set() const{
    return m_configured_table_id_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_configured_table_id_Valid() const{
    return m_configured_table_id_isValid;
}

QString OAIConfiguredTableAssociationSummary::getMembershipId() const {
    return m_membership_id;
}
void OAIConfiguredTableAssociationSummary::setMembershipId(const QString &membership_id) {
    m_membership_id = membership_id;
    m_membership_id_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_membership_id_Set() const{
    return m_membership_id_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_membership_id_Valid() const{
    return m_membership_id_isValid;
}

QString OAIConfiguredTableAssociationSummary::getMembershipArn() const {
    return m_membership_arn;
}
void OAIConfiguredTableAssociationSummary::setMembershipArn(const QString &membership_arn) {
    m_membership_arn = membership_arn;
    m_membership_arn_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_membership_arn_Set() const{
    return m_membership_arn_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_membership_arn_Valid() const{
    return m_membership_arn_isValid;
}

QString OAIConfiguredTableAssociationSummary::getName() const {
    return m_name;
}
void OAIConfiguredTableAssociationSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAIConfiguredTableAssociationSummary::getCreateTime() const {
    return m_create_time;
}
void OAIConfiguredTableAssociationSummary::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QDateTime OAIConfiguredTableAssociationSummary::getUpdateTime() const {
    return m_update_time;
}
void OAIConfiguredTableAssociationSummary::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QString OAIConfiguredTableAssociationSummary::getId() const {
    return m_id;
}
void OAIConfiguredTableAssociationSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIConfiguredTableAssociationSummary::getArn() const {
    return m_arn;
}
void OAIConfiguredTableAssociationSummary::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIConfiguredTableAssociationSummary::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIConfiguredTableAssociationSummary::is_arn_Valid() const{
    return m_arn_isValid;
}

bool OAIConfiguredTableAssociationSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configured_table_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_membership_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfiguredTableAssociationSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configured_table_id_isValid && m_membership_id_isValid && m_membership_arn_isValid && m_name_isValid && m_create_time_isValid && m_update_time_isValid && m_id_isValid && m_arn_isValid && true;
}

} // namespace OpenAPI
