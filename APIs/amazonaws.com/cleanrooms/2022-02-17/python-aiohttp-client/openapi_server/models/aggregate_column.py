# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aggregate_function_name import AggregateFunctionName
from openapi_server import util


class AggregateColumn(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_names: List=None, function: AggregateFunctionName=None):
        """AggregateColumn - a model defined in OpenAPI

        :param column_names: The column_names of this AggregateColumn.
        :param function: The function of this AggregateColumn.
        """
        self.openapi_types = {
            'column_names': List,
            'function': AggregateFunctionName
        }

        self.attribute_map = {
            'column_names': 'columnNames',
            'function': 'function'
        }

        self._column_names = column_names
        self._function = function

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AggregateColumn':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AggregateColumn of this AggregateColumn.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_names(self):
        """Gets the column_names of this AggregateColumn.


        :return: The column_names of this AggregateColumn.
        :rtype: List
        """
        return self._column_names

    @column_names.setter
    def column_names(self, column_names):
        """Sets the column_names of this AggregateColumn.


        :param column_names: The column_names of this AggregateColumn.
        :type column_names: List
        """
        if column_names is None:
            raise ValueError("Invalid value for `column_names`, must not be `None`")

        self._column_names = column_names

    @property
    def function(self):
        """Gets the function of this AggregateColumn.


        :return: The function of this AggregateColumn.
        :rtype: AggregateFunctionName
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this AggregateColumn.


        :param function: The function of this AggregateColumn.
        :type function: AggregateFunctionName
        """
        if function is None:
            raise ValueError("Invalid value for `function`, must not be `None`")

        self._function = function
