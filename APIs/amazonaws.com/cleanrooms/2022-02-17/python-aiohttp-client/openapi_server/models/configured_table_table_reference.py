# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_configured_table_request_table_reference_glue import CreateConfiguredTableRequestTableReferenceGlue
from openapi_server import util


class ConfiguredTableTableReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, glue: CreateConfiguredTableRequestTableReferenceGlue=None):
        """ConfiguredTableTableReference - a model defined in OpenAPI

        :param glue: The glue of this ConfiguredTableTableReference.
        """
        self.openapi_types = {
            'glue': CreateConfiguredTableRequestTableReferenceGlue
        }

        self.attribute_map = {
            'glue': 'glue'
        }

        self._glue = glue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfiguredTableTableReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfiguredTable_tableReference of this ConfiguredTableTableReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def glue(self):
        """Gets the glue of this ConfiguredTableTableReference.


        :return: The glue of this ConfiguredTableTableReference.
        :rtype: CreateConfiguredTableRequestTableReferenceGlue
        """
        return self._glue

    @glue.setter
    def glue(self, glue):
        """Sets the glue of this ConfiguredTableTableReference.


        :param glue: The glue of this ConfiguredTableTableReference.
        :type glue: CreateConfiguredTableRequestTableReferenceGlue
        """

        self._glue = glue
