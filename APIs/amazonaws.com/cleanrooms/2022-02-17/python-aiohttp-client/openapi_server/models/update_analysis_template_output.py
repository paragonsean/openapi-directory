# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_analysis_template_output_analysis_template import CreateAnalysisTemplateOutputAnalysisTemplate
from openapi_server import util


class UpdateAnalysisTemplateOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_template: CreateAnalysisTemplateOutputAnalysisTemplate=None):
        """UpdateAnalysisTemplateOutput - a model defined in OpenAPI

        :param analysis_template: The analysis_template of this UpdateAnalysisTemplateOutput.
        """
        self.openapi_types = {
            'analysis_template': CreateAnalysisTemplateOutputAnalysisTemplate
        }

        self.attribute_map = {
            'analysis_template': 'analysisTemplate'
        }

        self._analysis_template = analysis_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAnalysisTemplateOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAnalysisTemplateOutput of this UpdateAnalysisTemplateOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_template(self):
        """Gets the analysis_template of this UpdateAnalysisTemplateOutput.


        :return: The analysis_template of this UpdateAnalysisTemplateOutput.
        :rtype: CreateAnalysisTemplateOutputAnalysisTemplate
        """
        return self._analysis_template

    @analysis_template.setter
    def analysis_template(self, analysis_template):
        """Sets the analysis_template of this UpdateAnalysisTemplateOutput.


        :param analysis_template: The analysis_template of this UpdateAnalysisTemplateOutput.
        :type analysis_template: CreateAnalysisTemplateOutputAnalysisTemplate
        """
        if analysis_template is None:
            raise ValueError("Invalid value for `analysis_template`, must not be `None`")

        self._analysis_template = analysis_template
