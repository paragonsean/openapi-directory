# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetCollaborationAnalysisTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_template_arns: List[str]=None):
        """BatchGetCollaborationAnalysisTemplateRequest - a model defined in OpenAPI

        :param analysis_template_arns: The analysis_template_arns of this BatchGetCollaborationAnalysisTemplateRequest.
        """
        self.openapi_types = {
            'analysis_template_arns': List[str]
        }

        self.attribute_map = {
            'analysis_template_arns': 'analysisTemplateArns'
        }

        self._analysis_template_arns = analysis_template_arns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetCollaborationAnalysisTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetCollaborationAnalysisTemplate_request of this BatchGetCollaborationAnalysisTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_template_arns(self):
        """Gets the analysis_template_arns of this BatchGetCollaborationAnalysisTemplateRequest.

        The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.

        :return: The analysis_template_arns of this BatchGetCollaborationAnalysisTemplateRequest.
        :rtype: List[str]
        """
        return self._analysis_template_arns

    @analysis_template_arns.setter
    def analysis_template_arns(self, analysis_template_arns):
        """Sets the analysis_template_arns of this BatchGetCollaborationAnalysisTemplateRequest.

        The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.

        :param analysis_template_arns: The analysis_template_arns of this BatchGetCollaborationAnalysisTemplateRequest.
        :type analysis_template_arns: List[str]
        """
        if analysis_template_arns is None:
            raise ValueError("Invalid value for `analysis_template_arns`, must not be `None`")
        if analysis_template_arns is not None and len(analysis_template_arns) > 10:
            raise ValueError("Invalid value for `analysis_template_arns`, number of items must be less than or equal to `10`")
        if analysis_template_arns is not None and len(analysis_template_arns) < 1:
            raise ValueError("Invalid value for `analysis_template_arns`, number of items must be greater than or equal to `1`")

        self._analysis_template_arns = analysis_template_arns
