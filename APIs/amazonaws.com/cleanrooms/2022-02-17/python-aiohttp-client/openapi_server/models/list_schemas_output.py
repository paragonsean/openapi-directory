# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListSchemasOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schema_summaries: List=None, next_token: str=None):
        """ListSchemasOutput - a model defined in OpenAPI

        :param schema_summaries: The schema_summaries of this ListSchemasOutput.
        :param next_token: The next_token of this ListSchemasOutput.
        """
        self.openapi_types = {
            'schema_summaries': List,
            'next_token': str
        }

        self.attribute_map = {
            'schema_summaries': 'schemaSummaries',
            'next_token': 'nextToken'
        }

        self._schema_summaries = schema_summaries
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSchemasOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSchemasOutput of this ListSchemasOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schema_summaries(self):
        """Gets the schema_summaries of this ListSchemasOutput.


        :return: The schema_summaries of this ListSchemasOutput.
        :rtype: List
        """
        return self._schema_summaries

    @schema_summaries.setter
    def schema_summaries(self, schema_summaries):
        """Sets the schema_summaries of this ListSchemasOutput.


        :param schema_summaries: The schema_summaries of this ListSchemasOutput.
        :type schema_summaries: List
        """
        if schema_summaries is None:
            raise ValueError("Invalid value for `schema_summaries`, must not be `None`")

        self._schema_summaries = schema_summaries

    @property
    def next_token(self):
        """Gets the next_token of this ListSchemasOutput.


        :return: The next_token of this ListSchemasOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListSchemasOutput.


        :param next_token: The next_token of this ListSchemasOutput.
        :type next_token: str
        """

        self._next_token = next_token
