# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParameterType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SMALLINT = 'SMALLINT'
    INTEGER = 'INTEGER'
    BIGINT = 'BIGINT'
    DECIMAL = 'DECIMAL'
    REAL = 'REAL'
    DOUBLE_PRECISION = 'DOUBLE_PRECISION'
    BOOLEAN = 'BOOLEAN'
    CHAR = 'CHAR'
    VARCHAR = 'VARCHAR'
    DATE = 'DATE'
    TIMESTAMP = 'TIMESTAMP'
    TIMESTAMPTZ = 'TIMESTAMPTZ'
    TIME = 'TIME'
    TIMETZ = 'TIMETZ'
    VARBYTE = 'VARBYTE'

    def __init__(self):
        """ParameterType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParameterType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParameterType of this ParameterType.
        """
        return util.deserialize_model(dikt, cls)
