# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalysisSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, referenced_tables: List=None):
        """AnalysisSchema - a model defined in OpenAPI

        :param referenced_tables: The referenced_tables of this AnalysisSchema.
        """
        self.openapi_types = {
            'referenced_tables': List
        }

        self.attribute_map = {
            'referenced_tables': 'referencedTables'
        }

        self._referenced_tables = referenced_tables

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisSchema of this AnalysisSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def referenced_tables(self):
        """Gets the referenced_tables of this AnalysisSchema.


        :return: The referenced_tables of this AnalysisSchema.
        :rtype: List
        """
        return self._referenced_tables

    @referenced_tables.setter
    def referenced_tables(self, referenced_tables):
        """Sets the referenced_tables of this AnalysisSchema.


        :param referenced_tables: The referenced_tables of this AnalysisSchema.
        :type referenced_tables: List
        """

        self._referenced_tables = referenced_tables
