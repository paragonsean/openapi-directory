# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_configured_table_association_output_configured_table_association import UpdateConfiguredTableAssociationOutputConfiguredTableAssociation
from openapi_server import util


class UpdateConfiguredTableAssociationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured_table_association: UpdateConfiguredTableAssociationOutputConfiguredTableAssociation=None):
        """UpdateConfiguredTableAssociationOutput - a model defined in OpenAPI

        :param configured_table_association: The configured_table_association of this UpdateConfiguredTableAssociationOutput.
        """
        self.openapi_types = {
            'configured_table_association': UpdateConfiguredTableAssociationOutputConfiguredTableAssociation
        }

        self.attribute_map = {
            'configured_table_association': 'configuredTableAssociation'
        }

        self._configured_table_association = configured_table_association

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfiguredTableAssociationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConfiguredTableAssociationOutput of this UpdateConfiguredTableAssociationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured_table_association(self):
        """Gets the configured_table_association of this UpdateConfiguredTableAssociationOutput.


        :return: The configured_table_association of this UpdateConfiguredTableAssociationOutput.
        :rtype: UpdateConfiguredTableAssociationOutputConfiguredTableAssociation
        """
        return self._configured_table_association

    @configured_table_association.setter
    def configured_table_association(self, configured_table_association):
        """Sets the configured_table_association of this UpdateConfiguredTableAssociationOutput.


        :param configured_table_association: The configured_table_association of this UpdateConfiguredTableAssociationOutput.
        :type configured_table_association: UpdateConfiguredTableAssociationOutputConfiguredTableAssociation
        """
        if configured_table_association is None:
            raise ValueError("Invalid value for `configured_table_association`, must not be `None`")

        self._configured_table_association = configured_table_association
