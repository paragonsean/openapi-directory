# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAnalysisTemplatesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, analysis_template_summaries: List=None):
        """ListAnalysisTemplatesOutput - a model defined in OpenAPI

        :param next_token: The next_token of this ListAnalysisTemplatesOutput.
        :param analysis_template_summaries: The analysis_template_summaries of this ListAnalysisTemplatesOutput.
        """
        self.openapi_types = {
            'next_token': str,
            'analysis_template_summaries': List
        }

        self.attribute_map = {
            'next_token': 'nextToken',
            'analysis_template_summaries': 'analysisTemplateSummaries'
        }

        self._next_token = next_token
        self._analysis_template_summaries = analysis_template_summaries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAnalysisTemplatesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAnalysisTemplatesOutput of this ListAnalysisTemplatesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListAnalysisTemplatesOutput.


        :return: The next_token of this ListAnalysisTemplatesOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListAnalysisTemplatesOutput.


        :param next_token: The next_token of this ListAnalysisTemplatesOutput.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def analysis_template_summaries(self):
        """Gets the analysis_template_summaries of this ListAnalysisTemplatesOutput.


        :return: The analysis_template_summaries of this ListAnalysisTemplatesOutput.
        :rtype: List
        """
        return self._analysis_template_summaries

    @analysis_template_summaries.setter
    def analysis_template_summaries(self, analysis_template_summaries):
        """Sets the analysis_template_summaries of this ListAnalysisTemplatesOutput.


        :param analysis_template_summaries: The analysis_template_summaries of this ListAnalysisTemplatesOutput.
        :type analysis_template_summaries: List
        """
        if analysis_template_summaries is None:
            raise ValueError("Invalid value for `analysis_template_summaries`, must not be `None`")

        self._analysis_template_summaries = analysis_template_summaries
