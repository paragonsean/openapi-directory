# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_configured_table_output_configured_table import UpdateConfiguredTableOutputConfiguredTable
from openapi_server import util


class UpdateConfiguredTableOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configured_table: UpdateConfiguredTableOutputConfiguredTable=None):
        """UpdateConfiguredTableOutput - a model defined in OpenAPI

        :param configured_table: The configured_table of this UpdateConfiguredTableOutput.
        """
        self.openapi_types = {
            'configured_table': UpdateConfiguredTableOutputConfiguredTable
        }

        self.attribute_map = {
            'configured_table': 'configuredTable'
        }

        self._configured_table = configured_table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfiguredTableOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConfiguredTableOutput of this UpdateConfiguredTableOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configured_table(self):
        """Gets the configured_table of this UpdateConfiguredTableOutput.


        :return: The configured_table of this UpdateConfiguredTableOutput.
        :rtype: UpdateConfiguredTableOutputConfiguredTable
        """
        return self._configured_table

    @configured_table.setter
    def configured_table(self, configured_table):
        """Sets the configured_table of this UpdateConfiguredTableOutput.


        :param configured_table: The configured_table of this UpdateConfiguredTableOutput.
        :type configured_table: UpdateConfiguredTableOutputConfiguredTable
        """
        if configured_table is None:
            raise ValueError("Invalid value for `configured_table`, must not be `None`")

        self._configured_table = configured_table
