# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateMembershipRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_log_status: str=None):
        """UpdateMembershipRequest - a model defined in OpenAPI

        :param query_log_status: The query_log_status of this UpdateMembershipRequest.
        """
        self.openapi_types = {
            'query_log_status': str
        }

        self.attribute_map = {
            'query_log_status': 'queryLogStatus'
        }

        self._query_log_status = query_log_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMembershipRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateMembership_request of this UpdateMembershipRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_log_status(self):
        """Gets the query_log_status of this UpdateMembershipRequest.

        An indicator as to whether query logging has been enabled or disabled for the collaboration.

        :return: The query_log_status of this UpdateMembershipRequest.
        :rtype: str
        """
        return self._query_log_status

    @query_log_status.setter
    def query_log_status(self, query_log_status):
        """Sets the query_log_status of this UpdateMembershipRequest.

        An indicator as to whether query logging has been enabled or disabled for the collaboration.

        :param query_log_status: The query_log_status of this UpdateMembershipRequest.
        :type query_log_status: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if query_log_status not in allowed_values:
            raise ValueError(
                "Invalid value for `query_log_status` ({0}), must be one of {1}"
                .format(query_log_status, allowed_values)
            )

        self._query_log_status = query_log_status
