# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_configured_table_analysis_rule_input_analysis_rule_policy import UpdateConfiguredTableAnalysisRuleInputAnalysisRulePolicy
from openapi_server import util


class UpdateConfiguredTableAnalysisRuleInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_rule_policy: UpdateConfiguredTableAnalysisRuleInputAnalysisRulePolicy=None):
        """UpdateConfiguredTableAnalysisRuleInput - a model defined in OpenAPI

        :param analysis_rule_policy: The analysis_rule_policy of this UpdateConfiguredTableAnalysisRuleInput.
        """
        self.openapi_types = {
            'analysis_rule_policy': UpdateConfiguredTableAnalysisRuleInputAnalysisRulePolicy
        }

        self.attribute_map = {
            'analysis_rule_policy': 'analysisRulePolicy'
        }

        self._analysis_rule_policy = analysis_rule_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfiguredTableAnalysisRuleInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConfiguredTableAnalysisRuleInput of this UpdateConfiguredTableAnalysisRuleInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_rule_policy(self):
        """Gets the analysis_rule_policy of this UpdateConfiguredTableAnalysisRuleInput.


        :return: The analysis_rule_policy of this UpdateConfiguredTableAnalysisRuleInput.
        :rtype: UpdateConfiguredTableAnalysisRuleInputAnalysisRulePolicy
        """
        return self._analysis_rule_policy

    @analysis_rule_policy.setter
    def analysis_rule_policy(self, analysis_rule_policy):
        """Sets the analysis_rule_policy of this UpdateConfiguredTableAnalysisRuleInput.


        :param analysis_rule_policy: The analysis_rule_policy of this UpdateConfiguredTableAnalysisRuleInput.
        :type analysis_rule_policy: UpdateConfiguredTableAnalysisRuleInputAnalysisRulePolicy
        """
        if analysis_rule_policy is None:
            raise ValueError("Invalid value for `analysis_rule_policy`, must not be `None`")

        self._analysis_rule_policy = analysis_rule_policy
