/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetFindingStatisticsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetFindingStatisticsResponse::OAIGetFindingStatisticsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetFindingStatisticsResponse::OAIGetFindingStatisticsResponse() {
    this->initializeModel();
}

OAIGetFindingStatisticsResponse::~OAIGetFindingStatisticsResponse() {}

void OAIGetFindingStatisticsResponse::initializeModel() {

    m_counts_by_group_isSet = false;
    m_counts_by_group_isValid = false;
}

void OAIGetFindingStatisticsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetFindingStatisticsResponse::fromJsonObject(QJsonObject json) {

    m_counts_by_group_isValid = ::OpenAPI::fromJsonValue(m_counts_by_group, json[QString("countsByGroup")]);
    m_counts_by_group_isSet = !json[QString("countsByGroup")].isNull() && m_counts_by_group_isValid;
}

QString OAIGetFindingStatisticsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetFindingStatisticsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_counts_by_group.isSet()) {
        obj.insert(QString("countsByGroup"), ::OpenAPI::toJsonValue(m_counts_by_group));
    }
    return obj;
}

QList OAIGetFindingStatisticsResponse::getCountsByGroup() const {
    return m_counts_by_group;
}
void OAIGetFindingStatisticsResponse::setCountsByGroup(const QList &counts_by_group) {
    m_counts_by_group = counts_by_group;
    m_counts_by_group_isSet = true;
}

bool OAIGetFindingStatisticsResponse::is_counts_by_group_Set() const{
    return m_counts_by_group_isSet;
}

bool OAIGetFindingStatisticsResponse::is_counts_by_group_Valid() const{
    return m_counts_by_group_isValid;
}

bool OAIGetFindingStatisticsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_counts_by_group.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetFindingStatisticsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
