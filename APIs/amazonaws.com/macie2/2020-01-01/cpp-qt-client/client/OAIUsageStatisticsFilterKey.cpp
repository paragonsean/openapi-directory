/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsageStatisticsFilterKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsageStatisticsFilterKey::OAIUsageStatisticsFilterKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsageStatisticsFilterKey::OAIUsageStatisticsFilterKey() {
    this->initializeModel();
}

OAIUsageStatisticsFilterKey::~OAIUsageStatisticsFilterKey() {}

void OAIUsageStatisticsFilterKey::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUsageStatisticsFilterKey::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUsageStatisticsFilterKey::fromJson(QString jsonString) {
    
    if ( jsonString.compare("accountId", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageStatisticsFilterKey::ACCOUNTID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("serviceLimit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageStatisticsFilterKey::SERVICELIMIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("freeTrialStartDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageStatisticsFilterKey::FREETRIALSTARTDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("total", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageStatisticsFilterKey::TOTAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUsageStatisticsFilterKey::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUsageStatisticsFilterKey::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUsageStatisticsFilterKey::ACCOUNTID:
            val = "accountId";
            break;
        case eOAIUsageStatisticsFilterKey::SERVICELIMIT:
            val = "serviceLimit";
            break;
        case eOAIUsageStatisticsFilterKey::FREETRIALSTARTDATE:
            val = "freeTrialStartDate";
            break;
        case eOAIUsageStatisticsFilterKey::TOTAL:
            val = "total";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUsageStatisticsFilterKey::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUsageStatisticsFilterKey::eOAIUsageStatisticsFilterKey OAIUsageStatisticsFilterKey::getValue() const {
    return m_value;
}

void OAIUsageStatisticsFilterKey::setValue(const OAIUsageStatisticsFilterKey::eOAIUsageStatisticsFilterKey& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUsageStatisticsFilterKey::isSet() const {
    
    return m_value_isSet;
}

bool OAIUsageStatisticsFilterKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
