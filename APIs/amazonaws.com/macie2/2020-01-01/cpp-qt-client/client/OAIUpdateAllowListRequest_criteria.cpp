/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAllowListRequest_criteria.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAllowListRequest_criteria::OAIUpdateAllowListRequest_criteria(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAllowListRequest_criteria::OAIUpdateAllowListRequest_criteria() {
    this->initializeModel();
}

OAIUpdateAllowListRequest_criteria::~OAIUpdateAllowListRequest_criteria() {}

void OAIUpdateAllowListRequest_criteria::initializeModel() {

    m_regex_isSet = false;
    m_regex_isValid = false;

    m_s3_words_list_isSet = false;
    m_s3_words_list_isValid = false;
}

void OAIUpdateAllowListRequest_criteria::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAllowListRequest_criteria::fromJsonObject(QJsonObject json) {

    m_regex_isValid = ::OpenAPI::fromJsonValue(m_regex, json[QString("regex")]);
    m_regex_isSet = !json[QString("regex")].isNull() && m_regex_isValid;

    m_s3_words_list_isValid = ::OpenAPI::fromJsonValue(m_s3_words_list, json[QString("s3WordsList")]);
    m_s3_words_list_isSet = !json[QString("s3WordsList")].isNull() && m_s3_words_list_isValid;
}

QString OAIUpdateAllowListRequest_criteria::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAllowListRequest_criteria::asJsonObject() const {
    QJsonObject obj;
    if (m_regex_isSet) {
        obj.insert(QString("regex"), ::OpenAPI::toJsonValue(m_regex));
    }
    if (m_s3_words_list.isSet()) {
        obj.insert(QString("s3WordsList"), ::OpenAPI::toJsonValue(m_s3_words_list));
    }
    return obj;
}

QString OAIUpdateAllowListRequest_criteria::getRegex() const {
    return m_regex;
}
void OAIUpdateAllowListRequest_criteria::setRegex(const QString &regex) {
    m_regex = regex;
    m_regex_isSet = true;
}

bool OAIUpdateAllowListRequest_criteria::is_regex_Set() const{
    return m_regex_isSet;
}

bool OAIUpdateAllowListRequest_criteria::is_regex_Valid() const{
    return m_regex_isValid;
}

OAICreateAllowList_request_criteria_s3WordsList OAIUpdateAllowListRequest_criteria::getS3WordsList() const {
    return m_s3_words_list;
}
void OAIUpdateAllowListRequest_criteria::setS3WordsList(const OAICreateAllowList_request_criteria_s3WordsList &s3_words_list) {
    m_s3_words_list = s3_words_list;
    m_s3_words_list_isSet = true;
}

bool OAIUpdateAllowListRequest_criteria::is_s3_words_list_Set() const{
    return m_s3_words_list_isSet;
}

bool OAIUpdateAllowListRequest_criteria::is_s3_words_list_Valid() const{
    return m_s3_words_list_isValid;
}

bool OAIUpdateAllowListRequest_criteria::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_regex_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_words_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAllowListRequest_criteria::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
