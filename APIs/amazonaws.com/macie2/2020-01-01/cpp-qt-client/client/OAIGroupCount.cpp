/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupCount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupCount::OAIGroupCount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupCount::OAIGroupCount() {
    this->initializeModel();
}

OAIGroupCount::~OAIGroupCount() {}

void OAIGroupCount::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_group_key_isSet = false;
    m_group_key_isValid = false;
}

void OAIGroupCount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroupCount::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_group_key_isValid = ::OpenAPI::fromJsonValue(m_group_key, json[QString("groupKey")]);
    m_group_key_isSet = !json[QString("groupKey")].isNull() && m_group_key_isValid;
}

QString OAIGroupCount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroupCount::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_group_key_isSet) {
        obj.insert(QString("groupKey"), ::OpenAPI::toJsonValue(m_group_key));
    }
    return obj;
}

qint32 OAIGroupCount::getCount() const {
    return m_count;
}
void OAIGroupCount::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIGroupCount::is_count_Set() const{
    return m_count_isSet;
}

bool OAIGroupCount::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIGroupCount::getGroupKey() const {
    return m_group_key;
}
void OAIGroupCount::setGroupKey(const QString &group_key) {
    m_group_key = group_key;
    m_group_key_isSet = true;
}

bool OAIGroupCount::is_group_key_Set() const{
    return m_group_key_isSet;
}

bool OAIGroupCount::is_group_key_Valid() const{
    return m_group_key_isValid;
}

bool OAIGroupCount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroupCount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
