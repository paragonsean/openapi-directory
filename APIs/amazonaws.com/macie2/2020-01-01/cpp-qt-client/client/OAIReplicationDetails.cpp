/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplicationDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplicationDetails::OAIReplicationDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplicationDetails::OAIReplicationDetails() {
    this->initializeModel();
}

OAIReplicationDetails::~OAIReplicationDetails() {}

void OAIReplicationDetails::initializeModel() {

    m_replicated_isSet = false;
    m_replicated_isValid = false;

    m_replicated_externally_isSet = false;
    m_replicated_externally_isValid = false;

    m_replication_accounts_isSet = false;
    m_replication_accounts_isValid = false;
}

void OAIReplicationDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReplicationDetails::fromJsonObject(QJsonObject json) {

    m_replicated_isValid = ::OpenAPI::fromJsonValue(m_replicated, json[QString("replicated")]);
    m_replicated_isSet = !json[QString("replicated")].isNull() && m_replicated_isValid;

    m_replicated_externally_isValid = ::OpenAPI::fromJsonValue(m_replicated_externally, json[QString("replicatedExternally")]);
    m_replicated_externally_isSet = !json[QString("replicatedExternally")].isNull() && m_replicated_externally_isValid;

    m_replication_accounts_isValid = ::OpenAPI::fromJsonValue(m_replication_accounts, json[QString("replicationAccounts")]);
    m_replication_accounts_isSet = !json[QString("replicationAccounts")].isNull() && m_replication_accounts_isValid;
}

QString OAIReplicationDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReplicationDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_replicated_isSet) {
        obj.insert(QString("replicated"), ::OpenAPI::toJsonValue(m_replicated));
    }
    if (m_replicated_externally_isSet) {
        obj.insert(QString("replicatedExternally"), ::OpenAPI::toJsonValue(m_replicated_externally));
    }
    if (m_replication_accounts.isSet()) {
        obj.insert(QString("replicationAccounts"), ::OpenAPI::toJsonValue(m_replication_accounts));
    }
    return obj;
}

bool OAIReplicationDetails::getReplicated() const {
    return m_replicated;
}
void OAIReplicationDetails::setReplicated(const bool &replicated) {
    m_replicated = replicated;
    m_replicated_isSet = true;
}

bool OAIReplicationDetails::is_replicated_Set() const{
    return m_replicated_isSet;
}

bool OAIReplicationDetails::is_replicated_Valid() const{
    return m_replicated_isValid;
}

bool OAIReplicationDetails::getReplicatedExternally() const {
    return m_replicated_externally;
}
void OAIReplicationDetails::setReplicatedExternally(const bool &replicated_externally) {
    m_replicated_externally = replicated_externally;
    m_replicated_externally_isSet = true;
}

bool OAIReplicationDetails::is_replicated_externally_Set() const{
    return m_replicated_externally_isSet;
}

bool OAIReplicationDetails::is_replicated_externally_Valid() const{
    return m_replicated_externally_isValid;
}

QList OAIReplicationDetails::getReplicationAccounts() const {
    return m_replication_accounts;
}
void OAIReplicationDetails::setReplicationAccounts(const QList &replication_accounts) {
    m_replication_accounts = replication_accounts;
    m_replication_accounts_isSet = true;
}

bool OAIReplicationDetails::is_replication_accounts_Set() const{
    return m_replication_accounts_isSet;
}

bool OAIReplicationDetails::is_replication_accounts_Valid() const{
    return m_replication_accounts_isValid;
}

bool OAIReplicationDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_replicated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replicated_externally_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replication_accounts.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReplicationDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
