/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClassificationDetails_result.h
 *
 * 
 */

#ifndef OAIClassificationDetails_result_H
#define OAIClassificationDetails_result_H

#include <QJsonObject>

#include "OAIClassificationResult_customDataIdentifiers.h"
#include "OAIClassificationResult_status.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClassificationResult_customDataIdentifiers;
class OAIClassificationResult_status;

class OAIClassificationDetails_result : public OAIObject {
public:
    OAIClassificationDetails_result();
    OAIClassificationDetails_result(QString json);
    ~OAIClassificationDetails_result() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAdditionalOccurrences() const;
    void setAdditionalOccurrences(const bool &additional_occurrences);
    bool is_additional_occurrences_Set() const;
    bool is_additional_occurrences_Valid() const;

    OAIClassificationResult_customDataIdentifiers getCustomDataIdentifiers() const;
    void setCustomDataIdentifiers(const OAIClassificationResult_customDataIdentifiers &custom_data_identifiers);
    bool is_custom_data_identifiers_Set() const;
    bool is_custom_data_identifiers_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    QList getSensitiveData() const;
    void setSensitiveData(const QList &sensitive_data);
    bool is_sensitive_data_Set() const;
    bool is_sensitive_data_Valid() const;

    qint32 getSizeClassified() const;
    void setSizeClassified(const qint32 &size_classified);
    bool is_size_classified_Set() const;
    bool is_size_classified_Valid() const;

    OAIClassificationResult_status getStatus() const;
    void setStatus(const OAIClassificationResult_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_additional_occurrences;
    bool m_additional_occurrences_isSet;
    bool m_additional_occurrences_isValid;

    OAIClassificationResult_customDataIdentifiers m_custom_data_identifiers;
    bool m_custom_data_identifiers_isSet;
    bool m_custom_data_identifiers_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    QList m_sensitive_data;
    bool m_sensitive_data_isSet;
    bool m_sensitive_data_isValid;

    qint32 m_size_classified;
    bool m_size_classified_isSet;
    bool m_size_classified_isValid;

    OAIClassificationResult_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClassificationDetails_result)

#endif // OAIClassificationDetails_result_H
