/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICriterionAdditionalProperties.h
 *
 * Specifies the operator to use in a property-based condition that filters the results of a query for findings. For detailed information and examples of each operator, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/macie/latest/user/findings-filter-basics.html\&quot;&gt;Fundamentals of filtering findings&lt;/a&gt; in the &lt;i&gt;Amazon Macie User Guide&lt;/i&gt;.
 */

#ifndef OAICriterionAdditionalProperties_H
#define OAICriterionAdditionalProperties_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICriterionAdditionalProperties : public OAIObject {
public:
    OAICriterionAdditionalProperties();
    OAICriterionAdditionalProperties(QString json);
    ~OAICriterionAdditionalProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getEq() const;
    void setEq(const QList &eq);
    bool is_eq_Set() const;
    bool is_eq_Valid() const;

    QList getEqExactMatch() const;
    void setEqExactMatch(const QList &eq_exact_match);
    bool is_eq_exact_match_Set() const;
    bool is_eq_exact_match_Valid() const;

    qint32 getGt() const;
    void setGt(const qint32 &gt);
    bool is_gt_Set() const;
    bool is_gt_Valid() const;

    qint32 getGte() const;
    void setGte(const qint32 &gte);
    bool is_gte_Set() const;
    bool is_gte_Valid() const;

    qint32 getLt() const;
    void setLt(const qint32 &lt);
    bool is_lt_Set() const;
    bool is_lt_Valid() const;

    qint32 getLte() const;
    void setLte(const qint32 &lte);
    bool is_lte_Set() const;
    bool is_lte_Valid() const;

    QList getNeq() const;
    void setNeq(const QList &neq);
    bool is_neq_Set() const;
    bool is_neq_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_eq;
    bool m_eq_isSet;
    bool m_eq_isValid;

    QList m_eq_exact_match;
    bool m_eq_exact_match_isSet;
    bool m_eq_exact_match_isValid;

    qint32 m_gt;
    bool m_gt_isSet;
    bool m_gt_isValid;

    qint32 m_gte;
    bool m_gte_isSet;
    bool m_gte_isValid;

    qint32 m_lt;
    bool m_lt_isSet;
    bool m_lt_isValid;

    qint32 m_lte;
    bool m_lte_isSet;
    bool m_lte_isValid;

    QList m_neq;
    bool m_neq_isSet;
    bool m_neq_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICriterionAdditionalProperties)

#endif // OAICriterionAdditionalProperties_H
