/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchResourcesSimpleCriterionKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchResourcesSimpleCriterionKey::OAISearchResourcesSimpleCriterionKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchResourcesSimpleCriterionKey::OAISearchResourcesSimpleCriterionKey() {
    this->initializeModel();
}

OAISearchResourcesSimpleCriterionKey::~OAISearchResourcesSimpleCriterionKey() {}

void OAISearchResourcesSimpleCriterionKey::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISearchResourcesSimpleCriterionKey::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISearchResourcesSimpleCriterionKey::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACCOUNT_ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchResourcesSimpleCriterionKey::ACCOUNT_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("S3_BUCKET_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchResourcesSimpleCriterionKey::S3_BUCKET_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("S3_BUCKET_EFFECTIVE_PERMISSION", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchResourcesSimpleCriterionKey::S3_BUCKET_EFFECTIVE_PERMISSION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("S3_BUCKET_SHARED_ACCESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchResourcesSimpleCriterionKey::S3_BUCKET_SHARED_ACCESS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISearchResourcesSimpleCriterionKey::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISearchResourcesSimpleCriterionKey::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISearchResourcesSimpleCriterionKey::ACCOUNT_ID:
            val = "ACCOUNT_ID";
            break;
        case eOAISearchResourcesSimpleCriterionKey::S3_BUCKET_NAME:
            val = "S3_BUCKET_NAME";
            break;
        case eOAISearchResourcesSimpleCriterionKey::S3_BUCKET_EFFECTIVE_PERMISSION:
            val = "S3_BUCKET_EFFECTIVE_PERMISSION";
            break;
        case eOAISearchResourcesSimpleCriterionKey::S3_BUCKET_SHARED_ACCESS:
            val = "S3_BUCKET_SHARED_ACCESS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISearchResourcesSimpleCriterionKey::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISearchResourcesSimpleCriterionKey::eOAISearchResourcesSimpleCriterionKey OAISearchResourcesSimpleCriterionKey::getValue() const {
    return m_value;
}

void OAISearchResourcesSimpleCriterionKey::setValue(const OAISearchResourcesSimpleCriterionKey::eOAISearchResourcesSimpleCriterionKey& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISearchResourcesSimpleCriterionKey::isSet() const {
    
    return m_value_isSet;
}

bool OAISearchResourcesSimpleCriterionKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
