/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFindingsFilterRequest.h
 *
 * 
 */

#ifndef OAICreateFindingsFilterRequest_H
#define OAICreateFindingsFilterRequest_H

#include <QJsonObject>

#include "OAICreateFindingsFilterRequest_findingCriteria.h"
#include "OAIFindingsFilterAction.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateFindingsFilterRequest_findingCriteria;

class OAICreateFindingsFilterRequest : public OAIObject {
public:
    OAICreateFindingsFilterRequest();
    OAICreateFindingsFilterRequest(QString json);
    ~OAICreateFindingsFilterRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFindingsFilterAction getAction() const;
    void setAction(const OAIFindingsFilterAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateFindingsFilterRequest_findingCriteria getFindingCriteria() const;
    void setFindingCriteria(const OAICreateFindingsFilterRequest_findingCriteria &finding_criteria);
    bool is_finding_criteria_Set() const;
    bool is_finding_criteria_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPosition() const;
    void setPosition(const qint32 &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFindingsFilterAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateFindingsFilterRequest_findingCriteria m_finding_criteria;
    bool m_finding_criteria_isSet;
    bool m_finding_criteria_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFindingsFilterRequest)

#endif // OAICreateFindingsFilterRequest_H
