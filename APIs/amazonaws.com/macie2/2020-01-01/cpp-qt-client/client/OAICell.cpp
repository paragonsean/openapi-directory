/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICell.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICell::OAICell(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICell::OAICell() {
    this->initializeModel();
}

OAICell::~OAICell() {}

void OAICell::initializeModel() {

    m_cell_reference_isSet = false;
    m_cell_reference_isValid = false;

    m_column_isSet = false;
    m_column_isValid = false;

    m_column_name_isSet = false;
    m_column_name_isValid = false;

    m_row_isSet = false;
    m_row_isValid = false;
}

void OAICell::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICell::fromJsonObject(QJsonObject json) {

    m_cell_reference_isValid = ::OpenAPI::fromJsonValue(m_cell_reference, json[QString("cellReference")]);
    m_cell_reference_isSet = !json[QString("cellReference")].isNull() && m_cell_reference_isValid;

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_column_name_isValid = ::OpenAPI::fromJsonValue(m_column_name, json[QString("columnName")]);
    m_column_name_isSet = !json[QString("columnName")].isNull() && m_column_name_isValid;

    m_row_isValid = ::OpenAPI::fromJsonValue(m_row, json[QString("row")]);
    m_row_isSet = !json[QString("row")].isNull() && m_row_isValid;
}

QString OAICell::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICell::asJsonObject() const {
    QJsonObject obj;
    if (m_cell_reference_isSet) {
        obj.insert(QString("cellReference"), ::OpenAPI::toJsonValue(m_cell_reference));
    }
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_column_name_isSet) {
        obj.insert(QString("columnName"), ::OpenAPI::toJsonValue(m_column_name));
    }
    if (m_row_isSet) {
        obj.insert(QString("row"), ::OpenAPI::toJsonValue(m_row));
    }
    return obj;
}

QString OAICell::getCellReference() const {
    return m_cell_reference;
}
void OAICell::setCellReference(const QString &cell_reference) {
    m_cell_reference = cell_reference;
    m_cell_reference_isSet = true;
}

bool OAICell::is_cell_reference_Set() const{
    return m_cell_reference_isSet;
}

bool OAICell::is_cell_reference_Valid() const{
    return m_cell_reference_isValid;
}

qint32 OAICell::getColumn() const {
    return m_column;
}
void OAICell::setColumn(const qint32 &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAICell::is_column_Set() const{
    return m_column_isSet;
}

bool OAICell::is_column_Valid() const{
    return m_column_isValid;
}

QString OAICell::getColumnName() const {
    return m_column_name;
}
void OAICell::setColumnName(const QString &column_name) {
    m_column_name = column_name;
    m_column_name_isSet = true;
}

bool OAICell::is_column_name_Set() const{
    return m_column_name_isSet;
}

bool OAICell::is_column_name_Valid() const{
    return m_column_name_isValid;
}

qint32 OAICell::getRow() const {
    return m_row;
}
void OAICell::setRow(const qint32 &row) {
    m_row = row;
    m_row_isSet = true;
}

bool OAICell::is_row_Set() const{
    return m_row_isSet;
}

bool OAICell::is_row_Valid() const{
    return m_row_isValid;
}

bool OAICell::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cell_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICell::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
