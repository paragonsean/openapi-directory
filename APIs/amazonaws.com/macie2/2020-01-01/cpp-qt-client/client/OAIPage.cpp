/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPage::OAIPage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPage::OAIPage() {
    this->initializeModel();
}

OAIPage::~OAIPage() {}

void OAIPage::initializeModel() {

    m_line_range_isSet = false;
    m_line_range_isValid = false;

    m_offset_range_isSet = false;
    m_offset_range_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;
}

void OAIPage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPage::fromJsonObject(QJsonObject json) {

    m_line_range_isValid = ::OpenAPI::fromJsonValue(m_line_range, json[QString("lineRange")]);
    m_line_range_isSet = !json[QString("lineRange")].isNull() && m_line_range_isValid;

    m_offset_range_isValid = ::OpenAPI::fromJsonValue(m_offset_range, json[QString("offsetRange")]);
    m_offset_range_isSet = !json[QString("offsetRange")].isNull() && m_offset_range_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;
}

QString OAIPage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPage::asJsonObject() const {
    QJsonObject obj;
    if (m_line_range.isSet()) {
        obj.insert(QString("lineRange"), ::OpenAPI::toJsonValue(m_line_range));
    }
    if (m_offset_range.isSet()) {
        obj.insert(QString("offsetRange"), ::OpenAPI::toJsonValue(m_offset_range));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    return obj;
}

OAIPage_lineRange OAIPage::getLineRange() const {
    return m_line_range;
}
void OAIPage::setLineRange(const OAIPage_lineRange &line_range) {
    m_line_range = line_range;
    m_line_range_isSet = true;
}

bool OAIPage::is_line_range_Set() const{
    return m_line_range_isSet;
}

bool OAIPage::is_line_range_Valid() const{
    return m_line_range_isValid;
}

OAIPage_lineRange OAIPage::getOffsetRange() const {
    return m_offset_range;
}
void OAIPage::setOffsetRange(const OAIPage_lineRange &offset_range) {
    m_offset_range = offset_range;
    m_offset_range_isSet = true;
}

bool OAIPage::is_offset_range_Set() const{
    return m_offset_range_isSet;
}

bool OAIPage::is_offset_range_Valid() const{
    return m_offset_range_isValid;
}

qint32 OAIPage::getPageNumber() const {
    return m_page_number;
}
void OAIPage::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIPage::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIPage::is_page_number_Valid() const{
    return m_page_number_isValid;
}

bool OAIPage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
