/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetBucketStatisticsResponse_unclassifiableObjectCount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetBucketStatisticsResponse_unclassifiableObjectCount::OAIGetBucketStatisticsResponse_unclassifiableObjectCount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetBucketStatisticsResponse_unclassifiableObjectCount::OAIGetBucketStatisticsResponse_unclassifiableObjectCount() {
    this->initializeModel();
}

OAIGetBucketStatisticsResponse_unclassifiableObjectCount::~OAIGetBucketStatisticsResponse_unclassifiableObjectCount() {}

void OAIGetBucketStatisticsResponse_unclassifiableObjectCount::initializeModel() {

    m_file_type_isSet = false;
    m_file_type_isValid = false;

    m_storage_class_isSet = false;
    m_storage_class_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIGetBucketStatisticsResponse_unclassifiableObjectCount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetBucketStatisticsResponse_unclassifiableObjectCount::fromJsonObject(QJsonObject json) {

    m_file_type_isValid = ::OpenAPI::fromJsonValue(m_file_type, json[QString("fileType")]);
    m_file_type_isSet = !json[QString("fileType")].isNull() && m_file_type_isValid;

    m_storage_class_isValid = ::OpenAPI::fromJsonValue(m_storage_class, json[QString("storageClass")]);
    m_storage_class_isSet = !json[QString("storageClass")].isNull() && m_storage_class_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIGetBucketStatisticsResponse_unclassifiableObjectCount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetBucketStatisticsResponse_unclassifiableObjectCount::asJsonObject() const {
    QJsonObject obj;
    if (m_file_type_isSet) {
        obj.insert(QString("fileType"), ::OpenAPI::toJsonValue(m_file_type));
    }
    if (m_storage_class_isSet) {
        obj.insert(QString("storageClass"), ::OpenAPI::toJsonValue(m_storage_class));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

qint32 OAIGetBucketStatisticsResponse_unclassifiableObjectCount::getFileType() const {
    return m_file_type;
}
void OAIGetBucketStatisticsResponse_unclassifiableObjectCount::setFileType(const qint32 &file_type) {
    m_file_type = file_type;
    m_file_type_isSet = true;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::is_file_type_Set() const{
    return m_file_type_isSet;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::is_file_type_Valid() const{
    return m_file_type_isValid;
}

qint32 OAIGetBucketStatisticsResponse_unclassifiableObjectCount::getStorageClass() const {
    return m_storage_class;
}
void OAIGetBucketStatisticsResponse_unclassifiableObjectCount::setStorageClass(const qint32 &storage_class) {
    m_storage_class = storage_class;
    m_storage_class_isSet = true;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::is_storage_class_Set() const{
    return m_storage_class_isSet;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::is_storage_class_Valid() const{
    return m_storage_class_isValid;
}

qint32 OAIGetBucketStatisticsResponse_unclassifiableObjectCount::getTotal() const {
    return m_total;
}
void OAIGetBucketStatisticsResponse_unclassifiableObjectCount::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::is_total_Set() const{
    return m_total_isSet;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_storage_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetBucketStatisticsResponse_unclassifiableObjectCount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
