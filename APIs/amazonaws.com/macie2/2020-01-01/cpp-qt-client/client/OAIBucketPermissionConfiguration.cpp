/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBucketPermissionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBucketPermissionConfiguration::OAIBucketPermissionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBucketPermissionConfiguration::OAIBucketPermissionConfiguration() {
    this->initializeModel();
}

OAIBucketPermissionConfiguration::~OAIBucketPermissionConfiguration() {}

void OAIBucketPermissionConfiguration::initializeModel() {

    m_account_level_permissions_isSet = false;
    m_account_level_permissions_isValid = false;

    m_bucket_level_permissions_isSet = false;
    m_bucket_level_permissions_isValid = false;
}

void OAIBucketPermissionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBucketPermissionConfiguration::fromJsonObject(QJsonObject json) {

    m_account_level_permissions_isValid = ::OpenAPI::fromJsonValue(m_account_level_permissions, json[QString("accountLevelPermissions")]);
    m_account_level_permissions_isSet = !json[QString("accountLevelPermissions")].isNull() && m_account_level_permissions_isValid;

    m_bucket_level_permissions_isValid = ::OpenAPI::fromJsonValue(m_bucket_level_permissions, json[QString("bucketLevelPermissions")]);
    m_bucket_level_permissions_isSet = !json[QString("bucketLevelPermissions")].isNull() && m_bucket_level_permissions_isValid;
}

QString OAIBucketPermissionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBucketPermissionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_account_level_permissions.isSet()) {
        obj.insert(QString("accountLevelPermissions"), ::OpenAPI::toJsonValue(m_account_level_permissions));
    }
    if (m_bucket_level_permissions.isSet()) {
        obj.insert(QString("bucketLevelPermissions"), ::OpenAPI::toJsonValue(m_bucket_level_permissions));
    }
    return obj;
}

OAIBucketPermissionConfiguration_accountLevelPermissions OAIBucketPermissionConfiguration::getAccountLevelPermissions() const {
    return m_account_level_permissions;
}
void OAIBucketPermissionConfiguration::setAccountLevelPermissions(const OAIBucketPermissionConfiguration_accountLevelPermissions &account_level_permissions) {
    m_account_level_permissions = account_level_permissions;
    m_account_level_permissions_isSet = true;
}

bool OAIBucketPermissionConfiguration::is_account_level_permissions_Set() const{
    return m_account_level_permissions_isSet;
}

bool OAIBucketPermissionConfiguration::is_account_level_permissions_Valid() const{
    return m_account_level_permissions_isValid;
}

OAIBucketPermissionConfiguration_bucketLevelPermissions OAIBucketPermissionConfiguration::getBucketLevelPermissions() const {
    return m_bucket_level_permissions;
}
void OAIBucketPermissionConfiguration::setBucketLevelPermissions(const OAIBucketPermissionConfiguration_bucketLevelPermissions &bucket_level_permissions) {
    m_bucket_level_permissions = bucket_level_permissions;
    m_bucket_level_permissions_isSet = true;
}

bool OAIBucketPermissionConfiguration::is_bucket_level_permissions_Set() const{
    return m_bucket_level_permissions_isSet;
}

bool OAIBucketPermissionConfiguration::is_bucket_level_permissions_Valid() const{
    return m_bucket_level_permissions_isValid;
}

bool OAIBucketPermissionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_level_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bucket_level_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBucketPermissionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
