/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetUsageTotalsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetUsageTotalsResponse::OAIGetUsageTotalsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetUsageTotalsResponse::OAIGetUsageTotalsResponse() {
    this->initializeModel();
}

OAIGetUsageTotalsResponse::~OAIGetUsageTotalsResponse() {}

void OAIGetUsageTotalsResponse::initializeModel() {

    m_time_range_isSet = false;
    m_time_range_isValid = false;

    m_usage_totals_isSet = false;
    m_usage_totals_isValid = false;
}

void OAIGetUsageTotalsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetUsageTotalsResponse::fromJsonObject(QJsonObject json) {

    m_time_range_isValid = ::OpenAPI::fromJsonValue(m_time_range, json[QString("timeRange")]);
    m_time_range_isSet = !json[QString("timeRange")].isNull() && m_time_range_isValid;

    m_usage_totals_isValid = ::OpenAPI::fromJsonValue(m_usage_totals, json[QString("usageTotals")]);
    m_usage_totals_isSet = !json[QString("usageTotals")].isNull() && m_usage_totals_isValid;
}

QString OAIGetUsageTotalsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetUsageTotalsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_time_range.isSet()) {
        obj.insert(QString("timeRange"), ::OpenAPI::toJsonValue(m_time_range));
    }
    if (m_usage_totals.isSet()) {
        obj.insert(QString("usageTotals"), ::OpenAPI::toJsonValue(m_usage_totals));
    }
    return obj;
}

OAITimeRange OAIGetUsageTotalsResponse::getTimeRange() const {
    return m_time_range;
}
void OAIGetUsageTotalsResponse::setTimeRange(const OAITimeRange &time_range) {
    m_time_range = time_range;
    m_time_range_isSet = true;
}

bool OAIGetUsageTotalsResponse::is_time_range_Set() const{
    return m_time_range_isSet;
}

bool OAIGetUsageTotalsResponse::is_time_range_Valid() const{
    return m_time_range_isValid;
}

QList OAIGetUsageTotalsResponse::getUsageTotals() const {
    return m_usage_totals;
}
void OAIGetUsageTotalsResponse::setUsageTotals(const QList &usage_totals) {
    m_usage_totals = usage_totals;
    m_usage_totals_isSet = true;
}

bool OAIGetUsageTotalsResponse::is_usage_totals_Set() const{
    return m_usage_totals_isSet;
}

bool OAIGetUsageTotalsResponse::is_usage_totals_Valid() const{
    return m_usage_totals_isValid;
}

bool OAIGetUsageTotalsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_totals.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetUsageTotalsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
