/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3Bucket.h
 *
 * Provides information about the S3 bucket that a finding applies to.
 */

#ifndef OAIS3Bucket_H
#define OAIS3Bucket_H

#include <QJsonObject>

#include "OAIAllowsUnencryptedObjectUploads.h"
#include "OAIS3Bucket_defaultServerSideEncryption.h"
#include "OAIS3Bucket_owner.h"
#include "OAIS3Bucket_publicAccess.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3Bucket_defaultServerSideEncryption;
class OAIS3Bucket_owner;
class OAIS3Bucket_publicAccess;

class OAIS3Bucket : public OAIObject {
public:
    OAIS3Bucket();
    OAIS3Bucket(QString json);
    ~OAIS3Bucket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllowsUnencryptedObjectUploads getAllowsUnencryptedObjectUploads() const;
    void setAllowsUnencryptedObjectUploads(const OAIAllowsUnencryptedObjectUploads &allows_unencrypted_object_uploads);
    bool is_allows_unencrypted_object_uploads_Set() const;
    bool is_allows_unencrypted_object_uploads_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIS3Bucket_defaultServerSideEncryption getDefaultServerSideEncryption() const;
    void setDefaultServerSideEncryption(const OAIS3Bucket_defaultServerSideEncryption &default_server_side_encryption);
    bool is_default_server_side_encryption_Set() const;
    bool is_default_server_side_encryption_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIS3Bucket_owner getOwner() const;
    void setOwner(const OAIS3Bucket_owner &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIS3Bucket_publicAccess getPublicAccess() const;
    void setPublicAccess(const OAIS3Bucket_publicAccess &public_access);
    bool is_public_access_Set() const;
    bool is_public_access_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllowsUnencryptedObjectUploads m_allows_unencrypted_object_uploads;
    bool m_allows_unencrypted_object_uploads_isSet;
    bool m_allows_unencrypted_object_uploads_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIS3Bucket_defaultServerSideEncryption m_default_server_side_encryption;
    bool m_default_server_side_encryption_isSet;
    bool m_default_server_side_encryption_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIS3Bucket_owner m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIS3Bucket_publicAccess m_public_access;
    bool m_public_access_isSet;
    bool m_public_access_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3Bucket)

#endif // OAIS3Bucket_H
