/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSensitivityInspectionTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSensitivityInspectionTemplateResponse::OAIGetSensitivityInspectionTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSensitivityInspectionTemplateResponse::OAIGetSensitivityInspectionTemplateResponse() {
    this->initializeModel();
}

OAIGetSensitivityInspectionTemplateResponse::~OAIGetSensitivityInspectionTemplateResponse() {}

void OAIGetSensitivityInspectionTemplateResponse::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_excludes_isSet = false;
    m_excludes_isValid = false;

    m_includes_isSet = false;
    m_includes_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sensitivity_inspection_template_id_isSet = false;
    m_sensitivity_inspection_template_id_isValid = false;
}

void OAIGetSensitivityInspectionTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSensitivityInspectionTemplateResponse::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_excludes_isValid = ::OpenAPI::fromJsonValue(m_excludes, json[QString("excludes")]);
    m_excludes_isSet = !json[QString("excludes")].isNull() && m_excludes_isValid;

    m_includes_isValid = ::OpenAPI::fromJsonValue(m_includes, json[QString("includes")]);
    m_includes_isSet = !json[QString("includes")].isNull() && m_includes_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sensitivity_inspection_template_id_isValid = ::OpenAPI::fromJsonValue(m_sensitivity_inspection_template_id, json[QString("sensitivityInspectionTemplateId")]);
    m_sensitivity_inspection_template_id_isSet = !json[QString("sensitivityInspectionTemplateId")].isNull() && m_sensitivity_inspection_template_id_isValid;
}

QString OAIGetSensitivityInspectionTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSensitivityInspectionTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_excludes.isSet()) {
        obj.insert(QString("excludes"), ::OpenAPI::toJsonValue(m_excludes));
    }
    if (m_includes.isSet()) {
        obj.insert(QString("includes"), ::OpenAPI::toJsonValue(m_includes));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sensitivity_inspection_template_id_isSet) {
        obj.insert(QString("sensitivityInspectionTemplateId"), ::OpenAPI::toJsonValue(m_sensitivity_inspection_template_id));
    }
    return obj;
}

QString OAIGetSensitivityInspectionTemplateResponse::getDescription() const {
    return m_description;
}
void OAIGetSensitivityInspectionTemplateResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_description_Valid() const{
    return m_description_isValid;
}

OAIGetSensitivityInspectionTemplateResponse_excludes OAIGetSensitivityInspectionTemplateResponse::getExcludes() const {
    return m_excludes;
}
void OAIGetSensitivityInspectionTemplateResponse::setExcludes(const OAIGetSensitivityInspectionTemplateResponse_excludes &excludes) {
    m_excludes = excludes;
    m_excludes_isSet = true;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_excludes_Set() const{
    return m_excludes_isSet;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_excludes_Valid() const{
    return m_excludes_isValid;
}

OAIGetSensitivityInspectionTemplateResponse_includes OAIGetSensitivityInspectionTemplateResponse::getIncludes() const {
    return m_includes;
}
void OAIGetSensitivityInspectionTemplateResponse::setIncludes(const OAIGetSensitivityInspectionTemplateResponse_includes &includes) {
    m_includes = includes;
    m_includes_isSet = true;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_includes_Set() const{
    return m_includes_isSet;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_includes_Valid() const{
    return m_includes_isValid;
}

QString OAIGetSensitivityInspectionTemplateResponse::getName() const {
    return m_name;
}
void OAIGetSensitivityInspectionTemplateResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGetSensitivityInspectionTemplateResponse::getSensitivityInspectionTemplateId() const {
    return m_sensitivity_inspection_template_id;
}
void OAIGetSensitivityInspectionTemplateResponse::setSensitivityInspectionTemplateId(const QString &sensitivity_inspection_template_id) {
    m_sensitivity_inspection_template_id = sensitivity_inspection_template_id;
    m_sensitivity_inspection_template_id_isSet = true;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_sensitivity_inspection_template_id_Set() const{
    return m_sensitivity_inspection_template_id_isSet;
}

bool OAIGetSensitivityInspectionTemplateResponse::is_sensitivity_inspection_template_id_Valid() const{
    return m_sensitivity_inspection_template_id_isValid;
}

bool OAIGetSensitivityInspectionTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_excludes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_includes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitivity_inspection_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSensitivityInspectionTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
