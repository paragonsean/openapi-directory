/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountLevelPermissions_blockPublicAccess.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountLevelPermissions_blockPublicAccess::OAIAccountLevelPermissions_blockPublicAccess(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountLevelPermissions_blockPublicAccess::OAIAccountLevelPermissions_blockPublicAccess() {
    this->initializeModel();
}

OAIAccountLevelPermissions_blockPublicAccess::~OAIAccountLevelPermissions_blockPublicAccess() {}

void OAIAccountLevelPermissions_blockPublicAccess::initializeModel() {

    m_block_public_acls_isSet = false;
    m_block_public_acls_isValid = false;

    m_block_public_policy_isSet = false;
    m_block_public_policy_isValid = false;

    m_ignore_public_acls_isSet = false;
    m_ignore_public_acls_isValid = false;

    m_restrict_public_buckets_isSet = false;
    m_restrict_public_buckets_isValid = false;
}

void OAIAccountLevelPermissions_blockPublicAccess::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountLevelPermissions_blockPublicAccess::fromJsonObject(QJsonObject json) {

    m_block_public_acls_isValid = ::OpenAPI::fromJsonValue(m_block_public_acls, json[QString("blockPublicAcls")]);
    m_block_public_acls_isSet = !json[QString("blockPublicAcls")].isNull() && m_block_public_acls_isValid;

    m_block_public_policy_isValid = ::OpenAPI::fromJsonValue(m_block_public_policy, json[QString("blockPublicPolicy")]);
    m_block_public_policy_isSet = !json[QString("blockPublicPolicy")].isNull() && m_block_public_policy_isValid;

    m_ignore_public_acls_isValid = ::OpenAPI::fromJsonValue(m_ignore_public_acls, json[QString("ignorePublicAcls")]);
    m_ignore_public_acls_isSet = !json[QString("ignorePublicAcls")].isNull() && m_ignore_public_acls_isValid;

    m_restrict_public_buckets_isValid = ::OpenAPI::fromJsonValue(m_restrict_public_buckets, json[QString("restrictPublicBuckets")]);
    m_restrict_public_buckets_isSet = !json[QString("restrictPublicBuckets")].isNull() && m_restrict_public_buckets_isValid;
}

QString OAIAccountLevelPermissions_blockPublicAccess::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountLevelPermissions_blockPublicAccess::asJsonObject() const {
    QJsonObject obj;
    if (m_block_public_acls_isSet) {
        obj.insert(QString("blockPublicAcls"), ::OpenAPI::toJsonValue(m_block_public_acls));
    }
    if (m_block_public_policy_isSet) {
        obj.insert(QString("blockPublicPolicy"), ::OpenAPI::toJsonValue(m_block_public_policy));
    }
    if (m_ignore_public_acls_isSet) {
        obj.insert(QString("ignorePublicAcls"), ::OpenAPI::toJsonValue(m_ignore_public_acls));
    }
    if (m_restrict_public_buckets_isSet) {
        obj.insert(QString("restrictPublicBuckets"), ::OpenAPI::toJsonValue(m_restrict_public_buckets));
    }
    return obj;
}

bool OAIAccountLevelPermissions_blockPublicAccess::getBlockPublicAcls() const {
    return m_block_public_acls;
}
void OAIAccountLevelPermissions_blockPublicAccess::setBlockPublicAcls(const bool &block_public_acls) {
    m_block_public_acls = block_public_acls;
    m_block_public_acls_isSet = true;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_block_public_acls_Set() const{
    return m_block_public_acls_isSet;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_block_public_acls_Valid() const{
    return m_block_public_acls_isValid;
}

bool OAIAccountLevelPermissions_blockPublicAccess::getBlockPublicPolicy() const {
    return m_block_public_policy;
}
void OAIAccountLevelPermissions_blockPublicAccess::setBlockPublicPolicy(const bool &block_public_policy) {
    m_block_public_policy = block_public_policy;
    m_block_public_policy_isSet = true;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_block_public_policy_Set() const{
    return m_block_public_policy_isSet;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_block_public_policy_Valid() const{
    return m_block_public_policy_isValid;
}

bool OAIAccountLevelPermissions_blockPublicAccess::getIgnorePublicAcls() const {
    return m_ignore_public_acls;
}
void OAIAccountLevelPermissions_blockPublicAccess::setIgnorePublicAcls(const bool &ignore_public_acls) {
    m_ignore_public_acls = ignore_public_acls;
    m_ignore_public_acls_isSet = true;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_ignore_public_acls_Set() const{
    return m_ignore_public_acls_isSet;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_ignore_public_acls_Valid() const{
    return m_ignore_public_acls_isValid;
}

bool OAIAccountLevelPermissions_blockPublicAccess::getRestrictPublicBuckets() const {
    return m_restrict_public_buckets;
}
void OAIAccountLevelPermissions_blockPublicAccess::setRestrictPublicBuckets(const bool &restrict_public_buckets) {
    m_restrict_public_buckets = restrict_public_buckets;
    m_restrict_public_buckets_isSet = true;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_restrict_public_buckets_Set() const{
    return m_restrict_public_buckets_isSet;
}

bool OAIAccountLevelPermissions_blockPublicAccess::is_restrict_public_buckets_Valid() const{
    return m_restrict_public_buckets_isValid;
}

bool OAIAccountLevelPermissions_blockPublicAccess::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_public_acls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_block_public_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ignore_public_acls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restrict_public_buckets_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountLevelPermissions_blockPublicAccess::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
