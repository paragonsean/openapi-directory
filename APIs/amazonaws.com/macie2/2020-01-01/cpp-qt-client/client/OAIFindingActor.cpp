/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFindingActor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFindingActor::OAIFindingActor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFindingActor::OAIFindingActor() {
    this->initializeModel();
}

OAIFindingActor::~OAIFindingActor() {}

void OAIFindingActor::initializeModel() {

    m_domain_details_isSet = false;
    m_domain_details_isValid = false;

    m_ip_address_details_isSet = false;
    m_ip_address_details_isValid = false;

    m_user_identity_isSet = false;
    m_user_identity_isValid = false;
}

void OAIFindingActor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFindingActor::fromJsonObject(QJsonObject json) {

    m_domain_details_isValid = ::OpenAPI::fromJsonValue(m_domain_details, json[QString("domainDetails")]);
    m_domain_details_isSet = !json[QString("domainDetails")].isNull() && m_domain_details_isValid;

    m_ip_address_details_isValid = ::OpenAPI::fromJsonValue(m_ip_address_details, json[QString("ipAddressDetails")]);
    m_ip_address_details_isSet = !json[QString("ipAddressDetails")].isNull() && m_ip_address_details_isValid;

    m_user_identity_isValid = ::OpenAPI::fromJsonValue(m_user_identity, json[QString("userIdentity")]);
    m_user_identity_isSet = !json[QString("userIdentity")].isNull() && m_user_identity_isValid;
}

QString OAIFindingActor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFindingActor::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_details.isSet()) {
        obj.insert(QString("domainDetails"), ::OpenAPI::toJsonValue(m_domain_details));
    }
    if (m_ip_address_details.isSet()) {
        obj.insert(QString("ipAddressDetails"), ::OpenAPI::toJsonValue(m_ip_address_details));
    }
    if (m_user_identity.isSet()) {
        obj.insert(QString("userIdentity"), ::OpenAPI::toJsonValue(m_user_identity));
    }
    return obj;
}

OAIFindingActor_domainDetails OAIFindingActor::getDomainDetails() const {
    return m_domain_details;
}
void OAIFindingActor::setDomainDetails(const OAIFindingActor_domainDetails &domain_details) {
    m_domain_details = domain_details;
    m_domain_details_isSet = true;
}

bool OAIFindingActor::is_domain_details_Set() const{
    return m_domain_details_isSet;
}

bool OAIFindingActor::is_domain_details_Valid() const{
    return m_domain_details_isValid;
}

OAIFindingActor_ipAddressDetails OAIFindingActor::getIpAddressDetails() const {
    return m_ip_address_details;
}
void OAIFindingActor::setIpAddressDetails(const OAIFindingActor_ipAddressDetails &ip_address_details) {
    m_ip_address_details = ip_address_details;
    m_ip_address_details_isSet = true;
}

bool OAIFindingActor::is_ip_address_details_Set() const{
    return m_ip_address_details_isSet;
}

bool OAIFindingActor::is_ip_address_details_Valid() const{
    return m_ip_address_details_isValid;
}

OAIFindingActor_userIdentity OAIFindingActor::getUserIdentity() const {
    return m_user_identity;
}
void OAIFindingActor::setUserIdentity(const OAIFindingActor_userIdentity &user_identity) {
    m_user_identity = user_identity;
    m_user_identity_isSet = true;
}

bool OAIFindingActor::is_user_identity_Set() const{
    return m_user_identity_isSet;
}

bool OAIFindingActor::is_user_identity_Valid() const{
    return m_user_identity_isValid;
}

bool OAIFindingActor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFindingActor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
