/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIpAddressDetails.h
 *
 * Provides information about the IP address of the device that an entity used to perform an action on an affected resource.
 */

#ifndef OAIIpAddressDetails_H
#define OAIIpAddressDetails_H

#include <QJsonObject>

#include "OAIIpAddressDetails_ipCity.h"
#include "OAIIpAddressDetails_ipCountry.h"
#include "OAIIpAddressDetails_ipGeoLocation.h"
#include "OAIIpAddressDetails_ipOwner.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIpAddressDetails_ipCity;
class OAIIpAddressDetails_ipCountry;
class OAIIpAddressDetails_ipGeoLocation;
class OAIIpAddressDetails_ipOwner;

class OAIIpAddressDetails : public OAIObject {
public:
    OAIIpAddressDetails();
    OAIIpAddressDetails(QString json);
    ~OAIIpAddressDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIpAddressV4() const;
    void setIpAddressV4(const QString &ip_address_v4);
    bool is_ip_address_v4_Set() const;
    bool is_ip_address_v4_Valid() const;

    OAIIpAddressDetails_ipCity getIpCity() const;
    void setIpCity(const OAIIpAddressDetails_ipCity &ip_city);
    bool is_ip_city_Set() const;
    bool is_ip_city_Valid() const;

    OAIIpAddressDetails_ipCountry getIpCountry() const;
    void setIpCountry(const OAIIpAddressDetails_ipCountry &ip_country);
    bool is_ip_country_Set() const;
    bool is_ip_country_Valid() const;

    OAIIpAddressDetails_ipGeoLocation getIpGeoLocation() const;
    void setIpGeoLocation(const OAIIpAddressDetails_ipGeoLocation &ip_geo_location);
    bool is_ip_geo_location_Set() const;
    bool is_ip_geo_location_Valid() const;

    OAIIpAddressDetails_ipOwner getIpOwner() const;
    void setIpOwner(const OAIIpAddressDetails_ipOwner &ip_owner);
    bool is_ip_owner_Set() const;
    bool is_ip_owner_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ip_address_v4;
    bool m_ip_address_v4_isSet;
    bool m_ip_address_v4_isValid;

    OAIIpAddressDetails_ipCity m_ip_city;
    bool m_ip_city_isSet;
    bool m_ip_city_isValid;

    OAIIpAddressDetails_ipCountry m_ip_country;
    bool m_ip_country_isSet;
    bool m_ip_country_isValid;

    OAIIpAddressDetails_ipGeoLocation m_ip_geo_location;
    bool m_ip_geo_location_isSet;
    bool m_ip_geo_location_isValid;

    OAIIpAddressDetails_ipOwner m_ip_owner;
    bool m_ip_owner_isSet;
    bool m_ip_owner_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIpAddressDetails)

#endif // OAIIpAddressDetails_H
