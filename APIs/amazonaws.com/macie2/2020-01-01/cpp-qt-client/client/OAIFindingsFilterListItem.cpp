/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFindingsFilterListItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFindingsFilterListItem::OAIFindingsFilterListItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFindingsFilterListItem::OAIFindingsFilterListItem() {
    this->initializeModel();
}

OAIFindingsFilterListItem::~OAIFindingsFilterListItem() {}

void OAIFindingsFilterListItem::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIFindingsFilterListItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFindingsFilterListItem::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIFindingsFilterListItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFindingsFilterListItem::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAIFindingsFilterAction OAIFindingsFilterListItem::getAction() const {
    return m_action;
}
void OAIFindingsFilterListItem::setAction(const OAIFindingsFilterAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIFindingsFilterListItem::is_action_Set() const{
    return m_action_isSet;
}

bool OAIFindingsFilterListItem::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIFindingsFilterListItem::getArn() const {
    return m_arn;
}
void OAIFindingsFilterListItem::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIFindingsFilterListItem::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIFindingsFilterListItem::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIFindingsFilterListItem::getId() const {
    return m_id;
}
void OAIFindingsFilterListItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIFindingsFilterListItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFindingsFilterListItem::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIFindingsFilterListItem::getName() const {
    return m_name;
}
void OAIFindingsFilterListItem::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFindingsFilterListItem::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFindingsFilterListItem::is_name_Valid() const{
    return m_name_isValid;
}

QMap OAIFindingsFilterListItem::getTags() const {
    return m_tags;
}
void OAIFindingsFilterListItem::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIFindingsFilterListItem::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIFindingsFilterListItem::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIFindingsFilterListItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFindingsFilterListItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
