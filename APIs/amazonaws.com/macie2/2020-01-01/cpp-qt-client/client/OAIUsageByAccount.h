/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsageByAccount.h
 *
 * Provides data for a specific usage metric and the corresponding quota for an Amazon Macie account.
 */

#ifndef OAIUsageByAccount_H
#define OAIUsageByAccount_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIUsageByAccount_serviceLimit.h"
#include "OAIUsageType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsageByAccount_serviceLimit;

class OAIUsageByAccount : public OAIObject {
public:
    OAIUsageByAccount();
    OAIUsageByAccount(QString json);
    ~OAIUsageByAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getEstimatedCost() const;
    void setEstimatedCost(const QString &estimated_cost);
    bool is_estimated_cost_Set() const;
    bool is_estimated_cost_Valid() const;

    OAIUsageByAccount_serviceLimit getServiceLimit() const;
    void setServiceLimit(const OAIUsageByAccount_serviceLimit &service_limit);
    bool is_service_limit_Set() const;
    bool is_service_limit_Valid() const;

    OAIUsageType getType() const;
    void setType(const OAIUsageType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_estimated_cost;
    bool m_estimated_cost_isSet;
    bool m_estimated_cost_isValid;

    OAIUsageByAccount_serviceLimit m_service_limit;
    bool m_service_limit_isSet;
    bool m_service_limit_isValid;

    OAIUsageType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsageByAccount)

#endif // OAIUsageByAccount_H
