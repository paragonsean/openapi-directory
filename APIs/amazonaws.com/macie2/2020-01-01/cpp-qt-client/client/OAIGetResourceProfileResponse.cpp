/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetResourceProfileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetResourceProfileResponse::OAIGetResourceProfileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetResourceProfileResponse::OAIGetResourceProfileResponse() {
    this->initializeModel();
}

OAIGetResourceProfileResponse::~OAIGetResourceProfileResponse() {}

void OAIGetResourceProfileResponse::initializeModel() {

    m_profile_updated_at_isSet = false;
    m_profile_updated_at_isValid = false;

    m_sensitivity_score_isSet = false;
    m_sensitivity_score_isValid = false;

    m_sensitivity_score_overridden_isSet = false;
    m_sensitivity_score_overridden_isValid = false;

    m_statistics_isSet = false;
    m_statistics_isValid = false;
}

void OAIGetResourceProfileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetResourceProfileResponse::fromJsonObject(QJsonObject json) {

    m_profile_updated_at_isValid = ::OpenAPI::fromJsonValue(m_profile_updated_at, json[QString("profileUpdatedAt")]);
    m_profile_updated_at_isSet = !json[QString("profileUpdatedAt")].isNull() && m_profile_updated_at_isValid;

    m_sensitivity_score_isValid = ::OpenAPI::fromJsonValue(m_sensitivity_score, json[QString("sensitivityScore")]);
    m_sensitivity_score_isSet = !json[QString("sensitivityScore")].isNull() && m_sensitivity_score_isValid;

    m_sensitivity_score_overridden_isValid = ::OpenAPI::fromJsonValue(m_sensitivity_score_overridden, json[QString("sensitivityScoreOverridden")]);
    m_sensitivity_score_overridden_isSet = !json[QString("sensitivityScoreOverridden")].isNull() && m_sensitivity_score_overridden_isValid;

    m_statistics_isValid = ::OpenAPI::fromJsonValue(m_statistics, json[QString("statistics")]);
    m_statistics_isSet = !json[QString("statistics")].isNull() && m_statistics_isValid;
}

QString OAIGetResourceProfileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetResourceProfileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_updated_at_isSet) {
        obj.insert(QString("profileUpdatedAt"), ::OpenAPI::toJsonValue(m_profile_updated_at));
    }
    if (m_sensitivity_score_isSet) {
        obj.insert(QString("sensitivityScore"), ::OpenAPI::toJsonValue(m_sensitivity_score));
    }
    if (m_sensitivity_score_overridden_isSet) {
        obj.insert(QString("sensitivityScoreOverridden"), ::OpenAPI::toJsonValue(m_sensitivity_score_overridden));
    }
    if (m_statistics.isSet()) {
        obj.insert(QString("statistics"), ::OpenAPI::toJsonValue(m_statistics));
    }
    return obj;
}

QDateTime OAIGetResourceProfileResponse::getProfileUpdatedAt() const {
    return m_profile_updated_at;
}
void OAIGetResourceProfileResponse::setProfileUpdatedAt(const QDateTime &profile_updated_at) {
    m_profile_updated_at = profile_updated_at;
    m_profile_updated_at_isSet = true;
}

bool OAIGetResourceProfileResponse::is_profile_updated_at_Set() const{
    return m_profile_updated_at_isSet;
}

bool OAIGetResourceProfileResponse::is_profile_updated_at_Valid() const{
    return m_profile_updated_at_isValid;
}

qint32 OAIGetResourceProfileResponse::getSensitivityScore() const {
    return m_sensitivity_score;
}
void OAIGetResourceProfileResponse::setSensitivityScore(const qint32 &sensitivity_score) {
    m_sensitivity_score = sensitivity_score;
    m_sensitivity_score_isSet = true;
}

bool OAIGetResourceProfileResponse::is_sensitivity_score_Set() const{
    return m_sensitivity_score_isSet;
}

bool OAIGetResourceProfileResponse::is_sensitivity_score_Valid() const{
    return m_sensitivity_score_isValid;
}

bool OAIGetResourceProfileResponse::getSensitivityScoreOverridden() const {
    return m_sensitivity_score_overridden;
}
void OAIGetResourceProfileResponse::setSensitivityScoreOverridden(const bool &sensitivity_score_overridden) {
    m_sensitivity_score_overridden = sensitivity_score_overridden;
    m_sensitivity_score_overridden_isSet = true;
}

bool OAIGetResourceProfileResponse::is_sensitivity_score_overridden_Set() const{
    return m_sensitivity_score_overridden_isSet;
}

bool OAIGetResourceProfileResponse::is_sensitivity_score_overridden_Valid() const{
    return m_sensitivity_score_overridden_isValid;
}

OAIGetResourceProfileResponse_statistics OAIGetResourceProfileResponse::getStatistics() const {
    return m_statistics;
}
void OAIGetResourceProfileResponse::setStatistics(const OAIGetResourceProfileResponse_statistics &statistics) {
    m_statistics = statistics;
    m_statistics_isSet = true;
}

bool OAIGetResourceProfileResponse::is_statistics_Set() const{
    return m_statistics_isSet;
}

bool OAIGetResourceProfileResponse::is_statistics_Valid() const{
    return m_statistics_isValid;
}

bool OAIGetResourceProfileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitivity_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitivity_score_overridden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetResourceProfileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
