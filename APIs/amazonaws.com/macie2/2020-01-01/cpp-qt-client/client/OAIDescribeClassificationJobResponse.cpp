/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeClassificationJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeClassificationJobResponse::OAIDescribeClassificationJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeClassificationJobResponse::OAIDescribeClassificationJobResponse() {
    this->initializeModel();
}

OAIDescribeClassificationJobResponse::~OAIDescribeClassificationJobResponse() {}

void OAIDescribeClassificationJobResponse::initializeModel() {

    m_allow_list_ids_isSet = false;
    m_allow_list_ids_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_custom_data_identifier_ids_isSet = false;
    m_custom_data_identifier_ids_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_initial_run_isSet = false;
    m_initial_run_isValid = false;

    m_job_arn_isSet = false;
    m_job_arn_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_job_type_isSet = false;
    m_job_type_isValid = false;

    m_last_run_error_status_isSet = false;
    m_last_run_error_status_isValid = false;

    m_last_run_time_isSet = false;
    m_last_run_time_isValid = false;

    m_managed_data_identifier_ids_isSet = false;
    m_managed_data_identifier_ids_isValid = false;

    m_managed_data_identifier_selector_isSet = false;
    m_managed_data_identifier_selector_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_s3_job_definition_isSet = false;
    m_s3_job_definition_isValid = false;

    m_sampling_percentage_isSet = false;
    m_sampling_percentage_isValid = false;

    m_schedule_frequency_isSet = false;
    m_schedule_frequency_isValid = false;

    m_statistics_isSet = false;
    m_statistics_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_user_paused_details_isSet = false;
    m_user_paused_details_isValid = false;
}

void OAIDescribeClassificationJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeClassificationJobResponse::fromJsonObject(QJsonObject json) {

    m_allow_list_ids_isValid = ::OpenAPI::fromJsonValue(m_allow_list_ids, json[QString("allowListIds")]);
    m_allow_list_ids_isSet = !json[QString("allowListIds")].isNull() && m_allow_list_ids_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_custom_data_identifier_ids_isValid = ::OpenAPI::fromJsonValue(m_custom_data_identifier_ids, json[QString("customDataIdentifierIds")]);
    m_custom_data_identifier_ids_isSet = !json[QString("customDataIdentifierIds")].isNull() && m_custom_data_identifier_ids_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_initial_run_isValid = ::OpenAPI::fromJsonValue(m_initial_run, json[QString("initialRun")]);
    m_initial_run_isSet = !json[QString("initialRun")].isNull() && m_initial_run_isValid;

    m_job_arn_isValid = ::OpenAPI::fromJsonValue(m_job_arn, json[QString("jobArn")]);
    m_job_arn_isSet = !json[QString("jobArn")].isNull() && m_job_arn_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("jobStatus")]);
    m_job_status_isSet = !json[QString("jobStatus")].isNull() && m_job_status_isValid;

    m_job_type_isValid = ::OpenAPI::fromJsonValue(m_job_type, json[QString("jobType")]);
    m_job_type_isSet = !json[QString("jobType")].isNull() && m_job_type_isValid;

    m_last_run_error_status_isValid = ::OpenAPI::fromJsonValue(m_last_run_error_status, json[QString("lastRunErrorStatus")]);
    m_last_run_error_status_isSet = !json[QString("lastRunErrorStatus")].isNull() && m_last_run_error_status_isValid;

    m_last_run_time_isValid = ::OpenAPI::fromJsonValue(m_last_run_time, json[QString("lastRunTime")]);
    m_last_run_time_isSet = !json[QString("lastRunTime")].isNull() && m_last_run_time_isValid;

    m_managed_data_identifier_ids_isValid = ::OpenAPI::fromJsonValue(m_managed_data_identifier_ids, json[QString("managedDataIdentifierIds")]);
    m_managed_data_identifier_ids_isSet = !json[QString("managedDataIdentifierIds")].isNull() && m_managed_data_identifier_ids_isValid;

    m_managed_data_identifier_selector_isValid = ::OpenAPI::fromJsonValue(m_managed_data_identifier_selector, json[QString("managedDataIdentifierSelector")]);
    m_managed_data_identifier_selector_isSet = !json[QString("managedDataIdentifierSelector")].isNull() && m_managed_data_identifier_selector_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_s3_job_definition_isValid = ::OpenAPI::fromJsonValue(m_s3_job_definition, json[QString("s3JobDefinition")]);
    m_s3_job_definition_isSet = !json[QString("s3JobDefinition")].isNull() && m_s3_job_definition_isValid;

    m_sampling_percentage_isValid = ::OpenAPI::fromJsonValue(m_sampling_percentage, json[QString("samplingPercentage")]);
    m_sampling_percentage_isSet = !json[QString("samplingPercentage")].isNull() && m_sampling_percentage_isValid;

    m_schedule_frequency_isValid = ::OpenAPI::fromJsonValue(m_schedule_frequency, json[QString("scheduleFrequency")]);
    m_schedule_frequency_isSet = !json[QString("scheduleFrequency")].isNull() && m_schedule_frequency_isValid;

    m_statistics_isValid = ::OpenAPI::fromJsonValue(m_statistics, json[QString("statistics")]);
    m_statistics_isSet = !json[QString("statistics")].isNull() && m_statistics_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_user_paused_details_isValid = ::OpenAPI::fromJsonValue(m_user_paused_details, json[QString("userPausedDetails")]);
    m_user_paused_details_isSet = !json[QString("userPausedDetails")].isNull() && m_user_paused_details_isValid;
}

QString OAIDescribeClassificationJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeClassificationJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_list_ids.isSet()) {
        obj.insert(QString("allowListIds"), ::OpenAPI::toJsonValue(m_allow_list_ids));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_custom_data_identifier_ids.isSet()) {
        obj.insert(QString("customDataIdentifierIds"), ::OpenAPI::toJsonValue(m_custom_data_identifier_ids));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_initial_run_isSet) {
        obj.insert(QString("initialRun"), ::OpenAPI::toJsonValue(m_initial_run));
    }
    if (m_job_arn_isSet) {
        obj.insert(QString("jobArn"), ::OpenAPI::toJsonValue(m_job_arn));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_status.isSet()) {
        obj.insert(QString("jobStatus"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_job_type.isSet()) {
        obj.insert(QString("jobType"), ::OpenAPI::toJsonValue(m_job_type));
    }
    if (m_last_run_error_status.isSet()) {
        obj.insert(QString("lastRunErrorStatus"), ::OpenAPI::toJsonValue(m_last_run_error_status));
    }
    if (m_last_run_time_isSet) {
        obj.insert(QString("lastRunTime"), ::OpenAPI::toJsonValue(m_last_run_time));
    }
    if (m_managed_data_identifier_ids.isSet()) {
        obj.insert(QString("managedDataIdentifierIds"), ::OpenAPI::toJsonValue(m_managed_data_identifier_ids));
    }
    if (m_managed_data_identifier_selector.isSet()) {
        obj.insert(QString("managedDataIdentifierSelector"), ::OpenAPI::toJsonValue(m_managed_data_identifier_selector));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_s3_job_definition.isSet()) {
        obj.insert(QString("s3JobDefinition"), ::OpenAPI::toJsonValue(m_s3_job_definition));
    }
    if (m_sampling_percentage_isSet) {
        obj.insert(QString("samplingPercentage"), ::OpenAPI::toJsonValue(m_sampling_percentage));
    }
    if (m_schedule_frequency.isSet()) {
        obj.insert(QString("scheduleFrequency"), ::OpenAPI::toJsonValue(m_schedule_frequency));
    }
    if (m_statistics.isSet()) {
        obj.insert(QString("statistics"), ::OpenAPI::toJsonValue(m_statistics));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_user_paused_details.isSet()) {
        obj.insert(QString("userPausedDetails"), ::OpenAPI::toJsonValue(m_user_paused_details));
    }
    return obj;
}

QList OAIDescribeClassificationJobResponse::getAllowListIds() const {
    return m_allow_list_ids;
}
void OAIDescribeClassificationJobResponse::setAllowListIds(const QList &allow_list_ids) {
    m_allow_list_ids = allow_list_ids;
    m_allow_list_ids_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_allow_list_ids_Set() const{
    return m_allow_list_ids_isSet;
}

bool OAIDescribeClassificationJobResponse::is_allow_list_ids_Valid() const{
    return m_allow_list_ids_isValid;
}

QString OAIDescribeClassificationJobResponse::getClientToken() const {
    return m_client_token;
}
void OAIDescribeClassificationJobResponse::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIDescribeClassificationJobResponse::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QDateTime OAIDescribeClassificationJobResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIDescribeClassificationJobResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIDescribeClassificationJobResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList OAIDescribeClassificationJobResponse::getCustomDataIdentifierIds() const {
    return m_custom_data_identifier_ids;
}
void OAIDescribeClassificationJobResponse::setCustomDataIdentifierIds(const QList &custom_data_identifier_ids) {
    m_custom_data_identifier_ids = custom_data_identifier_ids;
    m_custom_data_identifier_ids_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_custom_data_identifier_ids_Set() const{
    return m_custom_data_identifier_ids_isSet;
}

bool OAIDescribeClassificationJobResponse::is_custom_data_identifier_ids_Valid() const{
    return m_custom_data_identifier_ids_isValid;
}

QString OAIDescribeClassificationJobResponse::getDescription() const {
    return m_description;
}
void OAIDescribeClassificationJobResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeClassificationJobResponse::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIDescribeClassificationJobResponse::getInitialRun() const {
    return m_initial_run;
}
void OAIDescribeClassificationJobResponse::setInitialRun(const bool &initial_run) {
    m_initial_run = initial_run;
    m_initial_run_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_initial_run_Set() const{
    return m_initial_run_isSet;
}

bool OAIDescribeClassificationJobResponse::is_initial_run_Valid() const{
    return m_initial_run_isValid;
}

QString OAIDescribeClassificationJobResponse::getJobArn() const {
    return m_job_arn;
}
void OAIDescribeClassificationJobResponse::setJobArn(const QString &job_arn) {
    m_job_arn = job_arn;
    m_job_arn_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_job_arn_Set() const{
    return m_job_arn_isSet;
}

bool OAIDescribeClassificationJobResponse::is_job_arn_Valid() const{
    return m_job_arn_isValid;
}

QString OAIDescribeClassificationJobResponse::getJobId() const {
    return m_job_id;
}
void OAIDescribeClassificationJobResponse::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIDescribeClassificationJobResponse::is_job_id_Valid() const{
    return m_job_id_isValid;
}

OAIJobStatus OAIDescribeClassificationJobResponse::getJobStatus() const {
    return m_job_status;
}
void OAIDescribeClassificationJobResponse::setJobStatus(const OAIJobStatus &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAIDescribeClassificationJobResponse::is_job_status_Valid() const{
    return m_job_status_isValid;
}

OAIJobType OAIDescribeClassificationJobResponse::getJobType() const {
    return m_job_type;
}
void OAIDescribeClassificationJobResponse::setJobType(const OAIJobType &job_type) {
    m_job_type = job_type;
    m_job_type_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_job_type_Set() const{
    return m_job_type_isSet;
}

bool OAIDescribeClassificationJobResponse::is_job_type_Valid() const{
    return m_job_type_isValid;
}

OAIDescribeClassificationJobResponse_lastRunErrorStatus OAIDescribeClassificationJobResponse::getLastRunErrorStatus() const {
    return m_last_run_error_status;
}
void OAIDescribeClassificationJobResponse::setLastRunErrorStatus(const OAIDescribeClassificationJobResponse_lastRunErrorStatus &last_run_error_status) {
    m_last_run_error_status = last_run_error_status;
    m_last_run_error_status_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_last_run_error_status_Set() const{
    return m_last_run_error_status_isSet;
}

bool OAIDescribeClassificationJobResponse::is_last_run_error_status_Valid() const{
    return m_last_run_error_status_isValid;
}

QDateTime OAIDescribeClassificationJobResponse::getLastRunTime() const {
    return m_last_run_time;
}
void OAIDescribeClassificationJobResponse::setLastRunTime(const QDateTime &last_run_time) {
    m_last_run_time = last_run_time;
    m_last_run_time_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_last_run_time_Set() const{
    return m_last_run_time_isSet;
}

bool OAIDescribeClassificationJobResponse::is_last_run_time_Valid() const{
    return m_last_run_time_isValid;
}

QList OAIDescribeClassificationJobResponse::getManagedDataIdentifierIds() const {
    return m_managed_data_identifier_ids;
}
void OAIDescribeClassificationJobResponse::setManagedDataIdentifierIds(const QList &managed_data_identifier_ids) {
    m_managed_data_identifier_ids = managed_data_identifier_ids;
    m_managed_data_identifier_ids_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_managed_data_identifier_ids_Set() const{
    return m_managed_data_identifier_ids_isSet;
}

bool OAIDescribeClassificationJobResponse::is_managed_data_identifier_ids_Valid() const{
    return m_managed_data_identifier_ids_isValid;
}

OAIManagedDataIdentifierSelector OAIDescribeClassificationJobResponse::getManagedDataIdentifierSelector() const {
    return m_managed_data_identifier_selector;
}
void OAIDescribeClassificationJobResponse::setManagedDataIdentifierSelector(const OAIManagedDataIdentifierSelector &managed_data_identifier_selector) {
    m_managed_data_identifier_selector = managed_data_identifier_selector;
    m_managed_data_identifier_selector_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_managed_data_identifier_selector_Set() const{
    return m_managed_data_identifier_selector_isSet;
}

bool OAIDescribeClassificationJobResponse::is_managed_data_identifier_selector_Valid() const{
    return m_managed_data_identifier_selector_isValid;
}

QString OAIDescribeClassificationJobResponse::getName() const {
    return m_name;
}
void OAIDescribeClassificationJobResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDescribeClassificationJobResponse::is_name_Valid() const{
    return m_name_isValid;
}

OAIDescribeClassificationJobResponse_s3JobDefinition OAIDescribeClassificationJobResponse::getS3JobDefinition() const {
    return m_s3_job_definition;
}
void OAIDescribeClassificationJobResponse::setS3JobDefinition(const OAIDescribeClassificationJobResponse_s3JobDefinition &s3_job_definition) {
    m_s3_job_definition = s3_job_definition;
    m_s3_job_definition_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_s3_job_definition_Set() const{
    return m_s3_job_definition_isSet;
}

bool OAIDescribeClassificationJobResponse::is_s3_job_definition_Valid() const{
    return m_s3_job_definition_isValid;
}

qint32 OAIDescribeClassificationJobResponse::getSamplingPercentage() const {
    return m_sampling_percentage;
}
void OAIDescribeClassificationJobResponse::setSamplingPercentage(const qint32 &sampling_percentage) {
    m_sampling_percentage = sampling_percentage;
    m_sampling_percentage_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_sampling_percentage_Set() const{
    return m_sampling_percentage_isSet;
}

bool OAIDescribeClassificationJobResponse::is_sampling_percentage_Valid() const{
    return m_sampling_percentage_isValid;
}

OAIDescribeClassificationJobResponse_scheduleFrequency OAIDescribeClassificationJobResponse::getScheduleFrequency() const {
    return m_schedule_frequency;
}
void OAIDescribeClassificationJobResponse::setScheduleFrequency(const OAIDescribeClassificationJobResponse_scheduleFrequency &schedule_frequency) {
    m_schedule_frequency = schedule_frequency;
    m_schedule_frequency_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_schedule_frequency_Set() const{
    return m_schedule_frequency_isSet;
}

bool OAIDescribeClassificationJobResponse::is_schedule_frequency_Valid() const{
    return m_schedule_frequency_isValid;
}

OAIDescribeClassificationJobResponse_statistics OAIDescribeClassificationJobResponse::getStatistics() const {
    return m_statistics;
}
void OAIDescribeClassificationJobResponse::setStatistics(const OAIDescribeClassificationJobResponse_statistics &statistics) {
    m_statistics = statistics;
    m_statistics_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_statistics_Set() const{
    return m_statistics_isSet;
}

bool OAIDescribeClassificationJobResponse::is_statistics_Valid() const{
    return m_statistics_isValid;
}

QMap OAIDescribeClassificationJobResponse::getTags() const {
    return m_tags;
}
void OAIDescribeClassificationJobResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIDescribeClassificationJobResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

OAIDescribeClassificationJobResponse_userPausedDetails OAIDescribeClassificationJobResponse::getUserPausedDetails() const {
    return m_user_paused_details;
}
void OAIDescribeClassificationJobResponse::setUserPausedDetails(const OAIDescribeClassificationJobResponse_userPausedDetails &user_paused_details) {
    m_user_paused_details = user_paused_details;
    m_user_paused_details_isSet = true;
}

bool OAIDescribeClassificationJobResponse::is_user_paused_details_Set() const{
    return m_user_paused_details_isSet;
}

bool OAIDescribeClassificationJobResponse::is_user_paused_details_Valid() const{
    return m_user_paused_details_isValid;
}

bool OAIDescribeClassificationJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_list_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_data_identifier_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initial_run_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_run_error_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_run_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_data_identifier_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_data_identifier_selector.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_job_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sampling_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_paused_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeClassificationJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
