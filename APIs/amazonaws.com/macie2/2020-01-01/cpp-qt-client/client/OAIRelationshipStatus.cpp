/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationshipStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationshipStatus::OAIRelationshipStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationshipStatus::OAIRelationshipStatus() {
    this->initializeModel();
}

OAIRelationshipStatus::~OAIRelationshipStatus() {}

void OAIRelationshipStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRelationshipStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRelationshipStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Paused", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::PAUSED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Invited", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::INVITED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Created", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::CREATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Removed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::REMOVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Resigned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::RESIGNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EmailVerificationInProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::EMAILVERIFICATIONINPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EmailVerificationFailed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::EMAILVERIFICATIONFAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RegionDisabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::REGIONDISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AccountSuspended", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRelationshipStatus::ACCOUNTSUSPENDED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRelationshipStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRelationshipStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRelationshipStatus::ENABLED:
            val = "Enabled";
            break;
        case eOAIRelationshipStatus::PAUSED:
            val = "Paused";
            break;
        case eOAIRelationshipStatus::INVITED:
            val = "Invited";
            break;
        case eOAIRelationshipStatus::CREATED:
            val = "Created";
            break;
        case eOAIRelationshipStatus::REMOVED:
            val = "Removed";
            break;
        case eOAIRelationshipStatus::RESIGNED:
            val = "Resigned";
            break;
        case eOAIRelationshipStatus::EMAILVERIFICATIONINPROGRESS:
            val = "EmailVerificationInProgress";
            break;
        case eOAIRelationshipStatus::EMAILVERIFICATIONFAILED:
            val = "EmailVerificationFailed";
            break;
        case eOAIRelationshipStatus::REGIONDISABLED:
            val = "RegionDisabled";
            break;
        case eOAIRelationshipStatus::ACCOUNTSUSPENDED:
            val = "AccountSuspended";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRelationshipStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRelationshipStatus::eOAIRelationshipStatus OAIRelationshipStatus::getValue() const {
    return m_value;
}

void OAIRelationshipStatus::setValue(const OAIRelationshipStatus::eOAIRelationshipStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRelationshipStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRelationshipStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
