/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMacieSessionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMacieSessionResponse::OAIGetMacieSessionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMacieSessionResponse::OAIGetMacieSessionResponse() {
    this->initializeModel();
}

OAIGetMacieSessionResponse::~OAIGetMacieSessionResponse() {}

void OAIGetMacieSessionResponse::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_finding_publishing_frequency_isSet = false;
    m_finding_publishing_frequency_isValid = false;

    m_service_role_isSet = false;
    m_service_role_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIGetMacieSessionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMacieSessionResponse::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_finding_publishing_frequency_isValid = ::OpenAPI::fromJsonValue(m_finding_publishing_frequency, json[QString("findingPublishingFrequency")]);
    m_finding_publishing_frequency_isSet = !json[QString("findingPublishingFrequency")].isNull() && m_finding_publishing_frequency_isValid;

    m_service_role_isValid = ::OpenAPI::fromJsonValue(m_service_role, json[QString("serviceRole")]);
    m_service_role_isSet = !json[QString("serviceRole")].isNull() && m_service_role_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;
}

QString OAIGetMacieSessionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMacieSessionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_finding_publishing_frequency.isSet()) {
        obj.insert(QString("findingPublishingFrequency"), ::OpenAPI::toJsonValue(m_finding_publishing_frequency));
    }
    if (m_service_role_isSet) {
        obj.insert(QString("serviceRole"), ::OpenAPI::toJsonValue(m_service_role));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QDateTime OAIGetMacieSessionResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIGetMacieSessionResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGetMacieSessionResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGetMacieSessionResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIFindingPublishingFrequency OAIGetMacieSessionResponse::getFindingPublishingFrequency() const {
    return m_finding_publishing_frequency;
}
void OAIGetMacieSessionResponse::setFindingPublishingFrequency(const OAIFindingPublishingFrequency &finding_publishing_frequency) {
    m_finding_publishing_frequency = finding_publishing_frequency;
    m_finding_publishing_frequency_isSet = true;
}

bool OAIGetMacieSessionResponse::is_finding_publishing_frequency_Set() const{
    return m_finding_publishing_frequency_isSet;
}

bool OAIGetMacieSessionResponse::is_finding_publishing_frequency_Valid() const{
    return m_finding_publishing_frequency_isValid;
}

QString OAIGetMacieSessionResponse::getServiceRole() const {
    return m_service_role;
}
void OAIGetMacieSessionResponse::setServiceRole(const QString &service_role) {
    m_service_role = service_role;
    m_service_role_isSet = true;
}

bool OAIGetMacieSessionResponse::is_service_role_Set() const{
    return m_service_role_isSet;
}

bool OAIGetMacieSessionResponse::is_service_role_Valid() const{
    return m_service_role_isValid;
}

OAIMacieStatus OAIGetMacieSessionResponse::getStatus() const {
    return m_status;
}
void OAIGetMacieSessionResponse::setStatus(const OAIMacieStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetMacieSessionResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetMacieSessionResponse::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIGetMacieSessionResponse::getUpdatedAt() const {
    return m_updated_at;
}
void OAIGetMacieSessionResponse::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIGetMacieSessionResponse::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIGetMacieSessionResponse::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIGetMacieSessionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_finding_publishing_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMacieSessionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
