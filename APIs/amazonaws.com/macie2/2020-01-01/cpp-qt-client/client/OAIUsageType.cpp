/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsageType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsageType::OAIUsageType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsageType::OAIUsageType() {
    this->initializeModel();
}

OAIUsageType::~OAIUsageType() {}

void OAIUsageType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUsageType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUsageType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DATA_INVENTORY_EVALUATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageType::DATA_INVENTORY_EVALUATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SENSITIVE_DATA_DISCOVERY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageType::SENSITIVE_DATA_DISCOVERY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTOMATED_SENSITIVE_DATA_DISCOVERY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageType::AUTOMATED_SENSITIVE_DATA_DISCOVERY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTOMATED_OBJECT_MONITORING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsageType::AUTOMATED_OBJECT_MONITORING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUsageType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUsageType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUsageType::DATA_INVENTORY_EVALUATION:
            val = "DATA_INVENTORY_EVALUATION";
            break;
        case eOAIUsageType::SENSITIVE_DATA_DISCOVERY:
            val = "SENSITIVE_DATA_DISCOVERY";
            break;
        case eOAIUsageType::AUTOMATED_SENSITIVE_DATA_DISCOVERY:
            val = "AUTOMATED_SENSITIVE_DATA_DISCOVERY";
            break;
        case eOAIUsageType::AUTOMATED_OBJECT_MONITORING:
            val = "AUTOMATED_OBJECT_MONITORING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUsageType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUsageType::eOAIUsageType OAIUsageType::getValue() const {
    return m_value;
}

void OAIUsageType::setValue(const OAIUsageType::eOAIUsageType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUsageType::isSet() const {
    
    return m_value_isSet;
}

bool OAIUsageType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
