/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomDataIdentifiers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomDataIdentifiers::OAICustomDataIdentifiers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomDataIdentifiers::OAICustomDataIdentifiers() {
    this->initializeModel();
}

OAICustomDataIdentifiers::~OAICustomDataIdentifiers() {}

void OAICustomDataIdentifiers::initializeModel() {

    m_detections_isSet = false;
    m_detections_isValid = false;

    m_total_count_isSet = false;
    m_total_count_isValid = false;
}

void OAICustomDataIdentifiers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomDataIdentifiers::fromJsonObject(QJsonObject json) {

    m_detections_isValid = ::OpenAPI::fromJsonValue(m_detections, json[QString("detections")]);
    m_detections_isSet = !json[QString("detections")].isNull() && m_detections_isValid;

    m_total_count_isValid = ::OpenAPI::fromJsonValue(m_total_count, json[QString("totalCount")]);
    m_total_count_isSet = !json[QString("totalCount")].isNull() && m_total_count_isValid;
}

QString OAICustomDataIdentifiers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomDataIdentifiers::asJsonObject() const {
    QJsonObject obj;
    if (m_detections.isSet()) {
        obj.insert(QString("detections"), ::OpenAPI::toJsonValue(m_detections));
    }
    if (m_total_count_isSet) {
        obj.insert(QString("totalCount"), ::OpenAPI::toJsonValue(m_total_count));
    }
    return obj;
}

QList OAICustomDataIdentifiers::getDetections() const {
    return m_detections;
}
void OAICustomDataIdentifiers::setDetections(const QList &detections) {
    m_detections = detections;
    m_detections_isSet = true;
}

bool OAICustomDataIdentifiers::is_detections_Set() const{
    return m_detections_isSet;
}

bool OAICustomDataIdentifiers::is_detections_Valid() const{
    return m_detections_isValid;
}

qint32 OAICustomDataIdentifiers::getTotalCount() const {
    return m_total_count;
}
void OAICustomDataIdentifiers::setTotalCount(const qint32 &total_count) {
    m_total_count = total_count;
    m_total_count_isSet = true;
}

bool OAICustomDataIdentifiers::is_total_count_Set() const{
    return m_total_count_isSet;
}

bool OAICustomDataIdentifiers::is_total_count_Valid() const{
    return m_total_count_isValid;
}

bool OAICustomDataIdentifiers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detections.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomDataIdentifiers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
