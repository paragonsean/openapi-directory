/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRevealConfiguration_request_configuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRevealConfiguration_request_configuration::OAIUpdateRevealConfiguration_request_configuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRevealConfiguration_request_configuration::OAIUpdateRevealConfiguration_request_configuration() {
    this->initializeModel();
}

OAIUpdateRevealConfiguration_request_configuration::~OAIUpdateRevealConfiguration_request_configuration() {}

void OAIUpdateRevealConfiguration_request_configuration::initializeModel() {

    m_kms_key_id_isSet = false;
    m_kms_key_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUpdateRevealConfiguration_request_configuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRevealConfiguration_request_configuration::fromJsonObject(QJsonObject json) {

    m_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_key_id, json[QString("kmsKeyId")]);
    m_kms_key_id_isSet = !json[QString("kmsKeyId")].isNull() && m_kms_key_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIUpdateRevealConfiguration_request_configuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRevealConfiguration_request_configuration::asJsonObject() const {
    QJsonObject obj;
    if (m_kms_key_id_isSet) {
        obj.insert(QString("kmsKeyId"), ::OpenAPI::toJsonValue(m_kms_key_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIUpdateRevealConfiguration_request_configuration::getKmsKeyId() const {
    return m_kms_key_id;
}
void OAIUpdateRevealConfiguration_request_configuration::setKmsKeyId(const QString &kms_key_id) {
    m_kms_key_id = kms_key_id;
    m_kms_key_id_isSet = true;
}

bool OAIUpdateRevealConfiguration_request_configuration::is_kms_key_id_Set() const{
    return m_kms_key_id_isSet;
}

bool OAIUpdateRevealConfiguration_request_configuration::is_kms_key_id_Valid() const{
    return m_kms_key_id_isValid;
}

OAIRevealStatus OAIUpdateRevealConfiguration_request_configuration::getStatus() const {
    return m_status;
}
void OAIUpdateRevealConfiguration_request_configuration::setStatus(const OAIRevealStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateRevealConfiguration_request_configuration::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateRevealConfiguration_request_configuration::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdateRevealConfiguration_request_configuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRevealConfiguration_request_configuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
