/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestCustomDataIdentifierRequest.h
 *
 * 
 */

#ifndef OAITestCustomDataIdentifierRequest_H
#define OAITestCustomDataIdentifierRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITestCustomDataIdentifierRequest : public OAIObject {
public:
    OAITestCustomDataIdentifierRequest();
    OAITestCustomDataIdentifierRequest(QString json);
    ~OAITestCustomDataIdentifierRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getIgnoreWords() const;
    void setIgnoreWords(const QList &ignore_words);
    bool is_ignore_words_Set() const;
    bool is_ignore_words_Valid() const;

    QList getKeywords() const;
    void setKeywords(const QList &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    qint32 getMaximumMatchDistance() const;
    void setMaximumMatchDistance(const qint32 &maximum_match_distance);
    bool is_maximum_match_distance_Set() const;
    bool is_maximum_match_distance_Valid() const;

    QString getRegex() const;
    void setRegex(const QString &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    QString getSampleText() const;
    void setSampleText(const QString &sample_text);
    bool is_sample_text_Set() const;
    bool is_sample_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_ignore_words;
    bool m_ignore_words_isSet;
    bool m_ignore_words_isValid;

    QList m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    qint32 m_maximum_match_distance;
    bool m_maximum_match_distance_isSet;
    bool m_maximum_match_distance_isValid;

    QString m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;

    QString m_sample_text;
    bool m_sample_text_isSet;
    bool m_sample_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestCustomDataIdentifierRequest)

#endif // OAITestCustomDataIdentifierRequest_H
