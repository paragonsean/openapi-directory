/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatchingBucket.h
 *
 * &lt;p&gt;Provides statistical data and other information about an S3 bucket that Amazon Macie monitors and analyzes for your account. By default, object count and storage size values include data for object parts that are the result of incomplete multipart uploads. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/macie/latest/user/monitoring-s3-how-it-works.html\&quot;&gt;How Macie monitors Amazon S3 data security&lt;/a&gt; in the &lt;i&gt;Amazon Macie User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If an error occurs when Macie attempts to retrieve and process information about the bucket or the bucket&#39;s objects, the value for most of these properties is null. Key exceptions are accountId and bucketName. To identify the cause of the error, refer to the errorCode and errorMessage values.&lt;/p&gt;
 */

#ifndef OAIMatchingBucket_H
#define OAIMatchingBucket_H

#include <QJsonObject>

#include "OAIBucketMetadataErrorCode.h"
#include "OAIBucketMetadata_objectCountByEncryptionType.h"
#include "OAIBucketMetadata_unclassifiableObjectCount.h"
#include "OAIBucketMetadata_unclassifiableObjectSizeInBytes.h"
#include "OAIMatchingBucket_jobDetails.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMatchingBucket_jobDetails;
class OAIBucketMetadata_objectCountByEncryptionType;
class OAIBucketMetadata_unclassifiableObjectCount;
class OAIBucketMetadata_unclassifiableObjectSizeInBytes;

class OAIMatchingBucket : public OAIObject {
public:
    OAIMatchingBucket();
    OAIMatchingBucket(QString json);
    ~OAIMatchingBucket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getBucketName() const;
    void setBucketName(const QString &bucket_name);
    bool is_bucket_name_Set() const;
    bool is_bucket_name_Valid() const;

    qint32 getClassifiableObjectCount() const;
    void setClassifiableObjectCount(const qint32 &classifiable_object_count);
    bool is_classifiable_object_count_Set() const;
    bool is_classifiable_object_count_Valid() const;

    qint32 getClassifiableSizeInBytes() const;
    void setClassifiableSizeInBytes(const qint32 &classifiable_size_in_bytes);
    bool is_classifiable_size_in_bytes_Set() const;
    bool is_classifiable_size_in_bytes_Valid() const;

    OAIBucketMetadataErrorCode getErrorCode() const;
    void setErrorCode(const OAIBucketMetadataErrorCode &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAIMatchingBucket_jobDetails getJobDetails() const;
    void setJobDetails(const OAIMatchingBucket_jobDetails &job_details);
    bool is_job_details_Set() const;
    bool is_job_details_Valid() const;

    QDateTime getLastAutomatedDiscoveryTime() const;
    void setLastAutomatedDiscoveryTime(const QDateTime &last_automated_discovery_time);
    bool is_last_automated_discovery_time_Set() const;
    bool is_last_automated_discovery_time_Valid() const;

    qint32 getObjectCount() const;
    void setObjectCount(const qint32 &object_count);
    bool is_object_count_Set() const;
    bool is_object_count_Valid() const;

    OAIBucketMetadata_objectCountByEncryptionType getObjectCountByEncryptionType() const;
    void setObjectCountByEncryptionType(const OAIBucketMetadata_objectCountByEncryptionType &object_count_by_encryption_type);
    bool is_object_count_by_encryption_type_Set() const;
    bool is_object_count_by_encryption_type_Valid() const;

    qint32 getSensitivityScore() const;
    void setSensitivityScore(const qint32 &sensitivity_score);
    bool is_sensitivity_score_Set() const;
    bool is_sensitivity_score_Valid() const;

    qint32 getSizeInBytes() const;
    void setSizeInBytes(const qint32 &size_in_bytes);
    bool is_size_in_bytes_Set() const;
    bool is_size_in_bytes_Valid() const;

    qint32 getSizeInBytesCompressed() const;
    void setSizeInBytesCompressed(const qint32 &size_in_bytes_compressed);
    bool is_size_in_bytes_compressed_Set() const;
    bool is_size_in_bytes_compressed_Valid() const;

    OAIBucketMetadata_unclassifiableObjectCount getUnclassifiableObjectCount() const;
    void setUnclassifiableObjectCount(const OAIBucketMetadata_unclassifiableObjectCount &unclassifiable_object_count);
    bool is_unclassifiable_object_count_Set() const;
    bool is_unclassifiable_object_count_Valid() const;

    OAIBucketMetadata_unclassifiableObjectSizeInBytes getUnclassifiableObjectSizeInBytes() const;
    void setUnclassifiableObjectSizeInBytes(const OAIBucketMetadata_unclassifiableObjectSizeInBytes &unclassifiable_object_size_in_bytes);
    bool is_unclassifiable_object_size_in_bytes_Set() const;
    bool is_unclassifiable_object_size_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_bucket_name;
    bool m_bucket_name_isSet;
    bool m_bucket_name_isValid;

    qint32 m_classifiable_object_count;
    bool m_classifiable_object_count_isSet;
    bool m_classifiable_object_count_isValid;

    qint32 m_classifiable_size_in_bytes;
    bool m_classifiable_size_in_bytes_isSet;
    bool m_classifiable_size_in_bytes_isValid;

    OAIBucketMetadataErrorCode m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAIMatchingBucket_jobDetails m_job_details;
    bool m_job_details_isSet;
    bool m_job_details_isValid;

    QDateTime m_last_automated_discovery_time;
    bool m_last_automated_discovery_time_isSet;
    bool m_last_automated_discovery_time_isValid;

    qint32 m_object_count;
    bool m_object_count_isSet;
    bool m_object_count_isValid;

    OAIBucketMetadata_objectCountByEncryptionType m_object_count_by_encryption_type;
    bool m_object_count_by_encryption_type_isSet;
    bool m_object_count_by_encryption_type_isValid;

    qint32 m_sensitivity_score;
    bool m_sensitivity_score_isSet;
    bool m_sensitivity_score_isValid;

    qint32 m_size_in_bytes;
    bool m_size_in_bytes_isSet;
    bool m_size_in_bytes_isValid;

    qint32 m_size_in_bytes_compressed;
    bool m_size_in_bytes_compressed_isSet;
    bool m_size_in_bytes_compressed_isValid;

    OAIBucketMetadata_unclassifiableObjectCount m_unclassifiable_object_count;
    bool m_unclassifiable_object_count_isSet;
    bool m_unclassifiable_object_count_isValid;

    OAIBucketMetadata_unclassifiableObjectSizeInBytes m_unclassifiable_object_size_in_bytes;
    bool m_unclassifiable_object_size_in_bytes_isSet;
    bool m_unclassifiable_object_size_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatchingBucket)

#endif // OAIMatchingBucket_H
