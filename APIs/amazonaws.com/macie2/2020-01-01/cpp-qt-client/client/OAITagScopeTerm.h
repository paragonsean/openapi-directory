/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITagScopeTerm.h
 *
 * Specifies a tag-based condition that determines whether an S3 object is included or excluded from a classification job.
 */

#ifndef OAITagScopeTerm_H
#define OAITagScopeTerm_H

#include <QJsonObject>

#include "OAIJobComparator.h"
#include "OAITagTarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITagScopeTerm : public OAIObject {
public:
    OAITagScopeTerm();
    OAITagScopeTerm(QString json);
    ~OAITagScopeTerm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIJobComparator getComparator() const;
    void setComparator(const OAIJobComparator &comparator);
    bool is_comparator_Set() const;
    bool is_comparator_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QList getTagValues() const;
    void setTagValues(const QList &tag_values);
    bool is_tag_values_Set() const;
    bool is_tag_values_Valid() const;

    OAITagTarget getTarget() const;
    void setTarget(const OAITagTarget &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIJobComparator m_comparator;
    bool m_comparator_isSet;
    bool m_comparator_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QList m_tag_values;
    bool m_tag_values_isSet;
    bool m_tag_values_isValid;

    OAITagTarget m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITagScopeTerm)

#endif // OAITagScopeTerm_H
