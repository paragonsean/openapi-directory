/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSensitivityInspectionTemplatesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSensitivityInspectionTemplatesResponse::OAIListSensitivityInspectionTemplatesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSensitivityInspectionTemplatesResponse::OAIListSensitivityInspectionTemplatesResponse() {
    this->initializeModel();
}

OAIListSensitivityInspectionTemplatesResponse::~OAIListSensitivityInspectionTemplatesResponse() {}

void OAIListSensitivityInspectionTemplatesResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_sensitivity_inspection_templates_isSet = false;
    m_sensitivity_inspection_templates_isValid = false;
}

void OAIListSensitivityInspectionTemplatesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSensitivityInspectionTemplatesResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_sensitivity_inspection_templates_isValid = ::OpenAPI::fromJsonValue(m_sensitivity_inspection_templates, json[QString("sensitivityInspectionTemplates")]);
    m_sensitivity_inspection_templates_isSet = !json[QString("sensitivityInspectionTemplates")].isNull() && m_sensitivity_inspection_templates_isValid;
}

QString OAIListSensitivityInspectionTemplatesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSensitivityInspectionTemplatesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_sensitivity_inspection_templates.isSet()) {
        obj.insert(QString("sensitivityInspectionTemplates"), ::OpenAPI::toJsonValue(m_sensitivity_inspection_templates));
    }
    return obj;
}

QString OAIListSensitivityInspectionTemplatesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListSensitivityInspectionTemplatesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSensitivityInspectionTemplatesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSensitivityInspectionTemplatesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListSensitivityInspectionTemplatesResponse::getSensitivityInspectionTemplates() const {
    return m_sensitivity_inspection_templates;
}
void OAIListSensitivityInspectionTemplatesResponse::setSensitivityInspectionTemplates(const QList &sensitivity_inspection_templates) {
    m_sensitivity_inspection_templates = sensitivity_inspection_templates;
    m_sensitivity_inspection_templates_isSet = true;
}

bool OAIListSensitivityInspectionTemplatesResponse::is_sensitivity_inspection_templates_Set() const{
    return m_sensitivity_inspection_templates_isSet;
}

bool OAIListSensitivityInspectionTemplatesResponse::is_sensitivity_inspection_templates_Valid() const{
    return m_sensitivity_inspection_templates_isValid;
}

bool OAIListSensitivityInspectionTemplatesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitivity_inspection_templates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSensitivityInspectionTemplatesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
