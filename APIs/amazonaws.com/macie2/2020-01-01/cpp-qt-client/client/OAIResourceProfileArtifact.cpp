/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceProfileArtifact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceProfileArtifact::OAIResourceProfileArtifact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceProfileArtifact::OAIResourceProfileArtifact() {
    this->initializeModel();
}

OAIResourceProfileArtifact::~OAIResourceProfileArtifact() {}

void OAIResourceProfileArtifact::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_classification_result_status_isSet = false;
    m_classification_result_status_isValid = false;

    m_sensitive_isSet = false;
    m_sensitive_isValid = false;
}

void OAIResourceProfileArtifact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceProfileArtifact::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_classification_result_status_isValid = ::OpenAPI::fromJsonValue(m_classification_result_status, json[QString("classificationResultStatus")]);
    m_classification_result_status_isSet = !json[QString("classificationResultStatus")].isNull() && m_classification_result_status_isValid;

    m_sensitive_isValid = ::OpenAPI::fromJsonValue(m_sensitive, json[QString("sensitive")]);
    m_sensitive_isSet = !json[QString("sensitive")].isNull() && m_sensitive_isValid;
}

QString OAIResourceProfileArtifact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceProfileArtifact::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_classification_result_status_isSet) {
        obj.insert(QString("classificationResultStatus"), ::OpenAPI::toJsonValue(m_classification_result_status));
    }
    if (m_sensitive_isSet) {
        obj.insert(QString("sensitive"), ::OpenAPI::toJsonValue(m_sensitive));
    }
    return obj;
}

QString OAIResourceProfileArtifact::getArn() const {
    return m_arn;
}
void OAIResourceProfileArtifact::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIResourceProfileArtifact::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIResourceProfileArtifact::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIResourceProfileArtifact::getClassificationResultStatus() const {
    return m_classification_result_status;
}
void OAIResourceProfileArtifact::setClassificationResultStatus(const QString &classification_result_status) {
    m_classification_result_status = classification_result_status;
    m_classification_result_status_isSet = true;
}

bool OAIResourceProfileArtifact::is_classification_result_status_Set() const{
    return m_classification_result_status_isSet;
}

bool OAIResourceProfileArtifact::is_classification_result_status_Valid() const{
    return m_classification_result_status_isValid;
}

bool OAIResourceProfileArtifact::getSensitive() const {
    return m_sensitive;
}
void OAIResourceProfileArtifact::setSensitive(const bool &sensitive) {
    m_sensitive = sensitive;
    m_sensitive_isSet = true;
}

bool OAIResourceProfileArtifact::is_sensitive_Set() const{
    return m_sensitive_isSet;
}

bool OAIResourceProfileArtifact::is_sensitive_Valid() const{
    return m_sensitive_isValid;
}

bool OAIResourceProfileArtifact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_classification_result_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceProfileArtifact::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && m_classification_result_status_isValid && true;
}

} // namespace OpenAPI
