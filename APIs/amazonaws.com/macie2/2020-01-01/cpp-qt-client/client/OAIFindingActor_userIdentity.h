/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFindingActor_userIdentity.h
 *
 * 
 */

#ifndef OAIFindingActor_userIdentity_H
#define OAIFindingActor_userIdentity_H

#include <QJsonObject>

#include "OAIUserIdentityType.h"
#include "OAIUserIdentity_assumedRole.h"
#include "OAIUserIdentity_awsAccount.h"
#include "OAIUserIdentity_awsService.h"
#include "OAIUserIdentity_federatedUser.h"
#include "OAIUserIdentity_iamUser.h"
#include "OAIUserIdentity_root.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserIdentity_assumedRole;
class OAIUserIdentity_awsAccount;
class OAIUserIdentity_awsService;
class OAIUserIdentity_federatedUser;
class OAIUserIdentity_iamUser;
class OAIUserIdentity_root;

class OAIFindingActor_userIdentity : public OAIObject {
public:
    OAIFindingActor_userIdentity();
    OAIFindingActor_userIdentity(QString json);
    ~OAIFindingActor_userIdentity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserIdentity_assumedRole getAssumedRole() const;
    void setAssumedRole(const OAIUserIdentity_assumedRole &assumed_role);
    bool is_assumed_role_Set() const;
    bool is_assumed_role_Valid() const;

    OAIUserIdentity_awsAccount getAwsAccount() const;
    void setAwsAccount(const OAIUserIdentity_awsAccount &aws_account);
    bool is_aws_account_Set() const;
    bool is_aws_account_Valid() const;

    OAIUserIdentity_awsService getAwsService() const;
    void setAwsService(const OAIUserIdentity_awsService &aws_service);
    bool is_aws_service_Set() const;
    bool is_aws_service_Valid() const;

    OAIUserIdentity_federatedUser getFederatedUser() const;
    void setFederatedUser(const OAIUserIdentity_federatedUser &federated_user);
    bool is_federated_user_Set() const;
    bool is_federated_user_Valid() const;

    OAIUserIdentity_iamUser getIamUser() const;
    void setIamUser(const OAIUserIdentity_iamUser &iam_user);
    bool is_iam_user_Set() const;
    bool is_iam_user_Valid() const;

    OAIUserIdentity_root getRoot() const;
    void setRoot(const OAIUserIdentity_root &root);
    bool is_root_Set() const;
    bool is_root_Valid() const;

    OAIUserIdentityType getType() const;
    void setType(const OAIUserIdentityType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserIdentity_assumedRole m_assumed_role;
    bool m_assumed_role_isSet;
    bool m_assumed_role_isValid;

    OAIUserIdentity_awsAccount m_aws_account;
    bool m_aws_account_isSet;
    bool m_aws_account_isValid;

    OAIUserIdentity_awsService m_aws_service;
    bool m_aws_service_isSet;
    bool m_aws_service_isValid;

    OAIUserIdentity_federatedUser m_federated_user;
    bool m_federated_user_isSet;
    bool m_federated_user_isValid;

    OAIUserIdentity_iamUser m_iam_user;
    bool m_iam_user_isSet;
    bool m_iam_user_isValid;

    OAIUserIdentity_root m_root;
    bool m_root_isSet;
    bool m_root_isValid;

    OAIUserIdentityType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFindingActor_userIdentity)

#endif // OAIFindingActor_userIdentity_H
