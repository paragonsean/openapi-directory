/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateClassificationScope_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateClassificationScope_request::OAIUpdateClassificationScope_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateClassificationScope_request::OAIUpdateClassificationScope_request() {
    this->initializeModel();
}

OAIUpdateClassificationScope_request::~OAIUpdateClassificationScope_request() {}

void OAIUpdateClassificationScope_request::initializeModel() {

    m_s3_isSet = false;
    m_s3_isValid = false;
}

void OAIUpdateClassificationScope_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateClassificationScope_request::fromJsonObject(QJsonObject json) {

    m_s3_isValid = ::OpenAPI::fromJsonValue(m_s3, json[QString("s3")]);
    m_s3_isSet = !json[QString("s3")].isNull() && m_s3_isValid;
}

QString OAIUpdateClassificationScope_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateClassificationScope_request::asJsonObject() const {
    QJsonObject obj;
    if (m_s3.isSet()) {
        obj.insert(QString("s3"), ::OpenAPI::toJsonValue(m_s3));
    }
    return obj;
}

OAIUpdateClassificationScope_request_s3 OAIUpdateClassificationScope_request::getS3() const {
    return m_s3;
}
void OAIUpdateClassificationScope_request::setS3(const OAIUpdateClassificationScope_request_s3 &s3) {
    m_s3 = s3;
    m_s3_isSet = true;
}

bool OAIUpdateClassificationScope_request::is_s3_Set() const{
    return m_s3_isSet;
}

bool OAIUpdateClassificationScope_request::is_s3_Valid() const{
    return m_s3_isValid;
}

bool OAIUpdateClassificationScope_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateClassificationScope_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
