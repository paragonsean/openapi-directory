/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFindingCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFindingCategory::OAIFindingCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFindingCategory::OAIFindingCategory() {
    this->initializeModel();
}

OAIFindingCategory::~OAIFindingCategory() {}

void OAIFindingCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFindingCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFindingCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CLASSIFICATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFindingCategory::CLASSIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("POLICY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFindingCategory::POLICY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFindingCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFindingCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFindingCategory::CLASSIFICATION:
            val = "CLASSIFICATION";
            break;
        case eOAIFindingCategory::POLICY:
            val = "POLICY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFindingCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFindingCategory::eOAIFindingCategory OAIFindingCategory::getValue() const {
    return m_value;
}

void OAIFindingCategory::setValue(const OAIFindingCategory::eOAIFindingCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFindingCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIFindingCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
