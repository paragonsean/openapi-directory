/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinding.h
 *
 * Provides the details of a finding.
 */

#ifndef OAIFinding_H
#define OAIFinding_H

#include <QJsonObject>

#include "OAIFindingCategory.h"
#include "OAIFindingType.h"
#include "OAIFinding_classificationDetails.h"
#include "OAIFinding_policyDetails.h"
#include "OAIFinding_resourcesAffected.h"
#include "OAIFinding_severity.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFinding_classificationDetails;
class OAIFinding_policyDetails;
class OAIFinding_resourcesAffected;
class OAIFinding_severity;

class OAIFinding : public OAIObject {
public:
    OAIFinding();
    OAIFinding(QString json);
    ~OAIFinding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    bool getArchived() const;
    void setArchived(const bool &archived);
    bool is_archived_Set() const;
    bool is_archived_Valid() const;

    OAIFindingCategory getCategory() const;
    void setCategory(const OAIFindingCategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAIFinding_classificationDetails getClassificationDetails() const;
    void setClassificationDetails(const OAIFinding_classificationDetails &classification_details);
    bool is_classification_details_Set() const;
    bool is_classification_details_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getPartition() const;
    void setPartition(const QString &partition);
    bool is_partition_Set() const;
    bool is_partition_Valid() const;

    OAIFinding_policyDetails getPolicyDetails() const;
    void setPolicyDetails(const OAIFinding_policyDetails &policy_details);
    bool is_policy_details_Set() const;
    bool is_policy_details_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    OAIFinding_resourcesAffected getResourcesAffected() const;
    void setResourcesAffected(const OAIFinding_resourcesAffected &resources_affected);
    bool is_resources_affected_Set() const;
    bool is_resources_affected_Valid() const;

    bool getSample() const;
    void setSample(const bool &sample);
    bool is_sample_Set() const;
    bool is_sample_Valid() const;

    QString getSchemaVersion() const;
    void setSchemaVersion(const QString &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    OAIFinding_severity getSeverity() const;
    void setSeverity(const OAIFinding_severity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIFindingType getType() const;
    void setType(const OAIFindingType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    bool m_archived;
    bool m_archived_isSet;
    bool m_archived_isValid;

    OAIFindingCategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAIFinding_classificationDetails m_classification_details;
    bool m_classification_details_isSet;
    bool m_classification_details_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_partition;
    bool m_partition_isSet;
    bool m_partition_isValid;

    OAIFinding_policyDetails m_policy_details;
    bool m_policy_details_isSet;
    bool m_policy_details_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    OAIFinding_resourcesAffected m_resources_affected;
    bool m_resources_affected_isSet;
    bool m_resources_affected_isValid;

    bool m_sample;
    bool m_sample_isSet;
    bool m_sample_isValid;

    QString m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;

    OAIFinding_severity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIFindingType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinding)

#endif // OAIFinding_H
