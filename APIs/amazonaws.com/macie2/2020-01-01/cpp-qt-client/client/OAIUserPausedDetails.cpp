/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserPausedDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserPausedDetails::OAIUserPausedDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserPausedDetails::OAIUserPausedDetails() {
    this->initializeModel();
}

OAIUserPausedDetails::~OAIUserPausedDetails() {}

void OAIUserPausedDetails::initializeModel() {

    m_job_expires_at_isSet = false;
    m_job_expires_at_isValid = false;

    m_job_imminent_expiration_health_event_arn_isSet = false;
    m_job_imminent_expiration_health_event_arn_isValid = false;

    m_job_paused_at_isSet = false;
    m_job_paused_at_isValid = false;
}

void OAIUserPausedDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserPausedDetails::fromJsonObject(QJsonObject json) {

    m_job_expires_at_isValid = ::OpenAPI::fromJsonValue(m_job_expires_at, json[QString("jobExpiresAt")]);
    m_job_expires_at_isSet = !json[QString("jobExpiresAt")].isNull() && m_job_expires_at_isValid;

    m_job_imminent_expiration_health_event_arn_isValid = ::OpenAPI::fromJsonValue(m_job_imminent_expiration_health_event_arn, json[QString("jobImminentExpirationHealthEventArn")]);
    m_job_imminent_expiration_health_event_arn_isSet = !json[QString("jobImminentExpirationHealthEventArn")].isNull() && m_job_imminent_expiration_health_event_arn_isValid;

    m_job_paused_at_isValid = ::OpenAPI::fromJsonValue(m_job_paused_at, json[QString("jobPausedAt")]);
    m_job_paused_at_isSet = !json[QString("jobPausedAt")].isNull() && m_job_paused_at_isValid;
}

QString OAIUserPausedDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserPausedDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_job_expires_at_isSet) {
        obj.insert(QString("jobExpiresAt"), ::OpenAPI::toJsonValue(m_job_expires_at));
    }
    if (m_job_imminent_expiration_health_event_arn_isSet) {
        obj.insert(QString("jobImminentExpirationHealthEventArn"), ::OpenAPI::toJsonValue(m_job_imminent_expiration_health_event_arn));
    }
    if (m_job_paused_at_isSet) {
        obj.insert(QString("jobPausedAt"), ::OpenAPI::toJsonValue(m_job_paused_at));
    }
    return obj;
}

QDateTime OAIUserPausedDetails::getJobExpiresAt() const {
    return m_job_expires_at;
}
void OAIUserPausedDetails::setJobExpiresAt(const QDateTime &job_expires_at) {
    m_job_expires_at = job_expires_at;
    m_job_expires_at_isSet = true;
}

bool OAIUserPausedDetails::is_job_expires_at_Set() const{
    return m_job_expires_at_isSet;
}

bool OAIUserPausedDetails::is_job_expires_at_Valid() const{
    return m_job_expires_at_isValid;
}

QString OAIUserPausedDetails::getJobImminentExpirationHealthEventArn() const {
    return m_job_imminent_expiration_health_event_arn;
}
void OAIUserPausedDetails::setJobImminentExpirationHealthEventArn(const QString &job_imminent_expiration_health_event_arn) {
    m_job_imminent_expiration_health_event_arn = job_imminent_expiration_health_event_arn;
    m_job_imminent_expiration_health_event_arn_isSet = true;
}

bool OAIUserPausedDetails::is_job_imminent_expiration_health_event_arn_Set() const{
    return m_job_imminent_expiration_health_event_arn_isSet;
}

bool OAIUserPausedDetails::is_job_imminent_expiration_health_event_arn_Valid() const{
    return m_job_imminent_expiration_health_event_arn_isValid;
}

QDateTime OAIUserPausedDetails::getJobPausedAt() const {
    return m_job_paused_at;
}
void OAIUserPausedDetails::setJobPausedAt(const QDateTime &job_paused_at) {
    m_job_paused_at = job_paused_at;
    m_job_paused_at_isSet = true;
}

bool OAIUserPausedDetails::is_job_paused_at_Set() const{
    return m_job_paused_at_isSet;
}

bool OAIUserPausedDetails::is_job_paused_at_Valid() const{
    return m_job_paused_at_isValid;
}

bool OAIUserPausedDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_expires_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_imminent_expiration_health_event_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_paused_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserPausedDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
