/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetCustomDataIdentifiersResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetCustomDataIdentifiersResponse::OAIBatchGetCustomDataIdentifiersResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetCustomDataIdentifiersResponse::OAIBatchGetCustomDataIdentifiersResponse() {
    this->initializeModel();
}

OAIBatchGetCustomDataIdentifiersResponse::~OAIBatchGetCustomDataIdentifiersResponse() {}

void OAIBatchGetCustomDataIdentifiersResponse::initializeModel() {

    m_custom_data_identifiers_isSet = false;
    m_custom_data_identifiers_isValid = false;

    m_not_found_identifier_ids_isSet = false;
    m_not_found_identifier_ids_isValid = false;
}

void OAIBatchGetCustomDataIdentifiersResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetCustomDataIdentifiersResponse::fromJsonObject(QJsonObject json) {

    m_custom_data_identifiers_isValid = ::OpenAPI::fromJsonValue(m_custom_data_identifiers, json[QString("customDataIdentifiers")]);
    m_custom_data_identifiers_isSet = !json[QString("customDataIdentifiers")].isNull() && m_custom_data_identifiers_isValid;

    m_not_found_identifier_ids_isValid = ::OpenAPI::fromJsonValue(m_not_found_identifier_ids, json[QString("notFoundIdentifierIds")]);
    m_not_found_identifier_ids_isSet = !json[QString("notFoundIdentifierIds")].isNull() && m_not_found_identifier_ids_isValid;
}

QString OAIBatchGetCustomDataIdentifiersResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetCustomDataIdentifiersResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_data_identifiers.isSet()) {
        obj.insert(QString("customDataIdentifiers"), ::OpenAPI::toJsonValue(m_custom_data_identifiers));
    }
    if (m_not_found_identifier_ids.isSet()) {
        obj.insert(QString("notFoundIdentifierIds"), ::OpenAPI::toJsonValue(m_not_found_identifier_ids));
    }
    return obj;
}

QList OAIBatchGetCustomDataIdentifiersResponse::getCustomDataIdentifiers() const {
    return m_custom_data_identifiers;
}
void OAIBatchGetCustomDataIdentifiersResponse::setCustomDataIdentifiers(const QList &custom_data_identifiers) {
    m_custom_data_identifiers = custom_data_identifiers;
    m_custom_data_identifiers_isSet = true;
}

bool OAIBatchGetCustomDataIdentifiersResponse::is_custom_data_identifiers_Set() const{
    return m_custom_data_identifiers_isSet;
}

bool OAIBatchGetCustomDataIdentifiersResponse::is_custom_data_identifiers_Valid() const{
    return m_custom_data_identifiers_isValid;
}

QList OAIBatchGetCustomDataIdentifiersResponse::getNotFoundIdentifierIds() const {
    return m_not_found_identifier_ids;
}
void OAIBatchGetCustomDataIdentifiersResponse::setNotFoundIdentifierIds(const QList &not_found_identifier_ids) {
    m_not_found_identifier_ids = not_found_identifier_ids;
    m_not_found_identifier_ids_isSet = true;
}

bool OAIBatchGetCustomDataIdentifiersResponse::is_not_found_identifier_ids_Set() const{
    return m_not_found_identifier_ids_isSet;
}

bool OAIBatchGetCustomDataIdentifiersResponse::is_not_found_identifier_ids_Valid() const{
    return m_not_found_identifier_ids_isValid;
}

bool OAIBatchGetCustomDataIdentifiersResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_data_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_not_found_identifier_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetCustomDataIdentifiersResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
