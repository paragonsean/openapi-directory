/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISessionContextAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISessionContextAttributes::OAISessionContextAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISessionContextAttributes::OAISessionContextAttributes() {
    this->initializeModel();
}

OAISessionContextAttributes::~OAISessionContextAttributes() {}

void OAISessionContextAttributes::initializeModel() {

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_mfa_authenticated_isSet = false;
    m_mfa_authenticated_isValid = false;
}

void OAISessionContextAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISessionContextAttributes::fromJsonObject(QJsonObject json) {

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("creationDate")]);
    m_creation_date_isSet = !json[QString("creationDate")].isNull() && m_creation_date_isValid;

    m_mfa_authenticated_isValid = ::OpenAPI::fromJsonValue(m_mfa_authenticated, json[QString("mfaAuthenticated")]);
    m_mfa_authenticated_isSet = !json[QString("mfaAuthenticated")].isNull() && m_mfa_authenticated_isValid;
}

QString OAISessionContextAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISessionContextAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_date_isSet) {
        obj.insert(QString("creationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_mfa_authenticated_isSet) {
        obj.insert(QString("mfaAuthenticated"), ::OpenAPI::toJsonValue(m_mfa_authenticated));
    }
    return obj;
}

QDateTime OAISessionContextAttributes::getCreationDate() const {
    return m_creation_date;
}
void OAISessionContextAttributes::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAISessionContextAttributes::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAISessionContextAttributes::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

bool OAISessionContextAttributes::getMfaAuthenticated() const {
    return m_mfa_authenticated;
}
void OAISessionContextAttributes::setMfaAuthenticated(const bool &mfa_authenticated) {
    m_mfa_authenticated = mfa_authenticated;
    m_mfa_authenticated_isSet = true;
}

bool OAISessionContextAttributes::is_mfa_authenticated_Set() const{
    return m_mfa_authenticated_isSet;
}

bool OAISessionContextAttributes::is_mfa_authenticated_Valid() const{
    return m_mfa_authenticated_isValid;
}

bool OAISessionContextAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mfa_authenticated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISessionContextAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
