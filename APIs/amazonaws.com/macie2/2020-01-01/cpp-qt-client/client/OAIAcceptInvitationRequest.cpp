/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptInvitationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptInvitationRequest::OAIAcceptInvitationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptInvitationRequest::OAIAcceptInvitationRequest() {
    this->initializeModel();
}

OAIAcceptInvitationRequest::~OAIAcceptInvitationRequest() {}

void OAIAcceptInvitationRequest::initializeModel() {

    m_administrator_account_id_isSet = false;
    m_administrator_account_id_isValid = false;

    m_invitation_id_isSet = false;
    m_invitation_id_isValid = false;

    m_master_account_isSet = false;
    m_master_account_isValid = false;
}

void OAIAcceptInvitationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptInvitationRequest::fromJsonObject(QJsonObject json) {

    m_administrator_account_id_isValid = ::OpenAPI::fromJsonValue(m_administrator_account_id, json[QString("administratorAccountId")]);
    m_administrator_account_id_isSet = !json[QString("administratorAccountId")].isNull() && m_administrator_account_id_isValid;

    m_invitation_id_isValid = ::OpenAPI::fromJsonValue(m_invitation_id, json[QString("invitationId")]);
    m_invitation_id_isSet = !json[QString("invitationId")].isNull() && m_invitation_id_isValid;

    m_master_account_isValid = ::OpenAPI::fromJsonValue(m_master_account, json[QString("masterAccount")]);
    m_master_account_isSet = !json[QString("masterAccount")].isNull() && m_master_account_isValid;
}

QString OAIAcceptInvitationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptInvitationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_administrator_account_id_isSet) {
        obj.insert(QString("administratorAccountId"), ::OpenAPI::toJsonValue(m_administrator_account_id));
    }
    if (m_invitation_id_isSet) {
        obj.insert(QString("invitationId"), ::OpenAPI::toJsonValue(m_invitation_id));
    }
    if (m_master_account_isSet) {
        obj.insert(QString("masterAccount"), ::OpenAPI::toJsonValue(m_master_account));
    }
    return obj;
}

QString OAIAcceptInvitationRequest::getAdministratorAccountId() const {
    return m_administrator_account_id;
}
void OAIAcceptInvitationRequest::setAdministratorAccountId(const QString &administrator_account_id) {
    m_administrator_account_id = administrator_account_id;
    m_administrator_account_id_isSet = true;
}

bool OAIAcceptInvitationRequest::is_administrator_account_id_Set() const{
    return m_administrator_account_id_isSet;
}

bool OAIAcceptInvitationRequest::is_administrator_account_id_Valid() const{
    return m_administrator_account_id_isValid;
}

QString OAIAcceptInvitationRequest::getInvitationId() const {
    return m_invitation_id;
}
void OAIAcceptInvitationRequest::setInvitationId(const QString &invitation_id) {
    m_invitation_id = invitation_id;
    m_invitation_id_isSet = true;
}

bool OAIAcceptInvitationRequest::is_invitation_id_Set() const{
    return m_invitation_id_isSet;
}

bool OAIAcceptInvitationRequest::is_invitation_id_Valid() const{
    return m_invitation_id_isValid;
}

QString OAIAcceptInvitationRequest::getMasterAccount() const {
    return m_master_account;
}
void OAIAcceptInvitationRequest::setMasterAccount(const QString &master_account) {
    m_master_account = master_account;
    m_master_account_isSet = true;
}

bool OAIAcceptInvitationRequest::is_master_account_Set() const{
    return m_master_account_isSet;
}

bool OAIAcceptInvitationRequest::is_master_account_Valid() const{
    return m_master_account_isValid;
}

bool OAIAcceptInvitationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_administrator_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invitation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_master_account_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptInvitationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_invitation_id_isValid && true;
}

} // namespace OpenAPI
