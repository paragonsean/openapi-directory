/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchResourcesCriteria_tagCriterion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchResourcesCriteria_tagCriterion::OAISearchResourcesCriteria_tagCriterion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchResourcesCriteria_tagCriterion::OAISearchResourcesCriteria_tagCriterion() {
    this->initializeModel();
}

OAISearchResourcesCriteria_tagCriterion::~OAISearchResourcesCriteria_tagCriterion() {}

void OAISearchResourcesCriteria_tagCriterion::initializeModel() {

    m_comparator_isSet = false;
    m_comparator_isValid = false;

    m_tag_values_isSet = false;
    m_tag_values_isValid = false;
}

void OAISearchResourcesCriteria_tagCriterion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchResourcesCriteria_tagCriterion::fromJsonObject(QJsonObject json) {

    m_comparator_isValid = ::OpenAPI::fromJsonValue(m_comparator, json[QString("comparator")]);
    m_comparator_isSet = !json[QString("comparator")].isNull() && m_comparator_isValid;

    m_tag_values_isValid = ::OpenAPI::fromJsonValue(m_tag_values, json[QString("tagValues")]);
    m_tag_values_isSet = !json[QString("tagValues")].isNull() && m_tag_values_isValid;
}

QString OAISearchResourcesCriteria_tagCriterion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchResourcesCriteria_tagCriterion::asJsonObject() const {
    QJsonObject obj;
    if (m_comparator.isSet()) {
        obj.insert(QString("comparator"), ::OpenAPI::toJsonValue(m_comparator));
    }
    if (m_tag_values.isSet()) {
        obj.insert(QString("tagValues"), ::OpenAPI::toJsonValue(m_tag_values));
    }
    return obj;
}

OAISearchResourcesComparator OAISearchResourcesCriteria_tagCriterion::getComparator() const {
    return m_comparator;
}
void OAISearchResourcesCriteria_tagCriterion::setComparator(const OAISearchResourcesComparator &comparator) {
    m_comparator = comparator;
    m_comparator_isSet = true;
}

bool OAISearchResourcesCriteria_tagCriterion::is_comparator_Set() const{
    return m_comparator_isSet;
}

bool OAISearchResourcesCriteria_tagCriterion::is_comparator_Valid() const{
    return m_comparator_isValid;
}

QList OAISearchResourcesCriteria_tagCriterion::getTagValues() const {
    return m_tag_values;
}
void OAISearchResourcesCriteria_tagCriterion::setTagValues(const QList &tag_values) {
    m_tag_values = tag_values;
    m_tag_values_isSet = true;
}

bool OAISearchResourcesCriteria_tagCriterion::is_tag_values_Set() const{
    return m_tag_values_isSet;
}

bool OAISearchResourcesCriteria_tagCriterion::is_tag_values_Valid() const{
    return m_tag_values_isValid;
}

bool OAISearchResourcesCriteria_tagCriterion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comparator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchResourcesCriteria_tagCriterion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
