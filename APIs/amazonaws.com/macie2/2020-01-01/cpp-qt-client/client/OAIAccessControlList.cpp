/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessControlList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessControlList::OAIAccessControlList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessControlList::OAIAccessControlList() {
    this->initializeModel();
}

OAIAccessControlList::~OAIAccessControlList() {}

void OAIAccessControlList::initializeModel() {

    m_allows_public_read_access_isSet = false;
    m_allows_public_read_access_isValid = false;

    m_allows_public_write_access_isSet = false;
    m_allows_public_write_access_isValid = false;
}

void OAIAccessControlList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessControlList::fromJsonObject(QJsonObject json) {

    m_allows_public_read_access_isValid = ::OpenAPI::fromJsonValue(m_allows_public_read_access, json[QString("allowsPublicReadAccess")]);
    m_allows_public_read_access_isSet = !json[QString("allowsPublicReadAccess")].isNull() && m_allows_public_read_access_isValid;

    m_allows_public_write_access_isValid = ::OpenAPI::fromJsonValue(m_allows_public_write_access, json[QString("allowsPublicWriteAccess")]);
    m_allows_public_write_access_isSet = !json[QString("allowsPublicWriteAccess")].isNull() && m_allows_public_write_access_isValid;
}

QString OAIAccessControlList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessControlList::asJsonObject() const {
    QJsonObject obj;
    if (m_allows_public_read_access_isSet) {
        obj.insert(QString("allowsPublicReadAccess"), ::OpenAPI::toJsonValue(m_allows_public_read_access));
    }
    if (m_allows_public_write_access_isSet) {
        obj.insert(QString("allowsPublicWriteAccess"), ::OpenAPI::toJsonValue(m_allows_public_write_access));
    }
    return obj;
}

bool OAIAccessControlList::getAllowsPublicReadAccess() const {
    return m_allows_public_read_access;
}
void OAIAccessControlList::setAllowsPublicReadAccess(const bool &allows_public_read_access) {
    m_allows_public_read_access = allows_public_read_access;
    m_allows_public_read_access_isSet = true;
}

bool OAIAccessControlList::is_allows_public_read_access_Set() const{
    return m_allows_public_read_access_isSet;
}

bool OAIAccessControlList::is_allows_public_read_access_Valid() const{
    return m_allows_public_read_access_isValid;
}

bool OAIAccessControlList::getAllowsPublicWriteAccess() const {
    return m_allows_public_write_access;
}
void OAIAccessControlList::setAllowsPublicWriteAccess(const bool &allows_public_write_access) {
    m_allows_public_write_access = allows_public_write_access;
    m_allows_public_write_access_isSet = true;
}

bool OAIAccessControlList::is_allows_public_write_access_Set() const{
    return m_allows_public_write_access_isSet;
}

bool OAIAccessControlList::is_allows_public_write_access_Valid() const{
    return m_allows_public_write_access_isValid;
}

bool OAIAccessControlList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allows_public_read_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allows_public_write_access_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessControlList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
