/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3Object from './S3Object';
import S3ObjectServerSideEncryption from './S3ObjectServerSideEncryption';
import StorageClass from './StorageClass';

/**
 * The ResourcesAffectedS3Object model module.
 * @module model/ResourcesAffectedS3Object
 * @version 2020-01-01
 */
class ResourcesAffectedS3Object {
    /**
     * Constructs a new <code>ResourcesAffectedS3Object</code>.
     * @alias module:model/ResourcesAffectedS3Object
     * @implements module:model/S3Object
     */
    constructor() { 
        S3Object.initialize(this);
        ResourcesAffectedS3Object.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourcesAffectedS3Object</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourcesAffectedS3Object} obj Optional instance to populate.
     * @return {module:model/ResourcesAffectedS3Object} The populated <code>ResourcesAffectedS3Object</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourcesAffectedS3Object();
            S3Object.constructFromObject(data, obj);

            if (data.hasOwnProperty('bucketArn')) {
                obj['bucketArn'] = ApiClient.convertToType(data['bucketArn'], 'String');
            }
            if (data.hasOwnProperty('eTag')) {
                obj['eTag'] = ApiClient.convertToType(data['eTag'], 'String');
            }
            if (data.hasOwnProperty('extension')) {
                obj['extension'] = ApiClient.convertToType(data['extension'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('publicAccess')) {
                obj['publicAccess'] = ApiClient.convertToType(data['publicAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('serverSideEncryption')) {
                obj['serverSideEncryption'] = S3ObjectServerSideEncryption.constructFromObject(data['serverSideEncryption']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('storageClass')) {
                obj['storageClass'] = ApiClient.convertToType(data['storageClass'], StorageClass);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Array);
            }
            if (data.hasOwnProperty('versionId')) {
                obj['versionId'] = ApiClient.convertToType(data['versionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourcesAffectedS3Object</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourcesAffectedS3Object</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bucketArn`
        if (data['bucketArn']) { // data not null
          String.validateJSON(data['bucketArn']);
        }
        // validate the optional field `eTag`
        if (data['eTag']) { // data not null
          String.validateJSON(data['eTag']);
        }
        // validate the optional field `extension`
        if (data['extension']) { // data not null
          String.validateJSON(data['extension']);
        }
        // validate the optional field `key`
        if (data['key']) { // data not null
          String.validateJSON(data['key']);
        }
        // validate the optional field `lastModified`
        if (data['lastModified']) { // data not null
          Date.validateJSON(data['lastModified']);
        }
        // validate the optional field `path`
        if (data['path']) { // data not null
          String.validateJSON(data['path']);
        }
        // validate the optional field `publicAccess`
        if (data['publicAccess']) { // data not null
          Boolean.validateJSON(data['publicAccess']);
        }
        // validate the optional field `serverSideEncryption`
        if (data['serverSideEncryption']) { // data not null
          S3ObjectServerSideEncryption.validateJSON(data['serverSideEncryption']);
        }
        // validate the optional field `size`
        if (data['size']) { // data not null
          Number.validateJSON(data['size']);
        }
        // validate the optional field `storageClass`
        if (data['storageClass']) { // data not null
          StorageClass.validateJSON(data['storageClass']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Array.validateJSON(data['tags']);
        }
        // validate the optional field `versionId`
        if (data['versionId']) { // data not null
          String.validateJSON(data['versionId']);
        }

        return true;
    }


}



/**
 * @member {String} bucketArn
 */
ResourcesAffectedS3Object.prototype['bucketArn'] = undefined;

/**
 * @member {String} eTag
 */
ResourcesAffectedS3Object.prototype['eTag'] = undefined;

/**
 * @member {String} extension
 */
ResourcesAffectedS3Object.prototype['extension'] = undefined;

/**
 * @member {String} key
 */
ResourcesAffectedS3Object.prototype['key'] = undefined;

/**
 * @member {Date} lastModified
 */
ResourcesAffectedS3Object.prototype['lastModified'] = undefined;

/**
 * @member {String} path
 */
ResourcesAffectedS3Object.prototype['path'] = undefined;

/**
 * @member {Boolean} publicAccess
 */
ResourcesAffectedS3Object.prototype['publicAccess'] = undefined;

/**
 * @member {module:model/S3ObjectServerSideEncryption} serverSideEncryption
 */
ResourcesAffectedS3Object.prototype['serverSideEncryption'] = undefined;

/**
 * @member {Number} size
 */
ResourcesAffectedS3Object.prototype['size'] = undefined;

/**
 * @member {module:model/StorageClass} storageClass
 */
ResourcesAffectedS3Object.prototype['storageClass'] = undefined;

/**
 * @member {Array} tags
 */
ResourcesAffectedS3Object.prototype['tags'] = undefined;

/**
 * @member {String} versionId
 */
ResourcesAffectedS3Object.prototype['versionId'] = undefined;


// Implement S3Object interface:
/**
 * @member {String} bucketArn
 */
S3Object.prototype['bucketArn'] = undefined;
/**
 * @member {String} eTag
 */
S3Object.prototype['eTag'] = undefined;
/**
 * @member {String} extension
 */
S3Object.prototype['extension'] = undefined;
/**
 * @member {String} key
 */
S3Object.prototype['key'] = undefined;
/**
 * @member {Date} lastModified
 */
S3Object.prototype['lastModified'] = undefined;
/**
 * @member {String} path
 */
S3Object.prototype['path'] = undefined;
/**
 * @member {Boolean} publicAccess
 */
S3Object.prototype['publicAccess'] = undefined;
/**
 * @member {module:model/S3ObjectServerSideEncryption} serverSideEncryption
 */
S3Object.prototype['serverSideEncryption'] = undefined;
/**
 * @member {Number} size
 */
S3Object.prototype['size'] = undefined;
/**
 * @member {module:model/StorageClass} storageClass
 */
S3Object.prototype['storageClass'] = undefined;
/**
 * @member {Array} tags
 */
S3Object.prototype['tags'] = undefined;
/**
 * @member {String} versionId
 */
S3Object.prototype['versionId'] = undefined;




export default ResourcesAffectedS3Object;

