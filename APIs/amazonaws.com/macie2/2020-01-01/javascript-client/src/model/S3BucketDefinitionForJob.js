/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3BucketDefinitionForJob model module.
 * @module model/S3BucketDefinitionForJob
 * @version 2020-01-01
 */
class S3BucketDefinitionForJob {
    /**
     * Constructs a new <code>S3BucketDefinitionForJob</code>.
     * Specifies an Amazon Web Services account that owns S3 buckets for a classification job to analyze, and one or more specific buckets to analyze for that account.
     * @alias module:model/S3BucketDefinitionForJob
     * @param accountId {String} 
     * @param buckets {Array} 
     */
    constructor(accountId, buckets) { 
        
        S3BucketDefinitionForJob.initialize(this, accountId, buckets);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, buckets) { 
        obj['accountId'] = accountId;
        obj['buckets'] = buckets;
    }

    /**
     * Constructs a <code>S3BucketDefinitionForJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3BucketDefinitionForJob} obj Optional instance to populate.
     * @return {module:model/S3BucketDefinitionForJob} The populated <code>S3BucketDefinitionForJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3BucketDefinitionForJob();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('buckets')) {
                obj['buckets'] = ApiClient.convertToType(data['buckets'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3BucketDefinitionForJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3BucketDefinitionForJob</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of S3BucketDefinitionForJob.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `accountId`
        if (data['accountId']) { // data not null
          String.validateJSON(data['accountId']);
        }
        // validate the optional field `buckets`
        if (data['buckets']) { // data not null
          Array.validateJSON(data['buckets']);
        }

        return true;
    }


}

S3BucketDefinitionForJob.RequiredProperties = ["accountId", "buckets"];

/**
 * @member {String} accountId
 */
S3BucketDefinitionForJob.prototype['accountId'] = undefined;

/**
 * @member {Array} buckets
 */
S3BucketDefinitionForJob.prototype['buckets'] = undefined;






export default S3BucketDefinitionForJob;

