/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssumedRoleSessionContext from './AssumedRoleSessionContext';

/**
 * The AssumedRole model module.
 * @module model/AssumedRole
 * @version 2020-01-01
 */
class AssumedRole {
    /**
     * Constructs a new <code>AssumedRole</code>.
     * Provides information about an identity that performed an action on an affected resource by using temporary security credentials. The credentials were obtained using the AssumeRole operation of the Security Token Service (STS) API.
     * @alias module:model/AssumedRole
     */
    constructor() { 
        
        AssumedRole.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssumedRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssumedRole} obj Optional instance to populate.
     * @return {module:model/AssumedRole} The populated <code>AssumedRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssumedRole();

            if (data.hasOwnProperty('accessKeyId')) {
                obj['accessKeyId'] = ApiClient.convertToType(data['accessKeyId'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('principalId')) {
                obj['principalId'] = ApiClient.convertToType(data['principalId'], 'String');
            }
            if (data.hasOwnProperty('sessionContext')) {
                obj['sessionContext'] = AssumedRoleSessionContext.constructFromObject(data['sessionContext']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssumedRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssumedRole</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessKeyId`
        if (data['accessKeyId']) { // data not null
          String.validateJSON(data['accessKeyId']);
        }
        // validate the optional field `accountId`
        if (data['accountId']) { // data not null
          String.validateJSON(data['accountId']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `principalId`
        if (data['principalId']) { // data not null
          String.validateJSON(data['principalId']);
        }
        // validate the optional field `sessionContext`
        if (data['sessionContext']) { // data not null
          AssumedRoleSessionContext.validateJSON(data['sessionContext']);
        }

        return true;
    }


}



/**
 * @member {String} accessKeyId
 */
AssumedRole.prototype['accessKeyId'] = undefined;

/**
 * @member {String} accountId
 */
AssumedRole.prototype['accountId'] = undefined;

/**
 * @member {String} arn
 */
AssumedRole.prototype['arn'] = undefined;

/**
 * @member {String} principalId
 */
AssumedRole.prototype['principalId'] = undefined;

/**
 * @member {module:model/AssumedRoleSessionContext} sessionContext
 */
AssumedRole.prototype['sessionContext'] = undefined;






export default AssumedRole;

