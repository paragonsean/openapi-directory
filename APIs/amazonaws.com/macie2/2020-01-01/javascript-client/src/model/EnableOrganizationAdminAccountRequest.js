/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnableOrganizationAdminAccountRequest model module.
 * @module model/EnableOrganizationAdminAccountRequest
 * @version 2020-01-01
 */
class EnableOrganizationAdminAccountRequest {
    /**
     * Constructs a new <code>EnableOrganizationAdminAccountRequest</code>.
     * @alias module:model/EnableOrganizationAdminAccountRequest
     * @param adminAccountId {String} The Amazon Web Services account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
     */
    constructor(adminAccountId) { 
        
        EnableOrganizationAdminAccountRequest.initialize(this, adminAccountId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adminAccountId) { 
        obj['adminAccountId'] = adminAccountId;
    }

    /**
     * Constructs a <code>EnableOrganizationAdminAccountRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnableOrganizationAdminAccountRequest} obj Optional instance to populate.
     * @return {module:model/EnableOrganizationAdminAccountRequest} The populated <code>EnableOrganizationAdminAccountRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnableOrganizationAdminAccountRequest();

            if (data.hasOwnProperty('adminAccountId')) {
                obj['adminAccountId'] = ApiClient.convertToType(data['adminAccountId'], 'String');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnableOrganizationAdminAccountRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnableOrganizationAdminAccountRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnableOrganizationAdminAccountRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['adminAccountId'] && !(typeof data['adminAccountId'] === 'string' || data['adminAccountId'] instanceof String)) {
            throw new Error("Expected the field `adminAccountId` to be a primitive type in the JSON string but got " + data['adminAccountId']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

EnableOrganizationAdminAccountRequest.RequiredProperties = ["adminAccountId"];

/**
 * The Amazon Web Services account ID for the account to designate as the delegated Amazon Macie administrator account for the organization.
 * @member {String} adminAccountId
 */
EnableOrganizationAdminAccountRequest.prototype['adminAccountId'] = undefined;

/**
 * A unique, case-sensitive token that you provide to ensure the idempotency of the request.
 * @member {String} clientToken
 */
EnableOrganizationAdminAccountRequest.prototype['clientToken'] = undefined;






export default EnableOrganizationAdminAccountRequest;

