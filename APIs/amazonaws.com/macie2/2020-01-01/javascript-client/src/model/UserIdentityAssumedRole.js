/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssumedRole from './AssumedRole';
import AssumedRoleSessionContext from './AssumedRoleSessionContext';

/**
 * The UserIdentityAssumedRole model module.
 * @module model/UserIdentityAssumedRole
 * @version 2020-01-01
 */
class UserIdentityAssumedRole {
    /**
     * Constructs a new <code>UserIdentityAssumedRole</code>.
     * @alias module:model/UserIdentityAssumedRole
     * @implements module:model/AssumedRole
     */
    constructor() { 
        AssumedRole.initialize(this);
        UserIdentityAssumedRole.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserIdentityAssumedRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserIdentityAssumedRole} obj Optional instance to populate.
     * @return {module:model/UserIdentityAssumedRole} The populated <code>UserIdentityAssumedRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserIdentityAssumedRole();
            AssumedRole.constructFromObject(data, obj);

            if (data.hasOwnProperty('accessKeyId')) {
                obj['accessKeyId'] = ApiClient.convertToType(data['accessKeyId'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('principalId')) {
                obj['principalId'] = ApiClient.convertToType(data['principalId'], 'String');
            }
            if (data.hasOwnProperty('sessionContext')) {
                obj['sessionContext'] = AssumedRoleSessionContext.constructFromObject(data['sessionContext']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserIdentityAssumedRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserIdentityAssumedRole</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accessKeyId`
        if (data['accessKeyId']) { // data not null
          String.validateJSON(data['accessKeyId']);
        }
        // validate the optional field `accountId`
        if (data['accountId']) { // data not null
          String.validateJSON(data['accountId']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `principalId`
        if (data['principalId']) { // data not null
          String.validateJSON(data['principalId']);
        }
        // validate the optional field `sessionContext`
        if (data['sessionContext']) { // data not null
          AssumedRoleSessionContext.validateJSON(data['sessionContext']);
        }

        return true;
    }


}



/**
 * @member {String} accessKeyId
 */
UserIdentityAssumedRole.prototype['accessKeyId'] = undefined;

/**
 * @member {String} accountId
 */
UserIdentityAssumedRole.prototype['accountId'] = undefined;

/**
 * @member {String} arn
 */
UserIdentityAssumedRole.prototype['arn'] = undefined;

/**
 * @member {String} principalId
 */
UserIdentityAssumedRole.prototype['principalId'] = undefined;

/**
 * @member {module:model/AssumedRoleSessionContext} sessionContext
 */
UserIdentityAssumedRole.prototype['sessionContext'] = undefined;


// Implement AssumedRole interface:
/**
 * @member {String} accessKeyId
 */
AssumedRole.prototype['accessKeyId'] = undefined;
/**
 * @member {String} accountId
 */
AssumedRole.prototype['accountId'] = undefined;
/**
 * @member {String} arn
 */
AssumedRole.prototype['arn'] = undefined;
/**
 * @member {String} principalId
 */
AssumedRole.prototype['principalId'] = undefined;
/**
 * @member {module:model/AssumedRoleSessionContext} sessionContext
 */
AssumedRole.prototype['sessionContext'] = undefined;




export default UserIdentityAssumedRole;

