/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeClassificationJobResponseLastRunErrorStatus from './DescribeClassificationJobResponseLastRunErrorStatus';
import DescribeClassificationJobResponseS3JobDefinition from './DescribeClassificationJobResponseS3JobDefinition';
import DescribeClassificationJobResponseScheduleFrequency from './DescribeClassificationJobResponseScheduleFrequency';
import DescribeClassificationJobResponseStatistics from './DescribeClassificationJobResponseStatistics';
import DescribeClassificationJobResponseUserPausedDetails from './DescribeClassificationJobResponseUserPausedDetails';
import JobStatus from './JobStatus';
import JobType from './JobType';
import ManagedDataIdentifierSelector from './ManagedDataIdentifierSelector';

/**
 * The DescribeClassificationJobResponse model module.
 * @module model/DescribeClassificationJobResponse
 * @version 2020-01-01
 */
class DescribeClassificationJobResponse {
    /**
     * Constructs a new <code>DescribeClassificationJobResponse</code>.
     * @alias module:model/DescribeClassificationJobResponse
     */
    constructor() { 
        
        DescribeClassificationJobResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeClassificationJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeClassificationJobResponse} obj Optional instance to populate.
     * @return {module:model/DescribeClassificationJobResponse} The populated <code>DescribeClassificationJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeClassificationJobResponse();

            if (data.hasOwnProperty('allowListIds')) {
                obj['allowListIds'] = ApiClient.convertToType(data['allowListIds'], Array);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('customDataIdentifierIds')) {
                obj['customDataIdentifierIds'] = ApiClient.convertToType(data['customDataIdentifierIds'], Array);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('initialRun')) {
                obj['initialRun'] = ApiClient.convertToType(data['initialRun'], 'Boolean');
            }
            if (data.hasOwnProperty('jobArn')) {
                obj['jobArn'] = ApiClient.convertToType(data['jobArn'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
            if (data.hasOwnProperty('jobStatus')) {
                obj['jobStatus'] = ApiClient.convertToType(data['jobStatus'], JobStatus);
            }
            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], JobType);
            }
            if (data.hasOwnProperty('lastRunErrorStatus')) {
                obj['lastRunErrorStatus'] = DescribeClassificationJobResponseLastRunErrorStatus.constructFromObject(data['lastRunErrorStatus']);
            }
            if (data.hasOwnProperty('lastRunTime')) {
                obj['lastRunTime'] = ApiClient.convertToType(data['lastRunTime'], 'Date');
            }
            if (data.hasOwnProperty('managedDataIdentifierIds')) {
                obj['managedDataIdentifierIds'] = ApiClient.convertToType(data['managedDataIdentifierIds'], Array);
            }
            if (data.hasOwnProperty('managedDataIdentifierSelector')) {
                obj['managedDataIdentifierSelector'] = ApiClient.convertToType(data['managedDataIdentifierSelector'], ManagedDataIdentifierSelector);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('s3JobDefinition')) {
                obj['s3JobDefinition'] = DescribeClassificationJobResponseS3JobDefinition.constructFromObject(data['s3JobDefinition']);
            }
            if (data.hasOwnProperty('samplingPercentage')) {
                obj['samplingPercentage'] = ApiClient.convertToType(data['samplingPercentage'], 'Number');
            }
            if (data.hasOwnProperty('scheduleFrequency')) {
                obj['scheduleFrequency'] = DescribeClassificationJobResponseScheduleFrequency.constructFromObject(data['scheduleFrequency']);
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = DescribeClassificationJobResponseStatistics.constructFromObject(data['statistics']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('userPausedDetails')) {
                obj['userPausedDetails'] = DescribeClassificationJobResponseUserPausedDetails.constructFromObject(data['userPausedDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeClassificationJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeClassificationJobResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `allowListIds`
        if (data['allowListIds']) { // data not null
          Array.validateJSON(data['allowListIds']);
        }
        // validate the optional field `clientToken`
        if (data['clientToken']) { // data not null
          String.validateJSON(data['clientToken']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `customDataIdentifierIds`
        if (data['customDataIdentifierIds']) { // data not null
          Array.validateJSON(data['customDataIdentifierIds']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `initialRun`
        if (data['initialRun']) { // data not null
          Boolean.validateJSON(data['initialRun']);
        }
        // validate the optional field `jobArn`
        if (data['jobArn']) { // data not null
          String.validateJSON(data['jobArn']);
        }
        // validate the optional field `jobId`
        if (data['jobId']) { // data not null
          String.validateJSON(data['jobId']);
        }
        // validate the optional field `jobStatus`
        if (data['jobStatus']) { // data not null
          JobStatus.validateJSON(data['jobStatus']);
        }
        // validate the optional field `jobType`
        if (data['jobType']) { // data not null
          JobType.validateJSON(data['jobType']);
        }
        // validate the optional field `lastRunErrorStatus`
        if (data['lastRunErrorStatus']) { // data not null
          DescribeClassificationJobResponseLastRunErrorStatus.validateJSON(data['lastRunErrorStatus']);
        }
        // validate the optional field `lastRunTime`
        if (data['lastRunTime']) { // data not null
          Date.validateJSON(data['lastRunTime']);
        }
        // validate the optional field `managedDataIdentifierIds`
        if (data['managedDataIdentifierIds']) { // data not null
          Array.validateJSON(data['managedDataIdentifierIds']);
        }
        // validate the optional field `managedDataIdentifierSelector`
        if (data['managedDataIdentifierSelector']) { // data not null
          ManagedDataIdentifierSelector.validateJSON(data['managedDataIdentifierSelector']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `s3JobDefinition`
        if (data['s3JobDefinition']) { // data not null
          DescribeClassificationJobResponseS3JobDefinition.validateJSON(data['s3JobDefinition']);
        }
        // validate the optional field `samplingPercentage`
        if (data['samplingPercentage']) { // data not null
          Number.validateJSON(data['samplingPercentage']);
        }
        // validate the optional field `scheduleFrequency`
        if (data['scheduleFrequency']) { // data not null
          DescribeClassificationJobResponseScheduleFrequency.validateJSON(data['scheduleFrequency']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          DescribeClassificationJobResponseStatistics.validateJSON(data['statistics']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `userPausedDetails`
        if (data['userPausedDetails']) { // data not null
          DescribeClassificationJobResponseUserPausedDetails.validateJSON(data['userPausedDetails']);
        }

        return true;
    }


}



/**
 * @member {Array} allowListIds
 */
DescribeClassificationJobResponse.prototype['allowListIds'] = undefined;

/**
 * @member {String} clientToken
 */
DescribeClassificationJobResponse.prototype['clientToken'] = undefined;

/**
 * @member {Date} createdAt
 */
DescribeClassificationJobResponse.prototype['createdAt'] = undefined;

/**
 * @member {Array} customDataIdentifierIds
 */
DescribeClassificationJobResponse.prototype['customDataIdentifierIds'] = undefined;

/**
 * @member {String} description
 */
DescribeClassificationJobResponse.prototype['description'] = undefined;

/**
 * @member {Boolean} initialRun
 */
DescribeClassificationJobResponse.prototype['initialRun'] = undefined;

/**
 * @member {String} jobArn
 */
DescribeClassificationJobResponse.prototype['jobArn'] = undefined;

/**
 * @member {String} jobId
 */
DescribeClassificationJobResponse.prototype['jobId'] = undefined;

/**
 * @member {module:model/JobStatus} jobStatus
 */
DescribeClassificationJobResponse.prototype['jobStatus'] = undefined;

/**
 * @member {module:model/JobType} jobType
 */
DescribeClassificationJobResponse.prototype['jobType'] = undefined;

/**
 * @member {module:model/DescribeClassificationJobResponseLastRunErrorStatus} lastRunErrorStatus
 */
DescribeClassificationJobResponse.prototype['lastRunErrorStatus'] = undefined;

/**
 * @member {Date} lastRunTime
 */
DescribeClassificationJobResponse.prototype['lastRunTime'] = undefined;

/**
 * @member {Array} managedDataIdentifierIds
 */
DescribeClassificationJobResponse.prototype['managedDataIdentifierIds'] = undefined;

/**
 * @member {module:model/ManagedDataIdentifierSelector} managedDataIdentifierSelector
 */
DescribeClassificationJobResponse.prototype['managedDataIdentifierSelector'] = undefined;

/**
 * @member {String} name
 */
DescribeClassificationJobResponse.prototype['name'] = undefined;

/**
 * @member {module:model/DescribeClassificationJobResponseS3JobDefinition} s3JobDefinition
 */
DescribeClassificationJobResponse.prototype['s3JobDefinition'] = undefined;

/**
 * @member {Number} samplingPercentage
 */
DescribeClassificationJobResponse.prototype['samplingPercentage'] = undefined;

/**
 * @member {module:model/DescribeClassificationJobResponseScheduleFrequency} scheduleFrequency
 */
DescribeClassificationJobResponse.prototype['scheduleFrequency'] = undefined;

/**
 * @member {module:model/DescribeClassificationJobResponseStatistics} statistics
 */
DescribeClassificationJobResponse.prototype['statistics'] = undefined;

/**
 * @member {Object} tags
 */
DescribeClassificationJobResponse.prototype['tags'] = undefined;

/**
 * @member {module:model/DescribeClassificationJobResponseUserPausedDetails} userPausedDetails
 */
DescribeClassificationJobResponse.prototype['userPausedDetails'] = undefined;






export default DescribeClassificationJobResponse;

