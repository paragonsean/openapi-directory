/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AcceptInvitationRequest model module.
 * @module model/AcceptInvitationRequest
 * @version 2020-01-01
 */
class AcceptInvitationRequest {
    /**
     * Constructs a new <code>AcceptInvitationRequest</code>.
     * @alias module:model/AcceptInvitationRequest
     * @param invitationId {String} The unique identifier for the invitation to accept.
     */
    constructor(invitationId) { 
        
        AcceptInvitationRequest.initialize(this, invitationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, invitationId) { 
        obj['invitationId'] = invitationId;
    }

    /**
     * Constructs a <code>AcceptInvitationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcceptInvitationRequest} obj Optional instance to populate.
     * @return {module:model/AcceptInvitationRequest} The populated <code>AcceptInvitationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcceptInvitationRequest();

            if (data.hasOwnProperty('administratorAccountId')) {
                obj['administratorAccountId'] = ApiClient.convertToType(data['administratorAccountId'], 'String');
            }
            if (data.hasOwnProperty('invitationId')) {
                obj['invitationId'] = ApiClient.convertToType(data['invitationId'], 'String');
            }
            if (data.hasOwnProperty('masterAccount')) {
                obj['masterAccount'] = ApiClient.convertToType(data['masterAccount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcceptInvitationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcceptInvitationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AcceptInvitationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['administratorAccountId'] && !(typeof data['administratorAccountId'] === 'string' || data['administratorAccountId'] instanceof String)) {
            throw new Error("Expected the field `administratorAccountId` to be a primitive type in the JSON string but got " + data['administratorAccountId']);
        }
        // ensure the json data is a string
        if (data['invitationId'] && !(typeof data['invitationId'] === 'string' || data['invitationId'] instanceof String)) {
            throw new Error("Expected the field `invitationId` to be a primitive type in the JSON string but got " + data['invitationId']);
        }
        // ensure the json data is a string
        if (data['masterAccount'] && !(typeof data['masterAccount'] === 'string' || data['masterAccount'] instanceof String)) {
            throw new Error("Expected the field `masterAccount` to be a primitive type in the JSON string but got " + data['masterAccount']);
        }

        return true;
    }


}

AcceptInvitationRequest.RequiredProperties = ["invitationId"];

/**
 * The Amazon Web Services account ID for the account that sent the invitation.
 * @member {String} administratorAccountId
 */
AcceptInvitationRequest.prototype['administratorAccountId'] = undefined;

/**
 * The unique identifier for the invitation to accept.
 * @member {String} invitationId
 */
AcceptInvitationRequest.prototype['invitationId'] = undefined;

/**
 * (Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.
 * @member {String} masterAccount
 */
AcceptInvitationRequest.prototype['masterAccount'] = undefined;






export default AcceptInvitationRequest;

