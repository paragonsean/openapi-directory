/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFindingsFilterRequestFindingCriteria from './CreateFindingsFilterRequestFindingCriteria';
import GetFindingStatisticsRequestSortCriteria from './GetFindingStatisticsRequestSortCriteria';

/**
 * The GetFindingStatisticsRequest model module.
 * @module model/GetFindingStatisticsRequest
 * @version 2020-01-01
 */
class GetFindingStatisticsRequest {
    /**
     * Constructs a new <code>GetFindingStatisticsRequest</code>.
     * @alias module:model/GetFindingStatisticsRequest
     * @param groupBy {module:model/GetFindingStatisticsRequest.GroupByEnum} <p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>
     */
    constructor(groupBy) { 
        
        GetFindingStatisticsRequest.initialize(this, groupBy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groupBy) { 
        obj['groupBy'] = groupBy;
    }

    /**
     * Constructs a <code>GetFindingStatisticsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetFindingStatisticsRequest} obj Optional instance to populate.
     * @return {module:model/GetFindingStatisticsRequest} The populated <code>GetFindingStatisticsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetFindingStatisticsRequest();

            if (data.hasOwnProperty('findingCriteria')) {
                obj['findingCriteria'] = CreateFindingsFilterRequestFindingCriteria.constructFromObject(data['findingCriteria']);
            }
            if (data.hasOwnProperty('groupBy')) {
                obj['groupBy'] = ApiClient.convertToType(data['groupBy'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('sortCriteria')) {
                obj['sortCriteria'] = GetFindingStatisticsRequestSortCriteria.constructFromObject(data['sortCriteria']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetFindingStatisticsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetFindingStatisticsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetFindingStatisticsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `findingCriteria`
        if (data['findingCriteria']) { // data not null
          CreateFindingsFilterRequestFindingCriteria.validateJSON(data['findingCriteria']);
        }
        // ensure the json data is a string
        if (data['groupBy'] && !(typeof data['groupBy'] === 'string' || data['groupBy'] instanceof String)) {
            throw new Error("Expected the field `groupBy` to be a primitive type in the JSON string but got " + data['groupBy']);
        }
        // validate the optional field `sortCriteria`
        if (data['sortCriteria']) { // data not null
          GetFindingStatisticsRequestSortCriteria.validateJSON(data['sortCriteria']);
        }

        return true;
    }


}

GetFindingStatisticsRequest.RequiredProperties = ["groupBy"];

/**
 * @member {module:model/CreateFindingsFilterRequestFindingCriteria} findingCriteria
 */
GetFindingStatisticsRequest.prototype['findingCriteria'] = undefined;

/**
 * <p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>
 * @member {module:model/GetFindingStatisticsRequest.GroupByEnum} groupBy
 */
GetFindingStatisticsRequest.prototype['groupBy'] = undefined;

/**
 * The maximum number of items to include in each page of the response.
 * @member {Number} size
 */
GetFindingStatisticsRequest.prototype['size'] = undefined;

/**
 * @member {module:model/GetFindingStatisticsRequestSortCriteria} sortCriteria
 */
GetFindingStatisticsRequest.prototype['sortCriteria'] = undefined;





/**
 * Allowed values for the <code>groupBy</code> property.
 * @enum {String}
 * @readonly
 */
GetFindingStatisticsRequest['GroupByEnum'] = {

    /**
     * value: "resourcesAffected.s3Bucket.name"
     * @const
     */
    "resourcesAffected.s3Bucket.name": "resourcesAffected.s3Bucket.name",

    /**
     * value: "type"
     * @const
     */
    "type": "type",

    /**
     * value: "classificationDetails.jobId"
     * @const
     */
    "classificationDetails.jobId": "classificationDetails.jobId",

    /**
     * value: "severity.description"
     * @const
     */
    "severity.description": "severity.description"
};



export default GetFindingStatisticsRequest;

