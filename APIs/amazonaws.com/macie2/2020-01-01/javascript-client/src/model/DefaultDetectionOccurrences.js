/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Occurrences from './Occurrences';

/**
 * The DefaultDetectionOccurrences model module.
 * @module model/DefaultDetectionOccurrences
 * @version 2020-01-01
 */
class DefaultDetectionOccurrences {
    /**
     * Constructs a new <code>DefaultDetectionOccurrences</code>.
     * @alias module:model/DefaultDetectionOccurrences
     * @implements module:model/Occurrences
     */
    constructor() { 
        Occurrences.initialize(this);
        DefaultDetectionOccurrences.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DefaultDetectionOccurrences</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DefaultDetectionOccurrences} obj Optional instance to populate.
     * @return {module:model/DefaultDetectionOccurrences} The populated <code>DefaultDetectionOccurrences</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DefaultDetectionOccurrences();
            Occurrences.constructFromObject(data, obj);

            if (data.hasOwnProperty('cells')) {
                obj['cells'] = ApiClient.convertToType(data['cells'], Array);
            }
            if (data.hasOwnProperty('lineRanges')) {
                obj['lineRanges'] = ApiClient.convertToType(data['lineRanges'], Array);
            }
            if (data.hasOwnProperty('offsetRanges')) {
                obj['offsetRanges'] = ApiClient.convertToType(data['offsetRanges'], Array);
            }
            if (data.hasOwnProperty('pages')) {
                obj['pages'] = ApiClient.convertToType(data['pages'], Array);
            }
            if (data.hasOwnProperty('records')) {
                obj['records'] = ApiClient.convertToType(data['records'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DefaultDetectionOccurrences</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DefaultDetectionOccurrences</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cells`
        if (data['cells']) { // data not null
          Array.validateJSON(data['cells']);
        }
        // validate the optional field `lineRanges`
        if (data['lineRanges']) { // data not null
          Array.validateJSON(data['lineRanges']);
        }
        // validate the optional field `offsetRanges`
        if (data['offsetRanges']) { // data not null
          Array.validateJSON(data['offsetRanges']);
        }
        // validate the optional field `pages`
        if (data['pages']) { // data not null
          Array.validateJSON(data['pages']);
        }
        // validate the optional field `records`
        if (data['records']) { // data not null
          Array.validateJSON(data['records']);
        }

        return true;
    }


}



/**
 * @member {Array} cells
 */
DefaultDetectionOccurrences.prototype['cells'] = undefined;

/**
 * @member {Array} lineRanges
 */
DefaultDetectionOccurrences.prototype['lineRanges'] = undefined;

/**
 * @member {Array} offsetRanges
 */
DefaultDetectionOccurrences.prototype['offsetRanges'] = undefined;

/**
 * @member {Array} pages
 */
DefaultDetectionOccurrences.prototype['pages'] = undefined;

/**
 * @member {Array} records
 */
DefaultDetectionOccurrences.prototype['records'] = undefined;


// Implement Occurrences interface:
/**
 * @member {Array} cells
 */
Occurrences.prototype['cells'] = undefined;
/**
 * @member {Array} lineRanges
 */
Occurrences.prototype['lineRanges'] = undefined;
/**
 * @member {Array} offsetRanges
 */
Occurrences.prototype['offsetRanges'] = undefined;
/**
 * @member {Array} pages
 */
Occurrences.prototype['pages'] = undefined;
/**
 * @member {Array} records
 */
Occurrences.prototype['records'] = undefined;




export default DefaultDetectionOccurrences;

