/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClassificationResultCustomDataIdentifiers from './ClassificationResultCustomDataIdentifiers';
import ClassificationResultStatus from './ClassificationResultStatus';

/**
 * The ClassificationResult model module.
 * @module model/ClassificationResult
 * @version 2020-01-01
 */
class ClassificationResult {
    /**
     * Constructs a new <code>ClassificationResult</code>.
     * Provides the details of a sensitive data finding, including the types, number of occurrences, and locations of the sensitive data that was detected.
     * @alias module:model/ClassificationResult
     */
    constructor() { 
        
        ClassificationResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClassificationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClassificationResult} obj Optional instance to populate.
     * @return {module:model/ClassificationResult} The populated <code>ClassificationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClassificationResult();

            if (data.hasOwnProperty('additionalOccurrences')) {
                obj['additionalOccurrences'] = ApiClient.convertToType(data['additionalOccurrences'], 'Boolean');
            }
            if (data.hasOwnProperty('customDataIdentifiers')) {
                obj['customDataIdentifiers'] = ClassificationResultCustomDataIdentifiers.constructFromObject(data['customDataIdentifiers']);
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
            if (data.hasOwnProperty('sensitiveData')) {
                obj['sensitiveData'] = ApiClient.convertToType(data['sensitiveData'], Array);
            }
            if (data.hasOwnProperty('sizeClassified')) {
                obj['sizeClassified'] = ApiClient.convertToType(data['sizeClassified'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ClassificationResultStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClassificationResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClassificationResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `additionalOccurrences`
        if (data['additionalOccurrences']) { // data not null
          Boolean.validateJSON(data['additionalOccurrences']);
        }
        // validate the optional field `customDataIdentifiers`
        if (data['customDataIdentifiers']) { // data not null
          ClassificationResultCustomDataIdentifiers.validateJSON(data['customDataIdentifiers']);
        }
        // validate the optional field `mimeType`
        if (data['mimeType']) { // data not null
          String.validateJSON(data['mimeType']);
        }
        // validate the optional field `sensitiveData`
        if (data['sensitiveData']) { // data not null
          Array.validateJSON(data['sensitiveData']);
        }
        // validate the optional field `sizeClassified`
        if (data['sizeClassified']) { // data not null
          Number.validateJSON(data['sizeClassified']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ClassificationResultStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {Boolean} additionalOccurrences
 */
ClassificationResult.prototype['additionalOccurrences'] = undefined;

/**
 * @member {module:model/ClassificationResultCustomDataIdentifiers} customDataIdentifiers
 */
ClassificationResult.prototype['customDataIdentifiers'] = undefined;

/**
 * @member {String} mimeType
 */
ClassificationResult.prototype['mimeType'] = undefined;

/**
 * @member {Array} sensitiveData
 */
ClassificationResult.prototype['sensitiveData'] = undefined;

/**
 * @member {Number} sizeClassified
 */
ClassificationResult.prototype['sizeClassified'] = undefined;

/**
 * @member {module:model/ClassificationResultStatus} status
 */
ClassificationResult.prototype['status'] = undefined;






export default ClassificationResult;

