/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateClassificationJobRequestS3JobDefinition from './CreateClassificationJobRequestS3JobDefinition';
import CreateClassificationJobRequestScheduleFrequency from './CreateClassificationJobRequestScheduleFrequency';

/**
 * The CreateClassificationJobRequest model module.
 * @module model/CreateClassificationJobRequest
 * @version 2020-01-01
 */
class CreateClassificationJobRequest {
    /**
     * Constructs a new <code>CreateClassificationJobRequest</code>.
     * @alias module:model/CreateClassificationJobRequest
     * @param clientToken {String} A unique, case-sensitive token that you provide to ensure the idempotency of the request.
     * @param jobType {module:model/CreateClassificationJobRequest.JobTypeEnum} The schedule for running a classification job. Valid values are:
     * @param name {String} A custom name for the job. The name can contain as many as 500 characters.
     * @param s3JobDefinition {module:model/CreateClassificationJobRequestS3JobDefinition} 
     */
    constructor(clientToken, jobType, name, s3JobDefinition) { 
        
        CreateClassificationJobRequest.initialize(this, clientToken, jobType, name, s3JobDefinition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientToken, jobType, name, s3JobDefinition) { 
        obj['clientToken'] = clientToken;
        obj['jobType'] = jobType;
        obj['name'] = name;
        obj['s3JobDefinition'] = s3JobDefinition;
    }

    /**
     * Constructs a <code>CreateClassificationJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateClassificationJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateClassificationJobRequest} The populated <code>CreateClassificationJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateClassificationJobRequest();

            if (data.hasOwnProperty('allowListIds')) {
                obj['allowListIds'] = ApiClient.convertToType(data['allowListIds'], ['String']);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('customDataIdentifierIds')) {
                obj['customDataIdentifierIds'] = ApiClient.convertToType(data['customDataIdentifierIds'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('initialRun')) {
                obj['initialRun'] = ApiClient.convertToType(data['initialRun'], 'Boolean');
            }
            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], 'String');
            }
            if (data.hasOwnProperty('managedDataIdentifierIds')) {
                obj['managedDataIdentifierIds'] = ApiClient.convertToType(data['managedDataIdentifierIds'], ['String']);
            }
            if (data.hasOwnProperty('managedDataIdentifierSelector')) {
                obj['managedDataIdentifierSelector'] = ApiClient.convertToType(data['managedDataIdentifierSelector'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('s3JobDefinition')) {
                obj['s3JobDefinition'] = CreateClassificationJobRequestS3JobDefinition.constructFromObject(data['s3JobDefinition']);
            }
            if (data.hasOwnProperty('samplingPercentage')) {
                obj['samplingPercentage'] = ApiClient.convertToType(data['samplingPercentage'], 'Number');
            }
            if (data.hasOwnProperty('scheduleFrequency')) {
                obj['scheduleFrequency'] = CreateClassificationJobRequestScheduleFrequency.constructFromObject(data['scheduleFrequency']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateClassificationJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateClassificationJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateClassificationJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowListIds'])) {
            throw new Error("Expected the field `allowListIds` to be an array in the JSON data but got " + data['allowListIds']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customDataIdentifierIds'])) {
            throw new Error("Expected the field `customDataIdentifierIds` to be an array in the JSON data but got " + data['customDataIdentifierIds']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['jobType'] && !(typeof data['jobType'] === 'string' || data['jobType'] instanceof String)) {
            throw new Error("Expected the field `jobType` to be a primitive type in the JSON string but got " + data['jobType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['managedDataIdentifierIds'])) {
            throw new Error("Expected the field `managedDataIdentifierIds` to be an array in the JSON data but got " + data['managedDataIdentifierIds']);
        }
        // ensure the json data is a string
        if (data['managedDataIdentifierSelector'] && !(typeof data['managedDataIdentifierSelector'] === 'string' || data['managedDataIdentifierSelector'] instanceof String)) {
            throw new Error("Expected the field `managedDataIdentifierSelector` to be a primitive type in the JSON string but got " + data['managedDataIdentifierSelector']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `s3JobDefinition`
        if (data['s3JobDefinition']) { // data not null
          CreateClassificationJobRequestS3JobDefinition.validateJSON(data['s3JobDefinition']);
        }
        // validate the optional field `scheduleFrequency`
        if (data['scheduleFrequency']) { // data not null
          CreateClassificationJobRequestScheduleFrequency.validateJSON(data['scheduleFrequency']);
        }

        return true;
    }


}

CreateClassificationJobRequest.RequiredProperties = ["clientToken", "jobType", "name", "s3JobDefinition"];

/**
 * An array of unique identifiers, one for each allow list for the job to use when it analyzes data.
 * @member {Array.<String>} allowListIds
 */
CreateClassificationJobRequest.prototype['allowListIds'] = undefined;

/**
 * A unique, case-sensitive token that you provide to ensure the idempotency of the request.
 * @member {String} clientToken
 */
CreateClassificationJobRequest.prototype['clientToken'] = undefined;

/**
 * An array of unique identifiers, one for each custom data identifier for the job to use when it analyzes data. To use only managed data identifiers, don't specify a value for this property and specify a value other than NONE for the managedDataIdentifierSelector property.
 * @member {Array.<String>} customDataIdentifierIds
 */
CreateClassificationJobRequest.prototype['customDataIdentifierIds'] = undefined;

/**
 * A custom description of the job. The description can contain as many as 200 characters.
 * @member {String} description
 */
CreateClassificationJobRequest.prototype['description'] = undefined;

/**
 * <p>For a recurring job, specifies whether to analyze all existing, eligible objects immediately after the job is created (true). To analyze only those objects that are created or changed after you create the job and before the job's first scheduled run, set this value to false.</p> <p>If you configure the job to run only once, don't specify a value for this property.</p>
 * @member {Boolean} initialRun
 */
CreateClassificationJobRequest.prototype['initialRun'] = undefined;

/**
 * The schedule for running a classification job. Valid values are:
 * @member {module:model/CreateClassificationJobRequest.JobTypeEnum} jobType
 */
CreateClassificationJobRequest.prototype['jobType'] = undefined;

/**
 * <p>An array of unique identifiers, one for each managed data identifier for the job to include (use) or exclude (not use) when it analyzes data. Inclusion or exclusion depends on the managed data identifier selection type that you specify for the job (managedDataIdentifierSelector).</p> <p>To retrieve a list of valid values for this property, use the ListManagedDataIdentifiers operation.</p>
 * @member {Array.<String>} managedDataIdentifierIds
 */
CreateClassificationJobRequest.prototype['managedDataIdentifierIds'] = undefined;

/**
 * The selection type that determines which managed data identifiers a classification job uses to analyze data. Valid values are:
 * @member {module:model/CreateClassificationJobRequest.ManagedDataIdentifierSelectorEnum} managedDataIdentifierSelector
 */
CreateClassificationJobRequest.prototype['managedDataIdentifierSelector'] = undefined;

/**
 * A custom name for the job. The name can contain as many as 500 characters.
 * @member {String} name
 */
CreateClassificationJobRequest.prototype['name'] = undefined;

/**
 * @member {module:model/CreateClassificationJobRequestS3JobDefinition} s3JobDefinition
 */
CreateClassificationJobRequest.prototype['s3JobDefinition'] = undefined;

/**
 * The sampling depth, as a percentage, for the job to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If this value is less than 100, Amazon Macie selects the objects to analyze at random, up to the specified percentage, and analyzes all the data in those objects.
 * @member {Number} samplingPercentage
 */
CreateClassificationJobRequest.prototype['samplingPercentage'] = undefined;

/**
 * @member {module:model/CreateClassificationJobRequestScheduleFrequency} scheduleFrequency
 */
CreateClassificationJobRequest.prototype['scheduleFrequency'] = undefined;

/**
 * A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.
 * @member {Object.<String, String>} tags
 */
CreateClassificationJobRequest.prototype['tags'] = undefined;





/**
 * Allowed values for the <code>jobType</code> property.
 * @enum {String}
 * @readonly
 */
CreateClassificationJobRequest['JobTypeEnum'] = {

    /**
     * value: "ONE_TIME"
     * @const
     */
    "ONE_TIME": "ONE_TIME",

    /**
     * value: "SCHEDULED"
     * @const
     */
    "SCHEDULED": "SCHEDULED"
};


/**
 * Allowed values for the <code>managedDataIdentifierSelector</code> property.
 * @enum {String}
 * @readonly
 */
CreateClassificationJobRequest['ManagedDataIdentifierSelectorEnum'] = {

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "EXCLUDE"
     * @const
     */
    "EXCLUDE": "EXCLUDE",

    /**
     * value: "INCLUDE"
     * @const
     */
    "INCLUDE": "INCLUDE",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "RECOMMENDED"
     * @const
     */
    "RECOMMENDED": "RECOMMENDED"
};



export default CreateClassificationJobRequest;

