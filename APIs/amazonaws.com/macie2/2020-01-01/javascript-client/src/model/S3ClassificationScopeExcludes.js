/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import S3ClassificationScopeExclusion from './S3ClassificationScopeExclusion';

/**
 * The S3ClassificationScopeExcludes model module.
 * @module model/S3ClassificationScopeExcludes
 * @version 2020-01-01
 */
class S3ClassificationScopeExcludes {
    /**
     * Constructs a new <code>S3ClassificationScopeExcludes</code>.
     * @alias module:model/S3ClassificationScopeExcludes
     * @implements module:model/S3ClassificationScopeExclusion
     * @param bucketNames {Array} 
     */
    constructor(bucketNames) { 
        S3ClassificationScopeExclusion.initialize(this, bucketNames);
        S3ClassificationScopeExcludes.initialize(this, bucketNames);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bucketNames) { 
        obj['bucketNames'] = bucketNames;
    }

    /**
     * Constructs a <code>S3ClassificationScopeExcludes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3ClassificationScopeExcludes} obj Optional instance to populate.
     * @return {module:model/S3ClassificationScopeExcludes} The populated <code>S3ClassificationScopeExcludes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3ClassificationScopeExcludes();
            S3ClassificationScopeExclusion.constructFromObject(data, obj);

            if (data.hasOwnProperty('bucketNames')) {
                obj['bucketNames'] = ApiClient.convertToType(data['bucketNames'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3ClassificationScopeExcludes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3ClassificationScopeExcludes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of S3ClassificationScopeExcludes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `bucketNames`
        if (data['bucketNames']) { // data not null
          Array.validateJSON(data['bucketNames']);
        }

        return true;
    }


}

S3ClassificationScopeExcludes.RequiredProperties = ["bucketNames"];

/**
 * @member {Array} bucketNames
 */
S3ClassificationScopeExcludes.prototype['bucketNames'] = undefined;


// Implement S3ClassificationScopeExclusion interface:
/**
 * @member {Array} bucketNames
 */
S3ClassificationScopeExclusion.prototype['bucketNames'] = undefined;




export default S3ClassificationScopeExcludes;

