/**
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AcceptInvitationRequest from '../model/AcceptInvitationRequest';
import BatchGetCustomDataIdentifiersRequest from '../model/BatchGetCustomDataIdentifiersRequest';
import BatchGetCustomDataIdentifiersResponse from '../model/BatchGetCustomDataIdentifiersResponse';
import CreateAllowListRequest from '../model/CreateAllowListRequest';
import CreateAllowListResponse from '../model/CreateAllowListResponse';
import CreateClassificationJobRequest from '../model/CreateClassificationJobRequest';
import CreateClassificationJobResponse from '../model/CreateClassificationJobResponse';
import CreateCustomDataIdentifierRequest from '../model/CreateCustomDataIdentifierRequest';
import CreateCustomDataIdentifierResponse from '../model/CreateCustomDataIdentifierResponse';
import CreateFindingsFilterRequest from '../model/CreateFindingsFilterRequest';
import CreateFindingsFilterResponse from '../model/CreateFindingsFilterResponse';
import CreateInvitationsRequest from '../model/CreateInvitationsRequest';
import CreateInvitationsResponse from '../model/CreateInvitationsResponse';
import CreateMemberRequest from '../model/CreateMemberRequest';
import CreateMemberResponse from '../model/CreateMemberResponse';
import CreateSampleFindingsRequest from '../model/CreateSampleFindingsRequest';
import DeclineInvitationsRequest from '../model/DeclineInvitationsRequest';
import DeclineInvitationsResponse from '../model/DeclineInvitationsResponse';
import DeleteInvitationsRequest from '../model/DeleteInvitationsRequest';
import DeleteInvitationsResponse from '../model/DeleteInvitationsResponse';
import DescribeBucketsRequest from '../model/DescribeBucketsRequest';
import DescribeBucketsResponse from '../model/DescribeBucketsResponse';
import DescribeClassificationJobResponse from '../model/DescribeClassificationJobResponse';
import DescribeOrganizationConfigurationResponse from '../model/DescribeOrganizationConfigurationResponse';
import EnableMacieRequest from '../model/EnableMacieRequest';
import EnableOrganizationAdminAccountRequest from '../model/EnableOrganizationAdminAccountRequest';
import GetAdministratorAccountResponse from '../model/GetAdministratorAccountResponse';
import GetAllowListResponse from '../model/GetAllowListResponse';
import GetAutomatedDiscoveryConfigurationResponse from '../model/GetAutomatedDiscoveryConfigurationResponse';
import GetBucketStatisticsRequest from '../model/GetBucketStatisticsRequest';
import GetBucketStatisticsResponse from '../model/GetBucketStatisticsResponse';
import GetClassificationExportConfigurationResponse from '../model/GetClassificationExportConfigurationResponse';
import GetClassificationScopeResponse from '../model/GetClassificationScopeResponse';
import GetCustomDataIdentifierResponse from '../model/GetCustomDataIdentifierResponse';
import GetFindingStatisticsRequest from '../model/GetFindingStatisticsRequest';
import GetFindingStatisticsResponse from '../model/GetFindingStatisticsResponse';
import GetFindingsFilterResponse from '../model/GetFindingsFilterResponse';
import GetFindingsPublicationConfigurationResponse from '../model/GetFindingsPublicationConfigurationResponse';
import GetFindingsRequest from '../model/GetFindingsRequest';
import GetFindingsResponse from '../model/GetFindingsResponse';
import GetInvitationsCountResponse from '../model/GetInvitationsCountResponse';
import GetMacieSessionResponse from '../model/GetMacieSessionResponse';
import GetMasterAccountResponse from '../model/GetMasterAccountResponse';
import GetMemberResponse from '../model/GetMemberResponse';
import GetResourceProfileResponse from '../model/GetResourceProfileResponse';
import GetRevealConfigurationResponse from '../model/GetRevealConfigurationResponse';
import GetSensitiveDataOccurrencesAvailabilityResponse from '../model/GetSensitiveDataOccurrencesAvailabilityResponse';
import GetSensitiveDataOccurrencesResponse from '../model/GetSensitiveDataOccurrencesResponse';
import GetSensitivityInspectionTemplateResponse from '../model/GetSensitivityInspectionTemplateResponse';
import GetUsageStatisticsRequest from '../model/GetUsageStatisticsRequest';
import GetUsageStatisticsResponse from '../model/GetUsageStatisticsResponse';
import GetUsageTotalsResponse from '../model/GetUsageTotalsResponse';
import ListAllowListsResponse from '../model/ListAllowListsResponse';
import ListClassificationJobsRequest from '../model/ListClassificationJobsRequest';
import ListClassificationJobsResponse from '../model/ListClassificationJobsResponse';
import ListClassificationScopesResponse from '../model/ListClassificationScopesResponse';
import ListCustomDataIdentifiersRequest from '../model/ListCustomDataIdentifiersRequest';
import ListCustomDataIdentifiersResponse from '../model/ListCustomDataIdentifiersResponse';
import ListFindingsFiltersResponse from '../model/ListFindingsFiltersResponse';
import ListFindingsRequest from '../model/ListFindingsRequest';
import ListFindingsResponse from '../model/ListFindingsResponse';
import ListInvitationsResponse from '../model/ListInvitationsResponse';
import ListManagedDataIdentifiersRequest from '../model/ListManagedDataIdentifiersRequest';
import ListManagedDataIdentifiersResponse from '../model/ListManagedDataIdentifiersResponse';
import ListMembersResponse from '../model/ListMembersResponse';
import ListOrganizationAdminAccountsResponse from '../model/ListOrganizationAdminAccountsResponse';
import ListResourceProfileArtifactsResponse from '../model/ListResourceProfileArtifactsResponse';
import ListResourceProfileDetectionsResponse from '../model/ListResourceProfileDetectionsResponse';
import ListSensitivityInspectionTemplatesResponse from '../model/ListSensitivityInspectionTemplatesResponse';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import PutClassificationExportConfigurationRequest from '../model/PutClassificationExportConfigurationRequest';
import PutClassificationExportConfigurationResponse from '../model/PutClassificationExportConfigurationResponse';
import PutFindingsPublicationConfigurationRequest from '../model/PutFindingsPublicationConfigurationRequest';
import SearchResourcesRequest from '../model/SearchResourcesRequest';
import SearchResourcesResponse from '../model/SearchResourcesResponse';
import TagResourceRequest from '../model/TagResourceRequest';
import TestCustomDataIdentifierRequest from '../model/TestCustomDataIdentifierRequest';
import TestCustomDataIdentifierResponse from '../model/TestCustomDataIdentifierResponse';
import UpdateAllowListRequest from '../model/UpdateAllowListRequest';
import UpdateAllowListResponse from '../model/UpdateAllowListResponse';
import UpdateAutomatedDiscoveryConfigurationRequest from '../model/UpdateAutomatedDiscoveryConfigurationRequest';
import UpdateClassificationJobRequest from '../model/UpdateClassificationJobRequest';
import UpdateClassificationScopeRequest from '../model/UpdateClassificationScopeRequest';
import UpdateFindingsFilterRequest from '../model/UpdateFindingsFilterRequest';
import UpdateFindingsFilterResponse from '../model/UpdateFindingsFilterResponse';
import UpdateMacieSessionRequest from '../model/UpdateMacieSessionRequest';
import UpdateMemberSessionRequest from '../model/UpdateMemberSessionRequest';
import UpdateOrganizationConfigurationRequest from '../model/UpdateOrganizationConfigurationRequest';
import UpdateResourceProfileDetectionsRequest from '../model/UpdateResourceProfileDetectionsRequest';
import UpdateResourceProfileRequest from '../model/UpdateResourceProfileRequest';
import UpdateRevealConfigurationRequest from '../model/UpdateRevealConfigurationRequest';
import UpdateRevealConfigurationResponse from '../model/UpdateRevealConfigurationResponse';
import UpdateSensitivityInspectionTemplateRequest from '../model/UpdateSensitivityInspectionTemplateRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2020-01-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the acceptInvitation operation.
     * @callback module:api/DefaultApi~acceptInvitationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accepts an Amazon Macie membership invitation that was received from a specific account.
     * @param {module:model/AcceptInvitationRequest} acceptInvitationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~acceptInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    acceptInvitation(acceptInvitationRequest, opts, callback) {
      opts = opts || {};
      let postBody = acceptInvitationRequest;
      // verify the required parameter 'acceptInvitationRequest' is set
      if (acceptInvitationRequest === undefined || acceptInvitationRequest === null) {
        throw new Error("Missing the required parameter 'acceptInvitationRequest' when calling acceptInvitation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/invitations/accept', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchGetCustomDataIdentifiers operation.
     * @callback module:api/DefaultApi~batchGetCustomDataIdentifiersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchGetCustomDataIdentifiersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about one or more custom data identifiers.
     * @param {module:model/BatchGetCustomDataIdentifiersRequest} batchGetCustomDataIdentifiersRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchGetCustomDataIdentifiersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchGetCustomDataIdentifiersResponse}
     */
    batchGetCustomDataIdentifiers(batchGetCustomDataIdentifiersRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchGetCustomDataIdentifiersRequest;
      // verify the required parameter 'batchGetCustomDataIdentifiersRequest' is set
      if (batchGetCustomDataIdentifiersRequest === undefined || batchGetCustomDataIdentifiersRequest === null) {
        throw new Error("Missing the required parameter 'batchGetCustomDataIdentifiersRequest' when calling batchGetCustomDataIdentifiers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchGetCustomDataIdentifiersResponse;
      return this.apiClient.callApi(
        '/custom-data-identifiers/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAllowList operation.
     * @callback module:api/DefaultApi~createAllowListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAllowListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates and defines the settings for an allow list.
     * @param {module:model/CreateAllowListRequest} createAllowListRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAllowListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAllowListResponse}
     */
    createAllowList(createAllowListRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAllowListRequest;
      // verify the required parameter 'createAllowListRequest' is set
      if (createAllowListRequest === undefined || createAllowListRequest === null) {
        throw new Error("Missing the required parameter 'createAllowListRequest' when calling createAllowList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAllowListResponse;
      return this.apiClient.callApi(
        '/allow-lists', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createClassificationJob operation.
     * @callback module:api/DefaultApi~createClassificationJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateClassificationJobResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates and defines the settings for a classification job.
     * @param {module:model/CreateClassificationJobRequest} createClassificationJobRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createClassificationJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateClassificationJobResponse}
     */
    createClassificationJob(createClassificationJobRequest, opts, callback) {
      opts = opts || {};
      let postBody = createClassificationJobRequest;
      // verify the required parameter 'createClassificationJobRequest' is set
      if (createClassificationJobRequest === undefined || createClassificationJobRequest === null) {
        throw new Error("Missing the required parameter 'createClassificationJobRequest' when calling createClassificationJob");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateClassificationJobResponse;
      return this.apiClient.callApi(
        '/jobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createCustomDataIdentifier operation.
     * @callback module:api/DefaultApi~createCustomDataIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateCustomDataIdentifierResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates and defines the criteria and other settings for a custom data identifier.
     * @param {module:model/CreateCustomDataIdentifierRequest} createCustomDataIdentifierRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createCustomDataIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateCustomDataIdentifierResponse}
     */
    createCustomDataIdentifier(createCustomDataIdentifierRequest, opts, callback) {
      opts = opts || {};
      let postBody = createCustomDataIdentifierRequest;
      // verify the required parameter 'createCustomDataIdentifierRequest' is set
      if (createCustomDataIdentifierRequest === undefined || createCustomDataIdentifierRequest === null) {
        throw new Error("Missing the required parameter 'createCustomDataIdentifierRequest' when calling createCustomDataIdentifier");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateCustomDataIdentifierResponse;
      return this.apiClient.callApi(
        '/custom-data-identifiers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createFindingsFilter operation.
     * @callback module:api/DefaultApi~createFindingsFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateFindingsFilterResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates and defines the criteria and other settings for a findings filter.
     * @param {module:model/CreateFindingsFilterRequest} createFindingsFilterRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createFindingsFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateFindingsFilterResponse}
     */
    createFindingsFilter(createFindingsFilterRequest, opts, callback) {
      opts = opts || {};
      let postBody = createFindingsFilterRequest;
      // verify the required parameter 'createFindingsFilterRequest' is set
      if (createFindingsFilterRequest === undefined || createFindingsFilterRequest === null) {
        throw new Error("Missing the required parameter 'createFindingsFilterRequest' when calling createFindingsFilter");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateFindingsFilterResponse;
      return this.apiClient.callApi(
        '/findingsfilters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createInvitations operation.
     * @callback module:api/DefaultApi~createInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateInvitationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sends an Amazon Macie membership invitation to one or more accounts.
     * @param {module:model/CreateInvitationsRequest} createInvitationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateInvitationsResponse}
     */
    createInvitations(createInvitationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = createInvitationsRequest;
      // verify the required parameter 'createInvitationsRequest' is set
      if (createInvitationsRequest === undefined || createInvitationsRequest === null) {
        throw new Error("Missing the required parameter 'createInvitationsRequest' when calling createInvitations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateInvitationsResponse;
      return this.apiClient.callApi(
        '/invitations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMember operation.
     * @callback module:api/DefaultApi~createMemberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMemberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates an account with an Amazon Macie administrator account.
     * @param {module:model/CreateMemberRequest} createMemberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMemberResponse}
     */
    createMember(createMemberRequest, opts, callback) {
      opts = opts || {};
      let postBody = createMemberRequest;
      // verify the required parameter 'createMemberRequest' is set
      if (createMemberRequest === undefined || createMemberRequest === null) {
        throw new Error("Missing the required parameter 'createMemberRequest' when calling createMember");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMemberResponse;
      return this.apiClient.callApi(
        '/members', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createSampleFindings operation.
     * @callback module:api/DefaultApi~createSampleFindingsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates sample findings.
     * @param {module:model/CreateSampleFindingsRequest} createSampleFindingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createSampleFindingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createSampleFindings(createSampleFindingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = createSampleFindingsRequest;
      // verify the required parameter 'createSampleFindingsRequest' is set
      if (createSampleFindingsRequest === undefined || createSampleFindingsRequest === null) {
        throw new Error("Missing the required parameter 'createSampleFindingsRequest' when calling createSampleFindings");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/findings/sample', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the declineInvitations operation.
     * @callback module:api/DefaultApi~declineInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeclineInvitationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Declines Amazon Macie membership invitations that were received from specific accounts.
     * @param {module:model/DeclineInvitationsRequest} declineInvitationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~declineInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeclineInvitationsResponse}
     */
    declineInvitations(declineInvitationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = declineInvitationsRequest;
      // verify the required parameter 'declineInvitationsRequest' is set
      if (declineInvitationsRequest === undefined || declineInvitationsRequest === null) {
        throw new Error("Missing the required parameter 'declineInvitationsRequest' when calling declineInvitations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeclineInvitationsResponse;
      return this.apiClient.callApi(
        '/invitations/decline', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAllowList operation.
     * @callback module:api/DefaultApi~deleteAllowListCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an allow list.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [ignoreJobChecks] <p>Specifies whether to force deletion of the allow list, even if active classification jobs are configured to use the list.</p> <p>When you try to delete an allow list, Amazon Macie checks for classification jobs that use the list and have a status other than COMPLETE or CANCELLED. By default, Macie rejects your request if any jobs meet these criteria. To skip these checks and delete the list, set this value to true. To delete the list only if no active jobs are configured to use it, set this value to false.</p>
     * @param {module:api/DefaultApi~deleteAllowListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteAllowList(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteAllowList");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ignoreJobChecks': opts['ignoreJobChecks']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/allow-lists/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCustomDataIdentifier operation.
     * @callback module:api/DefaultApi~deleteCustomDataIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Soft deletes a custom data identifier.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteCustomDataIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteCustomDataIdentifier(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteCustomDataIdentifier");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/custom-data-identifiers/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteFindingsFilter operation.
     * @callback module:api/DefaultApi~deleteFindingsFilterCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a findings filter.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteFindingsFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteFindingsFilter(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteFindingsFilter");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/findingsfilters/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInvitations operation.
     * @callback module:api/DefaultApi~deleteInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteInvitationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes Amazon Macie membership invitations that were received from specific accounts.
     * @param {module:model/DeleteInvitationsRequest} deleteInvitationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteInvitationsResponse}
     */
    deleteInvitations(deleteInvitationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteInvitationsRequest;
      // verify the required parameter 'deleteInvitationsRequest' is set
      if (deleteInvitationsRequest === undefined || deleteInvitationsRequest === null) {
        throw new Error("Missing the required parameter 'deleteInvitationsRequest' when calling deleteInvitations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteInvitationsResponse;
      return this.apiClient.callApi(
        '/invitations/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMember operation.
     * @callback module:api/DefaultApi~deleteMemberCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the association between an Amazon Macie administrator account and an account.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteMember(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteMember");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/members/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBuckets operation.
     * @callback module:api/DefaultApi~describeBucketsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBucketsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) statistical data and other information about one or more S3 buckets that Amazon Macie monitors and analyzes for an account.
     * @param {module:model/DescribeBucketsRequest} describeBucketsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBucketsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBucketsResponse}
     */
    describeBuckets(describeBucketsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBucketsRequest;
      // verify the required parameter 'describeBucketsRequest' is set
      if (describeBucketsRequest === undefined || describeBucketsRequest === null) {
        throw new Error("Missing the required parameter 'describeBucketsRequest' when calling describeBuckets");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBucketsResponse;
      return this.apiClient.callApi(
        '/datasources/s3', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeClassificationJob operation.
     * @callback module:api/DefaultApi~describeClassificationJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeClassificationJobResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the status and settings for a classification job.
     * @param {String} jobId The unique identifier for the classification job.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeClassificationJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeClassificationJobResponse}
     */
    describeClassificationJob(jobId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling describeClassificationJob");
      }

      let pathParams = {
        'jobId': jobId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeClassificationJobResponse;
      return this.apiClient.callApi(
        '/jobs/{jobId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeOrganizationConfiguration operation.
     * @callback module:api/DefaultApi~describeOrganizationConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeOrganizationConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the Amazon Macie configuration settings for an organization in Organizations.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeOrganizationConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeOrganizationConfigurationResponse}
     */
    describeOrganizationConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeOrganizationConfigurationResponse;
      return this.apiClient.callApi(
        '/admin/configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disableMacie operation.
     * @callback module:api/DefaultApi~disableMacieCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables Amazon Macie and deletes all settings and resources for a Macie account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disableMacieCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disableMacie(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/macie', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disableOrganizationAdminAccount operation.
     * @callback module:api/DefaultApi~disableOrganizationAdminAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables an account as the delegated Amazon Macie administrator account for an organization in Organizations.
     * @param {String} adminAccountId The Amazon Web Services account ID of the delegated Amazon Macie administrator account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disableOrganizationAdminAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disableOrganizationAdminAccount(adminAccountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'adminAccountId' is set
      if (adminAccountId === undefined || adminAccountId === null) {
        throw new Error("Missing the required parameter 'adminAccountId' when calling disableOrganizationAdminAccount");
      }

      let pathParams = {
      };
      let queryParams = {
        'adminAccountId': adminAccountId
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/admin#adminAccountId', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateFromAdministratorAccount operation.
     * @callback module:api/DefaultApi~disassociateFromAdministratorAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates a member account from its Amazon Macie administrator account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateFromAdministratorAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociateFromAdministratorAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/administrator/disassociate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateFromMasterAccount operation.
     * @callback module:api/DefaultApi~disassociateFromMasterAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * (Deprecated) Disassociates a member account from its Amazon Macie administrator account. This operation has been replaced by the <link  linkend=\"DisassociateFromAdministratorAccount\">DisassociateFromAdministratorAccount</link> operation.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateFromMasterAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociateFromMasterAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/master/disassociate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateMember operation.
     * @callback module:api/DefaultApi~disassociateMemberCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates an Amazon Macie administrator account from a member account.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociateMember(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling disassociateMember");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/members/disassociate/{id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableMacie operation.
     * @callback module:api/DefaultApi~enableMacieCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables Amazon Macie and specifies the configuration settings for a Macie account.
     * @param {module:model/EnableMacieRequest} enableMacieRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~enableMacieCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    enableMacie(enableMacieRequest, opts, callback) {
      opts = opts || {};
      let postBody = enableMacieRequest;
      // verify the required parameter 'enableMacieRequest' is set
      if (enableMacieRequest === undefined || enableMacieRequest === null) {
        throw new Error("Missing the required parameter 'enableMacieRequest' when calling enableMacie");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/macie', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableOrganizationAdminAccount operation.
     * @callback module:api/DefaultApi~enableOrganizationAdminAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Designates an account as the delegated Amazon Macie administrator account for an organization in Organizations.
     * @param {module:model/EnableOrganizationAdminAccountRequest} enableOrganizationAdminAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~enableOrganizationAdminAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    enableOrganizationAdminAccount(enableOrganizationAdminAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = enableOrganizationAdminAccountRequest;
      // verify the required parameter 'enableOrganizationAdminAccountRequest' is set
      if (enableOrganizationAdminAccountRequest === undefined || enableOrganizationAdminAccountRequest === null) {
        throw new Error("Missing the required parameter 'enableOrganizationAdminAccountRequest' when calling enableOrganizationAdminAccount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/admin', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAdministratorAccount operation.
     * @callback module:api/DefaultApi~getAdministratorAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAdministratorAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the Amazon Macie administrator account for an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAdministratorAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAdministratorAccountResponse}
     */
    getAdministratorAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAdministratorAccountResponse;
      return this.apiClient.callApi(
        '/administrator', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllowList operation.
     * @callback module:api/DefaultApi~getAllowListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllowListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the settings and status of an allow list.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAllowListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAllowListResponse}
     */
    getAllowList(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAllowList");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllowListResponse;
      return this.apiClient.callApi(
        '/allow-lists/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAutomatedDiscoveryConfiguration operation.
     * @callback module:api/DefaultApi~getAutomatedDiscoveryConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAutomatedDiscoveryConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the configuration settings and status of automated sensitive data discovery for an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAutomatedDiscoveryConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAutomatedDiscoveryConfigurationResponse}
     */
    getAutomatedDiscoveryConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAutomatedDiscoveryConfigurationResponse;
      return this.apiClient.callApi(
        '/automated-discovery/configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBucketStatistics operation.
     * @callback module:api/DefaultApi~getBucketStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBucketStatisticsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) aggregated statistical data about all the S3 buckets that Amazon Macie monitors and analyzes for an account.
     * @param {module:model/GetBucketStatisticsRequest} getBucketStatisticsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getBucketStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBucketStatisticsResponse}
     */
    getBucketStatistics(getBucketStatisticsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getBucketStatisticsRequest;
      // verify the required parameter 'getBucketStatisticsRequest' is set
      if (getBucketStatisticsRequest === undefined || getBucketStatisticsRequest === null) {
        throw new Error("Missing the required parameter 'getBucketStatisticsRequest' when calling getBucketStatistics");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetBucketStatisticsResponse;
      return this.apiClient.callApi(
        '/datasources/s3/statistics', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getClassificationExportConfiguration operation.
     * @callback module:api/DefaultApi~getClassificationExportConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetClassificationExportConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the configuration settings for storing data classification results.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getClassificationExportConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetClassificationExportConfigurationResponse}
     */
    getClassificationExportConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetClassificationExportConfigurationResponse;
      return this.apiClient.callApi(
        '/classification-export-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getClassificationScope operation.
     * @callback module:api/DefaultApi~getClassificationScopeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetClassificationScopeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the classification scope settings for an account.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getClassificationScopeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetClassificationScopeResponse}
     */
    getClassificationScope(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getClassificationScope");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetClassificationScopeResponse;
      return this.apiClient.callApi(
        '/classification-scopes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCustomDataIdentifier operation.
     * @callback module:api/DefaultApi~getCustomDataIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCustomDataIdentifierResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the criteria and other settings for a custom data identifier.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getCustomDataIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCustomDataIdentifierResponse}
     */
    getCustomDataIdentifier(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getCustomDataIdentifier");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCustomDataIdentifierResponse;
      return this.apiClient.callApi(
        '/custom-data-identifiers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFindingStatistics operation.
     * @callback module:api/DefaultApi~getFindingStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFindingStatisticsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) aggregated statistical data about findings.
     * @param {module:model/GetFindingStatisticsRequest} getFindingStatisticsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getFindingStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFindingStatisticsResponse}
     */
    getFindingStatistics(getFindingStatisticsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getFindingStatisticsRequest;
      // verify the required parameter 'getFindingStatisticsRequest' is set
      if (getFindingStatisticsRequest === undefined || getFindingStatisticsRequest === null) {
        throw new Error("Missing the required parameter 'getFindingStatisticsRequest' when calling getFindingStatistics");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetFindingStatisticsResponse;
      return this.apiClient.callApi(
        '/findings/statistics', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFindings operation.
     * @callback module:api/DefaultApi~getFindingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFindingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the details of one or more findings.
     * @param {module:model/GetFindingsRequest} getFindingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getFindingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFindingsResponse}
     */
    getFindings(getFindingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getFindingsRequest;
      // verify the required parameter 'getFindingsRequest' is set
      if (getFindingsRequest === undefined || getFindingsRequest === null) {
        throw new Error("Missing the required parameter 'getFindingsRequest' when calling getFindings");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetFindingsResponse;
      return this.apiClient.callApi(
        '/findings/describe', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFindingsFilter operation.
     * @callback module:api/DefaultApi~getFindingsFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFindingsFilterResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the criteria and other settings for a findings filter.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getFindingsFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFindingsFilterResponse}
     */
    getFindingsFilter(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getFindingsFilter");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetFindingsFilterResponse;
      return this.apiClient.callApi(
        '/findingsfilters/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFindingsPublicationConfiguration operation.
     * @callback module:api/DefaultApi~getFindingsPublicationConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFindingsPublicationConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the configuration settings for publishing findings to Security Hub.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getFindingsPublicationConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFindingsPublicationConfigurationResponse}
     */
    getFindingsPublicationConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetFindingsPublicationConfigurationResponse;
      return this.apiClient.callApi(
        '/findings-publication-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvitationsCount operation.
     * @callback module:api/DefaultApi~getInvitationsCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetInvitationsCountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the count of Amazon Macie membership invitations that were received by an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getInvitationsCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetInvitationsCountResponse}
     */
    getInvitationsCount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetInvitationsCountResponse;
      return this.apiClient.callApi(
        '/invitations/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMacieSession operation.
     * @callback module:api/DefaultApi~getMacieSessionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMacieSessionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the status and configuration settings for an Amazon Macie account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getMacieSessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMacieSessionResponse}
     */
    getMacieSession(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMacieSessionResponse;
      return this.apiClient.callApi(
        '/macie', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMasterAccount operation.
     * @callback module:api/DefaultApi~getMasterAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMasterAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * (Deprecated) Retrieves information about the Amazon Macie administrator account for an account. This operation has been replaced by the <link  linkend=\"GetAdministratorAccount\">GetAdministratorAccount</link> operation.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getMasterAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMasterAccountResponse}
     */
    getMasterAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMasterAccountResponse;
      return this.apiClient.callApi(
        '/master', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMember operation.
     * @callback module:api/DefaultApi~getMemberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMemberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about an account that's associated with an Amazon Macie administrator account.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getMemberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMemberResponse}
     */
    getMember(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getMember");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMemberResponse;
      return this.apiClient.callApi(
        '/members/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourceProfile operation.
     * @callback module:api/DefaultApi~getResourceProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetResourceProfileResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) sensitive data discovery statistics and the sensitivity score for an S3 bucket.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getResourceProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetResourceProfileResponse}
     */
    getResourceProfile(resourceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling getResourceProfile");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetResourceProfileResponse;
      return this.apiClient.callApi(
        '/resource-profiles#resourceArn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRevealConfiguration operation.
     * @callback module:api/DefaultApi~getRevealConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRevealConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the status and configuration settings for retrieving occurrences of sensitive data reported by findings.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getRevealConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRevealConfigurationResponse}
     */
    getRevealConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetRevealConfigurationResponse;
      return this.apiClient.callApi(
        '/reveal-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSensitiveDataOccurrences operation.
     * @callback module:api/DefaultApi~getSensitiveDataOccurrencesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSensitiveDataOccurrencesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves occurrences of sensitive data reported by a finding.
     * @param {String} findingId The unique identifier for the finding.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSensitiveDataOccurrencesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSensitiveDataOccurrencesResponse}
     */
    getSensitiveDataOccurrences(findingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'findingId' is set
      if (findingId === undefined || findingId === null) {
        throw new Error("Missing the required parameter 'findingId' when calling getSensitiveDataOccurrences");
      }

      let pathParams = {
        'findingId': findingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSensitiveDataOccurrencesResponse;
      return this.apiClient.callApi(
        '/findings/{findingId}/reveal', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSensitiveDataOccurrencesAvailability operation.
     * @callback module:api/DefaultApi~getSensitiveDataOccurrencesAvailabilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSensitiveDataOccurrencesAvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks whether occurrences of sensitive data can be retrieved for a finding.
     * @param {String} findingId The unique identifier for the finding.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSensitiveDataOccurrencesAvailabilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSensitiveDataOccurrencesAvailabilityResponse}
     */
    getSensitiveDataOccurrencesAvailability(findingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'findingId' is set
      if (findingId === undefined || findingId === null) {
        throw new Error("Missing the required parameter 'findingId' when calling getSensitiveDataOccurrencesAvailability");
      }

      let pathParams = {
        'findingId': findingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSensitiveDataOccurrencesAvailabilityResponse;
      return this.apiClient.callApi(
        '/findings/{findingId}/reveal/availability', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSensitivityInspectionTemplate operation.
     * @callback module:api/DefaultApi~getSensitivityInspectionTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSensitivityInspectionTemplateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  <p>Retrieves the settings for the sensitivity inspection template for an account.</p>
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSensitivityInspectionTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSensitivityInspectionTemplateResponse}
     */
    getSensitivityInspectionTemplate(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getSensitivityInspectionTemplate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSensitivityInspectionTemplateResponse;
      return this.apiClient.callApi(
        '/templates/sensitivity-inspections/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsageStatistics operation.
     * @callback module:api/DefaultApi~getUsageStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUsageStatisticsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) quotas and aggregated usage data for one or more accounts.
     * @param {module:model/GetUsageStatisticsRequest} getUsageStatisticsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getUsageStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUsageStatisticsResponse}
     */
    getUsageStatistics(getUsageStatisticsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getUsageStatisticsRequest;
      // verify the required parameter 'getUsageStatisticsRequest' is set
      if (getUsageStatisticsRequest === undefined || getUsageStatisticsRequest === null) {
        throw new Error("Missing the required parameter 'getUsageStatisticsRequest' when calling getUsageStatistics");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetUsageStatisticsResponse;
      return this.apiClient.callApi(
        '/usage/statistics', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsageTotals operation.
     * @callback module:api/DefaultApi~getUsageTotalsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUsageTotalsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) aggregated usage data for an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [timeRange] The inclusive time period to retrieve the data for. Valid values are: MONTH_TO_DATE, for the current calendar month to date; and, PAST_30_DAYS, for the preceding 30 days. If you don't specify a value for this parameter, Amazon Macie provides aggregated usage data for the preceding 30 days.
     * @param {module:api/DefaultApi~getUsageTotalsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUsageTotalsResponse}
     */
    getUsageTotals(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'timeRange': opts['timeRange']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetUsageTotalsResponse;
      return this.apiClient.callApi(
        '/usage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAllowLists operation.
     * @callback module:api/DefaultApi~listAllowListsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAllowListsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a subset of information about all the allow lists for an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listAllowListsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAllowListsResponse}
     */
    listAllowLists(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAllowListsResponse;
      return this.apiClient.callApi(
        '/allow-lists', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listClassificationJobs operation.
     * @callback module:api/DefaultApi~listClassificationJobsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListClassificationJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a subset of information about one or more classification jobs.
     * @param {module:model/ListClassificationJobsRequest} listClassificationJobsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listClassificationJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListClassificationJobsResponse}
     */
    listClassificationJobs(listClassificationJobsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listClassificationJobsRequest;
      // verify the required parameter 'listClassificationJobsRequest' is set
      if (listClassificationJobsRequest === undefined || listClassificationJobsRequest === null) {
        throw new Error("Missing the required parameter 'listClassificationJobsRequest' when calling listClassificationJobs");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListClassificationJobsResponse;
      return this.apiClient.callApi(
        '/jobs/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listClassificationScopes operation.
     * @callback module:api/DefaultApi~listClassificationScopesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListClassificationScopesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a subset of information about the classification scope for an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [name] The name of the classification scope to retrieve the unique identifier for.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listClassificationScopesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListClassificationScopesResponse}
     */
    listClassificationScopes(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListClassificationScopesResponse;
      return this.apiClient.callApi(
        '/classification-scopes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCustomDataIdentifiers operation.
     * @callback module:api/DefaultApi~listCustomDataIdentifiersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCustomDataIdentifiersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a subset of information about all the custom data identifiers for an account.
     * @param {module:model/ListCustomDataIdentifiersRequest} listCustomDataIdentifiersRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listCustomDataIdentifiersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCustomDataIdentifiersResponse}
     */
    listCustomDataIdentifiers(listCustomDataIdentifiersRequest, opts, callback) {
      opts = opts || {};
      let postBody = listCustomDataIdentifiersRequest;
      // verify the required parameter 'listCustomDataIdentifiersRequest' is set
      if (listCustomDataIdentifiersRequest === undefined || listCustomDataIdentifiersRequest === null) {
        throw new Error("Missing the required parameter 'listCustomDataIdentifiersRequest' when calling listCustomDataIdentifiers");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListCustomDataIdentifiersResponse;
      return this.apiClient.callApi(
        '/custom-data-identifiers/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFindings operation.
     * @callback module:api/DefaultApi~listFindingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFindingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a subset of information about one or more findings.
     * @param {module:model/ListFindingsRequest} listFindingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listFindingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListFindingsResponse}
     */
    listFindings(listFindingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listFindingsRequest;
      // verify the required parameter 'listFindingsRequest' is set
      if (listFindingsRequest === undefined || listFindingsRequest === null) {
        throw new Error("Missing the required parameter 'listFindingsRequest' when calling listFindings");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListFindingsResponse;
      return this.apiClient.callApi(
        '/findings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFindingsFilters operation.
     * @callback module:api/DefaultApi~listFindingsFiltersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFindingsFiltersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a subset of information about all the findings filters for an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listFindingsFiltersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListFindingsFiltersResponse}
     */
    listFindingsFilters(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFindingsFiltersResponse;
      return this.apiClient.callApi(
        '/findingsfilters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listInvitations operation.
     * @callback module:api/DefaultApi~listInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListInvitationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the Amazon Macie membership invitations that were received by an account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListInvitationsResponse}
     */
    listInvitations(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListInvitationsResponse;
      return this.apiClient.callApi(
        '/invitations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listManagedDataIdentifiers operation.
     * @callback module:api/DefaultApi~listManagedDataIdentifiersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListManagedDataIdentifiersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about all the managed data identifiers that Amazon Macie currently provides.
     * @param {module:model/ListManagedDataIdentifiersRequest} listManagedDataIdentifiersRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listManagedDataIdentifiersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListManagedDataIdentifiersResponse}
     */
    listManagedDataIdentifiers(listManagedDataIdentifiersRequest, opts, callback) {
      opts = opts || {};
      let postBody = listManagedDataIdentifiersRequest;
      // verify the required parameter 'listManagedDataIdentifiersRequest' is set
      if (listManagedDataIdentifiersRequest === undefined || listManagedDataIdentifiersRequest === null) {
        throw new Error("Missing the required parameter 'listManagedDataIdentifiersRequest' when calling listManagedDataIdentifiers");
      }

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListManagedDataIdentifiersResponse;
      return this.apiClient.callApi(
        '/managed-data-identifiers/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listMembers operation.
     * @callback module:api/DefaultApi~listMembersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMembersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the accounts that are associated with an Amazon Macie administrator account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {String} [onlyAssociated] Specifies which accounts to include in the response, based on the status of an account's relationship with the administrator account. By default, the response includes only current member accounts. To include all accounts, set this value to false.
     * @param {module:api/DefaultApi~listMembersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMembersResponse}
     */
    listMembers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'onlyAssociated': opts['onlyAssociated']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMembersResponse;
      return this.apiClient.callApi(
        '/members', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listOrganizationAdminAccounts operation.
     * @callback module:api/DefaultApi~listOrganizationAdminAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListOrganizationAdminAccountsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the delegated Amazon Macie administrator account for an organization in Organizations.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listOrganizationAdminAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListOrganizationAdminAccountsResponse}
     */
    listOrganizationAdminAccounts(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListOrganizationAdminAccountsResponse;
      return this.apiClient.callApi(
        '/admin', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listResourceProfileArtifacts operation.
     * @callback module:api/DefaultApi~listResourceProfileArtifactsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResourceProfileArtifactsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about objects that were selected from an S3 bucket for automated sensitive data discovery.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listResourceProfileArtifactsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResourceProfileArtifactsResponse}
     */
    listResourceProfileArtifacts(resourceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling listResourceProfileArtifacts");
      }

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListResourceProfileArtifactsResponse;
      return this.apiClient.callApi(
        '/resource-profiles/artifacts#resourceArn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listResourceProfileDetections operation.
     * @callback module:api/DefaultApi~listResourceProfileDetectionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResourceProfileDetectionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the types and amount of sensitive data that Amazon Macie found in an S3 bucket.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listResourceProfileDetectionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResourceProfileDetectionsResponse}
     */
    listResourceProfileDetections(resourceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling listResourceProfileDetections");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken'],
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListResourceProfileDetectionsResponse;
      return this.apiClient.callApi(
        '/resource-profiles/detections#resourceArn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSensitivityInspectionTemplates operation.
     * @callback module:api/DefaultApi~listSensitivityInspectionTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSensitivityInspectionTemplatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  <p>Retrieves a subset of information about the sensitivity inspection template for an account.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of items to include in each page of a paginated response.
     * @param {String} [nextToken] The nextToken string that specifies which page of results to return in a paginated response.
     * @param {module:api/DefaultApi~listSensitivityInspectionTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSensitivityInspectionTemplatesResponse}
     */
    listSensitivityInspectionTemplates(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSensitivityInspectionTemplatesResponse;
      return this.apiClient.callApi(
        '/templates/sensitivity-inspections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the tags (keys and values) that are associated with an Amazon Macie resource.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the resource.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(resourceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling listTagsForResource");
      }

      let pathParams = {
        'resourceArn': resourceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/tags/{resourceArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putClassificationExportConfiguration operation.
     * @callback module:api/DefaultApi~putClassificationExportConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutClassificationExportConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates or updates the configuration settings for storing data classification results.
     * @param {module:model/PutClassificationExportConfigurationRequest} putClassificationExportConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putClassificationExportConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutClassificationExportConfigurationResponse}
     */
    putClassificationExportConfiguration(putClassificationExportConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putClassificationExportConfigurationRequest;
      // verify the required parameter 'putClassificationExportConfigurationRequest' is set
      if (putClassificationExportConfigurationRequest === undefined || putClassificationExportConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putClassificationExportConfigurationRequest' when calling putClassificationExportConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutClassificationExportConfigurationResponse;
      return this.apiClient.callApi(
        '/classification-export-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putFindingsPublicationConfiguration operation.
     * @callback module:api/DefaultApi~putFindingsPublicationConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the configuration settings for publishing findings to Security Hub.
     * @param {module:model/PutFindingsPublicationConfigurationRequest} putFindingsPublicationConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putFindingsPublicationConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    putFindingsPublicationConfiguration(putFindingsPublicationConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putFindingsPublicationConfigurationRequest;
      // verify the required parameter 'putFindingsPublicationConfigurationRequest' is set
      if (putFindingsPublicationConfigurationRequest === undefined || putFindingsPublicationConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putFindingsPublicationConfigurationRequest' when calling putFindingsPublicationConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/findings-publication-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchResources operation.
     * @callback module:api/DefaultApi~searchResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves (queries) statistical data and other information about Amazon Web Services resources that Amazon Macie monitors and analyzes.
     * @param {module:model/SearchResourcesRequest} searchResourcesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~searchResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchResourcesResponse}
     */
    searchResources(searchResourcesRequest, opts, callback) {
      opts = opts || {};
      let postBody = searchResourcesRequest;
      // verify the required parameter 'searchResourcesRequest' is set
      if (searchResourcesRequest === undefined || searchResourcesRequest === null) {
        throw new Error("Missing the required parameter 'searchResourcesRequest' when calling searchResources");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchResourcesResponse;
      return this.apiClient.callApi(
        '/datasources/search-resources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds or updates one or more tags (keys and values) that are associated with an Amazon Macie resource.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the resource.
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(resourceArn, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
        'resourceArn': resourceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tags/{resourceArn}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the testCustomDataIdentifier operation.
     * @callback module:api/DefaultApi~testCustomDataIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestCustomDataIdentifierResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tests a custom data identifier.
     * @param {module:model/TestCustomDataIdentifierRequest} testCustomDataIdentifierRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~testCustomDataIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestCustomDataIdentifierResponse}
     */
    testCustomDataIdentifier(testCustomDataIdentifierRequest, opts, callback) {
      opts = opts || {};
      let postBody = testCustomDataIdentifierRequest;
      // verify the required parameter 'testCustomDataIdentifierRequest' is set
      if (testCustomDataIdentifierRequest === undefined || testCustomDataIdentifierRequest === null) {
        throw new Error("Missing the required parameter 'testCustomDataIdentifierRequest' when calling testCustomDataIdentifier");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TestCustomDataIdentifierResponse;
      return this.apiClient.callApi(
        '/custom-data-identifiers/test', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes one or more tags (keys and values) from an Amazon Macie resource.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the resource.
     * @param {Array.<String>} tagKeys One or more tags (keys) to remove from the resource. In an HTTP request to remove multiple tags, append the tagKeys parameter and argument for each tag to remove, separated by an ampersand (&amp;).
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(resourceArn, tagKeys, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling untagResource");
      }
      // verify the required parameter 'tagKeys' is set
      if (tagKeys === undefined || tagKeys === null) {
        throw new Error("Missing the required parameter 'tagKeys' when calling untagResource");
      }

      let pathParams = {
        'resourceArn': resourceArn
      };
      let queryParams = {
        'tagKeys': this.apiClient.buildCollectionParam(tagKeys, 'multi')
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tags/{resourceArn}#tagKeys', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAllowList operation.
     * @callback module:api/DefaultApi~updateAllowListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAllowListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the settings for an allow list.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {module:model/UpdateAllowListRequest} updateAllowListRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAllowListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAllowListResponse}
     */
    updateAllowList(id, updateAllowListRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAllowListRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateAllowList");
      }
      // verify the required parameter 'updateAllowListRequest' is set
      if (updateAllowListRequest === undefined || updateAllowListRequest === null) {
        throw new Error("Missing the required parameter 'updateAllowListRequest' when calling updateAllowList");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAllowListResponse;
      return this.apiClient.callApi(
        '/allow-lists/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAutomatedDiscoveryConfiguration operation.
     * @callback module:api/DefaultApi~updateAutomatedDiscoveryConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables or disables automated sensitive data discovery for an account.
     * @param {module:model/UpdateAutomatedDiscoveryConfigurationRequest} updateAutomatedDiscoveryConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAutomatedDiscoveryConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateAutomatedDiscoveryConfiguration(updateAutomatedDiscoveryConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAutomatedDiscoveryConfigurationRequest;
      // verify the required parameter 'updateAutomatedDiscoveryConfigurationRequest' is set
      if (updateAutomatedDiscoveryConfigurationRequest === undefined || updateAutomatedDiscoveryConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'updateAutomatedDiscoveryConfigurationRequest' when calling updateAutomatedDiscoveryConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/automated-discovery/configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateClassificationJob operation.
     * @callback module:api/DefaultApi~updateClassificationJobCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Changes the status of a classification job.
     * @param {String} jobId The unique identifier for the classification job.
     * @param {module:model/UpdateClassificationJobRequest} updateClassificationJobRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateClassificationJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateClassificationJob(jobId, updateClassificationJobRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateClassificationJobRequest;
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling updateClassificationJob");
      }
      // verify the required parameter 'updateClassificationJobRequest' is set
      if (updateClassificationJobRequest === undefined || updateClassificationJobRequest === null) {
        throw new Error("Missing the required parameter 'updateClassificationJobRequest' when calling updateClassificationJob");
      }

      let pathParams = {
        'jobId': jobId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/jobs/{jobId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateClassificationScope operation.
     * @callback module:api/DefaultApi~updateClassificationScopeCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the classification scope settings for an account.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {module:model/UpdateClassificationScopeRequest} updateClassificationScopeRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateClassificationScopeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateClassificationScope(id, updateClassificationScopeRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateClassificationScopeRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateClassificationScope");
      }
      // verify the required parameter 'updateClassificationScopeRequest' is set
      if (updateClassificationScopeRequest === undefined || updateClassificationScopeRequest === null) {
        throw new Error("Missing the required parameter 'updateClassificationScopeRequest' when calling updateClassificationScope");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/classification-scopes/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateFindingsFilter operation.
     * @callback module:api/DefaultApi~updateFindingsFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateFindingsFilterResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the criteria and other settings for a findings filter.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {module:model/UpdateFindingsFilterRequest} updateFindingsFilterRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateFindingsFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateFindingsFilterResponse}
     */
    updateFindingsFilter(id, updateFindingsFilterRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateFindingsFilterRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateFindingsFilter");
      }
      // verify the required parameter 'updateFindingsFilterRequest' is set
      if (updateFindingsFilterRequest === undefined || updateFindingsFilterRequest === null) {
        throw new Error("Missing the required parameter 'updateFindingsFilterRequest' when calling updateFindingsFilter");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateFindingsFilterResponse;
      return this.apiClient.callApi(
        '/findingsfilters/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMacieSession operation.
     * @callback module:api/DefaultApi~updateMacieSessionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Suspends or re-enables Amazon Macie, or updates the configuration settings for a Macie account.
     * @param {module:model/UpdateMacieSessionRequest} updateMacieSessionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateMacieSessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateMacieSession(updateMacieSessionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateMacieSessionRequest;
      // verify the required parameter 'updateMacieSessionRequest' is set
      if (updateMacieSessionRequest === undefined || updateMacieSessionRequest === null) {
        throw new Error("Missing the required parameter 'updateMacieSessionRequest' when calling updateMacieSession");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/macie', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMemberSession operation.
     * @callback module:api/DefaultApi~updateMemberSessionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables an Amazon Macie administrator to suspend or re-enable Macie for a member account.
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {module:model/UpdateMemberSessionRequest} updateMemberSessionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateMemberSessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateMemberSession(id, updateMemberSessionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateMemberSessionRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateMemberSession");
      }
      // verify the required parameter 'updateMemberSessionRequest' is set
      if (updateMemberSessionRequest === undefined || updateMemberSessionRequest === null) {
        throw new Error("Missing the required parameter 'updateMemberSessionRequest' when calling updateMemberSession");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/macie/members/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrganizationConfiguration operation.
     * @callback module:api/DefaultApi~updateOrganizationConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the Amazon Macie configuration settings for an organization in Organizations.
     * @param {module:model/UpdateOrganizationConfigurationRequest} updateOrganizationConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateOrganizationConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateOrganizationConfiguration(updateOrganizationConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateOrganizationConfigurationRequest;
      // verify the required parameter 'updateOrganizationConfigurationRequest' is set
      if (updateOrganizationConfigurationRequest === undefined || updateOrganizationConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'updateOrganizationConfigurationRequest' when calling updateOrganizationConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/admin/configuration', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateResourceProfile operation.
     * @callback module:api/DefaultApi~updateResourceProfileCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the sensitivity score for an S3 bucket.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.
     * @param {module:model/UpdateResourceProfileRequest} updateResourceProfileRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateResourceProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateResourceProfile(resourceArn, updateResourceProfileRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateResourceProfileRequest;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling updateResourceProfile");
      }
      // verify the required parameter 'updateResourceProfileRequest' is set
      if (updateResourceProfileRequest === undefined || updateResourceProfileRequest === null) {
        throw new Error("Missing the required parameter 'updateResourceProfileRequest' when calling updateResourceProfile");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/resource-profiles#resourceArn', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateResourceProfileDetections operation.
     * @callback module:api/DefaultApi~updateResourceProfileDetectionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the sensitivity scoring settings for an S3 bucket.
     * @param {String} resourceArn The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.
     * @param {module:model/UpdateResourceProfileDetectionsRequest} updateResourceProfileDetectionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateResourceProfileDetectionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateResourceProfileDetections(resourceArn, updateResourceProfileDetectionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateResourceProfileDetectionsRequest;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling updateResourceProfileDetections");
      }
      // verify the required parameter 'updateResourceProfileDetectionsRequest' is set
      if (updateResourceProfileDetectionsRequest === undefined || updateResourceProfileDetectionsRequest === null) {
        throw new Error("Missing the required parameter 'updateResourceProfileDetectionsRequest' when calling updateResourceProfileDetections");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/resource-profiles/detections#resourceArn', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRevealConfiguration operation.
     * @callback module:api/DefaultApi~updateRevealConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRevealConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the status and configuration settings for retrieving occurrences of sensitive data reported by findings.
     * @param {module:model/UpdateRevealConfigurationRequest} updateRevealConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateRevealConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRevealConfigurationResponse}
     */
    updateRevealConfiguration(updateRevealConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateRevealConfigurationRequest;
      // verify the required parameter 'updateRevealConfigurationRequest' is set
      if (updateRevealConfigurationRequest === undefined || updateRevealConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'updateRevealConfigurationRequest' when calling updateRevealConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateRevealConfigurationResponse;
      return this.apiClient.callApi(
        '/reveal-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSensitivityInspectionTemplate operation.
     * @callback module:api/DefaultApi~updateSensitivityInspectionTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  <p>Updates the settings for the sensitivity inspection template for an account.</p>
     * @param {String} id The unique identifier for the Amazon Macie resource that the request applies to.
     * @param {module:model/UpdateSensitivityInspectionTemplateRequest} updateSensitivityInspectionTemplateRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateSensitivityInspectionTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateSensitivityInspectionTemplate(id, updateSensitivityInspectionTemplateRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateSensitivityInspectionTemplateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateSensitivityInspectionTemplate");
      }
      // verify the required parameter 'updateSensitivityInspectionTemplateRequest' is set
      if (updateSensitivityInspectionTemplateRequest === undefined || updateSensitivityInspectionTemplateRequest === null) {
        throw new Error("Missing the required parameter 'updateSensitivityInspectionTemplateRequest' when calling updateSensitivityInspectionTemplate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/templates/sensitivity-inspections/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
