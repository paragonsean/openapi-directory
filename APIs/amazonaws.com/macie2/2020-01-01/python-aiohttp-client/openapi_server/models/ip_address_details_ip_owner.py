# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpAddressDetailsIpOwner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asn: str=None, asn_org: str=None, isp: str=None, org: str=None):
        """IpAddressDetailsIpOwner - a model defined in OpenAPI

        :param asn: The asn of this IpAddressDetailsIpOwner.
        :param asn_org: The asn_org of this IpAddressDetailsIpOwner.
        :param isp: The isp of this IpAddressDetailsIpOwner.
        :param org: The org of this IpAddressDetailsIpOwner.
        """
        self.openapi_types = {
            'asn': str,
            'asn_org': str,
            'isp': str,
            'org': str
        }

        self.attribute_map = {
            'asn': 'asn',
            'asn_org': 'asnOrg',
            'isp': 'isp',
            'org': 'org'
        }

        self._asn = asn
        self._asn_org = asn_org
        self._isp = isp
        self._org = org

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpAddressDetailsIpOwner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpAddressDetails_ipOwner of this IpAddressDetailsIpOwner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asn(self):
        """Gets the asn of this IpAddressDetailsIpOwner.


        :return: The asn of this IpAddressDetailsIpOwner.
        :rtype: str
        """
        return self._asn

    @asn.setter
    def asn(self, asn):
        """Sets the asn of this IpAddressDetailsIpOwner.


        :param asn: The asn of this IpAddressDetailsIpOwner.
        :type asn: str
        """

        self._asn = asn

    @property
    def asn_org(self):
        """Gets the asn_org of this IpAddressDetailsIpOwner.


        :return: The asn_org of this IpAddressDetailsIpOwner.
        :rtype: str
        """
        return self._asn_org

    @asn_org.setter
    def asn_org(self, asn_org):
        """Sets the asn_org of this IpAddressDetailsIpOwner.


        :param asn_org: The asn_org of this IpAddressDetailsIpOwner.
        :type asn_org: str
        """

        self._asn_org = asn_org

    @property
    def isp(self):
        """Gets the isp of this IpAddressDetailsIpOwner.


        :return: The isp of this IpAddressDetailsIpOwner.
        :rtype: str
        """
        return self._isp

    @isp.setter
    def isp(self, isp):
        """Sets the isp of this IpAddressDetailsIpOwner.


        :param isp: The isp of this IpAddressDetailsIpOwner.
        :type isp: str
        """

        self._isp = isp

    @property
    def org(self):
        """Gets the org of this IpAddressDetailsIpOwner.


        :return: The org of this IpAddressDetailsIpOwner.
        :rtype: str
        """
        return self._org

    @org.setter
    def org(self, org):
        """Sets the org of this IpAddressDetailsIpOwner.


        :param org: The org of this IpAddressDetailsIpOwner.
        :type org: str
        """

        self._org = org
