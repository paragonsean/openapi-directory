# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_details_action import PolicyDetailsAction
from openapi_server.models.policy_details_actor import PolicyDetailsActor
from openapi_server import util


class FindingPolicyDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: PolicyDetailsAction=None, actor: PolicyDetailsActor=None):
        """FindingPolicyDetails - a model defined in OpenAPI

        :param action: The action of this FindingPolicyDetails.
        :param actor: The actor of this FindingPolicyDetails.
        """
        self.openapi_types = {
            'action': PolicyDetailsAction,
            'actor': PolicyDetailsActor
        }

        self.attribute_map = {
            'action': 'action',
            'actor': 'actor'
        }

        self._action = action
        self._actor = actor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingPolicyDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Finding_policyDetails of this FindingPolicyDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this FindingPolicyDetails.


        :return: The action of this FindingPolicyDetails.
        :rtype: PolicyDetailsAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this FindingPolicyDetails.


        :param action: The action of this FindingPolicyDetails.
        :type action: PolicyDetailsAction
        """

        self._action = action

    @property
    def actor(self):
        """Gets the actor of this FindingPolicyDetails.


        :return: The actor of this FindingPolicyDetails.
        :rtype: PolicyDetailsActor
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this FindingPolicyDetails.


        :param actor: The actor of this FindingPolicyDetails.
        :type actor: PolicyDetailsActor
        """

        self._actor = actor
