# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcceptInvitationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, administrator_account_id: str=None, invitation_id: str=None, master_account: str=None):
        """AcceptInvitationRequest - a model defined in OpenAPI

        :param administrator_account_id: The administrator_account_id of this AcceptInvitationRequest.
        :param invitation_id: The invitation_id of this AcceptInvitationRequest.
        :param master_account: The master_account of this AcceptInvitationRequest.
        """
        self.openapi_types = {
            'administrator_account_id': str,
            'invitation_id': str,
            'master_account': str
        }

        self.attribute_map = {
            'administrator_account_id': 'administratorAccountId',
            'invitation_id': 'invitationId',
            'master_account': 'masterAccount'
        }

        self._administrator_account_id = administrator_account_id
        self._invitation_id = invitation_id
        self._master_account = master_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceptInvitationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceptInvitation_request of this AcceptInvitationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def administrator_account_id(self):
        """Gets the administrator_account_id of this AcceptInvitationRequest.

        The Amazon Web Services account ID for the account that sent the invitation.

        :return: The administrator_account_id of this AcceptInvitationRequest.
        :rtype: str
        """
        return self._administrator_account_id

    @administrator_account_id.setter
    def administrator_account_id(self, administrator_account_id):
        """Sets the administrator_account_id of this AcceptInvitationRequest.

        The Amazon Web Services account ID for the account that sent the invitation.

        :param administrator_account_id: The administrator_account_id of this AcceptInvitationRequest.
        :type administrator_account_id: str
        """

        self._administrator_account_id = administrator_account_id

    @property
    def invitation_id(self):
        """Gets the invitation_id of this AcceptInvitationRequest.

        The unique identifier for the invitation to accept.

        :return: The invitation_id of this AcceptInvitationRequest.
        :rtype: str
        """
        return self._invitation_id

    @invitation_id.setter
    def invitation_id(self, invitation_id):
        """Sets the invitation_id of this AcceptInvitationRequest.

        The unique identifier for the invitation to accept.

        :param invitation_id: The invitation_id of this AcceptInvitationRequest.
        :type invitation_id: str
        """
        if invitation_id is None:
            raise ValueError("Invalid value for `invitation_id`, must not be `None`")

        self._invitation_id = invitation_id

    @property
    def master_account(self):
        """Gets the master_account of this AcceptInvitationRequest.

        (Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.

        :return: The master_account of this AcceptInvitationRequest.
        :rtype: str
        """
        return self._master_account

    @master_account.setter
    def master_account(self, master_account):
        """Sets the master_account of this AcceptInvitationRequest.

        (Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.

        :param master_account: The master_account of this AcceptInvitationRequest.
        :type master_account: str
        """

        self._master_account = master_account
