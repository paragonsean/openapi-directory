# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bucket_level_permissions_access_control_list import BucketLevelPermissionsAccessControlList
from openapi_server.models.bucket_level_permissions_block_public_access import BucketLevelPermissionsBlockPublicAccess
from openapi_server.models.bucket_level_permissions_bucket_policy import BucketLevelPermissionsBucketPolicy
from openapi_server import util


class BucketPermissionConfigurationBucketLevelPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_control_list: BucketLevelPermissionsAccessControlList=None, block_public_access: BucketLevelPermissionsBlockPublicAccess=None, bucket_policy: BucketLevelPermissionsBucketPolicy=None):
        """BucketPermissionConfigurationBucketLevelPermissions - a model defined in OpenAPI

        :param access_control_list: The access_control_list of this BucketPermissionConfigurationBucketLevelPermissions.
        :param block_public_access: The block_public_access of this BucketPermissionConfigurationBucketLevelPermissions.
        :param bucket_policy: The bucket_policy of this BucketPermissionConfigurationBucketLevelPermissions.
        """
        self.openapi_types = {
            'access_control_list': BucketLevelPermissionsAccessControlList,
            'block_public_access': BucketLevelPermissionsBlockPublicAccess,
            'bucket_policy': BucketLevelPermissionsBucketPolicy
        }

        self.attribute_map = {
            'access_control_list': 'accessControlList',
            'block_public_access': 'blockPublicAccess',
            'bucket_policy': 'bucketPolicy'
        }

        self._access_control_list = access_control_list
        self._block_public_access = block_public_access
        self._bucket_policy = bucket_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketPermissionConfigurationBucketLevelPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketPermissionConfiguration_bucketLevelPermissions of this BucketPermissionConfigurationBucketLevelPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_control_list(self):
        """Gets the access_control_list of this BucketPermissionConfigurationBucketLevelPermissions.


        :return: The access_control_list of this BucketPermissionConfigurationBucketLevelPermissions.
        :rtype: BucketLevelPermissionsAccessControlList
        """
        return self._access_control_list

    @access_control_list.setter
    def access_control_list(self, access_control_list):
        """Sets the access_control_list of this BucketPermissionConfigurationBucketLevelPermissions.


        :param access_control_list: The access_control_list of this BucketPermissionConfigurationBucketLevelPermissions.
        :type access_control_list: BucketLevelPermissionsAccessControlList
        """

        self._access_control_list = access_control_list

    @property
    def block_public_access(self):
        """Gets the block_public_access of this BucketPermissionConfigurationBucketLevelPermissions.


        :return: The block_public_access of this BucketPermissionConfigurationBucketLevelPermissions.
        :rtype: BucketLevelPermissionsBlockPublicAccess
        """
        return self._block_public_access

    @block_public_access.setter
    def block_public_access(self, block_public_access):
        """Sets the block_public_access of this BucketPermissionConfigurationBucketLevelPermissions.


        :param block_public_access: The block_public_access of this BucketPermissionConfigurationBucketLevelPermissions.
        :type block_public_access: BucketLevelPermissionsBlockPublicAccess
        """

        self._block_public_access = block_public_access

    @property
    def bucket_policy(self):
        """Gets the bucket_policy of this BucketPermissionConfigurationBucketLevelPermissions.


        :return: The bucket_policy of this BucketPermissionConfigurationBucketLevelPermissions.
        :rtype: BucketLevelPermissionsBucketPolicy
        """
        return self._bucket_policy

    @bucket_policy.setter
    def bucket_policy(self, bucket_policy):
        """Sets the bucket_policy of this BucketPermissionConfigurationBucketLevelPermissions.


        :param bucket_policy: The bucket_policy of this BucketPermissionConfigurationBucketLevelPermissions.
        :type bucket_policy: BucketLevelPermissionsBucketPolicy
        """

        self._bucket_policy = bucket_policy
