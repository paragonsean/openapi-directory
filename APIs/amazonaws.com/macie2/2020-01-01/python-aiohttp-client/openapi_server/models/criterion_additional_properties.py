# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CriterionAdditionalProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, eq: List=None, eq_exact_match: List=None, gt: int=None, gte: int=None, lt: int=None, lte: int=None, neq: List=None):
        """CriterionAdditionalProperties - a model defined in OpenAPI

        :param eq: The eq of this CriterionAdditionalProperties.
        :param eq_exact_match: The eq_exact_match of this CriterionAdditionalProperties.
        :param gt: The gt of this CriterionAdditionalProperties.
        :param gte: The gte of this CriterionAdditionalProperties.
        :param lt: The lt of this CriterionAdditionalProperties.
        :param lte: The lte of this CriterionAdditionalProperties.
        :param neq: The neq of this CriterionAdditionalProperties.
        """
        self.openapi_types = {
            'eq': List,
            'eq_exact_match': List,
            'gt': int,
            'gte': int,
            'lt': int,
            'lte': int,
            'neq': List
        }

        self.attribute_map = {
            'eq': 'eq',
            'eq_exact_match': 'eqExactMatch',
            'gt': 'gt',
            'gte': 'gte',
            'lt': 'lt',
            'lte': 'lte',
            'neq': 'neq'
        }

        self._eq = eq
        self._eq_exact_match = eq_exact_match
        self._gt = gt
        self._gte = gte
        self._lt = lt
        self._lte = lte
        self._neq = neq

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CriterionAdditionalProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CriterionAdditionalProperties of this CriterionAdditionalProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eq(self):
        """Gets the eq of this CriterionAdditionalProperties.


        :return: The eq of this CriterionAdditionalProperties.
        :rtype: List
        """
        return self._eq

    @eq.setter
    def eq(self, eq):
        """Sets the eq of this CriterionAdditionalProperties.


        :param eq: The eq of this CriterionAdditionalProperties.
        :type eq: List
        """

        self._eq = eq

    @property
    def eq_exact_match(self):
        """Gets the eq_exact_match of this CriterionAdditionalProperties.


        :return: The eq_exact_match of this CriterionAdditionalProperties.
        :rtype: List
        """
        return self._eq_exact_match

    @eq_exact_match.setter
    def eq_exact_match(self, eq_exact_match):
        """Sets the eq_exact_match of this CriterionAdditionalProperties.


        :param eq_exact_match: The eq_exact_match of this CriterionAdditionalProperties.
        :type eq_exact_match: List
        """

        self._eq_exact_match = eq_exact_match

    @property
    def gt(self):
        """Gets the gt of this CriterionAdditionalProperties.


        :return: The gt of this CriterionAdditionalProperties.
        :rtype: int
        """
        return self._gt

    @gt.setter
    def gt(self, gt):
        """Sets the gt of this CriterionAdditionalProperties.


        :param gt: The gt of this CriterionAdditionalProperties.
        :type gt: int
        """

        self._gt = gt

    @property
    def gte(self):
        """Gets the gte of this CriterionAdditionalProperties.


        :return: The gte of this CriterionAdditionalProperties.
        :rtype: int
        """
        return self._gte

    @gte.setter
    def gte(self, gte):
        """Sets the gte of this CriterionAdditionalProperties.


        :param gte: The gte of this CriterionAdditionalProperties.
        :type gte: int
        """

        self._gte = gte

    @property
    def lt(self):
        """Gets the lt of this CriterionAdditionalProperties.


        :return: The lt of this CriterionAdditionalProperties.
        :rtype: int
        """
        return self._lt

    @lt.setter
    def lt(self, lt):
        """Sets the lt of this CriterionAdditionalProperties.


        :param lt: The lt of this CriterionAdditionalProperties.
        :type lt: int
        """

        self._lt = lt

    @property
    def lte(self):
        """Gets the lte of this CriterionAdditionalProperties.


        :return: The lte of this CriterionAdditionalProperties.
        :rtype: int
        """
        return self._lte

    @lte.setter
    def lte(self, lte):
        """Sets the lte of this CriterionAdditionalProperties.


        :param lte: The lte of this CriterionAdditionalProperties.
        :type lte: int
        """

        self._lte = lte

    @property
    def neq(self):
        """Gets the neq of this CriterionAdditionalProperties.


        :return: The neq of this CriterionAdditionalProperties.
        :rtype: List
        """
        return self._neq

    @neq.setter
    def neq(self, neq):
        """Sets the neq of this CriterionAdditionalProperties.


        :param neq: The neq of this CriterionAdditionalProperties.
        :type neq: List
        """

        self._neq = neq
