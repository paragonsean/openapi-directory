# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_bucket_criteria_for_job_excludes import S3BucketCriteriaForJobExcludes
from openapi_server.models.s3_bucket_criteria_for_job_includes import S3BucketCriteriaForJobIncludes
from openapi_server import util


class CreateClassificationJobRequestS3JobDefinitionBucketCriteria(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, excludes: S3BucketCriteriaForJobExcludes=None, includes: S3BucketCriteriaForJobIncludes=None):
        """CreateClassificationJobRequestS3JobDefinitionBucketCriteria - a model defined in OpenAPI

        :param excludes: The excludes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        :param includes: The includes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        """
        self.openapi_types = {
            'excludes': S3BucketCriteriaForJobExcludes,
            'includes': S3BucketCriteriaForJobIncludes
        }

        self.attribute_map = {
            'excludes': 'excludes',
            'includes': 'includes'
        }

        self._excludes = excludes
        self._includes = includes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClassificationJobRequestS3JobDefinitionBucketCriteria':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClassificationJob_request_s3JobDefinition_bucketCriteria of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def excludes(self):
        """Gets the excludes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.


        :return: The excludes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        :rtype: S3BucketCriteriaForJobExcludes
        """
        return self._excludes

    @excludes.setter
    def excludes(self, excludes):
        """Sets the excludes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.


        :param excludes: The excludes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        :type excludes: S3BucketCriteriaForJobExcludes
        """

        self._excludes = excludes

    @property
    def includes(self):
        """Gets the includes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.


        :return: The includes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        :rtype: S3BucketCriteriaForJobIncludes
        """
        return self._includes

    @includes.setter
    def includes(self, includes):
        """Sets the includes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.


        :param includes: The includes of this CreateClassificationJobRequestS3JobDefinitionBucketCriteria.
        :type includes: S3BucketCriteriaForJobIncludes
        """

        self._includes = includes
