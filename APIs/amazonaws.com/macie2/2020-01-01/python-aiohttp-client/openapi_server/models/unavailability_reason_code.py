# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnavailabilityReasonCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    OBJECT_EXCEEDS_SIZE_QUOTA = 'OBJECT_EXCEEDS_SIZE_QUOTA'
    UNSUPPORTED_OBJECT_TYPE = 'UNSUPPORTED_OBJECT_TYPE'
    UNSUPPORTED_FINDING_TYPE = 'UNSUPPORTED_FINDING_TYPE'
    INVALID_CLASSIFICATION_RESULT = 'INVALID_CLASSIFICATION_RESULT'
    OBJECT_UNAVAILABLE = 'OBJECT_UNAVAILABLE'

    def __init__(self):
        """UnavailabilityReasonCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnavailabilityReasonCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnavailabilityReasonCode of this UnavailabilityReasonCode.
        """
        return util.deserialize_model(dikt, cls)
