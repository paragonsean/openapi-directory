# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BucketMetadataReplicationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replicated: bool=None, replicated_externally: bool=None, replication_accounts: List=None):
        """BucketMetadataReplicationDetails - a model defined in OpenAPI

        :param replicated: The replicated of this BucketMetadataReplicationDetails.
        :param replicated_externally: The replicated_externally of this BucketMetadataReplicationDetails.
        :param replication_accounts: The replication_accounts of this BucketMetadataReplicationDetails.
        """
        self.openapi_types = {
            'replicated': bool,
            'replicated_externally': bool,
            'replication_accounts': List
        }

        self.attribute_map = {
            'replicated': 'replicated',
            'replicated_externally': 'replicatedExternally',
            'replication_accounts': 'replicationAccounts'
        }

        self._replicated = replicated
        self._replicated_externally = replicated_externally
        self._replication_accounts = replication_accounts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketMetadataReplicationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketMetadata_replicationDetails of this BucketMetadataReplicationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replicated(self):
        """Gets the replicated of this BucketMetadataReplicationDetails.


        :return: The replicated of this BucketMetadataReplicationDetails.
        :rtype: bool
        """
        return self._replicated

    @replicated.setter
    def replicated(self, replicated):
        """Sets the replicated of this BucketMetadataReplicationDetails.


        :param replicated: The replicated of this BucketMetadataReplicationDetails.
        :type replicated: bool
        """

        self._replicated = replicated

    @property
    def replicated_externally(self):
        """Gets the replicated_externally of this BucketMetadataReplicationDetails.


        :return: The replicated_externally of this BucketMetadataReplicationDetails.
        :rtype: bool
        """
        return self._replicated_externally

    @replicated_externally.setter
    def replicated_externally(self, replicated_externally):
        """Sets the replicated_externally of this BucketMetadataReplicationDetails.


        :param replicated_externally: The replicated_externally of this BucketMetadataReplicationDetails.
        :type replicated_externally: bool
        """

        self._replicated_externally = replicated_externally

    @property
    def replication_accounts(self):
        """Gets the replication_accounts of this BucketMetadataReplicationDetails.


        :return: The replication_accounts of this BucketMetadataReplicationDetails.
        :rtype: List
        """
        return self._replication_accounts

    @replication_accounts.setter
    def replication_accounts(self, replication_accounts):
        """Sets the replication_accounts of this BucketMetadataReplicationDetails.


        :param replication_accounts: The replication_accounts of this BucketMetadataReplicationDetails.
        :type replication_accounts: List
        """

        self._replication_accounts = replication_accounts
