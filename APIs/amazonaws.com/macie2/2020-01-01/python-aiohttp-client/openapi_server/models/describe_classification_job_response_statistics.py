# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeClassificationJobResponseStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approximate_number_of_objects_to_process: float=None, number_of_runs: float=None):
        """DescribeClassificationJobResponseStatistics - a model defined in OpenAPI

        :param approximate_number_of_objects_to_process: The approximate_number_of_objects_to_process of this DescribeClassificationJobResponseStatistics.
        :param number_of_runs: The number_of_runs of this DescribeClassificationJobResponseStatistics.
        """
        self.openapi_types = {
            'approximate_number_of_objects_to_process': float,
            'number_of_runs': float
        }

        self.attribute_map = {
            'approximate_number_of_objects_to_process': 'approximateNumberOfObjectsToProcess',
            'number_of_runs': 'numberOfRuns'
        }

        self._approximate_number_of_objects_to_process = approximate_number_of_objects_to_process
        self._number_of_runs = number_of_runs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeClassificationJobResponseStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeClassificationJobResponse_statistics of this DescribeClassificationJobResponseStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approximate_number_of_objects_to_process(self):
        """Gets the approximate_number_of_objects_to_process of this DescribeClassificationJobResponseStatistics.


        :return: The approximate_number_of_objects_to_process of this DescribeClassificationJobResponseStatistics.
        :rtype: float
        """
        return self._approximate_number_of_objects_to_process

    @approximate_number_of_objects_to_process.setter
    def approximate_number_of_objects_to_process(self, approximate_number_of_objects_to_process):
        """Sets the approximate_number_of_objects_to_process of this DescribeClassificationJobResponseStatistics.


        :param approximate_number_of_objects_to_process: The approximate_number_of_objects_to_process of this DescribeClassificationJobResponseStatistics.
        :type approximate_number_of_objects_to_process: float
        """

        self._approximate_number_of_objects_to_process = approximate_number_of_objects_to_process

    @property
    def number_of_runs(self):
        """Gets the number_of_runs of this DescribeClassificationJobResponseStatistics.


        :return: The number_of_runs of this DescribeClassificationJobResponseStatistics.
        :rtype: float
        """
        return self._number_of_runs

    @number_of_runs.setter
    def number_of_runs(self, number_of_runs):
        """Sets the number_of_runs of this DescribeClassificationJobResponseStatistics.


        :param number_of_runs: The number_of_runs of this DescribeClassificationJobResponseStatistics.
        :type number_of_runs: float
        """

        self._number_of_runs = number_of_runs
