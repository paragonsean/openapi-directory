# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.findings_filter_action import FindingsFilterAction
from openapi_server.models.get_findings_filter_response_finding_criteria import GetFindingsFilterResponseFindingCriteria
from openapi_server import util


class GetFindingsFilterResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: FindingsFilterAction=None, arn: str=None, description: str=None, finding_criteria: GetFindingsFilterResponseFindingCriteria=None, id: str=None, name: str=None, position: int=None, tags: Dict=None):
        """GetFindingsFilterResponse - a model defined in OpenAPI

        :param action: The action of this GetFindingsFilterResponse.
        :param arn: The arn of this GetFindingsFilterResponse.
        :param description: The description of this GetFindingsFilterResponse.
        :param finding_criteria: The finding_criteria of this GetFindingsFilterResponse.
        :param id: The id of this GetFindingsFilterResponse.
        :param name: The name of this GetFindingsFilterResponse.
        :param position: The position of this GetFindingsFilterResponse.
        :param tags: The tags of this GetFindingsFilterResponse.
        """
        self.openapi_types = {
            'action': FindingsFilterAction,
            'arn': str,
            'description': str,
            'finding_criteria': GetFindingsFilterResponseFindingCriteria,
            'id': str,
            'name': str,
            'position': int,
            'tags': Dict
        }

        self.attribute_map = {
            'action': 'action',
            'arn': 'arn',
            'description': 'description',
            'finding_criteria': 'findingCriteria',
            'id': 'id',
            'name': 'name',
            'position': 'position',
            'tags': 'tags'
        }

        self._action = action
        self._arn = arn
        self._description = description
        self._finding_criteria = finding_criteria
        self._id = id
        self._name = name
        self._position = position
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFindingsFilterResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetFindingsFilterResponse of this GetFindingsFilterResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this GetFindingsFilterResponse.


        :return: The action of this GetFindingsFilterResponse.
        :rtype: FindingsFilterAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this GetFindingsFilterResponse.


        :param action: The action of this GetFindingsFilterResponse.
        :type action: FindingsFilterAction
        """

        self._action = action

    @property
    def arn(self):
        """Gets the arn of this GetFindingsFilterResponse.


        :return: The arn of this GetFindingsFilterResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetFindingsFilterResponse.


        :param arn: The arn of this GetFindingsFilterResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def description(self):
        """Gets the description of this GetFindingsFilterResponse.


        :return: The description of this GetFindingsFilterResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetFindingsFilterResponse.


        :param description: The description of this GetFindingsFilterResponse.
        :type description: str
        """

        self._description = description

    @property
    def finding_criteria(self):
        """Gets the finding_criteria of this GetFindingsFilterResponse.


        :return: The finding_criteria of this GetFindingsFilterResponse.
        :rtype: GetFindingsFilterResponseFindingCriteria
        """
        return self._finding_criteria

    @finding_criteria.setter
    def finding_criteria(self, finding_criteria):
        """Sets the finding_criteria of this GetFindingsFilterResponse.


        :param finding_criteria: The finding_criteria of this GetFindingsFilterResponse.
        :type finding_criteria: GetFindingsFilterResponseFindingCriteria
        """

        self._finding_criteria = finding_criteria

    @property
    def id(self):
        """Gets the id of this GetFindingsFilterResponse.


        :return: The id of this GetFindingsFilterResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetFindingsFilterResponse.


        :param id: The id of this GetFindingsFilterResponse.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GetFindingsFilterResponse.


        :return: The name of this GetFindingsFilterResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetFindingsFilterResponse.


        :param name: The name of this GetFindingsFilterResponse.
        :type name: str
        """

        self._name = name

    @property
    def position(self):
        """Gets the position of this GetFindingsFilterResponse.


        :return: The position of this GetFindingsFilterResponse.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this GetFindingsFilterResponse.


        :param position: The position of this GetFindingsFilterResponse.
        :type position: int
        """

        self._position = position

    @property
    def tags(self):
        """Gets the tags of this GetFindingsFilterResponse.


        :return: The tags of this GetFindingsFilterResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetFindingsFilterResponse.


        :param tags: The tags of this GetFindingsFilterResponse.
        :type tags: Dict
        """

        self._tags = tags
