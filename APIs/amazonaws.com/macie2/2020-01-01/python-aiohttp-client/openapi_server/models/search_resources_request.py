# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_resources_request_bucket_criteria import SearchResourcesRequestBucketCriteria
from openapi_server.models.search_resources_request_sort_criteria import SearchResourcesRequestSortCriteria
from openapi_server import util


class SearchResourcesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_criteria: SearchResourcesRequestBucketCriteria=None, max_results: int=None, next_token: str=None, sort_criteria: SearchResourcesRequestSortCriteria=None):
        """SearchResourcesRequest - a model defined in OpenAPI

        :param bucket_criteria: The bucket_criteria of this SearchResourcesRequest.
        :param max_results: The max_results of this SearchResourcesRequest.
        :param next_token: The next_token of this SearchResourcesRequest.
        :param sort_criteria: The sort_criteria of this SearchResourcesRequest.
        """
        self.openapi_types = {
            'bucket_criteria': SearchResourcesRequestBucketCriteria,
            'max_results': int,
            'next_token': str,
            'sort_criteria': SearchResourcesRequestSortCriteria
        }

        self.attribute_map = {
            'bucket_criteria': 'bucketCriteria',
            'max_results': 'maxResults',
            'next_token': 'nextToken',
            'sort_criteria': 'sortCriteria'
        }

        self._bucket_criteria = bucket_criteria
        self._max_results = max_results
        self._next_token = next_token
        self._sort_criteria = sort_criteria

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResourcesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchResources_request of this SearchResourcesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_criteria(self):
        """Gets the bucket_criteria of this SearchResourcesRequest.


        :return: The bucket_criteria of this SearchResourcesRequest.
        :rtype: SearchResourcesRequestBucketCriteria
        """
        return self._bucket_criteria

    @bucket_criteria.setter
    def bucket_criteria(self, bucket_criteria):
        """Sets the bucket_criteria of this SearchResourcesRequest.


        :param bucket_criteria: The bucket_criteria of this SearchResourcesRequest.
        :type bucket_criteria: SearchResourcesRequestBucketCriteria
        """

        self._bucket_criteria = bucket_criteria

    @property
    def max_results(self):
        """Gets the max_results of this SearchResourcesRequest.

        The maximum number of items to include in each page of the response. The default value is 50.

        :return: The max_results of this SearchResourcesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this SearchResourcesRequest.

        The maximum number of items to include in each page of the response. The default value is 50.

        :param max_results: The max_results of this SearchResourcesRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this SearchResourcesRequest.

        The nextToken string that specifies which page of results to return in a paginated response.

        :return: The next_token of this SearchResourcesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this SearchResourcesRequest.

        The nextToken string that specifies which page of results to return in a paginated response.

        :param next_token: The next_token of this SearchResourcesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def sort_criteria(self):
        """Gets the sort_criteria of this SearchResourcesRequest.


        :return: The sort_criteria of this SearchResourcesRequest.
        :rtype: SearchResourcesRequestSortCriteria
        """
        return self._sort_criteria

    @sort_criteria.setter
    def sort_criteria(self, sort_criteria):
        """Sets the sort_criteria of this SearchResourcesRequest.


        :param sort_criteria: The sort_criteria of this SearchResourcesRequest.
        :type sort_criteria: SearchResourcesRequestSortCriteria
        """

        self._sort_criteria = sort_criteria
