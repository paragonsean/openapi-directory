# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindingType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SENSITIVE_DATA_COLON_S3_OBJECT_SLASH_MULTIPLE = 'SensitiveData:S3Object/Multiple'
    SENSITIVE_DATA_COLON_S3_OBJECT_SLASH_FINANCIAL = 'SensitiveData:S3Object/Financial'
    SENSITIVE_DATA_COLON_S3_OBJECT_SLASH_PERSONAL = 'SensitiveData:S3Object/Personal'
    SENSITIVE_DATA_COLON_S3_OBJECT_SLASH_CREDENTIALS = 'SensitiveData:S3Object/Credentials'
    SENSITIVE_DATA_COLON_S3_OBJECT_SLASH_CUSTOM_IDENTIFIER = 'SensitiveData:S3Object/CustomIdentifier'
    POLICY_COLON_IAM_USER_SLASH_S3_BUCKET_PUBLIC = 'Policy:IAMUser/S3BucketPublic'
    POLICY_COLON_IAM_USER_SLASH_S3_BUCKET_SHARED_EXTERNALLY = 'Policy:IAMUser/S3BucketSharedExternally'
    POLICY_COLON_IAM_USER_SLASH_S3_BUCKET_REPLICATED_EXTERNALLY = 'Policy:IAMUser/S3BucketReplicatedExternally'
    POLICY_COLON_IAM_USER_SLASH_S3_BUCKET_ENCRYPTION_DISABLED = 'Policy:IAMUser/S3BucketEncryptionDisabled'
    POLICY_COLON_IAM_USER_SLASH_S3_BLOCK_PUBLIC_ACCESS_DISABLED = 'Policy:IAMUser/S3BlockPublicAccessDisabled'
    POLICY_COLON_IAM_USER_SLASH_S3_BUCKET_SHARED_WITH_CLOUD_FRONT = 'Policy:IAMUser/S3BucketSharedWithCloudFront'

    def __init__(self):
        """FindingType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindingType of this FindingType.
        """
        return util.deserialize_model(dikt, cls)
