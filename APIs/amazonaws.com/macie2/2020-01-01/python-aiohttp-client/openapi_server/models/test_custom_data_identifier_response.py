# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestCustomDataIdentifierResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_count: int=None):
        """TestCustomDataIdentifierResponse - a model defined in OpenAPI

        :param match_count: The match_count of this TestCustomDataIdentifierResponse.
        """
        self.openapi_types = {
            'match_count': int
        }

        self.attribute_map = {
            'match_count': 'matchCount'
        }

        self._match_count = match_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestCustomDataIdentifierResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestCustomDataIdentifierResponse of this TestCustomDataIdentifierResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_count(self):
        """Gets the match_count of this TestCustomDataIdentifierResponse.


        :return: The match_count of this TestCustomDataIdentifierResponse.
        :rtype: int
        """
        return self._match_count

    @match_count.setter
    def match_count(self, match_count):
        """Sets the match_count of this TestCustomDataIdentifierResponse.


        :param match_count: The match_count of this TestCustomDataIdentifierResponse.
        :type match_count: int
        """

        self._match_count = match_count
