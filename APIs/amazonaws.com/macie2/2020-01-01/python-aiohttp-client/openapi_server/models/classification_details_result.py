# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.classification_result_custom_data_identifiers import ClassificationResultCustomDataIdentifiers
from openapi_server.models.classification_result_status import ClassificationResultStatus
from openapi_server import util


class ClassificationDetailsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_occurrences: bool=None, custom_data_identifiers: ClassificationResultCustomDataIdentifiers=None, mime_type: str=None, sensitive_data: List=None, size_classified: int=None, status: ClassificationResultStatus=None):
        """ClassificationDetailsResult - a model defined in OpenAPI

        :param additional_occurrences: The additional_occurrences of this ClassificationDetailsResult.
        :param custom_data_identifiers: The custom_data_identifiers of this ClassificationDetailsResult.
        :param mime_type: The mime_type of this ClassificationDetailsResult.
        :param sensitive_data: The sensitive_data of this ClassificationDetailsResult.
        :param size_classified: The size_classified of this ClassificationDetailsResult.
        :param status: The status of this ClassificationDetailsResult.
        """
        self.openapi_types = {
            'additional_occurrences': bool,
            'custom_data_identifiers': ClassificationResultCustomDataIdentifiers,
            'mime_type': str,
            'sensitive_data': List,
            'size_classified': int,
            'status': ClassificationResultStatus
        }

        self.attribute_map = {
            'additional_occurrences': 'additionalOccurrences',
            'custom_data_identifiers': 'customDataIdentifiers',
            'mime_type': 'mimeType',
            'sensitive_data': 'sensitiveData',
            'size_classified': 'sizeClassified',
            'status': 'status'
        }

        self._additional_occurrences = additional_occurrences
        self._custom_data_identifiers = custom_data_identifiers
        self._mime_type = mime_type
        self._sensitive_data = sensitive_data
        self._size_classified = size_classified
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClassificationDetailsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClassificationDetails_result of this ClassificationDetailsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_occurrences(self):
        """Gets the additional_occurrences of this ClassificationDetailsResult.


        :return: The additional_occurrences of this ClassificationDetailsResult.
        :rtype: bool
        """
        return self._additional_occurrences

    @additional_occurrences.setter
    def additional_occurrences(self, additional_occurrences):
        """Sets the additional_occurrences of this ClassificationDetailsResult.


        :param additional_occurrences: The additional_occurrences of this ClassificationDetailsResult.
        :type additional_occurrences: bool
        """

        self._additional_occurrences = additional_occurrences

    @property
    def custom_data_identifiers(self):
        """Gets the custom_data_identifiers of this ClassificationDetailsResult.


        :return: The custom_data_identifiers of this ClassificationDetailsResult.
        :rtype: ClassificationResultCustomDataIdentifiers
        """
        return self._custom_data_identifiers

    @custom_data_identifiers.setter
    def custom_data_identifiers(self, custom_data_identifiers):
        """Sets the custom_data_identifiers of this ClassificationDetailsResult.


        :param custom_data_identifiers: The custom_data_identifiers of this ClassificationDetailsResult.
        :type custom_data_identifiers: ClassificationResultCustomDataIdentifiers
        """

        self._custom_data_identifiers = custom_data_identifiers

    @property
    def mime_type(self):
        """Gets the mime_type of this ClassificationDetailsResult.


        :return: The mime_type of this ClassificationDetailsResult.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this ClassificationDetailsResult.


        :param mime_type: The mime_type of this ClassificationDetailsResult.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def sensitive_data(self):
        """Gets the sensitive_data of this ClassificationDetailsResult.


        :return: The sensitive_data of this ClassificationDetailsResult.
        :rtype: List
        """
        return self._sensitive_data

    @sensitive_data.setter
    def sensitive_data(self, sensitive_data):
        """Sets the sensitive_data of this ClassificationDetailsResult.


        :param sensitive_data: The sensitive_data of this ClassificationDetailsResult.
        :type sensitive_data: List
        """

        self._sensitive_data = sensitive_data

    @property
    def size_classified(self):
        """Gets the size_classified of this ClassificationDetailsResult.


        :return: The size_classified of this ClassificationDetailsResult.
        :rtype: int
        """
        return self._size_classified

    @size_classified.setter
    def size_classified(self, size_classified):
        """Sets the size_classified of this ClassificationDetailsResult.


        :param size_classified: The size_classified of this ClassificationDetailsResult.
        :type size_classified: int
        """

        self._size_classified = size_classified

    @property
    def status(self):
        """Gets the status of this ClassificationDetailsResult.


        :return: The status of this ClassificationDetailsResult.
        :rtype: ClassificationResultStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ClassificationDetailsResult.


        :param status: The status of this ClassificationDetailsResult.
        :type status: ClassificationResultStatus
        """

        self._status = status
