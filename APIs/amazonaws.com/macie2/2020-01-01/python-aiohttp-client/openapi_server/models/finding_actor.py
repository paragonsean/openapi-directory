# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.finding_actor_domain_details import FindingActorDomainDetails
from openapi_server.models.finding_actor_ip_address_details import FindingActorIpAddressDetails
from openapi_server.models.finding_actor_user_identity import FindingActorUserIdentity
from openapi_server import util


class FindingActor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_details: FindingActorDomainDetails=None, ip_address_details: FindingActorIpAddressDetails=None, user_identity: FindingActorUserIdentity=None):
        """FindingActor - a model defined in OpenAPI

        :param domain_details: The domain_details of this FindingActor.
        :param ip_address_details: The ip_address_details of this FindingActor.
        :param user_identity: The user_identity of this FindingActor.
        """
        self.openapi_types = {
            'domain_details': FindingActorDomainDetails,
            'ip_address_details': FindingActorIpAddressDetails,
            'user_identity': FindingActorUserIdentity
        }

        self.attribute_map = {
            'domain_details': 'domainDetails',
            'ip_address_details': 'ipAddressDetails',
            'user_identity': 'userIdentity'
        }

        self._domain_details = domain_details
        self._ip_address_details = ip_address_details
        self._user_identity = user_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingActor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindingActor of this FindingActor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_details(self):
        """Gets the domain_details of this FindingActor.


        :return: The domain_details of this FindingActor.
        :rtype: FindingActorDomainDetails
        """
        return self._domain_details

    @domain_details.setter
    def domain_details(self, domain_details):
        """Sets the domain_details of this FindingActor.


        :param domain_details: The domain_details of this FindingActor.
        :type domain_details: FindingActorDomainDetails
        """

        self._domain_details = domain_details

    @property
    def ip_address_details(self):
        """Gets the ip_address_details of this FindingActor.


        :return: The ip_address_details of this FindingActor.
        :rtype: FindingActorIpAddressDetails
        """
        return self._ip_address_details

    @ip_address_details.setter
    def ip_address_details(self, ip_address_details):
        """Sets the ip_address_details of this FindingActor.


        :param ip_address_details: The ip_address_details of this FindingActor.
        :type ip_address_details: FindingActorIpAddressDetails
        """

        self._ip_address_details = ip_address_details

    @property
    def user_identity(self):
        """Gets the user_identity of this FindingActor.


        :return: The user_identity of this FindingActor.
        :rtype: FindingActorUserIdentity
        """
        return self._user_identity

    @user_identity.setter
    def user_identity(self, user_identity):
        """Sets the user_identity of this FindingActor.


        :param user_identity: The user_identity of this FindingActor.
        :type user_identity: FindingActorUserIdentity
        """

        self._user_identity = user_identity
