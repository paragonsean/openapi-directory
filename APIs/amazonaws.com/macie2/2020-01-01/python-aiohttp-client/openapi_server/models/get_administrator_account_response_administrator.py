# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.relationship_status import RelationshipStatus
from openapi_server import util


class GetAdministratorAccountResponseAdministrator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, invitation_id: str=None, invited_at: datetime=None, relationship_status: RelationshipStatus=None):
        """GetAdministratorAccountResponseAdministrator - a model defined in OpenAPI

        :param account_id: The account_id of this GetAdministratorAccountResponseAdministrator.
        :param invitation_id: The invitation_id of this GetAdministratorAccountResponseAdministrator.
        :param invited_at: The invited_at of this GetAdministratorAccountResponseAdministrator.
        :param relationship_status: The relationship_status of this GetAdministratorAccountResponseAdministrator.
        """
        self.openapi_types = {
            'account_id': str,
            'invitation_id': str,
            'invited_at': datetime,
            'relationship_status': RelationshipStatus
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'invitation_id': 'invitationId',
            'invited_at': 'invitedAt',
            'relationship_status': 'relationshipStatus'
        }

        self._account_id = account_id
        self._invitation_id = invitation_id
        self._invited_at = invited_at
        self._relationship_status = relationship_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAdministratorAccountResponseAdministrator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAdministratorAccountResponse_administrator of this GetAdministratorAccountResponseAdministrator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this GetAdministratorAccountResponseAdministrator.


        :return: The account_id of this GetAdministratorAccountResponseAdministrator.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetAdministratorAccountResponseAdministrator.


        :param account_id: The account_id of this GetAdministratorAccountResponseAdministrator.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def invitation_id(self):
        """Gets the invitation_id of this GetAdministratorAccountResponseAdministrator.


        :return: The invitation_id of this GetAdministratorAccountResponseAdministrator.
        :rtype: str
        """
        return self._invitation_id

    @invitation_id.setter
    def invitation_id(self, invitation_id):
        """Sets the invitation_id of this GetAdministratorAccountResponseAdministrator.


        :param invitation_id: The invitation_id of this GetAdministratorAccountResponseAdministrator.
        :type invitation_id: str
        """

        self._invitation_id = invitation_id

    @property
    def invited_at(self):
        """Gets the invited_at of this GetAdministratorAccountResponseAdministrator.


        :return: The invited_at of this GetAdministratorAccountResponseAdministrator.
        :rtype: datetime
        """
        return self._invited_at

    @invited_at.setter
    def invited_at(self, invited_at):
        """Sets the invited_at of this GetAdministratorAccountResponseAdministrator.


        :param invited_at: The invited_at of this GetAdministratorAccountResponseAdministrator.
        :type invited_at: datetime
        """

        self._invited_at = invited_at

    @property
    def relationship_status(self):
        """Gets the relationship_status of this GetAdministratorAccountResponseAdministrator.


        :return: The relationship_status of this GetAdministratorAccountResponseAdministrator.
        :rtype: RelationshipStatus
        """
        return self._relationship_status

    @relationship_status.setter
    def relationship_status(self, relationship_status):
        """Sets the relationship_status of this GetAdministratorAccountResponseAdministrator.


        :param relationship_status: The relationship_status of this GetAdministratorAccountResponseAdministrator.
        :type relationship_status: RelationshipStatus
        """

        self._relationship_status = relationship_status
