# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateInvitationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_ids: List[str]=None, disable_email_notification: bool=None, message: str=None):
        """CreateInvitationsRequest - a model defined in OpenAPI

        :param account_ids: The account_ids of this CreateInvitationsRequest.
        :param disable_email_notification: The disable_email_notification of this CreateInvitationsRequest.
        :param message: The message of this CreateInvitationsRequest.
        """
        self.openapi_types = {
            'account_ids': List[str],
            'disable_email_notification': bool,
            'message': str
        }

        self.attribute_map = {
            'account_ids': 'accountIds',
            'disable_email_notification': 'disableEmailNotification',
            'message': 'message'
        }

        self._account_ids = account_ids
        self._disable_email_notification = disable_email_notification
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInvitationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInvitations_request of this CreateInvitationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_ids(self):
        """Gets the account_ids of this CreateInvitationsRequest.

        An array that lists Amazon Web Services account IDs, one for each account to send the invitation to.

        :return: The account_ids of this CreateInvitationsRequest.
        :rtype: List[str]
        """
        return self._account_ids

    @account_ids.setter
    def account_ids(self, account_ids):
        """Sets the account_ids of this CreateInvitationsRequest.

        An array that lists Amazon Web Services account IDs, one for each account to send the invitation to.

        :param account_ids: The account_ids of this CreateInvitationsRequest.
        :type account_ids: List[str]
        """
        if account_ids is None:
            raise ValueError("Invalid value for `account_ids`, must not be `None`")

        self._account_ids = account_ids

    @property
    def disable_email_notification(self):
        """Gets the disable_email_notification of this CreateInvitationsRequest.

        Specifies whether to send the invitation as an email message. If this value is false, Amazon Macie sends the invitation (as an email message) to the email address that you specified for the recipient's account when you associated the account with your account. The default value is false.

        :return: The disable_email_notification of this CreateInvitationsRequest.
        :rtype: bool
        """
        return self._disable_email_notification

    @disable_email_notification.setter
    def disable_email_notification(self, disable_email_notification):
        """Sets the disable_email_notification of this CreateInvitationsRequest.

        Specifies whether to send the invitation as an email message. If this value is false, Amazon Macie sends the invitation (as an email message) to the email address that you specified for the recipient's account when you associated the account with your account. The default value is false.

        :param disable_email_notification: The disable_email_notification of this CreateInvitationsRequest.
        :type disable_email_notification: bool
        """

        self._disable_email_notification = disable_email_notification

    @property
    def message(self):
        """Gets the message of this CreateInvitationsRequest.

        Custom text to include in the email message that contains the invitation. The text can contain as many as 80 alphanumeric characters.

        :return: The message of this CreateInvitationsRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this CreateInvitationsRequest.

        Custom text to include in the email message that contains the invitation. The text can contain as many as 80 alphanumeric characters.

        :param message: The message of this CreateInvitationsRequest.
        :type message: str
        """

        self._message = message
