# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.matching_resource_matching_bucket import MatchingResourceMatchingBucket
from openapi_server import util


class MatchingResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matching_bucket: MatchingResourceMatchingBucket=None):
        """MatchingResource - a model defined in OpenAPI

        :param matching_bucket: The matching_bucket of this MatchingResource.
        """
        self.openapi_types = {
            'matching_bucket': MatchingResourceMatchingBucket
        }

        self.attribute_map = {
            'matching_bucket': 'matchingBucket'
        }

        self._matching_bucket = matching_bucket

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchingResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchingResource of this MatchingResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matching_bucket(self):
        """Gets the matching_bucket of this MatchingResource.


        :return: The matching_bucket of this MatchingResource.
        :rtype: MatchingResourceMatchingBucket
        """
        return self._matching_bucket

    @matching_bucket.setter
    def matching_bucket(self, matching_bucket):
        """Sets the matching_bucket of this MatchingResource.


        :param matching_bucket: The matching_bucket of this MatchingResource.
        :type matching_bucket: MatchingResourceMatchingBucket
        """

        self._matching_bucket = matching_bucket
