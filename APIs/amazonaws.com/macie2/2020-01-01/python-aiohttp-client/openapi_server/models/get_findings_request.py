# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_findings_request_sort_criteria import GetFindingsRequestSortCriteria
from openapi_server import util


class GetFindingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finding_ids: List[str]=None, sort_criteria: GetFindingsRequestSortCriteria=None):
        """GetFindingsRequest - a model defined in OpenAPI

        :param finding_ids: The finding_ids of this GetFindingsRequest.
        :param sort_criteria: The sort_criteria of this GetFindingsRequest.
        """
        self.openapi_types = {
            'finding_ids': List[str],
            'sort_criteria': GetFindingsRequestSortCriteria
        }

        self.attribute_map = {
            'finding_ids': 'findingIds',
            'sort_criteria': 'sortCriteria'
        }

        self._finding_ids = finding_ids
        self._sort_criteria = sort_criteria

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFindingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetFindings_request of this GetFindingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finding_ids(self):
        """Gets the finding_ids of this GetFindingsRequest.

        An array of strings that lists the unique identifiers for the findings to retrieve. You can specify as many as 50 unique identifiers in this array.

        :return: The finding_ids of this GetFindingsRequest.
        :rtype: List[str]
        """
        return self._finding_ids

    @finding_ids.setter
    def finding_ids(self, finding_ids):
        """Sets the finding_ids of this GetFindingsRequest.

        An array of strings that lists the unique identifiers for the findings to retrieve. You can specify as many as 50 unique identifiers in this array.

        :param finding_ids: The finding_ids of this GetFindingsRequest.
        :type finding_ids: List[str]
        """
        if finding_ids is None:
            raise ValueError("Invalid value for `finding_ids`, must not be `None`")

        self._finding_ids = finding_ids

    @property
    def sort_criteria(self):
        """Gets the sort_criteria of this GetFindingsRequest.


        :return: The sort_criteria of this GetFindingsRequest.
        :rtype: GetFindingsRequestSortCriteria
        """
        return self._sort_criteria

    @sort_criteria.setter
    def sort_criteria(self, sort_criteria):
        """Sets the sort_criteria of this GetFindingsRequest.


        :param sort_criteria: The sort_criteria of this GetFindingsRequest.
        :type sort_criteria: GetFindingsRequestSortCriteria
        """

        self._sort_criteria = sort_criteria
