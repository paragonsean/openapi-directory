# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allows_unencrypted_object_uploads import AllowsUnencryptedObjectUploads
from openapi_server.models.bucket_metadata_error_code import BucketMetadataErrorCode
from openapi_server.models.bucket_metadata_job_details import BucketMetadataJobDetails
from openapi_server.models.bucket_metadata_object_count_by_encryption_type import BucketMetadataObjectCountByEncryptionType
from openapi_server.models.bucket_metadata_public_access import BucketMetadataPublicAccess
from openapi_server.models.bucket_metadata_replication_details import BucketMetadataReplicationDetails
from openapi_server.models.bucket_metadata_server_side_encryption import BucketMetadataServerSideEncryption
from openapi_server.models.bucket_metadata_unclassifiable_object_count import BucketMetadataUnclassifiableObjectCount
from openapi_server.models.bucket_metadata_unclassifiable_object_size_in_bytes import BucketMetadataUnclassifiableObjectSizeInBytes
from openapi_server.models.shared_access import SharedAccess
from openapi_server import util


class BucketMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, allows_unencrypted_object_uploads: AllowsUnencryptedObjectUploads=None, bucket_arn: str=None, bucket_created_at: datetime=None, bucket_name: str=None, classifiable_object_count: int=None, classifiable_size_in_bytes: int=None, error_code: BucketMetadataErrorCode=None, error_message: str=None, job_details: BucketMetadataJobDetails=None, last_automated_discovery_time: datetime=None, last_updated: datetime=None, object_count: int=None, object_count_by_encryption_type: BucketMetadataObjectCountByEncryptionType=None, public_access: BucketMetadataPublicAccess=None, region: str=None, replication_details: BucketMetadataReplicationDetails=None, sensitivity_score: int=None, server_side_encryption: BucketMetadataServerSideEncryption=None, shared_access: SharedAccess=None, size_in_bytes: int=None, size_in_bytes_compressed: int=None, tags: List=None, unclassifiable_object_count: BucketMetadataUnclassifiableObjectCount=None, unclassifiable_object_size_in_bytes: BucketMetadataUnclassifiableObjectSizeInBytes=None, versioning: bool=None):
        """BucketMetadata - a model defined in OpenAPI

        :param account_id: The account_id of this BucketMetadata.
        :param allows_unencrypted_object_uploads: The allows_unencrypted_object_uploads of this BucketMetadata.
        :param bucket_arn: The bucket_arn of this BucketMetadata.
        :param bucket_created_at: The bucket_created_at of this BucketMetadata.
        :param bucket_name: The bucket_name of this BucketMetadata.
        :param classifiable_object_count: The classifiable_object_count of this BucketMetadata.
        :param classifiable_size_in_bytes: The classifiable_size_in_bytes of this BucketMetadata.
        :param error_code: The error_code of this BucketMetadata.
        :param error_message: The error_message of this BucketMetadata.
        :param job_details: The job_details of this BucketMetadata.
        :param last_automated_discovery_time: The last_automated_discovery_time of this BucketMetadata.
        :param last_updated: The last_updated of this BucketMetadata.
        :param object_count: The object_count of this BucketMetadata.
        :param object_count_by_encryption_type: The object_count_by_encryption_type of this BucketMetadata.
        :param public_access: The public_access of this BucketMetadata.
        :param region: The region of this BucketMetadata.
        :param replication_details: The replication_details of this BucketMetadata.
        :param sensitivity_score: The sensitivity_score of this BucketMetadata.
        :param server_side_encryption: The server_side_encryption of this BucketMetadata.
        :param shared_access: The shared_access of this BucketMetadata.
        :param size_in_bytes: The size_in_bytes of this BucketMetadata.
        :param size_in_bytes_compressed: The size_in_bytes_compressed of this BucketMetadata.
        :param tags: The tags of this BucketMetadata.
        :param unclassifiable_object_count: The unclassifiable_object_count of this BucketMetadata.
        :param unclassifiable_object_size_in_bytes: The unclassifiable_object_size_in_bytes of this BucketMetadata.
        :param versioning: The versioning of this BucketMetadata.
        """
        self.openapi_types = {
            'account_id': str,
            'allows_unencrypted_object_uploads': AllowsUnencryptedObjectUploads,
            'bucket_arn': str,
            'bucket_created_at': datetime,
            'bucket_name': str,
            'classifiable_object_count': int,
            'classifiable_size_in_bytes': int,
            'error_code': BucketMetadataErrorCode,
            'error_message': str,
            'job_details': BucketMetadataJobDetails,
            'last_automated_discovery_time': datetime,
            'last_updated': datetime,
            'object_count': int,
            'object_count_by_encryption_type': BucketMetadataObjectCountByEncryptionType,
            'public_access': BucketMetadataPublicAccess,
            'region': str,
            'replication_details': BucketMetadataReplicationDetails,
            'sensitivity_score': int,
            'server_side_encryption': BucketMetadataServerSideEncryption,
            'shared_access': SharedAccess,
            'size_in_bytes': int,
            'size_in_bytes_compressed': int,
            'tags': List,
            'unclassifiable_object_count': BucketMetadataUnclassifiableObjectCount,
            'unclassifiable_object_size_in_bytes': BucketMetadataUnclassifiableObjectSizeInBytes,
            'versioning': bool
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'allows_unencrypted_object_uploads': 'allowsUnencryptedObjectUploads',
            'bucket_arn': 'bucketArn',
            'bucket_created_at': 'bucketCreatedAt',
            'bucket_name': 'bucketName',
            'classifiable_object_count': 'classifiableObjectCount',
            'classifiable_size_in_bytes': 'classifiableSizeInBytes',
            'error_code': 'errorCode',
            'error_message': 'errorMessage',
            'job_details': 'jobDetails',
            'last_automated_discovery_time': 'lastAutomatedDiscoveryTime',
            'last_updated': 'lastUpdated',
            'object_count': 'objectCount',
            'object_count_by_encryption_type': 'objectCountByEncryptionType',
            'public_access': 'publicAccess',
            'region': 'region',
            'replication_details': 'replicationDetails',
            'sensitivity_score': 'sensitivityScore',
            'server_side_encryption': 'serverSideEncryption',
            'shared_access': 'sharedAccess',
            'size_in_bytes': 'sizeInBytes',
            'size_in_bytes_compressed': 'sizeInBytesCompressed',
            'tags': 'tags',
            'unclassifiable_object_count': 'unclassifiableObjectCount',
            'unclassifiable_object_size_in_bytes': 'unclassifiableObjectSizeInBytes',
            'versioning': 'versioning'
        }

        self._account_id = account_id
        self._allows_unencrypted_object_uploads = allows_unencrypted_object_uploads
        self._bucket_arn = bucket_arn
        self._bucket_created_at = bucket_created_at
        self._bucket_name = bucket_name
        self._classifiable_object_count = classifiable_object_count
        self._classifiable_size_in_bytes = classifiable_size_in_bytes
        self._error_code = error_code
        self._error_message = error_message
        self._job_details = job_details
        self._last_automated_discovery_time = last_automated_discovery_time
        self._last_updated = last_updated
        self._object_count = object_count
        self._object_count_by_encryption_type = object_count_by_encryption_type
        self._public_access = public_access
        self._region = region
        self._replication_details = replication_details
        self._sensitivity_score = sensitivity_score
        self._server_side_encryption = server_side_encryption
        self._shared_access = shared_access
        self._size_in_bytes = size_in_bytes
        self._size_in_bytes_compressed = size_in_bytes_compressed
        self._tags = tags
        self._unclassifiable_object_count = unclassifiable_object_count
        self._unclassifiable_object_size_in_bytes = unclassifiable_object_size_in_bytes
        self._versioning = versioning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BucketMetadata of this BucketMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this BucketMetadata.


        :return: The account_id of this BucketMetadata.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this BucketMetadata.


        :param account_id: The account_id of this BucketMetadata.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def allows_unencrypted_object_uploads(self):
        """Gets the allows_unencrypted_object_uploads of this BucketMetadata.


        :return: The allows_unencrypted_object_uploads of this BucketMetadata.
        :rtype: AllowsUnencryptedObjectUploads
        """
        return self._allows_unencrypted_object_uploads

    @allows_unencrypted_object_uploads.setter
    def allows_unencrypted_object_uploads(self, allows_unencrypted_object_uploads):
        """Sets the allows_unencrypted_object_uploads of this BucketMetadata.


        :param allows_unencrypted_object_uploads: The allows_unencrypted_object_uploads of this BucketMetadata.
        :type allows_unencrypted_object_uploads: AllowsUnencryptedObjectUploads
        """

        self._allows_unencrypted_object_uploads = allows_unencrypted_object_uploads

    @property
    def bucket_arn(self):
        """Gets the bucket_arn of this BucketMetadata.


        :return: The bucket_arn of this BucketMetadata.
        :rtype: str
        """
        return self._bucket_arn

    @bucket_arn.setter
    def bucket_arn(self, bucket_arn):
        """Sets the bucket_arn of this BucketMetadata.


        :param bucket_arn: The bucket_arn of this BucketMetadata.
        :type bucket_arn: str
        """

        self._bucket_arn = bucket_arn

    @property
    def bucket_created_at(self):
        """Gets the bucket_created_at of this BucketMetadata.


        :return: The bucket_created_at of this BucketMetadata.
        :rtype: datetime
        """
        return self._bucket_created_at

    @bucket_created_at.setter
    def bucket_created_at(self, bucket_created_at):
        """Sets the bucket_created_at of this BucketMetadata.


        :param bucket_created_at: The bucket_created_at of this BucketMetadata.
        :type bucket_created_at: datetime
        """

        self._bucket_created_at = bucket_created_at

    @property
    def bucket_name(self):
        """Gets the bucket_name of this BucketMetadata.


        :return: The bucket_name of this BucketMetadata.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this BucketMetadata.


        :param bucket_name: The bucket_name of this BucketMetadata.
        :type bucket_name: str
        """

        self._bucket_name = bucket_name

    @property
    def classifiable_object_count(self):
        """Gets the classifiable_object_count of this BucketMetadata.


        :return: The classifiable_object_count of this BucketMetadata.
        :rtype: int
        """
        return self._classifiable_object_count

    @classifiable_object_count.setter
    def classifiable_object_count(self, classifiable_object_count):
        """Sets the classifiable_object_count of this BucketMetadata.


        :param classifiable_object_count: The classifiable_object_count of this BucketMetadata.
        :type classifiable_object_count: int
        """

        self._classifiable_object_count = classifiable_object_count

    @property
    def classifiable_size_in_bytes(self):
        """Gets the classifiable_size_in_bytes of this BucketMetadata.


        :return: The classifiable_size_in_bytes of this BucketMetadata.
        :rtype: int
        """
        return self._classifiable_size_in_bytes

    @classifiable_size_in_bytes.setter
    def classifiable_size_in_bytes(self, classifiable_size_in_bytes):
        """Sets the classifiable_size_in_bytes of this BucketMetadata.


        :param classifiable_size_in_bytes: The classifiable_size_in_bytes of this BucketMetadata.
        :type classifiable_size_in_bytes: int
        """

        self._classifiable_size_in_bytes = classifiable_size_in_bytes

    @property
    def error_code(self):
        """Gets the error_code of this BucketMetadata.


        :return: The error_code of this BucketMetadata.
        :rtype: BucketMetadataErrorCode
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this BucketMetadata.


        :param error_code: The error_code of this BucketMetadata.
        :type error_code: BucketMetadataErrorCode
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this BucketMetadata.


        :return: The error_message of this BucketMetadata.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this BucketMetadata.


        :param error_message: The error_message of this BucketMetadata.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def job_details(self):
        """Gets the job_details of this BucketMetadata.


        :return: The job_details of this BucketMetadata.
        :rtype: BucketMetadataJobDetails
        """
        return self._job_details

    @job_details.setter
    def job_details(self, job_details):
        """Sets the job_details of this BucketMetadata.


        :param job_details: The job_details of this BucketMetadata.
        :type job_details: BucketMetadataJobDetails
        """

        self._job_details = job_details

    @property
    def last_automated_discovery_time(self):
        """Gets the last_automated_discovery_time of this BucketMetadata.


        :return: The last_automated_discovery_time of this BucketMetadata.
        :rtype: datetime
        """
        return self._last_automated_discovery_time

    @last_automated_discovery_time.setter
    def last_automated_discovery_time(self, last_automated_discovery_time):
        """Sets the last_automated_discovery_time of this BucketMetadata.


        :param last_automated_discovery_time: The last_automated_discovery_time of this BucketMetadata.
        :type last_automated_discovery_time: datetime
        """

        self._last_automated_discovery_time = last_automated_discovery_time

    @property
    def last_updated(self):
        """Gets the last_updated of this BucketMetadata.


        :return: The last_updated of this BucketMetadata.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this BucketMetadata.


        :param last_updated: The last_updated of this BucketMetadata.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def object_count(self):
        """Gets the object_count of this BucketMetadata.


        :return: The object_count of this BucketMetadata.
        :rtype: int
        """
        return self._object_count

    @object_count.setter
    def object_count(self, object_count):
        """Sets the object_count of this BucketMetadata.


        :param object_count: The object_count of this BucketMetadata.
        :type object_count: int
        """

        self._object_count = object_count

    @property
    def object_count_by_encryption_type(self):
        """Gets the object_count_by_encryption_type of this BucketMetadata.


        :return: The object_count_by_encryption_type of this BucketMetadata.
        :rtype: BucketMetadataObjectCountByEncryptionType
        """
        return self._object_count_by_encryption_type

    @object_count_by_encryption_type.setter
    def object_count_by_encryption_type(self, object_count_by_encryption_type):
        """Sets the object_count_by_encryption_type of this BucketMetadata.


        :param object_count_by_encryption_type: The object_count_by_encryption_type of this BucketMetadata.
        :type object_count_by_encryption_type: BucketMetadataObjectCountByEncryptionType
        """

        self._object_count_by_encryption_type = object_count_by_encryption_type

    @property
    def public_access(self):
        """Gets the public_access of this BucketMetadata.


        :return: The public_access of this BucketMetadata.
        :rtype: BucketMetadataPublicAccess
        """
        return self._public_access

    @public_access.setter
    def public_access(self, public_access):
        """Sets the public_access of this BucketMetadata.


        :param public_access: The public_access of this BucketMetadata.
        :type public_access: BucketMetadataPublicAccess
        """

        self._public_access = public_access

    @property
    def region(self):
        """Gets the region of this BucketMetadata.


        :return: The region of this BucketMetadata.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this BucketMetadata.


        :param region: The region of this BucketMetadata.
        :type region: str
        """

        self._region = region

    @property
    def replication_details(self):
        """Gets the replication_details of this BucketMetadata.


        :return: The replication_details of this BucketMetadata.
        :rtype: BucketMetadataReplicationDetails
        """
        return self._replication_details

    @replication_details.setter
    def replication_details(self, replication_details):
        """Sets the replication_details of this BucketMetadata.


        :param replication_details: The replication_details of this BucketMetadata.
        :type replication_details: BucketMetadataReplicationDetails
        """

        self._replication_details = replication_details

    @property
    def sensitivity_score(self):
        """Gets the sensitivity_score of this BucketMetadata.


        :return: The sensitivity_score of this BucketMetadata.
        :rtype: int
        """
        return self._sensitivity_score

    @sensitivity_score.setter
    def sensitivity_score(self, sensitivity_score):
        """Sets the sensitivity_score of this BucketMetadata.


        :param sensitivity_score: The sensitivity_score of this BucketMetadata.
        :type sensitivity_score: int
        """

        self._sensitivity_score = sensitivity_score

    @property
    def server_side_encryption(self):
        """Gets the server_side_encryption of this BucketMetadata.


        :return: The server_side_encryption of this BucketMetadata.
        :rtype: BucketMetadataServerSideEncryption
        """
        return self._server_side_encryption

    @server_side_encryption.setter
    def server_side_encryption(self, server_side_encryption):
        """Sets the server_side_encryption of this BucketMetadata.


        :param server_side_encryption: The server_side_encryption of this BucketMetadata.
        :type server_side_encryption: BucketMetadataServerSideEncryption
        """

        self._server_side_encryption = server_side_encryption

    @property
    def shared_access(self):
        """Gets the shared_access of this BucketMetadata.


        :return: The shared_access of this BucketMetadata.
        :rtype: SharedAccess
        """
        return self._shared_access

    @shared_access.setter
    def shared_access(self, shared_access):
        """Sets the shared_access of this BucketMetadata.


        :param shared_access: The shared_access of this BucketMetadata.
        :type shared_access: SharedAccess
        """

        self._shared_access = shared_access

    @property
    def size_in_bytes(self):
        """Gets the size_in_bytes of this BucketMetadata.


        :return: The size_in_bytes of this BucketMetadata.
        :rtype: int
        """
        return self._size_in_bytes

    @size_in_bytes.setter
    def size_in_bytes(self, size_in_bytes):
        """Sets the size_in_bytes of this BucketMetadata.


        :param size_in_bytes: The size_in_bytes of this BucketMetadata.
        :type size_in_bytes: int
        """

        self._size_in_bytes = size_in_bytes

    @property
    def size_in_bytes_compressed(self):
        """Gets the size_in_bytes_compressed of this BucketMetadata.


        :return: The size_in_bytes_compressed of this BucketMetadata.
        :rtype: int
        """
        return self._size_in_bytes_compressed

    @size_in_bytes_compressed.setter
    def size_in_bytes_compressed(self, size_in_bytes_compressed):
        """Sets the size_in_bytes_compressed of this BucketMetadata.


        :param size_in_bytes_compressed: The size_in_bytes_compressed of this BucketMetadata.
        :type size_in_bytes_compressed: int
        """

        self._size_in_bytes_compressed = size_in_bytes_compressed

    @property
    def tags(self):
        """Gets the tags of this BucketMetadata.


        :return: The tags of this BucketMetadata.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this BucketMetadata.


        :param tags: The tags of this BucketMetadata.
        :type tags: List
        """

        self._tags = tags

    @property
    def unclassifiable_object_count(self):
        """Gets the unclassifiable_object_count of this BucketMetadata.


        :return: The unclassifiable_object_count of this BucketMetadata.
        :rtype: BucketMetadataUnclassifiableObjectCount
        """
        return self._unclassifiable_object_count

    @unclassifiable_object_count.setter
    def unclassifiable_object_count(self, unclassifiable_object_count):
        """Sets the unclassifiable_object_count of this BucketMetadata.


        :param unclassifiable_object_count: The unclassifiable_object_count of this BucketMetadata.
        :type unclassifiable_object_count: BucketMetadataUnclassifiableObjectCount
        """

        self._unclassifiable_object_count = unclassifiable_object_count

    @property
    def unclassifiable_object_size_in_bytes(self):
        """Gets the unclassifiable_object_size_in_bytes of this BucketMetadata.


        :return: The unclassifiable_object_size_in_bytes of this BucketMetadata.
        :rtype: BucketMetadataUnclassifiableObjectSizeInBytes
        """
        return self._unclassifiable_object_size_in_bytes

    @unclassifiable_object_size_in_bytes.setter
    def unclassifiable_object_size_in_bytes(self, unclassifiable_object_size_in_bytes):
        """Sets the unclassifiable_object_size_in_bytes of this BucketMetadata.


        :param unclassifiable_object_size_in_bytes: The unclassifiable_object_size_in_bytes of this BucketMetadata.
        :type unclassifiable_object_size_in_bytes: BucketMetadataUnclassifiableObjectSizeInBytes
        """

        self._unclassifiable_object_size_in_bytes = unclassifiable_object_size_in_bytes

    @property
    def versioning(self):
        """Gets the versioning of this BucketMetadata.


        :return: The versioning of this BucketMetadata.
        :rtype: bool
        """
        return self._versioning

    @versioning.setter
    def versioning(self, versioning):
        """Sets the versioning of this BucketMetadata.


        :param versioning: The versioning of this BucketMetadata.
        :type versioning: bool
        """

        self._versioning = versioning
