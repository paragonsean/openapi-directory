# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.page_line_range import PageLineRange
from openapi_server import util


class Page(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, line_range: PageLineRange=None, offset_range: PageLineRange=None, page_number: int=None):
        """Page - a model defined in OpenAPI

        :param line_range: The line_range of this Page.
        :param offset_range: The offset_range of this Page.
        :param page_number: The page_number of this Page.
        """
        self.openapi_types = {
            'line_range': PageLineRange,
            'offset_range': PageLineRange,
            'page_number': int
        }

        self.attribute_map = {
            'line_range': 'lineRange',
            'offset_range': 'offsetRange',
            'page_number': 'pageNumber'
        }

        self._line_range = line_range
        self._offset_range = offset_range
        self._page_number = page_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Page':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Page of this Page.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def line_range(self):
        """Gets the line_range of this Page.


        :return: The line_range of this Page.
        :rtype: PageLineRange
        """
        return self._line_range

    @line_range.setter
    def line_range(self, line_range):
        """Sets the line_range of this Page.


        :param line_range: The line_range of this Page.
        :type line_range: PageLineRange
        """

        self._line_range = line_range

    @property
    def offset_range(self):
        """Gets the offset_range of this Page.


        :return: The offset_range of this Page.
        :rtype: PageLineRange
        """
        return self._offset_range

    @offset_range.setter
    def offset_range(self, offset_range):
        """Sets the offset_range of this Page.


        :param offset_range: The offset_range of this Page.
        :type offset_range: PageLineRange
        """

        self._offset_range = offset_range

    @property
    def page_number(self):
        """Gets the page_number of this Page.


        :return: The page_number of this Page.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this Page.


        :param page_number: The page_number of this Page.
        :type page_number: int
        """

        self._page_number = page_number
