# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bucket_metadata_error_code import BucketMetadataErrorCode
from openapi_server.models.bucket_metadata_object_count_by_encryption_type import BucketMetadataObjectCountByEncryptionType
from openapi_server.models.bucket_metadata_unclassifiable_object_count import BucketMetadataUnclassifiableObjectCount
from openapi_server.models.bucket_metadata_unclassifiable_object_size_in_bytes import BucketMetadataUnclassifiableObjectSizeInBytes
from openapi_server.models.matching_bucket_job_details import MatchingBucketJobDetails
from openapi_server import util


class MatchingBucket(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, bucket_name: str=None, classifiable_object_count: int=None, classifiable_size_in_bytes: int=None, error_code: BucketMetadataErrorCode=None, error_message: str=None, job_details: MatchingBucketJobDetails=None, last_automated_discovery_time: datetime=None, object_count: int=None, object_count_by_encryption_type: BucketMetadataObjectCountByEncryptionType=None, sensitivity_score: int=None, size_in_bytes: int=None, size_in_bytes_compressed: int=None, unclassifiable_object_count: BucketMetadataUnclassifiableObjectCount=None, unclassifiable_object_size_in_bytes: BucketMetadataUnclassifiableObjectSizeInBytes=None):
        """MatchingBucket - a model defined in OpenAPI

        :param account_id: The account_id of this MatchingBucket.
        :param bucket_name: The bucket_name of this MatchingBucket.
        :param classifiable_object_count: The classifiable_object_count of this MatchingBucket.
        :param classifiable_size_in_bytes: The classifiable_size_in_bytes of this MatchingBucket.
        :param error_code: The error_code of this MatchingBucket.
        :param error_message: The error_message of this MatchingBucket.
        :param job_details: The job_details of this MatchingBucket.
        :param last_automated_discovery_time: The last_automated_discovery_time of this MatchingBucket.
        :param object_count: The object_count of this MatchingBucket.
        :param object_count_by_encryption_type: The object_count_by_encryption_type of this MatchingBucket.
        :param sensitivity_score: The sensitivity_score of this MatchingBucket.
        :param size_in_bytes: The size_in_bytes of this MatchingBucket.
        :param size_in_bytes_compressed: The size_in_bytes_compressed of this MatchingBucket.
        :param unclassifiable_object_count: The unclassifiable_object_count of this MatchingBucket.
        :param unclassifiable_object_size_in_bytes: The unclassifiable_object_size_in_bytes of this MatchingBucket.
        """
        self.openapi_types = {
            'account_id': str,
            'bucket_name': str,
            'classifiable_object_count': int,
            'classifiable_size_in_bytes': int,
            'error_code': BucketMetadataErrorCode,
            'error_message': str,
            'job_details': MatchingBucketJobDetails,
            'last_automated_discovery_time': datetime,
            'object_count': int,
            'object_count_by_encryption_type': BucketMetadataObjectCountByEncryptionType,
            'sensitivity_score': int,
            'size_in_bytes': int,
            'size_in_bytes_compressed': int,
            'unclassifiable_object_count': BucketMetadataUnclassifiableObjectCount,
            'unclassifiable_object_size_in_bytes': BucketMetadataUnclassifiableObjectSizeInBytes
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'bucket_name': 'bucketName',
            'classifiable_object_count': 'classifiableObjectCount',
            'classifiable_size_in_bytes': 'classifiableSizeInBytes',
            'error_code': 'errorCode',
            'error_message': 'errorMessage',
            'job_details': 'jobDetails',
            'last_automated_discovery_time': 'lastAutomatedDiscoveryTime',
            'object_count': 'objectCount',
            'object_count_by_encryption_type': 'objectCountByEncryptionType',
            'sensitivity_score': 'sensitivityScore',
            'size_in_bytes': 'sizeInBytes',
            'size_in_bytes_compressed': 'sizeInBytesCompressed',
            'unclassifiable_object_count': 'unclassifiableObjectCount',
            'unclassifiable_object_size_in_bytes': 'unclassifiableObjectSizeInBytes'
        }

        self._account_id = account_id
        self._bucket_name = bucket_name
        self._classifiable_object_count = classifiable_object_count
        self._classifiable_size_in_bytes = classifiable_size_in_bytes
        self._error_code = error_code
        self._error_message = error_message
        self._job_details = job_details
        self._last_automated_discovery_time = last_automated_discovery_time
        self._object_count = object_count
        self._object_count_by_encryption_type = object_count_by_encryption_type
        self._sensitivity_score = sensitivity_score
        self._size_in_bytes = size_in_bytes
        self._size_in_bytes_compressed = size_in_bytes_compressed
        self._unclassifiable_object_count = unclassifiable_object_count
        self._unclassifiable_object_size_in_bytes = unclassifiable_object_size_in_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchingBucket':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchingBucket of this MatchingBucket.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this MatchingBucket.


        :return: The account_id of this MatchingBucket.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this MatchingBucket.


        :param account_id: The account_id of this MatchingBucket.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def bucket_name(self):
        """Gets the bucket_name of this MatchingBucket.


        :return: The bucket_name of this MatchingBucket.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this MatchingBucket.


        :param bucket_name: The bucket_name of this MatchingBucket.
        :type bucket_name: str
        """

        self._bucket_name = bucket_name

    @property
    def classifiable_object_count(self):
        """Gets the classifiable_object_count of this MatchingBucket.


        :return: The classifiable_object_count of this MatchingBucket.
        :rtype: int
        """
        return self._classifiable_object_count

    @classifiable_object_count.setter
    def classifiable_object_count(self, classifiable_object_count):
        """Sets the classifiable_object_count of this MatchingBucket.


        :param classifiable_object_count: The classifiable_object_count of this MatchingBucket.
        :type classifiable_object_count: int
        """

        self._classifiable_object_count = classifiable_object_count

    @property
    def classifiable_size_in_bytes(self):
        """Gets the classifiable_size_in_bytes of this MatchingBucket.


        :return: The classifiable_size_in_bytes of this MatchingBucket.
        :rtype: int
        """
        return self._classifiable_size_in_bytes

    @classifiable_size_in_bytes.setter
    def classifiable_size_in_bytes(self, classifiable_size_in_bytes):
        """Sets the classifiable_size_in_bytes of this MatchingBucket.


        :param classifiable_size_in_bytes: The classifiable_size_in_bytes of this MatchingBucket.
        :type classifiable_size_in_bytes: int
        """

        self._classifiable_size_in_bytes = classifiable_size_in_bytes

    @property
    def error_code(self):
        """Gets the error_code of this MatchingBucket.


        :return: The error_code of this MatchingBucket.
        :rtype: BucketMetadataErrorCode
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this MatchingBucket.


        :param error_code: The error_code of this MatchingBucket.
        :type error_code: BucketMetadataErrorCode
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this MatchingBucket.


        :return: The error_message of this MatchingBucket.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this MatchingBucket.


        :param error_message: The error_message of this MatchingBucket.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def job_details(self):
        """Gets the job_details of this MatchingBucket.


        :return: The job_details of this MatchingBucket.
        :rtype: MatchingBucketJobDetails
        """
        return self._job_details

    @job_details.setter
    def job_details(self, job_details):
        """Sets the job_details of this MatchingBucket.


        :param job_details: The job_details of this MatchingBucket.
        :type job_details: MatchingBucketJobDetails
        """

        self._job_details = job_details

    @property
    def last_automated_discovery_time(self):
        """Gets the last_automated_discovery_time of this MatchingBucket.


        :return: The last_automated_discovery_time of this MatchingBucket.
        :rtype: datetime
        """
        return self._last_automated_discovery_time

    @last_automated_discovery_time.setter
    def last_automated_discovery_time(self, last_automated_discovery_time):
        """Sets the last_automated_discovery_time of this MatchingBucket.


        :param last_automated_discovery_time: The last_automated_discovery_time of this MatchingBucket.
        :type last_automated_discovery_time: datetime
        """

        self._last_automated_discovery_time = last_automated_discovery_time

    @property
    def object_count(self):
        """Gets the object_count of this MatchingBucket.


        :return: The object_count of this MatchingBucket.
        :rtype: int
        """
        return self._object_count

    @object_count.setter
    def object_count(self, object_count):
        """Sets the object_count of this MatchingBucket.


        :param object_count: The object_count of this MatchingBucket.
        :type object_count: int
        """

        self._object_count = object_count

    @property
    def object_count_by_encryption_type(self):
        """Gets the object_count_by_encryption_type of this MatchingBucket.


        :return: The object_count_by_encryption_type of this MatchingBucket.
        :rtype: BucketMetadataObjectCountByEncryptionType
        """
        return self._object_count_by_encryption_type

    @object_count_by_encryption_type.setter
    def object_count_by_encryption_type(self, object_count_by_encryption_type):
        """Sets the object_count_by_encryption_type of this MatchingBucket.


        :param object_count_by_encryption_type: The object_count_by_encryption_type of this MatchingBucket.
        :type object_count_by_encryption_type: BucketMetadataObjectCountByEncryptionType
        """

        self._object_count_by_encryption_type = object_count_by_encryption_type

    @property
    def sensitivity_score(self):
        """Gets the sensitivity_score of this MatchingBucket.


        :return: The sensitivity_score of this MatchingBucket.
        :rtype: int
        """
        return self._sensitivity_score

    @sensitivity_score.setter
    def sensitivity_score(self, sensitivity_score):
        """Sets the sensitivity_score of this MatchingBucket.


        :param sensitivity_score: The sensitivity_score of this MatchingBucket.
        :type sensitivity_score: int
        """

        self._sensitivity_score = sensitivity_score

    @property
    def size_in_bytes(self):
        """Gets the size_in_bytes of this MatchingBucket.


        :return: The size_in_bytes of this MatchingBucket.
        :rtype: int
        """
        return self._size_in_bytes

    @size_in_bytes.setter
    def size_in_bytes(self, size_in_bytes):
        """Sets the size_in_bytes of this MatchingBucket.


        :param size_in_bytes: The size_in_bytes of this MatchingBucket.
        :type size_in_bytes: int
        """

        self._size_in_bytes = size_in_bytes

    @property
    def size_in_bytes_compressed(self):
        """Gets the size_in_bytes_compressed of this MatchingBucket.


        :return: The size_in_bytes_compressed of this MatchingBucket.
        :rtype: int
        """
        return self._size_in_bytes_compressed

    @size_in_bytes_compressed.setter
    def size_in_bytes_compressed(self, size_in_bytes_compressed):
        """Sets the size_in_bytes_compressed of this MatchingBucket.


        :param size_in_bytes_compressed: The size_in_bytes_compressed of this MatchingBucket.
        :type size_in_bytes_compressed: int
        """

        self._size_in_bytes_compressed = size_in_bytes_compressed

    @property
    def unclassifiable_object_count(self):
        """Gets the unclassifiable_object_count of this MatchingBucket.


        :return: The unclassifiable_object_count of this MatchingBucket.
        :rtype: BucketMetadataUnclassifiableObjectCount
        """
        return self._unclassifiable_object_count

    @unclassifiable_object_count.setter
    def unclassifiable_object_count(self, unclassifiable_object_count):
        """Sets the unclassifiable_object_count of this MatchingBucket.


        :param unclassifiable_object_count: The unclassifiable_object_count of this MatchingBucket.
        :type unclassifiable_object_count: BucketMetadataUnclassifiableObjectCount
        """

        self._unclassifiable_object_count = unclassifiable_object_count

    @property
    def unclassifiable_object_size_in_bytes(self):
        """Gets the unclassifiable_object_size_in_bytes of this MatchingBucket.


        :return: The unclassifiable_object_size_in_bytes of this MatchingBucket.
        :rtype: BucketMetadataUnclassifiableObjectSizeInBytes
        """
        return self._unclassifiable_object_size_in_bytes

    @unclassifiable_object_size_in_bytes.setter
    def unclassifiable_object_size_in_bytes(self, unclassifiable_object_size_in_bytes):
        """Sets the unclassifiable_object_size_in_bytes of this MatchingBucket.


        :param unclassifiable_object_size_in_bytes: The unclassifiable_object_size_in_bytes of this MatchingBucket.
        :type unclassifiable_object_size_in_bytes: BucketMetadataUnclassifiableObjectSizeInBytes
        """

        self._unclassifiable_object_size_in_bytes = unclassifiable_object_size_in_bytes
