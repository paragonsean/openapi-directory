# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_comparator import JobComparator
from openapi_server.models.scope_filter_key import ScopeFilterKey
from openapi_server import util


class JobScopeTermSimpleScopeTerm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comparator: JobComparator=None, key: ScopeFilterKey=None, values: List=None):
        """JobScopeTermSimpleScopeTerm - a model defined in OpenAPI

        :param comparator: The comparator of this JobScopeTermSimpleScopeTerm.
        :param key: The key of this JobScopeTermSimpleScopeTerm.
        :param values: The values of this JobScopeTermSimpleScopeTerm.
        """
        self.openapi_types = {
            'comparator': JobComparator,
            'key': ScopeFilterKey,
            'values': List
        }

        self.attribute_map = {
            'comparator': 'comparator',
            'key': 'key',
            'values': 'values'
        }

        self._comparator = comparator
        self._key = key
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobScopeTermSimpleScopeTerm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobScopeTerm_simpleScopeTerm of this JobScopeTermSimpleScopeTerm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comparator(self):
        """Gets the comparator of this JobScopeTermSimpleScopeTerm.


        :return: The comparator of this JobScopeTermSimpleScopeTerm.
        :rtype: JobComparator
        """
        return self._comparator

    @comparator.setter
    def comparator(self, comparator):
        """Sets the comparator of this JobScopeTermSimpleScopeTerm.


        :param comparator: The comparator of this JobScopeTermSimpleScopeTerm.
        :type comparator: JobComparator
        """

        self._comparator = comparator

    @property
    def key(self):
        """Gets the key of this JobScopeTermSimpleScopeTerm.


        :return: The key of this JobScopeTermSimpleScopeTerm.
        :rtype: ScopeFilterKey
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this JobScopeTermSimpleScopeTerm.


        :param key: The key of this JobScopeTermSimpleScopeTerm.
        :type key: ScopeFilterKey
        """

        self._key = key

    @property
    def values(self):
        """Gets the values of this JobScopeTermSimpleScopeTerm.


        :return: The values of this JobScopeTermSimpleScopeTerm.
        :rtype: List
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this JobScopeTermSimpleScopeTerm.


        :param values: The values of this JobScopeTermSimpleScopeTerm.
        :type values: List
        """

        self._values = values
