# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetFindingsPublicationConfigurationResponseSecurityHubConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, publish_classification_findings: bool=None, publish_policy_findings: bool=None):
        """GetFindingsPublicationConfigurationResponseSecurityHubConfiguration - a model defined in OpenAPI

        :param publish_classification_findings: The publish_classification_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        :param publish_policy_findings: The publish_policy_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        """
        self.openapi_types = {
            'publish_classification_findings': bool,
            'publish_policy_findings': bool
        }

        self.attribute_map = {
            'publish_classification_findings': 'publishClassificationFindings',
            'publish_policy_findings': 'publishPolicyFindings'
        }

        self._publish_classification_findings = publish_classification_findings
        self._publish_policy_findings = publish_policy_findings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFindingsPublicationConfigurationResponseSecurityHubConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetFindingsPublicationConfigurationResponse_securityHubConfiguration of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def publish_classification_findings(self):
        """Gets the publish_classification_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.


        :return: The publish_classification_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        :rtype: bool
        """
        return self._publish_classification_findings

    @publish_classification_findings.setter
    def publish_classification_findings(self, publish_classification_findings):
        """Sets the publish_classification_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.


        :param publish_classification_findings: The publish_classification_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        :type publish_classification_findings: bool
        """
        if publish_classification_findings is None:
            raise ValueError("Invalid value for `publish_classification_findings`, must not be `None`")

        self._publish_classification_findings = publish_classification_findings

    @property
    def publish_policy_findings(self):
        """Gets the publish_policy_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.


        :return: The publish_policy_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        :rtype: bool
        """
        return self._publish_policy_findings

    @publish_policy_findings.setter
    def publish_policy_findings(self, publish_policy_findings):
        """Sets the publish_policy_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.


        :param publish_policy_findings: The publish_policy_findings of this GetFindingsPublicationConfigurationResponseSecurityHubConfiguration.
        :type publish_policy_findings: bool
        """
        if publish_policy_findings is None:
            raise ValueError("Invalid value for `publish_policy_findings`, must not be `None`")

        self._publish_policy_findings = publish_policy_findings
