# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session_context_attributes import SessionContextAttributes
from openapi_server.models.session_context_session_issuer import SessionContextSessionIssuer
from openapi_server import util


class SessionContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: SessionContextAttributes=None, session_issuer: SessionContextSessionIssuer=None):
        """SessionContext - a model defined in OpenAPI

        :param attributes: The attributes of this SessionContext.
        :param session_issuer: The session_issuer of this SessionContext.
        """
        self.openapi_types = {
            'attributes': SessionContextAttributes,
            'session_issuer': SessionContextSessionIssuer
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'session_issuer': 'sessionIssuer'
        }

        self._attributes = attributes
        self._session_issuer = session_issuer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SessionContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SessionContext of this SessionContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this SessionContext.


        :return: The attributes of this SessionContext.
        :rtype: SessionContextAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this SessionContext.


        :param attributes: The attributes of this SessionContext.
        :type attributes: SessionContextAttributes
        """

        self._attributes = attributes

    @property
    def session_issuer(self):
        """Gets the session_issuer of this SessionContext.


        :return: The session_issuer of this SessionContext.
        :rtype: SessionContextSessionIssuer
        """
        return self._session_issuer

    @session_issuer.setter
    def session_issuer(self, session_issuer):
        """Sets the session_issuer of this SessionContext.


        :param session_issuer: The session_issuer of this SessionContext.
        :type session_issuer: SessionContextSessionIssuer
        """

        self._session_issuer = session_issuer
