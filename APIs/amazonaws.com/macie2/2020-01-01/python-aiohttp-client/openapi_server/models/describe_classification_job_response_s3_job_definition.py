# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_classification_job_request_s3_job_definition_bucket_criteria import CreateClassificationJobRequestS3JobDefinitionBucketCriteria
from openapi_server.models.create_classification_job_request_s3_job_definition_scoping import CreateClassificationJobRequestS3JobDefinitionScoping
from openapi_server import util


class DescribeClassificationJobResponseS3JobDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_criteria: CreateClassificationJobRequestS3JobDefinitionBucketCriteria=None, bucket_definitions: List=None, scoping: CreateClassificationJobRequestS3JobDefinitionScoping=None):
        """DescribeClassificationJobResponseS3JobDefinition - a model defined in OpenAPI

        :param bucket_criteria: The bucket_criteria of this DescribeClassificationJobResponseS3JobDefinition.
        :param bucket_definitions: The bucket_definitions of this DescribeClassificationJobResponseS3JobDefinition.
        :param scoping: The scoping of this DescribeClassificationJobResponseS3JobDefinition.
        """
        self.openapi_types = {
            'bucket_criteria': CreateClassificationJobRequestS3JobDefinitionBucketCriteria,
            'bucket_definitions': List,
            'scoping': CreateClassificationJobRequestS3JobDefinitionScoping
        }

        self.attribute_map = {
            'bucket_criteria': 'bucketCriteria',
            'bucket_definitions': 'bucketDefinitions',
            'scoping': 'scoping'
        }

        self._bucket_criteria = bucket_criteria
        self._bucket_definitions = bucket_definitions
        self._scoping = scoping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeClassificationJobResponseS3JobDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeClassificationJobResponse_s3JobDefinition of this DescribeClassificationJobResponseS3JobDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_criteria(self):
        """Gets the bucket_criteria of this DescribeClassificationJobResponseS3JobDefinition.


        :return: The bucket_criteria of this DescribeClassificationJobResponseS3JobDefinition.
        :rtype: CreateClassificationJobRequestS3JobDefinitionBucketCriteria
        """
        return self._bucket_criteria

    @bucket_criteria.setter
    def bucket_criteria(self, bucket_criteria):
        """Sets the bucket_criteria of this DescribeClassificationJobResponseS3JobDefinition.


        :param bucket_criteria: The bucket_criteria of this DescribeClassificationJobResponseS3JobDefinition.
        :type bucket_criteria: CreateClassificationJobRequestS3JobDefinitionBucketCriteria
        """

        self._bucket_criteria = bucket_criteria

    @property
    def bucket_definitions(self):
        """Gets the bucket_definitions of this DescribeClassificationJobResponseS3JobDefinition.


        :return: The bucket_definitions of this DescribeClassificationJobResponseS3JobDefinition.
        :rtype: List
        """
        return self._bucket_definitions

    @bucket_definitions.setter
    def bucket_definitions(self, bucket_definitions):
        """Sets the bucket_definitions of this DescribeClassificationJobResponseS3JobDefinition.


        :param bucket_definitions: The bucket_definitions of this DescribeClassificationJobResponseS3JobDefinition.
        :type bucket_definitions: List
        """

        self._bucket_definitions = bucket_definitions

    @property
    def scoping(self):
        """Gets the scoping of this DescribeClassificationJobResponseS3JobDefinition.


        :return: The scoping of this DescribeClassificationJobResponseS3JobDefinition.
        :rtype: CreateClassificationJobRequestS3JobDefinitionScoping
        """
        return self._scoping

    @scoping.setter
    def scoping(self, scoping):
        """Sets the scoping of this DescribeClassificationJobResponseS3JobDefinition.


        :param scoping: The scoping of this DescribeClassificationJobResponseS3JobDefinition.
        :type scoping: CreateClassificationJobRequestS3JobDefinitionScoping
        """

        self._scoping = scoping
