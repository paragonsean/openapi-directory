# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assumed_role_session_context import AssumedRoleSessionContext
from openapi_server import util


class AssumedRole(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_key_id: str=None, account_id: str=None, arn: str=None, principal_id: str=None, session_context: AssumedRoleSessionContext=None):
        """AssumedRole - a model defined in OpenAPI

        :param access_key_id: The access_key_id of this AssumedRole.
        :param account_id: The account_id of this AssumedRole.
        :param arn: The arn of this AssumedRole.
        :param principal_id: The principal_id of this AssumedRole.
        :param session_context: The session_context of this AssumedRole.
        """
        self.openapi_types = {
            'access_key_id': str,
            'account_id': str,
            'arn': str,
            'principal_id': str,
            'session_context': AssumedRoleSessionContext
        }

        self.attribute_map = {
            'access_key_id': 'accessKeyId',
            'account_id': 'accountId',
            'arn': 'arn',
            'principal_id': 'principalId',
            'session_context': 'sessionContext'
        }

        self._access_key_id = access_key_id
        self._account_id = account_id
        self._arn = arn
        self._principal_id = principal_id
        self._session_context = session_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssumedRole':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssumedRole of this AssumedRole.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_key_id(self):
        """Gets the access_key_id of this AssumedRole.


        :return: The access_key_id of this AssumedRole.
        :rtype: str
        """
        return self._access_key_id

    @access_key_id.setter
    def access_key_id(self, access_key_id):
        """Sets the access_key_id of this AssumedRole.


        :param access_key_id: The access_key_id of this AssumedRole.
        :type access_key_id: str
        """

        self._access_key_id = access_key_id

    @property
    def account_id(self):
        """Gets the account_id of this AssumedRole.


        :return: The account_id of this AssumedRole.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AssumedRole.


        :param account_id: The account_id of this AssumedRole.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def arn(self):
        """Gets the arn of this AssumedRole.


        :return: The arn of this AssumedRole.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this AssumedRole.


        :param arn: The arn of this AssumedRole.
        :type arn: str
        """

        self._arn = arn

    @property
    def principal_id(self):
        """Gets the principal_id of this AssumedRole.


        :return: The principal_id of this AssumedRole.
        :rtype: str
        """
        return self._principal_id

    @principal_id.setter
    def principal_id(self, principal_id):
        """Sets the principal_id of this AssumedRole.


        :param principal_id: The principal_id of this AssumedRole.
        :type principal_id: str
        """

        self._principal_id = principal_id

    @property
    def session_context(self):
        """Gets the session_context of this AssumedRole.


        :return: The session_context of this AssumedRole.
        :rtype: AssumedRoleSessionContext
        """
        return self._session_context

    @session_context.setter
    def session_context(self, session_context):
        """Sets the session_context of this AssumedRole.


        :param session_context: The session_context of this AssumedRole.
        :type session_context: AssumedRoleSessionContext
        """

        self._session_context = session_context
