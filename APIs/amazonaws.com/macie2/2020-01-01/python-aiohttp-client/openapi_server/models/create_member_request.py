# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_member_request_account import CreateMemberRequestAccount
from openapi_server import util


class CreateMemberRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: CreateMemberRequestAccount=None, tags: Dict[str, str]=None):
        """CreateMemberRequest - a model defined in OpenAPI

        :param account: The account of this CreateMemberRequest.
        :param tags: The tags of this CreateMemberRequest.
        """
        self.openapi_types = {
            'account': CreateMemberRequestAccount,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'account': 'account',
            'tags': 'tags'
        }

        self._account = account
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMemberRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMember_request of this CreateMemberRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this CreateMemberRequest.


        :return: The account of this CreateMemberRequest.
        :rtype: CreateMemberRequestAccount
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this CreateMemberRequest.


        :param account: The account of this CreateMemberRequest.
        :type account: CreateMemberRequestAccount
        """
        if account is None:
            raise ValueError("Invalid value for `account`, must not be `None`")

        self._account = account

    @property
    def tags(self):
        """Gets the tags of this CreateMemberRequest.

        A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.

        :return: The tags of this CreateMemberRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateMemberRequest.

        A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.

        :param tags: The tags of this CreateMemberRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
