/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides aggregated statistical data for sensitive data discovery metrics that apply to S3 buckets. Each field contains aggregated data for all the buckets that have a sensitivity score (sensitivityScore) of a specified value or within a specified range (BucketStatisticsBySensitivity). If automated sensitive data discovery is currently disabled for your account, the value for each field is 0.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:49.935146-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SensitivityAggregations {
  public static final String SERIALIZED_NAME_CLASSIFIABLE_SIZE_IN_BYTES = "classifiableSizeInBytes";
  @SerializedName(SERIALIZED_NAME_CLASSIFIABLE_SIZE_IN_BYTES)
  private Integer classifiableSizeInBytes;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE_COUNT = "publiclyAccessibleCount";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE_COUNT)
  private Integer publiclyAccessibleCount;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;

  public static final String SERIALIZED_NAME_TOTAL_SIZE_IN_BYTES = "totalSizeInBytes";
  @SerializedName(SERIALIZED_NAME_TOTAL_SIZE_IN_BYTES)
  private Integer totalSizeInBytes;

  public SensitivityAggregations() {
  }

  public SensitivityAggregations classifiableSizeInBytes(Integer classifiableSizeInBytes) {
    this.classifiableSizeInBytes = classifiableSizeInBytes;
    return this;
  }

  /**
   * Get classifiableSizeInBytes
   * @return classifiableSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getClassifiableSizeInBytes() {
    return classifiableSizeInBytes;
  }

  public void setClassifiableSizeInBytes(Integer classifiableSizeInBytes) {
    this.classifiableSizeInBytes = classifiableSizeInBytes;
  }


  public SensitivityAggregations publiclyAccessibleCount(Integer publiclyAccessibleCount) {
    this.publiclyAccessibleCount = publiclyAccessibleCount;
    return this;
  }

  /**
   * Get publiclyAccessibleCount
   * @return publiclyAccessibleCount
   */
  @javax.annotation.Nullable
  public Integer getPubliclyAccessibleCount() {
    return publiclyAccessibleCount;
  }

  public void setPubliclyAccessibleCount(Integer publiclyAccessibleCount) {
    this.publiclyAccessibleCount = publiclyAccessibleCount;
  }


  public SensitivityAggregations totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * Get totalCount
   * @return totalCount
   */
  @javax.annotation.Nullable
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public SensitivityAggregations totalSizeInBytes(Integer totalSizeInBytes) {
    this.totalSizeInBytes = totalSizeInBytes;
    return this;
  }

  /**
   * Get totalSizeInBytes
   * @return totalSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getTotalSizeInBytes() {
    return totalSizeInBytes;
  }

  public void setTotalSizeInBytes(Integer totalSizeInBytes) {
    this.totalSizeInBytes = totalSizeInBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SensitivityAggregations sensitivityAggregations = (SensitivityAggregations) o;
    return Objects.equals(this.classifiableSizeInBytes, sensitivityAggregations.classifiableSizeInBytes) &&
        Objects.equals(this.publiclyAccessibleCount, sensitivityAggregations.publiclyAccessibleCount) &&
        Objects.equals(this.totalCount, sensitivityAggregations.totalCount) &&
        Objects.equals(this.totalSizeInBytes, sensitivityAggregations.totalSizeInBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classifiableSizeInBytes, publiclyAccessibleCount, totalCount, totalSizeInBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensitivityAggregations {\n");
    sb.append("    classifiableSizeInBytes: ").append(toIndentedString(classifiableSizeInBytes)).append("\n");
    sb.append("    publiclyAccessibleCount: ").append(toIndentedString(publiclyAccessibleCount)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    totalSizeInBytes: ").append(toIndentedString(totalSizeInBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("classifiableSizeInBytes");
    openapiFields.add("publiclyAccessibleCount");
    openapiFields.add("totalCount");
    openapiFields.add("totalSizeInBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SensitivityAggregations
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SensitivityAggregations.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SensitivityAggregations is not found in the empty JSON string", SensitivityAggregations.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SensitivityAggregations.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SensitivityAggregations` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `classifiableSizeInBytes`
      if (jsonObj.get("classifiableSizeInBytes") != null && !jsonObj.get("classifiableSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("classifiableSizeInBytes"));
      }
      // validate the optional field `publiclyAccessibleCount`
      if (jsonObj.get("publiclyAccessibleCount") != null && !jsonObj.get("publiclyAccessibleCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("publiclyAccessibleCount"));
      }
      // validate the optional field `totalCount`
      if (jsonObj.get("totalCount") != null && !jsonObj.get("totalCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalCount"));
      }
      // validate the optional field `totalSizeInBytes`
      if (jsonObj.get("totalSizeInBytes") != null && !jsonObj.get("totalSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("totalSizeInBytes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SensitivityAggregations.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SensitivityAggregations' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SensitivityAggregations> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SensitivityAggregations.class));

       return (TypeAdapter<T>) new TypeAdapter<SensitivityAggregations>() {
           @Override
           public void write(JsonWriter out, SensitivityAggregations value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SensitivityAggregations read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SensitivityAggregations given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SensitivityAggregations
   * @throws IOException if the JSON string is invalid with respect to SensitivityAggregations
   */
  public static SensitivityAggregations fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SensitivityAggregations.class);
  }

  /**
   * Convert an instance of SensitivityAggregations to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

