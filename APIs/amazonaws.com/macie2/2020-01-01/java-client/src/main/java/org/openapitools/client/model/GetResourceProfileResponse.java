/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GetResourceProfileResponseStatistics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetResourceProfileResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:49.935146-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetResourceProfileResponse {
  public static final String SERIALIZED_NAME_PROFILE_UPDATED_AT = "profileUpdatedAt";
  @SerializedName(SERIALIZED_NAME_PROFILE_UPDATED_AT)
  private OffsetDateTime profileUpdatedAt;

  public static final String SERIALIZED_NAME_SENSITIVITY_SCORE = "sensitivityScore";
  @SerializedName(SERIALIZED_NAME_SENSITIVITY_SCORE)
  private Integer sensitivityScore;

  public static final String SERIALIZED_NAME_SENSITIVITY_SCORE_OVERRIDDEN = "sensitivityScoreOverridden";
  @SerializedName(SERIALIZED_NAME_SENSITIVITY_SCORE_OVERRIDDEN)
  private Boolean sensitivityScoreOverridden;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private GetResourceProfileResponseStatistics statistics;

  public GetResourceProfileResponse() {
  }

  public GetResourceProfileResponse profileUpdatedAt(OffsetDateTime profileUpdatedAt) {
    this.profileUpdatedAt = profileUpdatedAt;
    return this;
  }

  /**
   * Get profileUpdatedAt
   * @return profileUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getProfileUpdatedAt() {
    return profileUpdatedAt;
  }

  public void setProfileUpdatedAt(OffsetDateTime profileUpdatedAt) {
    this.profileUpdatedAt = profileUpdatedAt;
  }


  public GetResourceProfileResponse sensitivityScore(Integer sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
    return this;
  }

  /**
   * Get sensitivityScore
   * @return sensitivityScore
   */
  @javax.annotation.Nullable
  public Integer getSensitivityScore() {
    return sensitivityScore;
  }

  public void setSensitivityScore(Integer sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
  }


  public GetResourceProfileResponse sensitivityScoreOverridden(Boolean sensitivityScoreOverridden) {
    this.sensitivityScoreOverridden = sensitivityScoreOverridden;
    return this;
  }

  /**
   * Get sensitivityScoreOverridden
   * @return sensitivityScoreOverridden
   */
  @javax.annotation.Nullable
  public Boolean getSensitivityScoreOverridden() {
    return sensitivityScoreOverridden;
  }

  public void setSensitivityScoreOverridden(Boolean sensitivityScoreOverridden) {
    this.sensitivityScoreOverridden = sensitivityScoreOverridden;
  }


  public GetResourceProfileResponse statistics(GetResourceProfileResponseStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

  /**
   * Get statistics
   * @return statistics
   */
  @javax.annotation.Nullable
  public GetResourceProfileResponseStatistics getStatistics() {
    return statistics;
  }

  public void setStatistics(GetResourceProfileResponseStatistics statistics) {
    this.statistics = statistics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetResourceProfileResponse getResourceProfileResponse = (GetResourceProfileResponse) o;
    return Objects.equals(this.profileUpdatedAt, getResourceProfileResponse.profileUpdatedAt) &&
        Objects.equals(this.sensitivityScore, getResourceProfileResponse.sensitivityScore) &&
        Objects.equals(this.sensitivityScoreOverridden, getResourceProfileResponse.sensitivityScoreOverridden) &&
        Objects.equals(this.statistics, getResourceProfileResponse.statistics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileUpdatedAt, sensitivityScore, sensitivityScoreOverridden, statistics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetResourceProfileResponse {\n");
    sb.append("    profileUpdatedAt: ").append(toIndentedString(profileUpdatedAt)).append("\n");
    sb.append("    sensitivityScore: ").append(toIndentedString(sensitivityScore)).append("\n");
    sb.append("    sensitivityScoreOverridden: ").append(toIndentedString(sensitivityScoreOverridden)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("profileUpdatedAt");
    openapiFields.add("sensitivityScore");
    openapiFields.add("sensitivityScoreOverridden");
    openapiFields.add("statistics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetResourceProfileResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetResourceProfileResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetResourceProfileResponse is not found in the empty JSON string", GetResourceProfileResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetResourceProfileResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetResourceProfileResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `profileUpdatedAt`
      if (jsonObj.get("profileUpdatedAt") != null && !jsonObj.get("profileUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("profileUpdatedAt"));
      }
      // validate the optional field `sensitivityScore`
      if (jsonObj.get("sensitivityScore") != null && !jsonObj.get("sensitivityScore").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("sensitivityScore"));
      }
      // validate the optional field `sensitivityScoreOverridden`
      if (jsonObj.get("sensitivityScoreOverridden") != null && !jsonObj.get("sensitivityScoreOverridden").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("sensitivityScoreOverridden"));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        GetResourceProfileResponseStatistics.validateJsonElement(jsonObj.get("statistics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetResourceProfileResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetResourceProfileResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetResourceProfileResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetResourceProfileResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetResourceProfileResponse>() {
           @Override
           public void write(JsonWriter out, GetResourceProfileResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetResourceProfileResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetResourceProfileResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetResourceProfileResponse
   * @throws IOException if the JSON string is invalid with respect to GetResourceProfileResponse
   */
  public static GetResourceProfileResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetResourceProfileResponse.class);
  }

  /**
   * Convert an instance of GetResourceProfileResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

