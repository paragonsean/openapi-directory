/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The frequency with which Amazon Macie publishes updates to policy findings for an account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events). For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/macie/latest/user/findings-monitor.html\&quot;&gt;Monitoring and processing findings&lt;/a&gt; in the &lt;i&gt;Amazon Macie User Guide&lt;/i&gt;. Valid values are:
 */
@JsonAdapter(FindingPublishingFrequency.Adapter.class)
public enum FindingPublishingFrequency {
  
  FIFTEEN_MINUTES("FIFTEEN_MINUTES"),
  
  ONE_HOUR("ONE_HOUR"),
  
  SIX_HOURS("SIX_HOURS");

  private String value;

  FindingPublishingFrequency(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FindingPublishingFrequency fromValue(String value) {
    for (FindingPublishingFrequency b : FindingPublishingFrequency.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FindingPublishingFrequency> {
    @Override
    public void write(final JsonWriter jsonWriter, final FindingPublishingFrequency enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FindingPublishingFrequency read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FindingPublishingFrequency.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    FindingPublishingFrequency.fromValue(value);
  }
}

