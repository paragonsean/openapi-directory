/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AutomatedDiscoveryStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAutomatedDiscoveryConfigurationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:49.935146-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAutomatedDiscoveryConfigurationResponse {
  public static final String SERIALIZED_NAME_CLASSIFICATION_SCOPE_ID = "classificationScopeId";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION_SCOPE_ID)
  private String classificationScopeId;

  public static final String SERIALIZED_NAME_DISABLED_AT = "disabledAt";
  @SerializedName(SERIALIZED_NAME_DISABLED_AT)
  private OffsetDateTime disabledAt;

  public static final String SERIALIZED_NAME_FIRST_ENABLED_AT = "firstEnabledAt";
  @SerializedName(SERIALIZED_NAME_FIRST_ENABLED_AT)
  private OffsetDateTime firstEnabledAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "lastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_SENSITIVITY_INSPECTION_TEMPLATE_ID = "sensitivityInspectionTemplateId";
  @SerializedName(SERIALIZED_NAME_SENSITIVITY_INSPECTION_TEMPLATE_ID)
  private String sensitivityInspectionTemplateId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AutomatedDiscoveryStatus status;

  public GetAutomatedDiscoveryConfigurationResponse() {
  }

  public GetAutomatedDiscoveryConfigurationResponse classificationScopeId(String classificationScopeId) {
    this.classificationScopeId = classificationScopeId;
    return this;
  }

  /**
   * Get classificationScopeId
   * @return classificationScopeId
   */
  @javax.annotation.Nullable
  public String getClassificationScopeId() {
    return classificationScopeId;
  }

  public void setClassificationScopeId(String classificationScopeId) {
    this.classificationScopeId = classificationScopeId;
  }


  public GetAutomatedDiscoveryConfigurationResponse disabledAt(OffsetDateTime disabledAt) {
    this.disabledAt = disabledAt;
    return this;
  }

  /**
   * Get disabledAt
   * @return disabledAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDisabledAt() {
    return disabledAt;
  }

  public void setDisabledAt(OffsetDateTime disabledAt) {
    this.disabledAt = disabledAt;
  }


  public GetAutomatedDiscoveryConfigurationResponse firstEnabledAt(OffsetDateTime firstEnabledAt) {
    this.firstEnabledAt = firstEnabledAt;
    return this;
  }

  /**
   * Get firstEnabledAt
   * @return firstEnabledAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFirstEnabledAt() {
    return firstEnabledAt;
  }

  public void setFirstEnabledAt(OffsetDateTime firstEnabledAt) {
    this.firstEnabledAt = firstEnabledAt;
  }


  public GetAutomatedDiscoveryConfigurationResponse lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public GetAutomatedDiscoveryConfigurationResponse sensitivityInspectionTemplateId(String sensitivityInspectionTemplateId) {
    this.sensitivityInspectionTemplateId = sensitivityInspectionTemplateId;
    return this;
  }

  /**
   * Get sensitivityInspectionTemplateId
   * @return sensitivityInspectionTemplateId
   */
  @javax.annotation.Nullable
  public String getSensitivityInspectionTemplateId() {
    return sensitivityInspectionTemplateId;
  }

  public void setSensitivityInspectionTemplateId(String sensitivityInspectionTemplateId) {
    this.sensitivityInspectionTemplateId = sensitivityInspectionTemplateId;
  }


  public GetAutomatedDiscoveryConfigurationResponse status(AutomatedDiscoveryStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AutomatedDiscoveryStatus getStatus() {
    return status;
  }

  public void setStatus(AutomatedDiscoveryStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAutomatedDiscoveryConfigurationResponse getAutomatedDiscoveryConfigurationResponse = (GetAutomatedDiscoveryConfigurationResponse) o;
    return Objects.equals(this.classificationScopeId, getAutomatedDiscoveryConfigurationResponse.classificationScopeId) &&
        Objects.equals(this.disabledAt, getAutomatedDiscoveryConfigurationResponse.disabledAt) &&
        Objects.equals(this.firstEnabledAt, getAutomatedDiscoveryConfigurationResponse.firstEnabledAt) &&
        Objects.equals(this.lastUpdatedAt, getAutomatedDiscoveryConfigurationResponse.lastUpdatedAt) &&
        Objects.equals(this.sensitivityInspectionTemplateId, getAutomatedDiscoveryConfigurationResponse.sensitivityInspectionTemplateId) &&
        Objects.equals(this.status, getAutomatedDiscoveryConfigurationResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classificationScopeId, disabledAt, firstEnabledAt, lastUpdatedAt, sensitivityInspectionTemplateId, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAutomatedDiscoveryConfigurationResponse {\n");
    sb.append("    classificationScopeId: ").append(toIndentedString(classificationScopeId)).append("\n");
    sb.append("    disabledAt: ").append(toIndentedString(disabledAt)).append("\n");
    sb.append("    firstEnabledAt: ").append(toIndentedString(firstEnabledAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    sensitivityInspectionTemplateId: ").append(toIndentedString(sensitivityInspectionTemplateId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("classificationScopeId");
    openapiFields.add("disabledAt");
    openapiFields.add("firstEnabledAt");
    openapiFields.add("lastUpdatedAt");
    openapiFields.add("sensitivityInspectionTemplateId");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAutomatedDiscoveryConfigurationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAutomatedDiscoveryConfigurationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAutomatedDiscoveryConfigurationResponse is not found in the empty JSON string", GetAutomatedDiscoveryConfigurationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAutomatedDiscoveryConfigurationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAutomatedDiscoveryConfigurationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `classificationScopeId`
      if (jsonObj.get("classificationScopeId") != null && !jsonObj.get("classificationScopeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("classificationScopeId"));
      }
      // validate the optional field `disabledAt`
      if (jsonObj.get("disabledAt") != null && !jsonObj.get("disabledAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("disabledAt"));
      }
      // validate the optional field `firstEnabledAt`
      if (jsonObj.get("firstEnabledAt") != null && !jsonObj.get("firstEnabledAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("firstEnabledAt"));
      }
      // validate the optional field `lastUpdatedAt`
      if (jsonObj.get("lastUpdatedAt") != null && !jsonObj.get("lastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedAt"));
      }
      // validate the optional field `sensitivityInspectionTemplateId`
      if (jsonObj.get("sensitivityInspectionTemplateId") != null && !jsonObj.get("sensitivityInspectionTemplateId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sensitivityInspectionTemplateId"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        AutomatedDiscoveryStatus.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAutomatedDiscoveryConfigurationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAutomatedDiscoveryConfigurationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAutomatedDiscoveryConfigurationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAutomatedDiscoveryConfigurationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAutomatedDiscoveryConfigurationResponse>() {
           @Override
           public void write(JsonWriter out, GetAutomatedDiscoveryConfigurationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAutomatedDiscoveryConfigurationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAutomatedDiscoveryConfigurationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAutomatedDiscoveryConfigurationResponse
   * @throws IOException if the JSON string is invalid with respect to GetAutomatedDiscoveryConfigurationResponse
   */
  public static GetAutomatedDiscoveryConfigurationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAutomatedDiscoveryConfigurationResponse.class);
  }

  /**
   * Convert an instance of GetAutomatedDiscoveryConfigurationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

