/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DescribeClassificationJobResponseLastRunErrorStatus;
import org.openapitools.client.model.DescribeClassificationJobResponseS3JobDefinition;
import org.openapitools.client.model.DescribeClassificationJobResponseScheduleFrequency;
import org.openapitools.client.model.DescribeClassificationJobResponseStatistics;
import org.openapitools.client.model.DescribeClassificationJobResponseUserPausedDetails;
import org.openapitools.client.model.JobStatus;
import org.openapitools.client.model.JobType;
import org.openapitools.client.model.ManagedDataIdentifierSelector;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeClassificationJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:49.935146-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeClassificationJobResponse {
  public static final String SERIALIZED_NAME_ALLOW_LIST_IDS = "allowListIds";
  @SerializedName(SERIALIZED_NAME_ALLOW_LIST_IDS)
  private List allowListIds;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CUSTOM_DATA_IDENTIFIER_IDS = "customDataIdentifierIds";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATA_IDENTIFIER_IDS)
  private List customDataIdentifierIds;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_INITIAL_RUN = "initialRun";
  @SerializedName(SERIALIZED_NAME_INITIAL_RUN)
  private Boolean initialRun;

  public static final String SERIALIZED_NAME_JOB_ARN = "jobArn";
  @SerializedName(SERIALIZED_NAME_JOB_ARN)
  private String jobArn;

  public static final String SERIALIZED_NAME_JOB_ID = "jobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public static final String SERIALIZED_NAME_JOB_STATUS = "jobStatus";
  @SerializedName(SERIALIZED_NAME_JOB_STATUS)
  private JobStatus jobStatus;

  public static final String SERIALIZED_NAME_JOB_TYPE = "jobType";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE)
  private JobType jobType;

  public static final String SERIALIZED_NAME_LAST_RUN_ERROR_STATUS = "lastRunErrorStatus";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_ERROR_STATUS)
  private DescribeClassificationJobResponseLastRunErrorStatus lastRunErrorStatus;

  public static final String SERIALIZED_NAME_LAST_RUN_TIME = "lastRunTime";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_TIME)
  private OffsetDateTime lastRunTime;

  public static final String SERIALIZED_NAME_MANAGED_DATA_IDENTIFIER_IDS = "managedDataIdentifierIds";
  @SerializedName(SERIALIZED_NAME_MANAGED_DATA_IDENTIFIER_IDS)
  private List managedDataIdentifierIds;

  public static final String SERIALIZED_NAME_MANAGED_DATA_IDENTIFIER_SELECTOR = "managedDataIdentifierSelector";
  @SerializedName(SERIALIZED_NAME_MANAGED_DATA_IDENTIFIER_SELECTOR)
  private ManagedDataIdentifierSelector managedDataIdentifierSelector;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_S3_JOB_DEFINITION = "s3JobDefinition";
  @SerializedName(SERIALIZED_NAME_S3_JOB_DEFINITION)
  private DescribeClassificationJobResponseS3JobDefinition s3JobDefinition;

  public static final String SERIALIZED_NAME_SAMPLING_PERCENTAGE = "samplingPercentage";
  @SerializedName(SERIALIZED_NAME_SAMPLING_PERCENTAGE)
  private Integer samplingPercentage;

  public static final String SERIALIZED_NAME_SCHEDULE_FREQUENCY = "scheduleFrequency";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_FREQUENCY)
  private DescribeClassificationJobResponseScheduleFrequency scheduleFrequency;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private DescribeClassificationJobResponseStatistics statistics;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_USER_PAUSED_DETAILS = "userPausedDetails";
  @SerializedName(SERIALIZED_NAME_USER_PAUSED_DETAILS)
  private DescribeClassificationJobResponseUserPausedDetails userPausedDetails;

  public DescribeClassificationJobResponse() {
  }

  public DescribeClassificationJobResponse allowListIds(List allowListIds) {
    this.allowListIds = allowListIds;
    return this;
  }

  /**
   * Get allowListIds
   * @return allowListIds
   */
  @javax.annotation.Nullable
  public List getAllowListIds() {
    return allowListIds;
  }

  public void setAllowListIds(List allowListIds) {
    this.allowListIds = allowListIds;
  }


  public DescribeClassificationJobResponse clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Get clientToken
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public DescribeClassificationJobResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeClassificationJobResponse customDataIdentifierIds(List customDataIdentifierIds) {
    this.customDataIdentifierIds = customDataIdentifierIds;
    return this;
  }

  /**
   * Get customDataIdentifierIds
   * @return customDataIdentifierIds
   */
  @javax.annotation.Nullable
  public List getCustomDataIdentifierIds() {
    return customDataIdentifierIds;
  }

  public void setCustomDataIdentifierIds(List customDataIdentifierIds) {
    this.customDataIdentifierIds = customDataIdentifierIds;
  }


  public DescribeClassificationJobResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeClassificationJobResponse initialRun(Boolean initialRun) {
    this.initialRun = initialRun;
    return this;
  }

  /**
   * Get initialRun
   * @return initialRun
   */
  @javax.annotation.Nullable
  public Boolean getInitialRun() {
    return initialRun;
  }

  public void setInitialRun(Boolean initialRun) {
    this.initialRun = initialRun;
  }


  public DescribeClassificationJobResponse jobArn(String jobArn) {
    this.jobArn = jobArn;
    return this;
  }

  /**
   * Get jobArn
   * @return jobArn
   */
  @javax.annotation.Nullable
  public String getJobArn() {
    return jobArn;
  }

  public void setJobArn(String jobArn) {
    this.jobArn = jobArn;
  }


  public DescribeClassificationJobResponse jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * Get jobId
   * @return jobId
   */
  @javax.annotation.Nullable
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }


  public DescribeClassificationJobResponse jobStatus(JobStatus jobStatus) {
    this.jobStatus = jobStatus;
    return this;
  }

  /**
   * Get jobStatus
   * @return jobStatus
   */
  @javax.annotation.Nullable
  public JobStatus getJobStatus() {
    return jobStatus;
  }

  public void setJobStatus(JobStatus jobStatus) {
    this.jobStatus = jobStatus;
  }


  public DescribeClassificationJobResponse jobType(JobType jobType) {
    this.jobType = jobType;
    return this;
  }

  /**
   * Get jobType
   * @return jobType
   */
  @javax.annotation.Nullable
  public JobType getJobType() {
    return jobType;
  }

  public void setJobType(JobType jobType) {
    this.jobType = jobType;
  }


  public DescribeClassificationJobResponse lastRunErrorStatus(DescribeClassificationJobResponseLastRunErrorStatus lastRunErrorStatus) {
    this.lastRunErrorStatus = lastRunErrorStatus;
    return this;
  }

  /**
   * Get lastRunErrorStatus
   * @return lastRunErrorStatus
   */
  @javax.annotation.Nullable
  public DescribeClassificationJobResponseLastRunErrorStatus getLastRunErrorStatus() {
    return lastRunErrorStatus;
  }

  public void setLastRunErrorStatus(DescribeClassificationJobResponseLastRunErrorStatus lastRunErrorStatus) {
    this.lastRunErrorStatus = lastRunErrorStatus;
  }


  public DescribeClassificationJobResponse lastRunTime(OffsetDateTime lastRunTime) {
    this.lastRunTime = lastRunTime;
    return this;
  }

  /**
   * Get lastRunTime
   * @return lastRunTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRunTime() {
    return lastRunTime;
  }

  public void setLastRunTime(OffsetDateTime lastRunTime) {
    this.lastRunTime = lastRunTime;
  }


  public DescribeClassificationJobResponse managedDataIdentifierIds(List managedDataIdentifierIds) {
    this.managedDataIdentifierIds = managedDataIdentifierIds;
    return this;
  }

  /**
   * Get managedDataIdentifierIds
   * @return managedDataIdentifierIds
   */
  @javax.annotation.Nullable
  public List getManagedDataIdentifierIds() {
    return managedDataIdentifierIds;
  }

  public void setManagedDataIdentifierIds(List managedDataIdentifierIds) {
    this.managedDataIdentifierIds = managedDataIdentifierIds;
  }


  public DescribeClassificationJobResponse managedDataIdentifierSelector(ManagedDataIdentifierSelector managedDataIdentifierSelector) {
    this.managedDataIdentifierSelector = managedDataIdentifierSelector;
    return this;
  }

  /**
   * Get managedDataIdentifierSelector
   * @return managedDataIdentifierSelector
   */
  @javax.annotation.Nullable
  public ManagedDataIdentifierSelector getManagedDataIdentifierSelector() {
    return managedDataIdentifierSelector;
  }

  public void setManagedDataIdentifierSelector(ManagedDataIdentifierSelector managedDataIdentifierSelector) {
    this.managedDataIdentifierSelector = managedDataIdentifierSelector;
  }


  public DescribeClassificationJobResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeClassificationJobResponse s3JobDefinition(DescribeClassificationJobResponseS3JobDefinition s3JobDefinition) {
    this.s3JobDefinition = s3JobDefinition;
    return this;
  }

  /**
   * Get s3JobDefinition
   * @return s3JobDefinition
   */
  @javax.annotation.Nullable
  public DescribeClassificationJobResponseS3JobDefinition getS3JobDefinition() {
    return s3JobDefinition;
  }

  public void setS3JobDefinition(DescribeClassificationJobResponseS3JobDefinition s3JobDefinition) {
    this.s3JobDefinition = s3JobDefinition;
  }


  public DescribeClassificationJobResponse samplingPercentage(Integer samplingPercentage) {
    this.samplingPercentage = samplingPercentage;
    return this;
  }

  /**
   * Get samplingPercentage
   * @return samplingPercentage
   */
  @javax.annotation.Nullable
  public Integer getSamplingPercentage() {
    return samplingPercentage;
  }

  public void setSamplingPercentage(Integer samplingPercentage) {
    this.samplingPercentage = samplingPercentage;
  }


  public DescribeClassificationJobResponse scheduleFrequency(DescribeClassificationJobResponseScheduleFrequency scheduleFrequency) {
    this.scheduleFrequency = scheduleFrequency;
    return this;
  }

  /**
   * Get scheduleFrequency
   * @return scheduleFrequency
   */
  @javax.annotation.Nullable
  public DescribeClassificationJobResponseScheduleFrequency getScheduleFrequency() {
    return scheduleFrequency;
  }

  public void setScheduleFrequency(DescribeClassificationJobResponseScheduleFrequency scheduleFrequency) {
    this.scheduleFrequency = scheduleFrequency;
  }


  public DescribeClassificationJobResponse statistics(DescribeClassificationJobResponseStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

  /**
   * Get statistics
   * @return statistics
   */
  @javax.annotation.Nullable
  public DescribeClassificationJobResponseStatistics getStatistics() {
    return statistics;
  }

  public void setStatistics(DescribeClassificationJobResponseStatistics statistics) {
    this.statistics = statistics;
  }


  public DescribeClassificationJobResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public DescribeClassificationJobResponse userPausedDetails(DescribeClassificationJobResponseUserPausedDetails userPausedDetails) {
    this.userPausedDetails = userPausedDetails;
    return this;
  }

  /**
   * Get userPausedDetails
   * @return userPausedDetails
   */
  @javax.annotation.Nullable
  public DescribeClassificationJobResponseUserPausedDetails getUserPausedDetails() {
    return userPausedDetails;
  }

  public void setUserPausedDetails(DescribeClassificationJobResponseUserPausedDetails userPausedDetails) {
    this.userPausedDetails = userPausedDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeClassificationJobResponse describeClassificationJobResponse = (DescribeClassificationJobResponse) o;
    return Objects.equals(this.allowListIds, describeClassificationJobResponse.allowListIds) &&
        Objects.equals(this.clientToken, describeClassificationJobResponse.clientToken) &&
        Objects.equals(this.createdAt, describeClassificationJobResponse.createdAt) &&
        Objects.equals(this.customDataIdentifierIds, describeClassificationJobResponse.customDataIdentifierIds) &&
        Objects.equals(this.description, describeClassificationJobResponse.description) &&
        Objects.equals(this.initialRun, describeClassificationJobResponse.initialRun) &&
        Objects.equals(this.jobArn, describeClassificationJobResponse.jobArn) &&
        Objects.equals(this.jobId, describeClassificationJobResponse.jobId) &&
        Objects.equals(this.jobStatus, describeClassificationJobResponse.jobStatus) &&
        Objects.equals(this.jobType, describeClassificationJobResponse.jobType) &&
        Objects.equals(this.lastRunErrorStatus, describeClassificationJobResponse.lastRunErrorStatus) &&
        Objects.equals(this.lastRunTime, describeClassificationJobResponse.lastRunTime) &&
        Objects.equals(this.managedDataIdentifierIds, describeClassificationJobResponse.managedDataIdentifierIds) &&
        Objects.equals(this.managedDataIdentifierSelector, describeClassificationJobResponse.managedDataIdentifierSelector) &&
        Objects.equals(this.name, describeClassificationJobResponse.name) &&
        Objects.equals(this.s3JobDefinition, describeClassificationJobResponse.s3JobDefinition) &&
        Objects.equals(this.samplingPercentage, describeClassificationJobResponse.samplingPercentage) &&
        Objects.equals(this.scheduleFrequency, describeClassificationJobResponse.scheduleFrequency) &&
        Objects.equals(this.statistics, describeClassificationJobResponse.statistics) &&
        Objects.equals(this.tags, describeClassificationJobResponse.tags) &&
        Objects.equals(this.userPausedDetails, describeClassificationJobResponse.userPausedDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowListIds, clientToken, createdAt, customDataIdentifierIds, description, initialRun, jobArn, jobId, jobStatus, jobType, lastRunErrorStatus, lastRunTime, managedDataIdentifierIds, managedDataIdentifierSelector, name, s3JobDefinition, samplingPercentage, scheduleFrequency, statistics, tags, userPausedDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeClassificationJobResponse {\n");
    sb.append("    allowListIds: ").append(toIndentedString(allowListIds)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    customDataIdentifierIds: ").append(toIndentedString(customDataIdentifierIds)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    initialRun: ").append(toIndentedString(initialRun)).append("\n");
    sb.append("    jobArn: ").append(toIndentedString(jobArn)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    lastRunErrorStatus: ").append(toIndentedString(lastRunErrorStatus)).append("\n");
    sb.append("    lastRunTime: ").append(toIndentedString(lastRunTime)).append("\n");
    sb.append("    managedDataIdentifierIds: ").append(toIndentedString(managedDataIdentifierIds)).append("\n");
    sb.append("    managedDataIdentifierSelector: ").append(toIndentedString(managedDataIdentifierSelector)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    s3JobDefinition: ").append(toIndentedString(s3JobDefinition)).append("\n");
    sb.append("    samplingPercentage: ").append(toIndentedString(samplingPercentage)).append("\n");
    sb.append("    scheduleFrequency: ").append(toIndentedString(scheduleFrequency)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    userPausedDetails: ").append(toIndentedString(userPausedDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowListIds");
    openapiFields.add("clientToken");
    openapiFields.add("createdAt");
    openapiFields.add("customDataIdentifierIds");
    openapiFields.add("description");
    openapiFields.add("initialRun");
    openapiFields.add("jobArn");
    openapiFields.add("jobId");
    openapiFields.add("jobStatus");
    openapiFields.add("jobType");
    openapiFields.add("lastRunErrorStatus");
    openapiFields.add("lastRunTime");
    openapiFields.add("managedDataIdentifierIds");
    openapiFields.add("managedDataIdentifierSelector");
    openapiFields.add("name");
    openapiFields.add("s3JobDefinition");
    openapiFields.add("samplingPercentage");
    openapiFields.add("scheduleFrequency");
    openapiFields.add("statistics");
    openapiFields.add("tags");
    openapiFields.add("userPausedDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeClassificationJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeClassificationJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeClassificationJobResponse is not found in the empty JSON string", DescribeClassificationJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeClassificationJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeClassificationJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `allowListIds`
      if (jsonObj.get("allowListIds") != null && !jsonObj.get("allowListIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("allowListIds"));
      }
      // validate the optional field `clientToken`
      if (jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clientToken"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `customDataIdentifierIds`
      if (jsonObj.get("customDataIdentifierIds") != null && !jsonObj.get("customDataIdentifierIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("customDataIdentifierIds"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `initialRun`
      if (jsonObj.get("initialRun") != null && !jsonObj.get("initialRun").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("initialRun"));
      }
      // validate the optional field `jobArn`
      if (jsonObj.get("jobArn") != null && !jsonObj.get("jobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("jobArn"));
      }
      // validate the optional field `jobId`
      if (jsonObj.get("jobId") != null && !jsonObj.get("jobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("jobId"));
      }
      // validate the optional field `jobStatus`
      if (jsonObj.get("jobStatus") != null && !jsonObj.get("jobStatus").isJsonNull()) {
        JobStatus.validateJsonElement(jsonObj.get("jobStatus"));
      }
      // validate the optional field `jobType`
      if (jsonObj.get("jobType") != null && !jsonObj.get("jobType").isJsonNull()) {
        JobType.validateJsonElement(jsonObj.get("jobType"));
      }
      // validate the optional field `lastRunErrorStatus`
      if (jsonObj.get("lastRunErrorStatus") != null && !jsonObj.get("lastRunErrorStatus").isJsonNull()) {
        DescribeClassificationJobResponseLastRunErrorStatus.validateJsonElement(jsonObj.get("lastRunErrorStatus"));
      }
      // validate the optional field `lastRunTime`
      if (jsonObj.get("lastRunTime") != null && !jsonObj.get("lastRunTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastRunTime"));
      }
      // validate the optional field `managedDataIdentifierIds`
      if (jsonObj.get("managedDataIdentifierIds") != null && !jsonObj.get("managedDataIdentifierIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("managedDataIdentifierIds"));
      }
      // validate the optional field `managedDataIdentifierSelector`
      if (jsonObj.get("managedDataIdentifierSelector") != null && !jsonObj.get("managedDataIdentifierSelector").isJsonNull()) {
        ManagedDataIdentifierSelector.validateJsonElement(jsonObj.get("managedDataIdentifierSelector"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `s3JobDefinition`
      if (jsonObj.get("s3JobDefinition") != null && !jsonObj.get("s3JobDefinition").isJsonNull()) {
        DescribeClassificationJobResponseS3JobDefinition.validateJsonElement(jsonObj.get("s3JobDefinition"));
      }
      // validate the optional field `samplingPercentage`
      if (jsonObj.get("samplingPercentage") != null && !jsonObj.get("samplingPercentage").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("samplingPercentage"));
      }
      // validate the optional field `scheduleFrequency`
      if (jsonObj.get("scheduleFrequency") != null && !jsonObj.get("scheduleFrequency").isJsonNull()) {
        DescribeClassificationJobResponseScheduleFrequency.validateJsonElement(jsonObj.get("scheduleFrequency"));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        DescribeClassificationJobResponseStatistics.validateJsonElement(jsonObj.get("statistics"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `userPausedDetails`
      if (jsonObj.get("userPausedDetails") != null && !jsonObj.get("userPausedDetails").isJsonNull()) {
        DescribeClassificationJobResponseUserPausedDetails.validateJsonElement(jsonObj.get("userPausedDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeClassificationJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeClassificationJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeClassificationJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeClassificationJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeClassificationJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeClassificationJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeClassificationJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeClassificationJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeClassificationJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeClassificationJobResponse
   */
  public static DescribeClassificationJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeClassificationJobResponse.class);
  }

  /**
   * Convert an instance of DescribeClassificationJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

