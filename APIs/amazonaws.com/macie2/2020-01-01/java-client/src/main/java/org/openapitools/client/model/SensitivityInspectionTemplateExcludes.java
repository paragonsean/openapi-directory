/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies managed data identifiers to exclude (not use) when performing automated sensitive data discovery for an Amazon Macie account. For information about the managed data identifiers that Amazon Macie currently provides, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/macie/latest/user/managed-data-identifiers.html\&quot;&gt;Using managed data identifiers&lt;/a&gt; in the &lt;i&gt;Amazon Macie User Guide&lt;/i&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:49.935146-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SensitivityInspectionTemplateExcludes {
  public static final String SERIALIZED_NAME_MANAGED_DATA_IDENTIFIER_IDS = "managedDataIdentifierIds";
  @SerializedName(SERIALIZED_NAME_MANAGED_DATA_IDENTIFIER_IDS)
  private List managedDataIdentifierIds;

  public SensitivityInspectionTemplateExcludes() {
  }

  public SensitivityInspectionTemplateExcludes managedDataIdentifierIds(List managedDataIdentifierIds) {
    this.managedDataIdentifierIds = managedDataIdentifierIds;
    return this;
  }

  /**
   * Get managedDataIdentifierIds
   * @return managedDataIdentifierIds
   */
  @javax.annotation.Nullable
  public List getManagedDataIdentifierIds() {
    return managedDataIdentifierIds;
  }

  public void setManagedDataIdentifierIds(List managedDataIdentifierIds) {
    this.managedDataIdentifierIds = managedDataIdentifierIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SensitivityInspectionTemplateExcludes sensitivityInspectionTemplateExcludes = (SensitivityInspectionTemplateExcludes) o;
    return Objects.equals(this.managedDataIdentifierIds, sensitivityInspectionTemplateExcludes.managedDataIdentifierIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(managedDataIdentifierIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensitivityInspectionTemplateExcludes {\n");
    sb.append("    managedDataIdentifierIds: ").append(toIndentedString(managedDataIdentifierIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("managedDataIdentifierIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SensitivityInspectionTemplateExcludes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SensitivityInspectionTemplateExcludes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SensitivityInspectionTemplateExcludes is not found in the empty JSON string", SensitivityInspectionTemplateExcludes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SensitivityInspectionTemplateExcludes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SensitivityInspectionTemplateExcludes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `managedDataIdentifierIds`
      if (jsonObj.get("managedDataIdentifierIds") != null && !jsonObj.get("managedDataIdentifierIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("managedDataIdentifierIds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SensitivityInspectionTemplateExcludes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SensitivityInspectionTemplateExcludes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SensitivityInspectionTemplateExcludes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SensitivityInspectionTemplateExcludes.class));

       return (TypeAdapter<T>) new TypeAdapter<SensitivityInspectionTemplateExcludes>() {
           @Override
           public void write(JsonWriter out, SensitivityInspectionTemplateExcludes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SensitivityInspectionTemplateExcludes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SensitivityInspectionTemplateExcludes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SensitivityInspectionTemplateExcludes
   * @throws IOException if the JSON string is invalid with respect to SensitivityInspectionTemplateExcludes
   */
  public static SensitivityInspectionTemplateExcludes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SensitivityInspectionTemplateExcludes.class);
  }

  /**
   * Convert an instance of SensitivityInspectionTemplateExcludes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

