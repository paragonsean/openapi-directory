/*
 * Amazon Macie 2
 * Amazon Macie
 *
 * The version of the OpenAPI document: 2020-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AllowsUnencryptedObjectUploads;
import org.openapitools.client.model.BucketMetadataErrorCode;
import org.openapitools.client.model.BucketMetadataJobDetails;
import org.openapitools.client.model.BucketMetadataObjectCountByEncryptionType;
import org.openapitools.client.model.BucketMetadataPublicAccess;
import org.openapitools.client.model.BucketMetadataReplicationDetails;
import org.openapitools.client.model.BucketMetadataServerSideEncryption;
import org.openapitools.client.model.BucketMetadataUnclassifiableObjectCount;
import org.openapitools.client.model.BucketMetadataUnclassifiableObjectSizeInBytes;
import org.openapitools.client.model.SharedAccess;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Provides statistical data and other information about an S3 bucket that Amazon Macie monitors and analyzes for your account. By default, object count and storage size values include data for object parts that are the result of incomplete multipart uploads. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/macie/latest/user/monitoring-s3-how-it-works.html\&quot;&gt;How Macie monitors Amazon S3 data security&lt;/a&gt; in the &lt;i&gt;Amazon Macie User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If an error occurs when Macie attempts to retrieve and process metadata from Amazon S3 for the bucket or the bucket&#39;s objects, the value for the versioning property is false and the value for most other properties is null. Key exceptions are accountId, bucketArn, bucketCreatedAt, bucketName, lastUpdated, and region. To identify the cause of the error, refer to the errorCode and errorMessage values.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:49.935146-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BucketMetadata {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ALLOWS_UNENCRYPTED_OBJECT_UPLOADS = "allowsUnencryptedObjectUploads";
  @SerializedName(SERIALIZED_NAME_ALLOWS_UNENCRYPTED_OBJECT_UPLOADS)
  private AllowsUnencryptedObjectUploads allowsUnencryptedObjectUploads;

  public static final String SERIALIZED_NAME_BUCKET_ARN = "bucketArn";
  @SerializedName(SERIALIZED_NAME_BUCKET_ARN)
  private String bucketArn;

  public static final String SERIALIZED_NAME_BUCKET_CREATED_AT = "bucketCreatedAt";
  @SerializedName(SERIALIZED_NAME_BUCKET_CREATED_AT)
  private OffsetDateTime bucketCreatedAt;

  public static final String SERIALIZED_NAME_BUCKET_NAME = "bucketName";
  @SerializedName(SERIALIZED_NAME_BUCKET_NAME)
  private String bucketName;

  public static final String SERIALIZED_NAME_CLASSIFIABLE_OBJECT_COUNT = "classifiableObjectCount";
  @SerializedName(SERIALIZED_NAME_CLASSIFIABLE_OBJECT_COUNT)
  private Integer classifiableObjectCount;

  public static final String SERIALIZED_NAME_CLASSIFIABLE_SIZE_IN_BYTES = "classifiableSizeInBytes";
  @SerializedName(SERIALIZED_NAME_CLASSIFIABLE_SIZE_IN_BYTES)
  private Integer classifiableSizeInBytes;

  public static final String SERIALIZED_NAME_ERROR_CODE = "errorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private BucketMetadataErrorCode errorCode;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "errorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_JOB_DETAILS = "jobDetails";
  @SerializedName(SERIALIZED_NAME_JOB_DETAILS)
  private BucketMetadataJobDetails jobDetails;

  public static final String SERIALIZED_NAME_LAST_AUTOMATED_DISCOVERY_TIME = "lastAutomatedDiscoveryTime";
  @SerializedName(SERIALIZED_NAME_LAST_AUTOMATED_DISCOVERY_TIME)
  private OffsetDateTime lastAutomatedDiscoveryTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_OBJECT_COUNT = "objectCount";
  @SerializedName(SERIALIZED_NAME_OBJECT_COUNT)
  private Integer objectCount;

  public static final String SERIALIZED_NAME_OBJECT_COUNT_BY_ENCRYPTION_TYPE = "objectCountByEncryptionType";
  @SerializedName(SERIALIZED_NAME_OBJECT_COUNT_BY_ENCRYPTION_TYPE)
  private BucketMetadataObjectCountByEncryptionType objectCountByEncryptionType;

  public static final String SERIALIZED_NAME_PUBLIC_ACCESS = "publicAccess";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ACCESS)
  private BucketMetadataPublicAccess publicAccess;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_REPLICATION_DETAILS = "replicationDetails";
  @SerializedName(SERIALIZED_NAME_REPLICATION_DETAILS)
  private BucketMetadataReplicationDetails replicationDetails;

  public static final String SERIALIZED_NAME_SENSITIVITY_SCORE = "sensitivityScore";
  @SerializedName(SERIALIZED_NAME_SENSITIVITY_SCORE)
  private Integer sensitivityScore;

  public static final String SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION = "serverSideEncryption";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_ENCRYPTION)
  private BucketMetadataServerSideEncryption serverSideEncryption;

  public static final String SERIALIZED_NAME_SHARED_ACCESS = "sharedAccess";
  @SerializedName(SERIALIZED_NAME_SHARED_ACCESS)
  private SharedAccess sharedAccess;

  public static final String SERIALIZED_NAME_SIZE_IN_BYTES = "sizeInBytes";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_BYTES)
  private Integer sizeInBytes;

  public static final String SERIALIZED_NAME_SIZE_IN_BYTES_COMPRESSED = "sizeInBytesCompressed";
  @SerializedName(SERIALIZED_NAME_SIZE_IN_BYTES_COMPRESSED)
  private Integer sizeInBytesCompressed;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_UNCLASSIFIABLE_OBJECT_COUNT = "unclassifiableObjectCount";
  @SerializedName(SERIALIZED_NAME_UNCLASSIFIABLE_OBJECT_COUNT)
  private BucketMetadataUnclassifiableObjectCount unclassifiableObjectCount;

  public static final String SERIALIZED_NAME_UNCLASSIFIABLE_OBJECT_SIZE_IN_BYTES = "unclassifiableObjectSizeInBytes";
  @SerializedName(SERIALIZED_NAME_UNCLASSIFIABLE_OBJECT_SIZE_IN_BYTES)
  private BucketMetadataUnclassifiableObjectSizeInBytes unclassifiableObjectSizeInBytes;

  public static final String SERIALIZED_NAME_VERSIONING = "versioning";
  @SerializedName(SERIALIZED_NAME_VERSIONING)
  private Boolean versioning;

  public BucketMetadata() {
  }

  public BucketMetadata accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public BucketMetadata allowsUnencryptedObjectUploads(AllowsUnencryptedObjectUploads allowsUnencryptedObjectUploads) {
    this.allowsUnencryptedObjectUploads = allowsUnencryptedObjectUploads;
    return this;
  }

  /**
   * Get allowsUnencryptedObjectUploads
   * @return allowsUnencryptedObjectUploads
   */
  @javax.annotation.Nullable
  public AllowsUnencryptedObjectUploads getAllowsUnencryptedObjectUploads() {
    return allowsUnencryptedObjectUploads;
  }

  public void setAllowsUnencryptedObjectUploads(AllowsUnencryptedObjectUploads allowsUnencryptedObjectUploads) {
    this.allowsUnencryptedObjectUploads = allowsUnencryptedObjectUploads;
  }


  public BucketMetadata bucketArn(String bucketArn) {
    this.bucketArn = bucketArn;
    return this;
  }

  /**
   * Get bucketArn
   * @return bucketArn
   */
  @javax.annotation.Nullable
  public String getBucketArn() {
    return bucketArn;
  }

  public void setBucketArn(String bucketArn) {
    this.bucketArn = bucketArn;
  }


  public BucketMetadata bucketCreatedAt(OffsetDateTime bucketCreatedAt) {
    this.bucketCreatedAt = bucketCreatedAt;
    return this;
  }

  /**
   * Get bucketCreatedAt
   * @return bucketCreatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getBucketCreatedAt() {
    return bucketCreatedAt;
  }

  public void setBucketCreatedAt(OffsetDateTime bucketCreatedAt) {
    this.bucketCreatedAt = bucketCreatedAt;
  }


  public BucketMetadata bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

  /**
   * Get bucketName
   * @return bucketName
   */
  @javax.annotation.Nullable
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }


  public BucketMetadata classifiableObjectCount(Integer classifiableObjectCount) {
    this.classifiableObjectCount = classifiableObjectCount;
    return this;
  }

  /**
   * Get classifiableObjectCount
   * @return classifiableObjectCount
   */
  @javax.annotation.Nullable
  public Integer getClassifiableObjectCount() {
    return classifiableObjectCount;
  }

  public void setClassifiableObjectCount(Integer classifiableObjectCount) {
    this.classifiableObjectCount = classifiableObjectCount;
  }


  public BucketMetadata classifiableSizeInBytes(Integer classifiableSizeInBytes) {
    this.classifiableSizeInBytes = classifiableSizeInBytes;
    return this;
  }

  /**
   * Get classifiableSizeInBytes
   * @return classifiableSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getClassifiableSizeInBytes() {
    return classifiableSizeInBytes;
  }

  public void setClassifiableSizeInBytes(Integer classifiableSizeInBytes) {
    this.classifiableSizeInBytes = classifiableSizeInBytes;
  }


  public BucketMetadata errorCode(BucketMetadataErrorCode errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Get errorCode
   * @return errorCode
   */
  @javax.annotation.Nullable
  public BucketMetadataErrorCode getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(BucketMetadataErrorCode errorCode) {
    this.errorCode = errorCode;
  }


  public BucketMetadata errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Get errorMessage
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public BucketMetadata jobDetails(BucketMetadataJobDetails jobDetails) {
    this.jobDetails = jobDetails;
    return this;
  }

  /**
   * Get jobDetails
   * @return jobDetails
   */
  @javax.annotation.Nullable
  public BucketMetadataJobDetails getJobDetails() {
    return jobDetails;
  }

  public void setJobDetails(BucketMetadataJobDetails jobDetails) {
    this.jobDetails = jobDetails;
  }


  public BucketMetadata lastAutomatedDiscoveryTime(OffsetDateTime lastAutomatedDiscoveryTime) {
    this.lastAutomatedDiscoveryTime = lastAutomatedDiscoveryTime;
    return this;
  }

  /**
   * Get lastAutomatedDiscoveryTime
   * @return lastAutomatedDiscoveryTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAutomatedDiscoveryTime() {
    return lastAutomatedDiscoveryTime;
  }

  public void setLastAutomatedDiscoveryTime(OffsetDateTime lastAutomatedDiscoveryTime) {
    this.lastAutomatedDiscoveryTime = lastAutomatedDiscoveryTime;
  }


  public BucketMetadata lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public BucketMetadata objectCount(Integer objectCount) {
    this.objectCount = objectCount;
    return this;
  }

  /**
   * Get objectCount
   * @return objectCount
   */
  @javax.annotation.Nullable
  public Integer getObjectCount() {
    return objectCount;
  }

  public void setObjectCount(Integer objectCount) {
    this.objectCount = objectCount;
  }


  public BucketMetadata objectCountByEncryptionType(BucketMetadataObjectCountByEncryptionType objectCountByEncryptionType) {
    this.objectCountByEncryptionType = objectCountByEncryptionType;
    return this;
  }

  /**
   * Get objectCountByEncryptionType
   * @return objectCountByEncryptionType
   */
  @javax.annotation.Nullable
  public BucketMetadataObjectCountByEncryptionType getObjectCountByEncryptionType() {
    return objectCountByEncryptionType;
  }

  public void setObjectCountByEncryptionType(BucketMetadataObjectCountByEncryptionType objectCountByEncryptionType) {
    this.objectCountByEncryptionType = objectCountByEncryptionType;
  }


  public BucketMetadata publicAccess(BucketMetadataPublicAccess publicAccess) {
    this.publicAccess = publicAccess;
    return this;
  }

  /**
   * Get publicAccess
   * @return publicAccess
   */
  @javax.annotation.Nullable
  public BucketMetadataPublicAccess getPublicAccess() {
    return publicAccess;
  }

  public void setPublicAccess(BucketMetadataPublicAccess publicAccess) {
    this.publicAccess = publicAccess;
  }


  public BucketMetadata region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public BucketMetadata replicationDetails(BucketMetadataReplicationDetails replicationDetails) {
    this.replicationDetails = replicationDetails;
    return this;
  }

  /**
   * Get replicationDetails
   * @return replicationDetails
   */
  @javax.annotation.Nullable
  public BucketMetadataReplicationDetails getReplicationDetails() {
    return replicationDetails;
  }

  public void setReplicationDetails(BucketMetadataReplicationDetails replicationDetails) {
    this.replicationDetails = replicationDetails;
  }


  public BucketMetadata sensitivityScore(Integer sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
    return this;
  }

  /**
   * Get sensitivityScore
   * @return sensitivityScore
   */
  @javax.annotation.Nullable
  public Integer getSensitivityScore() {
    return sensitivityScore;
  }

  public void setSensitivityScore(Integer sensitivityScore) {
    this.sensitivityScore = sensitivityScore;
  }


  public BucketMetadata serverSideEncryption(BucketMetadataServerSideEncryption serverSideEncryption) {
    this.serverSideEncryption = serverSideEncryption;
    return this;
  }

  /**
   * Get serverSideEncryption
   * @return serverSideEncryption
   */
  @javax.annotation.Nullable
  public BucketMetadataServerSideEncryption getServerSideEncryption() {
    return serverSideEncryption;
  }

  public void setServerSideEncryption(BucketMetadataServerSideEncryption serverSideEncryption) {
    this.serverSideEncryption = serverSideEncryption;
  }


  public BucketMetadata sharedAccess(SharedAccess sharedAccess) {
    this.sharedAccess = sharedAccess;
    return this;
  }

  /**
   * Get sharedAccess
   * @return sharedAccess
   */
  @javax.annotation.Nullable
  public SharedAccess getSharedAccess() {
    return sharedAccess;
  }

  public void setSharedAccess(SharedAccess sharedAccess) {
    this.sharedAccess = sharedAccess;
  }


  public BucketMetadata sizeInBytes(Integer sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
    return this;
  }

  /**
   * Get sizeInBytes
   * @return sizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getSizeInBytes() {
    return sizeInBytes;
  }

  public void setSizeInBytes(Integer sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
  }


  public BucketMetadata sizeInBytesCompressed(Integer sizeInBytesCompressed) {
    this.sizeInBytesCompressed = sizeInBytesCompressed;
    return this;
  }

  /**
   * Get sizeInBytesCompressed
   * @return sizeInBytesCompressed
   */
  @javax.annotation.Nullable
  public Integer getSizeInBytesCompressed() {
    return sizeInBytesCompressed;
  }

  public void setSizeInBytesCompressed(Integer sizeInBytesCompressed) {
    this.sizeInBytesCompressed = sizeInBytesCompressed;
  }


  public BucketMetadata tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public BucketMetadata unclassifiableObjectCount(BucketMetadataUnclassifiableObjectCount unclassifiableObjectCount) {
    this.unclassifiableObjectCount = unclassifiableObjectCount;
    return this;
  }

  /**
   * Get unclassifiableObjectCount
   * @return unclassifiableObjectCount
   */
  @javax.annotation.Nullable
  public BucketMetadataUnclassifiableObjectCount getUnclassifiableObjectCount() {
    return unclassifiableObjectCount;
  }

  public void setUnclassifiableObjectCount(BucketMetadataUnclassifiableObjectCount unclassifiableObjectCount) {
    this.unclassifiableObjectCount = unclassifiableObjectCount;
  }


  public BucketMetadata unclassifiableObjectSizeInBytes(BucketMetadataUnclassifiableObjectSizeInBytes unclassifiableObjectSizeInBytes) {
    this.unclassifiableObjectSizeInBytes = unclassifiableObjectSizeInBytes;
    return this;
  }

  /**
   * Get unclassifiableObjectSizeInBytes
   * @return unclassifiableObjectSizeInBytes
   */
  @javax.annotation.Nullable
  public BucketMetadataUnclassifiableObjectSizeInBytes getUnclassifiableObjectSizeInBytes() {
    return unclassifiableObjectSizeInBytes;
  }

  public void setUnclassifiableObjectSizeInBytes(BucketMetadataUnclassifiableObjectSizeInBytes unclassifiableObjectSizeInBytes) {
    this.unclassifiableObjectSizeInBytes = unclassifiableObjectSizeInBytes;
  }


  public BucketMetadata versioning(Boolean versioning) {
    this.versioning = versioning;
    return this;
  }

  /**
   * Get versioning
   * @return versioning
   */
  @javax.annotation.Nullable
  public Boolean getVersioning() {
    return versioning;
  }

  public void setVersioning(Boolean versioning) {
    this.versioning = versioning;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BucketMetadata bucketMetadata = (BucketMetadata) o;
    return Objects.equals(this.accountId, bucketMetadata.accountId) &&
        Objects.equals(this.allowsUnencryptedObjectUploads, bucketMetadata.allowsUnencryptedObjectUploads) &&
        Objects.equals(this.bucketArn, bucketMetadata.bucketArn) &&
        Objects.equals(this.bucketCreatedAt, bucketMetadata.bucketCreatedAt) &&
        Objects.equals(this.bucketName, bucketMetadata.bucketName) &&
        Objects.equals(this.classifiableObjectCount, bucketMetadata.classifiableObjectCount) &&
        Objects.equals(this.classifiableSizeInBytes, bucketMetadata.classifiableSizeInBytes) &&
        Objects.equals(this.errorCode, bucketMetadata.errorCode) &&
        Objects.equals(this.errorMessage, bucketMetadata.errorMessage) &&
        Objects.equals(this.jobDetails, bucketMetadata.jobDetails) &&
        Objects.equals(this.lastAutomatedDiscoveryTime, bucketMetadata.lastAutomatedDiscoveryTime) &&
        Objects.equals(this.lastUpdated, bucketMetadata.lastUpdated) &&
        Objects.equals(this.objectCount, bucketMetadata.objectCount) &&
        Objects.equals(this.objectCountByEncryptionType, bucketMetadata.objectCountByEncryptionType) &&
        Objects.equals(this.publicAccess, bucketMetadata.publicAccess) &&
        Objects.equals(this.region, bucketMetadata.region) &&
        Objects.equals(this.replicationDetails, bucketMetadata.replicationDetails) &&
        Objects.equals(this.sensitivityScore, bucketMetadata.sensitivityScore) &&
        Objects.equals(this.serverSideEncryption, bucketMetadata.serverSideEncryption) &&
        Objects.equals(this.sharedAccess, bucketMetadata.sharedAccess) &&
        Objects.equals(this.sizeInBytes, bucketMetadata.sizeInBytes) &&
        Objects.equals(this.sizeInBytesCompressed, bucketMetadata.sizeInBytesCompressed) &&
        Objects.equals(this.tags, bucketMetadata.tags) &&
        Objects.equals(this.unclassifiableObjectCount, bucketMetadata.unclassifiableObjectCount) &&
        Objects.equals(this.unclassifiableObjectSizeInBytes, bucketMetadata.unclassifiableObjectSizeInBytes) &&
        Objects.equals(this.versioning, bucketMetadata.versioning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, allowsUnencryptedObjectUploads, bucketArn, bucketCreatedAt, bucketName, classifiableObjectCount, classifiableSizeInBytes, errorCode, errorMessage, jobDetails, lastAutomatedDiscoveryTime, lastUpdated, objectCount, objectCountByEncryptionType, publicAccess, region, replicationDetails, sensitivityScore, serverSideEncryption, sharedAccess, sizeInBytes, sizeInBytesCompressed, tags, unclassifiableObjectCount, unclassifiableObjectSizeInBytes, versioning);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BucketMetadata {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    allowsUnencryptedObjectUploads: ").append(toIndentedString(allowsUnencryptedObjectUploads)).append("\n");
    sb.append("    bucketArn: ").append(toIndentedString(bucketArn)).append("\n");
    sb.append("    bucketCreatedAt: ").append(toIndentedString(bucketCreatedAt)).append("\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    classifiableObjectCount: ").append(toIndentedString(classifiableObjectCount)).append("\n");
    sb.append("    classifiableSizeInBytes: ").append(toIndentedString(classifiableSizeInBytes)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    jobDetails: ").append(toIndentedString(jobDetails)).append("\n");
    sb.append("    lastAutomatedDiscoveryTime: ").append(toIndentedString(lastAutomatedDiscoveryTime)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    objectCount: ").append(toIndentedString(objectCount)).append("\n");
    sb.append("    objectCountByEncryptionType: ").append(toIndentedString(objectCountByEncryptionType)).append("\n");
    sb.append("    publicAccess: ").append(toIndentedString(publicAccess)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    replicationDetails: ").append(toIndentedString(replicationDetails)).append("\n");
    sb.append("    sensitivityScore: ").append(toIndentedString(sensitivityScore)).append("\n");
    sb.append("    serverSideEncryption: ").append(toIndentedString(serverSideEncryption)).append("\n");
    sb.append("    sharedAccess: ").append(toIndentedString(sharedAccess)).append("\n");
    sb.append("    sizeInBytes: ").append(toIndentedString(sizeInBytes)).append("\n");
    sb.append("    sizeInBytesCompressed: ").append(toIndentedString(sizeInBytesCompressed)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    unclassifiableObjectCount: ").append(toIndentedString(unclassifiableObjectCount)).append("\n");
    sb.append("    unclassifiableObjectSizeInBytes: ").append(toIndentedString(unclassifiableObjectSizeInBytes)).append("\n");
    sb.append("    versioning: ").append(toIndentedString(versioning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("allowsUnencryptedObjectUploads");
    openapiFields.add("bucketArn");
    openapiFields.add("bucketCreatedAt");
    openapiFields.add("bucketName");
    openapiFields.add("classifiableObjectCount");
    openapiFields.add("classifiableSizeInBytes");
    openapiFields.add("errorCode");
    openapiFields.add("errorMessage");
    openapiFields.add("jobDetails");
    openapiFields.add("lastAutomatedDiscoveryTime");
    openapiFields.add("lastUpdated");
    openapiFields.add("objectCount");
    openapiFields.add("objectCountByEncryptionType");
    openapiFields.add("publicAccess");
    openapiFields.add("region");
    openapiFields.add("replicationDetails");
    openapiFields.add("sensitivityScore");
    openapiFields.add("serverSideEncryption");
    openapiFields.add("sharedAccess");
    openapiFields.add("sizeInBytes");
    openapiFields.add("sizeInBytesCompressed");
    openapiFields.add("tags");
    openapiFields.add("unclassifiableObjectCount");
    openapiFields.add("unclassifiableObjectSizeInBytes");
    openapiFields.add("versioning");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BucketMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BucketMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BucketMetadata is not found in the empty JSON string", BucketMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BucketMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BucketMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accountId`
      if (jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("accountId"));
      }
      // validate the optional field `allowsUnencryptedObjectUploads`
      if (jsonObj.get("allowsUnencryptedObjectUploads") != null && !jsonObj.get("allowsUnencryptedObjectUploads").isJsonNull()) {
        AllowsUnencryptedObjectUploads.validateJsonElement(jsonObj.get("allowsUnencryptedObjectUploads"));
      }
      // validate the optional field `bucketArn`
      if (jsonObj.get("bucketArn") != null && !jsonObj.get("bucketArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("bucketArn"));
      }
      // validate the optional field `bucketCreatedAt`
      if (jsonObj.get("bucketCreatedAt") != null && !jsonObj.get("bucketCreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("bucketCreatedAt"));
      }
      // validate the optional field `bucketName`
      if (jsonObj.get("bucketName") != null && !jsonObj.get("bucketName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("bucketName"));
      }
      // validate the optional field `classifiableObjectCount`
      if (jsonObj.get("classifiableObjectCount") != null && !jsonObj.get("classifiableObjectCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("classifiableObjectCount"));
      }
      // validate the optional field `classifiableSizeInBytes`
      if (jsonObj.get("classifiableSizeInBytes") != null && !jsonObj.get("classifiableSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("classifiableSizeInBytes"));
      }
      // validate the optional field `errorCode`
      if (jsonObj.get("errorCode") != null && !jsonObj.get("errorCode").isJsonNull()) {
        BucketMetadataErrorCode.validateJsonElement(jsonObj.get("errorCode"));
      }
      // validate the optional field `errorMessage`
      if (jsonObj.get("errorMessage") != null && !jsonObj.get("errorMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("errorMessage"));
      }
      // validate the optional field `jobDetails`
      if (jsonObj.get("jobDetails") != null && !jsonObj.get("jobDetails").isJsonNull()) {
        BucketMetadataJobDetails.validateJsonElement(jsonObj.get("jobDetails"));
      }
      // validate the optional field `lastAutomatedDiscoveryTime`
      if (jsonObj.get("lastAutomatedDiscoveryTime") != null && !jsonObj.get("lastAutomatedDiscoveryTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastAutomatedDiscoveryTime"));
      }
      // validate the optional field `lastUpdated`
      if (jsonObj.get("lastUpdated") != null && !jsonObj.get("lastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdated"));
      }
      // validate the optional field `objectCount`
      if (jsonObj.get("objectCount") != null && !jsonObj.get("objectCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("objectCount"));
      }
      // validate the optional field `objectCountByEncryptionType`
      if (jsonObj.get("objectCountByEncryptionType") != null && !jsonObj.get("objectCountByEncryptionType").isJsonNull()) {
        BucketMetadataObjectCountByEncryptionType.validateJsonElement(jsonObj.get("objectCountByEncryptionType"));
      }
      // validate the optional field `publicAccess`
      if (jsonObj.get("publicAccess") != null && !jsonObj.get("publicAccess").isJsonNull()) {
        BucketMetadataPublicAccess.validateJsonElement(jsonObj.get("publicAccess"));
      }
      // validate the optional field `region`
      if (jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("region"));
      }
      // validate the optional field `replicationDetails`
      if (jsonObj.get("replicationDetails") != null && !jsonObj.get("replicationDetails").isJsonNull()) {
        BucketMetadataReplicationDetails.validateJsonElement(jsonObj.get("replicationDetails"));
      }
      // validate the optional field `sensitivityScore`
      if (jsonObj.get("sensitivityScore") != null && !jsonObj.get("sensitivityScore").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("sensitivityScore"));
      }
      // validate the optional field `serverSideEncryption`
      if (jsonObj.get("serverSideEncryption") != null && !jsonObj.get("serverSideEncryption").isJsonNull()) {
        BucketMetadataServerSideEncryption.validateJsonElement(jsonObj.get("serverSideEncryption"));
      }
      // validate the optional field `sharedAccess`
      if (jsonObj.get("sharedAccess") != null && !jsonObj.get("sharedAccess").isJsonNull()) {
        SharedAccess.validateJsonElement(jsonObj.get("sharedAccess"));
      }
      // validate the optional field `sizeInBytes`
      if (jsonObj.get("sizeInBytes") != null && !jsonObj.get("sizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("sizeInBytes"));
      }
      // validate the optional field `sizeInBytesCompressed`
      if (jsonObj.get("sizeInBytesCompressed") != null && !jsonObj.get("sizeInBytesCompressed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("sizeInBytesCompressed"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `unclassifiableObjectCount`
      if (jsonObj.get("unclassifiableObjectCount") != null && !jsonObj.get("unclassifiableObjectCount").isJsonNull()) {
        BucketMetadataUnclassifiableObjectCount.validateJsonElement(jsonObj.get("unclassifiableObjectCount"));
      }
      // validate the optional field `unclassifiableObjectSizeInBytes`
      if (jsonObj.get("unclassifiableObjectSizeInBytes") != null && !jsonObj.get("unclassifiableObjectSizeInBytes").isJsonNull()) {
        BucketMetadataUnclassifiableObjectSizeInBytes.validateJsonElement(jsonObj.get("unclassifiableObjectSizeInBytes"));
      }
      // validate the optional field `versioning`
      if (jsonObj.get("versioning") != null && !jsonObj.get("versioning").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("versioning"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BucketMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BucketMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BucketMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BucketMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<BucketMetadata>() {
           @Override
           public void write(JsonWriter out, BucketMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BucketMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BucketMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BucketMetadata
   * @throws IOException if the JSON string is invalid with respect to BucketMetadata
   */
  public static BucketMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BucketMetadata.class);
  }

  /**
   * Convert an instance of BucketMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

