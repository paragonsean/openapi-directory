# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_routing_destination_traffic_state import CustomRoutingDestinationTrafficState
from openapi_server.models.destination_port_mapping_destination_socket_address import DestinationPortMappingDestinationSocketAddress
from openapi_server.models.ip_address_type import IpAddressType
from openapi_server import util


class DestinationPortMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_arn: str=None, accelerator_socket_addresses: List=None, endpoint_group_arn: str=None, endpoint_id: str=None, endpoint_group_region: str=None, destination_socket_address: DestinationPortMappingDestinationSocketAddress=None, ip_address_type: IpAddressType=None, destination_traffic_state: CustomRoutingDestinationTrafficState=None):
        """DestinationPortMapping - a model defined in OpenAPI

        :param accelerator_arn: The accelerator_arn of this DestinationPortMapping.
        :param accelerator_socket_addresses: The accelerator_socket_addresses of this DestinationPortMapping.
        :param endpoint_group_arn: The endpoint_group_arn of this DestinationPortMapping.
        :param endpoint_id: The endpoint_id of this DestinationPortMapping.
        :param endpoint_group_region: The endpoint_group_region of this DestinationPortMapping.
        :param destination_socket_address: The destination_socket_address of this DestinationPortMapping.
        :param ip_address_type: The ip_address_type of this DestinationPortMapping.
        :param destination_traffic_state: The destination_traffic_state of this DestinationPortMapping.
        """
        self.openapi_types = {
            'accelerator_arn': str,
            'accelerator_socket_addresses': List,
            'endpoint_group_arn': str,
            'endpoint_id': str,
            'endpoint_group_region': str,
            'destination_socket_address': DestinationPortMappingDestinationSocketAddress,
            'ip_address_type': IpAddressType,
            'destination_traffic_state': CustomRoutingDestinationTrafficState
        }

        self.attribute_map = {
            'accelerator_arn': 'AcceleratorArn',
            'accelerator_socket_addresses': 'AcceleratorSocketAddresses',
            'endpoint_group_arn': 'EndpointGroupArn',
            'endpoint_id': 'EndpointId',
            'endpoint_group_region': 'EndpointGroupRegion',
            'destination_socket_address': 'DestinationSocketAddress',
            'ip_address_type': 'IpAddressType',
            'destination_traffic_state': 'DestinationTrafficState'
        }

        self._accelerator_arn = accelerator_arn
        self._accelerator_socket_addresses = accelerator_socket_addresses
        self._endpoint_group_arn = endpoint_group_arn
        self._endpoint_id = endpoint_id
        self._endpoint_group_region = endpoint_group_region
        self._destination_socket_address = destination_socket_address
        self._ip_address_type = ip_address_type
        self._destination_traffic_state = destination_traffic_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinationPortMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DestinationPortMapping of this DestinationPortMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_arn(self):
        """Gets the accelerator_arn of this DestinationPortMapping.


        :return: The accelerator_arn of this DestinationPortMapping.
        :rtype: str
        """
        return self._accelerator_arn

    @accelerator_arn.setter
    def accelerator_arn(self, accelerator_arn):
        """Sets the accelerator_arn of this DestinationPortMapping.


        :param accelerator_arn: The accelerator_arn of this DestinationPortMapping.
        :type accelerator_arn: str
        """

        self._accelerator_arn = accelerator_arn

    @property
    def accelerator_socket_addresses(self):
        """Gets the accelerator_socket_addresses of this DestinationPortMapping.


        :return: The accelerator_socket_addresses of this DestinationPortMapping.
        :rtype: List
        """
        return self._accelerator_socket_addresses

    @accelerator_socket_addresses.setter
    def accelerator_socket_addresses(self, accelerator_socket_addresses):
        """Sets the accelerator_socket_addresses of this DestinationPortMapping.


        :param accelerator_socket_addresses: The accelerator_socket_addresses of this DestinationPortMapping.
        :type accelerator_socket_addresses: List
        """

        self._accelerator_socket_addresses = accelerator_socket_addresses

    @property
    def endpoint_group_arn(self):
        """Gets the endpoint_group_arn of this DestinationPortMapping.


        :return: The endpoint_group_arn of this DestinationPortMapping.
        :rtype: str
        """
        return self._endpoint_group_arn

    @endpoint_group_arn.setter
    def endpoint_group_arn(self, endpoint_group_arn):
        """Sets the endpoint_group_arn of this DestinationPortMapping.


        :param endpoint_group_arn: The endpoint_group_arn of this DestinationPortMapping.
        :type endpoint_group_arn: str
        """

        self._endpoint_group_arn = endpoint_group_arn

    @property
    def endpoint_id(self):
        """Gets the endpoint_id of this DestinationPortMapping.


        :return: The endpoint_id of this DestinationPortMapping.
        :rtype: str
        """
        return self._endpoint_id

    @endpoint_id.setter
    def endpoint_id(self, endpoint_id):
        """Sets the endpoint_id of this DestinationPortMapping.


        :param endpoint_id: The endpoint_id of this DestinationPortMapping.
        :type endpoint_id: str
        """

        self._endpoint_id = endpoint_id

    @property
    def endpoint_group_region(self):
        """Gets the endpoint_group_region of this DestinationPortMapping.


        :return: The endpoint_group_region of this DestinationPortMapping.
        :rtype: str
        """
        return self._endpoint_group_region

    @endpoint_group_region.setter
    def endpoint_group_region(self, endpoint_group_region):
        """Sets the endpoint_group_region of this DestinationPortMapping.


        :param endpoint_group_region: The endpoint_group_region of this DestinationPortMapping.
        :type endpoint_group_region: str
        """

        self._endpoint_group_region = endpoint_group_region

    @property
    def destination_socket_address(self):
        """Gets the destination_socket_address of this DestinationPortMapping.


        :return: The destination_socket_address of this DestinationPortMapping.
        :rtype: DestinationPortMappingDestinationSocketAddress
        """
        return self._destination_socket_address

    @destination_socket_address.setter
    def destination_socket_address(self, destination_socket_address):
        """Sets the destination_socket_address of this DestinationPortMapping.


        :param destination_socket_address: The destination_socket_address of this DestinationPortMapping.
        :type destination_socket_address: DestinationPortMappingDestinationSocketAddress
        """

        self._destination_socket_address = destination_socket_address

    @property
    def ip_address_type(self):
        """Gets the ip_address_type of this DestinationPortMapping.


        :return: The ip_address_type of this DestinationPortMapping.
        :rtype: IpAddressType
        """
        return self._ip_address_type

    @ip_address_type.setter
    def ip_address_type(self, ip_address_type):
        """Sets the ip_address_type of this DestinationPortMapping.


        :param ip_address_type: The ip_address_type of this DestinationPortMapping.
        :type ip_address_type: IpAddressType
        """

        self._ip_address_type = ip_address_type

    @property
    def destination_traffic_state(self):
        """Gets the destination_traffic_state of this DestinationPortMapping.


        :return: The destination_traffic_state of this DestinationPortMapping.
        :rtype: CustomRoutingDestinationTrafficState
        """
        return self._destination_traffic_state

    @destination_traffic_state.setter
    def destination_traffic_state(self, destination_traffic_state):
        """Sets the destination_traffic_state of this DestinationPortMapping.


        :param destination_traffic_state: The destination_traffic_state of this DestinationPortMapping.
        :type destination_traffic_state: CustomRoutingDestinationTrafficState
        """

        self._destination_traffic_state = destination_traffic_state
