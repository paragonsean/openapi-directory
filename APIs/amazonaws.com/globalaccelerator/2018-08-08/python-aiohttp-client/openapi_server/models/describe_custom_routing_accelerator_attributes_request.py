# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeCustomRoutingAcceleratorAttributesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_arn: str=None):
        """DescribeCustomRoutingAcceleratorAttributesRequest - a model defined in OpenAPI

        :param accelerator_arn: The accelerator_arn of this DescribeCustomRoutingAcceleratorAttributesRequest.
        """
        self.openapi_types = {
            'accelerator_arn': str
        }

        self.attribute_map = {
            'accelerator_arn': 'AcceleratorArn'
        }

        self._accelerator_arn = accelerator_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCustomRoutingAcceleratorAttributesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCustomRoutingAcceleratorAttributesRequest of this DescribeCustomRoutingAcceleratorAttributesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_arn(self):
        """Gets the accelerator_arn of this DescribeCustomRoutingAcceleratorAttributesRequest.


        :return: The accelerator_arn of this DescribeCustomRoutingAcceleratorAttributesRequest.
        :rtype: str
        """
        return self._accelerator_arn

    @accelerator_arn.setter
    def accelerator_arn(self, accelerator_arn):
        """Sets the accelerator_arn of this DescribeCustomRoutingAcceleratorAttributesRequest.


        :param accelerator_arn: The accelerator_arn of this DescribeCustomRoutingAcceleratorAttributesRequest.
        :type accelerator_arn: str
        """
        if accelerator_arn is None:
            raise ValueError("Invalid value for `accelerator_arn`, must not be `None`")

        self._accelerator_arn = accelerator_arn
