# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_custom_routing_accelerator_response_accelerator import UpdateCustomRoutingAcceleratorResponseAccelerator
from openapi_server import util


class UpdateCustomRoutingAcceleratorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator: UpdateCustomRoutingAcceleratorResponseAccelerator=None):
        """UpdateCustomRoutingAcceleratorResponse - a model defined in OpenAPI

        :param accelerator: The accelerator of this UpdateCustomRoutingAcceleratorResponse.
        """
        self.openapi_types = {
            'accelerator': UpdateCustomRoutingAcceleratorResponseAccelerator
        }

        self.attribute_map = {
            'accelerator': 'Accelerator'
        }

        self._accelerator = accelerator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCustomRoutingAcceleratorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCustomRoutingAcceleratorResponse of this UpdateCustomRoutingAcceleratorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator(self):
        """Gets the accelerator of this UpdateCustomRoutingAcceleratorResponse.


        :return: The accelerator of this UpdateCustomRoutingAcceleratorResponse.
        :rtype: UpdateCustomRoutingAcceleratorResponseAccelerator
        """
        return self._accelerator

    @accelerator.setter
    def accelerator(self, accelerator):
        """Sets the accelerator of this UpdateCustomRoutingAcceleratorResponse.


        :param accelerator: The accelerator of this UpdateCustomRoutingAcceleratorResponse.
        :type accelerator: UpdateCustomRoutingAcceleratorResponseAccelerator
        """

        self._accelerator = accelerator
