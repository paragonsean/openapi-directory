# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accelerator_status import AcceleratorStatus
from openapi_server.models.ip_address_type import IpAddressType
from openapi_server import util


class DescribeAcceleratorResponseAccelerator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_arn: str=None, name: str=None, ip_address_type: IpAddressType=None, enabled: bool=None, ip_sets: List=None, dns_name: str=None, status: AcceleratorStatus=None, created_time: datetime=None, last_modified_time: datetime=None, dual_stack_dns_name: str=None, events: List=None):
        """DescribeAcceleratorResponseAccelerator - a model defined in OpenAPI

        :param accelerator_arn: The accelerator_arn of this DescribeAcceleratorResponseAccelerator.
        :param name: The name of this DescribeAcceleratorResponseAccelerator.
        :param ip_address_type: The ip_address_type of this DescribeAcceleratorResponseAccelerator.
        :param enabled: The enabled of this DescribeAcceleratorResponseAccelerator.
        :param ip_sets: The ip_sets of this DescribeAcceleratorResponseAccelerator.
        :param dns_name: The dns_name of this DescribeAcceleratorResponseAccelerator.
        :param status: The status of this DescribeAcceleratorResponseAccelerator.
        :param created_time: The created_time of this DescribeAcceleratorResponseAccelerator.
        :param last_modified_time: The last_modified_time of this DescribeAcceleratorResponseAccelerator.
        :param dual_stack_dns_name: The dual_stack_dns_name of this DescribeAcceleratorResponseAccelerator.
        :param events: The events of this DescribeAcceleratorResponseAccelerator.
        """
        self.openapi_types = {
            'accelerator_arn': str,
            'name': str,
            'ip_address_type': IpAddressType,
            'enabled': bool,
            'ip_sets': List,
            'dns_name': str,
            'status': AcceleratorStatus,
            'created_time': datetime,
            'last_modified_time': datetime,
            'dual_stack_dns_name': str,
            'events': List
        }

        self.attribute_map = {
            'accelerator_arn': 'AcceleratorArn',
            'name': 'Name',
            'ip_address_type': 'IpAddressType',
            'enabled': 'Enabled',
            'ip_sets': 'IpSets',
            'dns_name': 'DnsName',
            'status': 'Status',
            'created_time': 'CreatedTime',
            'last_modified_time': 'LastModifiedTime',
            'dual_stack_dns_name': 'DualStackDnsName',
            'events': 'Events'
        }

        self._accelerator_arn = accelerator_arn
        self._name = name
        self._ip_address_type = ip_address_type
        self._enabled = enabled
        self._ip_sets = ip_sets
        self._dns_name = dns_name
        self._status = status
        self._created_time = created_time
        self._last_modified_time = last_modified_time
        self._dual_stack_dns_name = dual_stack_dns_name
        self._events = events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAcceleratorResponseAccelerator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAcceleratorResponse_Accelerator of this DescribeAcceleratorResponseAccelerator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_arn(self):
        """Gets the accelerator_arn of this DescribeAcceleratorResponseAccelerator.


        :return: The accelerator_arn of this DescribeAcceleratorResponseAccelerator.
        :rtype: str
        """
        return self._accelerator_arn

    @accelerator_arn.setter
    def accelerator_arn(self, accelerator_arn):
        """Sets the accelerator_arn of this DescribeAcceleratorResponseAccelerator.


        :param accelerator_arn: The accelerator_arn of this DescribeAcceleratorResponseAccelerator.
        :type accelerator_arn: str
        """

        self._accelerator_arn = accelerator_arn

    @property
    def name(self):
        """Gets the name of this DescribeAcceleratorResponseAccelerator.


        :return: The name of this DescribeAcceleratorResponseAccelerator.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DescribeAcceleratorResponseAccelerator.


        :param name: The name of this DescribeAcceleratorResponseAccelerator.
        :type name: str
        """

        self._name = name

    @property
    def ip_address_type(self):
        """Gets the ip_address_type of this DescribeAcceleratorResponseAccelerator.


        :return: The ip_address_type of this DescribeAcceleratorResponseAccelerator.
        :rtype: IpAddressType
        """
        return self._ip_address_type

    @ip_address_type.setter
    def ip_address_type(self, ip_address_type):
        """Sets the ip_address_type of this DescribeAcceleratorResponseAccelerator.


        :param ip_address_type: The ip_address_type of this DescribeAcceleratorResponseAccelerator.
        :type ip_address_type: IpAddressType
        """

        self._ip_address_type = ip_address_type

    @property
    def enabled(self):
        """Gets the enabled of this DescribeAcceleratorResponseAccelerator.


        :return: The enabled of this DescribeAcceleratorResponseAccelerator.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this DescribeAcceleratorResponseAccelerator.


        :param enabled: The enabled of this DescribeAcceleratorResponseAccelerator.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def ip_sets(self):
        """Gets the ip_sets of this DescribeAcceleratorResponseAccelerator.


        :return: The ip_sets of this DescribeAcceleratorResponseAccelerator.
        :rtype: List
        """
        return self._ip_sets

    @ip_sets.setter
    def ip_sets(self, ip_sets):
        """Sets the ip_sets of this DescribeAcceleratorResponseAccelerator.


        :param ip_sets: The ip_sets of this DescribeAcceleratorResponseAccelerator.
        :type ip_sets: List
        """

        self._ip_sets = ip_sets

    @property
    def dns_name(self):
        """Gets the dns_name of this DescribeAcceleratorResponseAccelerator.


        :return: The dns_name of this DescribeAcceleratorResponseAccelerator.
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this DescribeAcceleratorResponseAccelerator.


        :param dns_name: The dns_name of this DescribeAcceleratorResponseAccelerator.
        :type dns_name: str
        """

        self._dns_name = dns_name

    @property
    def status(self):
        """Gets the status of this DescribeAcceleratorResponseAccelerator.


        :return: The status of this DescribeAcceleratorResponseAccelerator.
        :rtype: AcceleratorStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeAcceleratorResponseAccelerator.


        :param status: The status of this DescribeAcceleratorResponseAccelerator.
        :type status: AcceleratorStatus
        """

        self._status = status

    @property
    def created_time(self):
        """Gets the created_time of this DescribeAcceleratorResponseAccelerator.


        :return: The created_time of this DescribeAcceleratorResponseAccelerator.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this DescribeAcceleratorResponseAccelerator.


        :param created_time: The created_time of this DescribeAcceleratorResponseAccelerator.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this DescribeAcceleratorResponseAccelerator.


        :return: The last_modified_time of this DescribeAcceleratorResponseAccelerator.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this DescribeAcceleratorResponseAccelerator.


        :param last_modified_time: The last_modified_time of this DescribeAcceleratorResponseAccelerator.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def dual_stack_dns_name(self):
        """Gets the dual_stack_dns_name of this DescribeAcceleratorResponseAccelerator.


        :return: The dual_stack_dns_name of this DescribeAcceleratorResponseAccelerator.
        :rtype: str
        """
        return self._dual_stack_dns_name

    @dual_stack_dns_name.setter
    def dual_stack_dns_name(self, dual_stack_dns_name):
        """Sets the dual_stack_dns_name of this DescribeAcceleratorResponseAccelerator.


        :param dual_stack_dns_name: The dual_stack_dns_name of this DescribeAcceleratorResponseAccelerator.
        :type dual_stack_dns_name: str
        """

        self._dual_stack_dns_name = dual_stack_dns_name

    @property
    def events(self):
        """Gets the events of this DescribeAcceleratorResponseAccelerator.


        :return: The events of this DescribeAcceleratorResponseAccelerator.
        :rtype: List
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this DescribeAcceleratorResponseAccelerator.


        :param events: The events of this DescribeAcceleratorResponseAccelerator.
        :type events: List
        """

        self._events = events
