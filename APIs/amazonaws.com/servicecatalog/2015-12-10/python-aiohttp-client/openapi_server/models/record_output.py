# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecordOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, output_key: str=None, output_value: str=None, description: str=None):
        """RecordOutput - a model defined in OpenAPI

        :param output_key: The output_key of this RecordOutput.
        :param output_value: The output_value of this RecordOutput.
        :param description: The description of this RecordOutput.
        """
        self.openapi_types = {
            'output_key': str,
            'output_value': str,
            'description': str
        }

        self.attribute_map = {
            'output_key': 'OutputKey',
            'output_value': 'OutputValue',
            'description': 'Description'
        }

        self._output_key = output_key
        self._output_value = output_value
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecordOutput of this RecordOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def output_key(self):
        """Gets the output_key of this RecordOutput.


        :return: The output_key of this RecordOutput.
        :rtype: str
        """
        return self._output_key

    @output_key.setter
    def output_key(self, output_key):
        """Sets the output_key of this RecordOutput.


        :param output_key: The output_key of this RecordOutput.
        :type output_key: str
        """

        self._output_key = output_key

    @property
    def output_value(self):
        """Gets the output_value of this RecordOutput.


        :return: The output_value of this RecordOutput.
        :rtype: str
        """
        return self._output_value

    @output_value.setter
    def output_value(self, output_value):
        """Sets the output_value of this RecordOutput.


        :param output_value: The output_value of this RecordOutput.
        :type output_value: str
        """

        self._output_value = output_value

    @property
    def description(self):
        """Gets the description of this RecordOutput.


        :return: The description of this RecordOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RecordOutput.


        :param description: The description of this RecordOutput.
        :type description: str
        """

        self._description = description
