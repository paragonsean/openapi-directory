# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateProvisioningParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, value: str=None, use_previous_value: bool=None):
        """UpdateProvisioningParameter - a model defined in OpenAPI

        :param key: The key of this UpdateProvisioningParameter.
        :param value: The value of this UpdateProvisioningParameter.
        :param use_previous_value: The use_previous_value of this UpdateProvisioningParameter.
        """
        self.openapi_types = {
            'key': str,
            'value': str,
            'use_previous_value': bool
        }

        self.attribute_map = {
            'key': 'Key',
            'value': 'Value',
            'use_previous_value': 'UsePreviousValue'
        }

        self._key = key
        self._value = value
        self._use_previous_value = use_previous_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProvisioningParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProvisioningParameter of this UpdateProvisioningParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this UpdateProvisioningParameter.


        :return: The key of this UpdateProvisioningParameter.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UpdateProvisioningParameter.


        :param key: The key of this UpdateProvisioningParameter.
        :type key: str
        """

        self._key = key

    @property
    def value(self):
        """Gets the value of this UpdateProvisioningParameter.


        :return: The value of this UpdateProvisioningParameter.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UpdateProvisioningParameter.


        :param value: The value of this UpdateProvisioningParameter.
        :type value: str
        """

        self._value = value

    @property
    def use_previous_value(self):
        """Gets the use_previous_value of this UpdateProvisioningParameter.


        :return: The use_previous_value of this UpdateProvisioningParameter.
        :rtype: bool
        """
        return self._use_previous_value

    @use_previous_value.setter
    def use_previous_value(self, use_previous_value):
        """Sets the use_previous_value of this UpdateProvisioningParameter.


        :param use_previous_value: The use_previous_value of this UpdateProvisioningParameter.
        :type use_previous_value: bool
        """

        self._use_previous_value = use_previous_value
