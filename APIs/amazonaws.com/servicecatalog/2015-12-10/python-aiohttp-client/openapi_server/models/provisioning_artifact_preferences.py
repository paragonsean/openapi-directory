# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProvisioningArtifactPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set_accounts: List=None, stack_set_regions: List=None):
        """ProvisioningArtifactPreferences - a model defined in OpenAPI

        :param stack_set_accounts: The stack_set_accounts of this ProvisioningArtifactPreferences.
        :param stack_set_regions: The stack_set_regions of this ProvisioningArtifactPreferences.
        """
        self.openapi_types = {
            'stack_set_accounts': List,
            'stack_set_regions': List
        }

        self.attribute_map = {
            'stack_set_accounts': 'StackSetAccounts',
            'stack_set_regions': 'StackSetRegions'
        }

        self._stack_set_accounts = stack_set_accounts
        self._stack_set_regions = stack_set_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProvisioningArtifactPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProvisioningArtifactPreferences of this ProvisioningArtifactPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set_accounts(self):
        """Gets the stack_set_accounts of this ProvisioningArtifactPreferences.


        :return: The stack_set_accounts of this ProvisioningArtifactPreferences.
        :rtype: List
        """
        return self._stack_set_accounts

    @stack_set_accounts.setter
    def stack_set_accounts(self, stack_set_accounts):
        """Sets the stack_set_accounts of this ProvisioningArtifactPreferences.


        :param stack_set_accounts: The stack_set_accounts of this ProvisioningArtifactPreferences.
        :type stack_set_accounts: List
        """

        self._stack_set_accounts = stack_set_accounts

    @property
    def stack_set_regions(self):
        """Gets the stack_set_regions of this ProvisioningArtifactPreferences.


        :return: The stack_set_regions of this ProvisioningArtifactPreferences.
        :rtype: List
        """
        return self._stack_set_regions

    @stack_set_regions.setter
    def stack_set_regions(self, stack_set_regions):
        """Sets the stack_set_regions of this ProvisioningArtifactPreferences.


        :param stack_set_regions: The stack_set_regions of this ProvisioningArtifactPreferences.
        :type stack_set_regions: List
        """

        self._stack_set_regions = stack_set_regions
