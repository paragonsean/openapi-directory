# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListResourcesForTagOptionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_option_id: str=None, resource_type: str=None, page_size: int=None, page_token: str=None):
        """ListResourcesForTagOptionInput - a model defined in OpenAPI

        :param tag_option_id: The tag_option_id of this ListResourcesForTagOptionInput.
        :param resource_type: The resource_type of this ListResourcesForTagOptionInput.
        :param page_size: The page_size of this ListResourcesForTagOptionInput.
        :param page_token: The page_token of this ListResourcesForTagOptionInput.
        """
        self.openapi_types = {
            'tag_option_id': str,
            'resource_type': str,
            'page_size': int,
            'page_token': str
        }

        self.attribute_map = {
            'tag_option_id': 'TagOptionId',
            'resource_type': 'ResourceType',
            'page_size': 'PageSize',
            'page_token': 'PageToken'
        }

        self._tag_option_id = tag_option_id
        self._resource_type = resource_type
        self._page_size = page_size
        self._page_token = page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListResourcesForTagOptionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListResourcesForTagOptionInput of this ListResourcesForTagOptionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_option_id(self):
        """Gets the tag_option_id of this ListResourcesForTagOptionInput.


        :return: The tag_option_id of this ListResourcesForTagOptionInput.
        :rtype: str
        """
        return self._tag_option_id

    @tag_option_id.setter
    def tag_option_id(self, tag_option_id):
        """Sets the tag_option_id of this ListResourcesForTagOptionInput.


        :param tag_option_id: The tag_option_id of this ListResourcesForTagOptionInput.
        :type tag_option_id: str
        """
        if tag_option_id is None:
            raise ValueError("Invalid value for `tag_option_id`, must not be `None`")

        self._tag_option_id = tag_option_id

    @property
    def resource_type(self):
        """Gets the resource_type of this ListResourcesForTagOptionInput.


        :return: The resource_type of this ListResourcesForTagOptionInput.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ListResourcesForTagOptionInput.


        :param resource_type: The resource_type of this ListResourcesForTagOptionInput.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def page_size(self):
        """Gets the page_size of this ListResourcesForTagOptionInput.


        :return: The page_size of this ListResourcesForTagOptionInput.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this ListResourcesForTagOptionInput.


        :param page_size: The page_size of this ListResourcesForTagOptionInput.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def page_token(self):
        """Gets the page_token of this ListResourcesForTagOptionInput.


        :return: The page_token of this ListResourcesForTagOptionInput.
        :rtype: str
        """
        return self._page_token

    @page_token.setter
    def page_token(self, page_token):
        """Sets the page_token of this ListResourcesForTagOptionInput.


        :param page_token: The page_token of this ListResourcesForTagOptionInput.
        :type page_token: str
        """

        self._page_token = page_token
