# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_product_output_product_view_detail import CreateProductOutputProductViewDetail
from openapi_server.models.create_product_output_provisioning_artifact_detail import CreateProductOutputProvisioningArtifactDetail
from openapi_server import util


class CreateProductOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_view_detail: CreateProductOutputProductViewDetail=None, provisioning_artifact_detail: CreateProductOutputProvisioningArtifactDetail=None, tags: List=None):
        """CreateProductOutput - a model defined in OpenAPI

        :param product_view_detail: The product_view_detail of this CreateProductOutput.
        :param provisioning_artifact_detail: The provisioning_artifact_detail of this CreateProductOutput.
        :param tags: The tags of this CreateProductOutput.
        """
        self.openapi_types = {
            'product_view_detail': CreateProductOutputProductViewDetail,
            'provisioning_artifact_detail': CreateProductOutputProvisioningArtifactDetail,
            'tags': List
        }

        self.attribute_map = {
            'product_view_detail': 'ProductViewDetail',
            'provisioning_artifact_detail': 'ProvisioningArtifactDetail',
            'tags': 'Tags'
        }

        self._product_view_detail = product_view_detail
        self._provisioning_artifact_detail = provisioning_artifact_detail
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProductOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProductOutput of this CreateProductOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_view_detail(self):
        """Gets the product_view_detail of this CreateProductOutput.


        :return: The product_view_detail of this CreateProductOutput.
        :rtype: CreateProductOutputProductViewDetail
        """
        return self._product_view_detail

    @product_view_detail.setter
    def product_view_detail(self, product_view_detail):
        """Sets the product_view_detail of this CreateProductOutput.


        :param product_view_detail: The product_view_detail of this CreateProductOutput.
        :type product_view_detail: CreateProductOutputProductViewDetail
        """

        self._product_view_detail = product_view_detail

    @property
    def provisioning_artifact_detail(self):
        """Gets the provisioning_artifact_detail of this CreateProductOutput.


        :return: The provisioning_artifact_detail of this CreateProductOutput.
        :rtype: CreateProductOutputProvisioningArtifactDetail
        """
        return self._provisioning_artifact_detail

    @provisioning_artifact_detail.setter
    def provisioning_artifact_detail(self, provisioning_artifact_detail):
        """Sets the provisioning_artifact_detail of this CreateProductOutput.


        :param provisioning_artifact_detail: The provisioning_artifact_detail of this CreateProductOutput.
        :type provisioning_artifact_detail: CreateProductOutputProvisioningArtifactDetail
        """

        self._provisioning_artifact_detail = provisioning_artifact_detail

    @property
    def tags(self):
        """Gets the tags of this CreateProductOutput.


        :return: The tags of this CreateProductOutput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateProductOutput.


        :param tags: The tags of this CreateProductOutput.
        :type tags: List
        """

        self._tags = tags
