# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.record_detail import RecordDetail
from openapi_server import util


class ImportAsProvisionedProductOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, record_detail: RecordDetail=None):
        """ImportAsProvisionedProductOutput - a model defined in OpenAPI

        :param record_detail: The record_detail of this ImportAsProvisionedProductOutput.
        """
        self.openapi_types = {
            'record_detail': RecordDetail
        }

        self.attribute_map = {
            'record_detail': 'RecordDetail'
        }

        self._record_detail = record_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportAsProvisionedProductOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportAsProvisionedProductOutput of this ImportAsProvisionedProductOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def record_detail(self):
        """Gets the record_detail of this ImportAsProvisionedProductOutput.


        :return: The record_detail of this ImportAsProvisionedProductOutput.
        :rtype: RecordDetail
        """
        return self._record_detail

    @record_detail.setter
    def record_detail(self, record_detail):
        """Sets the record_detail of this ImportAsProvisionedProductOutput.


        :param record_detail: The record_detail of this ImportAsProvisionedProductOutput.
        :type record_detail: RecordDetail
        """

        self._record_detail = record_detail
