# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_connection_connection_parameters import SourceConnectionConnectionParameters
from openapi_server.models.source_type import SourceType
from openapi_server import util


class UpdateProductInputSourceConnection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: SourceType=None, connection_parameters: SourceConnectionConnectionParameters=None):
        """UpdateProductInputSourceConnection - a model defined in OpenAPI

        :param type: The type of this UpdateProductInputSourceConnection.
        :param connection_parameters: The connection_parameters of this UpdateProductInputSourceConnection.
        """
        self.openapi_types = {
            'type': SourceType,
            'connection_parameters': SourceConnectionConnectionParameters
        }

        self.attribute_map = {
            'type': 'Type',
            'connection_parameters': 'ConnectionParameters'
        }

        self._type = type
        self._connection_parameters = connection_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProductInputSourceConnection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProductInput_SourceConnection of this UpdateProductInputSourceConnection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this UpdateProductInputSourceConnection.


        :return: The type of this UpdateProductInputSourceConnection.
        :rtype: SourceType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateProductInputSourceConnection.


        :param type: The type of this UpdateProductInputSourceConnection.
        :type type: SourceType
        """

        self._type = type

    @property
    def connection_parameters(self):
        """Gets the connection_parameters of this UpdateProductInputSourceConnection.


        :return: The connection_parameters of this UpdateProductInputSourceConnection.
        :rtype: SourceConnectionConnectionParameters
        """
        return self._connection_parameters

    @connection_parameters.setter
    def connection_parameters(self, connection_parameters):
        """Sets the connection_parameters of this UpdateProductInputSourceConnection.


        :param connection_parameters: The connection_parameters of this UpdateProductInputSourceConnection.
        :type connection_parameters: SourceConnectionConnectionParameters
        """
        if connection_parameters is None:
            raise ValueError("Invalid value for `connection_parameters`, must not be `None`")

        self._connection_parameters = connection_parameters
