# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.engine_workflow_resource_identifier_unique_tag import EngineWorkflowResourceIdentifierUniqueTag
from openapi_server import util


class EngineWorkflowResourceIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, unique_tag: EngineWorkflowResourceIdentifierUniqueTag=None):
        """EngineWorkflowResourceIdentifier - a model defined in OpenAPI

        :param unique_tag: The unique_tag of this EngineWorkflowResourceIdentifier.
        """
        self.openapi_types = {
            'unique_tag': EngineWorkflowResourceIdentifierUniqueTag
        }

        self.attribute_map = {
            'unique_tag': 'UniqueTag'
        }

        self._unique_tag = unique_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EngineWorkflowResourceIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EngineWorkflowResourceIdentifier of this EngineWorkflowResourceIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def unique_tag(self):
        """Gets the unique_tag of this EngineWorkflowResourceIdentifier.


        :return: The unique_tag of this EngineWorkflowResourceIdentifier.
        :rtype: EngineWorkflowResourceIdentifierUniqueTag
        """
        return self._unique_tag

    @unique_tag.setter
    def unique_tag(self, unique_tag):
        """Sets the unique_tag of this EngineWorkflowResourceIdentifier.


        :param unique_tag: The unique_tag of this EngineWorkflowResourceIdentifier.
        :type unique_tag: EngineWorkflowResourceIdentifierUniqueTag
        """

        self._unique_tag = unique_tag
