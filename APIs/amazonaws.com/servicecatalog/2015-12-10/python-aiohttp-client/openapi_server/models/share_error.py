# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShareError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List=None, message: str=None, error: str=None):
        """ShareError - a model defined in OpenAPI

        :param accounts: The accounts of this ShareError.
        :param message: The message of this ShareError.
        :param error: The error of this ShareError.
        """
        self.openapi_types = {
            'accounts': List,
            'message': str,
            'error': str
        }

        self.attribute_map = {
            'accounts': 'Accounts',
            'message': 'Message',
            'error': 'Error'
        }

        self._accounts = accounts
        self._message = message
        self._error = error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareError of this ShareError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this ShareError.


        :return: The accounts of this ShareError.
        :rtype: List
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this ShareError.


        :param accounts: The accounts of this ShareError.
        :type accounts: List
        """

        self._accounts = accounts

    @property
    def message(self):
        """Gets the message of this ShareError.


        :return: The message of this ShareError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ShareError.


        :param message: The message of this ShareError.
        :type message: str
        """

        self._message = message

    @property
    def error(self):
        """Gets the error of this ShareError.


        :return: The error of this ShareError.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ShareError.


        :param error: The error of this ShareError.
        :type error: str
        """

        self._error = error
