# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_set_operation_type import StackSetOperationType
from openapi_server import util


class UpdateProvisioningPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stack_set_accounts: List=None, stack_set_regions: List=None, stack_set_failure_tolerance_count: int=None, stack_set_failure_tolerance_percentage: int=None, stack_set_max_concurrency_count: int=None, stack_set_max_concurrency_percentage: int=None, stack_set_operation_type: StackSetOperationType=None):
        """UpdateProvisioningPreferences - a model defined in OpenAPI

        :param stack_set_accounts: The stack_set_accounts of this UpdateProvisioningPreferences.
        :param stack_set_regions: The stack_set_regions of this UpdateProvisioningPreferences.
        :param stack_set_failure_tolerance_count: The stack_set_failure_tolerance_count of this UpdateProvisioningPreferences.
        :param stack_set_failure_tolerance_percentage: The stack_set_failure_tolerance_percentage of this UpdateProvisioningPreferences.
        :param stack_set_max_concurrency_count: The stack_set_max_concurrency_count of this UpdateProvisioningPreferences.
        :param stack_set_max_concurrency_percentage: The stack_set_max_concurrency_percentage of this UpdateProvisioningPreferences.
        :param stack_set_operation_type: The stack_set_operation_type of this UpdateProvisioningPreferences.
        """
        self.openapi_types = {
            'stack_set_accounts': List,
            'stack_set_regions': List,
            'stack_set_failure_tolerance_count': int,
            'stack_set_failure_tolerance_percentage': int,
            'stack_set_max_concurrency_count': int,
            'stack_set_max_concurrency_percentage': int,
            'stack_set_operation_type': StackSetOperationType
        }

        self.attribute_map = {
            'stack_set_accounts': 'StackSetAccounts',
            'stack_set_regions': 'StackSetRegions',
            'stack_set_failure_tolerance_count': 'StackSetFailureToleranceCount',
            'stack_set_failure_tolerance_percentage': 'StackSetFailureTolerancePercentage',
            'stack_set_max_concurrency_count': 'StackSetMaxConcurrencyCount',
            'stack_set_max_concurrency_percentage': 'StackSetMaxConcurrencyPercentage',
            'stack_set_operation_type': 'StackSetOperationType'
        }

        self._stack_set_accounts = stack_set_accounts
        self._stack_set_regions = stack_set_regions
        self._stack_set_failure_tolerance_count = stack_set_failure_tolerance_count
        self._stack_set_failure_tolerance_percentage = stack_set_failure_tolerance_percentage
        self._stack_set_max_concurrency_count = stack_set_max_concurrency_count
        self._stack_set_max_concurrency_percentage = stack_set_max_concurrency_percentage
        self._stack_set_operation_type = stack_set_operation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProvisioningPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProvisioningPreferences of this UpdateProvisioningPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stack_set_accounts(self):
        """Gets the stack_set_accounts of this UpdateProvisioningPreferences.


        :return: The stack_set_accounts of this UpdateProvisioningPreferences.
        :rtype: List
        """
        return self._stack_set_accounts

    @stack_set_accounts.setter
    def stack_set_accounts(self, stack_set_accounts):
        """Sets the stack_set_accounts of this UpdateProvisioningPreferences.


        :param stack_set_accounts: The stack_set_accounts of this UpdateProvisioningPreferences.
        :type stack_set_accounts: List
        """

        self._stack_set_accounts = stack_set_accounts

    @property
    def stack_set_regions(self):
        """Gets the stack_set_regions of this UpdateProvisioningPreferences.


        :return: The stack_set_regions of this UpdateProvisioningPreferences.
        :rtype: List
        """
        return self._stack_set_regions

    @stack_set_regions.setter
    def stack_set_regions(self, stack_set_regions):
        """Sets the stack_set_regions of this UpdateProvisioningPreferences.


        :param stack_set_regions: The stack_set_regions of this UpdateProvisioningPreferences.
        :type stack_set_regions: List
        """

        self._stack_set_regions = stack_set_regions

    @property
    def stack_set_failure_tolerance_count(self):
        """Gets the stack_set_failure_tolerance_count of this UpdateProvisioningPreferences.


        :return: The stack_set_failure_tolerance_count of this UpdateProvisioningPreferences.
        :rtype: int
        """
        return self._stack_set_failure_tolerance_count

    @stack_set_failure_tolerance_count.setter
    def stack_set_failure_tolerance_count(self, stack_set_failure_tolerance_count):
        """Sets the stack_set_failure_tolerance_count of this UpdateProvisioningPreferences.


        :param stack_set_failure_tolerance_count: The stack_set_failure_tolerance_count of this UpdateProvisioningPreferences.
        :type stack_set_failure_tolerance_count: int
        """

        self._stack_set_failure_tolerance_count = stack_set_failure_tolerance_count

    @property
    def stack_set_failure_tolerance_percentage(self):
        """Gets the stack_set_failure_tolerance_percentage of this UpdateProvisioningPreferences.


        :return: The stack_set_failure_tolerance_percentage of this UpdateProvisioningPreferences.
        :rtype: int
        """
        return self._stack_set_failure_tolerance_percentage

    @stack_set_failure_tolerance_percentage.setter
    def stack_set_failure_tolerance_percentage(self, stack_set_failure_tolerance_percentage):
        """Sets the stack_set_failure_tolerance_percentage of this UpdateProvisioningPreferences.


        :param stack_set_failure_tolerance_percentage: The stack_set_failure_tolerance_percentage of this UpdateProvisioningPreferences.
        :type stack_set_failure_tolerance_percentage: int
        """

        self._stack_set_failure_tolerance_percentage = stack_set_failure_tolerance_percentage

    @property
    def stack_set_max_concurrency_count(self):
        """Gets the stack_set_max_concurrency_count of this UpdateProvisioningPreferences.


        :return: The stack_set_max_concurrency_count of this UpdateProvisioningPreferences.
        :rtype: int
        """
        return self._stack_set_max_concurrency_count

    @stack_set_max_concurrency_count.setter
    def stack_set_max_concurrency_count(self, stack_set_max_concurrency_count):
        """Sets the stack_set_max_concurrency_count of this UpdateProvisioningPreferences.


        :param stack_set_max_concurrency_count: The stack_set_max_concurrency_count of this UpdateProvisioningPreferences.
        :type stack_set_max_concurrency_count: int
        """

        self._stack_set_max_concurrency_count = stack_set_max_concurrency_count

    @property
    def stack_set_max_concurrency_percentage(self):
        """Gets the stack_set_max_concurrency_percentage of this UpdateProvisioningPreferences.


        :return: The stack_set_max_concurrency_percentage of this UpdateProvisioningPreferences.
        :rtype: int
        """
        return self._stack_set_max_concurrency_percentage

    @stack_set_max_concurrency_percentage.setter
    def stack_set_max_concurrency_percentage(self, stack_set_max_concurrency_percentage):
        """Sets the stack_set_max_concurrency_percentage of this UpdateProvisioningPreferences.


        :param stack_set_max_concurrency_percentage: The stack_set_max_concurrency_percentage of this UpdateProvisioningPreferences.
        :type stack_set_max_concurrency_percentage: int
        """

        self._stack_set_max_concurrency_percentage = stack_set_max_concurrency_percentage

    @property
    def stack_set_operation_type(self):
        """Gets the stack_set_operation_type of this UpdateProvisioningPreferences.


        :return: The stack_set_operation_type of this UpdateProvisioningPreferences.
        :rtype: StackSetOperationType
        """
        return self._stack_set_operation_type

    @stack_set_operation_type.setter
    def stack_set_operation_type(self, stack_set_operation_type):
        """Sets the stack_set_operation_type of this UpdateProvisioningPreferences.


        :param stack_set_operation_type: The stack_set_operation_type of this UpdateProvisioningPreferences.
        :type stack_set_operation_type: StackSetOperationType
        """

        self._stack_set_operation_type = stack_set_operation_type
