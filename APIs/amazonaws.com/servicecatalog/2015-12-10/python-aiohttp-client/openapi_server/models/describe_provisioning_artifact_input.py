# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeProvisioningArtifactInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accept_language: str=None, provisioning_artifact_id: str=None, product_id: str=None, provisioning_artifact_name: str=None, product_name: str=None, verbose: bool=None, include_provisioning_artifact_parameters: bool=None):
        """DescribeProvisioningArtifactInput - a model defined in OpenAPI

        :param accept_language: The accept_language of this DescribeProvisioningArtifactInput.
        :param provisioning_artifact_id: The provisioning_artifact_id of this DescribeProvisioningArtifactInput.
        :param product_id: The product_id of this DescribeProvisioningArtifactInput.
        :param provisioning_artifact_name: The provisioning_artifact_name of this DescribeProvisioningArtifactInput.
        :param product_name: The product_name of this DescribeProvisioningArtifactInput.
        :param verbose: The verbose of this DescribeProvisioningArtifactInput.
        :param include_provisioning_artifact_parameters: The include_provisioning_artifact_parameters of this DescribeProvisioningArtifactInput.
        """
        self.openapi_types = {
            'accept_language': str,
            'provisioning_artifact_id': str,
            'product_id': str,
            'provisioning_artifact_name': str,
            'product_name': str,
            'verbose': bool,
            'include_provisioning_artifact_parameters': bool
        }

        self.attribute_map = {
            'accept_language': 'AcceptLanguage',
            'provisioning_artifact_id': 'ProvisioningArtifactId',
            'product_id': 'ProductId',
            'provisioning_artifact_name': 'ProvisioningArtifactName',
            'product_name': 'ProductName',
            'verbose': 'Verbose',
            'include_provisioning_artifact_parameters': 'IncludeProvisioningArtifactParameters'
        }

        self._accept_language = accept_language
        self._provisioning_artifact_id = provisioning_artifact_id
        self._product_id = product_id
        self._provisioning_artifact_name = provisioning_artifact_name
        self._product_name = product_name
        self._verbose = verbose
        self._include_provisioning_artifact_parameters = include_provisioning_artifact_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeProvisioningArtifactInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeProvisioningArtifactInput of this DescribeProvisioningArtifactInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accept_language(self):
        """Gets the accept_language of this DescribeProvisioningArtifactInput.


        :return: The accept_language of this DescribeProvisioningArtifactInput.
        :rtype: str
        """
        return self._accept_language

    @accept_language.setter
    def accept_language(self, accept_language):
        """Sets the accept_language of this DescribeProvisioningArtifactInput.


        :param accept_language: The accept_language of this DescribeProvisioningArtifactInput.
        :type accept_language: str
        """

        self._accept_language = accept_language

    @property
    def provisioning_artifact_id(self):
        """Gets the provisioning_artifact_id of this DescribeProvisioningArtifactInput.


        :return: The provisioning_artifact_id of this DescribeProvisioningArtifactInput.
        :rtype: str
        """
        return self._provisioning_artifact_id

    @provisioning_artifact_id.setter
    def provisioning_artifact_id(self, provisioning_artifact_id):
        """Sets the provisioning_artifact_id of this DescribeProvisioningArtifactInput.


        :param provisioning_artifact_id: The provisioning_artifact_id of this DescribeProvisioningArtifactInput.
        :type provisioning_artifact_id: str
        """

        self._provisioning_artifact_id = provisioning_artifact_id

    @property
    def product_id(self):
        """Gets the product_id of this DescribeProvisioningArtifactInput.


        :return: The product_id of this DescribeProvisioningArtifactInput.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this DescribeProvisioningArtifactInput.


        :param product_id: The product_id of this DescribeProvisioningArtifactInput.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def provisioning_artifact_name(self):
        """Gets the provisioning_artifact_name of this DescribeProvisioningArtifactInput.


        :return: The provisioning_artifact_name of this DescribeProvisioningArtifactInput.
        :rtype: str
        """
        return self._provisioning_artifact_name

    @provisioning_artifact_name.setter
    def provisioning_artifact_name(self, provisioning_artifact_name):
        """Sets the provisioning_artifact_name of this DescribeProvisioningArtifactInput.


        :param provisioning_artifact_name: The provisioning_artifact_name of this DescribeProvisioningArtifactInput.
        :type provisioning_artifact_name: str
        """

        self._provisioning_artifact_name = provisioning_artifact_name

    @property
    def product_name(self):
        """Gets the product_name of this DescribeProvisioningArtifactInput.


        :return: The product_name of this DescribeProvisioningArtifactInput.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this DescribeProvisioningArtifactInput.


        :param product_name: The product_name of this DescribeProvisioningArtifactInput.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def verbose(self):
        """Gets the verbose of this DescribeProvisioningArtifactInput.


        :return: The verbose of this DescribeProvisioningArtifactInput.
        :rtype: bool
        """
        return self._verbose

    @verbose.setter
    def verbose(self, verbose):
        """Sets the verbose of this DescribeProvisioningArtifactInput.


        :param verbose: The verbose of this DescribeProvisioningArtifactInput.
        :type verbose: bool
        """

        self._verbose = verbose

    @property
    def include_provisioning_artifact_parameters(self):
        """Gets the include_provisioning_artifact_parameters of this DescribeProvisioningArtifactInput.


        :return: The include_provisioning_artifact_parameters of this DescribeProvisioningArtifactInput.
        :rtype: bool
        """
        return self._include_provisioning_artifact_parameters

    @include_provisioning_artifact_parameters.setter
    def include_provisioning_artifact_parameters(self, include_provisioning_artifact_parameters):
        """Sets the include_provisioning_artifact_parameters of this DescribeProvisioningArtifactInput.


        :param include_provisioning_artifact_parameters: The include_provisioning_artifact_parameters of this DescribeProvisioningArtifactInput.
        :type include_provisioning_artifact_parameters: bool
        """

        self._include_provisioning_artifact_parameters = include_provisioning_artifact_parameters
