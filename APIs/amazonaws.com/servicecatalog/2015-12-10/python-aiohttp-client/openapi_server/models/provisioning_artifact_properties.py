# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provisioning_artifact_type import ProvisioningArtifactType
from openapi_server import util


class ProvisioningArtifactProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, info: Dict=None, type: ProvisioningArtifactType=None, disable_template_validation: bool=None):
        """ProvisioningArtifactProperties - a model defined in OpenAPI

        :param name: The name of this ProvisioningArtifactProperties.
        :param description: The description of this ProvisioningArtifactProperties.
        :param info: The info of this ProvisioningArtifactProperties.
        :param type: The type of this ProvisioningArtifactProperties.
        :param disable_template_validation: The disable_template_validation of this ProvisioningArtifactProperties.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'info': Dict,
            'type': ProvisioningArtifactType,
            'disable_template_validation': bool
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            'info': 'Info',
            'type': 'Type',
            'disable_template_validation': 'DisableTemplateValidation'
        }

        self._name = name
        self._description = description
        self._info = info
        self._type = type
        self._disable_template_validation = disable_template_validation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProvisioningArtifactProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProvisioningArtifactProperties of this ProvisioningArtifactProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ProvisioningArtifactProperties.


        :return: The name of this ProvisioningArtifactProperties.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProvisioningArtifactProperties.


        :param name: The name of this ProvisioningArtifactProperties.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this ProvisioningArtifactProperties.


        :return: The description of this ProvisioningArtifactProperties.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ProvisioningArtifactProperties.


        :param description: The description of this ProvisioningArtifactProperties.
        :type description: str
        """

        self._description = description

    @property
    def info(self):
        """Gets the info of this ProvisioningArtifactProperties.


        :return: The info of this ProvisioningArtifactProperties.
        :rtype: Dict
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this ProvisioningArtifactProperties.


        :param info: The info of this ProvisioningArtifactProperties.
        :type info: Dict
        """

        self._info = info

    @property
    def type(self):
        """Gets the type of this ProvisioningArtifactProperties.


        :return: The type of this ProvisioningArtifactProperties.
        :rtype: ProvisioningArtifactType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ProvisioningArtifactProperties.


        :param type: The type of this ProvisioningArtifactProperties.
        :type type: ProvisioningArtifactType
        """

        self._type = type

    @property
    def disable_template_validation(self):
        """Gets the disable_template_validation of this ProvisioningArtifactProperties.


        :return: The disable_template_validation of this ProvisioningArtifactProperties.
        :rtype: bool
        """
        return self._disable_template_validation

    @disable_template_validation.setter
    def disable_template_validation(self, disable_template_validation):
        """Sets the disable_template_validation of this ProvisioningArtifactProperties.


        :param disable_template_validation: The disable_template_validation of this ProvisioningArtifactProperties.
        :type disable_template_validation: bool
        """

        self._disable_template_validation = disable_template_validation
