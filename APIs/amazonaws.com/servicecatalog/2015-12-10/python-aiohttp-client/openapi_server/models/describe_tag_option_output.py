# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_tag_option_output_tag_option_detail import CreateTagOptionOutputTagOptionDetail
from openapi_server import util


class DescribeTagOptionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_option_detail: CreateTagOptionOutputTagOptionDetail=None):
        """DescribeTagOptionOutput - a model defined in OpenAPI

        :param tag_option_detail: The tag_option_detail of this DescribeTagOptionOutput.
        """
        self.openapi_types = {
            'tag_option_detail': CreateTagOptionOutputTagOptionDetail
        }

        self.attribute_map = {
            'tag_option_detail': 'TagOptionDetail'
        }

        self._tag_option_detail = tag_option_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTagOptionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTagOptionOutput of this DescribeTagOptionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_option_detail(self):
        """Gets the tag_option_detail of this DescribeTagOptionOutput.


        :return: The tag_option_detail of this DescribeTagOptionOutput.
        :rtype: CreateTagOptionOutputTagOptionDetail
        """
        return self._tag_option_detail

    @tag_option_detail.setter
    def tag_option_detail(self, tag_option_detail):
        """Sets the tag_option_detail of this DescribeTagOptionOutput.


        :param tag_option_detail: The tag_option_detail of this DescribeTagOptionOutput.
        :type tag_option_detail: CreateTagOptionOutputTagOptionDetail
        """

        self._tag_option_detail = tag_option_detail
