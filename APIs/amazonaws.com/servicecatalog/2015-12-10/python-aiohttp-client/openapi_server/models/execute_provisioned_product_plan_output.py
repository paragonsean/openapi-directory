# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execute_provisioned_product_plan_output_record_detail import ExecuteProvisionedProductPlanOutputRecordDetail
from openapi_server import util


class ExecuteProvisionedProductPlanOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, record_detail: ExecuteProvisionedProductPlanOutputRecordDetail=None):
        """ExecuteProvisionedProductPlanOutput - a model defined in OpenAPI

        :param record_detail: The record_detail of this ExecuteProvisionedProductPlanOutput.
        """
        self.openapi_types = {
            'record_detail': ExecuteProvisionedProductPlanOutputRecordDetail
        }

        self.attribute_map = {
            'record_detail': 'RecordDetail'
        }

        self._record_detail = record_detail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecuteProvisionedProductPlanOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecuteProvisionedProductPlanOutput of this ExecuteProvisionedProductPlanOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def record_detail(self):
        """Gets the record_detail of this ExecuteProvisionedProductPlanOutput.


        :return: The record_detail of this ExecuteProvisionedProductPlanOutput.
        :rtype: ExecuteProvisionedProductPlanOutputRecordDetail
        """
        return self._record_detail

    @record_detail.setter
    def record_detail(self, record_detail):
        """Sets the record_detail of this ExecuteProvisionedProductPlanOutput.


        :param record_detail: The record_detail of this ExecuteProvisionedProductPlanOutput.
        :type record_detail: ExecuteProvisionedProductPlanOutputRecordDetail
        """

        self._record_detail = record_detail
