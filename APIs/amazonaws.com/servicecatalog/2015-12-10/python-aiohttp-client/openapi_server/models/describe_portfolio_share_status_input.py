# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribePortfolioShareStatusInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_share_token: str=None):
        """DescribePortfolioShareStatusInput - a model defined in OpenAPI

        :param portfolio_share_token: The portfolio_share_token of this DescribePortfolioShareStatusInput.
        """
        self.openapi_types = {
            'portfolio_share_token': str
        }

        self.attribute_map = {
            'portfolio_share_token': 'PortfolioShareToken'
        }

        self._portfolio_share_token = portfolio_share_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePortfolioShareStatusInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePortfolioShareStatusInput of this DescribePortfolioShareStatusInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_share_token(self):
        """Gets the portfolio_share_token of this DescribePortfolioShareStatusInput.


        :return: The portfolio_share_token of this DescribePortfolioShareStatusInput.
        :rtype: str
        """
        return self._portfolio_share_token

    @portfolio_share_token.setter
    def portfolio_share_token(self, portfolio_share_token):
        """Sets the portfolio_share_token of this DescribePortfolioShareStatusInput.


        :param portfolio_share_token: The portfolio_share_token of this DescribePortfolioShareStatusInput.
        :type portfolio_share_token: str
        """
        if portfolio_share_token is None:
            raise ValueError("Invalid value for `portfolio_share_token`, must not be `None`")

        self._portfolio_share_token = portfolio_share_token
