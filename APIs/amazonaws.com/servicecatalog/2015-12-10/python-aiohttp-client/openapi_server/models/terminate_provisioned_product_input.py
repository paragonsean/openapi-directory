# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminateProvisionedProductInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioned_product_name: str=None, provisioned_product_id: str=None, terminate_token: str=None, ignore_errors: bool=None, accept_language: str=None, retain_physical_resources: bool=None):
        """TerminateProvisionedProductInput - a model defined in OpenAPI

        :param provisioned_product_name: The provisioned_product_name of this TerminateProvisionedProductInput.
        :param provisioned_product_id: The provisioned_product_id of this TerminateProvisionedProductInput.
        :param terminate_token: The terminate_token of this TerminateProvisionedProductInput.
        :param ignore_errors: The ignore_errors of this TerminateProvisionedProductInput.
        :param accept_language: The accept_language of this TerminateProvisionedProductInput.
        :param retain_physical_resources: The retain_physical_resources of this TerminateProvisionedProductInput.
        """
        self.openapi_types = {
            'provisioned_product_name': str,
            'provisioned_product_id': str,
            'terminate_token': str,
            'ignore_errors': bool,
            'accept_language': str,
            'retain_physical_resources': bool
        }

        self.attribute_map = {
            'provisioned_product_name': 'ProvisionedProductName',
            'provisioned_product_id': 'ProvisionedProductId',
            'terminate_token': 'TerminateToken',
            'ignore_errors': 'IgnoreErrors',
            'accept_language': 'AcceptLanguage',
            'retain_physical_resources': 'RetainPhysicalResources'
        }

        self._provisioned_product_name = provisioned_product_name
        self._provisioned_product_id = provisioned_product_id
        self._terminate_token = terminate_token
        self._ignore_errors = ignore_errors
        self._accept_language = accept_language
        self._retain_physical_resources = retain_physical_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminateProvisionedProductInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminateProvisionedProductInput of this TerminateProvisionedProductInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioned_product_name(self):
        """Gets the provisioned_product_name of this TerminateProvisionedProductInput.


        :return: The provisioned_product_name of this TerminateProvisionedProductInput.
        :rtype: str
        """
        return self._provisioned_product_name

    @provisioned_product_name.setter
    def provisioned_product_name(self, provisioned_product_name):
        """Sets the provisioned_product_name of this TerminateProvisionedProductInput.


        :param provisioned_product_name: The provisioned_product_name of this TerminateProvisionedProductInput.
        :type provisioned_product_name: str
        """

        self._provisioned_product_name = provisioned_product_name

    @property
    def provisioned_product_id(self):
        """Gets the provisioned_product_id of this TerminateProvisionedProductInput.


        :return: The provisioned_product_id of this TerminateProvisionedProductInput.
        :rtype: str
        """
        return self._provisioned_product_id

    @provisioned_product_id.setter
    def provisioned_product_id(self, provisioned_product_id):
        """Sets the provisioned_product_id of this TerminateProvisionedProductInput.


        :param provisioned_product_id: The provisioned_product_id of this TerminateProvisionedProductInput.
        :type provisioned_product_id: str
        """

        self._provisioned_product_id = provisioned_product_id

    @property
    def terminate_token(self):
        """Gets the terminate_token of this TerminateProvisionedProductInput.


        :return: The terminate_token of this TerminateProvisionedProductInput.
        :rtype: str
        """
        return self._terminate_token

    @terminate_token.setter
    def terminate_token(self, terminate_token):
        """Sets the terminate_token of this TerminateProvisionedProductInput.


        :param terminate_token: The terminate_token of this TerminateProvisionedProductInput.
        :type terminate_token: str
        """
        if terminate_token is None:
            raise ValueError("Invalid value for `terminate_token`, must not be `None`")

        self._terminate_token = terminate_token

    @property
    def ignore_errors(self):
        """Gets the ignore_errors of this TerminateProvisionedProductInput.


        :return: The ignore_errors of this TerminateProvisionedProductInput.
        :rtype: bool
        """
        return self._ignore_errors

    @ignore_errors.setter
    def ignore_errors(self, ignore_errors):
        """Sets the ignore_errors of this TerminateProvisionedProductInput.


        :param ignore_errors: The ignore_errors of this TerminateProvisionedProductInput.
        :type ignore_errors: bool
        """

        self._ignore_errors = ignore_errors

    @property
    def accept_language(self):
        """Gets the accept_language of this TerminateProvisionedProductInput.


        :return: The accept_language of this TerminateProvisionedProductInput.
        :rtype: str
        """
        return self._accept_language

    @accept_language.setter
    def accept_language(self, accept_language):
        """Sets the accept_language of this TerminateProvisionedProductInput.


        :param accept_language: The accept_language of this TerminateProvisionedProductInput.
        :type accept_language: str
        """

        self._accept_language = accept_language

    @property
    def retain_physical_resources(self):
        """Gets the retain_physical_resources of this TerminateProvisionedProductInput.


        :return: The retain_physical_resources of this TerminateProvisionedProductInput.
        :rtype: bool
        """
        return self._retain_physical_resources

    @retain_physical_resources.setter
    def retain_physical_resources(self, retain_physical_resources):
        """Sets the retain_physical_resources of this TerminateProvisionedProductInput.


        :param retain_physical_resources: The retain_physical_resources of this TerminateProvisionedProductInput.
        :type retain_physical_resources: bool
        """

        self._retain_physical_resources = retain_physical_resources
