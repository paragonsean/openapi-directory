# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_node_type import OrganizationNodeType
from openapi_server import util


class OrganizationNode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: OrganizationNodeType=None, value: str=None):
        """OrganizationNode - a model defined in OpenAPI

        :param type: The type of this OrganizationNode.
        :param value: The value of this OrganizationNode.
        """
        self.openapi_types = {
            'type': OrganizationNodeType,
            'value': str
        }

        self.attribute_map = {
            'type': 'Type',
            'value': 'Value'
        }

        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationNode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationNode of this OrganizationNode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this OrganizationNode.


        :return: The type of this OrganizationNode.
        :rtype: OrganizationNodeType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrganizationNode.


        :param type: The type of this OrganizationNode.
        :type type: OrganizationNodeType
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this OrganizationNode.


        :return: The value of this OrganizationNode.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this OrganizationNode.


        :param value: The value of this OrganizationNode.
        :type value: str
        """

        self._value = value
