# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_portfolio_output_portfolio_detail import CreatePortfolioOutputPortfolioDetail
from openapi_server import util


class DescribePortfolioOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portfolio_detail: CreatePortfolioOutputPortfolioDetail=None, tags: List=None, tag_options: List=None, budgets: List=None):
        """DescribePortfolioOutput - a model defined in OpenAPI

        :param portfolio_detail: The portfolio_detail of this DescribePortfolioOutput.
        :param tags: The tags of this DescribePortfolioOutput.
        :param tag_options: The tag_options of this DescribePortfolioOutput.
        :param budgets: The budgets of this DescribePortfolioOutput.
        """
        self.openapi_types = {
            'portfolio_detail': CreatePortfolioOutputPortfolioDetail,
            'tags': List,
            'tag_options': List,
            'budgets': List
        }

        self.attribute_map = {
            'portfolio_detail': 'PortfolioDetail',
            'tags': 'Tags',
            'tag_options': 'TagOptions',
            'budgets': 'Budgets'
        }

        self._portfolio_detail = portfolio_detail
        self._tags = tags
        self._tag_options = tag_options
        self._budgets = budgets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePortfolioOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePortfolioOutput of this DescribePortfolioOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portfolio_detail(self):
        """Gets the portfolio_detail of this DescribePortfolioOutput.


        :return: The portfolio_detail of this DescribePortfolioOutput.
        :rtype: CreatePortfolioOutputPortfolioDetail
        """
        return self._portfolio_detail

    @portfolio_detail.setter
    def portfolio_detail(self, portfolio_detail):
        """Sets the portfolio_detail of this DescribePortfolioOutput.


        :param portfolio_detail: The portfolio_detail of this DescribePortfolioOutput.
        :type portfolio_detail: CreatePortfolioOutputPortfolioDetail
        """

        self._portfolio_detail = portfolio_detail

    @property
    def tags(self):
        """Gets the tags of this DescribePortfolioOutput.


        :return: The tags of this DescribePortfolioOutput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribePortfolioOutput.


        :param tags: The tags of this DescribePortfolioOutput.
        :type tags: List
        """

        self._tags = tags

    @property
    def tag_options(self):
        """Gets the tag_options of this DescribePortfolioOutput.


        :return: The tag_options of this DescribePortfolioOutput.
        :rtype: List
        """
        return self._tag_options

    @tag_options.setter
    def tag_options(self, tag_options):
        """Sets the tag_options of this DescribePortfolioOutput.


        :param tag_options: The tag_options of this DescribePortfolioOutput.
        :type tag_options: List
        """

        self._tag_options = tag_options

    @property
    def budgets(self):
        """Gets the budgets of this DescribePortfolioOutput.


        :return: The budgets of this DescribePortfolioOutput.
        :rtype: List
        """
        return self._budgets

    @budgets.setter
    def budgets(self, budgets):
        """Sets the budgets of this DescribePortfolioOutput.


        :param budgets: The budgets of this DescribePortfolioOutput.
        :type budgets: List
        """

        self._budgets = budgets
