# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_product_output_product_view_summary import DescribeProductOutputProductViewSummary
from openapi_server import util


class DescribeProductOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_view_summary: DescribeProductOutputProductViewSummary=None, provisioning_artifacts: List=None, budgets: List=None, launch_paths: List=None):
        """DescribeProductOutput - a model defined in OpenAPI

        :param product_view_summary: The product_view_summary of this DescribeProductOutput.
        :param provisioning_artifacts: The provisioning_artifacts of this DescribeProductOutput.
        :param budgets: The budgets of this DescribeProductOutput.
        :param launch_paths: The launch_paths of this DescribeProductOutput.
        """
        self.openapi_types = {
            'product_view_summary': DescribeProductOutputProductViewSummary,
            'provisioning_artifacts': List,
            'budgets': List,
            'launch_paths': List
        }

        self.attribute_map = {
            'product_view_summary': 'ProductViewSummary',
            'provisioning_artifacts': 'ProvisioningArtifacts',
            'budgets': 'Budgets',
            'launch_paths': 'LaunchPaths'
        }

        self._product_view_summary = product_view_summary
        self._provisioning_artifacts = provisioning_artifacts
        self._budgets = budgets
        self._launch_paths = launch_paths

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeProductOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeProductOutput of this DescribeProductOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_view_summary(self):
        """Gets the product_view_summary of this DescribeProductOutput.


        :return: The product_view_summary of this DescribeProductOutput.
        :rtype: DescribeProductOutputProductViewSummary
        """
        return self._product_view_summary

    @product_view_summary.setter
    def product_view_summary(self, product_view_summary):
        """Sets the product_view_summary of this DescribeProductOutput.


        :param product_view_summary: The product_view_summary of this DescribeProductOutput.
        :type product_view_summary: DescribeProductOutputProductViewSummary
        """

        self._product_view_summary = product_view_summary

    @property
    def provisioning_artifacts(self):
        """Gets the provisioning_artifacts of this DescribeProductOutput.


        :return: The provisioning_artifacts of this DescribeProductOutput.
        :rtype: List
        """
        return self._provisioning_artifacts

    @provisioning_artifacts.setter
    def provisioning_artifacts(self, provisioning_artifacts):
        """Sets the provisioning_artifacts of this DescribeProductOutput.


        :param provisioning_artifacts: The provisioning_artifacts of this DescribeProductOutput.
        :type provisioning_artifacts: List
        """

        self._provisioning_artifacts = provisioning_artifacts

    @property
    def budgets(self):
        """Gets the budgets of this DescribeProductOutput.


        :return: The budgets of this DescribeProductOutput.
        :rtype: List
        """
        return self._budgets

    @budgets.setter
    def budgets(self, budgets):
        """Sets the budgets of this DescribeProductOutput.


        :param budgets: The budgets of this DescribeProductOutput.
        :type budgets: List
        """

        self._budgets = budgets

    @property
    def launch_paths(self):
        """Gets the launch_paths of this DescribeProductOutput.


        :return: The launch_paths of this DescribeProductOutput.
        :rtype: List
        """
        return self._launch_paths

    @launch_paths.setter
    def launch_paths(self, launch_paths):
        """Sets the launch_paths of this DescribeProductOutput.


        :param launch_paths: The launch_paths of this DescribeProductOutput.
        :type launch_paths: List
        """

        self._launch_paths = launch_paths
