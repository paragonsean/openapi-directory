# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.record_status import RecordStatus
from openapi_server import util


class UpdateProvisionedProductPropertiesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provisioned_product_id: str=None, provisioned_product_properties: Dict=None, record_id: str=None, status: RecordStatus=None):
        """UpdateProvisionedProductPropertiesOutput - a model defined in OpenAPI

        :param provisioned_product_id: The provisioned_product_id of this UpdateProvisionedProductPropertiesOutput.
        :param provisioned_product_properties: The provisioned_product_properties of this UpdateProvisionedProductPropertiesOutput.
        :param record_id: The record_id of this UpdateProvisionedProductPropertiesOutput.
        :param status: The status of this UpdateProvisionedProductPropertiesOutput.
        """
        self.openapi_types = {
            'provisioned_product_id': str,
            'provisioned_product_properties': Dict,
            'record_id': str,
            'status': RecordStatus
        }

        self.attribute_map = {
            'provisioned_product_id': 'ProvisionedProductId',
            'provisioned_product_properties': 'ProvisionedProductProperties',
            'record_id': 'RecordId',
            'status': 'Status'
        }

        self._provisioned_product_id = provisioned_product_id
        self._provisioned_product_properties = provisioned_product_properties
        self._record_id = record_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProvisionedProductPropertiesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProvisionedProductPropertiesOutput of this UpdateProvisionedProductPropertiesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provisioned_product_id(self):
        """Gets the provisioned_product_id of this UpdateProvisionedProductPropertiesOutput.


        :return: The provisioned_product_id of this UpdateProvisionedProductPropertiesOutput.
        :rtype: str
        """
        return self._provisioned_product_id

    @provisioned_product_id.setter
    def provisioned_product_id(self, provisioned_product_id):
        """Sets the provisioned_product_id of this UpdateProvisionedProductPropertiesOutput.


        :param provisioned_product_id: The provisioned_product_id of this UpdateProvisionedProductPropertiesOutput.
        :type provisioned_product_id: str
        """

        self._provisioned_product_id = provisioned_product_id

    @property
    def provisioned_product_properties(self):
        """Gets the provisioned_product_properties of this UpdateProvisionedProductPropertiesOutput.


        :return: The provisioned_product_properties of this UpdateProvisionedProductPropertiesOutput.
        :rtype: Dict
        """
        return self._provisioned_product_properties

    @provisioned_product_properties.setter
    def provisioned_product_properties(self, provisioned_product_properties):
        """Sets the provisioned_product_properties of this UpdateProvisionedProductPropertiesOutput.


        :param provisioned_product_properties: The provisioned_product_properties of this UpdateProvisionedProductPropertiesOutput.
        :type provisioned_product_properties: Dict
        """

        self._provisioned_product_properties = provisioned_product_properties

    @property
    def record_id(self):
        """Gets the record_id of this UpdateProvisionedProductPropertiesOutput.


        :return: The record_id of this UpdateProvisionedProductPropertiesOutput.
        :rtype: str
        """
        return self._record_id

    @record_id.setter
    def record_id(self, record_id):
        """Sets the record_id of this UpdateProvisionedProductPropertiesOutput.


        :param record_id: The record_id of this UpdateProvisionedProductPropertiesOutput.
        :type record_id: str
        """

        self._record_id = record_id

    @property
    def status(self):
        """Gets the status of this UpdateProvisionedProductPropertiesOutput.


        :return: The status of this UpdateProvisionedProductPropertiesOutput.
        :rtype: RecordStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateProvisionedProductPropertiesOutput.


        :param status: The status of this UpdateProvisionedProductPropertiesOutput.
        :type status: RecordStatus
        """

        self._status = status
