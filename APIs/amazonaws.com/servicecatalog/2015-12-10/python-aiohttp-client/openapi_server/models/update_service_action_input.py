# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateServiceActionInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, definition: Dict=None, description: str=None, accept_language: str=None):
        """UpdateServiceActionInput - a model defined in OpenAPI

        :param id: The id of this UpdateServiceActionInput.
        :param name: The name of this UpdateServiceActionInput.
        :param definition: The definition of this UpdateServiceActionInput.
        :param description: The description of this UpdateServiceActionInput.
        :param accept_language: The accept_language of this UpdateServiceActionInput.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'definition': Dict,
            'description': str,
            'accept_language': str
        }

        self.attribute_map = {
            'id': 'Id',
            'name': 'Name',
            'definition': 'Definition',
            'description': 'Description',
            'accept_language': 'AcceptLanguage'
        }

        self._id = id
        self._name = name
        self._definition = definition
        self._description = description
        self._accept_language = accept_language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateServiceActionInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateServiceActionInput of this UpdateServiceActionInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateServiceActionInput.


        :return: The id of this UpdateServiceActionInput.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateServiceActionInput.


        :param id: The id of this UpdateServiceActionInput.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this UpdateServiceActionInput.


        :return: The name of this UpdateServiceActionInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateServiceActionInput.


        :param name: The name of this UpdateServiceActionInput.
        :type name: str
        """

        self._name = name

    @property
    def definition(self):
        """Gets the definition of this UpdateServiceActionInput.


        :return: The definition of this UpdateServiceActionInput.
        :rtype: Dict
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this UpdateServiceActionInput.


        :param definition: The definition of this UpdateServiceActionInput.
        :type definition: Dict
        """

        self._definition = definition

    @property
    def description(self):
        """Gets the description of this UpdateServiceActionInput.


        :return: The description of this UpdateServiceActionInput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateServiceActionInput.


        :param description: The description of this UpdateServiceActionInput.
        :type description: str
        """

        self._description = description

    @property
    def accept_language(self):
        """Gets the accept_language of this UpdateServiceActionInput.


        :return: The accept_language of this UpdateServiceActionInput.
        :rtype: str
        """
        return self._accept_language

    @accept_language.setter
    def accept_language(self, accept_language):
        """Sets the accept_language of this UpdateServiceActionInput.


        :param accept_language: The accept_language of this UpdateServiceActionInput.
        :type accept_language: str
        """

        self._accept_language = accept_language
