openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\"\
    >Service Catalog</a> enables organizations to create and manage catalogs of IT\
    \ services that are approved for Amazon Web Services. To get the most out of this\
    \ documentation, you should be familiar with the terminology discussed in <a href=\"\
    http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\"\
    >Service Catalog Concepts</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Service Catalog
  version: 2015-12-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: servicecatalog
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/servicecatalog/
servers:
- description: The AWS Service Catalog multi-region endpoint
  url: "http://servicecatalog.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Service Catalog multi-region endpoint
  url: "https://servicecatalog.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)
  url: "http://servicecatalog.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Service Catalog endpoint for China (Beijing) and China (Ningxia)
  url: "https://servicecatalog.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare:
    post:
      description: Accepts an offer to share the specified portfolio.
      operationId: accept_portfolio_share
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.AcceptPortfolioShare
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPortfolioShareInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptPortfolioShareOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource:
    post:
      description: Associates the specified budget with the specified resource.
      operationId: associate_budget_with_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.AssociateBudgetWithResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateBudgetWithResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateBudgetWithResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio:
    post:
      description: "<p>Associates the specified principal ARN with the specified portfolio.</p>\
        \ <p>If you share the portfolio with principal name sharing enabled, the <code>PrincipalARN</code>\
        \ association is included in the share. </p> <p>The <code>PortfolioID</code>,\
        \ <code>PrincipalARN</code>, and <code>PrincipalType</code> parameters are\
        \ required. </p> <p>You can associate a maximum of 10 Principals with a portfolio\
        \ using <code>PrincipalType</code> as <code>IAM_PATTERN</code> </p> <note>\
        \ <p>When you associate a principal with portfolio, a potential privilege\
        \ escalation path may occur when that portfolio is then shared with other\
        \ accounts. For a user in a recipient account who is <i>not</i> an Service\
        \ Catalog Admin, but still has the ability to create Principals (Users/Groups/Roles),\
        \ that user could create a role that matches a principal name association\
        \ for the portfolio. Although this user may not know which principal names\
        \ are associated through Service Catalog, they may be able to guess the user.\
        \ If this potential escalation path is a concern, then Service Catalog recommends\
        \ using <code>PrincipalType</code> as <code>IAM</code>. With this configuration,\
        \ the <code>PrincipalARN</code> must already exist in the recipient account\
        \ before it can be associated. </p> </note>"
      operationId: associate_principal_with_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePrincipalWithPortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePrincipalWithPortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio:
    post:
      description: <p>Associates the specified product with the specified portfolio.</p>
        <p>A delegated admin is authorized to invoke this command.</p>
      operationId: associate_product_with_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.AssociateProductWithPortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateProductWithPortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateProductWithPortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact:
    post:
      description: Associates a self-service action with a provisioning artifact.
      operationId: associate_service_action_with_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateServiceActionWithProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateServiceActionWithProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource:
    post:
      description: Associate the specified TagOption with the specified portfolio
        or product.
      operationId: associate_tag_option_with_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.AssociateTagOptionWithResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateTagOptionWithResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTagOptionWithResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact:
    post:
      description: Associates multiple self-service actions with provisioning artifacts.
      operationId: batch_associate_service_action_with_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAssociateServiceActionWithProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateServiceActionWithProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact:
    post:
      description: Disassociates a batch of self-service actions from the specified
        provisioning artifact.
      operationId: batch_disassociate_service_action_from_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDisassociateServiceActionFromProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateServiceActionFromProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct:
    post:
      description: "<p>Copies the specified source product to the specified target\
        \ product or a new product.</p> <p>You can copy a product to the same account\
        \ or another account. You can copy a product to the same Region or another\
        \ Region. If you copy a product to another account, you must first share the\
        \ product in a portfolio using <a>CreatePortfolioShare</a>.</p> <p>This operation\
        \ is performed asynchronously. To track the progress of the operation, use\
        \ <a>DescribeCopyProductStatus</a>.</p>"
      operationId: copy_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CopyProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint:
    post:
      description: <p>Creates a constraint.</p> <p>A delegated admin is authorized
        to invoke this command.</p>
      operationId: create_constraint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreateConstraint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConstraintInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConstraintOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio:
    post:
      description: <p>Creates a portfolio.</p> <p>A delegated admin is authorized
        to invoke this command.</p>
      operationId: create_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreatePortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare:
    post:
      description: "<p>Shares the specified portfolio with the specified account or\
        \ organization node. Shares to an organization node can only be created by\
        \ the management account of an organization or by a delegated administrator.\
        \ You can share portfolios to an organization, an organizational unit, or\
        \ a specific account.</p> <p>Note that if a delegated admin is de-registered,\
        \ they can no longer create portfolio shares.</p> <p> <code>AWSOrganizationsAccess</code>\
        \ must be enabled in order to create a portfolio share to an organization\
        \ node.</p> <p>You can't share a shared resource, including portfolios that\
        \ contain a shared product.</p> <p>If the portfolio share with the specified\
        \ account or organization node already exists, this action will have no effect\
        \ and will not return an error. To update an existing share, you must use\
        \ the <code> UpdatePortfolioShare</code> API instead. </p> <note> <p>When\
        \ you associate a principal with portfolio, a potential privilege escalation\
        \ path may occur when that portfolio is then shared with other accounts. For\
        \ a user in a recipient account who is <i>not</i> an Service Catalog Admin,\
        \ but still has the ability to create Principals (Users/Groups/Roles), that\
        \ user could create a role that matches a principal name association for the\
        \ portfolio. Although this user may not know which principal names are associated\
        \ through Service Catalog, they may be able to guess the user. If this potential\
        \ escalation path is a concern, then Service Catalog recommends using <code>PrincipalType</code>\
        \ as <code>IAM</code>. With this configuration, the <code>PrincipalARN</code>\
        \ must already exist in the recipient account before it can be associated.\
        \ </p> </note>"
      operationId: create_portfolio_share
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreatePortfolioShare
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortfolioShareInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortfolioShareOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct:
    post:
      description: <p>Creates a product.</p> <p>A delegated admin is authorized to
        invoke this command.</p> <p>The user or role that performs this operation
        must have the <code>cloudformation:GetTemplate</code> IAM policy permission.
        This policy permission is required when using the <code>ImportFromPhysicalId</code>
        template source in the information data section.</p>
      operationId: create_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreateProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan:
    post:
      description: "<p>Creates a plan.</p> <p>A plan includes the list of resources\
        \ to be created (when provisioning a new product) or modified (when updating\
        \ a provisioned product) when the plan is executed.</p> <p>You can create\
        \ one plan for each provisioned product. To create a plan for an existing\
        \ provisioned product, the product status must be AVAILABLE or TAINTED.</p>\
        \ <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>.\
        \ To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>"
      operationId: create_provisioned_product_plan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreateProvisionedProductPlan
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProvisionedProductPlanInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisionedProductPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact:
    post:
      description: <p>Creates a provisioning artifact (also known as a version) for
        the specified product.</p> <p>You cannot create a provisioning artifact for
        a product that was shared with you.</p> <p>The user or role that performs
        this operation must have the <code>cloudformation:GetTemplate</code> IAM policy
        permission. This policy permission is required when using the <code>ImportFromPhysicalId</code>
        template source in the information data section.</p>
      operationId: create_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreateProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction:
    post:
      description: Creates a self-service action.
      operationId: create_service_action
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreateServiceAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceActionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceActionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption:
    post:
      description: Creates a TagOption.
      operationId: create_tag_option
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.CreateTagOption
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagOptionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTagOptionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint:
    post:
      description: <p>Deletes the specified constraint.</p> <p>A delegated admin is
        authorized to invoke this command.</p>
      operationId: delete_constraint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeleteConstraint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConstraintInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConstraintOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio:
    post:
      description: "<p>Deletes the specified portfolio.</p> <p>You cannot delete a\
        \ portfolio if it was shared with you or if it has associated products, users,\
        \ constraints, or shared accounts.</p> <p>A delegated admin is authorized\
        \ to invoke this command.</p>"
      operationId: delete_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeletePortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare:
    post:
      description: "<p>Stops sharing the specified portfolio with the specified account\
        \ or organization node. Shares to an organization node can only be deleted\
        \ by the management account of an organization or by a delegated administrator.</p>\
        \ <p>Note that if a delegated admin is de-registered, portfolio shares created\
        \ from that account are removed.</p>"
      operationId: delete_portfolio_share
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeletePortfolioShare
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePortfolioShareInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePortfolioShareOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct:
    post:
      description: <p>Deletes the specified product.</p> <p>You cannot delete a product
        if it was shared with you or is associated with a portfolio.</p> <p>A delegated
        admin is authorized to invoke this command.</p>
      operationId: delete_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeleteProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan:
    post:
      description: Deletes the specified plan.
      operationId: delete_provisioned_product_plan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeleteProvisionedProductPlan
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProvisionedProductPlanInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisionedProductPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact:
    post:
      description: "<p>Deletes the specified provisioning artifact (also known as\
        \ a version) for the specified product.</p> <p>You cannot delete a provisioning\
        \ artifact associated with a product that was shared with you. You cannot\
        \ delete the last provisioning artifact for a product, because a product must\
        \ have at least one provisioning artifact.</p>"
      operationId: delete_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeleteProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction:
    post:
      description: Deletes a self-service action.
      operationId: delete_service_action
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeleteServiceAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceActionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceActionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption:
    post:
      description: <p>Deletes the specified TagOption.</p> <p>You cannot delete a
        TagOption if it is associated with a product or portfolio.</p>
      operationId: delete_tag_option
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DeleteTagOption
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagOptionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTagOptionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint:
    post:
      description: Gets information about the specified constraint.
      operationId: describe_constraint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeConstraint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConstraintInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConstraintOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus:
    post:
      description: Gets the status of the specified copy product operation.
      operationId: describe_copy_product_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeCopyProductStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCopyProductStatusInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCopyProductStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio:
    post:
      description: <p>Gets information about the specified portfolio.</p> <p>A delegated
        admin is authorized to invoke this command.</p>
      operationId: describe_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribePortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus:
    post:
      description: Gets the status of the specified portfolio share operation. This
        API can only be called by the management account in the organization or by
        a delegated admin.
      operationId: describe_portfolio_share_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribePortfolioShareStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePortfolioShareStatusInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortfolioShareStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShares:
    post:
      description: "<p>Returns a summary of each of the portfolio shares that were\
        \ created for the specified portfolio.</p> <p>You can use this API to determine\
        \ which accounts or organizational nodes this portfolio have been shared,\
        \ whether the recipient entity has imported the share, and whether TagOptions\
        \ are included with the share.</p> <p>The <code>PortfolioId</code> and <code>Type</code>\
        \ parameters are both required.</p>"
      operationId: describe_portfolio_shares
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribePortfolioShares
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePortfolioSharesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePortfolioSharesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct:
    post:
      description: <p>Gets information about the specified product.</p> <note> <p>
        Running this operation with administrator access results in a failure. <a>DescribeProductAsAdmin</a>
        should be used instead. </p> </note>
      operationId: describe_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin:
    post:
      description: Gets information about the specified product. This operation is
        run with administrator access.
      operationId: describe_product_as_admin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProductAsAdmin
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProductAsAdminInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProductAsAdminOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView:
    post:
      description: Gets information about the specified product.
      operationId: describe_product_view
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProductView
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProductViewInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProductViewOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct:
    post:
      description: Gets information about the specified provisioned product.
      operationId: describe_provisioned_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProvisionedProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisionedProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisionedProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan:
    post:
      description: Gets information about the resource changes for the specified plan.
      operationId: describe_provisioned_product_plan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProvisionedProductPlan
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisionedProductPlanInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisionedProductPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact:
    post:
      description: Gets information about the specified provisioning artifact (also
        known as a version) for the specified product.
      operationId: describe_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters:
    post:
      description: "<p>Gets information about the configuration required to provision\
        \ the specified product using the specified provisioning artifact.</p> <p>If\
        \ the output contains a TagOption key with an empty list of values, there\
        \ is a TagOption conflict for that key. The end user cannot take action to\
        \ fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>,\
        \ do not include conflicted TagOption keys as tags, or this causes the error\
        \ \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\"\
        . Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>"
      operationId: describe_provisioning_parameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeProvisioningParameters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProvisioningParametersInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProvisioningParametersOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord:
    post:
      description: "<p>Gets information about the specified request operation.</p>\
        \ <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>,\
        \ <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>).\
        \ </p> <note> <p>If a provisioned product was transferred to a new owner using\
        \ <a>UpdateProvisionedProductProperties</a>, the new owner will be able to\
        \ describe all past records for that product. The previous owner will no longer\
        \ be able to describe the records, but will be able to use <a>ListRecordHistory</a>\
        \ to see the product's history from when he was the owner.</p> </note>"
      operationId: describe_record
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeRecord
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRecordInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecordOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction:
    post:
      description: Describes a self-service action.
      operationId: describe_service_action
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeServiceAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceActionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServiceActionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters:
    post:
      description: Finds the default parameters for a specific self-service action
        on a specific provisioned product and returns a map of the results to the
        user.
      operationId: describe_service_action_execution_parameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceActionExecutionParametersInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServiceActionExecutionParametersOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption:
    post:
      description: Gets information about the specified TagOption.
      operationId: describe_tag_option
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DescribeTagOption
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTagOptionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTagOptionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess:
    post:
      description: "<p>Disable portfolio sharing through the Organizations service.\
        \ This command will not delete your current shares, but prevents you from\
        \ creating new shares throughout your organization. Current shares are not\
        \ kept in sync with your organization structure if the structure changes after\
        \ calling this API. Only the management account in the organization can call\
        \ this API.</p> <p>You cannot call this API if there are active delegated\
        \ administrators in the organization.</p> <p>Note that a delegated administrator\
        \ is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>\
        \ <important> <p>If you share an Service Catalog portfolio in an organization\
        \ within Organizations, and then disable Organizations access for Service\
        \ Catalog, the portfolio access permissions will not sync with the latest\
        \ changes to the organization structure. Specifically, accounts that you removed\
        \ from the organization after disabling Service Catalog access will retain\
        \ access to the previously shared portfolio.</p> </important>"
      operationId: disable_aws_organizations_access
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DisableAWSOrganizationsAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAWSOrganizationsAccessInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableAWSOrganizationsAccessOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource:
    post:
      description: Disassociates the specified budget from the specified resource.
      operationId: disassociate_budget_from_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DisassociateBudgetFromResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateBudgetFromResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateBudgetFromResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio:
    post:
      description: "<p>Disassociates a previously associated principal ARN from a\
        \ specified portfolio.</p> <p>The <code>PrincipalType</code> and <code>PrincipalARN</code>\
        \ must match the <code>AssociatePrincipalWithPortfolio</code> call request\
        \ details. For example, to disassociate an association created with a <code>PrincipalARN</code>\
        \ of <code>PrincipalType</code> IAM you must use the <code>PrincipalType</code>\
        \ IAM when calling <code>DisassociatePrincipalFromPortfolio</code>. </p> <p>For\
        \ portfolios that have been shared with principal name sharing enabled: after\
        \ disassociating a principal, share recipient accounts will no longer be able\
        \ to provision products in this portfolio using a role matching the name of\
        \ the associated principal. </p> <p>For more information, review <a href=\"\
        https://docs.aws.amazon.com/cli/latest/reference/servicecatalog/associate-principal-with-portfolio.html#options\"\
        >associate-principal-with-portfolio</a> in the Amazon Web Services CLI Command\
        \ Reference. </p> <note> <p>If you disassociate a principal from a portfolio,\
        \ with PrincipalType as <code>IAM</code>, the same principal will still have\
        \ access to the portfolio if it matches one of the associated principals of\
        \ type <code>IAM_PATTERN</code>. To fully remove access for a principal, verify\
        \ all the associated Principals of type <code>IAM_PATTERN</code>, and then\
        \ ensure you disassociate any <code>IAM_PATTERN</code> principals that match\
        \ the principal whose access you are removing.</p> </note>"
      operationId: disassociate_principal_from_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociatePrincipalFromPortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociatePrincipalFromPortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio:
    post:
      description: <p>Disassociates the specified product from the specified portfolio.
        </p> <p>A delegated admin is authorized to invoke this command.</p>
      operationId: disassociate_product_from_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DisassociateProductFromPortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateProductFromPortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateProductFromPortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact:
    post:
      description: Disassociates the specified self-service action association from
        the specified provisioning artifact.
      operationId: disassociate_service_action_from_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateServiceActionFromProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateServiceActionFromProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource:
    post:
      description: Disassociates the specified TagOption from the specified resource.
      operationId: disassociate_tag_option_from_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.DisassociateTagOptionFromResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateTagOptionFromResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTagOptionFromResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess:
    post:
      description: "<p>Enable portfolio sharing feature through Organizations. This\
        \ API will allow Service Catalog to receive updates on your organization in\
        \ order to sync your shares with the current structure. This API can only\
        \ be called by the management account in the organization.</p> <p>When you\
        \ call this API, Service Catalog calls <code>organizations:EnableAWSServiceAccess</code>\
        \ on your behalf so that your shares stay in sync with any changes in your\
        \ Organizations structure.</p> <p>Note that a delegated administrator is not\
        \ authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p> <important>\
        \ <p>If you have previously disabled Organizations access for Service Catalog,\
        \ and then enable access again, the portfolio access permissions might not\
        \ sync with the latest changes to the organization structure. Specifically,\
        \ accounts that you removed from the organization after disabling Service\
        \ Catalog access, and before you enabled access again, can retain access to\
        \ the previously shared portfolio. As a result, an account that has been removed\
        \ from the organization might still be able to create or manage Amazon Web\
        \ Services resources when it is no longer authorized to do so. Amazon Web\
        \ Services is working to resolve this issue.</p> </important>"
      operationId: enable_aws_organizations_access
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.EnableAWSOrganizationsAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableAWSOrganizationsAccessInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableAWSOrganizationsAccessOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan:
    post:
      description: Provisions or modifies a product based on the resource changes
        for the specified plan.
      operationId: execute_provisioned_product_plan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ExecuteProvisionedProductPlan
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteProvisionedProductPlanInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteProvisionedProductPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction:
    post:
      description: Executes a self-service action against a provisioned product.
      operationId: execute_provisioned_product_service_action
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteProvisionedProductServiceActionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteProvisionedProductServiceActionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus:
    post:
      description: Get the Access Status for Organizations portfolio share feature.
        This API can only be called by the management account in the organization
        or by a delegated admin.
      operationId: get_aws_organizations_access_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAWSOrganizationsAccessStatusInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAWSOrganizationsAccessStatusOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.GetProvisionedProductOutputs:
    post:
      description: "This API takes either a <code>ProvisonedProductId</code> or a\
        \ <code>ProvisionedProductName</code>, along with a list of one or more output\
        \ keys, and responds with the key/value pairs of those outputs."
      operationId: get_provisioned_product_outputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.GetProvisionedProductOutputs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProvisionedProductOutputsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProvisionedProductOutputsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ImportAsProvisionedProduct:
    post:
      description: "<p> Requests the import of a resource as an Service Catalog provisioned\
        \ product that is associated to an Service Catalog product and provisioning\
        \ artifact. Once imported, all supported governance actions are supported\
        \ on the provisioned product. </p> <p> Resource import only supports CloudFormation\
        \ stack ARNs. CloudFormation StackSets, and non-root nested stacks are not\
        \ supported. </p> <p> The CloudFormation stack must have one of the following\
        \ statuses to be imported: <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>,\
        \ <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>, and\
        \ <code>IMPORT_ROLLBACK_COMPLETE</code>. </p> <p> Import of the resource requires\
        \ that the CloudFormation stack template matches the associated Service Catalog\
        \ product provisioning artifact. </p> <note> <p> When you import an existing\
        \ CloudFormation stack into a portfolio, constraints that are associated with\
        \ the product aren't applied during the import process. The constraints are\
        \ applied after you call <code>UpdateProvisionedProduct</code> for the provisioned\
        \ product. </p> </note> <p> The user or role that performs this operation\
        \ must have the <code>cloudformation:GetTemplate</code> and <code>cloudformation:DescribeStacks</code>\
        \ IAM policy permissions. </p>"
      operationId: import_as_provisioned_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ImportAsProvisionedProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAsProvisionedProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportAsProvisionedProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares:
    post:
      description: "Lists all imported portfolios for which account-to-account shares\
        \ were accepted by this account. By specifying the <code>PortfolioShareType</code>,\
        \ you can list portfolios for which organizational shares were accepted by\
        \ this account."
      operationId: list_accepted_portfolio_shares
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListAcceptedPortfolioShares
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAcceptedPortfolioSharesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAcceptedPortfolioSharesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource:
    post:
      description: Lists all the budgets associated to the specified resource.
      operationId: list_budgets_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListBudgetsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBudgetsForResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBudgetsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio:
    post:
      description: Lists the constraints for the specified portfolio and product.
      operationId: list_constraints_for_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListConstraintsForPortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConstraintsForPortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConstraintsForPortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths:
    post:
      description: "<p> Lists the paths to the specified product. A path describes\
        \ how the user gets access to a specified product and is necessary when provisioning\
        \ a product. A path also determines the constraints that are put on a product.\
        \ A path is dependent on a specific product, porfolio, and principal. </p>\
        \ <note> <p> When provisioning a product that's been added to a portfolio,\
        \ you must grant your user, group, or role access to the portfolio. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/servicecatalog/latest/adminguide/catalogs_portfolios_users.html\"\
        >Granting users access</a> in the <i>Service Catalog User Guide</i>. </p>\
        \ </note>"
      operationId: list_launch_paths
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListLaunchPaths
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLaunchPathsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchPathsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess:
    post:
      description: "<p>Lists the organization nodes that have access to the specified\
        \ portfolio. This API can only be called by the management account in the\
        \ organization or by a delegated admin.</p> <p>If a delegated admin is de-registered,\
        \ they can no longer perform this operation.</p>"
      operationId: list_organization_portfolio_access
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListOrganizationPortfolioAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationPortfolioAccessInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationPortfolioAccessOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess:
    post:
      description: "<p>Lists the account IDs that have access to the specified portfolio.</p>\
        \ <p>A delegated admin can list the accounts that have access to the shared\
        \ portfolio. Note that if a delegated admin is de-registered, they can no\
        \ longer perform this operation.</p>"
      operationId: list_portfolio_access
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListPortfolioAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPortfolioAccessInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortfolioAccessOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios:
    post:
      description: Lists all portfolios in the catalog.
      operationId: list_portfolios
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListPortfolios
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPortfoliosInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortfoliosOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct:
    post:
      description: Lists all portfolios that the specified product is associated with.
      operationId: list_portfolios_for_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListPortfoliosForProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPortfoliosForProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortfoliosForProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio:
    post:
      description: Lists all <code>PrincipalARN</code>s and corresponding <code>PrincipalType</code>s
        associated with the specified portfolio.
      operationId: list_principals_for_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListPrincipalsForPortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPrincipalsForPortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrincipalsForPortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans:
    post:
      description: Lists the plans for the specified provisioned product or all plans
        to which the user has access.
      operationId: list_provisioned_product_plans
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListProvisionedProductPlans
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisionedProductPlansInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisionedProductPlansOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts:
    post:
      description: Lists all provisioning artifacts (also known as versions) for the
        specified product.
      operationId: list_provisioning_artifacts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListProvisioningArtifacts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisioningArtifactsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningArtifactsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction:
    post:
      description: Lists all provisioning artifacts (also known as versions) for the
        specified self-service action.
      operationId: list_provisioning_artifacts_for_service_action
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProvisioningArtifactsForServiceActionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningArtifactsForServiceActionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory:
    post:
      description: Lists the specified requests or all performed requests.
      operationId: list_record_history
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListRecordHistory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecordHistoryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordHistoryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption:
    post:
      description: Lists the resources associated with the specified TagOption.
      operationId: list_resources_for_tag_option
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListResourcesForTagOption
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcesForTagOptionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesForTagOptionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions:
    post:
      description: Lists all self-service actions.
      operationId: list_service_actions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListServiceActions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceActionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceActionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact:
    post:
      description: Returns a paginated list of self-service actions associated with
        the specified Product ID and Provisioning Artifact ID.
      operationId: list_service_actions_for_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceActionsForProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceActionsForProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct:
    post:
      description: 'Returns summary information about stack instances that are associated
        with the specified <code>CFN_STACKSET</code> type provisioned product. You
        can filter for stack instances that are associated with a specific Amazon
        Web Services account name or Region. '
      operationId: list_stack_instances_for_provisioned_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStackInstancesForProvisionedProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStackInstancesForProvisionedProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions:
    post:
      description: Lists the specified TagOptions or all TagOptions.
      operationId: list_tag_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ListTagOptions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagOptionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagOptionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.NotifyProvisionProductEngineWorkflowResult:
    post:
      description: ' Notifies the result of the provisioning engine execution. '
      operationId: notify_provision_product_engine_workflow_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.NotifyProvisionProductEngineWorkflowResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyProvisionProductEngineWorkflowResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyProvisionProductEngineWorkflowResultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.NotifyTerminateProvisionedProductEngineWorkflowResult:
    post:
      description: ' Notifies the result of the terminate engine execution. '
      operationId: notify_terminate_provisioned_product_engine_workflow_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.NotifyTerminateProvisionedProductEngineWorkflowResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyTerminateProvisionedProductEngineWorkflowResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyTerminateProvisionedProductEngineWorkflowResultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.NotifyUpdateProvisionedProductEngineWorkflowResult:
    post:
      description: ' Notifies the result of the update engine execution. '
      operationId: notify_update_provisioned_product_engine_workflow_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.NotifyUpdateProvisionedProductEngineWorkflowResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyUpdateProvisionedProductEngineWorkflowResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyUpdateProvisionedProductEngineWorkflowResultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct:
    post:
      description: "<p> Provisions the specified product. </p> <p> A provisioned product\
        \ is a resourced instance of a product. For example, provisioning a product\
        \ that's based on an CloudFormation template launches an CloudFormation stack\
        \ and its underlying resources. You can check the status of this request using\
        \ <a>DescribeRecord</a>. </p> <p> If the request contains a tag key with an\
        \ empty list of values, there's a tag conflict for that key. Don't include\
        \ conflicted keys as tags, or this will cause the error \"Parameter validation\
        \ failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\". </p>\
        \ <note> <p> When provisioning a product that's been added to a portfolio,\
        \ you must grant your user, group, or role access to the portfolio. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/servicecatalog/latest/adminguide/catalogs_portfolios_users.html\"\
        >Granting users access</a> in the <i>Service Catalog User Guide</i>. </p>\
        \ </note>"
      operationId: provision_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ProvisionProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare:
    post:
      description: Rejects an offer to share the specified portfolio.
      operationId: reject_portfolio_share
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.RejectPortfolioShare
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectPortfolioShareInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectPortfolioShareOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts:
    post:
      description: "<p>Lists the provisioned products that are available (not terminated).</p>\
        \ <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>"
      operationId: scan_provisioned_products
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.ScanProvisionedProducts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanProvisionedProductsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanProvisionedProductsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts:
    post:
      description: Gets information about the products to which the caller has access.
      operationId: search_products
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.SearchProducts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin:
    post:
      description: Gets information about the products for the specified portfolio
        or all products.
      operationId: search_products_as_admin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.SearchProductsAsAdmin
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductsAsAdminInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductsAsAdminOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts:
    post:
      description: Gets information about the provisioned products that meet the specified
        criteria.
      operationId: search_provisioned_products
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.SearchProvisionedProducts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProvisionedProductsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProvisionedProductsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct:
    post:
      description: <p>Terminates the specified provisioned product.</p> <p>This operation
        does not delete any records associated with the provisioned product.</p> <p>You
        can check the status of this request using <a>DescribeRecord</a>.</p>
      operationId: terminate_provisioned_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.TerminateProvisionedProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateProvisionedProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateProvisionedProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint:
    post:
      description: Updates the specified constraint.
      operationId: update_constraint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateConstraint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConstraintInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConstraintOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio:
    post:
      description: <p>Updates the specified portfolio.</p> <p>You cannot update a
        product that was shared with you.</p>
      operationId: update_portfolio
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdatePortfolio
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortfolioInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortfolioOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolioShare:
    post:
      description: "<p>Updates the specified portfolio share. You can use this API\
        \ to enable or disable <code>TagOptions</code> sharing or Principal sharing\
        \ for an existing portfolio share. </p> <p>The portfolio share cannot be updated\
        \ if the <code>CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>,\
        \ as the share is not available to recipient entities. In this case, you must\
        \ wait for the portfolio share to be COMPLETED.</p> <p>You must provide the\
        \ <code>accountId</code> or organization node in the input, but not both.</p>\
        \ <p>If the portfolio is shared to both an external account and an organization\
        \ node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code>\
        \ separately for each share type. </p> <p>This API cannot be used for removing\
        \ the portfolio share. You must use <code>DeletePortfolioShare</code> API\
        \ for that action. </p> <note> <p>When you associate a principal with portfolio,\
        \ a potential privilege escalation path may occur when that portfolio is then\
        \ shared with other accounts. For a user in a recipient account who is <i>not</i>\
        \ an Service Catalog Admin, but still has the ability to create Principals\
        \ (Users/Groups/Roles), that user could create a role that matches a principal\
        \ name association for the portfolio. Although this user may not know which\
        \ principal names are associated through Service Catalog, they may be able\
        \ to guess the user. If this potential escalation path is a concern, then\
        \ Service Catalog recommends using <code>PrincipalType</code> as <code>IAM</code>.\
        \ With this configuration, the <code>PrincipalARN</code> must already exist\
        \ in the recipient account before it can be associated. </p> </note>"
      operationId: update_portfolio_share
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdatePortfolioShare
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortfolioShareInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortfolioShareOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
          description: OperationNotSupportedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct:
    post:
      description: Updates the specified product.
      operationId: update_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct:
    post:
      description: "<p>Requests updates to the configuration of the specified provisioned\
        \ product.</p> <p>If there are tags associated with the object, they cannot\
        \ be updated or added. Depending on the specific updates requested, this operation\
        \ can update with no interruption, with some interruption, or replace the\
        \ provisioned product entirely.</p> <p>You can check the status of this request\
        \ using <a>DescribeRecord</a>.</p>"
      operationId: update_provisioned_product
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateProvisionedProduct
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisionedProductInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisionedProductOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties:
    post:
      description: Requests updates to the properties of the specified provisioned
        product.
      operationId: update_provisioned_product_properties
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateProvisionedProductProperties
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisionedProductPropertiesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisionedProductPropertiesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact:
    post:
      description: <p>Updates the specified provisioning artifact (also known as a
        version) for the specified product.</p> <p>You cannot update a provisioning
        artifact for a product that was shared with you.</p>
      operationId: update_provisioning_artifact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateProvisioningArtifact
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProvisioningArtifactInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProvisioningArtifactOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction:
    post:
      description: Updates a self-service action.
      operationId: update_service_action
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateServiceAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceActionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceActionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption:
    post:
      description: Updates the specified TagOption.
      operationId: update_tag_option
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWS242ServiceCatalogService.UpdateTagOption
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagOptionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTagOptionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOptionNotMigratedException'
          description: TagOptionNotMigratedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
          description: DuplicateResourceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParametersException'
          description: InvalidParametersException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcceptPortfolioShareOutput:
      properties: {}
      type: object
    AcceptPortfolioShareInput:
      example:
        AcceptLanguage: ""
        PortfolioId: ""
        PortfolioShareType: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        PortfolioShareType:
          allOf:
          - $ref: '#/components/schemas/PortfolioShareType'
          - description: "<p>The type of shared portfolios to accept. The default\
              \ is to accept imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code>\
              \ - Accept portfolios shared by the management account of your organization.</p>\
              \ </li> <li> <p> <code>IMPORTED</code> - Accept imported portfolios.</p>\
              \ </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws\
              \ ResourceNotFoundException.)</p> </li> </ul> <p>For example, <code>aws\
              \ servicecatalog accept-portfolio-share --portfolio-id \"port-2qwzkwxt3y5fk\"\
              \ --portfolio-share-type AWS_ORGANIZATIONS</code> </p>"
          title: PortfolioShareType
      required:
      - PortfolioId
      title: AcceptPortfolioShareInput
      type: object
    InvalidParametersException: {}
    ResourceNotFoundException: {}
    LimitExceededException: {}
    AssociateBudgetWithResourceOutput:
      properties: {}
      type: object
    AssociateBudgetWithResourceInput:
      example:
        ResourceId: ""
        BudgetName: ""
      properties:
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget you want to associate.
          title: BudgetName
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: ' The resource identifier. Either a portfolio-id or a product-id.'
          title: ResourceId
      required:
      - BudgetName
      - ResourceId
      title: AssociateBudgetWithResourceInput
      type: object
    DuplicateResourceException: {}
    AssociatePrincipalWithPortfolioOutput:
      properties: {}
      type: object
    AssociatePrincipalWithPortfolioInput:
      example:
        PrincipalARN: ""
        AcceptLanguage: ""
        PortfolioId: ""
        PrincipalType: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        PrincipalARN:
          allOf:
          - $ref: '#/components/schemas/PrincipalARN'
          - description: "<p>The ARN of the principal (user, role, or group). If the\
              \ <code>PrincipalType</code> is <code>IAM</code>, the supported value\
              \ is a fully defined <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns\"\
              >IAM Amazon Resource Name (ARN)</a>. If the <code>PrincipalType</code>\
              \ is <code>IAM_PATTERN</code>, the supported value is an <code>IAM</code>\
              \ ARN <i>without an AccountID</i> in the following format:</p> <p> <i>arn:partition:iam:::resource-type/resource-id</i>\
              \ </p> <p>The ARN resource-id can be either:</p> <ul> <li> <p>A fully\
              \ formed resource-id. For example, <i>arn:aws:iam:::role/resource-name</i>\
              \ or <i>arn:aws:iam:::role/resource-path/resource-name</i> </p> </li>\
              \ <li> <p>A wildcard ARN. The wildcard ARN accepts <code>IAM_PATTERN</code>\
              \ values with a \"*\" or \"?\" in the resource-id segment of the ARN.\
              \ For example <i>arn:partition:service:::resource-type/resource-path/resource-name</i>.\
              \ The new symbols are exclusive to the <b>resource-path</b> and <b>resource-name</b>\
              \ and cannot replace the <b>resource-type</b> or other ARN values. </p>\
              \ <p>The ARN path and principal name allow unlimited wildcard characters.</p>\
              \ </li> </ul> <p>Examples of an <b>acceptable</b> wildcard ARN:</p>\
              \ <ul> <li> <p>arn:aws:iam:::role/ResourceName_*</p> </li> <li> <p>arn:aws:iam:::role/*/ResourceName_?</p>\
              \ </li> </ul> <p>Examples of an <b>unacceptable</b> wildcard ARN:</p>\
              \ <ul> <li> <p>arn:aws:iam:::*/ResourceName</p> </li> </ul> <p>You can\
              \ associate multiple <code>IAM_PATTERN</code>s even if the account has\
              \ no principal with that name. </p> <p>The \"?\" wildcard character\
              \ matches zero or one of any character. This is similar to \".?\" in\
              \ regular regex context. The \"*\" wildcard character matches any number\
              \ of any characters. This is similar to \".*\" in regular regex context.</p>\
              \ <p>In the IAM Principal ARN format (<i>arn:partition:iam:::resource-type/resource-path/resource-name</i>),\
              \ valid resource-type values include <b>user/</b>, <b>group/</b>, or\
              \ <b>role/</b>. The \"?\" and \"*\" characters are allowed only after\
              \ the resource-type in the resource-id segment. You can use special\
              \ characters anywhere within the resource-id. </p> <p>The \"*\" character\
              \ also matches the \"/\" character, allowing paths to be formed <i>within</i>\
              \ the resource-id. For example, <i>arn:aws:iam:::role/<b>*</b>/ResourceName_?</i>\
              \ matches both <i>arn:aws:iam:::role/pathA/pathB/ResourceName_1</i>\
              \ and <i>arn:aws:iam:::role/pathA/ResourceName_1</i>. </p>"
          title: PrincipalARN
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: "The principal type. The supported value is <code>IAM</code>\
              \ if you use a fully defined Amazon Resource Name (ARN), or <code>IAM_PATTERN</code>\
              \ if you use an ARN with no <code>accountID</code>, with or without\
              \ wildcard characters. "
          title: PrincipalType
      required:
      - PortfolioId
      - PrincipalARN
      - PrincipalType
      title: AssociatePrincipalWithPortfolioInput
      type: object
    AssociateProductWithPortfolioOutput:
      properties: {}
      type: object
    AssociateProductWithPortfolioInput:
      example:
        SourcePortfolioId: ""
        AcceptLanguage: ""
        PortfolioId: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        SourcePortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the source portfolio.
          title: SourcePortfolioId
      required:
      - PortfolioId
      - ProductId
      title: AssociateProductWithPortfolioInput
      type: object
    AssociateServiceActionWithProvisioningArtifactOutput:
      properties: {}
      type: object
    AssociateServiceActionWithProvisioningArtifactInput:
      example:
        ServiceActionId: ""
        AcceptLanguage: ""
        ProductId: ""
        ProvisioningArtifactId: ""
      properties:
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. For example, <code>prod-abcdzk7xy33qa</code>."
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. For example,\
              \ <code>pa-4abcdjnxjj6ne</code>."
          title: ProvisioningArtifactId
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: ServiceActionId
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ProductId
      - ProvisioningArtifactId
      - ServiceActionId
      title: AssociateServiceActionWithProvisioningArtifactInput
      type: object
    AssociateTagOptionWithResourceOutput:
      properties: {}
      type: object
    AssociateTagOptionWithResourceInput:
      example:
        TagOptionId: ""
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The resource identifier.
          title: ResourceId
        TagOptionId:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: TagOptionId
      required:
      - ResourceId
      - TagOptionId
      title: AssociateTagOptionWithResourceInput
      type: object
    TagOptionNotMigratedException: {}
    InvalidStateException: {}
    BatchAssociateServiceActionWithProvisioningArtifactOutput:
      example:
        FailedServiceActionAssociations: ""
      properties:
        FailedServiceActionAssociations:
          allOf:
          - $ref: '#/components/schemas/FailedServiceActionAssociations'
          - description: "An object that contains a list of errors, along with information\
              \ to help you identify the self-service action."
          title: FailedServiceActionAssociations
      title: BatchAssociateServiceActionWithProvisioningArtifactOutput
      type: object
    BatchAssociateServiceActionWithProvisioningArtifactInput:
      example:
        AcceptLanguage: ""
        ServiceActionAssociations: ""
      properties:
        ServiceActionAssociations:
          allOf:
          - $ref: '#/components/schemas/ServiceActionAssociations'
          - description: "One or more associations, each consisting of the Action\
              \ ID, the Product ID, and the Provisioning Artifact ID."
          title: ServiceActionAssociations
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ServiceActionAssociations
      title: BatchAssociateServiceActionWithProvisioningArtifactInput
      type: object
    BatchDisassociateServiceActionFromProvisioningArtifactOutput:
      example:
        FailedServiceActionAssociations: ""
      properties:
        FailedServiceActionAssociations:
          allOf:
          - $ref: '#/components/schemas/FailedServiceActionAssociations'
          - description: "An object that contains a list of errors, along with information\
              \ to help you identify the self-service action."
          title: FailedServiceActionAssociations
      title: BatchDisassociateServiceActionFromProvisioningArtifactOutput
      type: object
    BatchDisassociateServiceActionFromProvisioningArtifactInput:
      example:
        AcceptLanguage: ""
        ServiceActionAssociations: ""
      properties:
        ServiceActionAssociations:
          allOf:
          - $ref: '#/components/schemas/ServiceActionAssociations'
          - description: "One or more associations, each consisting of the Action\
              \ ID, the Product ID, and the Provisioning Artifact ID."
          title: ServiceActionAssociations
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ServiceActionAssociations
      title: BatchDisassociateServiceActionFromProvisioningArtifactInput
      type: object
    CopyProductOutput:
      example:
        CopyProductToken: ""
      properties:
        CopyProductToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The token to use to track the progress of the operation.
          title: CopyProductToken
      title: CopyProductOutput
      type: object
    CopyProductInput:
      example:
        IdempotencyToken: ""
        TargetProductId: ""
        SourceProductArn: ""
        AcceptLanguage: ""
        SourceProvisioningArtifactIdentifiers: ""
        CopyOptions: ""
        TargetProductName: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        SourceProductArn:
          allOf:
          - $ref: '#/components/schemas/ProductArn'
          - description: The Amazon Resource Name (ARN) of the source product.
          title: SourceProductArn
        TargetProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the target product. By default, a new\
              \ product is created."
          title: TargetProductId
        TargetProductName:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: A name for the target product. The default is the name of
              the source product.
          title: TargetProductName
        SourceProvisioningArtifactIdentifiers:
          allOf:
          - $ref: '#/components/schemas/SourceProvisioningArtifactProperties'
          - description: "The identifiers of the provisioning artifacts (also known\
              \ as versions) of the product to copy. By default, all provisioning\
              \ artifacts are copied."
          title: SourceProvisioningArtifactIdentifiers
        CopyOptions:
          allOf:
          - $ref: '#/components/schemas/CopyOptions'
          - description: "The copy options. If the value is <code>CopyTags</code>,\
              \ the tags from the source product are copied to the target product."
          title: CopyOptions
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: " A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request. "
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - SourceProductArn
      title: CopyProductInput
      type: object
    CreateConstraintOutput:
      example:
        Status: ""
        ConstraintDetail:
          Type: ""
          Owner: ""
          Description: ""
          PortfolioId: ""
          ProductId: ""
          ConstraintId: ""
        ConstraintParameters: ""
      properties:
        ConstraintDetail:
          $ref: '#/components/schemas/CreateConstraintOutput_ConstraintDetail'
        ConstraintParameters:
          allOf:
          - $ref: '#/components/schemas/ConstraintParameters'
          - description: The constraint parameters.
          title: ConstraintParameters
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the current request.
          title: Status
      title: CreateConstraintOutput
      type: object
    CreateConstraintInput:
      example:
        IdempotencyToken: ""
        Type: ""
        Parameters: ""
        Description: ""
        AcceptLanguage: ""
        PortfolioId: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ConstraintParameters'
          - description: "<p>The constraint parameters, in JSON format. The syntax\
              \ depends on the constraint type as follows:</p> <dl> <dt>LAUNCH</dt>\
              \ <dd> <p>You are required to specify either the <code>RoleArn</code>\
              \ or the <code>LocalRoleName</code> but can't use both.</p> <p>Specify\
              \ the <code>RoleArn</code> property as follows:</p> <p> <code>{\"RoleArn\"\
              \ : \"arn:aws:iam::123456789012:role/LaunchRole\"}</code> </p> <p>Specify\
              \ the <code>LocalRoleName</code> property as follows:</p> <p> <code>{\"\
              LocalRoleName\": \"SCBasicLaunchRole\"}</code> </p> <p>If you specify\
              \ the <code>LocalRoleName</code> property, when an account uses the\
              \ launch constraint, the IAM role with that name in the account will\
              \ be used. This allows launch-role constraints to be account-agnostic\
              \ so the administrator can create fewer resources per shared account.</p>\
              \ <note> <p>The given role name must exist in the account used to create\
              \ the launch constraint and the account of the user who launches a product\
              \ with this launch constraint.</p> </note> <p>You cannot have both a\
              \ <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You\
              \ also cannot have more than one <code>LAUNCH</code> constraint on a\
              \ product and portfolio.</p> </dd> <dt>NOTIFICATION</dt> <dd> <p>Specify\
              \ the <code>NotificationArns</code> property as follows:</p> <p> <code>{\"\
              NotificationArns\" : [\"arn:aws:sns:us-east-1:123456789012:Topic\"]}</code>\
              \ </p> </dd> <dt>RESOURCE_UPDATE</dt> <dd> <p>Specify the <code>TagUpdatesOnProvisionedProduct</code>\
              \ property as follows:</p> <p> <code>{\"Version\":\"2.0\",\"Properties\"\
              :{\"TagUpdateOnProvisionedProduct\":\"String\"}}</code> </p> <p>The\
              \ <code>TagUpdatesOnProvisionedProduct</code> property accepts a string\
              \ value of <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</p> </dd>\
              \ <dt>STACKSET</dt> <dd> <p>Specify the <code>Parameters</code> property\
              \ as follows:</p> <p> <code>{\"Version\": \"String\", \"Properties\"\
              : {\"AccountList\": [ \"String\" ], \"RegionList\": [ \"String\" ],\
              \ \"AdminRole\": \"String\", \"ExecutionRole\": \"String\"}}</code>\
              \ </p> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code>\
              \ constraint.</p> <p>You also cannot have more than one <code>STACKSET</code>\
              \ constraint on a product and portfolio.</p> <p>Products with a <code>STACKSET</code>\
              \ constraint will launch an CloudFormation stack set.</p> </dd> <dt>TEMPLATE</dt>\
              \ <dd> <p>Specify the <code>Rules</code> property. For more information,\
              \ see <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html\"\
              >Template Constraint Rules</a>.</p> </dd> </dl>"
          title: Parameters
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstraintType'
          - description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code>
              </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p> <code>RESOURCE_UPDATE</code>
              </p> </li> <li> <p> <code>STACKSET</code> </p> </li> <li> <p> <code>TEMPLATE</code>
              </p> </li> </ul>
          title: Type
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstraintDescription'
          - description: The description of the constraint.
          title: Description
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - Parameters
      - PortfolioId
      - ProductId
      - Type
      title: CreateConstraintInput
      type: object
    CreatePortfolioOutput:
      example:
        PortfolioDetail:
          ProviderName: ""
          Description: ""
          CreatedTime: ""
          DisplayName: ""
          Id: ""
          ARN: ""
        Tags: ""
      properties:
        PortfolioDetail:
          $ref: '#/components/schemas/CreatePortfolioOutput_PortfolioDetail'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Information about the tags associated with the portfolio.
          title: Tags
      title: CreatePortfolioOutput
      type: object
    CreatePortfolioInput:
      example:
        ProviderName: ""
        IdempotencyToken: ""
        Description: ""
        DisplayName: ""
        AcceptLanguage: ""
        Tags: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/PortfolioDisplayName'
          - description: The name to use for display purposes.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/PortfolioDescription'
          - description: The description of the portfolio.
          title: Description
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderName'
          - description: The name of the portfolio provider.
          title: ProviderName
        Tags:
          allOf:
          - $ref: '#/components/schemas/AddTags'
          - description: One or more tags.
          title: Tags
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
      required:
      - DisplayName
      - IdempotencyToken
      - ProviderName
      title: CreatePortfolioInput
      type: object
    CreatePortfolioShareOutput:
      example:
        PortfolioShareToken: ""
      properties:
        PortfolioShareToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio shares a unique identifier that only returns
              if the portfolio is shared to an organization node.
          title: PortfolioShareToken
      title: CreatePortfolioShareOutput
      type: object
    CreatePortfolioShareInput:
      example:
        AccountId: ""
        AcceptLanguage: ""
        PortfolioId: ""
        OrganizationNode:
          Type: ""
          Value: ""
        ShareTagOptions: ""
        SharePrincipals: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "The Amazon Web Services account ID. For example, <code>123456789012</code>."
          title: AccountId
        OrganizationNode:
          $ref: '#/components/schemas/CreatePortfolioShareInput_OrganizationNode'
        ShareTagOptions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Enables or disables <code>TagOptions </code> sharing when\
              \ creating the portfolio share. If this flag is not provided, TagOptions\
              \ sharing is disabled."
          title: ShareTagOptions
        SharePrincipals:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Enables or disables <code>Principal</code> sharing when\
              \ creating the portfolio share. If this flag is not provided, principal\
              \ sharing is disabled. </p> <p>When you enable Principal Name Sharing\
              \ for a portfolio share, the share recipient account end users with\
              \ a principal that matches any of the associated IAM patterns can provision\
              \ products from the portfolio. Once shared, the share recipient can\
              \ view associations of <code>PrincipalType</code>: <code>IAM_PATTERN</code>\
              \ on their portfolio. You can create the principals in the recipient\
              \ account before or after creating the share. </p>"
          title: SharePrincipals
      required:
      - PortfolioId
      title: CreatePortfolioShareInput
      type: object
    OperationNotSupportedException: {}
    CreateProductOutput:
      example:
        ProvisioningArtifactDetail:
          Guidance: ""
          SourceRevision: ""
          Type: ""
          Active: ""
          Description: ""
          CreatedTime: ""
          Id: ""
          Name: ""
        ProductViewDetail:
          Status: ""
          ProductARN: ""
          CreatedTime: ""
          ProductViewSummary:
            Owner: ""
            Type: ""
            SupportDescription: ""
            Distributor: ""
            HasDefaultPath: ""
            SupportEmail: ""
            ProductId: ""
            SupportUrl: ""
            Id: ""
            Name: ""
            ShortDescription: ""
          SourceConnection:
            Type: ""
            ConnectionParameters:
              CodeStar:
                ArtifactPath: ""
                Repository: ""
                Branch: ""
                ConnectionArn: ""
            LastSync:
              LastSuccessfulSyncProvisioningArtifactId: ""
              LastSyncStatus: ""
              LastSuccessfulSyncTime: ""
              LastSyncTime: ""
              LastSyncStatusMessage: ""
        Tags: ""
      properties:
        ProductViewDetail:
          $ref: '#/components/schemas/CreateProductOutput_ProductViewDetail'
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/CreateProductOutput_ProvisioningArtifactDetail'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Information about the tags associated with the product.
          title: Tags
      title: CreateProductOutput
      type: object
    CreateProductInput:
      example:
        Owner: ""
        Description: ""
        SupportEmail: ""
        ProductType: ""
        Name: ""
        IdempotencyToken: ""
        SupportDescription: ""
        Distributor: ""
        AcceptLanguage: ""
        SupportUrl: ""
        Tags: ""
        SourceConnection:
          Type: ""
          ConnectionParameters:
            CodeStar:
              ArtifactPath: ""
              Repository: ""
              Branch: ""
              ConnectionArn: ""
        ProvisioningArtifactParameters:
          Type: ""
          Description: ""
          DisableTemplateValidation: ""
          Info: ""
          Name: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Name:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The name of the product.
          title: Name
        Owner:
          allOf:
          - $ref: '#/components/schemas/ProductViewOwner'
          - description: The owner of the product.
          title: Owner
        Description:
          allOf:
          - $ref: '#/components/schemas/ProductViewShortDescription'
          - description: The description of the product.
          title: Description
        Distributor:
          allOf:
          - $ref: '#/components/schemas/ProductViewOwner'
          - description: The distributor of the product.
          title: Distributor
        SupportDescription:
          allOf:
          - $ref: '#/components/schemas/SupportDescription'
          - description: The support information about the product.
          title: SupportDescription
        SupportEmail:
          allOf:
          - $ref: '#/components/schemas/SupportEmail'
          - description: The contact email for product support.
          title: SupportEmail
        SupportUrl:
          allOf:
          - $ref: '#/components/schemas/SupportUrl'
          - description: <p>The contact URL for product support.</p> <p> <code>^https?:\/\//
              </code>/ is the pattern used to validate SupportUrl.</p>
          title: SupportUrl
        ProductType:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          - description: The type of product.
          title: ProductType
        Tags:
          allOf:
          - $ref: '#/components/schemas/AddTags'
          - description: One or more tags.
          title: Tags
        ProvisioningArtifactParameters:
          $ref: '#/components/schemas/CreateProductInput_ProvisioningArtifactParameters'
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
        SourceConnection:
          $ref: '#/components/schemas/CreateProductInput_SourceConnection'
      required:
      - IdempotencyToken
      - Name
      - Owner
      - ProductType
      title: CreateProductInput
      type: object
    CreateProvisionedProductPlanOutput:
      example:
        ProvisionProductId: ""
        PlanId: ""
        PlanName: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
      properties:
        PlanName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanName'
          - description: The name of the plan.
          title: PlanName
        PlanId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The plan identifier.
          title: PlanId
        ProvisionProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProvisionProductId
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: The user-friendly name of the provisioned product.
          title: ProvisionedProductName
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
      title: CreateProvisionedProductPlanOutput
      type: object
    CreateProvisionedProductPlanInput:
      example:
        PathId: ""
        IdempotencyToken: ""
        ProvisioningParameters: ""
        PlanType: ""
        NotificationArns: ""
        AcceptLanguage: ""
        ProductId: ""
        PlanName: ""
        Tags: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PlanName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanName'
          - description: The name of the plan.
          title: PlanName
        PlanType:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanType'
          - description: The plan type.
          title: PlanType
        NotificationArns:
          allOf:
          - $ref: '#/components/schemas/NotificationArns'
          - description: Passed to CloudFormation. The SNS topic ARNs to which to
              publish stack-related events.
          title: NotificationArns
        PathId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The path identifier of the product. This value is optional\
              \ if the product has a default path, and required if the product has\
              \ more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>."
          title: PathId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: A user-friendly name for the provisioned product. This value
              must be unique for the Amazon Web Services account and cannot be updated
              after the product is provisioned.
          title: ProvisionedProductName
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        ProvisioningParameters:
          allOf:
          - $ref: '#/components/schemas/UpdateProvisioningParameters'
          - description: Parameters specified by the administrator that are required
              for provisioning the product.
          title: ProvisioningParameters
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>One or more tags.</p> <p>If the plan is for an existing\
              \ provisioned product, the product must have a <code>RESOURCE_UPDATE</code>\
              \ constraint with <code>TagUpdatesOnProvisionedProduct</code> set to\
              \ <code>ALLOWED</code> to allow tag updates.</p>"
          title: Tags
      required:
      - IdempotencyToken
      - PlanName
      - PlanType
      - ProductId
      - ProvisionedProductName
      - ProvisioningArtifactId
      title: CreateProvisionedProductPlanInput
      type: object
    CreateProvisioningArtifactOutput:
      example:
        Status: ""
        ProvisioningArtifactDetail:
          Guidance: ""
          SourceRevision: ""
          Type: ""
          Active: ""
          Description: ""
          CreatedTime: ""
          Id: ""
          Name: ""
        Info: ""
      properties:
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/CreateProvisioningArtifactOutput_ProvisioningArtifactDetail'
        Info:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactInfo'
          - description: "<p>Specify the template source with one of the following\
              \ options, but not both. Keys accepted: [ <code>LoadTemplateFromURL</code>,\
              \ <code>ImportFromPhysicalId</code> ].</p> <p>Use the URL of the CloudFormation\
              \ template in Amazon S3 or GitHub in JSON format. </p> <p> <code>LoadTemplateFromURL</code>\
              \ </p> <p>Use the URL of the CloudFormation template in Amazon S3 or\
              \ GitHub in JSON format.</p> <p> <code>ImportFromPhysicalId</code> </p>\
              \ <p>Use the physical id of the resource that contains the template;\
              \ currently supports CloudFormation stack ARN.</p>"
          title: Info
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the current request.
          title: Status
      title: CreateProvisioningArtifactOutput
      type: object
    CreateProvisioningArtifactInput:
      example:
        IdempotencyToken: ""
        Parameters:
          Type: ""
          Description: ""
          DisableTemplateValidation: ""
          Info: ""
          Name: ""
        AcceptLanguage: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        Parameters:
          $ref: '#/components/schemas/CreateProvisioningArtifactInput_Parameters'
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - Parameters
      - ProductId
      title: CreateProvisioningArtifactInput
      type: object
    CreateServiceActionOutput:
      example:
        ServiceActionDetail:
          Definition: ""
          ServiceActionSummary:
            Description: ""
            DefinitionType: ""
            Id: ""
            Name: ""
      properties:
        ServiceActionDetail:
          $ref: '#/components/schemas/CreateServiceActionOutput_ServiceActionDetail'
      title: CreateServiceActionOutput
      type: object
    CreateServiceActionInput:
      example:
        IdempotencyToken: ""
        Description: ""
        Definition: ""
        AcceptLanguage: ""
        DefinitionType: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceActionName'
          - description: The self-service action name.
          title: Name
        DefinitionType:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDefinitionType'
          - description: "The service action definition type. For example, <code>SSM_AUTOMATION</code>."
          title: DefinitionType
        Definition:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDefinitionMap'
          - description: "<p>The self-service action definition. Can be one of the\
              \ following:</p> <dl> <dt>Name</dt> <dd> <p>The name of the Amazon Web\
              \ Services Systems Manager document (SSM document). For example, <code>AWS-RestartEC2Instance</code>.</p>\
              \ <p>If you are using a shared SSM document, you must provide the ARN\
              \ instead of the name.</p> </dd> <dt>Version</dt> <dd> <p>The Amazon\
              \ Web Services Systems Manager automation document version. For example,\
              \ <code>\"Version\": \"1\"</code> </p> </dd> <dt>AssumeRole</dt> <dd>\
              \ <p>The Amazon Resource Name (ARN) of the role that performs the self-service\
              \ actions on your behalf. For example, <code>\"AssumeRole\": \"arn:aws:iam::12345678910:role/ActionRole\"\
              </code>.</p> <p>To reuse the provisioned product launch role, set to\
              \ <code>\"AssumeRole\": \"LAUNCH_ROLE\"</code>.</p> </dd> <dt>Parameters</dt>\
              \ <dd> <p>The list of parameters in JSON format.</p> <p>For example:\
              \ <code>[{\\\"Name\\\":\\\"InstanceId\\\",\\\"Type\\\":\\\"TARGET\\\"\
              }]</code> or <code>[{\\\"Name\\\":\\\"InstanceId\\\",\\\"Type\\\":\\\
              \"TEXT_VALUE\\\"}]</code>.</p> </dd> </dl>"
          title: Definition
        Description:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDescription'
          - description: The self-service action description.
          title: Description
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
      required:
      - Definition
      - DefinitionType
      - IdempotencyToken
      - Name
      title: CreateServiceActionInput
      type: object
    CreateTagOptionOutput:
      example:
        TagOptionDetail:
          Active: ""
          Owner: ""
          Value: ""
          Id: ""
          Key: ""
      properties:
        TagOptionDetail:
          $ref: '#/components/schemas/CreateTagOptionOutput_TagOptionDetail'
      title: CreateTagOptionOutput
      type: object
    CreateTagOptionInput:
      example:
        Value: ""
        Key: ""
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagOptionKey'
          - description: The TagOption key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagOptionValue'
          - description: The TagOption value.
          title: Value
      required:
      - Key
      - Value
      title: CreateTagOptionInput
      type: object
    DeleteConstraintOutput:
      properties: {}
      type: object
    DeleteConstraintInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the constraint.
          title: Id
      required:
      - Id
      title: DeleteConstraintInput
      type: object
    DeletePortfolioOutput:
      properties: {}
      type: object
    DeletePortfolioInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: Id
      required:
      - Id
      title: DeletePortfolioInput
      type: object
    ResourceInUseException: {}
    DeletePortfolioShareOutput:
      example:
        PortfolioShareToken: ""
      properties:
        PortfolioShareToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio share unique identifier. This will only be
              returned if delete is made to an organization node.
          title: PortfolioShareToken
      title: DeletePortfolioShareOutput
      type: object
    DeletePortfolioShareInput:
      example:
        AccountId: ""
        AcceptLanguage: ""
        PortfolioId: ""
        OrganizationNode:
          Type: ""
          Value: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID.
          title: AccountId
        OrganizationNode:
          $ref: '#/components/schemas/DeletePortfolioShareInput_OrganizationNode'
      required:
      - PortfolioId
      title: DeletePortfolioShareInput
      type: object
    DeleteProductOutput:
      properties: {}
      type: object
    DeleteProductInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: Id
      required:
      - Id
      title: DeleteProductInput
      type: object
    DeleteProvisionedProductPlanOutput:
      properties: {}
      type: object
    DeleteProvisionedProductPlanInput:
      example:
        IgnoreErrors: ""
        PlanId: ""
        AcceptLanguage: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PlanId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The plan identifier.
          title: PlanId
        IgnoreErrors:
          allOf:
          - $ref: '#/components/schemas/IgnoreErrors'
          - description: "If set to true, Service Catalog stops managing the specified\
              \ provisioned product even if it cannot delete the underlying resources."
          title: IgnoreErrors
      required:
      - PlanId
      title: DeleteProvisionedProductPlanInput
      type: object
    DeleteProvisioningArtifactOutput:
      properties: {}
      type: object
    DeleteProvisioningArtifactInput:
      example:
        AcceptLanguage: ""
        ProductId: ""
        ProvisioningArtifactId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
      required:
      - ProductId
      - ProvisioningArtifactId
      title: DeleteProvisioningArtifactInput
      type: object
    DeleteServiceActionOutput:
      properties: {}
      type: object
    DeleteServiceActionInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: Id
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - Id
      title: DeleteServiceActionInput
      type: object
    DeleteTagOptionOutput:
      properties: {}
      type: object
    DeleteTagOptionInput:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: Id
      required:
      - Id
      title: DeleteTagOptionInput
      type: object
    DescribeConstraintOutput:
      example:
        Status: ""
        ConstraintDetail:
          Type: ""
          Owner: ""
          Description: ""
          PortfolioId: ""
          ProductId: ""
          ConstraintId: ""
        ConstraintParameters: ""
      properties:
        ConstraintDetail:
          $ref: '#/components/schemas/CreateConstraintOutput_ConstraintDetail'
        ConstraintParameters:
          allOf:
          - $ref: '#/components/schemas/ConstraintParameters'
          - description: The constraint parameters.
          title: ConstraintParameters
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the current request.
          title: Status
      title: DescribeConstraintOutput
      type: object
    DescribeConstraintInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the constraint.
          title: Id
      required:
      - Id
      title: DescribeConstraintInput
      type: object
    DescribeCopyProductStatusOutput:
      example:
        CopyProductStatus: ""
        TargetProductId: ""
        StatusDetail: ""
      properties:
        CopyProductStatus:
          allOf:
          - $ref: '#/components/schemas/CopyProductStatus'
          - description: The status of the copy product operation.
          title: CopyProductStatus
        TargetProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the copied product.
          title: TargetProductId
        StatusDetail:
          allOf:
          - $ref: '#/components/schemas/StatusDetail'
          - description: The status message.
          title: StatusDetail
      title: DescribeCopyProductStatusOutput
      type: object
    DescribeCopyProductStatusInput:
      example:
        CopyProductToken: ""
        AcceptLanguage: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        CopyProductToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The token for the copy product operation. This token is returned
              by <a>CopyProduct</a>.
          title: CopyProductToken
      required:
      - CopyProductToken
      title: DescribeCopyProductStatusInput
      type: object
    DescribePortfolioOutput:
      example:
        TagOptions: ""
        Budgets: ""
        PortfolioDetail:
          ProviderName: ""
          Description: ""
          CreatedTime: ""
          DisplayName: ""
          Id: ""
          ARN: ""
        Tags: ""
      properties:
        PortfolioDetail:
          $ref: '#/components/schemas/CreatePortfolioOutput_PortfolioDetail'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Information about the tags associated with the portfolio.
          title: Tags
        TagOptions:
          allOf:
          - $ref: '#/components/schemas/TagOptionDetails'
          - description: Information about the TagOptions associated with the portfolio.
          title: TagOptions
        Budgets:
          allOf:
          - $ref: '#/components/schemas/Budgets'
          - description: Information about the associated budgets.
          title: Budgets
      title: DescribePortfolioOutput
      type: object
    DescribePortfolioInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: Id
      required:
      - Id
      title: DescribePortfolioInput
      type: object
    DescribePortfolioShareStatusOutput:
      example:
        Status: ""
        PortfolioShareToken: ""
        ShareDetails:
          SuccessfulShares: ""
          ShareErrors: ""
        PortfolioId: ""
        OrganizationNodeValue: ""
      properties:
        PortfolioShareToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The token for the portfolio share operation. For example,\
              \ <code>share-6v24abcdefghi</code>."
          title: PortfolioShareToken
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        OrganizationNodeValue:
          allOf:
          - $ref: '#/components/schemas/OrganizationNodeValue'
          - description: "Organization node identifier. It can be either account id,\
              \ organizational unit id or organization id."
          title: OrganizationNodeValue
        Status:
          allOf:
          - $ref: '#/components/schemas/ShareStatus'
          - description: Status of the portfolio share operation.
          title: Status
        ShareDetails:
          $ref: '#/components/schemas/DescribePortfolioShareStatusOutput_ShareDetails'
      title: DescribePortfolioShareStatusOutput
      type: object
    DescribePortfolioShareStatusInput:
      example:
        PortfolioShareToken: ""
      properties:
        PortfolioShareToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The token for the portfolio share operation. This token is
              returned either by CreatePortfolioShare or by DeletePortfolioShare.
          title: PortfolioShareToken
      required:
      - PortfolioShareToken
      title: DescribePortfolioShareStatusInput
      type: object
    DescribePortfolioSharesOutput:
      example:
        PortfolioShareDetails: ""
        NextPageToken: ""
      properties:
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
        PortfolioShareDetails:
          allOf:
          - $ref: '#/components/schemas/PortfolioShareDetails'
          - description: Summaries about each of the portfolio shares.
          title: PortfolioShareDetails
      title: DescribePortfolioSharesOutput
      type: object
    DescribePortfolioSharesInput:
      example:
        Type: ""
        PageSize: ""
        PortfolioId: ""
        PageToken: ""
      properties:
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The unique identifier of the portfolio for which shares will
              be retrieved.
          title: PortfolioId
        Type:
          allOf:
          - $ref: '#/components/schemas/DescribePortfolioShareType'
          - description: "<p>The type of portfolio share to summarize. This field\
              \ acts as a filter on the type of portfolio share, which can be one\
              \ of the following:</p> <p>1. <code>ACCOUNT</code> - Represents an external\
              \ account to account share.</p> <p>2. <code>ORGANIZATION</code> - Represents\
              \ a share to an organization. This share is available to every account\
              \ in the organization.</p> <p>3. <code>ORGANIZATIONAL_UNIT</code> -\
              \ Represents a share to an organizational unit.</p> <p>4. <code>ORGANIZATION_MEMBER_ACCOUNT</code>\
              \ - Represents a share to an account in the organization.</p>"
          title: Type
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeMax100'
          - description: The maximum number of items to return with this call.
          title: PageSize
      required:
      - PortfolioId
      - Type
      title: DescribePortfolioSharesInput
      type: object
    DescribeProductOutput:
      example:
        ProvisioningArtifacts: ""
        ProductViewSummary:
          Owner: ""
          Type: ""
          SupportDescription: ""
          Distributor: ""
          HasDefaultPath: ""
          SupportEmail: ""
          ProductId: ""
          SupportUrl: ""
          Id: ""
          Name: ""
          ShortDescription: ""
        LaunchPaths: ""
        Budgets: ""
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/DescribeProductOutput_ProductViewSummary'
        ProvisioningArtifacts:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifacts'
          - description: Information about the provisioning artifacts for the specified
              product.
          title: ProvisioningArtifacts
        Budgets:
          allOf:
          - $ref: '#/components/schemas/Budgets'
          - description: Information about the associated budgets.
          title: Budgets
        LaunchPaths:
          allOf:
          - $ref: '#/components/schemas/LaunchPaths'
          - description: Information about the associated launch paths.
          title: LaunchPaths
      title: DescribeProductOutput
      type: object
    DescribeProductInput:
      example:
        AcceptLanguage: ""
        Id: ""
        Name: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The product name.
          title: Name
      title: DescribeProductInput
      type: object
    DescribeProductAsAdminOutput:
      example:
        ProvisioningArtifactSummaries: ""
        ProductViewDetail:
          Status: ""
          ProductARN: ""
          CreatedTime: ""
          ProductViewSummary:
            Owner: ""
            Type: ""
            SupportDescription: ""
            Distributor: ""
            HasDefaultPath: ""
            SupportEmail: ""
            ProductId: ""
            SupportUrl: ""
            Id: ""
            Name: ""
            ShortDescription: ""
          SourceConnection:
            Type: ""
            ConnectionParameters:
              CodeStar:
                ArtifactPath: ""
                Repository: ""
                Branch: ""
                ConnectionArn: ""
            LastSync:
              LastSuccessfulSyncProvisioningArtifactId: ""
              LastSyncStatus: ""
              LastSuccessfulSyncTime: ""
              LastSyncTime: ""
              LastSyncStatusMessage: ""
        TagOptions: ""
        Budgets: ""
        Tags: ""
      properties:
        ProductViewDetail:
          $ref: '#/components/schemas/CreateProductOutput_ProductViewDetail'
        ProvisioningArtifactSummaries:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactSummaries'
          - description: Information about the provisioning artifacts (also known
              as versions) for the specified product.
          title: ProvisioningArtifactSummaries
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Information about the tags associated with the product.
          title: Tags
        TagOptions:
          allOf:
          - $ref: '#/components/schemas/TagOptionDetails'
          - description: Information about the TagOptions associated with the product.
          title: TagOptions
        Budgets:
          allOf:
          - $ref: '#/components/schemas/Budgets'
          - description: Information about the associated budgets.
          title: Budgets
      title: DescribeProductAsAdminOutput
      type: object
    DescribeProductAsAdminInput:
      example:
        SourcePortfolioId: ""
        AcceptLanguage: ""
        Id: ""
        Name: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The product name.
          title: Name
        SourcePortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "<p>The unique identifier of the shared portfolio that the\
              \ specified product is associated with.</p> <p>You can provide this\
              \ parameter to retrieve the shared TagOptions associated with the product.\
              \ If this parameter is provided and if TagOptions sharing is enabled\
              \ in the portfolio share, the API returns both local and shared TagOptions\
              \ associated with the product. Otherwise only local TagOptions will\
              \ be returned. </p>"
          title: SourcePortfolioId
      title: DescribeProductAsAdminInput
      type: object
    DescribeProductViewOutput:
      example:
        ProvisioningArtifacts: ""
        ProductViewSummary:
          Owner: ""
          Type: ""
          SupportDescription: ""
          Distributor: ""
          HasDefaultPath: ""
          SupportEmail: ""
          ProductId: ""
          SupportUrl: ""
          Id: ""
          Name: ""
          ShortDescription: ""
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/DescribeProductViewOutput_ProductViewSummary'
        ProvisioningArtifacts:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifacts'
          - description: Information about the provisioning artifacts for the product.
          title: ProvisioningArtifacts
      title: DescribeProductViewOutput
      type: object
    DescribeProductViewInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product view identifier.
          title: Id
      required:
      - Id
      title: DescribeProductViewInput
      type: object
    DescribeProvisionedProductOutput:
      example:
        ProvisionedProductDetail:
          Status: ""
          LastSuccessfulProvisioningRecordId: ""
          CreatedTime: ""
          ProductId: ""
          Name: ""
          StatusMessage: ""
          LastProvisioningRecordId: ""
          LaunchRoleArn: ""
          IdempotencyToken: ""
          Type: ""
          LastRecordId: ""
          Id: ""
          Arn: ""
          ProvisioningArtifactId: ""
        CloudWatchDashboards: ""
      properties:
        ProvisionedProductDetail:
          $ref: '#/components/schemas/DescribeProvisionedProductOutput_ProvisionedProductDetail'
        CloudWatchDashboards:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDashboards'
          - description: Any CloudWatch dashboards that were created when provisioning
              the product.
          title: CloudWatchDashboards
      title: DescribeProvisionedProductOutput
      type: object
    DescribeProvisionedProductInput:
      description: "DescribeProvisionedProductAPI input structure. AcceptLanguage\
        \ - [Optional] The language code for localization. Id - [Optional] The provisioned\
        \ product identifier. Name - [Optional] Another provisioned product identifier.\
        \ Customers must provide either Id or Name."
      example:
        AcceptLanguage: ""
        Id: ""
        Name: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "<p>The provisioned product identifier. You must provide\
              \ the name or ID, but not both.</p> <p>If you do not provide a name\
              \ or ID, or you provide both name and ID, an <code>InvalidParametersException</code>\
              \ will occur.</p>"
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: "<p>The name of the provisioned product. You must provide\
              \ the name or ID, but not both.</p> <p>If you do not provide a name\
              \ or ID, or you provide both name and ID, an <code>InvalidParametersException</code>\
              \ will occur.</p>"
          title: Name
      title: DescribeProvisionedProductInput
      type: object
    DescribeProvisionedProductPlanOutput:
      example:
        ResourceChanges: ""
        NextPageToken: ""
        ProvisionedProductPlanDetails:
          Status: ""
          CreatedTime: ""
          PlanId: ""
          NotificationArns: ""
          ProductId: ""
          PlanName: ""
          StatusMessage: ""
          PathId: ""
          ProvisioningParameters: ""
          ProvisionProductId: ""
          PlanType: ""
          ProvisionProductName: ""
          UpdatedTime: ""
          Tags: ""
          ProvisioningArtifactId: ""
      properties:
        ProvisionedProductPlanDetails:
          $ref: '#/components/schemas/DescribeProvisionedProductPlanOutput_ProvisionedProductPlanDetails'
        ResourceChanges:
          allOf:
          - $ref: '#/components/schemas/ResourceChanges'
          - description: Information about the resource changes that will occur when
              the plan is executed.
          title: ResourceChanges
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: DescribeProvisionedProductPlanOutput
      type: object
    DescribeProvisionedProductPlanInput:
      example:
        PageSize: ""
        PlanId: ""
        AcceptLanguage: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PlanId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The plan identifier.
          title: PlanId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      required:
      - PlanId
      title: DescribeProvisionedProductPlanInput
      type: object
    DescribeProvisioningArtifactOutput:
      example:
        Status: ""
        ProvisioningArtifactDetail:
          Guidance: ""
          SourceRevision: ""
          Type: ""
          Active: ""
          Description: ""
          CreatedTime: ""
          Id: ""
          Name: ""
        Info: ""
        ProvisioningArtifactParameters: ""
      properties:
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/CreateProvisioningArtifactOutput_ProvisioningArtifactDetail'
        Info:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactInfo'
          - description: The URL of the CloudFormation template in Amazon S3 or GitHub
              in JSON format.
          title: Info
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the current request.
          title: Status
        ProvisioningArtifactParameters:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactParameters'
          - description: 'Information about the parameters used to provision the product. '
          title: ProvisioningArtifactParameters
      title: DescribeProvisioningArtifactOutput
      type: object
    DescribeProvisioningArtifactInput:
      example:
        ProductName: ""
        Verbose: ""
        ProvisioningArtifactName: ""
        AcceptLanguage: ""
        ProductId: ""
        IncludeProvisioningArtifactParameters: ""
        ProvisioningArtifactId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProvisioningArtifactName:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The provisioning artifact name.
          title: ProvisioningArtifactName
        ProductName:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The product name.
          title: ProductName
        Verbose:
          allOf:
          - $ref: '#/components/schemas/Verbose'
          - description: Indicates whether a verbose level of detail is enabled.
          title: Verbose
        IncludeProvisioningArtifactParameters:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Indicates if the API call response does or does not include
              additional details about the provisioning parameters. '
          title: IncludeProvisioningArtifactParameters
      title: DescribeProvisioningArtifactInput
      type: object
    DescribeProvisioningParametersOutput:
      example:
        ProvisioningArtifactPreferences:
          StackSetAccounts: ""
          StackSetRegions: ""
        ProvisioningArtifactOutputs: ""
        UsageInstructions: ""
        ProvisioningArtifactOutputKeys: ""
        TagOptions: ""
        ProvisioningArtifactParameters: ""
        ConstraintSummaries: ""
      properties:
        ProvisioningArtifactParameters:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactParameters'
          - description: Information about the parameters used to provision the product.
          title: ProvisioningArtifactParameters
        ConstraintSummaries:
          allOf:
          - $ref: '#/components/schemas/ConstraintSummaries'
          - description: Information about the constraints used to provision the product.
          title: ConstraintSummaries
        UsageInstructions:
          allOf:
          - $ref: '#/components/schemas/UsageInstructions'
          - description: "Any additional metadata specifically related to the provisioning\
              \ of the product. For example, see the <code>Version</code> field of\
              \ the CloudFormation template."
          title: UsageInstructions
        TagOptions:
          allOf:
          - $ref: '#/components/schemas/TagOptionSummaries'
          - description: Information about the TagOptions associated with the resource.
          title: TagOptions
        ProvisioningArtifactPreferences:
          $ref: '#/components/schemas/DescribeProvisioningParametersOutput_ProvisioningArtifactPreferences'
        ProvisioningArtifactOutputs:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactOutputs'
          - deprecated: true
            description: The output of the provisioning artifact.This property is
              deprecated and returns the Id and Description of the Provisioning Artifact.
              Use ProvisioningArtifactOutputKeys instead to get the Keys and Descriptions
              of the outputs.
          title: ProvisioningArtifactOutputs
        ProvisioningArtifactOutputKeys:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactOutputs'
          - description: A list of the keys and descriptions of the outputs. These
              outputs can be referenced from a provisioned product launched from this
              provisioning artifact.
          title: ProvisioningArtifactOutputKeys
      title: DescribeProvisioningParametersOutput
      type: object
    DescribeProvisioningParametersInput:
      example:
        PathId: ""
        ProductName: ""
        ProvisioningArtifactName: ""
        AcceptLanguage: ""
        ProductId: ""
        PathName: ""
        ProvisioningArtifactId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. You must provide the product name\
              \ or ID, but not both."
          title: ProductId
        ProductName:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: "The name of the product. You must provide the name or ID,\
              \ but not both."
          title: ProductName
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. You must provide\
              \ the name or ID, but not both."
          title: ProvisioningArtifactId
        ProvisioningArtifactName:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: "The name of the provisioning artifact. You must provide\
              \ the name or ID, but not both."
          title: ProvisioningArtifactName
        PathId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The path identifier of the product. This value is optional\
              \ if the product has a default path, and required if the product has\
              \ more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.\
              \ You must provide the name or ID, but not both."
          title: PathId
        PathName:
          allOf:
          - $ref: '#/components/schemas/PortfolioDisplayName'
          - description: "The name of the path. You must provide the name or ID, but\
              \ not both."
          title: PathName
      title: DescribeProvisioningParametersInput
      type: object
    DescribeRecordOutput:
      example:
        RecordOutputs: ""
        NextPageToken: ""
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/DescribeRecordOutput_RecordDetail'
        RecordOutputs:
          allOf:
          - $ref: '#/components/schemas/RecordOutputs'
          - description: "Information about the product created as the result of a\
              \ request. For example, the output for a CloudFormation-backed product\
              \ that creates an S3 bucket would include the S3 bucket URL."
          title: RecordOutputs
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: DescribeRecordOutput
      type: object
    DescribeRecordInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The record identifier of the provisioned product. This identifier
              is returned by the request operation.
          title: Id
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
      required:
      - Id
      title: DescribeRecordInput
      type: object
    DescribeServiceActionOutput:
      example:
        ServiceActionDetail:
          Definition: ""
          ServiceActionSummary:
            Description: ""
            DefinitionType: ""
            Id: ""
            Name: ""
      properties:
        ServiceActionDetail:
          $ref: '#/components/schemas/DescribeServiceActionOutput_ServiceActionDetail'
      title: DescribeServiceActionOutput
      type: object
    DescribeServiceActionInput:
      example:
        AcceptLanguage: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The self-service action identifier.
          title: Id
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - Id
      title: DescribeServiceActionInput
      type: object
    DescribeServiceActionExecutionParametersOutput:
      example:
        ServiceActionParameters: ""
      properties:
        ServiceActionParameters:
          allOf:
          - $ref: '#/components/schemas/ExecutionParameters'
          - description: The parameters of the self-service action.
          title: ServiceActionParameters
      title: DescribeServiceActionExecutionParametersOutput
      type: object
    DescribeServiceActionExecutionParametersInput:
      example:
        ServiceActionId: ""
        AcceptLanguage: ""
        ProvisionedProductId: ""
      properties:
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product.
          title: ProvisionedProductId
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The self-service action identifier.
          title: ServiceActionId
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ProvisionedProductId
      - ServiceActionId
      title: DescribeServiceActionExecutionParametersInput
      type: object
    DescribeTagOptionOutput:
      example:
        TagOptionDetail:
          Active: ""
          Owner: ""
          Value: ""
          Id: ""
          Key: ""
      properties:
        TagOptionDetail:
          $ref: '#/components/schemas/CreateTagOptionOutput_TagOptionDetail'
      title: DescribeTagOptionOutput
      type: object
    DescribeTagOptionInput:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: Id
      required:
      - Id
      title: DescribeTagOptionInput
      type: object
    DisableAWSOrganizationsAccessOutput:
      properties: {}
      type: object
    DisableAWSOrganizationsAccessInput:
      properties: {}
      title: DisableAWSOrganizationsAccessInput
      type: object
    DisassociateBudgetFromResourceOutput:
      properties: {}
      type: object
    DisassociateBudgetFromResourceInput:
      example:
        ResourceId: ""
        BudgetName: ""
      properties:
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget you want to disassociate.
          title: BudgetName
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The resource identifier you want to disassociate from. Either
              a portfolio-id or a product-id.
          title: ResourceId
      required:
      - BudgetName
      - ResourceId
      title: DisassociateBudgetFromResourceInput
      type: object
    DisassociatePrincipalFromPortfolioOutput:
      properties: {}
      type: object
    DisassociatePrincipalFromPortfolioInput:
      example:
        PrincipalARN: ""
        AcceptLanguage: ""
        PortfolioId: ""
        PrincipalType: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        PrincipalARN:
          allOf:
          - $ref: '#/components/schemas/PrincipalARN'
          - description: "The ARN of the principal (user, role, or group). This field\
              \ allows an ARN with no <code>accountID</code> with or without wildcard\
              \ characters if <code>PrincipalType</code> is <code>IAM_PATTERN</code>."
          title: PrincipalARN
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: "The supported value is <code>IAM</code> if you use a fully\
              \ defined ARN, or <code>IAM_PATTERN</code> if you specify an <code>IAM</code>\
              \ ARN with no AccountId, with or without wildcard characters. "
          title: PrincipalType
      required:
      - PortfolioId
      - PrincipalARN
      title: DisassociatePrincipalFromPortfolioInput
      type: object
    DisassociateProductFromPortfolioOutput:
      properties: {}
      type: object
    DisassociateProductFromPortfolioInput:
      example:
        AcceptLanguage: ""
        PortfolioId: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
      required:
      - PortfolioId
      - ProductId
      title: DisassociateProductFromPortfolioInput
      type: object
    DisassociateServiceActionFromProvisioningArtifactOutput:
      properties: {}
      type: object
    DisassociateServiceActionFromProvisioningArtifactInput:
      example:
        ServiceActionId: ""
        AcceptLanguage: ""
        ProductId: ""
        ProvisioningArtifactId: ""
      properties:
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. For example, <code>prod-abcdzk7xy33qa</code>."
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. For example,\
              \ <code>pa-4abcdjnxjj6ne</code>."
          title: ProvisioningArtifactId
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: ServiceActionId
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ProductId
      - ProvisioningArtifactId
      - ServiceActionId
      title: DisassociateServiceActionFromProvisioningArtifactInput
      type: object
    DisassociateTagOptionFromResourceOutput:
      properties: {}
      type: object
    DisassociateTagOptionFromResourceInput:
      example:
        TagOptionId: ""
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The resource identifier.
          title: ResourceId
        TagOptionId:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: TagOptionId
      required:
      - ResourceId
      - TagOptionId
      title: DisassociateTagOptionFromResourceInput
      type: object
    EnableAWSOrganizationsAccessOutput:
      properties: {}
      type: object
    EnableAWSOrganizationsAccessInput:
      properties: {}
      title: EnableAWSOrganizationsAccessInput
      type: object
    ExecuteProvisionedProductPlanOutput:
      example:
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/ExecuteProvisionedProductPlanOutput_RecordDetail'
      title: ExecuteProvisionedProductPlanOutput
      type: object
    ExecuteProvisionedProductPlanInput:
      example:
        IdempotencyToken: ""
        PlanId: ""
        AcceptLanguage: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PlanId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The plan identifier.
          title: PlanId
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - PlanId
      title: ExecuteProvisionedProductPlanInput
      type: object
    ExecuteProvisionedProductServiceActionOutput:
      example:
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/ExecuteProvisionedProductServiceActionOutput_RecordDetail'
      title: ExecuteProvisionedProductServiceActionOutput
      type: object
    ExecuteProvisionedProductServiceActionInput:
      example:
        ServiceActionId: ""
        Parameters: ""
        AcceptLanguage: ""
        ProvisionedProductId: ""
        ExecuteToken: ""
      properties:
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product.
          title: ProvisionedProductId
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: ServiceActionId
        ExecuteToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: An idempotency token that uniquely identifies the execute
              request.
          title: ExecuteToken
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ExecutionParameterMap'
          - description: "A map of all self-service action parameters and their values.\
              \ If a provided parameter is of a special type, such as <code>TARGET</code>,\
              \ the provided value will override the default value generated by Service\
              \ Catalog. If the parameters field is not provided, no additional parameters\
              \ are passed and default values will be used for any special parameters\
              \ such as <code>TARGET</code>."
          title: Parameters
      required:
      - ExecuteToken
      - ProvisionedProductId
      - ServiceActionId
      title: ExecuteProvisionedProductServiceActionInput
      type: object
    GetAWSOrganizationsAccessStatusOutput:
      example:
        AccessStatus: ""
      properties:
        AccessStatus:
          allOf:
          - $ref: '#/components/schemas/AccessStatus'
          - description: The status of the portfolio share feature.
          title: AccessStatus
      title: GetAWSOrganizationsAccessStatusOutput
      type: object
    GetAWSOrganizationsAccessStatusInput:
      properties: {}
      title: GetAWSOrganizationsAccessStatusInput
      type: object
    GetProvisionedProductOutputsOutput:
      example:
        NextPageToken: ""
        Outputs: ""
      properties:
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RecordOutputs'
          - description: "Information about the product created as the result of a\
              \ request. For example, the output for a CloudFormation-backed product\
              \ that creates an S3 bucket would include the S3 bucket URL. "
          title: Outputs
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: GetProvisionedProductOutputsOutput
      type: object
    GetProvisionedProductOutputsInput:
      example:
        PageSize: ""
        OutputKeys: ""
        AcceptLanguage: ""
        PageToken: ""
        ProvisionedProductId: ""
        ProvisionedProductName: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product that you want the
              outputs from.
          title: ProvisionedProductId
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: The name of the provisioned product that you want the outputs
              from.
          title: ProvisionedProductName
        OutputKeys:
          allOf:
          - $ref: '#/components/schemas/OutputKeys'
          - description: "The list of keys that the API should return with their values.\
              \ If none are provided, the API will return all outputs of the provisioned\
              \ product."
          title: OutputKeys
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: GetProvisionedProductOutputsInput
      type: object
    ImportAsProvisionedProductOutput:
      example:
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/RecordDetail'
      title: ImportAsProvisionedProductOutput
      type: object
    ImportAsProvisionedProductInput:
      example:
        IdempotencyToken: ""
        AcceptLanguage: ""
        ProductId: ""
        PhysicalId: ""
        ProvisioningArtifactId: ""
        ProvisionedProductName: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: 'The user-friendly name of the provisioned product. The value
              must be unique for the Amazon Web Services account. The name cannot
              be updated after the product is provisioned. '
          title: ProvisionedProductName
        PhysicalId:
          allOf:
          - $ref: '#/components/schemas/PhysicalId'
          - description: The unique identifier of the resource to be imported. It
              only currently supports CloudFormation stack IDs.
          title: PhysicalId
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - PhysicalId
      - ProductId
      - ProvisionedProductName
      - ProvisioningArtifactId
      title: ImportAsProvisionedProductInput
      type: object
    ListAcceptedPortfolioSharesOutput:
      example:
        NextPageToken: ""
        PortfolioDetails: ""
      properties:
        PortfolioDetails:
          allOf:
          - $ref: '#/components/schemas/PortfolioDetails'
          - description: Information about the portfolios.
          title: PortfolioDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListAcceptedPortfolioSharesOutput
      type: object
    ListAcceptedPortfolioSharesInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
        PortfolioShareType: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeMax100'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PortfolioShareType:
          allOf:
          - $ref: '#/components/schemas/PortfolioShareType'
          - description: <p>The type of shared portfolios to list. The default is
              to list imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code>
              - List portfolios accepted and shared via organizational sharing by
              the management account or delegated administrator of your organization.</p>
              </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Deprecated type.</p>
              </li> <li> <p> <code>IMPORTED</code> - List imported portfolios that
              have been accepted and shared through account-to-account sharing.</p>
              </li> </ul>
          title: PortfolioShareType
      title: ListAcceptedPortfolioSharesInput
      type: object
    ListBudgetsForResourceOutput:
      example:
        NextPageToken: ""
        Budgets: ""
      properties:
        Budgets:
          allOf:
          - $ref: '#/components/schemas/Budgets'
          - description: Information about the associated budgets.
          title: Budgets
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListBudgetsForResourceOutput
      type: object
    ListBudgetsForResourceInput:
      example:
        PageSize: ""
        ResourceId: ""
        AcceptLanguage: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The resource identifier.
          title: ResourceId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      required:
      - ResourceId
      title: ListBudgetsForResourceInput
      type: object
    ListConstraintsForPortfolioOutput:
      example:
        ConstraintDetails: ""
        NextPageToken: ""
      properties:
        ConstraintDetails:
          allOf:
          - $ref: '#/components/schemas/ConstraintDetails'
          - description: Information about the constraints.
          title: ConstraintDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListConstraintsForPortfolioOutput
      type: object
    ListConstraintsForPortfolioInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PortfolioId: ""
        PageToken: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      required:
      - PortfolioId
      title: ListConstraintsForPortfolioInput
      type: object
    ListLaunchPathsOutput:
      example:
        NextPageToken: ""
        LaunchPathSummaries: ""
      properties:
        LaunchPathSummaries:
          allOf:
          - $ref: '#/components/schemas/LaunchPathSummaries'
          - description: Information about the launch path.
          title: LaunchPathSummaries
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListLaunchPathsOutput
      type: object
    ListLaunchPathsInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      required:
      - ProductId
      title: ListLaunchPathsInput
      type: object
    ListOrganizationPortfolioAccessOutput:
      example:
        NextPageToken: ""
        OrganizationNodes: ""
      properties:
        OrganizationNodes:
          allOf:
          - $ref: '#/components/schemas/OrganizationNodes'
          - description: Displays information about the organization nodes.
          title: OrganizationNodes
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListOrganizationPortfolioAccessOutput
      type: object
    ListOrganizationPortfolioAccessInput:
      example:
        PageSize: ""
        OrganizationNodeType: ""
        AcceptLanguage: ""
        PortfolioId: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The portfolio identifier. For example, <code>port-2abcdext3y5fk</code>."
          title: PortfolioId
        OrganizationNodeType:
          allOf:
          - $ref: '#/components/schemas/OrganizationNodeType'
          - description: <p>The organization node type that will be returned in the
              output.</p> <ul> <li> <p> <code>ORGANIZATION</code> - Organization that
              has access to the portfolio. </p> </li> <li> <p> <code>ORGANIZATIONAL_UNIT</code>
              - Organizational unit that has access to the portfolio within your organization.</p>
              </li> <li> <p> <code>ACCOUNT</code> - Account that has access to the
              portfolio within your organization.</p> </li> </ul>
          title: OrganizationNodeType
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
      required:
      - OrganizationNodeType
      - PortfolioId
      title: ListOrganizationPortfolioAccessInput
      type: object
    ListPortfolioAccessOutput:
      example:
        AccountIds: ""
        NextPageToken: ""
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          - description: Information about the Amazon Web Services accounts with access
              to the portfolio.
          title: AccountIds
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListPortfolioAccessOutput
      type: object
    ListPortfolioAccessInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PortfolioId: ""
        PageToken: ""
        OrganizationParentId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        OrganizationParentId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of an organization node the portfolio is shared with.
              All children of this node with an inherited portfolio share will be
              returned.
          title: OrganizationParentId
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeMax100'
          - description: The maximum number of items to return with this call.
          title: PageSize
      required:
      - PortfolioId
      title: ListPortfolioAccessInput
      type: object
    ListPortfoliosOutput:
      example:
        NextPageToken: ""
        PortfolioDetails: ""
      properties:
        PortfolioDetails:
          allOf:
          - $ref: '#/components/schemas/PortfolioDetails'
          - description: Information about the portfolios.
          title: PortfolioDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListPortfoliosOutput
      type: object
    ListPortfoliosInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeMax100'
          - description: The maximum number of items to return with this call.
          title: PageSize
      title: ListPortfoliosInput
      type: object
    ListPortfoliosForProductOutput:
      example:
        NextPageToken: ""
        PortfolioDetails: ""
      properties:
        PortfolioDetails:
          allOf:
          - $ref: '#/components/schemas/PortfolioDetails'
          - description: Information about the portfolios.
          title: PortfolioDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListPortfoliosForProductOutput
      type: object
    ListPortfoliosForProductInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeMax100'
          - description: The maximum number of items to return with this call.
          title: PageSize
      required:
      - ProductId
      title: ListPortfoliosForProductInput
      type: object
    ListPrincipalsForPortfolioOutput:
      example:
        Principals: ""
        NextPageToken: ""
      properties:
        Principals:
          allOf:
          - $ref: '#/components/schemas/Principals'
          - description: The <code>PrincipalARN</code>s and corresponding <code>PrincipalType</code>s
              associated with the portfolio.
          title: Principals
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListPrincipalsForPortfolioOutput
      type: object
    ListPrincipalsForPortfolioInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PortfolioId: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      required:
      - PortfolioId
      title: ListPrincipalsForPortfolioInput
      type: object
    ListProvisionedProductPlansOutput:
      example:
        NextPageToken: ""
        ProvisionedProductPlans: ""
      properties:
        ProvisionedProductPlans:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlans'
          - description: Information about the plans.
          title: ProvisionedProductPlans
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListProvisionedProductPlansOutput
      type: object
    ListProvisionedProductPlansInput:
      example:
        ProvisionProductId: ""
        PageSize: ""
        AccessLevelFilter:
          Value: ""
          Key: ""
        AcceptLanguage: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProvisionProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProvisionProductId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        AccessLevelFilter:
          $ref: '#/components/schemas/ListProvisionedProductPlansInput_AccessLevelFilter'
      title: ListProvisionedProductPlansInput
      type: object
    ListProvisioningArtifactsOutput:
      example:
        NextPageToken: ""
        ProvisioningArtifactDetails: ""
      properties:
        ProvisioningArtifactDetails:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactDetails'
          - description: Information about the provisioning artifacts.
          title: ProvisioningArtifactDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListProvisioningArtifactsOutput
      type: object
    ListProvisioningArtifactsInput:
      example:
        AcceptLanguage: ""
        ProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
      required:
      - ProductId
      title: ListProvisioningArtifactsInput
      type: object
    ListProvisioningArtifactsForServiceActionOutput:
      example:
        NextPageToken: ""
        ProvisioningArtifactViews: ""
      properties:
        ProvisioningArtifactViews:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactViews'
          - description: An array of objects with information about product views
              and provisioning artifacts.
          title: ProvisioningArtifactViews
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListProvisioningArtifactsForServiceActionOutput
      type: object
    ListProvisioningArtifactsForServiceActionInput:
      example:
        ServiceActionId: ""
        PageSize: ""
        PageToken: ""
        AcceptLanguage: ""
      properties:
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: ServiceActionId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ServiceActionId
      title: ListProvisioningArtifactsForServiceActionInput
      type: object
    ListRecordHistoryOutput:
      example:
        NextPageToken: ""
        RecordDetails: ""
      properties:
        RecordDetails:
          allOf:
          - $ref: '#/components/schemas/RecordDetails'
          - description: "The records, in reverse chronological order."
          title: RecordDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListRecordHistoryOutput
      type: object
    ListRecordHistoryInput:
      example:
        PageSize: ""
        AccessLevelFilter:
          Value: ""
          Key: ""
        AcceptLanguage: ""
        PageToken: ""
        SearchFilter:
          Value: ""
          Key: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        AccessLevelFilter:
          $ref: '#/components/schemas/ListProvisionedProductPlansInput_AccessLevelFilter'
        SearchFilter:
          $ref: '#/components/schemas/ListRecordHistoryInput_SearchFilter'
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: ListRecordHistoryInput
      type: object
    ListResourcesForTagOptionOutput:
      example:
        ResourceDetails: ""
        PageToken: ""
      properties:
        ResourceDetails:
          allOf:
          - $ref: '#/components/schemas/ResourceDetails'
          - description: Information about the resources.
          title: ResourceDetails
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: ListResourcesForTagOptionOutput
      type: object
    ListResourcesForTagOptionInput:
      example:
        TagOptionId: ""
        PageSize: ""
        PageToken: ""
        ResourceType: ""
      properties:
        TagOptionId:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: TagOptionId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: <p>The resource type.</p> <ul> <li> <p> <code>Portfolio</code>
              </p> </li> <li> <p> <code>Product</code> </p> </li> </ul>
          title: ResourceType
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      required:
      - TagOptionId
      title: ListResourcesForTagOptionInput
      type: object
    ListServiceActionsOutput:
      example:
        NextPageToken: ""
        ServiceActionSummaries: ""
      properties:
        ServiceActionSummaries:
          allOf:
          - $ref: '#/components/schemas/ServiceActionSummaries'
          - description: An object containing information about the service actions
              associated with the provisioning artifact.
          title: ServiceActionSummaries
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListServiceActionsOutput
      type: object
    ListServiceActionsInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: ListServiceActionsInput
      type: object
    ListServiceActionsForProvisioningArtifactOutput:
      example:
        NextPageToken: ""
        ServiceActionSummaries: ""
      properties:
        ServiceActionSummaries:
          allOf:
          - $ref: '#/components/schemas/ServiceActionSummaries'
          - description: An object containing information about the self-service actions
              associated with the provisioning artifact.
          title: ServiceActionSummaries
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListServiceActionsForProvisioningArtifactOutput
      type: object
    ListServiceActionsForProvisioningArtifactInput:
      example:
        PageSize: ""
        PageToken: ""
        AcceptLanguage: ""
        ProductId: ""
        ProvisioningArtifactId: ""
      properties:
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. For example, <code>prod-abcdzk7xy33qa</code>."
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. For example,\
              \ <code>pa-4abcdjnxjj6ne</code>."
          title: ProvisioningArtifactId
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - ProductId
      - ProvisioningArtifactId
      title: ListServiceActionsForProvisioningArtifactInput
      type: object
    ListStackInstancesForProvisionedProductOutput:
      example:
        NextPageToken: ""
        StackInstances: ""
      properties:
        StackInstances:
          allOf:
          - $ref: '#/components/schemas/StackInstances'
          - description: List of stack instances.
          title: StackInstances
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ListStackInstancesForProvisionedProductOutput
      type: object
    ListStackInstancesForProvisionedProductInput:
      example:
        PageSize: ""
        AcceptLanguage: ""
        PageToken: ""
        ProvisionedProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product.
          title: ProvisionedProductId
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
      required:
      - ProvisionedProductId
      title: ListStackInstancesForProvisionedProductInput
      type: object
    ListTagOptionsOutput:
      example:
        TagOptionDetails: ""
        PageToken: ""
      properties:
        TagOptionDetails:
          allOf:
          - $ref: '#/components/schemas/TagOptionDetails'
          - description: Information about the TagOptions.
          title: TagOptionDetails
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: ListTagOptionsOutput
      type: object
    ListTagOptionsInput:
      example:
        Filters:
          Active: ""
          Value: ""
          Key: ""
        PageSize: ""
        PageToken: ""
      properties:
        Filters:
          $ref: '#/components/schemas/ListTagOptionsInput_Filters'
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: ListTagOptionsInput
      type: object
    NotifyProvisionProductEngineWorkflowResultOutput:
      properties: {}
      type: object
    NotifyProvisionProductEngineWorkflowResultInput:
      example:
        Status: ""
        ResourceIdentifier:
          UniqueTag:
            Value: ""
            Key: ""
        IdempotencyToken: ""
        FailureReason: ""
        Outputs: ""
        WorkflowToken: ""
        RecordId: ""
      properties:
        WorkflowToken:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowToken'
          - description: ' The encrypted contents of the provisioning engine execution
              payload that Service Catalog sends after the Terraform product provisioning
              workflow starts. '
          title: WorkflowToken
        RecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: ' The identifier of the record. '
          title: RecordId
        Status:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowStatus'
          - description: ' The status of the provisioning engine execution. '
          title: Status
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowFailureReason'
          - description: ' The reason why the provisioning engine execution failed. '
          title: FailureReason
        ResourceIdentifier:
          $ref: '#/components/schemas/NotifyProvisionProductEngineWorkflowResultInput_ResourceIdentifier'
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RecordOutputs'
          - description: ' The output of the provisioning engine execution. '
          title: Outputs
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: ' The idempotency token that identifies the provisioning
              engine execution. '
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - RecordId
      - Status
      - WorkflowToken
      title: NotifyProvisionProductEngineWorkflowResultInput
      type: object
    NotifyTerminateProvisionedProductEngineWorkflowResultOutput:
      properties: {}
      type: object
    NotifyTerminateProvisionedProductEngineWorkflowResultInput:
      example:
        Status: ""
        IdempotencyToken: ""
        FailureReason: ""
        WorkflowToken: ""
        RecordId: ""
      properties:
        WorkflowToken:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowToken'
          - description: ' The encrypted contents of the terminate engine execution
              payload that Service Catalog sends after the Terraform product terminate
              workflow starts. '
          title: WorkflowToken
        RecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: ' The identifier of the record. '
          title: RecordId
        Status:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowStatus'
          - description: ' The status of the terminate engine execution. '
          title: Status
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowFailureReason'
          - description: ' The reason why the terminate engine execution failed. '
          title: FailureReason
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: ' The idempotency token that identifies the terminate engine
              execution. '
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - RecordId
      - Status
      - WorkflowToken
      title: NotifyTerminateProvisionedProductEngineWorkflowResultInput
      type: object
    NotifyUpdateProvisionedProductEngineWorkflowResultOutput:
      properties: {}
      type: object
    NotifyUpdateProvisionedProductEngineWorkflowResultInput:
      example:
        Status: ""
        IdempotencyToken: ""
        FailureReason: ""
        Outputs: ""
        WorkflowToken: ""
        RecordId: ""
      properties:
        WorkflowToken:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowToken'
          - description: ' The encrypted contents of the update engine execution payload
              that Service Catalog sends after the Terraform product update workflow
              starts. '
          title: WorkflowToken
        RecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: ' The identifier of the record. '
          title: RecordId
        Status:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowStatus'
          - description: ' The status of the update engine execution. '
          title: Status
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/EngineWorkflowFailureReason'
          - description: ' The reason why the update engine execution failed. '
          title: FailureReason
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RecordOutputs'
          - description: ' The output of the update engine execution. '
          title: Outputs
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: ' The idempotency token that identifies the update engine
              execution. '
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - RecordId
      - Status
      - WorkflowToken
      title: NotifyUpdateProvisionedProductEngineWorkflowResultInput
      type: object
    ProvisionProductOutput:
      example:
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/ExecuteProvisionedProductPlanOutput_RecordDetail'
      title: ProvisionProductOutput
      type: object
    ProvisionProductInput:
      example:
        ProductName: ""
        NotificationArns: ""
        ProductId: ""
        ProvisionToken: ""
        PathId: ""
        ProvisioningParameters: ""
        ProvisioningPreferences:
          StackSetAccounts: ""
          StackSetFailureToleranceCount: ""
          StackSetMaxConcurrencyPercentage: ""
          StackSetMaxConcurrencyCount: ""
          StackSetRegions: ""
          StackSetFailureTolerancePercentage: ""
        ProvisioningArtifactName: ""
        AcceptLanguage: ""
        PathName: ""
        Tags: ""
        ProvisioningArtifactId: ""
        ProvisionedProductName: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. You must provide the name or ID,\
              \ but not both."
          title: ProductId
        ProductName:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: "The name of the product. You must provide the name or ID,\
              \ but not both."
          title: ProductName
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. You must provide\
              \ the name or ID, but not both."
          title: ProvisioningArtifactId
        ProvisioningArtifactName:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: "The name of the provisioning artifact. You must provide\
              \ the name or ID, but not both."
          title: ProvisioningArtifactName
        PathId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The path identifier of the product. This value is optional\
              \ if the product has a default path, and required if the product has\
              \ more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.\
              \ You must provide the name or ID, but not both."
          title: PathId
        PathName:
          allOf:
          - $ref: '#/components/schemas/PortfolioDisplayName'
          - description: "The name of the path. You must provide the name or ID, but\
              \ not both."
          title: PathName
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: A user-friendly name for the provisioned product. This value
              must be unique for the Amazon Web Services account and cannot be updated
              after the product is provisioned.
          title: ProvisionedProductName
        ProvisioningParameters:
          allOf:
          - $ref: '#/components/schemas/ProvisioningParameters'
          - description: Parameters specified by the administrator that are required
              for provisioning the product.
          title: ProvisioningParameters
        ProvisioningPreferences:
          $ref: '#/components/schemas/ProvisionProductInput_ProvisioningPreferences'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more tags.
          title: Tags
        NotificationArns:
          allOf:
          - $ref: '#/components/schemas/NotificationArns'
          - description: Passed to CloudFormation. The SNS topic ARNs to which to
              publish stack-related events.
          title: NotificationArns
        ProvisionToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: An idempotency token that uniquely identifies the provisioning
              request.
          title: ProvisionToken
      required:
      - ProvisionToken
      - ProvisionedProductName
      title: ProvisionProductInput
      type: object
    RejectPortfolioShareOutput:
      properties: {}
      type: object
    RejectPortfolioShareInput:
      example:
        AcceptLanguage: ""
        PortfolioId: ""
        PortfolioShareType: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        PortfolioShareType:
          allOf:
          - $ref: '#/components/schemas/PortfolioShareType'
          - description: "<p>The type of shared portfolios to reject. The default\
              \ is to reject imported portfolios.</p> <ul> <li> <p> <code>AWS_ORGANIZATIONS</code>\
              \ - Reject portfolios shared by the management account of your organization.</p>\
              \ </li> <li> <p> <code>IMPORTED</code> - Reject imported portfolios.</p>\
              \ </li> <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws\
              \ ResourceNotFoundException.)</p> </li> </ul> <p>For example, <code>aws\
              \ servicecatalog reject-portfolio-share --portfolio-id \"port-2qwzkwxt3y5fk\"\
              \ --portfolio-share-type AWS_ORGANIZATIONS</code> </p>"
          title: PortfolioShareType
      required:
      - PortfolioId
      title: RejectPortfolioShareInput
      type: object
    ScanProvisionedProductsOutput:
      example:
        ProvisionedProducts: ""
        NextPageToken: ""
      properties:
        ProvisionedProducts:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductDetails'
          - description: Information about the provisioned products.
          title: ProvisionedProducts
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: ScanProvisionedProductsOutput
      type: object
    ScanProvisionedProductsInput:
      example:
        PageSize: ""
        AccessLevelFilter:
          Value: ""
          Key: ""
        AcceptLanguage: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        AccessLevelFilter:
          $ref: '#/components/schemas/ListProvisionedProductPlansInput_AccessLevelFilter'
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: ScanProvisionedProductsInput
      type: object
    SearchProductsOutput:
      example:
        NextPageToken: ""
        ProductViewAggregations: ""
        ProductViewSummaries: ""
      properties:
        ProductViewSummaries:
          allOf:
          - $ref: '#/components/schemas/ProductViewSummaries'
          - description: Information about the product views.
          title: ProductViewSummaries
        ProductViewAggregations:
          allOf:
          - $ref: '#/components/schemas/ProductViewAggregations'
          - description: The product view aggregations.
          title: ProductViewAggregations
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: SearchProductsOutput
      type: object
    SearchProductsInput:
      example:
        Filters: ""
        PageSize: ""
        SortBy: ""
        AcceptLanguage: ""
        SortOrder: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Filters:
          allOf:
          - $ref: '#/components/schemas/ProductViewFilters'
          - description: "The search filters. If no search filters are specified,\
              \ the output includes all products to which the caller has access."
          title: Filters
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeMax100'
          - description: The maximum number of items to return with this call.
          title: PageSize
        SortBy:
          allOf:
          - $ref: '#/components/schemas/ProductViewSortBy'
          - description: "The sort field. If no value is specified, the results are\
              \ not sorted."
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "The sort order. If no value is specified, the results are\
              \ not sorted."
          title: SortOrder
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: SearchProductsInput
      type: object
    SearchProductsAsAdminOutput:
      example:
        ProductViewDetails: ""
        NextPageToken: ""
      properties:
        ProductViewDetails:
          allOf:
          - $ref: '#/components/schemas/ProductViewDetails'
          - description: Information about the product views.
          title: ProductViewDetails
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: SearchProductsAsAdminOutput
      type: object
    SearchProductsAsAdminInput:
      example:
        ProductSource: ""
        Filters: ""
        PageSize: ""
        SortBy: ""
        AcceptLanguage: ""
        PortfolioId: ""
        SortOrder: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: PortfolioId
        Filters:
          allOf:
          - $ref: '#/components/schemas/ProductViewFilters'
          - description: "The search filters. If no search filters are specified,\
              \ the output includes all products to which the administrator has access."
          title: Filters
        SortBy:
          allOf:
          - $ref: '#/components/schemas/ProductViewSortBy'
          - description: "The sort field. If no value is specified, the results are\
              \ not sorted."
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "The sort order. If no value is specified, the results are\
              \ not sorted."
          title: SortOrder
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        ProductSource:
          allOf:
          - $ref: '#/components/schemas/ProductSource'
          - description: Access level of the source of the product.
          title: ProductSource
      title: SearchProductsAsAdminInput
      type: object
    SearchProvisionedProductsOutput:
      example:
        ProvisionedProducts: ""
        NextPageToken: ""
        TotalResultsCount: ""
      properties:
        ProvisionedProducts:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductAttributes'
          - description: Information about the provisioned products.
          title: ProvisionedProducts
        TotalResultsCount:
          allOf:
          - $ref: '#/components/schemas/TotalResultsCount'
          - description: The number of provisioned products found.
          title: TotalResultsCount
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token to use to retrieve the next set of results.\
              \ If there are no additional results, this value is null."
          title: NextPageToken
      title: SearchProvisionedProductsOutput
      type: object
    SearchProvisionedProductsInput:
      example:
        Filters: ""
        PageSize: ""
        AccessLevelFilter:
          Value: ""
          Key: ""
        SortBy: ""
        AcceptLanguage: ""
        SortOrder: ""
        PageToken: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        AccessLevelFilter:
          $ref: '#/components/schemas/ListProvisionedProductPlansInput_AccessLevelFilter'
        Filters:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductFilters'
          - description: "<p>The search filters.</p> <p>When the key is <code>SearchQuery</code>,\
              \ the searchable fields are <code>arn</code>, <code>createdTime</code>,\
              \ <code>id</code>, <code>lastRecordId</code>, <code>idempotencyToken</code>,\
              \ <code>name</code>, <code>physicalId</code>, <code>productId</code>,\
              \ <code>provisioningArtifact</code>, <code>type</code>, <code>status</code>,\
              \ <code>tags</code>, <code>userArn</code>, <code>userArnSession</code>,\
              \ <code>lastProvisioningRecordId</code>, <code>lastSuccessfulProvisioningRecordId</code>,\
              \ <code>productName</code>, and <code>provisioningArtifactName</code>.</p>\
              \ <p>Example: <code>\"SearchQuery\":[\"status:AVAILABLE\"]</code> </p>"
          title: Filters
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortField'
          - description: "The sort field. If no value is specified, the results are\
              \ not sorted. The valid values are <code>arn</code>, <code>id</code>,\
              \ <code>name</code>, and <code>lastRecordId</code>."
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "The sort order. If no value is specified, the results are\
              \ not sorted."
          title: SortOrder
        PageSize:
          allOf:
          - $ref: '#/components/schemas/SearchProvisionedProductsPageSize'
          - description: The maximum number of items to return with this call.
          title: PageSize
        PageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "The page token for the next set of results. To retrieve\
              \ the first set of results, use null."
          title: PageToken
      title: SearchProvisionedProductsInput
      type: object
    TerminateProvisionedProductOutput:
      example:
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/TerminateProvisionedProductOutput_RecordDetail'
      title: TerminateProvisionedProductOutput
      type: object
    TerminateProvisionedProductInput:
      example:
        RetainPhysicalResources: ""
        IgnoreErrors: ""
        TerminateToken: ""
        AcceptLanguage: ""
        ProvisionedProductId: ""
        ProvisionedProductName: ""
      properties:
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          - description: The name of the provisioned product. You cannot specify both
              <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
          title: ProvisionedProductName
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product. You cannot specify
              both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
          title: ProvisionedProductId
        TerminateToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "An idempotency token that uniquely identifies the termination\
              \ request. This token is only valid during the termination process.\
              \ After the provisioned product is terminated, subsequent requests to\
              \ terminate the same provisioned product always return <b>ResourceNotFound</b>."
          title: TerminateToken
        IgnoreErrors:
          allOf:
          - $ref: '#/components/schemas/IgnoreErrors'
          - description: "If set to true, Service Catalog stops managing the specified\
              \ provisioned product even if it cannot delete the underlying resources."
          title: IgnoreErrors
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        RetainPhysicalResources:
          allOf:
          - $ref: '#/components/schemas/RetainPhysicalResources'
          - description: "When this boolean parameter is set to true, the <code>TerminateProvisionedProduct</code>\
              \ API deletes the Service Catalog provisioned product. However, it does\
              \ not remove the CloudFormation stack, stack set, or the underlying\
              \ resources of the deleted provisioned product. The default value is\
              \ false."
          title: RetainPhysicalResources
      required:
      - TerminateToken
      title: TerminateProvisionedProductInput
      type: object
    UpdateConstraintOutput:
      example:
        Status: ""
        ConstraintDetail:
          Type: ""
          Owner: ""
          Description: ""
          PortfolioId: ""
          ProductId: ""
          ConstraintId: ""
        ConstraintParameters: ""
      properties:
        ConstraintDetail:
          $ref: '#/components/schemas/CreateConstraintOutput_ConstraintDetail'
        ConstraintParameters:
          allOf:
          - $ref: '#/components/schemas/ConstraintParameters'
          - description: The constraint parameters.
          title: ConstraintParameters
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the current request.
          title: Status
      title: UpdateConstraintOutput
      type: object
    UpdateConstraintInput:
      example:
        Description: ""
        Parameters: ""
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the constraint.
          title: Id
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstraintDescription'
          - description: The updated description of the constraint.
          title: Description
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ConstraintParameters'
          - description: "<p>The constraint parameters, in JSON format. The syntax\
              \ depends on the constraint type as follows:</p> <dl> <dt>LAUNCH</dt>\
              \ <dd> <p>You are required to specify either the <code>RoleArn</code>\
              \ or the <code>LocalRoleName</code> but can't use both.</p> <p>Specify\
              \ the <code>RoleArn</code> property as follows:</p> <p> <code>{\"RoleArn\"\
              \ : \"arn:aws:iam::123456789012:role/LaunchRole\"}</code> </p> <p>Specify\
              \ the <code>LocalRoleName</code> property as follows:</p> <p> <code>{\"\
              LocalRoleName\": \"SCBasicLaunchRole\"}</code> </p> <p>If you specify\
              \ the <code>LocalRoleName</code> property, when an account uses the\
              \ launch constraint, the IAM role with that name in the account will\
              \ be used. This allows launch-role constraints to be account-agnostic\
              \ so the administrator can create fewer resources per shared account.</p>\
              \ <note> <p>The given role name must exist in the account used to create\
              \ the launch constraint and the account of the user who launches a product\
              \ with this launch constraint.</p> </note> <p>You cannot have both a\
              \ <code>LAUNCH</code> and a <code>STACKSET</code> constraint.</p> <p>You\
              \ also cannot have more than one <code>LAUNCH</code> constraint on a\
              \ product and portfolio.</p> </dd> <dt>NOTIFICATION</dt> <dd> <p>Specify\
              \ the <code>NotificationArns</code> property as follows:</p> <p> <code>{\"\
              NotificationArns\" : [\"arn:aws:sns:us-east-1:123456789012:Topic\"]}</code>\
              \ </p> </dd> <dt>RESOURCE_UPDATE</dt> <dd> <p>Specify the <code>TagUpdatesOnProvisionedProduct</code>\
              \ property as follows:</p> <p> <code>{\"Version\":\"2.0\",\"Properties\"\
              :{\"TagUpdateOnProvisionedProduct\":\"String\"}}</code> </p> <p>The\
              \ <code>TagUpdatesOnProvisionedProduct</code> property accepts a string\
              \ value of <code>ALLOWED</code> or <code>NOT_ALLOWED</code>.</p> </dd>\
              \ <dt>STACKSET</dt> <dd> <p>Specify the <code>Parameters</code> property\
              \ as follows:</p> <p> <code>{\"Version\": \"String\", \"Properties\"\
              : {\"AccountList\": [ \"String\" ], \"RegionList\": [ \"String\" ],\
              \ \"AdminRole\": \"String\", \"ExecutionRole\": \"String\"}}</code>\
              \ </p> <p>You cannot have both a <code>LAUNCH</code> and a <code>STACKSET</code>\
              \ constraint.</p> <p>You also cannot have more than one <code>STACKSET</code>\
              \ constraint on a product and portfolio.</p> <p>Products with a <code>STACKSET</code>\
              \ constraint will launch an CloudFormation stack set.</p> </dd> <dt>TEMPLATE</dt>\
              \ <dd> <p>Specify the <code>Rules</code> property. For more information,\
              \ see <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html\"\
              >Template Constraint Rules</a>.</p> </dd> </dl>"
          title: Parameters
      required:
      - Id
      title: UpdateConstraintInput
      type: object
    UpdatePortfolioOutput:
      example:
        PortfolioDetail:
          ProviderName: ""
          Description: ""
          CreatedTime: ""
          DisplayName: ""
          Id: ""
          ARN: ""
        Tags: ""
      properties:
        PortfolioDetail:
          $ref: '#/components/schemas/CreatePortfolioOutput_PortfolioDetail'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Information about the tags associated with the portfolio.
          title: Tags
      title: UpdatePortfolioOutput
      type: object
    UpdatePortfolioInput:
      example:
        ProviderName: ""
        RemoveTags: ""
        Description: ""
        DisplayName: ""
        AddTags: ""
        AcceptLanguage: ""
        Id: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: Id
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/PortfolioDisplayName'
          - description: The name to use for display purposes.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/PortfolioDescription'
          - description: The updated description of the portfolio.
          title: Description
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderName'
          - description: The updated name of the portfolio provider.
          title: ProviderName
        AddTags:
          allOf:
          - $ref: '#/components/schemas/AddTags'
          - description: The tags to add.
          title: AddTags
        RemoveTags:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: The tags to remove.
          title: RemoveTags
      required:
      - Id
      title: UpdatePortfolioInput
      type: object
    UpdatePortfolioShareOutput:
      example:
        Status: ""
        PortfolioShareToken: ""
      properties:
        PortfolioShareToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The token that tracks the status of the <code>UpdatePortfolioShare</code>
              operation for external account to account or organizational type sharing.
          title: PortfolioShareToken
        Status:
          allOf:
          - $ref: '#/components/schemas/ShareStatus'
          - description: 'The status of <code>UpdatePortfolioShare</code> operation.
              You can also obtain the operation status using <code>DescribePortfolioShareStatus</code>
              API. '
          title: Status
      title: UpdatePortfolioShareOutput
      type: object
    UpdatePortfolioShareInput:
      example:
        AccountId: ""
        AcceptLanguage: ""
        PortfolioId: ""
        OrganizationNode:
          Type: ""
          Value: ""
        ShareTagOptions: ""
        SharePrincipals: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The unique identifier of the portfolio for which the share
              will be updated.
          title: PortfolioId
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account Id of the recipient account.
              This field is required when updating an external account to account
              type share.
          title: AccountId
        OrganizationNode:
          $ref: '#/components/schemas/OrganizationNode'
        ShareTagOptions:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "Enables or disables <code>TagOptions</code> sharing for\
              \ the portfolio share. If this field is not provided, the current state\
              \ of TagOptions sharing on the portfolio share will not be modified."
          title: ShareTagOptions
        SharePrincipals:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "A flag to enables or disables <code>Principals</code> sharing\
              \ in the portfolio. If this field is not provided, the current state\
              \ of the <code>Principals</code> sharing on the portfolio share will\
              \ not be modified. "
          title: SharePrincipals
      required:
      - PortfolioId
      title: UpdatePortfolioShareInput
      type: object
    UpdateProductOutput:
      example:
        ProductViewDetail:
          Status: ""
          ProductARN: ""
          CreatedTime: ""
          ProductViewSummary:
            Owner: ""
            Type: ""
            SupportDescription: ""
            Distributor: ""
            HasDefaultPath: ""
            SupportEmail: ""
            ProductId: ""
            SupportUrl: ""
            Id: ""
            Name: ""
            ShortDescription: ""
          SourceConnection:
            Type: ""
            ConnectionParameters:
              CodeStar:
                ArtifactPath: ""
                Repository: ""
                Branch: ""
                ConnectionArn: ""
            LastSync:
              LastSuccessfulSyncProvisioningArtifactId: ""
              LastSyncStatus: ""
              LastSuccessfulSyncTime: ""
              LastSyncTime: ""
              LastSyncStatusMessage: ""
        Tags: ""
      properties:
        ProductViewDetail:
          $ref: '#/components/schemas/CreateProductOutput_ProductViewDetail'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Information about the tags associated with the product.
          title: Tags
      title: UpdateProductOutput
      type: object
    UpdateProductInput:
      example:
        RemoveTags: ""
        Owner: ""
        SupportDescription: ""
        Description: ""
        Distributor: ""
        SupportEmail: ""
        AddTags: ""
        AcceptLanguage: ""
        SupportUrl: ""
        Id: ""
        SourceConnection:
          Type: ""
          ConnectionParameters:
            CodeStar:
              ArtifactPath: ""
              Repository: ""
              Branch: ""
              ConnectionArn: ""
        Name: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The updated product name.
          title: Name
        Owner:
          allOf:
          - $ref: '#/components/schemas/ProductViewOwner'
          - description: The updated owner of the product.
          title: Owner
        Description:
          allOf:
          - $ref: '#/components/schemas/ProductViewShortDescription'
          - description: The updated description of the product.
          title: Description
        Distributor:
          allOf:
          - $ref: '#/components/schemas/ProductViewOwner'
          - description: The updated distributor of the product.
          title: Distributor
        SupportDescription:
          allOf:
          - $ref: '#/components/schemas/SupportDescription'
          - description: The updated support description for the product.
          title: SupportDescription
        SupportEmail:
          allOf:
          - $ref: '#/components/schemas/SupportEmail'
          - description: The updated support email for the product.
          title: SupportEmail
        SupportUrl:
          allOf:
          - $ref: '#/components/schemas/SupportUrl'
          - description: The updated support URL for the product.
          title: SupportUrl
        AddTags:
          allOf:
          - $ref: '#/components/schemas/AddTags'
          - description: The tags to add to the product.
          title: AddTags
        RemoveTags:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: The tags to remove from the product.
          title: RemoveTags
        SourceConnection:
          $ref: '#/components/schemas/UpdateProductInput_SourceConnection'
      required:
      - Id
      title: UpdateProductInput
      type: object
    UpdateProvisionedProductOutput:
      example:
        RecordDetail:
          Status: ""
          CreatedTime: ""
          ProvisionedProductType: ""
          ProductId: ""
          PathId: ""
          LaunchRoleArn: ""
          RecordType: ""
          RecordTags: ""
          ProvisionedProductId: ""
          RecordId: ""
          UpdatedTime: ""
          ProvisionedProductName: ""
          ProvisioningArtifactId: ""
          RecordErrors: ""
      properties:
        RecordDetail:
          $ref: '#/components/schemas/UpdateProvisionedProductOutput_RecordDetail'
      title: UpdateProvisionedProductOutput
      type: object
    UpdateProvisionedProductInput:
      example:
        ProductName: ""
        ProductId: ""
        UpdateToken: ""
        PathId: ""
        ProvisioningParameters: ""
        ProvisioningPreferences:
          StackSetAccounts: ""
          StackSetFailureToleranceCount: ""
          StackSetMaxConcurrencyPercentage: ""
          StackSetMaxConcurrencyCount: ""
          StackSetRegions: ""
          StackSetOperationType: ""
          StackSetFailureTolerancePercentage: ""
        ProvisioningArtifactName: ""
        AcceptLanguage: ""
        ProvisionedProductId: ""
        PathName: ""
        Tags: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          - description: The name of the provisioned product. You cannot specify both
              <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
          title: ProvisionedProductName
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioned product. You must provide\
              \ the name or ID, but not both."
          title: ProvisionedProductId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the product. You must provide the name\
              \ or ID, but not both."
          title: ProductId
        ProductName:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: "The name of the product. You must provide the name or ID,\
              \ but not both."
          title: ProductName
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        ProvisioningArtifactName:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: "The name of the provisioning artifact. You must provide\
              \ the name or ID, but not both."
          title: ProvisioningArtifactName
        PathId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The path identifier. This value is optional if the product\
              \ has a default path, and required if the product has more than one\
              \ path. You must provide the name or ID, but not both."
          title: PathId
        PathName:
          allOf:
          - $ref: '#/components/schemas/PortfolioDisplayName'
          - description: "The name of the path. You must provide the name or ID, but\
              \ not both."
          title: PathName
        ProvisioningParameters:
          allOf:
          - $ref: '#/components/schemas/UpdateProvisioningParameters'
          - description: The new parameters.
          title: ProvisioningParameters
        ProvisioningPreferences:
          $ref: '#/components/schemas/UpdateProvisionedProductInput_ProvisioningPreferences'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more tags. Requires the product to have <code>RESOURCE_UPDATE</code>
              constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code>
              to allow tag updates.
          title: Tags
        UpdateToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: The idempotency token that uniquely identifies the provisioning
              update request.
          title: UpdateToken
      required:
      - UpdateToken
      title: UpdateProvisionedProductInput
      type: object
    UpdateProvisionedProductPropertiesOutput:
      example:
        Status: ""
        ProvisionedProductProperties: ""
        ProvisionedProductId: ""
        RecordId: ""
      properties:
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The provisioned product identifier.
          title: ProvisionedProductId
        ProvisionedProductProperties:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductProperties'
          - description: A map that contains the properties updated.
          title: ProvisionedProductProperties
        RecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the record.
          title: RecordId
        Status:
          allOf:
          - $ref: '#/components/schemas/RecordStatus'
          - description: The status of the request.
          title: Status
      title: UpdateProvisionedProductPropertiesOutput
      type: object
    UpdateProvisionedProductPropertiesInput:
      example:
        IdempotencyToken: ""
        ProvisionedProductProperties: ""
        AcceptLanguage: ""
        ProvisionedProductId: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product.
          title: ProvisionedProductId
        ProvisionedProductProperties:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductProperties'
          - description: "<p>A map that contains the provisioned product properties\
              \ to be updated.</p> <p>The <code>LAUNCH_ROLE</code> key accepts role\
              \ ARNs. This key allows an administrator to call <code>UpdateProvisionedProductProperties</code>\
              \ to update the launch role that is associated with a provisioned product.\
              \ This role is used when an end user calls a provisioning operation\
              \ such as <code>UpdateProvisionedProduct</code>, <code>TerminateProvisionedProduct</code>,\
              \ or <code>ExecuteProvisionedProductServiceAction</code>. Only a role\
              \ ARN is valid. A user ARN is invalid. </p> <p>The <code>OWNER</code>\
              \ key accepts user ARNs, IAM role ARNs, and STS assumed-role ARNs. The\
              \ owner is the user that has permission to see, update, terminate, and\
              \ execute service actions in the provisioned product.</p> <p>The administrator\
              \ can change the owner of a provisioned product to another IAM or STS\
              \ entity within the same account. Both end user owners and administrators\
              \ can see ownership history of the provisioned product using the <code>ListRecordHistory</code>\
              \ API. The new owner can describe all past records for the provisioned\
              \ product using the <code>DescribeRecord</code> API. The previous owner\
              \ can no longer use <code>DescribeRecord</code>, but can still see the\
              \ product's history from when he was an owner using <code>ListRecordHistory</code>.</p>\
              \ <p>If a provisioned product ownership is assigned to an end user,\
              \ they can see and perform any action through the API or Service Catalog\
              \ console such as update, terminate, and execute service actions. If\
              \ an end user provisions a product and the owner is updated to someone\
              \ else, they will no longer be able to see or perform any actions through\
              \ API or the Service Catalog console on that provisioned product.</p>"
          title: ProvisionedProductProperties
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: The idempotency token that uniquely identifies the provisioning
              product update request.
          title: IdempotencyToken
      required:
      - IdempotencyToken
      - ProvisionedProductId
      - ProvisionedProductProperties
      title: UpdateProvisionedProductPropertiesInput
      type: object
    UpdateProvisioningArtifactOutput:
      example:
        Status: ""
        ProvisioningArtifactDetail:
          Guidance: ""
          SourceRevision: ""
          Type: ""
          Active: ""
          Description: ""
          CreatedTime: ""
          Id: ""
          Name: ""
        Info: ""
      properties:
        ProvisioningArtifactDetail:
          $ref: '#/components/schemas/CreateProvisioningArtifactOutput_ProvisioningArtifactDetail'
        Info:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactInfo'
          - description: The URL of the CloudFormation template in Amazon S3 or GitHub
              in JSON format.
          title: Info
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the current request.
          title: Status
      title: UpdateProvisioningArtifactOutput
      type: object
    UpdateProvisioningArtifactInput:
      example:
        Guidance: ""
        Active: ""
        Description: ""
        AcceptLanguage: ""
        ProductId: ""
        ProvisioningArtifactId: ""
        Name: ""
      properties:
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The updated name of the provisioning artifact.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactDescription'
          - description: The updated description of the provisioning artifact.
          title: Description
        Active:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactActive'
          - description: <p>Indicates whether the product version is active.</p> <p>Inactive
              provisioning artifacts are invisible to end users. End users cannot
              launch or update a provisioned product from an inactive provisioning
              artifact.</p>
          title: Active
        Guidance:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactGuidance'
          - description: <p>Information set by the administrator to provide guidance
              to end users about which provisioning artifacts to use.</p> <p>The <code>DEFAULT</code>
              value indicates that the product version is active.</p> <p>The administrator
              can set the guidance to <code>DEPRECATED</code> to inform users that
              the product version is deprecated. Users are able to make updates to
              a provisioned product of a deprecated version but cannot launch new
              provisioned products using a deprecated version.</p>
          title: Guidance
      required:
      - ProductId
      - ProvisioningArtifactId
      title: UpdateProvisioningArtifactInput
      type: object
    UpdateServiceActionOutput:
      example:
        ServiceActionDetail:
          Definition: ""
          ServiceActionSummary:
            Description: ""
            DefinitionType: ""
            Id: ""
            Name: ""
      properties:
        ServiceActionDetail:
          $ref: '#/components/schemas/DescribeServiceActionOutput_ServiceActionDetail'
      title: UpdateServiceActionOutput
      type: object
    UpdateServiceActionInput:
      example:
        Description: ""
        Definition: ""
        AcceptLanguage: ""
        Id: ""
        Name: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The self-service action identifier.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceActionName'
          - description: The self-service action name.
          title: Name
        Definition:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDefinitionMap'
          - description: A map that defines the self-service action.
          title: Definition
        Description:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDescription'
          - description: The self-service action description.
          title: Description
        AcceptLanguage:
          allOf:
          - $ref: '#/components/schemas/AcceptLanguage'
          - description: <p>The language code.</p> <ul> <li> <p> <code>jp</code> -
              Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
          title: AcceptLanguage
      required:
      - Id
      title: UpdateServiceActionInput
      type: object
    UpdateTagOptionOutput:
      example:
        TagOptionDetail:
          Active: ""
          Owner: ""
          Value: ""
          Id: ""
          Key: ""
      properties:
        TagOptionDetail:
          $ref: '#/components/schemas/CreateTagOptionOutput_TagOptionDetail'
      title: UpdateTagOptionOutput
      type: object
    UpdateTagOptionInput:
      example:
        Active: ""
        Value: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: Id
        Value:
          allOf:
          - $ref: '#/components/schemas/TagOptionValue'
          - description: The updated value.
          title: Value
        Active:
          allOf:
          - $ref: '#/components/schemas/TagOptionActive'
          - description: The updated active state.
          title: Active
      required:
      - Id
      title: UpdateTagOptionInput
      type: object
    AcceptLanguage:
      maxLength: 100
      type: string
    Id:
      maxLength: 100
      minLength: 1
      pattern: "^[a-zA-Z0-9_\\-]*"
      type: string
    PortfolioShareType:
      enum:
      - IMPORTED
      - AWS_SERVICECATALOG
      - AWS_ORGANIZATIONS
      title: PortfolioShareType
      type: string
    AccessLevelFilterKey:
      enum:
      - Account
      - Role
      - User
      title: AccessLevelFilterKey
      type: string
    AccessLevelFilterValue:
      type: string
    AccessLevelFilter:
      description: The access level to use to filter results.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AccessLevelFilterKey'
          - description: <p>The access level.</p> <ul> <li> <p> <code>Account</code>
              - Filter results based on the account.</p> </li> <li> <p> <code>Role</code>
              - Filter results based on the federated role of the specified user.</p>
              </li> <li> <p> <code>User</code> - Filter results based on the specified
              user.</p> </li> </ul>
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/AccessLevelFilterValue'
          - description: The user to which the access level applies. The only supported
              value is <code>Self</code>.
          title: Value
      title: AccessLevelFilter
      type: object
    AccessStatus:
      enum:
      - ENABLED
      - UNDER_CHANGE
      - DISABLED
      title: AccessStatus
      type: string
    AccountId:
      pattern: "^[0-9]{12}$"
      title: AccountId
      type: string
    AccountIds:
      items:
        $ref: '#/components/schemas/AccountId'
      type: array
    Tag:
      description: Information about a tag. A tag is a key-value pair. Tags are propagated
        to the resources created when provisioning a product.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value for this key.
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    AddTags:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 20
      type: array
    String:
      title: String
      type: string
    AllowedValues:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ApproximateCount:
      type: integer
    BudgetName:
      maxLength: 100
      minLength: 1
      type: string
    PrincipalARN:
      maxLength: 1000
      minLength: 1
      type: string
    PrincipalType:
      enum:
      - IAM
      - IAM_PATTERN
      title: PrincipalType
      type: string
    ResourceId:
      type: string
    TagOptionId:
      maxLength: 100
      minLength: 1
      type: string
    AttributeValue:
      type: string
    ServiceActionAssociations:
      items:
        $ref: '#/components/schemas/ServiceActionAssociation'
      maxItems: 50
      minItems: 1
      type: array
    FailedServiceActionAssociations:
      items:
        $ref: '#/components/schemas/FailedServiceActionAssociation'
      maxItems: 50
      type: array
    Boolean:
      type: boolean
    BudgetDetail:
      description: Information about a budget.
      properties:
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: Name of the associated budget.
          title: BudgetName
      title: BudgetDetail
      type: object
    Budgets:
      items:
        $ref: '#/components/schemas/BudgetDetail'
      type: array
    CausingEntity:
      type: string
    ChangeAction:
      enum:
      - ADD
      - MODIFY
      - REMOVE
      title: ChangeAction
      type: string
    CloudWatchDashboardName:
      type: string
    CloudWatchDashboard:
      description: Information about a CloudWatch dashboard.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDashboardName'
          - description: The name of the CloudWatch dashboard.
          title: Name
      title: CloudWatchDashboard
      type: object
    CloudWatchDashboards:
      items:
        $ref: '#/components/schemas/CloudWatchDashboard'
      type: array
    CodeStarConnectionArn:
      maxLength: 1224
      minLength: 1
      pattern: "arn:[a-z0-9][-.a-z0-9]{0,62}:codestar-connections:([a-z0-9][-.a-z0-9]{0,62})?:([a-z0-9][-.a-z0-9]{0,62})?:[^/].{0,1023}$"
      type: string
    Repository:
      maxLength: 100
      minLength: 1
      type: string
    RepositoryBranch:
      maxLength: 250
      minLength: 1
      type: string
    RepositoryArtifactPath:
      maxLength: 4096
      minLength: 1
      type: string
    CodeStarParameters:
      description: 'The subtype containing details about the Codestar connection <code>Type</code>. '
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/CodeStarConnectionArn'
          - description: "The CodeStar ARN, which is the connection between Service\
              \ Catalog and the external repository."
          title: ConnectionArn
        Repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          - description: "The specific repository where the product’s artifact-to-be-synced\
              \ resides, formatted as \"Account/Repo.\" "
          title: Repository
        Branch:
          allOf:
          - $ref: '#/components/schemas/RepositoryBranch'
          - description: 'The specific branch where the artifact resides. '
          title: Branch
        ArtifactPath:
          allOf:
          - $ref: '#/components/schemas/RepositoryArtifactPath'
          - description: "The absolute path wehre the artifact resides within the\
              \ repo and branch, formatted as \"folder/file.json.\" "
          title: ArtifactPath
      required:
      - ArtifactPath
      - Branch
      - ConnectionArn
      - Repository
      title: CodeStarParameters
      type: object
    ConstraintDescription:
      maxLength: 2000
      type: string
    ConstraintType:
      maxLength: 1024
      minLength: 1
      type: string
    ConstraintDetail:
      description: Information about a constraint.
      properties:
        ConstraintId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the constraint.
          title: ConstraintId
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstraintType'
          - description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code>
              </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p>STACKSET</p>
              </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
          title: Type
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstraintDescription'
          - description: The description of the constraint.
          title: Description
        Owner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The owner of the constraint.
          title: Owner
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the product the constraint applies to.
              Note that a constraint applies to a specific instance of a product within
              a certain portfolio.
          title: ProductId
        PortfolioId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the portfolio the product resides in. The
              constraint applies only to the instance of the product that lives within
              this portfolio.
          title: PortfolioId
      title: ConstraintDetail
      type: object
    ConstraintDetails:
      items:
        $ref: '#/components/schemas/ConstraintDetail'
      type: array
    ConstraintParameters:
      type: string
    ConstraintSummary:
      description: Summary information about a constraint.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstraintType'
          - description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code>
              </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p>STACKSET</p>
              </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
          title: Type
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstraintDescription'
          - description: The description of the constraint.
          title: Description
      title: ConstraintSummary
      type: object
    ConstraintSummaries:
      items:
        $ref: '#/components/schemas/ConstraintSummary'
      type: array
    CopyOption:
      enum:
      - CopyTags
      title: CopyOption
      type: string
    CopyOptions:
      items:
        $ref: '#/components/schemas/CopyOption'
      type: array
    ProductArn:
      maxLength: 1224
      minLength: 1
      pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
        .]{0,63}:[^/].{0,1023}"
      type: string
    ProductViewName:
      maxLength: 8191
      type: string
    SourceProvisioningArtifactProperties:
      items:
        $ref: '#/components/schemas/SourceProvisioningArtifactPropertiesMap'
      type: array
    IdempotencyToken:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      type: string
    CopyProductStatus:
      enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
      title: CopyProductStatus
      type: string
    Status:
      enum:
      - AVAILABLE
      - CREATING
      - FAILED
      title: Status
      type: string
    PortfolioDisplayName:
      maxLength: 100
      minLength: 1
      type: string
    PortfolioDescription:
      maxLength: 2000
      type: string
    ProviderName:
      maxLength: 50
      minLength: 1
      type: string
    PortfolioDetail:
      description: Information about a portfolio.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The portfolio identifier.
          title: Id
        ARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The ARN assigned to the portfolio.
          title: ARN
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/PortfolioDisplayName'
          - description: The name to use for display purposes.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/PortfolioDescription'
          - description: The description of the portfolio.
          title: Description
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/ProviderName'
          - description: The name of the portfolio provider.
          title: ProviderName
      title: PortfolioDetail
      type: object
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      type: array
    OrganizationNode:
      description: Information about the organization node.
      example:
        Type: ""
        Value: ""
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/OrganizationNodeType'
          - description: The organization node type.
          title: Type
        Value:
          allOf:
          - $ref: '#/components/schemas/OrganizationNodeValue'
          - description: The identifier of the organization node.
          title: Value
      title: OrganizationNode
      type: object
    ProductViewOwner:
      maxLength: 8191
      type: string
    ProductViewShortDescription:
      maxLength: 8191
      type: string
    SupportDescription:
      maxLength: 8191
      type: string
    SupportEmail:
      maxLength: 254
      type: string
    SupportUrl:
      maxLength: 2083
      type: string
    ProductType:
      enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE
      - TERRAFORM_OPEN_SOURCE
      maxLength: 8191
      title: ProductType
      type: string
    ProvisioningArtifactProperties:
      description: Information about a provisioning artifact (also known as a version)
        for a product.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: "The name of the provisioning artifact (for example, v1 v2beta).\
              \ No spaces are allowed."
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactDescription'
          - description: "The description of the provisioning artifact, including\
              \ how it differs from the previous provisioning artifact."
          title: Description
        Info:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactInfo'
          - description: "<p>Specify the template source with one of the following\
              \ options, but not both. Keys accepted: [ <code>LoadTemplateFromURL</code>,\
              \ <code>ImportFromPhysicalId</code> ]</p> <p>The URL of the CloudFormation\
              \ template in Amazon S3 or GitHub in JSON format. Specify the URL in\
              \ JSON format as follows:</p> <p> <code>\"LoadTemplateFromURL\": \"\
              https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/...\"</code>\
              \ </p> <p> <code>ImportFromPhysicalId</code>: The physical id of the\
              \ resource that contains the template. Currently only supports CloudFormation\
              \ stack arn. Specify the physical id in JSON format as follows: <code>ImportFromPhysicalId:\
              \ “arn:aws:cloudformation:[us-east-1]:[accountId]:stack/[StackName]/[resourceId]</code>\
              \ </p>"
          title: Info
        Type:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactType'
          - description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code>
              - CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code>
              - Amazon Web Services Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code>
              - Amazon Web Services Marketplace Clusters and Amazon Web Services Resources</p>
              </li> <li> <p> <code>TERRAFORM_OPEN_SOURCE</code> - Terraform open source
              configuration file</p> </li> </ul>
          title: Type
        DisableTemplateValidation:
          allOf:
          - $ref: '#/components/schemas/DisableTemplateValidation'
          - description: "If set to true, Service Catalog stops validating the specified\
              \ provisioning artifact even if it is invalid."
          title: DisableTemplateValidation
      title: ProvisioningArtifactProperties
      type: object
    SourceConnection:
      description: "A top level <code>ProductViewDetail</code> response containing\
        \ details about the product’s connection. Service Catalog returns this field\
        \ for the <code>CreateProduct</code>, <code>UpdateProduct</code>, <code>DescribeProductAsAdmin</code>,\
        \ and <code>SearchProductAsAdmin</code> APIs. This response contains the same\
        \ fields as the <code>ConnectionParameters</code> request, with the addition\
        \ of the <code>LastSync</code> response."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: 'The only supported <code>SourceConnection</code> type is
              Codestar. '
          title: Type
        ConnectionParameters:
          $ref: '#/components/schemas/SourceConnection_ConnectionParameters'
      required:
      - ConnectionParameters
      title: SourceConnection
      type: object
    ProductViewDetail:
      description: Information about a product view.
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/DescribeProductOutput_ProductViewSummary'
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>The status of the product.</p> <ul> <li> <p> <code>AVAILABLE</code>
              - The product is ready for use.</p> </li> <li> <p> <code>CREATING</code>
              - Product creation has started; the product is not ready for use.</p>
              </li> <li> <p> <code>FAILED</code> - An action failed.</p> </li> </ul>
          title: Status
        ProductARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The ARN of the product.
          title: ProductARN
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        SourceConnection:
          $ref: '#/components/schemas/ProductViewDetail_SourceConnection'
      title: ProductViewDetail
      type: object
    ProvisioningArtifactDetail:
      description: Information about a provisioning artifact (also known as a version)
        for a product.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The name of the provisioning artifact.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The description of the provisioning artifact.
          title: Description
        Type:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactType'
          - description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code>
              - CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code>
              - Amazon Web Services Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code>
              - Amazon Web Services Marketplace Clusters and Amazon Web Services Resources</p>
              </li> </ul>
          title: Type
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        Active:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactActive'
          - description: Indicates whether the product version is active.
          title: Active
        Guidance:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactGuidance'
          - description: Information set by the administrator to provide guidance
              to end users about which provisioning artifacts to use.
          title: Guidance
        SourceRevision:
          allOf:
          - $ref: '#/components/schemas/SourceRevision'
          - description: "<p>Specifies the revision of the external artifact that\
              \ was used to automatically sync the Service Catalog product and create\
              \ the provisioning artifact. Service Catalog includes this response\
              \ parameter as a high level field to the existing <code>ProvisioningArtifactDetail</code>\
              \ type, which is returned as part of the response for <code>CreateProduct</code>,\
              \ <code>UpdateProduct</code>, <code>DescribeProductAsAdmin</code>, <code>DescribeProvisioningArtifact</code>,\
              \ <code>ListProvisioningArtifact</code>, and <code>UpdateProvisioningArticat</code>\
              \ APIs. </p> <p>This field only exists for Repo-Synced products. </p>"
          title: SourceRevision
      title: ProvisioningArtifactDetail
      type: object
    ProvisionedProductPlanName:
      type: string
    ProvisionedProductPlanType:
      enum:
      - CLOUDFORMATION
      title: ProvisionedProductPlanType
      type: string
    NotificationArns:
      items:
        $ref: '#/components/schemas/NotificationArn'
      maxItems: 5
      type: array
    ProvisionedProductName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9._-]*"
      type: string
    UpdateProvisioningParameters:
      items:
        $ref: '#/components/schemas/UpdateProvisioningParameter'
      type: array
    ProvisioningArtifactInfo:
      additionalProperties:
        $ref: '#/components/schemas/ProvisioningArtifactInfoValue'
      maxProperties: 100
      minProperties: 1
      type: object
    ServiceActionName:
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9_\\-.]*"
      type: string
    ServiceActionDefinitionType:
      enum:
      - SSM_AUTOMATION
      title: ServiceActionDefinitionType
      type: string
    ServiceActionDefinitionMap:
      additionalProperties:
        $ref: '#/components/schemas/ServiceActionDefinitionValue'
      maxProperties: 100
      minProperties: 1
      type: object
    ServiceActionDescription:
      maxLength: 1024
      type: string
    ServiceActionDetail:
      description: An object containing detailed information about the self-service
        action.
      properties:
        ServiceActionSummary:
          $ref: '#/components/schemas/ServiceActionDetail_ServiceActionSummary'
        Definition:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDefinitionMap'
          - description: A map that defines the self-service action.
          title: Definition
      title: ServiceActionDetail
      type: object
    TagOptionKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagOptionValue:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagOptionValue
      type: string
    TagOptionDetail:
      description: Information about a TagOption.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagOptionKey'
          - description: The TagOption key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagOptionValue'
          - description: The TagOption value.
          title: Value
        Active:
          allOf:
          - $ref: '#/components/schemas/TagOptionActive'
          - description: The TagOption active state.
          title: Active
        Id:
          allOf:
          - $ref: '#/components/schemas/TagOptionId'
          - description: The TagOption identifier.
          title: Id
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: The Amazon Web Services account Id of the owner account that
              created the TagOption.
          title: Owner
      title: TagOptionDetail
      type: object
    CreatedTime:
      format: date-time
      type: string
    CreationTime:
      format: date-time
      type: string
    DefaultValue:
      type: string
    IgnoreErrors:
      type: boolean
    StatusDetail:
      type: string
    TagOptionDetails:
      items:
        $ref: '#/components/schemas/TagOptionDetail'
      type: array
    OrganizationNodeValue:
      pattern: "(^[0-9]{12}$)|(^arn:aws:organizations::\\d{12}:organization\\/o-[a-z0-9]{10,32})|(^o-[a-z0-9]{10,32}$)|(^arn:aws:organizations::\\\
        d{12}:ou\\/o-[a-z0-9]{10,32}\\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}$)|(^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)"
      type: string
    ShareStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETED
      - COMPLETED_WITH_ERRORS
      - ERROR
      title: ShareStatus
      type: string
    ShareDetails:
      description: Information about the portfolio share operation.
      properties:
        SuccessfulShares:
          allOf:
          - $ref: '#/components/schemas/SuccessfulShares'
          - description: List of accounts for whom the operation succeeded.
          title: SuccessfulShares
        ShareErrors:
          allOf:
          - $ref: '#/components/schemas/ShareErrors'
          - description: List of errors.
          title: ShareErrors
      title: ShareDetails
      type: object
    DescribePortfolioShareType:
      enum:
      - ACCOUNT
      - ORGANIZATION
      - ORGANIZATIONAL_UNIT
      - ORGANIZATION_MEMBER_ACCOUNT
      title: DescribePortfolioShareType
      type: string
    PageToken:
      maxLength: 2024
      pattern: "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*"
      type: string
    PageSizeMax100:
      maximum: 100
      minimum: 0
      type: integer
    PortfolioShareDetails:
      items:
        $ref: '#/components/schemas/PortfolioShareDetail'
      type: array
    ProvisioningArtifactSummaries:
      items:
        $ref: '#/components/schemas/ProvisioningArtifactSummary'
      type: array
    ProductViewSummary:
      description: Summary information about a product view.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product view identifier.
          title: Id
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        Name:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The name of the product.
          title: Name
        Owner:
          allOf:
          - $ref: '#/components/schemas/ProductViewOwner'
          - description: The owner of the product. Contact the product administrator
              for the significance of this value.
          title: Owner
        ShortDescription:
          allOf:
          - $ref: '#/components/schemas/ProductViewShortDescription'
          - description: Short description of the product.
          title: ShortDescription
        Type:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          - description: "The product type. Contact the product administrator for\
              \ the significance of this value. If this value is <code>MARKETPLACE</code>,\
              \ the product was created by Amazon Web Services Marketplace."
          title: Type
        Distributor:
          allOf:
          - $ref: '#/components/schemas/ProductViewDistributor'
          - description: The distributor of the product. Contact the product administrator
              for the significance of this value.
          title: Distributor
        HasDefaultPath:
          allOf:
          - $ref: '#/components/schemas/HasDefaultPath'
          - description: "Indicates whether the product has a default path. If the\
              \ product does not have a default path, call <a>ListLaunchPaths</a>\
              \ to disambiguate between paths. Otherwise, <a>ListLaunchPaths</a> is\
              \ not required, and the output of <a>ProductViewSummary</a> can be used\
              \ directly with <a>DescribeProvisioningParameters</a>."
          title: HasDefaultPath
        SupportEmail:
          allOf:
          - $ref: '#/components/schemas/SupportEmail'
          - description: The email contact information to obtain support for this
              Product.
          title: SupportEmail
        SupportDescription:
          allOf:
          - $ref: '#/components/schemas/SupportDescription'
          - description: The description of the support for this Product.
          title: SupportDescription
        SupportUrl:
          allOf:
          - $ref: '#/components/schemas/SupportUrl'
          - description: The URL information to obtain support for this Product.
          title: SupportUrl
      title: ProductViewSummary
      type: object
    ProvisioningArtifacts:
      items:
        $ref: '#/components/schemas/ProvisioningArtifact'
      type: array
    LaunchPaths:
      items:
        $ref: '#/components/schemas/LaunchPath'
      type: array
    ProvisionedProductDetail:
      description: Information about a provisioned product.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          - description: The user-friendly name of the provisioned product.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          - description: The ARN of the provisioned product.
          title: Arn
        Type:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductType'
          - description: The type of provisioned product. The supported values are
              <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
          title: Type
        Id:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductId'
          - description: The identifier of the provisioned product.
          title: Id
        Status:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductStatus'
          - description: "<p>The current status of the provisioned product.</p> <ul>\
              \ <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any\
              \ operation. The most recent operation succeeded and completed.</p>\
              \ </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state. Operations\
              \ performed might not have valid results. Wait for an <code>AVAILABLE</code>\
              \ status before performing operations.</p> </li> <li> <p> <code>TAINTED</code>\
              \ - Stable state, ready to perform any operation. The stack has completed\
              \ the requested operation but is not exactly what was requested. For\
              \ example, a request to update to a new version failed and the stack\
              \ rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code>\
              \ - An unexpected error occurred. The provisioned product exists but\
              \ the stack is not running. For example, CloudFormation received a parameter\
              \ value that was not valid and could not launch the stack.</p> </li>\
              \ <li> <p> <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan\
              \ operations were performed to provision a new product, but resources\
              \ have not yet been created. After reviewing the list of resources to\
              \ be created, execute the plan. Wait for an <code>AVAILABLE</code> status\
              \ before performing operations.</p> </li> </ul>"
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          - description: The current status message of the provisioned product.
          title: StatusMessage
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
        LastRecordId:
          allOf:
          - $ref: '#/components/schemas/LastRequestId'
          - description: The record identifier of the last request performed on this
              provisioned product.
          title: LastRecordId
        LastProvisioningRecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: <p>The record identifier of the last request performed on
              this provisioned product of the following types:</p> <ul> <li> <p> ProvisionedProduct
              </p> </li> <li> <p> UpdateProvisionedProduct </p> </li> <li> <p> ExecuteProvisionedProductPlan
              </p> </li> <li> <p> TerminateProvisionedProduct </p> </li> </ul>
          title: LastProvisioningRecordId
        LastSuccessfulProvisioningRecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: <p>The record identifier of the last successful request performed
              on this provisioned product of the following types:</p> <ul> <li> <p>
              ProvisionedProduct </p> </li> <li> <p> UpdateProvisionedProduct </p>
              </li> <li> <p> ExecuteProvisionedProductPlan </p> </li> <li> <p> TerminateProvisionedProduct
              </p> </li> </ul>
          title: LastSuccessfulProvisioningRecordId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. For example, <code>prod-abcdzk7xy33qa</code>."
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. For example,\
              \ <code>pa-4abcdjnxjj6ne</code>."
          title: ProvisioningArtifactId
        LaunchRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the launch role associated with the provisioned
              product.
          title: LaunchRoleArn
      title: ProvisionedProductDetail
      type: object
    PageSize:
      maximum: 20
      minimum: 0
      type: integer
    ProvisionedProductPlanDetails:
      description: Information about a plan.
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        PathId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The path identifier of the product. This value is optional\
              \ if the product has a default path, and required if the product has\
              \ more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>."
          title: PathId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        PlanName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanName'
          - description: The name of the plan.
          title: PlanName
        PlanId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The plan identifier.
          title: PlanId
        ProvisionProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProvisionProductId
        ProvisionProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: The user-friendly name of the provisioned product.
          title: ProvisionProductName
        PlanType:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanType'
          - description: The plan type.
          title: PlanType
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        Status:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanStatus'
          - description: The status.
          title: Status
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdatedTime'
          - description: The UTC time stamp when the plan was last updated.
          title: UpdatedTime
        NotificationArns:
          allOf:
          - $ref: '#/components/schemas/NotificationArns'
          - description: Passed to CloudFormation. The SNS topic ARNs to which to
              publish stack-related events.
          title: NotificationArns
        ProvisioningParameters:
          allOf:
          - $ref: '#/components/schemas/UpdateProvisioningParameters'
          - description: Parameters specified by the administrator that are required
              for provisioning the product.
          title: ProvisioningParameters
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more tags.
          title: Tags
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The status message.
          title: StatusMessage
      title: ProvisionedProductPlanDetails
      type: object
    ResourceChanges:
      items:
        $ref: '#/components/schemas/ResourceChange'
      type: array
    ProvisioningArtifactName:
      maxLength: 8192
      type: string
    Verbose:
      type: boolean
    ProvisioningArtifactParameters:
      items:
        $ref: '#/components/schemas/ProvisioningArtifactParameter'
      type: array
    UsageInstructions:
      items:
        $ref: '#/components/schemas/UsageInstruction'
      type: array
    TagOptionSummaries:
      items:
        $ref: '#/components/schemas/TagOptionSummary'
      type: array
    ProvisioningArtifactPreferences:
      description: "<p>The user-defined preferences that will be applied during product\
        \ provisioning, unless overridden by <code>ProvisioningPreferences</code>\
        \ or <code>UpdateProvisioningPreferences</code>.</p> <p>For more information\
        \ on maximum concurrent accounts and failure tolerance, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options\"\
        >Stack set operation options</a> in the <i>CloudFormation User Guide</i>.</p>"
      properties:
        StackSetAccounts:
          allOf:
          - $ref: '#/components/schemas/StackSetAccounts'
          - description: <p>One or more Amazon Web Services accounts where stack instances
              are deployed from the stack set. These accounts can be scoped in <code>ProvisioningPreferences$StackSetAccounts</code>
              and <code>UpdateProvisioningPreferences$StackSetAccounts</code>.</p>
              <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product
              type.</p>
          title: StackSetAccounts
        StackSetRegions:
          allOf:
          - $ref: '#/components/schemas/StackSetRegions'
          - description: <p>One or more Amazon Web Services Regions where stack instances
              are deployed from the stack set. These Regions can be scoped in <code>ProvisioningPreferences$StackSetRegions</code>
              and <code>UpdateProvisioningPreferences$StackSetRegions</code>.</p>
              <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product
              type.</p>
          title: StackSetRegions
      title: ProvisioningArtifactPreferences
      type: object
    ProvisioningArtifactOutputs:
      items:
        $ref: '#/components/schemas/ProvisioningArtifactOutput'
      maxItems: 60
      type: array
    RecordDetail:
      description: Information about a request operation.
      example:
        Status: ""
        CreatedTime: ""
        ProvisionedProductType: ""
        ProductId: ""
        PathId: ""
        LaunchRoleArn: ""
        RecordType: ""
        RecordTags: ""
        ProvisionedProductId: ""
        RecordId: ""
        UpdatedTime: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
        RecordErrors: ""
      properties:
        RecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the record.
          title: RecordId
        ProvisionedProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: The user-friendly name of the provisioned product.
          title: ProvisionedProductName
        Status:
          allOf:
          - $ref: '#/components/schemas/RecordStatus'
          - description: "<p>The status of the provisioned product.</p> <ul> <li>\
              \ <p> <code>CREATED</code> - The request was created but the operation\
              \ has not started.</p> </li> <li> <p> <code>IN_PROGRESS</code> - The\
              \ requested operation is in progress.</p> </li> <li> <p> <code>IN_PROGRESS_IN_ERROR</code>\
              \ - The provisioned product is under change but the requested operation\
              \ failed and some remediation is occurring. For example, a rollback.</p>\
              \ </li> <li> <p> <code>SUCCEEDED</code> - The requested operation has\
              \ successfully completed.</p> </li> <li> <p> <code>FAILED</code> - The\
              \ requested operation has unsuccessfully completed. Investigate using\
              \ the error messages returned.</p> </li> </ul>"
          title: Status
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdatedTime'
          - description: The time when the record was last updated.
          title: UpdatedTime
        ProvisionedProductType:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductType'
          - description: The type of provisioned product. The supported values are
              <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
          title: ProvisionedProductType
        RecordType:
          allOf:
          - $ref: '#/components/schemas/RecordType'
          - description: <p>The record type.</p> <ul> <li> <p> <code>PROVISION_PRODUCT</code>
              </p> </li> <li> <p> <code>UPDATE_PROVISIONED_PRODUCT</code> </p> </li>
              <li> <p> <code>TERMINATE_PROVISIONED_PRODUCT</code> </p> </li> </ul>
          title: RecordType
        ProvisionedProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product.
          title: ProvisionedProductId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        PathId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The path identifier.
          title: PathId
        RecordErrors:
          allOf:
          - $ref: '#/components/schemas/RecordErrors'
          - description: The errors that occurred.
          title: RecordErrors
        RecordTags:
          allOf:
          - $ref: '#/components/schemas/RecordTags'
          - description: One or more tags.
          title: RecordTags
        LaunchRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the launch role associated with the provisioned
              product.
          title: LaunchRoleArn
      title: RecordDetail
      type: object
    RecordOutputs:
      items:
        $ref: '#/components/schemas/RecordOutput'
      type: array
    ExecutionParameters:
      items:
        $ref: '#/components/schemas/ExecutionParameter'
      type: array
    Description:
      type: string
    DisableTemplateValidation:
      type: boolean
    EngineWorkflowFailureReason:
      maxLength: 2048
      minLength: 1
      pattern: "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*"
      type: string
    UniqueTagResourceIdentifier:
      description: ' The unique key-value pair for a tag that identifies provisioned
        product resources. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/UniqueTagKey'
          - description: ' A unique key that''s attached to a resource. '
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/UniqueTagValue'
          - description: ' A unique value that''s attached to a resource. '
          title: Value
      title: UniqueTagResourceIdentifier
      type: object
    EngineWorkflowResourceIdentifier:
      description: ' The ID for the provisioned product resources that are part of
        a resource group. '
      properties:
        UniqueTag:
          $ref: '#/components/schemas/EngineWorkflowResourceIdentifier_UniqueTag'
      title: EngineWorkflowResourceIdentifier
      type: object
    EngineWorkflowStatus:
      enum:
      - SUCCEEDED
      - FAILED
      title: EngineWorkflowStatus
      type: string
    EngineWorkflowToken:
      maxLength: 20000
      minLength: 1
      pattern: "[0-9A-Za-z+\\/=]+"
      type: string
    Error:
      type: string
    ErrorCode:
      type: string
    ErrorDescription:
      type: string
    EvaluationType:
      enum:
      - STATIC
      - DYNAMIC
      title: EvaluationType
      type: string
    ExecutionParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/ExecutionParameterValueList'
      maxProperties: 200
      minProperties: 1
      type: object
    ExecutionParameterKey:
      maxLength: 50
      minLength: 1
      type: string
    ExecutionParameterType:
      maxLength: 1024
      minLength: 1
      type: string
    ExecutionParameterValueList:
      items:
        $ref: '#/components/schemas/ExecutionParameterValue'
      maxItems: 25
      minItems: 0
      title: ExecutionParameterValueList
      type: array
    ExecutionParameter:
      description: Details of an execution parameter value that is passed to a self-service
        action when executed on a provisioned product.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ExecutionParameterKey'
          - description: The name of the execution parameter.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/ExecutionParameterType'
          - description: The execution parameter type.
          title: Type
        DefaultValues:
          allOf:
          - $ref: '#/components/schemas/ExecutionParameterValueList'
          - description: The default values for the execution parameter.
          title: DefaultValues
      title: ExecutionParameter
      type: object
    ExecutionParameterValue:
      maxLength: 512
      minLength: 0
      title: ExecutionParameterValue
      type: string
    ServiceActionAssociationErrorCode:
      enum:
      - DUPLICATE_RESOURCE
      - INTERNAL_FAILURE
      - LIMIT_EXCEEDED
      - RESOURCE_NOT_FOUND
      - THROTTLING
      - INVALID_PARAMETER
      title: ServiceActionAssociationErrorCode
      type: string
    ServiceActionAssociationErrorMessage:
      maxLength: 1024
      minLength: 1
      type: string
    FailedServiceActionAssociation:
      description: "An object containing information about the error, along with identifying\
        \ information about the self-service action and its associations."
      properties:
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: ServiceActionId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. For example, <code>prod-abcdzk7xy33qa</code>."
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. For example,\
              \ <code>pa-4abcdjnxjj6ne</code>."
          title: ProvisioningArtifactId
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ServiceActionAssociationErrorCode'
          - description: The error code. Valid values are listed below.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ServiceActionAssociationErrorMessage'
          - description: A text description of the error.
          title: ErrorMessage
      title: FailedServiceActionAssociation
      type: object
    OutputKeys:
      items:
        $ref: '#/components/schemas/OutputKey'
      maxItems: 60
      type: array
    HasDefaultPath:
      type: boolean
    PhysicalId:
      type: string
    InstructionType:
      type: string
    InstructionValue:
      type: string
    LastRequestId:
      type: string
    LastSuccessfulSyncTime:
      format: date-time
      type: string
    LastSyncTime:
      format: date-time
      type: string
    LastSyncStatus:
      enum:
      - SUCCEEDED
      - FAILED
      title: LastSyncStatus
      type: string
    LastSyncStatusMessage:
      type: string
    LastSync:
      description: <p>Provides details about the product's connection sync and contains
        the following sub-fields. </p> <ul> <li> <p> <code>LastSyncTime</code> </p>
        </li> <li> <p> <code>LastSyncStatus</code> </p> </li> <li> <p> <code>LastSyncStatusMessage</code>
        </p> </li> <li> <p> <code>LastSuccessfulSyncTime</code> </p> </li> <li> <p>
        <code>LastSuccessfulSyncProvisioningArtifactID</code> </p> </li> </ul>
      properties:
        LastSyncTime:
          allOf:
          - $ref: '#/components/schemas/LastSyncTime'
          - description: 'The time of the last attempted sync from the repository
              to the Service Catalog product. '
          title: LastSyncTime
        LastSyncStatus:
          allOf:
          - $ref: '#/components/schemas/LastSyncStatus'
          - description: 'The current status of the sync. Responses include <code>SUCCEEDED</code>
              or <code>FAILED</code>. '
          title: LastSyncStatus
        LastSyncStatusMessage:
          allOf:
          - $ref: '#/components/schemas/LastSyncStatusMessage'
          - description: 'The sync''s status message. '
          title: LastSyncStatusMessage
        LastSuccessfulSyncTime:
          allOf:
          - $ref: '#/components/schemas/LastSuccessfulSyncTime'
          - description: The time of the latest successful sync from the source repo
              artifact to the Service Catalog product.
          title: LastSuccessfulSyncTime
        LastSuccessfulSyncProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: 'The ProvisioningArtifactID of the ProvisioningArtifact created
              from the latest successful sync. '
          title: LastSuccessfulSyncProvisioningArtifactId
      title: LastSync
      type: object
    PortfolioName:
      type: string
    LaunchPath:
      description: A launch path object.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the launch path.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/PortfolioName'
          - description: The name of the launch path.
          title: Name
      title: LaunchPath
      type: object
    LaunchPathSummary:
      description: Summary information about a product path for a user.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the product path.
          title: Id
        ConstraintSummaries:
          allOf:
          - $ref: '#/components/schemas/ConstraintSummaries'
          - description: The constraints on the portfolio-product relationship.
          title: ConstraintSummaries
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with this product path.
          title: Tags
        Name:
          allOf:
          - $ref: '#/components/schemas/PortfolioName'
          - description: 'The name of the portfolio that contains the product. '
          title: Name
      title: LaunchPathSummary
      type: object
    LaunchPathSummaries:
      items:
        $ref: '#/components/schemas/LaunchPathSummary'
      type: array
    PortfolioDetails:
      items:
        $ref: '#/components/schemas/PortfolioDetail'
      type: array
    OrganizationNodeType:
      enum:
      - ORGANIZATION
      - ORGANIZATIONAL_UNIT
      - ACCOUNT
      title: OrganizationNodeType
      type: string
    OrganizationNodes:
      items:
        $ref: '#/components/schemas/OrganizationNode'
      type: array
    Principals:
      items:
        $ref: '#/components/schemas/Principal'
      type: array
    ProvisionedProductPlans:
      items:
        $ref: '#/components/schemas/ProvisionedProductPlanSummary'
      type: array
    ProvisioningArtifactViews:
      items:
        $ref: '#/components/schemas/ProvisioningArtifactView'
      type: array
    ProvisioningArtifactDetails:
      items:
        $ref: '#/components/schemas/ProvisioningArtifactDetail'
      type: array
    ListRecordHistorySearchFilter:
      description: The search filter to use when listing history records.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SearchFilterKey'
          - description: <p>The filter key.</p> <ul> <li> <p> <code>product</code>
              - Filter results based on the specified product identifier.</p> </li>
              <li> <p> <code>provisionedproduct</code> - Filter results based on the
              provisioned product identifier.</p> </li> </ul>
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/SearchFilterValue'
          - description: The filter value.
          title: Value
      title: ListRecordHistorySearchFilter
      type: object
    RecordDetails:
      items:
        $ref: '#/components/schemas/RecordDetail'
      type: array
    SearchFilterKey:
      type: string
    SearchFilterValue:
      type: string
    ResourceType:
      type: string
    ResourceDetails:
      items:
        $ref: '#/components/schemas/ResourceDetail'
      type: array
    ServiceActionSummaries:
      items:
        $ref: '#/components/schemas/ServiceActionSummary'
      type: array
    StackInstances:
      items:
        $ref: '#/components/schemas/StackInstance'
      type: array
    TagOptionActive:
      type: boolean
    ListTagOptionsFilters:
      description: Filters to use when listing TagOptions.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagOptionKey'
          - description: The TagOption key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagOptionValue'
          - description: The TagOption value.
          title: Value
        Active:
          allOf:
          - $ref: '#/components/schemas/TagOptionActive'
          - description: The active state.
          title: Active
      title: ListTagOptionsFilters
      type: object
    LogicalResourceId:
      type: string
    Message:
      type: string
    Namespaces:
      items:
        $ref: '#/components/schemas/AccountId'
      type: array
    NoEcho:
      type: boolean
    NotificationArn:
      maxLength: 1224
      minLength: 1
      pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
        .]{0,63}:[^/].{0,1023}"
      title: NotificationArn
      type: string
    NullableBoolean:
      type: boolean
    OutputDescription:
      maxLength: 1024
      type: string
    OutputKey:
      title: OutputKey
      type: string
    OutputValue:
      type: string
    Owner:
      type: string
    ParameterConstraints:
      description: The constraints that the administrator has put on the parameter.
      properties:
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/AllowedValues'
          - description: The values that the administrator has allowed for the parameter.
          title: AllowedValues
        AllowedPattern:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A regular expression that represents the patterns that allow
              for <code>String</code> types. The pattern must match the entire parameter
              value provided.
          title: AllowedPattern
        ConstraintDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A string that explains a constraint when the constraint\
              \ is violated. For example, without a constraint description, a parameter\
              \ that has an allowed pattern of <code>[A-Za-z0-9]+</code> displays\
              \ the following error message when the user specifies an invalid value:</p>\
              \ <p> <code>Malformed input-Parameter MyParameter must match pattern\
              \ [A-Za-z0-9]+</code> </p> <p>By adding a constraint description, such\
              \ as must only contain letters (uppercase and lowercase) and numbers,\
              \ you can display the following customized error message:</p> <p> <code>Malformed\
              \ input-Parameter MyParameter must only contain uppercase and lowercase\
              \ letters and numbers.</code> </p>"
          title: ConstraintDescription
        MaxLength:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'An integer value that determines the largest number of characters
              you want to allow for <code>String</code> types. '
          title: MaxLength
        MinLength:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An integer value that determines the smallest number of characters
              you want to allow for <code>String</code> types.
          title: MinLength
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A numeric value that determines the largest numeric value
              you want to allow for <code>Number</code> types.
          title: MaxValue
        MinValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'A numeric value that determines the smallest numeric value
              you want to allow for <code>Number</code> types. '
          title: MinValue
      title: ParameterConstraints
      type: object
    ParameterKey:
      maxLength: 1000
      minLength: 1
      type: string
    ParameterType:
      type: string
    ParameterValue:
      maxLength: 4096
      type: string
    PhysicalResourceId:
      type: string
    PlanResourceType:
      maxLength: 256
      minLength: 1
      type: string
    ResourceARN:
      maxLength: 150
      minLength: 1
      type: string
    PortfolioShareDetail:
      description: Information about the portfolio share.
      properties:
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: <p>The identifier of the recipient entity that received the
              portfolio share. The recipient entity can be one of the following:</p>
              <p>1. An external account.</p> <p>2. An organziation member account.</p>
              <p>3. An organzational unit (OU).</p> <p>4. The organization itself.
              (This shares with every account in the organization).</p>
          title: PrincipalId
        Type:
          allOf:
          - $ref: '#/components/schemas/DescribePortfolioShareType'
          - description: The type of the portfolio share.
          title: Type
        Accepted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether the shared portfolio is imported by the\
              \ recipient account. If the recipient is in an organization node, the\
              \ share is automatically imported, and the field is always set to true."
          title: Accepted
        ShareTagOptions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether TagOptions sharing is enabled or disabled
              for the portfolio share.
          title: ShareTagOptions
        SharePrincipals:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Indicates if <code>Principal</code> sharing is enabled or
              disabled for the portfolio share. '
          title: SharePrincipals
      title: PortfolioShareDetail
      type: object
    Principal:
      description: Information about a principal.
      properties:
        PrincipalARN:
          allOf:
          - $ref: '#/components/schemas/PrincipalARN'
          - description: "<p>The ARN of the principal (user, role, or group). This\
              \ field allows for an ARN with no <code>accountID</code>, with or without\
              \ wildcard characters if the <code>PrincipalType</code> is an <code>IAM_PATTERN</code>.\
              \ </p> <p>For more information, review <a href=\"https://docs.aws.amazon.com/cli/latest/reference/servicecatalog/associate-principal-with-portfolio.html#options\"\
              >associate-principal-with-portfolio</a> in the Amazon Web Services CLI\
              \ Command Reference. </p>"
          title: PrincipalARN
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: "The principal type. The supported value is <code>IAM</code>\
              \ if you use a fully defined ARN, or <code>IAM_PATTERN</code> if you\
              \ use an ARN with no <code>accountID</code>, with or without wildcard\
              \ characters. "
          title: PrincipalType
      title: Principal
      type: object
    ProductSource:
      enum:
      - ACCOUNT
      title: ProductSource
      type: string
    ProductViewAggregationType:
      type: string
    ProductViewAggregationValue:
      description: "A single product view aggregation value/count pair, containing\
        \ metadata about each product to which the calling user has access."
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/AttributeValue'
          - description: The value of the product view aggregation.
          title: Value
        ApproximateCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateCount'
          - description: An approximate count of the products that match the value.
          title: ApproximateCount
      title: ProductViewAggregationValue
      type: object
    ProductViewAggregationValues:
      items:
        $ref: '#/components/schemas/ProductViewAggregationValue'
      title: ProductViewAggregationValues
      type: array
    ProductViewAggregations:
      additionalProperties:
        $ref: '#/components/schemas/ProductViewAggregationValues'
      type: object
    SourceConnectionDetail:
      description: 'Provides details about the configured <code>SourceConnection</code>. '
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: The only supported <code>SourceConnection</code> type is
              Codestar.
          title: Type
        ConnectionParameters:
          $ref: '#/components/schemas/SourceConnectionDetail_ConnectionParameters'
        LastSync:
          $ref: '#/components/schemas/SourceConnectionDetail_LastSync'
      title: SourceConnectionDetail
      type: object
    ProductViewDetails:
      items:
        $ref: '#/components/schemas/ProductViewDetail'
      type: array
    ProductViewDistributor:
      type: string
    ProductViewFilterBy:
      enum:
      - FullTextSearch
      - Owner
      - ProductType
      - SourceProductId
      type: string
    ProductViewFilterValue:
      title: ProductViewFilterValue
      type: string
    ProductViewFilterValues:
      items:
        $ref: '#/components/schemas/ProductViewFilterValue'
      title: ProductViewFilterValues
      type: array
    ProductViewFilters:
      additionalProperties:
        $ref: '#/components/schemas/ProductViewFilterValues'
      type: object
    ProductViewSortBy:
      enum:
      - Title
      - VersionCount
      - CreationDate
      title: ProductViewSortBy
      type: string
    ProductViewSummaries:
      items:
        $ref: '#/components/schemas/ProductViewSummary'
      type: array
    PropertyKey:
      enum:
      - OWNER
      - LAUNCH_ROLE
      maxLength: 128
      minLength: 1
      type: string
    PropertyName:
      type: string
    PropertyValue:
      maxLength: 1024
      minLength: 0
      title: PropertyValue
      type: string
    ProvisioningParameters:
      items:
        $ref: '#/components/schemas/ProvisioningParameter'
      type: array
    ProvisioningPreferences:
      description: "<p>The user-defined preferences that will be applied when updating\
        \ a provisioned product. Not all preferences are applicable to all provisioned\
        \ product type</p> <p>One or more Amazon Web Services accounts that will have\
        \ access to the provisioned product.</p> <p>Applicable only to a <code>CFN_STACKSET</code>\
        \ provisioned product type.</p> <p>The Amazon Web Services accounts specified\
        \ should be within the list of accounts in the <code>STACKSET</code> constraint.\
        \ To get the list of accounts in the <code>STACKSET</code> constraint, use\
        \ the <code>DescribeProvisioningParameters</code> operation.</p> <p>If no\
        \ values are specified, the default value is all accounts from the <code>STACKSET</code>\
        \ constraint.</p>"
      properties:
        StackSetAccounts:
          allOf:
          - $ref: '#/components/schemas/StackSetAccounts'
          - description: "<p>One or more Amazon Web Services accounts where the provisioned\
              \ product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code>\
              \ provisioned product type.</p> <p>The specified accounts should be\
              \ within the list of accounts from the <code>STACKSET</code> constraint.\
              \ To get the list of accounts in the <code>STACKSET</code> constraint,\
              \ use the <code>DescribeProvisioningParameters</code> operation.</p>\
              \ <p>If no values are specified, the default value is all acounts from\
              \ the <code>STACKSET</code> constraint.</p>"
          title: StackSetAccounts
        StackSetRegions:
          allOf:
          - $ref: '#/components/schemas/StackSetRegions'
          - description: "<p>One or more Amazon Web Services Regions where the provisioned\
              \ product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code>\
              \ provisioned product type.</p> <p>The specified Regions should be within\
              \ the list of Regions from the <code>STACKSET</code> constraint. To\
              \ get the list of Regions in the <code>STACKSET</code> constraint, use\
              \ the <code>DescribeProvisioningParameters</code> operation.</p> <p>If\
              \ no values are specified, the default value is all Regions from the\
              \ <code>STACKSET</code> constraint.</p>"
          title: StackSetRegions
        StackSetFailureToleranceCount:
          allOf:
          - $ref: '#/components/schemas/StackSetFailureToleranceCount'
          - description: "<p>The number of accounts, per Region, for which this operation\
              \ can fail before Service Catalog stops the operation in that Region.\
              \ If the operation is stopped in a Region, Service Catalog doesn't attempt\
              \ the operation in any subsequent Regions.</p> <p>Applicable only to\
              \ a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional:\
              \ You must specify either <code>StackSetFailureToleranceCount</code>\
              \ or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>\
              \ <p>The default value is <code>0</code> if no value is specified.</p>"
          title: StackSetFailureToleranceCount
        StackSetFailureTolerancePercentage:
          allOf:
          - $ref: '#/components/schemas/StackSetFailureTolerancePercentage'
          - description: "<p>The percentage of accounts, per Region, for which this\
              \ stack operation can fail before Service Catalog stops the operation\
              \ in that Region. If the operation is stopped in a Region, Service Catalog\
              \ doesn't attempt the operation in any subsequent Regions.</p> <p>When\
              \ calculating the number of accounts based on the specified percentage,\
              \ Service Catalog rounds down to the next whole number.</p> <p>Applicable\
              \ only to a <code>CFN_STACKSET</code> provisioned product type.</p>\
              \ <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code>\
              \ or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>"
          title: StackSetFailureTolerancePercentage
        StackSetMaxConcurrencyCount:
          allOf:
          - $ref: '#/components/schemas/StackSetMaxConcurrencyCount'
          - description: "<p>The maximum number of accounts in which to perform this\
              \ operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>.\
              \ <code>StackSetMaxConcurrentCount</code> is at most one more than the\
              \ <code>StackSetFailureToleranceCount</code>.</p> <p>Note that this\
              \ setting lets you specify the maximum for operations. For large deployments,\
              \ under certain circumstances the actual number of accounts acted upon\
              \ concurrently may be lower due to service throttling.</p> <p>Applicable\
              \ only to a <code>CFN_STACKSET</code> provisioned product type.</p>\
              \ <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code>\
              \ or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>"
          title: StackSetMaxConcurrencyCount
        StackSetMaxConcurrencyPercentage:
          allOf:
          - $ref: '#/components/schemas/StackSetMaxConcurrencyPercentage'
          - description: "<p>The maximum percentage of accounts in which to perform\
              \ this operation at one time.</p> <p>When calculating the number of\
              \ accounts based on the specified percentage, Service Catalog rounds\
              \ down to the next whole number. This is true except in cases where\
              \ rounding down would result is zero. In this case, Service Catalog\
              \ sets the number as <code>1</code> instead.</p> <p>Note that this setting\
              \ lets you specify the maximum for operations. For large deployments,\
              \ under certain circumstances the actual number of accounts acted upon\
              \ concurrently may be lower due to service throttling.</p> <p>Applicable\
              \ only to a <code>CFN_STACKSET</code> provisioned product type.</p>\
              \ <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code>\
              \ or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>"
          title: StackSetMaxConcurrencyPercentage
      title: ProvisioningPreferences
      type: object
    ProvisionedProductNameOrArn:
      maxLength: 1224
      minLength: 1
      pattern: "[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\\
        .]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}"
      type: string
    ProvisionedProductType:
      type: string
    ProvisionedProductStatus:
      enum:
      - AVAILABLE
      - UNDER_CHANGE
      - TAINTED
      - ERROR
      - PLAN_IN_PROGRESS
      title: ProvisionedProductStatus
      type: string
    ProvisionedProductStatusMessage:
      type: string
    UserArn:
      type: string
    UserArnSession:
      type: string
    ProvisionedProductAttribute:
      description: Information about a provisioned product.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          - description: The user-friendly name of the provisioned product.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductNameOrArn'
          - description: The ARN of the provisioned product.
          title: Arn
        Type:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductType'
          - description: The type of provisioned product. The supported values are
              <code>CFN_STACK</code> and <code>CFN_STACKSET</code>.
          title: Type
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioned product.
          title: Id
        Status:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductStatus'
          - description: "<p>The current status of the provisioned product.</p> <ul>\
              \ <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any\
              \ operation. The most recent operation succeeded and completed.</p>\
              \ </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state. Operations\
              \ performed might not have valid results. Wait for an <code>AVAILABLE</code>\
              \ status before performing operations.</p> </li> <li> <p> <code>TAINTED</code>\
              \ - Stable state, ready to perform any operation. The stack has completed\
              \ the requested operation but is not exactly what was requested. For\
              \ example, a request to update to a new version failed and the stack\
              \ rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code>\
              \ - An unexpected error occurred. The provisioned product exists but\
              \ the stack is not running. For example, CloudFormation received a parameter\
              \ value that was not valid and could not launch the stack.</p> </li>\
              \ <li> <p> <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan\
              \ operations were performed to provision a new product, but resources\
              \ have not yet been created. After reviewing the list of resources to\
              \ be created, execute the plan. Wait for an <code>AVAILABLE</code> status\
              \ before performing operations.</p> </li> </ul>"
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          - description: The current status message of the provisioned product.
          title: StatusMessage
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier that you provide to ensure idempotency.\
              \ If multiple requests differ only by the idempotency token, the same\
              \ response is returned for each repeated request."
          title: IdempotencyToken
        LastRecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The record identifier of the last request performed on this
              provisioned product.
          title: LastRecordId
        LastProvisioningRecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: <p>The record identifier of the last request performed on
              this provisioned product of the following types:</p> <ul> <li> <p> ProvisionedProduct
              </p> </li> <li> <p> UpdateProvisionedProduct </p> </li> <li> <p> ExecuteProvisionedProductPlan
              </p> </li> <li> <p> TerminateProvisionedProduct </p> </li> </ul>
          title: LastProvisioningRecordId
        LastSuccessfulProvisioningRecordId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: <p>The record identifier of the last successful request performed
              on this provisioned product of the following types:</p> <ul> <li> <p>
              ProvisionedProduct </p> </li> <li> <p> UpdateProvisionedProduct </p>
              </li> <li> <p> ExecuteProvisionedProductPlan </p> </li> <li> <p> TerminateProvisionedProduct
              </p> </li> </ul>
          title: LastSuccessfulProvisioningRecordId
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more tags.
          title: Tags
        PhysicalId:
          allOf:
          - $ref: '#/components/schemas/PhysicalId'
          - description: "The assigned identifier for the resource, such as an EC2\
              \ instance ID or an S3 bucket name."
          title: PhysicalId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProductId
        ProductName:
          allOf:
          - $ref: '#/components/schemas/ProductViewName'
          - description: The name of the product.
          title: ProductName
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
        ProvisioningArtifactName:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The name of the provisioning artifact.
          title: ProvisioningArtifactName
        UserArn:
          allOf:
          - $ref: '#/components/schemas/UserArn'
          - description: The Amazon Resource Name (ARN) of the user.
          title: UserArn
        UserArnSession:
          allOf:
          - $ref: '#/components/schemas/UserArnSession'
          - description: The ARN of the user in the session. This ARN might contain
              a session ID.
          title: UserArnSession
      title: ProvisionedProductAttribute
      type: object
    ProvisionedProductAttributes:
      items:
        $ref: '#/components/schemas/ProvisionedProductAttribute'
      type: array
    ProvisionedProductId:
      type: string
    RoleArn:
      maxLength: 1224
      minLength: 1
      pattern: "arn:[a-z0-9-\\.]{1,63}:iam::[a-z0-9-\\.]{0,63}:role\\/.{0,1023}"
      type: string
    ProvisionedProductDetails:
      items:
        $ref: '#/components/schemas/ProvisionedProductDetail'
      type: array
    ProvisionedProductViewFilterValues:
      items:
        $ref: '#/components/schemas/ProvisionedProductViewFilterValue'
      title: ProvisionedProductViewFilterValues
      type: array
    ProvisionedProductFilters:
      additionalProperties:
        $ref: '#/components/schemas/ProvisionedProductViewFilterValues'
      type: object
    ProvisionedProductPlanStatus:
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_SUCCESS
      - CREATE_FAILED
      - EXECUTE_IN_PROGRESS
      - EXECUTE_SUCCESS
      - EXECUTE_FAILED
      title: ProvisionedProductPlanStatus
      type: string
    UpdatedTime:
      format: date-time
      type: string
    StatusMessage:
      pattern: "[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]*"
      type: string
    ProvisionedProductPlanSummary:
      description: Summary information about a plan.
      properties:
        PlanName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanName'
          - description: The name of the plan.
          title: PlanName
        PlanId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The plan identifier.
          title: PlanId
        ProvisionProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The product identifier.
          title: ProvisionProductId
        ProvisionProductName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductName'
          - description: The user-friendly name of the provisioned product.
          title: ProvisionProductName
        PlanType:
          allOf:
          - $ref: '#/components/schemas/ProvisionedProductPlanType'
          - description: The plan type.
          title: PlanType
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: ProvisioningArtifactId
      title: ProvisionedProductPlanSummary
      type: object
    ProvisionedProductProperties:
      additionalProperties:
        $ref: '#/components/schemas/PropertyValue'
      maxProperties: 100
      minProperties: 1
      type: object
    ProvisionedProductViewFilterBy:
      enum:
      - SearchQuery
      type: string
    ProvisionedProductViewFilterValue:
      title: ProvisionedProductViewFilterValue
      type: string
    ProvisioningArtifactDescription:
      maxLength: 8192
      type: string
    ProvisioningArtifactCreatedTime:
      format: date-time
      type: string
    ProvisioningArtifactGuidance:
      enum:
      - DEFAULT
      - DEPRECATED
      title: ProvisioningArtifactGuidance
      type: string
    ProvisioningArtifact:
      description: Information about a provisioning artifact. A provisioning artifact
        is also known as a product version.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The name of the provisioning artifact.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactDescription'
          - description: The description of the provisioning artifact.
          title: Description
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactCreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        Guidance:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactGuidance'
          - description: Information set by the administrator to provide guidance
              to end users about which provisioning artifacts to use.
          title: Guidance
      title: ProvisioningArtifact
      type: object
    ProvisioningArtifactActive:
      type: boolean
    ProvisioningArtifactType:
      enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE_AMI
      - MARKETPLACE_CAR
      - TERRAFORM_OPEN_SOURCE
      title: ProvisioningArtifactType
      type: string
    SourceRevision:
      maxLength: 512
      minLength: 1
      type: string
    ProvisioningArtifactInfoValue:
      title: ProvisioningArtifactInfoValue
      type: string
    ProvisioningArtifactInfoKey:
      type: string
    ProvisioningArtifactOutputKey:
      maxLength: 255
      minLength: 1
      pattern: "[a-zA-Z0-9]*"
      type: string
    ProvisioningArtifactOutput:
      description: Provisioning artifact output.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactOutputKey'
          - description: The provisioning artifact output key.
          title: Key
        Description:
          allOf:
          - $ref: '#/components/schemas/OutputDescription'
          - description: Description of the provisioning artifact output key.
          title: Description
      title: ProvisioningArtifactOutput
      type: object
    ProvisioningArtifactParameter:
      description: Information about a parameter used to provision a product.
      properties:
        ParameterKey:
          allOf:
          - $ref: '#/components/schemas/ParameterKey'
          - description: The parameter key.
          title: ParameterKey
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/DefaultValue'
          - description: The default value.
          title: DefaultValue
        ParameterType:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          - description: The parameter type.
          title: ParameterType
        IsNoEcho:
          allOf:
          - $ref: '#/components/schemas/NoEcho'
          - description: "If this value is true, the value for this parameter is obfuscated\
              \ from view when the parameter is retrieved. This parameter is used\
              \ to hide sensitive information."
          title: IsNoEcho
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the parameter.
          title: Description
        ParameterConstraints:
          $ref: '#/components/schemas/ProvisioningArtifactParameter_ParameterConstraints'
      title: ProvisioningArtifactParameter
      type: object
    StackSetAccounts:
      items:
        $ref: '#/components/schemas/AccountId'
      type: array
    StackSetRegions:
      items:
        $ref: '#/components/schemas/Region'
      type: array
    ProvisioningArtifactPropertyName:
      enum:
      - Id
      type: string
    ProvisioningArtifactPropertyValue:
      title: ProvisioningArtifactPropertyValue
      type: string
    ProvisioningArtifactSummary:
      description: Summary information about a provisioning artifact (also known as
        a version) for a product.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the provisioning artifact.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactName'
          - description: The name of the provisioning artifact.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactDescription'
          - description: The description of the provisioning artifact.
          title: Description
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactCreatedTime'
          - description: The UTC time stamp of the creation time.
          title: CreatedTime
        ProvisioningArtifactMetadata:
          allOf:
          - $ref: '#/components/schemas/ProvisioningArtifactInfo'
          - description: The metadata for the provisioning artifact. This is used
              with Amazon Web Services Marketplace products.
          title: ProvisioningArtifactMetadata
      title: ProvisioningArtifactSummary
      type: object
    ProvisioningArtifactView:
      description: An object that contains summary information about a product view
        and a provisioning artifact.
      properties:
        ProductViewSummary:
          $ref: '#/components/schemas/ProvisioningArtifactView_ProductViewSummary'
        ProvisioningArtifact:
          $ref: '#/components/schemas/ProvisioningArtifactView_ProvisioningArtifact'
      title: ProvisioningArtifactView
      type: object
    ProvisioningParameter:
      description: Information about a parameter used to provision a product.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ParameterKey'
          - description: The parameter key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          - description: The parameter value.
          title: Value
      title: ProvisioningParameter
      type: object
    StackSetFailureToleranceCount:
      minimum: 0
      type: integer
    StackSetFailureTolerancePercentage:
      maximum: 100
      minimum: 0
      type: integer
    StackSetMaxConcurrencyCount:
      minimum: 1
      type: integer
    StackSetMaxConcurrencyPercentage:
      maximum: 100
      minimum: 1
      type: integer
    RecordStatus:
      enum:
      - CREATED
      - IN_PROGRESS
      - IN_PROGRESS_IN_ERROR
      - SUCCEEDED
      - FAILED
      title: RecordStatus
      type: string
    RecordType:
      type: string
    RecordErrors:
      items:
        $ref: '#/components/schemas/RecordError'
      type: array
    RecordTags:
      items:
        $ref: '#/components/schemas/RecordTag'
      maxItems: 50
      type: array
    RecordError:
      description: The error code and description resulting from an operation.
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The numeric value of the error.
          title: Code
        Description:
          allOf:
          - $ref: '#/components/schemas/ErrorDescription'
          - description: The description of the error.
          title: Description
      title: RecordError
      type: object
    RecordOutput:
      description: "The output for the product created as the result of a request.\
        \ For example, the output for a CloudFormation-backed product that creates\
        \ an S3 bucket would include the S3 bucket URL."
      properties:
        OutputKey:
          allOf:
          - $ref: '#/components/schemas/OutputKey'
          - description: The output key.
          title: OutputKey
        OutputValue:
          allOf:
          - $ref: '#/components/schemas/OutputValue'
          - description: The output value.
          title: OutputValue
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the output.
          title: Description
      title: RecordOutput
      type: object
    RecordTagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    RecordTagValue:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    RecordTag:
      description: "Information about a tag, which is a key-value pair."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/RecordTagKey'
          - description: The key for this tag.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/RecordTagValue'
          - description: The value for this tag.
          title: Value
      title: RecordTag
      type: object
    Region:
      title: Region
      type: string
    Replacement:
      enum:
      - "TRUE"
      - "FALSE"
      - CONDITIONAL
      title: Replacement
      type: string
    RequiresRecreation:
      enum:
      - NEVER
      - CONDITIONALLY
      - ALWAYS
      title: RequiresRecreation
      type: string
    ResourceAttribute:
      enum:
      - PROPERTIES
      - METADATA
      - CREATIONPOLICY
      - UPDATEPOLICY
      - DELETIONPOLICY
      - TAGS
      title: ResourceAttribute
      type: string
    Scope:
      items:
        $ref: '#/components/schemas/ResourceAttribute'
      type: array
    ResourceChangeDetails:
      items:
        $ref: '#/components/schemas/ResourceChangeDetail'
      type: array
    ResourceChange:
      description: Information about a resource change that will occur when a plan
        is executed.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/ChangeAction'
          - description: The change action.
          title: Action
        LogicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          - description: "The ID of the resource, as defined in the CloudFormation\
              \ template."
          title: LogicalResourceId
        PhysicalResourceId:
          allOf:
          - $ref: '#/components/schemas/PhysicalResourceId'
          - description: "The ID of the resource, if it was already created."
          title: PhysicalResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PlanResourceType'
          - description: The type of resource.
          title: ResourceType
        Replacement:
          allOf:
          - $ref: '#/components/schemas/Replacement'
          - description: "If the change type is <code>Modify</code>, indicates whether\
              \ the existing resource is deleted and replaced with a new one."
          title: Replacement
        Scope:
          allOf:
          - $ref: '#/components/schemas/Scope'
          - description: The change scope.
          title: Scope
        Details:
          allOf:
          - $ref: '#/components/schemas/ResourceChangeDetails'
          - description: Information about the resource changes.
          title: Details
      title: ResourceChange
      type: object
    ResourceTargetDefinition:
      description: Information about a change to a resource attribute.
      properties:
        Attribute:
          allOf:
          - $ref: '#/components/schemas/ResourceAttribute'
          - description: The attribute to be changed.
          title: Attribute
        Name:
          allOf:
          - $ref: '#/components/schemas/PropertyName'
          - description: "If the attribute is <code>Properties</code>, the value is\
              \ the name of the property. Otherwise, the value is null."
          title: Name
        RequiresRecreation:
          allOf:
          - $ref: '#/components/schemas/RequiresRecreation'
          - description: "If the attribute is <code>Properties</code>, indicates whether\
              \ a change to this property causes the resource to be re-created."
          title: RequiresRecreation
      title: ResourceTargetDefinition
      type: object
    ResourceChangeDetail:
      description: Information about a change to a resource attribute.
      properties:
        Target:
          $ref: '#/components/schemas/ResourceChangeDetail_Target'
        Evaluation:
          allOf:
          - $ref: '#/components/schemas/EvaluationType'
          - description: "For static evaluations, the value of the resource attribute\
              \ will change and the new value is known. For dynamic evaluations, the\
              \ value might change, and any new value will be determined when the\
              \ plan is updated."
          title: Evaluation
        CausingEntity:
          allOf:
          - $ref: '#/components/schemas/CausingEntity'
          - description: The ID of the entity that caused the change.
          title: CausingEntity
      title: ResourceChangeDetail
      type: object
    ResourceDetailId:
      type: string
    ResourceDetailARN:
      type: string
    ResourceDetailName:
      type: string
    ResourceDetailDescription:
      type: string
    ResourceDetailCreatedTime:
      format: date-time
      type: string
    ResourceDetail:
      description: Information about a resource.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceDetailId'
          - description: The identifier of the resource.
          title: Id
        ARN:
          allOf:
          - $ref: '#/components/schemas/ResourceDetailARN'
          - description: The ARN of the resource.
          title: ARN
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceDetailName'
          - description: The name of the resource.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDetailDescription'
          - description: The description of the resource.
          title: Description
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/ResourceDetailCreatedTime'
          - description: The creation time of the resource.
          title: CreatedTime
      title: ResourceDetail
      type: object
    RetainPhysicalResources:
      type: boolean
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      title: SortOrder
      type: string
    SortField:
      type: string
    SearchProvisionedProductsPageSize:
      maximum: 100
      minimum: 0
      type: integer
    TotalResultsCount:
      type: integer
    ServiceActionAssociation:
      description: "A self-service action association consisting of the Action ID,\
        \ the Product ID, and the Provisioning Artifact ID."
      properties:
        ServiceActionId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The self-service action identifier. For example, <code>act-fs7abcd89wxyz</code>."
          title: ServiceActionId
        ProductId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The product identifier. For example, <code>prod-abcdzk7xy33qa</code>."
          title: ProductId
        ProvisioningArtifactId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: "The identifier of the provisioning artifact. For example,\
              \ <code>pa-4abcdjnxjj6ne</code>."
          title: ProvisioningArtifactId
      required:
      - ProductId
      - ProvisioningArtifactId
      - ServiceActionId
      title: ServiceActionAssociation
      type: object
    ServiceActionDefinitionKey:
      enum:
      - Name
      - Version
      - AssumeRole
      - Parameters
      type: string
    ServiceActionDefinitionValue:
      maxLength: 1024
      minLength: 1
      title: ServiceActionDefinitionValue
      type: string
    ServiceActionSummary:
      description: Detailed information about the self-service action.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The self-service action identifier.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceActionName'
          - description: The self-service action name.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDescription'
          - description: The self-service action description.
          title: Description
        DefinitionType:
          allOf:
          - $ref: '#/components/schemas/ServiceActionDefinitionType'
          - description: "The self-service action definition type. For example, <code>SSM_AUTOMATION</code>."
          title: DefinitionType
      title: ServiceActionSummary
      type: object
    SuccessfulShares:
      items:
        $ref: '#/components/schemas/AccountId'
      type: array
    ShareErrors:
      items:
        $ref: '#/components/schemas/ShareError'
      type: array
    ShareError:
      description: Errors that occurred during the portfolio share operation.
      properties:
        Accounts:
          allOf:
          - $ref: '#/components/schemas/Namespaces'
          - description: List of accounts impacted by the error.
          title: Accounts
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: Information about the error.
          title: Message
        Error:
          allOf:
          - $ref: '#/components/schemas/Error'
          - description: Error type that happened when processing the operation.
          title: Error
      title: ShareError
      type: object
    SourceType:
      enum:
      - CODESTAR
      title: SourceType
      type: string
    SourceConnectionParameters:
      description: Provides connection details.
      properties:
        CodeStar:
          $ref: '#/components/schemas/SourceConnectionParameters_CodeStar'
      title: SourceConnectionParameters
      type: object
    SourceProvisioningArtifactPropertiesMap:
      additionalProperties:
        $ref: '#/components/schemas/ProvisioningArtifactPropertyValue'
      title: SourceProvisioningArtifactPropertiesMap
      type: object
    StackInstanceStatus:
      enum:
      - CURRENT
      - OUTDATED
      - INOPERABLE
      title: StackInstanceStatus
      type: string
    StackInstance:
      description: "An CloudFormation stack, in a specific account and Region, that's\
        \ part of a stack set operation. A stack instance is a reference to an attempted\
        \ or actual stack in a given account within a given Region. A stack instance\
        \ can exist without a stack—for example, if the stack couldn't be created\
        \ for some reason. A stack instance is associated with only one stack set.\
        \ Each stack instance contains the ID of its associated stack set, as well\
        \ as the ID of the actual stack and the stack status. "
      properties:
        Account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The name of the Amazon Web Services account that the stack
              instance is associated with.
          title: Account
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The name of the Amazon Web Services Region that the stack
              instance is associated with.
          title: Region
        StackInstanceStatus:
          allOf:
          - $ref: '#/components/schemas/StackInstanceStatus'
          - description: "<p>The status of the stack instance, in terms of its synchronization\
              \ with its associated stack set. </p> <ul> <li> <p> <code>INOPERABLE</code>:\
              \ A <code>DeleteStackInstances</code> operation has failed and left\
              \ the stack in an unstable state. Stacks in this state are excluded\
              \ from further <code>UpdateStackSet</code> operations. You might need\
              \ to perform a <code>DeleteStackInstances</code> operation, with <code>RetainStacks</code>\
              \ set to true, to delete the stack instance, and then delete the stack\
              \ manually. </p> </li> <li> <p> <code>OUTDATED</code>: The stack isn't\
              \ currently up to date with the stack set because either the associated\
              \ stack failed during a <code>CreateStackSet</code> or <code>UpdateStackSet</code>\
              \ operation, or the stack was part of a <code>CreateStackSet</code>\
              \ or <code>UpdateStackSet</code> operation that failed or was stopped\
              \ before the stack was created or updated.</p> </li> <li> <p> <code>CURRENT</code>:\
              \ The stack is currently up to date with the stack set.</p> </li> </ul>"
          title: StackInstanceStatus
      title: StackInstance
      type: object
    StackSetOperationType:
      enum:
      - CREATE
      - UPDATE
      - DELETE
      title: StackSetOperationType
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagOptionSummary:
      description: Summary information about a TagOption.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagOptionKey'
          - description: The TagOption key.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/TagOptionValues'
          - description: The TagOption value.
          title: Values
      title: TagOptionSummary
      type: object
    TagOptionValues:
      items:
        $ref: '#/components/schemas/TagOptionValue'
      type: array
    UniqueTagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*)$"
      type: string
    UniqueTagValue:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*)$"
      type: string
    UpdateProvisioningPreferences:
      description: The user-defined preferences that will be applied when updating
        a provisioned product. Not all preferences are applicable to all provisioned
        product types.
      properties:
        StackSetAccounts:
          allOf:
          - $ref: '#/components/schemas/StackSetAccounts'
          - description: "<p>One or more Amazon Web Services accounts that will have\
              \ access to the provisioned product.</p> <p>Applicable only to a <code>CFN_STACKSET</code>\
              \ provisioned product type.</p> <p>The Amazon Web Services accounts\
              \ specified should be within the list of accounts in the <code>STACKSET</code>\
              \ constraint. To get the list of accounts in the <code>STACKSET</code>\
              \ constraint, use the <code>DescribeProvisioningParameters</code> operation.</p>\
              \ <p>If no values are specified, the default value is all accounts from\
              \ the <code>STACKSET</code> constraint.</p>"
          title: StackSetAccounts
        StackSetRegions:
          allOf:
          - $ref: '#/components/schemas/StackSetRegions'
          - description: "<p>One or more Amazon Web Services Regions where the provisioned\
              \ product will be available.</p> <p>Applicable only to a <code>CFN_STACKSET</code>\
              \ provisioned product type.</p> <p>The specified Regions should be within\
              \ the list of Regions from the <code>STACKSET</code> constraint. To\
              \ get the list of Regions in the <code>STACKSET</code> constraint, use\
              \ the <code>DescribeProvisioningParameters</code> operation.</p> <p>If\
              \ no values are specified, the default value is all Regions from the\
              \ <code>STACKSET</code> constraint.</p>"
          title: StackSetRegions
        StackSetFailureToleranceCount:
          allOf:
          - $ref: '#/components/schemas/StackSetFailureToleranceCount'
          - description: "<p>The number of accounts, per Region, for which this operation\
              \ can fail before Service Catalog stops the operation in that Region.\
              \ If the operation is stopped in a Region, Service Catalog doesn't attempt\
              \ the operation in any subsequent Regions.</p> <p>Applicable only to\
              \ a <code>CFN_STACKSET</code> provisioned product type.</p> <p>Conditional:\
              \ You must specify either <code>StackSetFailureToleranceCount</code>\
              \ or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>\
              \ <p>The default value is <code>0</code> if no value is specified.</p>"
          title: StackSetFailureToleranceCount
        StackSetFailureTolerancePercentage:
          allOf:
          - $ref: '#/components/schemas/StackSetFailureTolerancePercentage'
          - description: "<p>The percentage of accounts, per Region, for which this\
              \ stack operation can fail before Service Catalog stops the operation\
              \ in that Region. If the operation is stopped in a Region, Service Catalog\
              \ doesn't attempt the operation in any subsequent Regions.</p> <p>When\
              \ calculating the number of accounts based on the specified percentage,\
              \ Service Catalog rounds down to the next whole number.</p> <p>Applicable\
              \ only to a <code>CFN_STACKSET</code> provisioned product type.</p>\
              \ <p>Conditional: You must specify either <code>StackSetFailureToleranceCount</code>\
              \ or <code>StackSetFailureTolerancePercentage</code>, but not both.</p>"
          title: StackSetFailureTolerancePercentage
        StackSetMaxConcurrencyCount:
          allOf:
          - $ref: '#/components/schemas/StackSetMaxConcurrencyCount'
          - description: "<p>The maximum number of accounts in which to perform this\
              \ operation at one time. This is dependent on the value of <code>StackSetFailureToleranceCount</code>.\
              \ <code>StackSetMaxConcurrentCount</code> is at most one more than the\
              \ <code>StackSetFailureToleranceCount</code>.</p> <p>Note that this\
              \ setting lets you specify the maximum for operations. For large deployments,\
              \ under certain circumstances the actual number of accounts acted upon\
              \ concurrently may be lower due to service throttling.</p> <p>Applicable\
              \ only to a <code>CFN_STACKSET</code> provisioned product type.</p>\
              \ <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code>\
              \ or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>"
          title: StackSetMaxConcurrencyCount
        StackSetMaxConcurrencyPercentage:
          allOf:
          - $ref: '#/components/schemas/StackSetMaxConcurrencyPercentage'
          - description: "<p>The maximum percentage of accounts in which to perform\
              \ this operation at one time.</p> <p>When calculating the number of\
              \ accounts based on the specified percentage, Service Catalog rounds\
              \ down to the next whole number. This is true except in cases where\
              \ rounding down would result is zero. In this case, Service Catalog\
              \ sets the number as <code>1</code> instead.</p> <p>Note that this setting\
              \ lets you specify the maximum for operations. For large deployments,\
              \ under certain circumstances the actual number of accounts acted upon\
              \ concurrently may be lower due to service throttling.</p> <p>Applicable\
              \ only to a <code>CFN_STACKSET</code> provisioned product type.</p>\
              \ <p>Conditional: You must specify either <code>StackSetMaxConcurrentCount</code>\
              \ or <code>StackSetMaxConcurrentPercentage</code>, but not both.</p>"
          title: StackSetMaxConcurrencyPercentage
        StackSetOperationType:
          allOf:
          - $ref: '#/components/schemas/StackSetOperationType'
          - description: "<p>Determines what action Service Catalog performs to a\
              \ stack set or a stack instance represented by the provisioned product.\
              \ The default value is <code>UPDATE</code> if nothing is specified.</p>\
              \ <p>Applicable only to a <code>CFN_STACKSET</code> provisioned product\
              \ type.</p> <dl> <dt>CREATE</dt> <dd> <p>Creates a new stack instance\
              \ in the stack set represented by the provisioned product. In this case,\
              \ only new stack instances are created based on accounts and Regions;\
              \ if new ProductId or ProvisioningArtifactID are passed, they will be\
              \ ignored.</p> </dd> <dt>UPDATE</dt> <dd> <p>Updates the stack set represented\
              \ by the provisioned product and also its stack instances.</p> </dd>\
              \ <dt>DELETE</dt> <dd> <p>Deletes a stack instance in the stack set\
              \ represented by the provisioned product.</p> </dd> </dl>"
          title: StackSetOperationType
      title: UpdateProvisioningPreferences
      type: object
    UsePreviousValue:
      type: boolean
    UpdateProvisioningParameter:
      description: The parameter key-value pair used to update a provisioned product.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ParameterKey'
          - description: The parameter key.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          - description: The parameter value.
          title: Value
        UsePreviousValue:
          allOf:
          - $ref: '#/components/schemas/UsePreviousValue'
          - description: "If set to true, <code>Value</code> is ignored and the previous\
              \ parameter value is kept."
          title: UsePreviousValue
      title: UpdateProvisioningParameter
      type: object
    UsageInstruction:
      description: Additional information provided by the administrator.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InstructionType'
          - description: The usage instruction type for the value.
          title: Type
        Value:
          allOf:
          - $ref: '#/components/schemas/InstructionValue'
          - description: The usage instruction value for this type.
          title: Value
      title: UsageInstruction
      type: object
    CreateConstraintOutput_ConstraintDetail:
      allOf:
      - $ref: '#/components/schemas/ConstraintDetail'
      - description: Information about the constraint.
      example:
        Type: ""
        Owner: ""
        Description: ""
        PortfolioId: ""
        ProductId: ""
        ConstraintId: ""
      title: CreateConstraintOutput_ConstraintDetail
    CreatePortfolioOutput_PortfolioDetail:
      allOf:
      - $ref: '#/components/schemas/PortfolioDetail'
      - description: Information about the portfolio.
      example:
        ProviderName: ""
        Description: ""
        CreatedTime: ""
        DisplayName: ""
        Id: ""
        ARN: ""
      title: CreatePortfolioOutput_PortfolioDetail
    CreatePortfolioShareInput_OrganizationNode:
      allOf:
      - $ref: '#/components/schemas/OrganizationNode'
      - description: "The organization node to whom you are going to share. When you\
          \ pass <code>OrganizationNode</code>, it creates <code>PortfolioShare</code>\
          \ for all of the Amazon Web Services accounts that are associated to the\
          \ <code>OrganizationNode</code>. The output returns a <code>PortfolioShareToken</code>,\
          \ which enables the administrator to monitor the status of the <code>PortfolioShare</code>\
          \ creation process."
      example:
        Type: ""
        Value: ""
      title: CreatePortfolioShareInput_OrganizationNode
    CreateProductOutput_ProductViewDetail:
      allOf:
      - $ref: '#/components/schemas/ProductViewDetail'
      - description: Information about the product view.
      example:
        Status: ""
        ProductARN: ""
        CreatedTime: ""
        ProductViewSummary:
          Owner: ""
          Type: ""
          SupportDescription: ""
          Distributor: ""
          HasDefaultPath: ""
          SupportEmail: ""
          ProductId: ""
          SupportUrl: ""
          Id: ""
          Name: ""
          ShortDescription: ""
        SourceConnection:
          Type: ""
          ConnectionParameters:
            CodeStar:
              ArtifactPath: ""
              Repository: ""
              Branch: ""
              ConnectionArn: ""
          LastSync:
            LastSuccessfulSyncProvisioningArtifactId: ""
            LastSyncStatus: ""
            LastSuccessfulSyncTime: ""
            LastSyncTime: ""
            LastSyncStatusMessage: ""
      title: CreateProductOutput_ProductViewDetail
    CreateProductOutput_ProvisioningArtifactDetail:
      allOf:
      - $ref: '#/components/schemas/ProvisioningArtifactDetail'
      - description: 'Information about the provisioning artifact. '
      example:
        Guidance: ""
        SourceRevision: ""
        Type: ""
        Active: ""
        Description: ""
        CreatedTime: ""
        Id: ""
        Name: ""
      title: CreateProductOutput_ProvisioningArtifactDetail
    CreateProductInput_ProvisioningArtifactParameters:
      allOf:
      - $ref: '#/components/schemas/ProvisioningArtifactProperties'
      - description: 'The configuration of the provisioning artifact. '
      example:
        Type: ""
        Description: ""
        DisableTemplateValidation: ""
        Info: ""
        Name: ""
      title: CreateProductInput_ProvisioningArtifactParameters
    CreateProductInput_SourceConnection:
      allOf:
      - $ref: '#/components/schemas/SourceConnection'
      - description: <p>Specifies connection details for the created product and syncs
          the product to the connection source artifact. This automatically manages
          the product's artifacts based on changes to the source. The <code>SourceConnection</code>
          parameter consists of the following sub-fields.</p> <ul> <li> <p> <code>Type</code>
          </p> </li> <li> <p> <code>ConnectionParamters</code> </p> </li> </ul>
      example:
        Type: ""
        ConnectionParameters:
          CodeStar:
            ArtifactPath: ""
            Repository: ""
            Branch: ""
            ConnectionArn: ""
      title: CreateProductInput_SourceConnection
    CreateProvisioningArtifactOutput_ProvisioningArtifactDetail:
      allOf:
      - $ref: '#/components/schemas/ProvisioningArtifactDetail'
      - description: Information about the provisioning artifact.
      example:
        Guidance: ""
        SourceRevision: ""
        Type: ""
        Active: ""
        Description: ""
        CreatedTime: ""
        Id: ""
        Name: ""
      title: CreateProvisioningArtifactOutput_ProvisioningArtifactDetail
    CreateProvisioningArtifactInput_Parameters:
      allOf:
      - $ref: '#/components/schemas/ProvisioningArtifactProperties'
      - description: The configuration for the provisioning artifact.
      example:
        Type: ""
        Description: ""
        DisableTemplateValidation: ""
        Info: ""
        Name: ""
      title: CreateProvisioningArtifactInput_Parameters
    CreateServiceActionOutput_ServiceActionDetail:
      allOf:
      - $ref: '#/components/schemas/ServiceActionDetail'
      - description: An object containing information about the self-service action.
      example:
        Definition: ""
        ServiceActionSummary:
          Description: ""
          DefinitionType: ""
          Id: ""
          Name: ""
      title: CreateServiceActionOutput_ServiceActionDetail
    CreateTagOptionOutput_TagOptionDetail:
      allOf:
      - $ref: '#/components/schemas/TagOptionDetail'
      - description: Information about the TagOption.
      example:
        Active: ""
        Owner: ""
        Value: ""
        Id: ""
        Key: ""
      title: CreateTagOptionOutput_TagOptionDetail
    DeletePortfolioShareInput_OrganizationNode:
      allOf:
      - $ref: '#/components/schemas/OrganizationNode'
      - description: The organization node to whom you are going to stop sharing.
      example:
        Type: ""
        Value: ""
      title: DeletePortfolioShareInput_OrganizationNode
    DescribePortfolioShareStatusOutput_ShareDetails:
      allOf:
      - $ref: '#/components/schemas/ShareDetails'
      - description: Information about the portfolio share operation.
      example:
        SuccessfulShares: ""
        ShareErrors: ""
      title: DescribePortfolioShareStatusOutput_ShareDetails
    DescribeProductOutput_ProductViewSummary:
      allOf:
      - $ref: '#/components/schemas/ProductViewSummary'
      - description: Summary information about the product view.
      example:
        Owner: ""
        Type: ""
        SupportDescription: ""
        Distributor: ""
        HasDefaultPath: ""
        SupportEmail: ""
        ProductId: ""
        SupportUrl: ""
        Id: ""
        Name: ""
        ShortDescription: ""
      title: DescribeProductOutput_ProductViewSummary
    DescribeProductViewOutput_ProductViewSummary:
      allOf:
      - $ref: '#/components/schemas/ProductViewSummary'
      - description: Summary information about the product.
      example:
        Owner: ""
        Type: ""
        SupportDescription: ""
        Distributor: ""
        HasDefaultPath: ""
        SupportEmail: ""
        ProductId: ""
        SupportUrl: ""
        Id: ""
        Name: ""
        ShortDescription: ""
      title: DescribeProductViewOutput_ProductViewSummary
    DescribeProvisionedProductOutput_ProvisionedProductDetail:
      allOf:
      - $ref: '#/components/schemas/ProvisionedProductDetail'
      - description: Information about the provisioned product.
      example:
        Status: ""
        LastSuccessfulProvisioningRecordId: ""
        CreatedTime: ""
        ProductId: ""
        Name: ""
        StatusMessage: ""
        LastProvisioningRecordId: ""
        LaunchRoleArn: ""
        IdempotencyToken: ""
        Type: ""
        LastRecordId: ""
        Id: ""
        Arn: ""
        ProvisioningArtifactId: ""
      title: DescribeProvisionedProductOutput_ProvisionedProductDetail
    DescribeProvisionedProductPlanOutput_ProvisionedProductPlanDetails:
      allOf:
      - $ref: '#/components/schemas/ProvisionedProductPlanDetails'
      - description: Information about the plan.
      example:
        Status: ""
        CreatedTime: ""
        PlanId: ""
        NotificationArns: ""
        ProductId: ""
        PlanName: ""
        StatusMessage: ""
        PathId: ""
        ProvisioningParameters: ""
        ProvisionProductId: ""
        PlanType: ""
        ProvisionProductName: ""
        UpdatedTime: ""
        Tags: ""
        ProvisioningArtifactId: ""
      title: DescribeProvisionedProductPlanOutput_ProvisionedProductPlanDetails
    DescribeProvisioningParametersOutput_ProvisioningArtifactPreferences:
      allOf:
      - $ref: '#/components/schemas/ProvisioningArtifactPreferences'
      - description: "An object that contains information about preferences, such\
          \ as Regions and accounts, for the provisioning artifact."
      example:
        StackSetAccounts: ""
        StackSetRegions: ""
      title: DescribeProvisioningParametersOutput_ProvisioningArtifactPreferences
    DescribeRecordOutput_RecordDetail:
      allOf:
      - $ref: '#/components/schemas/RecordDetail'
      - description: Information about the product.
      example:
        Status: ""
        CreatedTime: ""
        ProvisionedProductType: ""
        ProductId: ""
        PathId: ""
        LaunchRoleArn: ""
        RecordType: ""
        RecordTags: ""
        ProvisionedProductId: ""
        RecordId: ""
        UpdatedTime: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
        RecordErrors: ""
      title: DescribeRecordOutput_RecordDetail
    DescribeServiceActionOutput_ServiceActionDetail:
      allOf:
      - $ref: '#/components/schemas/ServiceActionDetail'
      - description: Detailed information about the self-service action.
      example:
        Definition: ""
        ServiceActionSummary:
          Description: ""
          DefinitionType: ""
          Id: ""
          Name: ""
      title: DescribeServiceActionOutput_ServiceActionDetail
    ExecuteProvisionedProductPlanOutput_RecordDetail:
      allOf:
      - $ref: '#/components/schemas/RecordDetail'
      - description: Information about the result of provisioning the product.
      example:
        Status: ""
        CreatedTime: ""
        ProvisionedProductType: ""
        ProductId: ""
        PathId: ""
        LaunchRoleArn: ""
        RecordType: ""
        RecordTags: ""
        ProvisionedProductId: ""
        RecordId: ""
        UpdatedTime: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
        RecordErrors: ""
      title: ExecuteProvisionedProductPlanOutput_RecordDetail
    ExecuteProvisionedProductServiceActionOutput_RecordDetail:
      allOf:
      - $ref: '#/components/schemas/RecordDetail'
      - description: An object containing detailed information about the result of
          provisioning the product.
      example:
        Status: ""
        CreatedTime: ""
        ProvisionedProductType: ""
        ProductId: ""
        PathId: ""
        LaunchRoleArn: ""
        RecordType: ""
        RecordTags: ""
        ProvisionedProductId: ""
        RecordId: ""
        UpdatedTime: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
        RecordErrors: ""
      title: ExecuteProvisionedProductServiceActionOutput_RecordDetail
    ListProvisionedProductPlansInput_AccessLevelFilter:
      allOf:
      - $ref: '#/components/schemas/AccessLevelFilter'
      - description: The access level to use to obtain results. The default is <code>User</code>.
      example:
        Value: ""
        Key: ""
      title: ListProvisionedProductPlansInput_AccessLevelFilter
    ListRecordHistoryInput_SearchFilter:
      allOf:
      - $ref: '#/components/schemas/ListRecordHistorySearchFilter'
      - description: The search filter to scope the results.
      example:
        Value: ""
        Key: ""
      title: ListRecordHistoryInput_SearchFilter
    ListTagOptionsInput_Filters:
      allOf:
      - $ref: '#/components/schemas/ListTagOptionsFilters'
      - description: "The search filters. If no search filters are specified, the\
          \ output includes all TagOptions."
      example:
        Active: ""
        Value: ""
        Key: ""
      title: ListTagOptionsInput_Filters
    NotifyProvisionProductEngineWorkflowResultInput_ResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/EngineWorkflowResourceIdentifier'
      - description: ' The ID for the provisioned product resources that are part
          of a resource group. '
      example:
        UniqueTag:
          Value: ""
          Key: ""
      title: NotifyProvisionProductEngineWorkflowResultInput_ResourceIdentifier
    ProvisionProductInput_ProvisioningPreferences:
      allOf:
      - $ref: '#/components/schemas/ProvisioningPreferences'
      - description: An object that contains information about the provisioning preferences
          for a stack set.
      example:
        StackSetAccounts: ""
        StackSetFailureToleranceCount: ""
        StackSetMaxConcurrencyPercentage: ""
        StackSetMaxConcurrencyCount: ""
        StackSetRegions: ""
        StackSetFailureTolerancePercentage: ""
      title: ProvisionProductInput_ProvisioningPreferences
    TerminateProvisionedProductOutput_RecordDetail:
      allOf:
      - $ref: '#/components/schemas/RecordDetail'
      - description: Information about the result of this request.
      example:
        Status: ""
        CreatedTime: ""
        ProvisionedProductType: ""
        ProductId: ""
        PathId: ""
        LaunchRoleArn: ""
        RecordType: ""
        RecordTags: ""
        ProvisionedProductId: ""
        RecordId: ""
        UpdatedTime: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
        RecordErrors: ""
      title: TerminateProvisionedProductOutput_RecordDetail
    UpdateProductInput_SourceConnection:
      allOf:
      - $ref: '#/components/schemas/SourceConnection'
      - description: <p>Specifies connection details for the updated product and syncs
          the product to the connection source artifact. This automatically manages
          the product's artifacts based on changes to the source. The <code>SourceConnection</code>
          parameter consists of the following sub-fields.</p> <ul> <li> <p> <code>Type</code>
          </p> </li> <li> <p> <code>ConnectionParamters</code> </p> </li> </ul>
      example:
        Type: ""
        ConnectionParameters:
          CodeStar:
            ArtifactPath: ""
            Repository: ""
            Branch: ""
            ConnectionArn: ""
      title: UpdateProductInput_SourceConnection
    UpdateProvisionedProductOutput_RecordDetail:
      allOf:
      - $ref: '#/components/schemas/RecordDetail'
      - description: Information about the result of the request.
      example:
        Status: ""
        CreatedTime: ""
        ProvisionedProductType: ""
        ProductId: ""
        PathId: ""
        LaunchRoleArn: ""
        RecordType: ""
        RecordTags: ""
        ProvisionedProductId: ""
        RecordId: ""
        UpdatedTime: ""
        ProvisionedProductName: ""
        ProvisioningArtifactId: ""
        RecordErrors: ""
      title: UpdateProvisionedProductOutput_RecordDetail
    UpdateProvisionedProductInput_ProvisioningPreferences:
      allOf:
      - $ref: '#/components/schemas/UpdateProvisioningPreferences'
      - description: An object that contains information about the provisioning preferences
          for a stack set.
      example:
        StackSetAccounts: ""
        StackSetFailureToleranceCount: ""
        StackSetMaxConcurrencyPercentage: ""
        StackSetMaxConcurrencyCount: ""
        StackSetRegions: ""
        StackSetOperationType: ""
        StackSetFailureTolerancePercentage: ""
      title: UpdateProvisionedProductInput_ProvisioningPreferences
    SourceConnection_ConnectionParameters:
      allOf:
      - $ref: '#/components/schemas/SourceConnectionParameters'
      - description: 'The connection details based on the connection <code>Type</code>. '
      example:
        CodeStar:
          ArtifactPath: ""
          Repository: ""
          Branch: ""
          ConnectionArn: ""
      title: SourceConnection_ConnectionParameters
    ProductViewDetail_SourceConnection:
      allOf:
      - $ref: '#/components/schemas/SourceConnectionDetail'
      - description: "A top level <code>ProductViewDetail</code> response containing\
          \ details about the product’s connection. Service Catalog returns this field\
          \ for the <code>CreateProduct</code>, <code>UpdateProduct</code>, <code>DescribeProductAsAdmin</code>,\
          \ and <code>SearchProductAsAdmin</code> APIs. This response contains the\
          \ same fields as the <code>ConnectionParameters</code> request, with the\
          \ addition of the <code>LastSync</code> response."
      example:
        Type: ""
        ConnectionParameters:
          CodeStar:
            ArtifactPath: ""
            Repository: ""
            Branch: ""
            ConnectionArn: ""
        LastSync:
          LastSuccessfulSyncProvisioningArtifactId: ""
          LastSyncStatus: ""
          LastSuccessfulSyncTime: ""
          LastSyncTime: ""
          LastSyncStatusMessage: ""
      title: ProductViewDetail_SourceConnection
    ServiceActionDetail_ServiceActionSummary:
      allOf:
      - $ref: '#/components/schemas/ServiceActionSummary'
      - description: Summary information about the self-service action.
      example:
        Description: ""
        DefinitionType: ""
        Id: ""
        Name: ""
      title: ServiceActionDetail_ServiceActionSummary
    EngineWorkflowResourceIdentifier_UniqueTag:
      allOf:
      - $ref: '#/components/schemas/UniqueTagResourceIdentifier'
      - description: ' The unique key-value pair for a tag that identifies provisioned
          product resources. '
      example:
        Value: ""
        Key: ""
      title: EngineWorkflowResourceIdentifier_UniqueTag
    SourceConnectionDetail_ConnectionParameters:
      allOf:
      - $ref: '#/components/schemas/SourceConnectionParameters'
      - description: The connection details based on the connection <code>Type</code>.
      example:
        CodeStar:
          ArtifactPath: ""
          Repository: ""
          Branch: ""
          ConnectionArn: ""
      title: SourceConnectionDetail_ConnectionParameters
    SourceConnectionDetail_LastSync:
      allOf:
      - $ref: '#/components/schemas/LastSync'
      - description: <p>Provides details about the product's connection sync and contains
          the following sub-fields. </p> <ul> <li> <p> <code>LastSyncTime</code> </p>
          </li> <li> <p> <code>LastSyncStatus</code> </p> </li> <li> <p> <code>LastSyncStatusMessage</code>
          </p> </li> <li> <p> <code>LastSuccessfulSyncTime</code> </p> </li> <li>
          <p> <code>LastSuccessfulSyncProvisioningArtifactID</code> </p> </li> </ul>
      example:
        LastSuccessfulSyncProvisioningArtifactId: ""
        LastSyncStatus: ""
        LastSuccessfulSyncTime: ""
        LastSyncTime: ""
        LastSyncStatusMessage: ""
      title: SourceConnectionDetail_LastSync
    ProvisioningArtifactParameter_ParameterConstraints:
      allOf:
      - $ref: '#/components/schemas/ParameterConstraints'
      - description: Constraints that the administrator has put on a parameter.
      title: ProvisioningArtifactParameter_ParameterConstraints
    ProvisioningArtifactView_ProductViewSummary:
      allOf:
      - $ref: '#/components/schemas/ProductViewSummary'
      - description: Summary information about a product view.
      title: ProvisioningArtifactView_ProductViewSummary
    ProvisioningArtifactView_ProvisioningArtifact:
      allOf:
      - $ref: '#/components/schemas/ProvisioningArtifact'
      - description: Information about a provisioning artifact. A provisioning artifact
          is also known as a product version.
      title: ProvisioningArtifactView_ProvisioningArtifact
    ResourceChangeDetail_Target:
      allOf:
      - $ref: '#/components/schemas/ResourceTargetDefinition'
      - description: Information about the resource attribute to be modified.
      title: ResourceChangeDetail_Target
    SourceConnectionParameters_CodeStar:
      allOf:
      - $ref: '#/components/schemas/CodeStarParameters'
      - description: Provides <code>ConnectionType</code> details.
      example:
        ArtifactPath: ""
        Repository: ""
        Branch: ""
        ConnectionArn: ""
      title: SourceConnectionParameters_CodeStar
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
