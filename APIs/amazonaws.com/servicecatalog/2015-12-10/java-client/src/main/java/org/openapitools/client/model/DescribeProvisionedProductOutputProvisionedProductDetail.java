/*
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ProvisionedProductStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeProvisionedProductOutputProvisionedProductDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:00:56.086226-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeProvisionedProductOutputProvisionedProductDetail {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ProvisionedProductStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_IDEMPOTENCY_TOKEN = "IdempotencyToken";
  @SerializedName(SERIALIZED_NAME_IDEMPOTENCY_TOKEN)
  private String idempotencyToken;

  public static final String SERIALIZED_NAME_LAST_RECORD_ID = "LastRecordId";
  @SerializedName(SERIALIZED_NAME_LAST_RECORD_ID)
  private String lastRecordId;

  public static final String SERIALIZED_NAME_LAST_PROVISIONING_RECORD_ID = "LastProvisioningRecordId";
  @SerializedName(SERIALIZED_NAME_LAST_PROVISIONING_RECORD_ID)
  private String lastProvisioningRecordId;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_PROVISIONING_RECORD_ID = "LastSuccessfulProvisioningRecordId";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_PROVISIONING_RECORD_ID)
  private String lastSuccessfulProvisioningRecordId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "ProductId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PROVISIONING_ARTIFACT_ID = "ProvisioningArtifactId";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_ARTIFACT_ID)
  private String provisioningArtifactId;

  public static final String SERIALIZED_NAME_LAUNCH_ROLE_ARN = "LaunchRoleArn";
  @SerializedName(SERIALIZED_NAME_LAUNCH_ROLE_ARN)
  private String launchRoleArn;

  public DescribeProvisionedProductOutputProvisionedProductDetail() {
  }

  public DescribeProvisionedProductOutputProvisionedProductDetail name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail status(ProvisionedProductStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ProvisionedProductStatus getStatus() {
    return status;
  }

  public void setStatus(ProvisionedProductStatus status) {
    this.status = status;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail idempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
    return this;
  }

  /**
   * Get idempotencyToken
   * @return idempotencyToken
   */
  @javax.annotation.Nullable
  public String getIdempotencyToken() {
    return idempotencyToken;
  }

  public void setIdempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail lastRecordId(String lastRecordId) {
    this.lastRecordId = lastRecordId;
    return this;
  }

  /**
   * Get lastRecordId
   * @return lastRecordId
   */
  @javax.annotation.Nullable
  public String getLastRecordId() {
    return lastRecordId;
  }

  public void setLastRecordId(String lastRecordId) {
    this.lastRecordId = lastRecordId;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail lastProvisioningRecordId(String lastProvisioningRecordId) {
    this.lastProvisioningRecordId = lastProvisioningRecordId;
    return this;
  }

  /**
   * Get lastProvisioningRecordId
   * @return lastProvisioningRecordId
   */
  @javax.annotation.Nullable
  public String getLastProvisioningRecordId() {
    return lastProvisioningRecordId;
  }

  public void setLastProvisioningRecordId(String lastProvisioningRecordId) {
    this.lastProvisioningRecordId = lastProvisioningRecordId;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail lastSuccessfulProvisioningRecordId(String lastSuccessfulProvisioningRecordId) {
    this.lastSuccessfulProvisioningRecordId = lastSuccessfulProvisioningRecordId;
    return this;
  }

  /**
   * Get lastSuccessfulProvisioningRecordId
   * @return lastSuccessfulProvisioningRecordId
   */
  @javax.annotation.Nullable
  public String getLastSuccessfulProvisioningRecordId() {
    return lastSuccessfulProvisioningRecordId;
  }

  public void setLastSuccessfulProvisioningRecordId(String lastSuccessfulProvisioningRecordId) {
    this.lastSuccessfulProvisioningRecordId = lastSuccessfulProvisioningRecordId;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail productId(String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail provisioningArtifactId(String provisioningArtifactId) {
    this.provisioningArtifactId = provisioningArtifactId;
    return this;
  }

  /**
   * Get provisioningArtifactId
   * @return provisioningArtifactId
   */
  @javax.annotation.Nullable
  public String getProvisioningArtifactId() {
    return provisioningArtifactId;
  }

  public void setProvisioningArtifactId(String provisioningArtifactId) {
    this.provisioningArtifactId = provisioningArtifactId;
  }


  public DescribeProvisionedProductOutputProvisionedProductDetail launchRoleArn(String launchRoleArn) {
    this.launchRoleArn = launchRoleArn;
    return this;
  }

  /**
   * Get launchRoleArn
   * @return launchRoleArn
   */
  @javax.annotation.Nullable
  public String getLaunchRoleArn() {
    return launchRoleArn;
  }

  public void setLaunchRoleArn(String launchRoleArn) {
    this.launchRoleArn = launchRoleArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeProvisionedProductOutputProvisionedProductDetail describeProvisionedProductOutputProvisionedProductDetail = (DescribeProvisionedProductOutputProvisionedProductDetail) o;
    return Objects.equals(this.name, describeProvisionedProductOutputProvisionedProductDetail.name) &&
        Objects.equals(this.arn, describeProvisionedProductOutputProvisionedProductDetail.arn) &&
        Objects.equals(this.type, describeProvisionedProductOutputProvisionedProductDetail.type) &&
        Objects.equals(this.id, describeProvisionedProductOutputProvisionedProductDetail.id) &&
        Objects.equals(this.status, describeProvisionedProductOutputProvisionedProductDetail.status) &&
        Objects.equals(this.statusMessage, describeProvisionedProductOutputProvisionedProductDetail.statusMessage) &&
        Objects.equals(this.createdTime, describeProvisionedProductOutputProvisionedProductDetail.createdTime) &&
        Objects.equals(this.idempotencyToken, describeProvisionedProductOutputProvisionedProductDetail.idempotencyToken) &&
        Objects.equals(this.lastRecordId, describeProvisionedProductOutputProvisionedProductDetail.lastRecordId) &&
        Objects.equals(this.lastProvisioningRecordId, describeProvisionedProductOutputProvisionedProductDetail.lastProvisioningRecordId) &&
        Objects.equals(this.lastSuccessfulProvisioningRecordId, describeProvisionedProductOutputProvisionedProductDetail.lastSuccessfulProvisioningRecordId) &&
        Objects.equals(this.productId, describeProvisionedProductOutputProvisionedProductDetail.productId) &&
        Objects.equals(this.provisioningArtifactId, describeProvisionedProductOutputProvisionedProductDetail.provisioningArtifactId) &&
        Objects.equals(this.launchRoleArn, describeProvisionedProductOutputProvisionedProductDetail.launchRoleArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, arn, type, id, status, statusMessage, createdTime, idempotencyToken, lastRecordId, lastProvisioningRecordId, lastSuccessfulProvisioningRecordId, productId, provisioningArtifactId, launchRoleArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeProvisionedProductOutputProvisionedProductDetail {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    idempotencyToken: ").append(toIndentedString(idempotencyToken)).append("\n");
    sb.append("    lastRecordId: ").append(toIndentedString(lastRecordId)).append("\n");
    sb.append("    lastProvisioningRecordId: ").append(toIndentedString(lastProvisioningRecordId)).append("\n");
    sb.append("    lastSuccessfulProvisioningRecordId: ").append(toIndentedString(lastSuccessfulProvisioningRecordId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    provisioningArtifactId: ").append(toIndentedString(provisioningArtifactId)).append("\n");
    sb.append("    launchRoleArn: ").append(toIndentedString(launchRoleArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Arn");
    openapiFields.add("Type");
    openapiFields.add("Id");
    openapiFields.add("Status");
    openapiFields.add("StatusMessage");
    openapiFields.add("CreatedTime");
    openapiFields.add("IdempotencyToken");
    openapiFields.add("LastRecordId");
    openapiFields.add("LastProvisioningRecordId");
    openapiFields.add("LastSuccessfulProvisioningRecordId");
    openapiFields.add("ProductId");
    openapiFields.add("ProvisioningArtifactId");
    openapiFields.add("LaunchRoleArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeProvisionedProductOutputProvisionedProductDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeProvisionedProductOutputProvisionedProductDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeProvisionedProductOutputProvisionedProductDetail is not found in the empty JSON string", DescribeProvisionedProductOutputProvisionedProductDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeProvisionedProductOutputProvisionedProductDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeProvisionedProductOutputProvisionedProductDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ProvisionedProductStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      }
      // validate the optional field `IdempotencyToken`
      if (jsonObj.get("IdempotencyToken") != null && !jsonObj.get("IdempotencyToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IdempotencyToken"));
      }
      // validate the optional field `LastRecordId`
      if (jsonObj.get("LastRecordId") != null && !jsonObj.get("LastRecordId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastRecordId"));
      }
      // validate the optional field `LastProvisioningRecordId`
      if (jsonObj.get("LastProvisioningRecordId") != null && !jsonObj.get("LastProvisioningRecordId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastProvisioningRecordId"));
      }
      // validate the optional field `LastSuccessfulProvisioningRecordId`
      if (jsonObj.get("LastSuccessfulProvisioningRecordId") != null && !jsonObj.get("LastSuccessfulProvisioningRecordId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastSuccessfulProvisioningRecordId"));
      }
      // validate the optional field `ProductId`
      if (jsonObj.get("ProductId") != null && !jsonObj.get("ProductId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProductId"));
      }
      // validate the optional field `ProvisioningArtifactId`
      if (jsonObj.get("ProvisioningArtifactId") != null && !jsonObj.get("ProvisioningArtifactId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProvisioningArtifactId"));
      }
      // validate the optional field `LaunchRoleArn`
      if (jsonObj.get("LaunchRoleArn") != null && !jsonObj.get("LaunchRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LaunchRoleArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeProvisionedProductOutputProvisionedProductDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeProvisionedProductOutputProvisionedProductDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeProvisionedProductOutputProvisionedProductDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeProvisionedProductOutputProvisionedProductDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeProvisionedProductOutputProvisionedProductDetail>() {
           @Override
           public void write(JsonWriter out, DescribeProvisionedProductOutputProvisionedProductDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeProvisionedProductOutputProvisionedProductDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeProvisionedProductOutputProvisionedProductDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeProvisionedProductOutputProvisionedProductDetail
   * @throws IOException if the JSON string is invalid with respect to DescribeProvisionedProductOutputProvisionedProductDetail
   */
  public static DescribeProvisionedProductOutputProvisionedProductDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeProvisionedProductOutputProvisionedProductDetail.class);
  }

  /**
   * Convert an instance of DescribeProvisionedProductOutputProvisionedProductDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

