/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribePortfolioShareStatusInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribePortfolioShareStatusInput::OAIDescribePortfolioShareStatusInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribePortfolioShareStatusInput::OAIDescribePortfolioShareStatusInput() {
    this->initializeModel();
}

OAIDescribePortfolioShareStatusInput::~OAIDescribePortfolioShareStatusInput() {}

void OAIDescribePortfolioShareStatusInput::initializeModel() {

    m_portfolio_share_token_isSet = false;
    m_portfolio_share_token_isValid = false;
}

void OAIDescribePortfolioShareStatusInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribePortfolioShareStatusInput::fromJsonObject(QJsonObject json) {

    m_portfolio_share_token_isValid = ::OpenAPI::fromJsonValue(m_portfolio_share_token, json[QString("PortfolioShareToken")]);
    m_portfolio_share_token_isSet = !json[QString("PortfolioShareToken")].isNull() && m_portfolio_share_token_isValid;
}

QString OAIDescribePortfolioShareStatusInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribePortfolioShareStatusInput::asJsonObject() const {
    QJsonObject obj;
    if (m_portfolio_share_token_isSet) {
        obj.insert(QString("PortfolioShareToken"), ::OpenAPI::toJsonValue(m_portfolio_share_token));
    }
    return obj;
}

QString OAIDescribePortfolioShareStatusInput::getPortfolioShareToken() const {
    return m_portfolio_share_token;
}
void OAIDescribePortfolioShareStatusInput::setPortfolioShareToken(const QString &portfolio_share_token) {
    m_portfolio_share_token = portfolio_share_token;
    m_portfolio_share_token_isSet = true;
}

bool OAIDescribePortfolioShareStatusInput::is_portfolio_share_token_Set() const{
    return m_portfolio_share_token_isSet;
}

bool OAIDescribePortfolioShareStatusInput::is_portfolio_share_token_Valid() const{
    return m_portfolio_share_token_isValid;
}

bool OAIDescribePortfolioShareStatusInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_portfolio_share_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribePortfolioShareStatusInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_portfolio_share_token_isValid && true;
}

} // namespace OpenAPI
