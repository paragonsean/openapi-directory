/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrganizationNodeType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrganizationNodeType::OAIOrganizationNodeType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrganizationNodeType::OAIOrganizationNodeType() {
    this->initializeModel();
}

OAIOrganizationNodeType::~OAIOrganizationNodeType() {}

void OAIOrganizationNodeType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOrganizationNodeType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOrganizationNodeType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ORGANIZATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrganizationNodeType::ORGANIZATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORGANIZATIONAL_UNIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrganizationNodeType::ORGANIZATIONAL_UNIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrganizationNodeType::ACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOrganizationNodeType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOrganizationNodeType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOrganizationNodeType::ORGANIZATION:
            val = "ORGANIZATION";
            break;
        case eOAIOrganizationNodeType::ORGANIZATIONAL_UNIT:
            val = "ORGANIZATIONAL_UNIT";
            break;
        case eOAIOrganizationNodeType::ACCOUNT:
            val = "ACCOUNT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOrganizationNodeType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOrganizationNodeType::eOAIOrganizationNodeType OAIOrganizationNodeType::getValue() const {
    return m_value;
}

void OAIOrganizationNodeType::setValue(const OAIOrganizationNodeType::eOAIOrganizationNodeType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOrganizationNodeType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOrganizationNodeType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
