/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStackSetOperationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStackSetOperationType::OAIStackSetOperationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStackSetOperationType::OAIStackSetOperationType() {
    this->initializeModel();
}

OAIStackSetOperationType::~OAIStackSetOperationType() {}

void OAIStackSetOperationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStackSetOperationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStackSetOperationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStackSetOperationType::CREATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStackSetOperationType::UPDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStackSetOperationType::DELETE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStackSetOperationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStackSetOperationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStackSetOperationType::CREATE:
            val = "CREATE";
            break;
        case eOAIStackSetOperationType::UPDATE:
            val = "UPDATE";
            break;
        case eOAIStackSetOperationType::DELETE:
            val = "DELETE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStackSetOperationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStackSetOperationType::eOAIStackSetOperationType OAIStackSetOperationType::getValue() const {
    return m_value;
}

void OAIStackSetOperationType::setValue(const OAIStackSetOperationType::eOAIStackSetOperationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStackSetOperationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIStackSetOperationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
