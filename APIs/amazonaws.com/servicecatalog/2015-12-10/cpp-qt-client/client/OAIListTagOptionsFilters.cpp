/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTagOptionsFilters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTagOptionsFilters::OAIListTagOptionsFilters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTagOptionsFilters::OAIListTagOptionsFilters() {
    this->initializeModel();
}

OAIListTagOptionsFilters::~OAIListTagOptionsFilters() {}

void OAIListTagOptionsFilters::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;
}

void OAIListTagOptionsFilters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTagOptionsFilters::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("Key")]);
    m_key_isSet = !json[QString("Key")].isNull() && m_key_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("Active")]);
    m_active_isSet = !json[QString("Active")].isNull() && m_active_isValid;
}

QString OAIListTagOptionsFilters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTagOptionsFilters::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("Key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_active_isSet) {
        obj.insert(QString("Active"), ::OpenAPI::toJsonValue(m_active));
    }
    return obj;
}

QString OAIListTagOptionsFilters::getKey() const {
    return m_key;
}
void OAIListTagOptionsFilters::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIListTagOptionsFilters::is_key_Set() const{
    return m_key_isSet;
}

bool OAIListTagOptionsFilters::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIListTagOptionsFilters::getValue() const {
    return m_value;
}
void OAIListTagOptionsFilters::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIListTagOptionsFilters::is_value_Set() const{
    return m_value_isSet;
}

bool OAIListTagOptionsFilters::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIListTagOptionsFilters::getActive() const {
    return m_active;
}
void OAIListTagOptionsFilters::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIListTagOptionsFilters::is_active_Set() const{
    return m_active_isSet;
}

bool OAIListTagOptionsFilters::is_active_Valid() const{
    return m_active_isValid;
}

bool OAIListTagOptionsFilters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTagOptionsFilters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
