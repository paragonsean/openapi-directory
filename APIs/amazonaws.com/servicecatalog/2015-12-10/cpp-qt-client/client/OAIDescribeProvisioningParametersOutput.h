/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeProvisioningParametersOutput.h
 *
 * 
 */

#ifndef OAIDescribeProvisioningParametersOutput_H
#define OAIDescribeProvisioningParametersOutput_H

#include <QJsonObject>

#include "OAIDescribeProvisioningParametersOutput_ProvisioningArtifactPreferences.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeProvisioningParametersOutput_ProvisioningArtifactPreferences;

class OAIDescribeProvisioningParametersOutput : public OAIObject {
public:
    OAIDescribeProvisioningParametersOutput();
    OAIDescribeProvisioningParametersOutput(QString json);
    ~OAIDescribeProvisioningParametersOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getProvisioningArtifactParameters() const;
    void setProvisioningArtifactParameters(const QList &provisioning_artifact_parameters);
    bool is_provisioning_artifact_parameters_Set() const;
    bool is_provisioning_artifact_parameters_Valid() const;

    QList getConstraintSummaries() const;
    void setConstraintSummaries(const QList &constraint_summaries);
    bool is_constraint_summaries_Set() const;
    bool is_constraint_summaries_Valid() const;

    QList getUsageInstructions() const;
    void setUsageInstructions(const QList &usage_instructions);
    bool is_usage_instructions_Set() const;
    bool is_usage_instructions_Valid() const;

    QList getTagOptions() const;
    void setTagOptions(const QList &tag_options);
    bool is_tag_options_Set() const;
    bool is_tag_options_Valid() const;

    OAIDescribeProvisioningParametersOutput_ProvisioningArtifactPreferences getProvisioningArtifactPreferences() const;
    void setProvisioningArtifactPreferences(const OAIDescribeProvisioningParametersOutput_ProvisioningArtifactPreferences &provisioning_artifact_preferences);
    bool is_provisioning_artifact_preferences_Set() const;
    bool is_provisioning_artifact_preferences_Valid() const;

    QList getProvisioningArtifactOutputs() const;
    void setProvisioningArtifactOutputs(const QList &provisioning_artifact_outputs);
    bool is_provisioning_artifact_outputs_Set() const;
    bool is_provisioning_artifact_outputs_Valid() const;

    QList getProvisioningArtifactOutputKeys() const;
    void setProvisioningArtifactOutputKeys(const QList &provisioning_artifact_output_keys);
    bool is_provisioning_artifact_output_keys_Set() const;
    bool is_provisioning_artifact_output_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_provisioning_artifact_parameters;
    bool m_provisioning_artifact_parameters_isSet;
    bool m_provisioning_artifact_parameters_isValid;

    QList m_constraint_summaries;
    bool m_constraint_summaries_isSet;
    bool m_constraint_summaries_isValid;

    QList m_usage_instructions;
    bool m_usage_instructions_isSet;
    bool m_usage_instructions_isValid;

    QList m_tag_options;
    bool m_tag_options_isSet;
    bool m_tag_options_isValid;

    OAIDescribeProvisioningParametersOutput_ProvisioningArtifactPreferences m_provisioning_artifact_preferences;
    bool m_provisioning_artifact_preferences_isSet;
    bool m_provisioning_artifact_preferences_isValid;

    QList m_provisioning_artifact_outputs;
    bool m_provisioning_artifact_outputs_isSet;
    bool m_provisioning_artifact_outputs_isValid;

    QList m_provisioning_artifact_output_keys;
    bool m_provisioning_artifact_output_keys_isSet;
    bool m_provisioning_artifact_output_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeProvisioningParametersOutput)

#endif // OAIDescribeProvisioningParametersOutput_H
