/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrincipalType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrincipalType::OAIPrincipalType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrincipalType::OAIPrincipalType() {
    this->initializeModel();
}

OAIPrincipalType::~OAIPrincipalType() {}

void OAIPrincipalType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPrincipalType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPrincipalType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IAM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPrincipalType::IAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IAM_PATTERN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPrincipalType::IAM_PATTERN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPrincipalType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPrincipalType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPrincipalType::IAM:
            val = "IAM";
            break;
        case eOAIPrincipalType::IAM_PATTERN:
            val = "IAM_PATTERN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPrincipalType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPrincipalType::eOAIPrincipalType OAIPrincipalType::getValue() const {
    return m_value;
}

void OAIPrincipalType::setValue(const OAIPrincipalType::eOAIPrincipalType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPrincipalType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPrincipalType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
