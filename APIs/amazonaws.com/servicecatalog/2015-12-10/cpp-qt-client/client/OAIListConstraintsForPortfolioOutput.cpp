/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListConstraintsForPortfolioOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListConstraintsForPortfolioOutput::OAIListConstraintsForPortfolioOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListConstraintsForPortfolioOutput::OAIListConstraintsForPortfolioOutput() {
    this->initializeModel();
}

OAIListConstraintsForPortfolioOutput::~OAIListConstraintsForPortfolioOutput() {}

void OAIListConstraintsForPortfolioOutput::initializeModel() {

    m_constraint_details_isSet = false;
    m_constraint_details_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListConstraintsForPortfolioOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListConstraintsForPortfolioOutput::fromJsonObject(QJsonObject json) {

    m_constraint_details_isValid = ::OpenAPI::fromJsonValue(m_constraint_details, json[QString("ConstraintDetails")]);
    m_constraint_details_isSet = !json[QString("ConstraintDetails")].isNull() && m_constraint_details_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListConstraintsForPortfolioOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListConstraintsForPortfolioOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_constraint_details.isSet()) {
        obj.insert(QString("ConstraintDetails"), ::OpenAPI::toJsonValue(m_constraint_details));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAIListConstraintsForPortfolioOutput::getConstraintDetails() const {
    return m_constraint_details;
}
void OAIListConstraintsForPortfolioOutput::setConstraintDetails(const QList &constraint_details) {
    m_constraint_details = constraint_details;
    m_constraint_details_isSet = true;
}

bool OAIListConstraintsForPortfolioOutput::is_constraint_details_Set() const{
    return m_constraint_details_isSet;
}

bool OAIListConstraintsForPortfolioOutput::is_constraint_details_Valid() const{
    return m_constraint_details_isValid;
}

QString OAIListConstraintsForPortfolioOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListConstraintsForPortfolioOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListConstraintsForPortfolioOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListConstraintsForPortfolioOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListConstraintsForPortfolioOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constraint_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListConstraintsForPortfolioOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
