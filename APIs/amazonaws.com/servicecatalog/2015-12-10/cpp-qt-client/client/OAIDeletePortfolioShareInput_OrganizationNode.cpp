/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeletePortfolioShareInput_OrganizationNode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeletePortfolioShareInput_OrganizationNode::OAIDeletePortfolioShareInput_OrganizationNode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeletePortfolioShareInput_OrganizationNode::OAIDeletePortfolioShareInput_OrganizationNode() {
    this->initializeModel();
}

OAIDeletePortfolioShareInput_OrganizationNode::~OAIDeletePortfolioShareInput_OrganizationNode() {}

void OAIDeletePortfolioShareInput_OrganizationNode::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIDeletePortfolioShareInput_OrganizationNode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeletePortfolioShareInput_OrganizationNode::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIDeletePortfolioShareInput_OrganizationNode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeletePortfolioShareInput_OrganizationNode::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAIOrganizationNodeType OAIDeletePortfolioShareInput_OrganizationNode::getType() const {
    return m_type;
}
void OAIDeletePortfolioShareInput_OrganizationNode::setType(const OAIOrganizationNodeType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIDeletePortfolioShareInput_OrganizationNode::is_type_Set() const{
    return m_type_isSet;
}

bool OAIDeletePortfolioShareInput_OrganizationNode::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIDeletePortfolioShareInput_OrganizationNode::getValue() const {
    return m_value;
}
void OAIDeletePortfolioShareInput_OrganizationNode::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIDeletePortfolioShareInput_OrganizationNode::is_value_Set() const{
    return m_value_isSet;
}

bool OAIDeletePortfolioShareInput_OrganizationNode::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIDeletePortfolioShareInput_OrganizationNode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeletePortfolioShareInput_OrganizationNode::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
