/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTagOptionsOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTagOptionsOutput::OAIListTagOptionsOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTagOptionsOutput::OAIListTagOptionsOutput() {
    this->initializeModel();
}

OAIListTagOptionsOutput::~OAIListTagOptionsOutput() {}

void OAIListTagOptionsOutput::initializeModel() {

    m_tag_option_details_isSet = false;
    m_tag_option_details_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;
}

void OAIListTagOptionsOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTagOptionsOutput::fromJsonObject(QJsonObject json) {

    m_tag_option_details_isValid = ::OpenAPI::fromJsonValue(m_tag_option_details, json[QString("TagOptionDetails")]);
    m_tag_option_details_isSet = !json[QString("TagOptionDetails")].isNull() && m_tag_option_details_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("PageToken")]);
    m_page_token_isSet = !json[QString("PageToken")].isNull() && m_page_token_isValid;
}

QString OAIListTagOptionsOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTagOptionsOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_tag_option_details.isSet()) {
        obj.insert(QString("TagOptionDetails"), ::OpenAPI::toJsonValue(m_tag_option_details));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("PageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    return obj;
}

QList OAIListTagOptionsOutput::getTagOptionDetails() const {
    return m_tag_option_details;
}
void OAIListTagOptionsOutput::setTagOptionDetails(const QList &tag_option_details) {
    m_tag_option_details = tag_option_details;
    m_tag_option_details_isSet = true;
}

bool OAIListTagOptionsOutput::is_tag_option_details_Set() const{
    return m_tag_option_details_isSet;
}

bool OAIListTagOptionsOutput::is_tag_option_details_Valid() const{
    return m_tag_option_details_isValid;
}

QString OAIListTagOptionsOutput::getPageToken() const {
    return m_page_token;
}
void OAIListTagOptionsOutput::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIListTagOptionsOutput::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIListTagOptionsOutput::is_page_token_Valid() const{
    return m_page_token_isValid;
}

bool OAIListTagOptionsOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tag_option_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTagOptionsOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
