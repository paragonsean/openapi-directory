/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailedServiceActionAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailedServiceActionAssociation::OAIFailedServiceActionAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailedServiceActionAssociation::OAIFailedServiceActionAssociation() {
    this->initializeModel();
}

OAIFailedServiceActionAssociation::~OAIFailedServiceActionAssociation() {}

void OAIFailedServiceActionAssociation::initializeModel() {

    m_service_action_id_isSet = false;
    m_service_action_id_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_provisioning_artifact_id_isSet = false;
    m_provisioning_artifact_id_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;
}

void OAIFailedServiceActionAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFailedServiceActionAssociation::fromJsonObject(QJsonObject json) {

    m_service_action_id_isValid = ::OpenAPI::fromJsonValue(m_service_action_id, json[QString("ServiceActionId")]);
    m_service_action_id_isSet = !json[QString("ServiceActionId")].isNull() && m_service_action_id_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("ProductId")]);
    m_product_id_isSet = !json[QString("ProductId")].isNull() && m_product_id_isValid;

    m_provisioning_artifact_id_isValid = ::OpenAPI::fromJsonValue(m_provisioning_artifact_id, json[QString("ProvisioningArtifactId")]);
    m_provisioning_artifact_id_isSet = !json[QString("ProvisioningArtifactId")].isNull() && m_provisioning_artifact_id_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("ErrorCode")]);
    m_error_code_isSet = !json[QString("ErrorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("ErrorMessage")]);
    m_error_message_isSet = !json[QString("ErrorMessage")].isNull() && m_error_message_isValid;
}

QString OAIFailedServiceActionAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFailedServiceActionAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_service_action_id_isSet) {
        obj.insert(QString("ServiceActionId"), ::OpenAPI::toJsonValue(m_service_action_id));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("ProductId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_provisioning_artifact_id_isSet) {
        obj.insert(QString("ProvisioningArtifactId"), ::OpenAPI::toJsonValue(m_provisioning_artifact_id));
    }
    if (m_error_code.isSet()) {
        obj.insert(QString("ErrorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("ErrorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    return obj;
}

QString OAIFailedServiceActionAssociation::getServiceActionId() const {
    return m_service_action_id;
}
void OAIFailedServiceActionAssociation::setServiceActionId(const QString &service_action_id) {
    m_service_action_id = service_action_id;
    m_service_action_id_isSet = true;
}

bool OAIFailedServiceActionAssociation::is_service_action_id_Set() const{
    return m_service_action_id_isSet;
}

bool OAIFailedServiceActionAssociation::is_service_action_id_Valid() const{
    return m_service_action_id_isValid;
}

QString OAIFailedServiceActionAssociation::getProductId() const {
    return m_product_id;
}
void OAIFailedServiceActionAssociation::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIFailedServiceActionAssociation::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIFailedServiceActionAssociation::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIFailedServiceActionAssociation::getProvisioningArtifactId() const {
    return m_provisioning_artifact_id;
}
void OAIFailedServiceActionAssociation::setProvisioningArtifactId(const QString &provisioning_artifact_id) {
    m_provisioning_artifact_id = provisioning_artifact_id;
    m_provisioning_artifact_id_isSet = true;
}

bool OAIFailedServiceActionAssociation::is_provisioning_artifact_id_Set() const{
    return m_provisioning_artifact_id_isSet;
}

bool OAIFailedServiceActionAssociation::is_provisioning_artifact_id_Valid() const{
    return m_provisioning_artifact_id_isValid;
}

OAIServiceActionAssociationErrorCode OAIFailedServiceActionAssociation::getErrorCode() const {
    return m_error_code;
}
void OAIFailedServiceActionAssociation::setErrorCode(const OAIServiceActionAssociationErrorCode &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIFailedServiceActionAssociation::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIFailedServiceActionAssociation::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIFailedServiceActionAssociation::getErrorMessage() const {
    return m_error_message;
}
void OAIFailedServiceActionAssociation::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIFailedServiceActionAssociation::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIFailedServiceActionAssociation::is_error_message_Valid() const{
    return m_error_message_isValid;
}

bool OAIFailedServiceActionAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_action_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_artifact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFailedServiceActionAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
