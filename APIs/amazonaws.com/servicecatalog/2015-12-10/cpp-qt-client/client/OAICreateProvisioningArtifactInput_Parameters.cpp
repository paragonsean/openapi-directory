/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProvisioningArtifactInput_Parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProvisioningArtifactInput_Parameters::OAICreateProvisioningArtifactInput_Parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProvisioningArtifactInput_Parameters::OAICreateProvisioningArtifactInput_Parameters() {
    this->initializeModel();
}

OAICreateProvisioningArtifactInput_Parameters::~OAICreateProvisioningArtifactInput_Parameters() {}

void OAICreateProvisioningArtifactInput_Parameters::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_info_isSet = false;
    m_info_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_disable_template_validation_isSet = false;
    m_disable_template_validation_isValid = false;
}

void OAICreateProvisioningArtifactInput_Parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProvisioningArtifactInput_Parameters::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("Info")]);
    m_info_isSet = !json[QString("Info")].isNull() && m_info_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_disable_template_validation_isValid = ::OpenAPI::fromJsonValue(m_disable_template_validation, json[QString("DisableTemplateValidation")]);
    m_disable_template_validation_isSet = !json[QString("DisableTemplateValidation")].isNull() && m_disable_template_validation_isValid;
}

QString OAICreateProvisioningArtifactInput_Parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProvisioningArtifactInput_Parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_info.isSet()) {
        obj.insert(QString("Info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_disable_template_validation_isSet) {
        obj.insert(QString("DisableTemplateValidation"), ::OpenAPI::toJsonValue(m_disable_template_validation));
    }
    return obj;
}

QString OAICreateProvisioningArtifactInput_Parameters::getName() const {
    return m_name;
}
void OAICreateProvisioningArtifactInput_Parameters::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateProvisioningArtifactInput_Parameters::getDescription() const {
    return m_description;
}
void OAICreateProvisioningArtifactInput_Parameters::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_description_Valid() const{
    return m_description_isValid;
}

QMap OAICreateProvisioningArtifactInput_Parameters::getInfo() const {
    return m_info;
}
void OAICreateProvisioningArtifactInput_Parameters::setInfo(const QMap &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_info_Set() const{
    return m_info_isSet;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_info_Valid() const{
    return m_info_isValid;
}

OAIProvisioningArtifactType OAICreateProvisioningArtifactInput_Parameters::getType() const {
    return m_type;
}
void OAICreateProvisioningArtifactInput_Parameters::setType(const OAIProvisioningArtifactType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreateProvisioningArtifactInput_Parameters::getDisableTemplateValidation() const {
    return m_disable_template_validation;
}
void OAICreateProvisioningArtifactInput_Parameters::setDisableTemplateValidation(const bool &disable_template_validation) {
    m_disable_template_validation = disable_template_validation;
    m_disable_template_validation_isSet = true;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_disable_template_validation_Set() const{
    return m_disable_template_validation_isSet;
}

bool OAICreateProvisioningArtifactInput_Parameters::is_disable_template_validation_Valid() const{
    return m_disable_template_validation_isValid;
}

bool OAICreateProvisioningArtifactInput_Parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_template_validation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProvisioningArtifactInput_Parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
