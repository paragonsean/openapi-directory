/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStackInstanceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStackInstanceStatus::OAIStackInstanceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStackInstanceStatus::OAIStackInstanceStatus() {
    this->initializeModel();
}

OAIStackInstanceStatus::~OAIStackInstanceStatus() {}

void OAIStackInstanceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStackInstanceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStackInstanceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CURRENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStackInstanceStatus::CURRENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OUTDATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStackInstanceStatus::OUTDATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INOPERABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStackInstanceStatus::INOPERABLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStackInstanceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStackInstanceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStackInstanceStatus::CURRENT:
            val = "CURRENT";
            break;
        case eOAIStackInstanceStatus::OUTDATED:
            val = "OUTDATED";
            break;
        case eOAIStackInstanceStatus::INOPERABLE:
            val = "INOPERABLE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStackInstanceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStackInstanceStatus::eOAIStackInstanceStatus OAIStackInstanceStatus::getValue() const {
    return m_value;
}

void OAIStackInstanceStatus::setValue(const OAIStackInstanceStatus::eOAIStackInstanceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStackInstanceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIStackInstanceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
