/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceActionAssociationErrorCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceActionAssociationErrorCode::OAIServiceActionAssociationErrorCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceActionAssociationErrorCode::OAIServiceActionAssociationErrorCode() {
    this->initializeModel();
}

OAIServiceActionAssociationErrorCode::~OAIServiceActionAssociationErrorCode() {}

void OAIServiceActionAssociationErrorCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServiceActionAssociationErrorCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServiceActionAssociationErrorCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DUPLICATE_RESOURCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceActionAssociationErrorCode::DUPLICATE_RESOURCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INTERNAL_FAILURE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceActionAssociationErrorCode::INTERNAL_FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIMIT_EXCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceActionAssociationErrorCode::LIMIT_EXCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RESOURCE_NOT_FOUND", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceActionAssociationErrorCode::RESOURCE_NOT_FOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("THROTTLING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceActionAssociationErrorCode::THROTTLING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVALID_PARAMETER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceActionAssociationErrorCode::INVALID_PARAMETER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServiceActionAssociationErrorCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServiceActionAssociationErrorCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServiceActionAssociationErrorCode::DUPLICATE_RESOURCE:
            val = "DUPLICATE_RESOURCE";
            break;
        case eOAIServiceActionAssociationErrorCode::INTERNAL_FAILURE:
            val = "INTERNAL_FAILURE";
            break;
        case eOAIServiceActionAssociationErrorCode::LIMIT_EXCEEDED:
            val = "LIMIT_EXCEEDED";
            break;
        case eOAIServiceActionAssociationErrorCode::RESOURCE_NOT_FOUND:
            val = "RESOURCE_NOT_FOUND";
            break;
        case eOAIServiceActionAssociationErrorCode::THROTTLING:
            val = "THROTTLING";
            break;
        case eOAIServiceActionAssociationErrorCode::INVALID_PARAMETER:
            val = "INVALID_PARAMETER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServiceActionAssociationErrorCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServiceActionAssociationErrorCode::eOAIServiceActionAssociationErrorCode OAIServiceActionAssociationErrorCode::getValue() const {
    return m_value;
}

void OAIServiceActionAssociationErrorCode::setValue(const OAIServiceActionAssociationErrorCode::eOAIServiceActionAssociationErrorCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServiceActionAssociationErrorCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIServiceActionAssociationErrorCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
