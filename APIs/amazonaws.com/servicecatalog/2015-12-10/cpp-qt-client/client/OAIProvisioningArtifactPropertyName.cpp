/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisioningArtifactPropertyName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisioningArtifactPropertyName::OAIProvisioningArtifactPropertyName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisioningArtifactPropertyName::OAIProvisioningArtifactPropertyName() {
    this->initializeModel();
}

OAIProvisioningArtifactPropertyName::~OAIProvisioningArtifactPropertyName() {}

void OAIProvisioningArtifactPropertyName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProvisioningArtifactPropertyName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProvisioningArtifactPropertyName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisioningArtifactPropertyName::ID;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProvisioningArtifactPropertyName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProvisioningArtifactPropertyName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProvisioningArtifactPropertyName::ID:
            val = "Id";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProvisioningArtifactPropertyName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProvisioningArtifactPropertyName::eOAIProvisioningArtifactPropertyName OAIProvisioningArtifactPropertyName::getValue() const {
    return m_value;
}

void OAIProvisioningArtifactPropertyName::setValue(const OAIProvisioningArtifactPropertyName::eOAIProvisioningArtifactPropertyName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProvisioningArtifactPropertyName::isSet() const {
    
    return m_value_isSet;
}

bool OAIProvisioningArtifactPropertyName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
