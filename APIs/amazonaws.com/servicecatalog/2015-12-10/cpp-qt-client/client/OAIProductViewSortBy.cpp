/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductViewSortBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductViewSortBy::OAIProductViewSortBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductViewSortBy::OAIProductViewSortBy() {
    this->initializeModel();
}

OAIProductViewSortBy::~OAIProductViewSortBy() {}

void OAIProductViewSortBy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProductViewSortBy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProductViewSortBy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Title", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewSortBy::TITLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VersionCount", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewSortBy::VERSIONCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CreationDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewSortBy::CREATIONDATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProductViewSortBy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProductViewSortBy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProductViewSortBy::TITLE:
            val = "Title";
            break;
        case eOAIProductViewSortBy::VERSIONCOUNT:
            val = "VersionCount";
            break;
        case eOAIProductViewSortBy::CREATIONDATE:
            val = "CreationDate";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProductViewSortBy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProductViewSortBy::eOAIProductViewSortBy OAIProductViewSortBy::getValue() const {
    return m_value;
}

void OAIProductViewSortBy::setValue(const OAIProductViewSortBy::eOAIProductViewSortBy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProductViewSortBy::isSet() const {
    
    return m_value_isSet;
}

bool OAIProductViewSortBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
