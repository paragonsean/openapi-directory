/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShareStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShareStatus::OAIShareStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShareStatus::OAIShareStatus() {
    this->initializeModel();
}

OAIShareStatus::~OAIShareStatus() {}

void OAIShareStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIShareStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIShareStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NOT_STARTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIShareStatus::NOT_STARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIShareStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIShareStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETED_WITH_ERRORS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIShareStatus::COMPLETED_WITH_ERRORS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIShareStatus::ERROR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIShareStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIShareStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIShareStatus::NOT_STARTED:
            val = "NOT_STARTED";
            break;
        case eOAIShareStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIShareStatus::COMPLETED:
            val = "COMPLETED";
            break;
        case eOAIShareStatus::COMPLETED_WITH_ERRORS:
            val = "COMPLETED_WITH_ERRORS";
            break;
        case eOAIShareStatus::ERROR:
            val = "ERROR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIShareStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIShareStatus::eOAIShareStatus OAIShareStatus::getValue() const {
    return m_value;
}

void OAIShareStatus::setValue(const OAIShareStatus::eOAIShareStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIShareStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIShareStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
