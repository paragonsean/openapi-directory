/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateServiceActionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateServiceActionOutput::OAICreateServiceActionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateServiceActionOutput::OAICreateServiceActionOutput() {
    this->initializeModel();
}

OAICreateServiceActionOutput::~OAICreateServiceActionOutput() {}

void OAICreateServiceActionOutput::initializeModel() {

    m_service_action_detail_isSet = false;
    m_service_action_detail_isValid = false;
}

void OAICreateServiceActionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateServiceActionOutput::fromJsonObject(QJsonObject json) {

    m_service_action_detail_isValid = ::OpenAPI::fromJsonValue(m_service_action_detail, json[QString("ServiceActionDetail")]);
    m_service_action_detail_isSet = !json[QString("ServiceActionDetail")].isNull() && m_service_action_detail_isValid;
}

QString OAICreateServiceActionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateServiceActionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_service_action_detail.isSet()) {
        obj.insert(QString("ServiceActionDetail"), ::OpenAPI::toJsonValue(m_service_action_detail));
    }
    return obj;
}

OAICreateServiceActionOutput_ServiceActionDetail OAICreateServiceActionOutput::getServiceActionDetail() const {
    return m_service_action_detail;
}
void OAICreateServiceActionOutput::setServiceActionDetail(const OAICreateServiceActionOutput_ServiceActionDetail &service_action_detail) {
    m_service_action_detail = service_action_detail;
    m_service_action_detail_isSet = true;
}

bool OAICreateServiceActionOutput::is_service_action_detail_Set() const{
    return m_service_action_detail_isSet;
}

bool OAICreateServiceActionOutput::is_service_action_detail_Valid() const{
    return m_service_action_detail_isValid;
}

bool OAICreateServiceActionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_action_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateServiceActionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
