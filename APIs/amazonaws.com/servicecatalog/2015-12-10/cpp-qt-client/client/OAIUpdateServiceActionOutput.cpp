/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateServiceActionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateServiceActionOutput::OAIUpdateServiceActionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateServiceActionOutput::OAIUpdateServiceActionOutput() {
    this->initializeModel();
}

OAIUpdateServiceActionOutput::~OAIUpdateServiceActionOutput() {}

void OAIUpdateServiceActionOutput::initializeModel() {

    m_service_action_detail_isSet = false;
    m_service_action_detail_isValid = false;
}

void OAIUpdateServiceActionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateServiceActionOutput::fromJsonObject(QJsonObject json) {

    m_service_action_detail_isValid = ::OpenAPI::fromJsonValue(m_service_action_detail, json[QString("ServiceActionDetail")]);
    m_service_action_detail_isSet = !json[QString("ServiceActionDetail")].isNull() && m_service_action_detail_isValid;
}

QString OAIUpdateServiceActionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateServiceActionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_service_action_detail.isSet()) {
        obj.insert(QString("ServiceActionDetail"), ::OpenAPI::toJsonValue(m_service_action_detail));
    }
    return obj;
}

OAIDescribeServiceActionOutput_ServiceActionDetail OAIUpdateServiceActionOutput::getServiceActionDetail() const {
    return m_service_action_detail;
}
void OAIUpdateServiceActionOutput::setServiceActionDetail(const OAIDescribeServiceActionOutput_ServiceActionDetail &service_action_detail) {
    m_service_action_detail = service_action_detail;
    m_service_action_detail_isSet = true;
}

bool OAIUpdateServiceActionOutput::is_service_action_detail_Set() const{
    return m_service_action_detail_isSet;
}

bool OAIUpdateServiceActionOutput::is_service_action_detail_Valid() const{
    return m_service_action_detail_isValid;
}

bool OAIUpdateServiceActionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_action_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateServiceActionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
