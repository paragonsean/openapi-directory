/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITerminateProvisionedProductInput.h
 *
 * 
 */

#ifndef OAITerminateProvisionedProductInput_H
#define OAITerminateProvisionedProductInput_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITerminateProvisionedProductInput : public OAIObject {
public:
    OAITerminateProvisionedProductInput();
    OAITerminateProvisionedProductInput(QString json);
    ~OAITerminateProvisionedProductInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProvisionedProductName() const;
    void setProvisionedProductName(const QString &provisioned_product_name);
    bool is_provisioned_product_name_Set() const;
    bool is_provisioned_product_name_Valid() const;

    QString getProvisionedProductId() const;
    void setProvisionedProductId(const QString &provisioned_product_id);
    bool is_provisioned_product_id_Set() const;
    bool is_provisioned_product_id_Valid() const;

    QString getTerminateToken() const;
    void setTerminateToken(const QString &terminate_token);
    bool is_terminate_token_Set() const;
    bool is_terminate_token_Valid() const;

    bool getIgnoreErrors() const;
    void setIgnoreErrors(const bool &ignore_errors);
    bool is_ignore_errors_Set() const;
    bool is_ignore_errors_Valid() const;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    bool getRetainPhysicalResources() const;
    void setRetainPhysicalResources(const bool &retain_physical_resources);
    bool is_retain_physical_resources_Set() const;
    bool is_retain_physical_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_provisioned_product_name;
    bool m_provisioned_product_name_isSet;
    bool m_provisioned_product_name_isValid;

    QString m_provisioned_product_id;
    bool m_provisioned_product_id_isSet;
    bool m_provisioned_product_id_isValid;

    QString m_terminate_token;
    bool m_terminate_token_isSet;
    bool m_terminate_token_isValid;

    bool m_ignore_errors;
    bool m_ignore_errors_isSet;
    bool m_ignore_errors_isValid;

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    bool m_retain_physical_resources;
    bool m_retain_physical_resources_isSet;
    bool m_retain_physical_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITerminateProvisionedProductInput)

#endif // OAITerminateProvisionedProductInput_H
