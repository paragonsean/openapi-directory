/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPortfolioShareDetail.h
 *
 * Information about the portfolio share.
 */

#ifndef OAIPortfolioShareDetail_H
#define OAIPortfolioShareDetail_H

#include <QJsonObject>

#include "OAIDescribePortfolioShareType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPortfolioShareDetail : public OAIObject {
public:
    OAIPortfolioShareDetail();
    OAIPortfolioShareDetail(QString json);
    ~OAIPortfolioShareDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPrincipalId() const;
    void setPrincipalId(const QString &principal_id);
    bool is_principal_id_Set() const;
    bool is_principal_id_Valid() const;

    OAIDescribePortfolioShareType getType() const;
    void setType(const OAIDescribePortfolioShareType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool getAccepted() const;
    void setAccepted(const bool &accepted);
    bool is_accepted_Set() const;
    bool is_accepted_Valid() const;

    bool getShareTagOptions() const;
    void setShareTagOptions(const bool &share_tag_options);
    bool is_share_tag_options_Set() const;
    bool is_share_tag_options_Valid() const;

    bool getSharePrincipals() const;
    void setSharePrincipals(const bool &share_principals);
    bool is_share_principals_Set() const;
    bool is_share_principals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_principal_id;
    bool m_principal_id_isSet;
    bool m_principal_id_isValid;

    OAIDescribePortfolioShareType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_accepted;
    bool m_accepted_isSet;
    bool m_accepted_isValid;

    bool m_share_tag_options;
    bool m_share_tag_options_isSet;
    bool m_share_tag_options_isValid;

    bool m_share_principals;
    bool m_share_principals_isSet;
    bool m_share_principals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPortfolioShareDetail)

#endif // OAIPortfolioShareDetail_H
