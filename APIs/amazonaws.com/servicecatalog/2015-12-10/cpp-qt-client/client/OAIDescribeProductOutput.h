/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeProductOutput.h
 *
 * 
 */

#ifndef OAIDescribeProductOutput_H
#define OAIDescribeProductOutput_H

#include <QJsonObject>

#include "OAIDescribeProductOutput_ProductViewSummary.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeProductOutput_ProductViewSummary;

class OAIDescribeProductOutput : public OAIObject {
public:
    OAIDescribeProductOutput();
    OAIDescribeProductOutput(QString json);
    ~OAIDescribeProductOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDescribeProductOutput_ProductViewSummary getProductViewSummary() const;
    void setProductViewSummary(const OAIDescribeProductOutput_ProductViewSummary &product_view_summary);
    bool is_product_view_summary_Set() const;
    bool is_product_view_summary_Valid() const;

    QList getProvisioningArtifacts() const;
    void setProvisioningArtifacts(const QList &provisioning_artifacts);
    bool is_provisioning_artifacts_Set() const;
    bool is_provisioning_artifacts_Valid() const;

    QList getBudgets() const;
    void setBudgets(const QList &budgets);
    bool is_budgets_Set() const;
    bool is_budgets_Valid() const;

    QList getLaunchPaths() const;
    void setLaunchPaths(const QList &launch_paths);
    bool is_launch_paths_Set() const;
    bool is_launch_paths_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDescribeProductOutput_ProductViewSummary m_product_view_summary;
    bool m_product_view_summary_isSet;
    bool m_product_view_summary_isValid;

    QList m_provisioning_artifacts;
    bool m_provisioning_artifacts_isSet;
    bool m_provisioning_artifacts_isValid;

    QList m_budgets;
    bool m_budgets_isSet;
    bool m_budgets_isValid;

    QList m_launch_paths;
    bool m_launch_paths_isSet;
    bool m_launch_paths_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeProductOutput)

#endif // OAIDescribeProductOutput_H
