/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdatePortfolioOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdatePortfolioOutput::OAIUpdatePortfolioOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdatePortfolioOutput::OAIUpdatePortfolioOutput() {
    this->initializeModel();
}

OAIUpdatePortfolioOutput::~OAIUpdatePortfolioOutput() {}

void OAIUpdatePortfolioOutput::initializeModel() {

    m_portfolio_detail_isSet = false;
    m_portfolio_detail_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIUpdatePortfolioOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdatePortfolioOutput::fromJsonObject(QJsonObject json) {

    m_portfolio_detail_isValid = ::OpenAPI::fromJsonValue(m_portfolio_detail, json[QString("PortfolioDetail")]);
    m_portfolio_detail_isSet = !json[QString("PortfolioDetail")].isNull() && m_portfolio_detail_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIUpdatePortfolioOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdatePortfolioOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_portfolio_detail.isSet()) {
        obj.insert(QString("PortfolioDetail"), ::OpenAPI::toJsonValue(m_portfolio_detail));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAICreatePortfolioOutput_PortfolioDetail OAIUpdatePortfolioOutput::getPortfolioDetail() const {
    return m_portfolio_detail;
}
void OAIUpdatePortfolioOutput::setPortfolioDetail(const OAICreatePortfolioOutput_PortfolioDetail &portfolio_detail) {
    m_portfolio_detail = portfolio_detail;
    m_portfolio_detail_isSet = true;
}

bool OAIUpdatePortfolioOutput::is_portfolio_detail_Set() const{
    return m_portfolio_detail_isSet;
}

bool OAIUpdatePortfolioOutput::is_portfolio_detail_Valid() const{
    return m_portfolio_detail_isValid;
}

QList OAIUpdatePortfolioOutput::getTags() const {
    return m_tags;
}
void OAIUpdatePortfolioOutput::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIUpdatePortfolioOutput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIUpdatePortfolioOutput::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIUpdatePortfolioOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_portfolio_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdatePortfolioOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
