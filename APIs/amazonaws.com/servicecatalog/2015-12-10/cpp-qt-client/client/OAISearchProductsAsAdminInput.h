/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchProductsAsAdminInput.h
 *
 * 
 */

#ifndef OAISearchProductsAsAdminInput_H
#define OAISearchProductsAsAdminInput_H

#include <QJsonObject>

#include "OAIProductSource.h"
#include "OAIProductViewSortBy.h"
#include "OAISortOrder.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchProductsAsAdminInput : public OAIObject {
public:
    OAISearchProductsAsAdminInput();
    OAISearchProductsAsAdminInput(QString json);
    ~OAISearchProductsAsAdminInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getPortfolioId() const;
    void setPortfolioId(const QString &portfolio_id);
    bool is_portfolio_id_Set() const;
    bool is_portfolio_id_Valid() const;

    QMap getFilters() const;
    void setFilters(const QMap &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    OAIProductViewSortBy getSortBy() const;
    void setSortBy(const OAIProductViewSortBy &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    OAISortOrder getSortOrder() const;
    void setSortOrder(const OAISortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    OAIProductSource getProductSource() const;
    void setProductSource(const OAIProductSource &product_source);
    bool is_product_source_Set() const;
    bool is_product_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_portfolio_id;
    bool m_portfolio_id_isSet;
    bool m_portfolio_id_isValid;

    QMap m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    OAIProductViewSortBy m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    OAISortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    OAIProductSource m_product_source;
    bool m_product_source_isSet;
    bool m_product_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchProductsAsAdminInput)

#endif // OAISearchProductsAsAdminInput_H
