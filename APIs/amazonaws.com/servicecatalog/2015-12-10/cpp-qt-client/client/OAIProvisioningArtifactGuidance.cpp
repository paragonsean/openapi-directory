/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisioningArtifactGuidance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisioningArtifactGuidance::OAIProvisioningArtifactGuidance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisioningArtifactGuidance::OAIProvisioningArtifactGuidance() {
    this->initializeModel();
}

OAIProvisioningArtifactGuidance::~OAIProvisioningArtifactGuidance() {}

void OAIProvisioningArtifactGuidance::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProvisioningArtifactGuidance::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProvisioningArtifactGuidance::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEFAULT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisioningArtifactGuidance::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEPRECATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisioningArtifactGuidance::DEPRECATED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProvisioningArtifactGuidance::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProvisioningArtifactGuidance::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProvisioningArtifactGuidance::DEFAULT:
            val = "DEFAULT";
            break;
        case eOAIProvisioningArtifactGuidance::DEPRECATED:
            val = "DEPRECATED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProvisioningArtifactGuidance::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProvisioningArtifactGuidance::eOAIProvisioningArtifactGuidance OAIProvisioningArtifactGuidance::getValue() const {
    return m_value;
}

void OAIProvisioningArtifactGuidance::setValue(const OAIProvisioningArtifactGuidance::eOAIProvisioningArtifactGuidance& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProvisioningArtifactGuidance::isSet() const {
    
    return m_value_isSet;
}

bool OAIProvisioningArtifactGuidance::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
