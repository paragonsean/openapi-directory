/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDisassociateTagOptionFromResourceInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDisassociateTagOptionFromResourceInput::OAIDisassociateTagOptionFromResourceInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDisassociateTagOptionFromResourceInput::OAIDisassociateTagOptionFromResourceInput() {
    this->initializeModel();
}

OAIDisassociateTagOptionFromResourceInput::~OAIDisassociateTagOptionFromResourceInput() {}

void OAIDisassociateTagOptionFromResourceInput::initializeModel() {

    m_resource_id_isSet = false;
    m_resource_id_isValid = false;

    m_tag_option_id_isSet = false;
    m_tag_option_id_isValid = false;
}

void OAIDisassociateTagOptionFromResourceInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDisassociateTagOptionFromResourceInput::fromJsonObject(QJsonObject json) {

    m_resource_id_isValid = ::OpenAPI::fromJsonValue(m_resource_id, json[QString("ResourceId")]);
    m_resource_id_isSet = !json[QString("ResourceId")].isNull() && m_resource_id_isValid;

    m_tag_option_id_isValid = ::OpenAPI::fromJsonValue(m_tag_option_id, json[QString("TagOptionId")]);
    m_tag_option_id_isSet = !json[QString("TagOptionId")].isNull() && m_tag_option_id_isValid;
}

QString OAIDisassociateTagOptionFromResourceInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDisassociateTagOptionFromResourceInput::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_id_isSet) {
        obj.insert(QString("ResourceId"), ::OpenAPI::toJsonValue(m_resource_id));
    }
    if (m_tag_option_id_isSet) {
        obj.insert(QString("TagOptionId"), ::OpenAPI::toJsonValue(m_tag_option_id));
    }
    return obj;
}

QString OAIDisassociateTagOptionFromResourceInput::getResourceId() const {
    return m_resource_id;
}
void OAIDisassociateTagOptionFromResourceInput::setResourceId(const QString &resource_id) {
    m_resource_id = resource_id;
    m_resource_id_isSet = true;
}

bool OAIDisassociateTagOptionFromResourceInput::is_resource_id_Set() const{
    return m_resource_id_isSet;
}

bool OAIDisassociateTagOptionFromResourceInput::is_resource_id_Valid() const{
    return m_resource_id_isValid;
}

QString OAIDisassociateTagOptionFromResourceInput::getTagOptionId() const {
    return m_tag_option_id;
}
void OAIDisassociateTagOptionFromResourceInput::setTagOptionId(const QString &tag_option_id) {
    m_tag_option_id = tag_option_id;
    m_tag_option_id_isSet = true;
}

bool OAIDisassociateTagOptionFromResourceInput::is_tag_option_id_Set() const{
    return m_tag_option_id_isSet;
}

bool OAIDisassociateTagOptionFromResourceInput::is_tag_option_id_Valid() const{
    return m_tag_option_id_isValid;
}

bool OAIDisassociateTagOptionFromResourceInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDisassociateTagOptionFromResourceInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_id_isValid && m_tag_option_id_isValid && true;
}

} // namespace OpenAPI
