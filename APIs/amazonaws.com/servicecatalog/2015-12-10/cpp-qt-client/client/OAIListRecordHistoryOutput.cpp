/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListRecordHistoryOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListRecordHistoryOutput::OAIListRecordHistoryOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListRecordHistoryOutput::OAIListRecordHistoryOutput() {
    this->initializeModel();
}

OAIListRecordHistoryOutput::~OAIListRecordHistoryOutput() {}

void OAIListRecordHistoryOutput::initializeModel() {

    m_record_details_isSet = false;
    m_record_details_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListRecordHistoryOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListRecordHistoryOutput::fromJsonObject(QJsonObject json) {

    m_record_details_isValid = ::OpenAPI::fromJsonValue(m_record_details, json[QString("RecordDetails")]);
    m_record_details_isSet = !json[QString("RecordDetails")].isNull() && m_record_details_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListRecordHistoryOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListRecordHistoryOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_record_details.isSet()) {
        obj.insert(QString("RecordDetails"), ::OpenAPI::toJsonValue(m_record_details));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAIListRecordHistoryOutput::getRecordDetails() const {
    return m_record_details;
}
void OAIListRecordHistoryOutput::setRecordDetails(const QList &record_details) {
    m_record_details = record_details;
    m_record_details_isSet = true;
}

bool OAIListRecordHistoryOutput::is_record_details_Set() const{
    return m_record_details_isSet;
}

bool OAIListRecordHistoryOutput::is_record_details_Valid() const{
    return m_record_details_isValid;
}

QString OAIListRecordHistoryOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListRecordHistoryOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListRecordHistoryOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListRecordHistoryOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListRecordHistoryOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_record_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListRecordHistoryOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
