/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateProvisionedProductPlanInput.h
 *
 * 
 */

#ifndef OAICreateProvisionedProductPlanInput_H
#define OAICreateProvisionedProductPlanInput_H

#include <QJsonObject>

#include "OAIProvisionedProductPlanType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateProvisionedProductPlanInput : public OAIObject {
public:
    OAICreateProvisionedProductPlanInput();
    OAICreateProvisionedProductPlanInput(QString json);
    ~OAICreateProvisionedProductPlanInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getPlanName() const;
    void setPlanName(const QString &plan_name);
    bool is_plan_name_Set() const;
    bool is_plan_name_Valid() const;

    OAIProvisionedProductPlanType getPlanType() const;
    void setPlanType(const OAIProvisionedProductPlanType &plan_type);
    bool is_plan_type_Set() const;
    bool is_plan_type_Valid() const;

    QList getNotificationArns() const;
    void setNotificationArns(const QList &notification_arns);
    bool is_notification_arns_Set() const;
    bool is_notification_arns_Valid() const;

    QString getPathId() const;
    void setPathId(const QString &path_id);
    bool is_path_id_Set() const;
    bool is_path_id_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getProvisionedProductName() const;
    void setProvisionedProductName(const QString &provisioned_product_name);
    bool is_provisioned_product_name_Set() const;
    bool is_provisioned_product_name_Valid() const;

    QString getProvisioningArtifactId() const;
    void setProvisioningArtifactId(const QString &provisioning_artifact_id);
    bool is_provisioning_artifact_id_Set() const;
    bool is_provisioning_artifact_id_Valid() const;

    QList getProvisioningParameters() const;
    void setProvisioningParameters(const QList &provisioning_parameters);
    bool is_provisioning_parameters_Set() const;
    bool is_provisioning_parameters_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_plan_name;
    bool m_plan_name_isSet;
    bool m_plan_name_isValid;

    OAIProvisionedProductPlanType m_plan_type;
    bool m_plan_type_isSet;
    bool m_plan_type_isValid;

    QList m_notification_arns;
    bool m_notification_arns_isSet;
    bool m_notification_arns_isValid;

    QString m_path_id;
    bool m_path_id_isSet;
    bool m_path_id_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_provisioned_product_name;
    bool m_provisioned_product_name_isSet;
    bool m_provisioned_product_name_isValid;

    QString m_provisioning_artifact_id;
    bool m_provisioning_artifact_id_isSet;
    bool m_provisioning_artifact_id_isValid;

    QList m_provisioning_parameters;
    bool m_provisioning_parameters_isSet;
    bool m_provisioning_parameters_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateProvisionedProductPlanInput)

#endif // OAICreateProvisionedProductPlanInput_H
