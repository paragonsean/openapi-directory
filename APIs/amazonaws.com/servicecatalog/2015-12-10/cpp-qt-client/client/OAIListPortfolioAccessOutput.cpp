/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListPortfolioAccessOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListPortfolioAccessOutput::OAIListPortfolioAccessOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListPortfolioAccessOutput::OAIListPortfolioAccessOutput() {
    this->initializeModel();
}

OAIListPortfolioAccessOutput::~OAIListPortfolioAccessOutput() {}

void OAIListPortfolioAccessOutput::initializeModel() {

    m_account_ids_isSet = false;
    m_account_ids_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListPortfolioAccessOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListPortfolioAccessOutput::fromJsonObject(QJsonObject json) {

    m_account_ids_isValid = ::OpenAPI::fromJsonValue(m_account_ids, json[QString("AccountIds")]);
    m_account_ids_isSet = !json[QString("AccountIds")].isNull() && m_account_ids_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListPortfolioAccessOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListPortfolioAccessOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_account_ids.isSet()) {
        obj.insert(QString("AccountIds"), ::OpenAPI::toJsonValue(m_account_ids));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAIListPortfolioAccessOutput::getAccountIds() const {
    return m_account_ids;
}
void OAIListPortfolioAccessOutput::setAccountIds(const QList &account_ids) {
    m_account_ids = account_ids;
    m_account_ids_isSet = true;
}

bool OAIListPortfolioAccessOutput::is_account_ids_Set() const{
    return m_account_ids_isSet;
}

bool OAIListPortfolioAccessOutput::is_account_ids_Valid() const{
    return m_account_ids_isValid;
}

QString OAIListPortfolioAccessOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListPortfolioAccessOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListPortfolioAccessOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListPortfolioAccessOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListPortfolioAccessOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListPortfolioAccessOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
