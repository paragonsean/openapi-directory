/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceConnectionParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceConnectionParameters::OAISourceConnectionParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceConnectionParameters::OAISourceConnectionParameters() {
    this->initializeModel();
}

OAISourceConnectionParameters::~OAISourceConnectionParameters() {}

void OAISourceConnectionParameters::initializeModel() {

    m_code_star_isSet = false;
    m_code_star_isValid = false;
}

void OAISourceConnectionParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceConnectionParameters::fromJsonObject(QJsonObject json) {

    m_code_star_isValid = ::OpenAPI::fromJsonValue(m_code_star, json[QString("CodeStar")]);
    m_code_star_isSet = !json[QString("CodeStar")].isNull() && m_code_star_isValid;
}

QString OAISourceConnectionParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceConnectionParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_code_star.isSet()) {
        obj.insert(QString("CodeStar"), ::OpenAPI::toJsonValue(m_code_star));
    }
    return obj;
}

OAISourceConnectionParameters_CodeStar OAISourceConnectionParameters::getCodeStar() const {
    return m_code_star;
}
void OAISourceConnectionParameters::setCodeStar(const OAISourceConnectionParameters_CodeStar &code_star) {
    m_code_star = code_star;
    m_code_star_isSet = true;
}

bool OAISourceConnectionParameters::is_code_star_Set() const{
    return m_code_star_isSet;
}

bool OAISourceConnectionParameters::is_code_star_Valid() const{
    return m_code_star_isValid;
}

bool OAISourceConnectionParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_star.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceConnectionParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
