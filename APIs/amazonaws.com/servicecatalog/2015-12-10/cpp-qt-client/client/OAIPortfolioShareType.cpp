/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPortfolioShareType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPortfolioShareType::OAIPortfolioShareType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPortfolioShareType::OAIPortfolioShareType() {
    this->initializeModel();
}

OAIPortfolioShareType::~OAIPortfolioShareType() {}

void OAIPortfolioShareType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPortfolioShareType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPortfolioShareType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IMPORTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPortfolioShareType::IMPORTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AWS_SERVICECATALOG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPortfolioShareType::AWS_SERVICECATALOG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AWS_ORGANIZATIONS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPortfolioShareType::AWS_ORGANIZATIONS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPortfolioShareType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPortfolioShareType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPortfolioShareType::IMPORTED:
            val = "IMPORTED";
            break;
        case eOAIPortfolioShareType::AWS_SERVICECATALOG:
            val = "AWS_SERVICECATALOG";
            break;
        case eOAIPortfolioShareType::AWS_ORGANIZATIONS:
            val = "AWS_ORGANIZATIONS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPortfolioShareType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPortfolioShareType::eOAIPortfolioShareType OAIPortfolioShareType::getValue() const {
    return m_value;
}

void OAIPortfolioShareType::setValue(const OAIPortfolioShareType::eOAIPortfolioShareType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPortfolioShareType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPortfolioShareType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
