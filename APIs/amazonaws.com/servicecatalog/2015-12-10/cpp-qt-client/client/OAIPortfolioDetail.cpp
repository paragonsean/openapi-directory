/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPortfolioDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPortfolioDetail::OAIPortfolioDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPortfolioDetail::OAIPortfolioDetail() {
    this->initializeModel();
}

OAIPortfolioDetail::~OAIPortfolioDetail() {}

void OAIPortfolioDetail::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_provider_name_isSet = false;
    m_provider_name_isValid = false;
}

void OAIPortfolioDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPortfolioDetail::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("ARN")]);
    m_arn_isSet = !json[QString("ARN")].isNull() && m_arn_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_provider_name_isValid = ::OpenAPI::fromJsonValue(m_provider_name, json[QString("ProviderName")]);
    m_provider_name_isSet = !json[QString("ProviderName")].isNull() && m_provider_name_isValid;
}

QString OAIPortfolioDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPortfolioDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("ARN"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_provider_name_isSet) {
        obj.insert(QString("ProviderName"), ::OpenAPI::toJsonValue(m_provider_name));
    }
    return obj;
}

QString OAIPortfolioDetail::getId() const {
    return m_id;
}
void OAIPortfolioDetail::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPortfolioDetail::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPortfolioDetail::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPortfolioDetail::getArn() const {
    return m_arn;
}
void OAIPortfolioDetail::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIPortfolioDetail::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIPortfolioDetail::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIPortfolioDetail::getDisplayName() const {
    return m_display_name;
}
void OAIPortfolioDetail::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIPortfolioDetail::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIPortfolioDetail::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIPortfolioDetail::getDescription() const {
    return m_description;
}
void OAIPortfolioDetail::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPortfolioDetail::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPortfolioDetail::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIPortfolioDetail::getCreatedTime() const {
    return m_created_time;
}
void OAIPortfolioDetail::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIPortfolioDetail::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIPortfolioDetail::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIPortfolioDetail::getProviderName() const {
    return m_provider_name;
}
void OAIPortfolioDetail::setProviderName(const QString &provider_name) {
    m_provider_name = provider_name;
    m_provider_name_isSet = true;
}

bool OAIPortfolioDetail::is_provider_name_Set() const{
    return m_provider_name_isSet;
}

bool OAIPortfolioDetail::is_provider_name_Valid() const{
    return m_provider_name_isValid;
}

bool OAIPortfolioDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPortfolioDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
