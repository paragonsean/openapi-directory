/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListServiceActionsForProvisioningArtifactOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListServiceActionsForProvisioningArtifactOutput::OAIListServiceActionsForProvisioningArtifactOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListServiceActionsForProvisioningArtifactOutput::OAIListServiceActionsForProvisioningArtifactOutput() {
    this->initializeModel();
}

OAIListServiceActionsForProvisioningArtifactOutput::~OAIListServiceActionsForProvisioningArtifactOutput() {}

void OAIListServiceActionsForProvisioningArtifactOutput::initializeModel() {

    m_service_action_summaries_isSet = false;
    m_service_action_summaries_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListServiceActionsForProvisioningArtifactOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListServiceActionsForProvisioningArtifactOutput::fromJsonObject(QJsonObject json) {

    m_service_action_summaries_isValid = ::OpenAPI::fromJsonValue(m_service_action_summaries, json[QString("ServiceActionSummaries")]);
    m_service_action_summaries_isSet = !json[QString("ServiceActionSummaries")].isNull() && m_service_action_summaries_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListServiceActionsForProvisioningArtifactOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListServiceActionsForProvisioningArtifactOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_service_action_summaries.isSet()) {
        obj.insert(QString("ServiceActionSummaries"), ::OpenAPI::toJsonValue(m_service_action_summaries));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAIListServiceActionsForProvisioningArtifactOutput::getServiceActionSummaries() const {
    return m_service_action_summaries;
}
void OAIListServiceActionsForProvisioningArtifactOutput::setServiceActionSummaries(const QList &service_action_summaries) {
    m_service_action_summaries = service_action_summaries;
    m_service_action_summaries_isSet = true;
}

bool OAIListServiceActionsForProvisioningArtifactOutput::is_service_action_summaries_Set() const{
    return m_service_action_summaries_isSet;
}

bool OAIListServiceActionsForProvisioningArtifactOutput::is_service_action_summaries_Valid() const{
    return m_service_action_summaries_isValid;
}

QString OAIListServiceActionsForProvisioningArtifactOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListServiceActionsForProvisioningArtifactOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListServiceActionsForProvisioningArtifactOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListServiceActionsForProvisioningArtifactOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListServiceActionsForProvisioningArtifactOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_action_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListServiceActionsForProvisioningArtifactOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
