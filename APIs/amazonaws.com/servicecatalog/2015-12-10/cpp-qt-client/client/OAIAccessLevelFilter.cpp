/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessLevelFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessLevelFilter::OAIAccessLevelFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessLevelFilter::OAIAccessLevelFilter() {
    this->initializeModel();
}

OAIAccessLevelFilter::~OAIAccessLevelFilter() {}

void OAIAccessLevelFilter::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIAccessLevelFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessLevelFilter::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("Key")]);
    m_key_isSet = !json[QString("Key")].isNull() && m_key_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIAccessLevelFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessLevelFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_key.isSet()) {
        obj.insert(QString("Key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAIAccessLevelFilterKey OAIAccessLevelFilter::getKey() const {
    return m_key;
}
void OAIAccessLevelFilter::setKey(const OAIAccessLevelFilterKey &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIAccessLevelFilter::is_key_Set() const{
    return m_key_isSet;
}

bool OAIAccessLevelFilter::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIAccessLevelFilter::getValue() const {
    return m_value;
}
void OAIAccessLevelFilter::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIAccessLevelFilter::is_value_Set() const{
    return m_value_isSet;
}

bool OAIAccessLevelFilter::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIAccessLevelFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessLevelFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
