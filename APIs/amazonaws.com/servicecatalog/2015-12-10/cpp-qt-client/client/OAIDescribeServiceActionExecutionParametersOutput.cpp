/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeServiceActionExecutionParametersOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeServiceActionExecutionParametersOutput::OAIDescribeServiceActionExecutionParametersOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeServiceActionExecutionParametersOutput::OAIDescribeServiceActionExecutionParametersOutput() {
    this->initializeModel();
}

OAIDescribeServiceActionExecutionParametersOutput::~OAIDescribeServiceActionExecutionParametersOutput() {}

void OAIDescribeServiceActionExecutionParametersOutput::initializeModel() {

    m_service_action_parameters_isSet = false;
    m_service_action_parameters_isValid = false;
}

void OAIDescribeServiceActionExecutionParametersOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeServiceActionExecutionParametersOutput::fromJsonObject(QJsonObject json) {

    m_service_action_parameters_isValid = ::OpenAPI::fromJsonValue(m_service_action_parameters, json[QString("ServiceActionParameters")]);
    m_service_action_parameters_isSet = !json[QString("ServiceActionParameters")].isNull() && m_service_action_parameters_isValid;
}

QString OAIDescribeServiceActionExecutionParametersOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeServiceActionExecutionParametersOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_service_action_parameters.isSet()) {
        obj.insert(QString("ServiceActionParameters"), ::OpenAPI::toJsonValue(m_service_action_parameters));
    }
    return obj;
}

QList OAIDescribeServiceActionExecutionParametersOutput::getServiceActionParameters() const {
    return m_service_action_parameters;
}
void OAIDescribeServiceActionExecutionParametersOutput::setServiceActionParameters(const QList &service_action_parameters) {
    m_service_action_parameters = service_action_parameters;
    m_service_action_parameters_isSet = true;
}

bool OAIDescribeServiceActionExecutionParametersOutput::is_service_action_parameters_Set() const{
    return m_service_action_parameters_isSet;
}

bool OAIDescribeServiceActionExecutionParametersOutput::is_service_action_parameters_Valid() const{
    return m_service_action_parameters_isValid;
}

bool OAIDescribeServiceActionExecutionParametersOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_action_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeServiceActionExecutionParametersOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
