/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICopyProductOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICopyProductOutput::OAICopyProductOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICopyProductOutput::OAICopyProductOutput() {
    this->initializeModel();
}

OAICopyProductOutput::~OAICopyProductOutput() {}

void OAICopyProductOutput::initializeModel() {

    m_copy_product_token_isSet = false;
    m_copy_product_token_isValid = false;
}

void OAICopyProductOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICopyProductOutput::fromJsonObject(QJsonObject json) {

    m_copy_product_token_isValid = ::OpenAPI::fromJsonValue(m_copy_product_token, json[QString("CopyProductToken")]);
    m_copy_product_token_isSet = !json[QString("CopyProductToken")].isNull() && m_copy_product_token_isValid;
}

QString OAICopyProductOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICopyProductOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_copy_product_token_isSet) {
        obj.insert(QString("CopyProductToken"), ::OpenAPI::toJsonValue(m_copy_product_token));
    }
    return obj;
}

QString OAICopyProductOutput::getCopyProductToken() const {
    return m_copy_product_token;
}
void OAICopyProductOutput::setCopyProductToken(const QString &copy_product_token) {
    m_copy_product_token = copy_product_token;
    m_copy_product_token_isSet = true;
}

bool OAICopyProductOutput::is_copy_product_token_Set() const{
    return m_copy_product_token_isSet;
}

bool OAICopyProductOutput::is_copy_product_token_Valid() const{
    return m_copy_product_token_isValid;
}

bool OAICopyProductOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_copy_product_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICopyProductOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
