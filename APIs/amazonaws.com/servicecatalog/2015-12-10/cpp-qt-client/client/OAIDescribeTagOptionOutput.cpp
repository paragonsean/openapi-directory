/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeTagOptionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeTagOptionOutput::OAIDescribeTagOptionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeTagOptionOutput::OAIDescribeTagOptionOutput() {
    this->initializeModel();
}

OAIDescribeTagOptionOutput::~OAIDescribeTagOptionOutput() {}

void OAIDescribeTagOptionOutput::initializeModel() {

    m_tag_option_detail_isSet = false;
    m_tag_option_detail_isValid = false;
}

void OAIDescribeTagOptionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeTagOptionOutput::fromJsonObject(QJsonObject json) {

    m_tag_option_detail_isValid = ::OpenAPI::fromJsonValue(m_tag_option_detail, json[QString("TagOptionDetail")]);
    m_tag_option_detail_isSet = !json[QString("TagOptionDetail")].isNull() && m_tag_option_detail_isValid;
}

QString OAIDescribeTagOptionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeTagOptionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_tag_option_detail.isSet()) {
        obj.insert(QString("TagOptionDetail"), ::OpenAPI::toJsonValue(m_tag_option_detail));
    }
    return obj;
}

OAICreateTagOptionOutput_TagOptionDetail OAIDescribeTagOptionOutput::getTagOptionDetail() const {
    return m_tag_option_detail;
}
void OAIDescribeTagOptionOutput::setTagOptionDetail(const OAICreateTagOptionOutput_TagOptionDetail &tag_option_detail) {
    m_tag_option_detail = tag_option_detail;
    m_tag_option_detail_isSet = true;
}

bool OAIDescribeTagOptionOutput::is_tag_option_detail_Set() const{
    return m_tag_option_detail_isSet;
}

bool OAIDescribeTagOptionOutput::is_tag_option_detail_Valid() const{
    return m_tag_option_detail_isValid;
}

bool OAIDescribeTagOptionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tag_option_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeTagOptionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
