/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisioningArtifactProperties.h
 *
 * Information about a provisioning artifact (also known as a version) for a product.
 */

#ifndef OAIProvisioningArtifactProperties_H
#define OAIProvisioningArtifactProperties_H

#include <QJsonObject>

#include "OAIProvisioningArtifactType.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProvisioningArtifactProperties : public OAIObject {
public:
    OAIProvisioningArtifactProperties();
    OAIProvisioningArtifactProperties(QString json);
    ~OAIProvisioningArtifactProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap getInfo() const;
    void setInfo(const QMap &info);
    bool is_info_Set() const;
    bool is_info_Valid() const;

    OAIProvisioningArtifactType getType() const;
    void setType(const OAIProvisioningArtifactType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool getDisableTemplateValidation() const;
    void setDisableTemplateValidation(const bool &disable_template_validation);
    bool is_disable_template_validation_Set() const;
    bool is_disable_template_validation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap m_info;
    bool m_info_isSet;
    bool m_info_isValid;

    OAIProvisioningArtifactType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_disable_template_validation;
    bool m_disable_template_validation_isSet;
    bool m_disable_template_validation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisioningArtifactProperties)

#endif // OAIProvisioningArtifactProperties_H
