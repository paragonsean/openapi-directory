/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeProvisioningArtifactInput.h
 *
 * 
 */

#ifndef OAIDescribeProvisioningArtifactInput_H
#define OAIDescribeProvisioningArtifactInput_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeProvisioningArtifactInput : public OAIObject {
public:
    OAIDescribeProvisioningArtifactInput();
    OAIDescribeProvisioningArtifactInput(QString json);
    ~OAIDescribeProvisioningArtifactInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getProvisioningArtifactId() const;
    void setProvisioningArtifactId(const QString &provisioning_artifact_id);
    bool is_provisioning_artifact_id_Set() const;
    bool is_provisioning_artifact_id_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getProvisioningArtifactName() const;
    void setProvisioningArtifactName(const QString &provisioning_artifact_name);
    bool is_provisioning_artifact_name_Set() const;
    bool is_provisioning_artifact_name_Valid() const;

    QString getProductName() const;
    void setProductName(const QString &product_name);
    bool is_product_name_Set() const;
    bool is_product_name_Valid() const;

    bool getVerbose() const;
    void setVerbose(const bool &verbose);
    bool is_verbose_Set() const;
    bool is_verbose_Valid() const;

    bool getIncludeProvisioningArtifactParameters() const;
    void setIncludeProvisioningArtifactParameters(const bool &include_provisioning_artifact_parameters);
    bool is_include_provisioning_artifact_parameters_Set() const;
    bool is_include_provisioning_artifact_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_provisioning_artifact_id;
    bool m_provisioning_artifact_id_isSet;
    bool m_provisioning_artifact_id_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_provisioning_artifact_name;
    bool m_provisioning_artifact_name_isSet;
    bool m_provisioning_artifact_name_isValid;

    QString m_product_name;
    bool m_product_name_isSet;
    bool m_product_name_isValid;

    bool m_verbose;
    bool m_verbose_isSet;
    bool m_verbose_isValid;

    bool m_include_provisioning_artifact_parameters;
    bool m_include_provisioning_artifact_parameters_isSet;
    bool m_include_provisioning_artifact_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeProvisioningArtifactInput)

#endif // OAIDescribeProvisioningArtifactInput_H
