/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisionedProductStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisionedProductStatus::OAIProvisionedProductStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisionedProductStatus::OAIProvisionedProductStatus() {
    this->initializeModel();
}

OAIProvisionedProductStatus::~OAIProvisionedProductStatus() {}

void OAIProvisionedProductStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProvisionedProductStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProvisionedProductStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AVAILABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductStatus::AVAILABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNDER_CHANGE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductStatus::UNDER_CHANGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TAINTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductStatus::TAINTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductStatus::ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PLAN_IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductStatus::PLAN_IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProvisionedProductStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProvisionedProductStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProvisionedProductStatus::AVAILABLE:
            val = "AVAILABLE";
            break;
        case eOAIProvisionedProductStatus::UNDER_CHANGE:
            val = "UNDER_CHANGE";
            break;
        case eOAIProvisionedProductStatus::TAINTED:
            val = "TAINTED";
            break;
        case eOAIProvisionedProductStatus::ERROR:
            val = "ERROR";
            break;
        case eOAIProvisionedProductStatus::PLAN_IN_PROGRESS:
            val = "PLAN_IN_PROGRESS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProvisionedProductStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProvisionedProductStatus::eOAIProvisionedProductStatus OAIProvisionedProductStatus::getValue() const {
    return m_value;
}

void OAIProvisionedProductStatus::setValue(const OAIProvisionedProductStatus::eOAIProvisionedProductStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProvisionedProductStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIProvisionedProductStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
