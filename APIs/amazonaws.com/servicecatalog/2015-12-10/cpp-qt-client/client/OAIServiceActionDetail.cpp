/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceActionDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceActionDetail::OAIServiceActionDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceActionDetail::OAIServiceActionDetail() {
    this->initializeModel();
}

OAIServiceActionDetail::~OAIServiceActionDetail() {}

void OAIServiceActionDetail::initializeModel() {

    m_service_action_summary_isSet = false;
    m_service_action_summary_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;
}

void OAIServiceActionDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceActionDetail::fromJsonObject(QJsonObject json) {

    m_service_action_summary_isValid = ::OpenAPI::fromJsonValue(m_service_action_summary, json[QString("ServiceActionSummary")]);
    m_service_action_summary_isSet = !json[QString("ServiceActionSummary")].isNull() && m_service_action_summary_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("Definition")]);
    m_definition_isSet = !json[QString("Definition")].isNull() && m_definition_isValid;
}

QString OAIServiceActionDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceActionDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_service_action_summary.isSet()) {
        obj.insert(QString("ServiceActionSummary"), ::OpenAPI::toJsonValue(m_service_action_summary));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("Definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    return obj;
}

OAIServiceActionDetail_ServiceActionSummary OAIServiceActionDetail::getServiceActionSummary() const {
    return m_service_action_summary;
}
void OAIServiceActionDetail::setServiceActionSummary(const OAIServiceActionDetail_ServiceActionSummary &service_action_summary) {
    m_service_action_summary = service_action_summary;
    m_service_action_summary_isSet = true;
}

bool OAIServiceActionDetail::is_service_action_summary_Set() const{
    return m_service_action_summary_isSet;
}

bool OAIServiceActionDetail::is_service_action_summary_Valid() const{
    return m_service_action_summary_isValid;
}

QMap OAIServiceActionDetail::getDefinition() const {
    return m_definition;
}
void OAIServiceActionDetail::setDefinition(const QMap &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIServiceActionDetail::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIServiceActionDetail::is_definition_Valid() const{
    return m_definition_isValid;
}

bool OAIServiceActionDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_action_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceActionDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
