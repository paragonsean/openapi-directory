/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProvisionedProductPlanStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProvisionedProductPlanStatus::OAIProvisionedProductPlanStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProvisionedProductPlanStatus::OAIProvisionedProductPlanStatus() {
    this->initializeModel();
}

OAIProvisionedProductPlanStatus::~OAIProvisionedProductPlanStatus() {}

void OAIProvisionedProductPlanStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProvisionedProductPlanStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProvisionedProductPlanStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATE_IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductPlanStatus::CREATE_IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATE_SUCCESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductPlanStatus::CREATE_SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductPlanStatus::CREATE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXECUTE_IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductPlanStatus::EXECUTE_IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXECUTE_SUCCESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductPlanStatus::EXECUTE_SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXECUTE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProvisionedProductPlanStatus::EXECUTE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProvisionedProductPlanStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProvisionedProductPlanStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProvisionedProductPlanStatus::CREATE_IN_PROGRESS:
            val = "CREATE_IN_PROGRESS";
            break;
        case eOAIProvisionedProductPlanStatus::CREATE_SUCCESS:
            val = "CREATE_SUCCESS";
            break;
        case eOAIProvisionedProductPlanStatus::CREATE_FAILED:
            val = "CREATE_FAILED";
            break;
        case eOAIProvisionedProductPlanStatus::EXECUTE_IN_PROGRESS:
            val = "EXECUTE_IN_PROGRESS";
            break;
        case eOAIProvisionedProductPlanStatus::EXECUTE_SUCCESS:
            val = "EXECUTE_SUCCESS";
            break;
        case eOAIProvisionedProductPlanStatus::EXECUTE_FAILED:
            val = "EXECUTE_FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProvisionedProductPlanStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProvisionedProductPlanStatus::eOAIProvisionedProductPlanStatus OAIProvisionedProductPlanStatus::getValue() const {
    return m_value;
}

void OAIProvisionedProductPlanStatus::setValue(const OAIProvisionedProductPlanStatus::eOAIProvisionedProductPlanStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProvisionedProductPlanStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIProvisionedProductPlanStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
