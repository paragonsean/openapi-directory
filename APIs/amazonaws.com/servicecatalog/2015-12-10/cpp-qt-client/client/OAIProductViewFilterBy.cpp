/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductViewFilterBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductViewFilterBy::OAIProductViewFilterBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductViewFilterBy::OAIProductViewFilterBy() {
    this->initializeModel();
}

OAIProductViewFilterBy::~OAIProductViewFilterBy() {}

void OAIProductViewFilterBy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProductViewFilterBy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProductViewFilterBy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FullTextSearch", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewFilterBy::FULLTEXTSEARCH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Owner", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewFilterBy::OWNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ProductType", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewFilterBy::PRODUCTTYPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SourceProductId", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductViewFilterBy::SOURCEPRODUCTID;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProductViewFilterBy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProductViewFilterBy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProductViewFilterBy::FULLTEXTSEARCH:
            val = "FullTextSearch";
            break;
        case eOAIProductViewFilterBy::OWNER:
            val = "Owner";
            break;
        case eOAIProductViewFilterBy::PRODUCTTYPE:
            val = "ProductType";
            break;
        case eOAIProductViewFilterBy::SOURCEPRODUCTID:
            val = "SourceProductId";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProductViewFilterBy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProductViewFilterBy::eOAIProductViewFilterBy OAIProductViewFilterBy::getValue() const {
    return m_value;
}

void OAIProductViewFilterBy::setValue(const OAIProductViewFilterBy::eOAIProductViewFilterBy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProductViewFilterBy::isSet() const {
    
    return m_value_isSet;
}

bool OAIProductViewFilterBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
