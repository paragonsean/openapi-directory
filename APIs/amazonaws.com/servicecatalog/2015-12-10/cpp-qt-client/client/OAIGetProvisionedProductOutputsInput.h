/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetProvisionedProductOutputsInput.h
 *
 * 
 */

#ifndef OAIGetProvisionedProductOutputsInput_H
#define OAIGetProvisionedProductOutputsInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetProvisionedProductOutputsInput : public OAIObject {
public:
    OAIGetProvisionedProductOutputsInput();
    OAIGetProvisionedProductOutputsInput(QString json);
    ~OAIGetProvisionedProductOutputsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getProvisionedProductId() const;
    void setProvisionedProductId(const QString &provisioned_product_id);
    bool is_provisioned_product_id_Set() const;
    bool is_provisioned_product_id_Valid() const;

    QString getProvisionedProductName() const;
    void setProvisionedProductName(const QString &provisioned_product_name);
    bool is_provisioned_product_name_Set() const;
    bool is_provisioned_product_name_Valid() const;

    QList getOutputKeys() const;
    void setOutputKeys(const QList &output_keys);
    bool is_output_keys_Set() const;
    bool is_output_keys_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_provisioned_product_id;
    bool m_provisioned_product_id_isSet;
    bool m_provisioned_product_id_isValid;

    QString m_provisioned_product_name;
    bool m_provisioned_product_name_isSet;
    bool m_provisioned_product_name_isValid;

    QList m_output_keys;
    bool m_output_keys_isSet;
    bool m_output_keys_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetProvisionedProductOutputsInput)

#endif // OAIGetProvisionedProductOutputsInput_H
