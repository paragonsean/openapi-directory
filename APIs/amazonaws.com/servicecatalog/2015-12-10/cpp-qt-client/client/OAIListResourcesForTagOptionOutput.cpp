/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListResourcesForTagOptionOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListResourcesForTagOptionOutput::OAIListResourcesForTagOptionOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListResourcesForTagOptionOutput::OAIListResourcesForTagOptionOutput() {
    this->initializeModel();
}

OAIListResourcesForTagOptionOutput::~OAIListResourcesForTagOptionOutput() {}

void OAIListResourcesForTagOptionOutput::initializeModel() {

    m_resource_details_isSet = false;
    m_resource_details_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;
}

void OAIListResourcesForTagOptionOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListResourcesForTagOptionOutput::fromJsonObject(QJsonObject json) {

    m_resource_details_isValid = ::OpenAPI::fromJsonValue(m_resource_details, json[QString("ResourceDetails")]);
    m_resource_details_isSet = !json[QString("ResourceDetails")].isNull() && m_resource_details_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("PageToken")]);
    m_page_token_isSet = !json[QString("PageToken")].isNull() && m_page_token_isValid;
}

QString OAIListResourcesForTagOptionOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListResourcesForTagOptionOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_details.isSet()) {
        obj.insert(QString("ResourceDetails"), ::OpenAPI::toJsonValue(m_resource_details));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("PageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    return obj;
}

QList OAIListResourcesForTagOptionOutput::getResourceDetails() const {
    return m_resource_details;
}
void OAIListResourcesForTagOptionOutput::setResourceDetails(const QList &resource_details) {
    m_resource_details = resource_details;
    m_resource_details_isSet = true;
}

bool OAIListResourcesForTagOptionOutput::is_resource_details_Set() const{
    return m_resource_details_isSet;
}

bool OAIListResourcesForTagOptionOutput::is_resource_details_Valid() const{
    return m_resource_details_isValid;
}

QString OAIListResourcesForTagOptionOutput::getPageToken() const {
    return m_page_token;
}
void OAIListResourcesForTagOptionOutput::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIListResourcesForTagOptionOutput::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIListResourcesForTagOptionOutput::is_page_token_Valid() const{
    return m_page_token_isValid;
}

bool OAIListResourcesForTagOptionOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListResourcesForTagOptionOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
