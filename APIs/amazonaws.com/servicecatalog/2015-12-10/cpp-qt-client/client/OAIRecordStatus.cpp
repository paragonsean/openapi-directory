/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordStatus::OAIRecordStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordStatus::OAIRecordStatus() {
    this->initializeModel();
}

OAIRecordStatus::~OAIRecordStatus() {}

void OAIRecordStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecordStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecordStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordStatus::CREATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS_IN_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordStatus::IN_PROGRESS_IN_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUCCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordStatus::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecordStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecordStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecordStatus::CREATED:
            val = "CREATED";
            break;
        case eOAIRecordStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIRecordStatus::IN_PROGRESS_IN_ERROR:
            val = "IN_PROGRESS_IN_ERROR";
            break;
        case eOAIRecordStatus::SUCCEEDED:
            val = "SUCCEEDED";
            break;
        case eOAIRecordStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecordStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecordStatus::eOAIRecordStatus OAIRecordStatus::getValue() const {
    return m_value;
}

void OAIRecordStatus::setValue(const OAIRecordStatus::eOAIRecordStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecordStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecordStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
