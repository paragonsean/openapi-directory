/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScanProvisionedProductsInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScanProvisionedProductsInput::OAIScanProvisionedProductsInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScanProvisionedProductsInput::OAIScanProvisionedProductsInput() {
    this->initializeModel();
}

OAIScanProvisionedProductsInput::~OAIScanProvisionedProductsInput() {}

void OAIScanProvisionedProductsInput::initializeModel() {

    m_accept_language_isSet = false;
    m_accept_language_isValid = false;

    m_access_level_filter_isSet = false;
    m_access_level_filter_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;
}

void OAIScanProvisionedProductsInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScanProvisionedProductsInput::fromJsonObject(QJsonObject json) {

    m_accept_language_isValid = ::OpenAPI::fromJsonValue(m_accept_language, json[QString("AcceptLanguage")]);
    m_accept_language_isSet = !json[QString("AcceptLanguage")].isNull() && m_accept_language_isValid;

    m_access_level_filter_isValid = ::OpenAPI::fromJsonValue(m_access_level_filter, json[QString("AccessLevelFilter")]);
    m_access_level_filter_isSet = !json[QString("AccessLevelFilter")].isNull() && m_access_level_filter_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("PageSize")]);
    m_page_size_isSet = !json[QString("PageSize")].isNull() && m_page_size_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("PageToken")]);
    m_page_token_isSet = !json[QString("PageToken")].isNull() && m_page_token_isValid;
}

QString OAIScanProvisionedProductsInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScanProvisionedProductsInput::asJsonObject() const {
    QJsonObject obj;
    if (m_accept_language_isSet) {
        obj.insert(QString("AcceptLanguage"), ::OpenAPI::toJsonValue(m_accept_language));
    }
    if (m_access_level_filter.isSet()) {
        obj.insert(QString("AccessLevelFilter"), ::OpenAPI::toJsonValue(m_access_level_filter));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("PageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("PageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    return obj;
}

QString OAIScanProvisionedProductsInput::getAcceptLanguage() const {
    return m_accept_language;
}
void OAIScanProvisionedProductsInput::setAcceptLanguage(const QString &accept_language) {
    m_accept_language = accept_language;
    m_accept_language_isSet = true;
}

bool OAIScanProvisionedProductsInput::is_accept_language_Set() const{
    return m_accept_language_isSet;
}

bool OAIScanProvisionedProductsInput::is_accept_language_Valid() const{
    return m_accept_language_isValid;
}

OAIListProvisionedProductPlansInput_AccessLevelFilter OAIScanProvisionedProductsInput::getAccessLevelFilter() const {
    return m_access_level_filter;
}
void OAIScanProvisionedProductsInput::setAccessLevelFilter(const OAIListProvisionedProductPlansInput_AccessLevelFilter &access_level_filter) {
    m_access_level_filter = access_level_filter;
    m_access_level_filter_isSet = true;
}

bool OAIScanProvisionedProductsInput::is_access_level_filter_Set() const{
    return m_access_level_filter_isSet;
}

bool OAIScanProvisionedProductsInput::is_access_level_filter_Valid() const{
    return m_access_level_filter_isValid;
}

qint32 OAIScanProvisionedProductsInput::getPageSize() const {
    return m_page_size;
}
void OAIScanProvisionedProductsInput::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIScanProvisionedProductsInput::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIScanProvisionedProductsInput::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIScanProvisionedProductsInput::getPageToken() const {
    return m_page_token;
}
void OAIScanProvisionedProductsInput::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIScanProvisionedProductsInput::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIScanProvisionedProductsInput::is_page_token_Valid() const{
    return m_page_token_isValid;
}

bool OAIScanProvisionedProductsInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accept_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_access_level_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScanProvisionedProductsInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
