/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchProductsAsAdminOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchProductsAsAdminOutput::OAISearchProductsAsAdminOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchProductsAsAdminOutput::OAISearchProductsAsAdminOutput() {
    this->initializeModel();
}

OAISearchProductsAsAdminOutput::~OAISearchProductsAsAdminOutput() {}

void OAISearchProductsAsAdminOutput::initializeModel() {

    m_product_view_details_isSet = false;
    m_product_view_details_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAISearchProductsAsAdminOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchProductsAsAdminOutput::fromJsonObject(QJsonObject json) {

    m_product_view_details_isValid = ::OpenAPI::fromJsonValue(m_product_view_details, json[QString("ProductViewDetails")]);
    m_product_view_details_isSet = !json[QString("ProductViewDetails")].isNull() && m_product_view_details_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAISearchProductsAsAdminOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchProductsAsAdminOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_product_view_details.isSet()) {
        obj.insert(QString("ProductViewDetails"), ::OpenAPI::toJsonValue(m_product_view_details));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAISearchProductsAsAdminOutput::getProductViewDetails() const {
    return m_product_view_details;
}
void OAISearchProductsAsAdminOutput::setProductViewDetails(const QList &product_view_details) {
    m_product_view_details = product_view_details;
    m_product_view_details_isSet = true;
}

bool OAISearchProductsAsAdminOutput::is_product_view_details_Set() const{
    return m_product_view_details_isSet;
}

bool OAISearchProductsAsAdminOutput::is_product_view_details_Valid() const{
    return m_product_view_details_isValid;
}

QString OAISearchProductsAsAdminOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAISearchProductsAsAdminOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAISearchProductsAsAdminOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAISearchProductsAsAdminOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAISearchProductsAsAdminOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_view_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchProductsAsAdminOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
