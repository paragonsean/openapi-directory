/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisioningArtifactPreferences.h
 *
 * &lt;p&gt;The user-defined preferences that will be applied during product provisioning, unless overridden by &lt;code&gt;ProvisioningPreferences&lt;/code&gt; or &lt;code&gt;UpdateProvisioningPreferences&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For more information on maximum concurrent accounts and failure tolerance, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options\&quot;&gt;Stack set operation options&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIProvisioningArtifactPreferences_H
#define OAIProvisioningArtifactPreferences_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProvisioningArtifactPreferences : public OAIObject {
public:
    OAIProvisioningArtifactPreferences();
    OAIProvisioningArtifactPreferences(QString json);
    ~OAIProvisioningArtifactPreferences() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getStackSetAccounts() const;
    void setStackSetAccounts(const QList &stack_set_accounts);
    bool is_stack_set_accounts_Set() const;
    bool is_stack_set_accounts_Valid() const;

    QList getStackSetRegions() const;
    void setStackSetRegions(const QList &stack_set_regions);
    bool is_stack_set_regions_Set() const;
    bool is_stack_set_regions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_stack_set_accounts;
    bool m_stack_set_accounts_isSet;
    bool m_stack_set_accounts_isValid;

    QList m_stack_set_regions;
    bool m_stack_set_regions_isSet;
    bool m_stack_set_regions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisioningArtifactPreferences)

#endif // OAIProvisioningArtifactPreferences_H
