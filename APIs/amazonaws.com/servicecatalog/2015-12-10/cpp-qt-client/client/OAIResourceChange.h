/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceChange.h
 *
 * Information about a resource change that will occur when a plan is executed.
 */

#ifndef OAIResourceChange_H
#define OAIResourceChange_H

#include <QJsonObject>

#include "OAIChangeAction.h"
#include "OAIReplacement.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceChange : public OAIObject {
public:
    OAIResourceChange();
    OAIResourceChange(QString json);
    ~OAIResourceChange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChangeAction getAction() const;
    void setAction(const OAIChangeAction &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getLogicalResourceId() const;
    void setLogicalResourceId(const QString &logical_resource_id);
    bool is_logical_resource_id_Set() const;
    bool is_logical_resource_id_Valid() const;

    QString getPhysicalResourceId() const;
    void setPhysicalResourceId(const QString &physical_resource_id);
    bool is_physical_resource_id_Set() const;
    bool is_physical_resource_id_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    OAIReplacement getReplacement() const;
    void setReplacement(const OAIReplacement &replacement);
    bool is_replacement_Set() const;
    bool is_replacement_Valid() const;

    QList getScope() const;
    void setScope(const QList &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QList getDetails() const;
    void setDetails(const QList &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChangeAction m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_logical_resource_id;
    bool m_logical_resource_id_isSet;
    bool m_logical_resource_id_isValid;

    QString m_physical_resource_id;
    bool m_physical_resource_id_isSet;
    bool m_physical_resource_id_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    OAIReplacement m_replacement;
    bool m_replacement_isSet;
    bool m_replacement_isValid;

    QList m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QList m_details;
    bool m_details_isSet;
    bool m_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceChange)

#endif // OAIResourceChange_H
