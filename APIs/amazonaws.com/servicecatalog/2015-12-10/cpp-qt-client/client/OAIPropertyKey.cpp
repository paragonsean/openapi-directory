/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPropertyKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPropertyKey::OAIPropertyKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPropertyKey::OAIPropertyKey() {
    this->initializeModel();
}

OAIPropertyKey::~OAIPropertyKey() {}

void OAIPropertyKey::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPropertyKey::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPropertyKey::fromJson(QString jsonString) {
    
    if ( jsonString.compare("OWNER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyKey::OWNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAUNCH_ROLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPropertyKey::LAUNCH_ROLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPropertyKey::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPropertyKey::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPropertyKey::OWNER:
            val = "OWNER";
            break;
        case eOAIPropertyKey::LAUNCH_ROLE:
            val = "LAUNCH_ROLE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPropertyKey::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPropertyKey::eOAIPropertyKey OAIPropertyKey::getValue() const {
    return m_value;
}

void OAIPropertyKey::setValue(const OAIPropertyKey::eOAIPropertyKey& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPropertyKey::isSet() const {
    
    return m_value_isSet;
}

bool OAIPropertyKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
