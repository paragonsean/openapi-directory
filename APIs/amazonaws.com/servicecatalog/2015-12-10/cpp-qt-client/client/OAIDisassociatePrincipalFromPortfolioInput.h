/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDisassociatePrincipalFromPortfolioInput.h
 *
 * 
 */

#ifndef OAIDisassociatePrincipalFromPortfolioInput_H
#define OAIDisassociatePrincipalFromPortfolioInput_H

#include <QJsonObject>

#include "OAIPrincipalType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDisassociatePrincipalFromPortfolioInput : public OAIObject {
public:
    OAIDisassociatePrincipalFromPortfolioInput();
    OAIDisassociatePrincipalFromPortfolioInput(QString json);
    ~OAIDisassociatePrincipalFromPortfolioInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getPortfolioId() const;
    void setPortfolioId(const QString &portfolio_id);
    bool is_portfolio_id_Set() const;
    bool is_portfolio_id_Valid() const;

    QString getPrincipalArn() const;
    void setPrincipalArn(const QString &principal_arn);
    bool is_principal_arn_Set() const;
    bool is_principal_arn_Valid() const;

    OAIPrincipalType getPrincipalType() const;
    void setPrincipalType(const OAIPrincipalType &principal_type);
    bool is_principal_type_Set() const;
    bool is_principal_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_portfolio_id;
    bool m_portfolio_id_isSet;
    bool m_portfolio_id_isValid;

    QString m_principal_arn;
    bool m_principal_arn_isSet;
    bool m_principal_arn_isValid;

    OAIPrincipalType m_principal_type;
    bool m_principal_type_isSet;
    bool m_principal_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDisassociatePrincipalFromPortfolioInput)

#endif // OAIDisassociatePrincipalFromPortfolioInput_H
