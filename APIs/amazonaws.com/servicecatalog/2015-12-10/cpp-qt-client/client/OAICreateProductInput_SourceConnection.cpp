/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProductInput_SourceConnection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProductInput_SourceConnection::OAICreateProductInput_SourceConnection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProductInput_SourceConnection::OAICreateProductInput_SourceConnection() {
    this->initializeModel();
}

OAICreateProductInput_SourceConnection::~OAICreateProductInput_SourceConnection() {}

void OAICreateProductInput_SourceConnection::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_connection_parameters_isSet = false;
    m_connection_parameters_isValid = false;
}

void OAICreateProductInput_SourceConnection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProductInput_SourceConnection::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_connection_parameters_isValid = ::OpenAPI::fromJsonValue(m_connection_parameters, json[QString("ConnectionParameters")]);
    m_connection_parameters_isSet = !json[QString("ConnectionParameters")].isNull() && m_connection_parameters_isValid;
}

QString OAICreateProductInput_SourceConnection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProductInput_SourceConnection::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_connection_parameters.isSet()) {
        obj.insert(QString("ConnectionParameters"), ::OpenAPI::toJsonValue(m_connection_parameters));
    }
    return obj;
}

OAISourceType OAICreateProductInput_SourceConnection::getType() const {
    return m_type;
}
void OAICreateProductInput_SourceConnection::setType(const OAISourceType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateProductInput_SourceConnection::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateProductInput_SourceConnection::is_type_Valid() const{
    return m_type_isValid;
}

OAISourceConnection_ConnectionParameters OAICreateProductInput_SourceConnection::getConnectionParameters() const {
    return m_connection_parameters;
}
void OAICreateProductInput_SourceConnection::setConnectionParameters(const OAISourceConnection_ConnectionParameters &connection_parameters) {
    m_connection_parameters = connection_parameters;
    m_connection_parameters_isSet = true;
}

bool OAICreateProductInput_SourceConnection::is_connection_parameters_Set() const{
    return m_connection_parameters_isSet;
}

bool OAICreateProductInput_SourceConnection::is_connection_parameters_Valid() const{
    return m_connection_parameters_isValid;
}

bool OAICreateProductInput_SourceConnection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_connection_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProductInput_SourceConnection::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_connection_parameters_isValid && true;
}

} // namespace OpenAPI
