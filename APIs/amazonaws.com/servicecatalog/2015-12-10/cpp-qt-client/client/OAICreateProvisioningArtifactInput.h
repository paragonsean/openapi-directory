/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateProvisioningArtifactInput.h
 *
 * 
 */

#ifndef OAICreateProvisioningArtifactInput_H
#define OAICreateProvisioningArtifactInput_H

#include <QJsonObject>

#include "OAICreateProvisioningArtifactInput_Parameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateProvisioningArtifactInput_Parameters;

class OAICreateProvisioningArtifactInput : public OAIObject {
public:
    OAICreateProvisioningArtifactInput();
    OAICreateProvisioningArtifactInput(QString json);
    ~OAICreateProvisioningArtifactInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    OAICreateProvisioningArtifactInput_Parameters getParameters() const;
    void setParameters(const OAICreateProvisioningArtifactInput_Parameters &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    OAICreateProvisioningArtifactInput_Parameters m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateProvisioningArtifactInput)

#endif // OAICreateProvisioningArtifactInput_H
