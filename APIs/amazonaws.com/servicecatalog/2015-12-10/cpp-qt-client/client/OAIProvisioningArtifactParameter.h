/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProvisioningArtifactParameter.h
 *
 * Information about a parameter used to provision a product.
 */

#ifndef OAIProvisioningArtifactParameter_H
#define OAIProvisioningArtifactParameter_H

#include <QJsonObject>

#include "OAIProvisioningArtifactParameter_ParameterConstraints.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProvisioningArtifactParameter_ParameterConstraints;

class OAIProvisioningArtifactParameter : public OAIObject {
public:
    OAIProvisioningArtifactParameter();
    OAIProvisioningArtifactParameter(QString json);
    ~OAIProvisioningArtifactParameter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getParameterKey() const;
    void setParameterKey(const QString &parameter_key);
    bool is_parameter_key_Set() const;
    bool is_parameter_key_Valid() const;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getParameterType() const;
    void setParameterType(const QString &parameter_type);
    bool is_parameter_type_Set() const;
    bool is_parameter_type_Valid() const;

    bool getIsNoEcho() const;
    void setIsNoEcho(const bool &is_no_echo);
    bool is_is_no_echo_Set() const;
    bool is_is_no_echo_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIProvisioningArtifactParameter_ParameterConstraints getParameterConstraints() const;
    void setParameterConstraints(const OAIProvisioningArtifactParameter_ParameterConstraints &parameter_constraints);
    bool is_parameter_constraints_Set() const;
    bool is_parameter_constraints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_parameter_key;
    bool m_parameter_key_isSet;
    bool m_parameter_key_isValid;

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_parameter_type;
    bool m_parameter_type_isSet;
    bool m_parameter_type_isValid;

    bool m_is_no_echo;
    bool m_is_no_echo_isSet;
    bool m_is_no_echo_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIProvisioningArtifactParameter_ParameterConstraints m_parameter_constraints;
    bool m_parameter_constraints_isSet;
    bool m_parameter_constraints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProvisioningArtifactParameter)

#endif // OAIProvisioningArtifactParameter_H
