/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequiresRecreation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequiresRecreation::OAIRequiresRecreation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequiresRecreation::OAIRequiresRecreation() {
    this->initializeModel();
}

OAIRequiresRecreation::~OAIRequiresRecreation() {}

void OAIRequiresRecreation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRequiresRecreation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRequiresRecreation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NEVER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiresRecreation::NEVER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CONDITIONALLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiresRecreation::CONDITIONALLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ALWAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiresRecreation::ALWAYS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRequiresRecreation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRequiresRecreation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRequiresRecreation::NEVER:
            val = "NEVER";
            break;
        case eOAIRequiresRecreation::CONDITIONALLY:
            val = "CONDITIONALLY";
            break;
        case eOAIRequiresRecreation::ALWAYS:
            val = "ALWAYS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRequiresRecreation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRequiresRecreation::eOAIRequiresRecreation OAIRequiresRecreation::getValue() const {
    return m_value;
}

void OAIRequiresRecreation::setValue(const OAIRequiresRecreation::eOAIRequiresRecreation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRequiresRecreation::isSet() const {
    
    return m_value_isSet;
}

bool OAIRequiresRecreation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
