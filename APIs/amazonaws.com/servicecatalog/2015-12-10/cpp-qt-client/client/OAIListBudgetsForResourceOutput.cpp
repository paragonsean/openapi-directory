/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBudgetsForResourceOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBudgetsForResourceOutput::OAIListBudgetsForResourceOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBudgetsForResourceOutput::OAIListBudgetsForResourceOutput() {
    this->initializeModel();
}

OAIListBudgetsForResourceOutput::~OAIListBudgetsForResourceOutput() {}

void OAIListBudgetsForResourceOutput::initializeModel() {

    m_budgets_isSet = false;
    m_budgets_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListBudgetsForResourceOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBudgetsForResourceOutput::fromJsonObject(QJsonObject json) {

    m_budgets_isValid = ::OpenAPI::fromJsonValue(m_budgets, json[QString("Budgets")]);
    m_budgets_isSet = !json[QString("Budgets")].isNull() && m_budgets_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListBudgetsForResourceOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBudgetsForResourceOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_budgets.isSet()) {
        obj.insert(QString("Budgets"), ::OpenAPI::toJsonValue(m_budgets));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAIListBudgetsForResourceOutput::getBudgets() const {
    return m_budgets;
}
void OAIListBudgetsForResourceOutput::setBudgets(const QList &budgets) {
    m_budgets = budgets;
    m_budgets_isSet = true;
}

bool OAIListBudgetsForResourceOutput::is_budgets_Set() const{
    return m_budgets_isSet;
}

bool OAIListBudgetsForResourceOutput::is_budgets_Valid() const{
    return m_budgets_isValid;
}

QString OAIListBudgetsForResourceOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListBudgetsForResourceOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListBudgetsForResourceOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListBudgetsForResourceOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListBudgetsForResourceOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_budgets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBudgetsForResourceOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
