/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeProductAsAdminOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeProductAsAdminOutput::OAIDescribeProductAsAdminOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeProductAsAdminOutput::OAIDescribeProductAsAdminOutput() {
    this->initializeModel();
}

OAIDescribeProductAsAdminOutput::~OAIDescribeProductAsAdminOutput() {}

void OAIDescribeProductAsAdminOutput::initializeModel() {

    m_product_view_detail_isSet = false;
    m_product_view_detail_isValid = false;

    m_provisioning_artifact_summaries_isSet = false;
    m_provisioning_artifact_summaries_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_tag_options_isSet = false;
    m_tag_options_isValid = false;

    m_budgets_isSet = false;
    m_budgets_isValid = false;
}

void OAIDescribeProductAsAdminOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeProductAsAdminOutput::fromJsonObject(QJsonObject json) {

    m_product_view_detail_isValid = ::OpenAPI::fromJsonValue(m_product_view_detail, json[QString("ProductViewDetail")]);
    m_product_view_detail_isSet = !json[QString("ProductViewDetail")].isNull() && m_product_view_detail_isValid;

    m_provisioning_artifact_summaries_isValid = ::OpenAPI::fromJsonValue(m_provisioning_artifact_summaries, json[QString("ProvisioningArtifactSummaries")]);
    m_provisioning_artifact_summaries_isSet = !json[QString("ProvisioningArtifactSummaries")].isNull() && m_provisioning_artifact_summaries_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_tag_options_isValid = ::OpenAPI::fromJsonValue(m_tag_options, json[QString("TagOptions")]);
    m_tag_options_isSet = !json[QString("TagOptions")].isNull() && m_tag_options_isValid;

    m_budgets_isValid = ::OpenAPI::fromJsonValue(m_budgets, json[QString("Budgets")]);
    m_budgets_isSet = !json[QString("Budgets")].isNull() && m_budgets_isValid;
}

QString OAIDescribeProductAsAdminOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeProductAsAdminOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_product_view_detail.isSet()) {
        obj.insert(QString("ProductViewDetail"), ::OpenAPI::toJsonValue(m_product_view_detail));
    }
    if (m_provisioning_artifact_summaries.isSet()) {
        obj.insert(QString("ProvisioningArtifactSummaries"), ::OpenAPI::toJsonValue(m_provisioning_artifact_summaries));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_tag_options.isSet()) {
        obj.insert(QString("TagOptions"), ::OpenAPI::toJsonValue(m_tag_options));
    }
    if (m_budgets.isSet()) {
        obj.insert(QString("Budgets"), ::OpenAPI::toJsonValue(m_budgets));
    }
    return obj;
}

OAICreateProductOutput_ProductViewDetail OAIDescribeProductAsAdminOutput::getProductViewDetail() const {
    return m_product_view_detail;
}
void OAIDescribeProductAsAdminOutput::setProductViewDetail(const OAICreateProductOutput_ProductViewDetail &product_view_detail) {
    m_product_view_detail = product_view_detail;
    m_product_view_detail_isSet = true;
}

bool OAIDescribeProductAsAdminOutput::is_product_view_detail_Set() const{
    return m_product_view_detail_isSet;
}

bool OAIDescribeProductAsAdminOutput::is_product_view_detail_Valid() const{
    return m_product_view_detail_isValid;
}

QList OAIDescribeProductAsAdminOutput::getProvisioningArtifactSummaries() const {
    return m_provisioning_artifact_summaries;
}
void OAIDescribeProductAsAdminOutput::setProvisioningArtifactSummaries(const QList &provisioning_artifact_summaries) {
    m_provisioning_artifact_summaries = provisioning_artifact_summaries;
    m_provisioning_artifact_summaries_isSet = true;
}

bool OAIDescribeProductAsAdminOutput::is_provisioning_artifact_summaries_Set() const{
    return m_provisioning_artifact_summaries_isSet;
}

bool OAIDescribeProductAsAdminOutput::is_provisioning_artifact_summaries_Valid() const{
    return m_provisioning_artifact_summaries_isValid;
}

QList OAIDescribeProductAsAdminOutput::getTags() const {
    return m_tags;
}
void OAIDescribeProductAsAdminOutput::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIDescribeProductAsAdminOutput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIDescribeProductAsAdminOutput::is_tags_Valid() const{
    return m_tags_isValid;
}

QList OAIDescribeProductAsAdminOutput::getTagOptions() const {
    return m_tag_options;
}
void OAIDescribeProductAsAdminOutput::setTagOptions(const QList &tag_options) {
    m_tag_options = tag_options;
    m_tag_options_isSet = true;
}

bool OAIDescribeProductAsAdminOutput::is_tag_options_Set() const{
    return m_tag_options_isSet;
}

bool OAIDescribeProductAsAdminOutput::is_tag_options_Valid() const{
    return m_tag_options_isValid;
}

QList OAIDescribeProductAsAdminOutput::getBudgets() const {
    return m_budgets;
}
void OAIDescribeProductAsAdminOutput::setBudgets(const QList &budgets) {
    m_budgets = budgets;
    m_budgets_isSet = true;
}

bool OAIDescribeProductAsAdminOutput::is_budgets_Set() const{
    return m_budgets_isSet;
}

bool OAIDescribeProductAsAdminOutput::is_budgets_Valid() const{
    return m_budgets_isValid;
}

bool OAIDescribeProductAsAdminOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_view_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_provisioning_artifact_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_budgets.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeProductAsAdminOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
