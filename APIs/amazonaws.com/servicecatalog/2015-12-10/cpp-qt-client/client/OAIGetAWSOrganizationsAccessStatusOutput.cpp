/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAWSOrganizationsAccessStatusOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAWSOrganizationsAccessStatusOutput::OAIGetAWSOrganizationsAccessStatusOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAWSOrganizationsAccessStatusOutput::OAIGetAWSOrganizationsAccessStatusOutput() {
    this->initializeModel();
}

OAIGetAWSOrganizationsAccessStatusOutput::~OAIGetAWSOrganizationsAccessStatusOutput() {}

void OAIGetAWSOrganizationsAccessStatusOutput::initializeModel() {

    m_access_status_isSet = false;
    m_access_status_isValid = false;
}

void OAIGetAWSOrganizationsAccessStatusOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAWSOrganizationsAccessStatusOutput::fromJsonObject(QJsonObject json) {

    m_access_status_isValid = ::OpenAPI::fromJsonValue(m_access_status, json[QString("AccessStatus")]);
    m_access_status_isSet = !json[QString("AccessStatus")].isNull() && m_access_status_isValid;
}

QString OAIGetAWSOrganizationsAccessStatusOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAWSOrganizationsAccessStatusOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_access_status.isSet()) {
        obj.insert(QString("AccessStatus"), ::OpenAPI::toJsonValue(m_access_status));
    }
    return obj;
}

OAIAccessStatus OAIGetAWSOrganizationsAccessStatusOutput::getAccessStatus() const {
    return m_access_status;
}
void OAIGetAWSOrganizationsAccessStatusOutput::setAccessStatus(const OAIAccessStatus &access_status) {
    m_access_status = access_status;
    m_access_status_isSet = true;
}

bool OAIGetAWSOrganizationsAccessStatusOutput::is_access_status_Set() const{
    return m_access_status_isSet;
}

bool OAIGetAWSOrganizationsAccessStatusOutput::is_access_status_Valid() const{
    return m_access_status_isValid;
}

bool OAIGetAWSOrganizationsAccessStatusOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAWSOrganizationsAccessStatusOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
