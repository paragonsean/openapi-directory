/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProvisionedProductInput.h
 *
 * 
 */

#ifndef OAIUpdateProvisionedProductInput_H
#define OAIUpdateProvisionedProductInput_H

#include <QJsonObject>

#include "OAIUpdateProvisionedProductInput_ProvisioningPreferences.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateProvisionedProductInput_ProvisioningPreferences;

class OAIUpdateProvisionedProductInput : public OAIObject {
public:
    OAIUpdateProvisionedProductInput();
    OAIUpdateProvisionedProductInput(QString json);
    ~OAIUpdateProvisionedProductInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getProvisionedProductName() const;
    void setProvisionedProductName(const QString &provisioned_product_name);
    bool is_provisioned_product_name_Set() const;
    bool is_provisioned_product_name_Valid() const;

    QString getProvisionedProductId() const;
    void setProvisionedProductId(const QString &provisioned_product_id);
    bool is_provisioned_product_id_Set() const;
    bool is_provisioned_product_id_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getProductName() const;
    void setProductName(const QString &product_name);
    bool is_product_name_Set() const;
    bool is_product_name_Valid() const;

    QString getProvisioningArtifactId() const;
    void setProvisioningArtifactId(const QString &provisioning_artifact_id);
    bool is_provisioning_artifact_id_Set() const;
    bool is_provisioning_artifact_id_Valid() const;

    QString getProvisioningArtifactName() const;
    void setProvisioningArtifactName(const QString &provisioning_artifact_name);
    bool is_provisioning_artifact_name_Set() const;
    bool is_provisioning_artifact_name_Valid() const;

    QString getPathId() const;
    void setPathId(const QString &path_id);
    bool is_path_id_Set() const;
    bool is_path_id_Valid() const;

    QString getPathName() const;
    void setPathName(const QString &path_name);
    bool is_path_name_Set() const;
    bool is_path_name_Valid() const;

    QList getProvisioningParameters() const;
    void setProvisioningParameters(const QList &provisioning_parameters);
    bool is_provisioning_parameters_Set() const;
    bool is_provisioning_parameters_Valid() const;

    OAIUpdateProvisionedProductInput_ProvisioningPreferences getProvisioningPreferences() const;
    void setProvisioningPreferences(const OAIUpdateProvisionedProductInput_ProvisioningPreferences &provisioning_preferences);
    bool is_provisioning_preferences_Set() const;
    bool is_provisioning_preferences_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getUpdateToken() const;
    void setUpdateToken(const QString &update_token);
    bool is_update_token_Set() const;
    bool is_update_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_provisioned_product_name;
    bool m_provisioned_product_name_isSet;
    bool m_provisioned_product_name_isValid;

    QString m_provisioned_product_id;
    bool m_provisioned_product_id_isSet;
    bool m_provisioned_product_id_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_product_name;
    bool m_product_name_isSet;
    bool m_product_name_isValid;

    QString m_provisioning_artifact_id;
    bool m_provisioning_artifact_id_isSet;
    bool m_provisioning_artifact_id_isValid;

    QString m_provisioning_artifact_name;
    bool m_provisioning_artifact_name_isSet;
    bool m_provisioning_artifact_name_isValid;

    QString m_path_id;
    bool m_path_id_isSet;
    bool m_path_id_isValid;

    QString m_path_name;
    bool m_path_name_isSet;
    bool m_path_name_isValid;

    QList m_provisioning_parameters;
    bool m_provisioning_parameters_isSet;
    bool m_provisioning_parameters_isValid;

    OAIUpdateProvisionedProductInput_ProvisioningPreferences m_provisioning_preferences;
    bool m_provisioning_preferences_isSet;
    bool m_provisioning_preferences_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_update_token;
    bool m_update_token_isSet;
    bool m_update_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProvisionedProductInput)

#endif // OAIUpdateProvisionedProductInput_H
