/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateTagOptionOutput_TagOptionDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateTagOptionOutput_TagOptionDetail::OAICreateTagOptionOutput_TagOptionDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateTagOptionOutput_TagOptionDetail::OAICreateTagOptionOutput_TagOptionDetail() {
    this->initializeModel();
}

OAICreateTagOptionOutput_TagOptionDetail::~OAICreateTagOptionOutput_TagOptionDetail() {}

void OAICreateTagOptionOutput_TagOptionDetail::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;
}

void OAICreateTagOptionOutput_TagOptionDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateTagOptionOutput_TagOptionDetail::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("Key")]);
    m_key_isSet = !json[QString("Key")].isNull() && m_key_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("Active")]);
    m_active_isSet = !json[QString("Active")].isNull() && m_active_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("Owner")]);
    m_owner_isSet = !json[QString("Owner")].isNull() && m_owner_isValid;
}

QString OAICreateTagOptionOutput_TagOptionDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateTagOptionOutput_TagOptionDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("Key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_active_isSet) {
        obj.insert(QString("Active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_owner_isSet) {
        obj.insert(QString("Owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    return obj;
}

QString OAICreateTagOptionOutput_TagOptionDetail::getKey() const {
    return m_key;
}
void OAICreateTagOptionOutput_TagOptionDetail::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_key_Set() const{
    return m_key_isSet;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_key_Valid() const{
    return m_key_isValid;
}

QString OAICreateTagOptionOutput_TagOptionDetail::getValue() const {
    return m_value;
}
void OAICreateTagOptionOutput_TagOptionDetail::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_value_Set() const{
    return m_value_isSet;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_value_Valid() const{
    return m_value_isValid;
}

bool OAICreateTagOptionOutput_TagOptionDetail::getActive() const {
    return m_active;
}
void OAICreateTagOptionOutput_TagOptionDetail::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_active_Set() const{
    return m_active_isSet;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_active_Valid() const{
    return m_active_isValid;
}

QString OAICreateTagOptionOutput_TagOptionDetail::getId() const {
    return m_id;
}
void OAICreateTagOptionOutput_TagOptionDetail::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateTagOptionOutput_TagOptionDetail::getOwner() const {
    return m_owner;
}
void OAICreateTagOptionOutput_TagOptionDetail::setOwner(const QString &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAICreateTagOptionOutput_TagOptionDetail::is_owner_Valid() const{
    return m_owner_isValid;
}

bool OAICreateTagOptionOutput_TagOptionDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateTagOptionOutput_TagOptionDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
