/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICopyProductInput.h
 *
 * 
 */

#ifndef OAICopyProductInput_H
#define OAICopyProductInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICopyProductInput : public OAIObject {
public:
    OAICopyProductInput();
    OAICopyProductInput(QString json);
    ~OAICopyProductInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceptLanguage() const;
    void setAcceptLanguage(const QString &accept_language);
    bool is_accept_language_Set() const;
    bool is_accept_language_Valid() const;

    QString getSourceProductArn() const;
    void setSourceProductArn(const QString &source_product_arn);
    bool is_source_product_arn_Set() const;
    bool is_source_product_arn_Valid() const;

    QString getTargetProductId() const;
    void setTargetProductId(const QString &target_product_id);
    bool is_target_product_id_Set() const;
    bool is_target_product_id_Valid() const;

    QString getTargetProductName() const;
    void setTargetProductName(const QString &target_product_name);
    bool is_target_product_name_Set() const;
    bool is_target_product_name_Valid() const;

    QList getSourceProvisioningArtifactIdentifiers() const;
    void setSourceProvisioningArtifactIdentifiers(const QList &source_provisioning_artifact_identifiers);
    bool is_source_provisioning_artifact_identifiers_Set() const;
    bool is_source_provisioning_artifact_identifiers_Valid() const;

    QList getCopyOptions() const;
    void setCopyOptions(const QList &copy_options);
    bool is_copy_options_Set() const;
    bool is_copy_options_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accept_language;
    bool m_accept_language_isSet;
    bool m_accept_language_isValid;

    QString m_source_product_arn;
    bool m_source_product_arn_isSet;
    bool m_source_product_arn_isValid;

    QString m_target_product_id;
    bool m_target_product_id_isSet;
    bool m_target_product_id_isValid;

    QString m_target_product_name;
    bool m_target_product_name_isSet;
    bool m_target_product_name_isValid;

    QList m_source_provisioning_artifact_identifiers;
    bool m_source_provisioning_artifact_identifiers_isSet;
    bool m_source_provisioning_artifact_identifiers_isValid;

    QList m_copy_options;
    bool m_copy_options_isSet;
    bool m_copy_options_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICopyProductInput)

#endif // OAICopyProductInput_H
