/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILastSync.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILastSync::OAILastSync(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILastSync::OAILastSync() {
    this->initializeModel();
}

OAILastSync::~OAILastSync() {}

void OAILastSync::initializeModel() {

    m_last_sync_time_isSet = false;
    m_last_sync_time_isValid = false;

    m_last_sync_status_isSet = false;
    m_last_sync_status_isValid = false;

    m_last_sync_status_message_isSet = false;
    m_last_sync_status_message_isValid = false;

    m_last_successful_sync_time_isSet = false;
    m_last_successful_sync_time_isValid = false;

    m_last_successful_sync_provisioning_artifact_id_isSet = false;
    m_last_successful_sync_provisioning_artifact_id_isValid = false;
}

void OAILastSync::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILastSync::fromJsonObject(QJsonObject json) {

    m_last_sync_time_isValid = ::OpenAPI::fromJsonValue(m_last_sync_time, json[QString("LastSyncTime")]);
    m_last_sync_time_isSet = !json[QString("LastSyncTime")].isNull() && m_last_sync_time_isValid;

    m_last_sync_status_isValid = ::OpenAPI::fromJsonValue(m_last_sync_status, json[QString("LastSyncStatus")]);
    m_last_sync_status_isSet = !json[QString("LastSyncStatus")].isNull() && m_last_sync_status_isValid;

    m_last_sync_status_message_isValid = ::OpenAPI::fromJsonValue(m_last_sync_status_message, json[QString("LastSyncStatusMessage")]);
    m_last_sync_status_message_isSet = !json[QString("LastSyncStatusMessage")].isNull() && m_last_sync_status_message_isValid;

    m_last_successful_sync_time_isValid = ::OpenAPI::fromJsonValue(m_last_successful_sync_time, json[QString("LastSuccessfulSyncTime")]);
    m_last_successful_sync_time_isSet = !json[QString("LastSuccessfulSyncTime")].isNull() && m_last_successful_sync_time_isValid;

    m_last_successful_sync_provisioning_artifact_id_isValid = ::OpenAPI::fromJsonValue(m_last_successful_sync_provisioning_artifact_id, json[QString("LastSuccessfulSyncProvisioningArtifactId")]);
    m_last_successful_sync_provisioning_artifact_id_isSet = !json[QString("LastSuccessfulSyncProvisioningArtifactId")].isNull() && m_last_successful_sync_provisioning_artifact_id_isValid;
}

QString OAILastSync::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILastSync::asJsonObject() const {
    QJsonObject obj;
    if (m_last_sync_time_isSet) {
        obj.insert(QString("LastSyncTime"), ::OpenAPI::toJsonValue(m_last_sync_time));
    }
    if (m_last_sync_status.isSet()) {
        obj.insert(QString("LastSyncStatus"), ::OpenAPI::toJsonValue(m_last_sync_status));
    }
    if (m_last_sync_status_message_isSet) {
        obj.insert(QString("LastSyncStatusMessage"), ::OpenAPI::toJsonValue(m_last_sync_status_message));
    }
    if (m_last_successful_sync_time_isSet) {
        obj.insert(QString("LastSuccessfulSyncTime"), ::OpenAPI::toJsonValue(m_last_successful_sync_time));
    }
    if (m_last_successful_sync_provisioning_artifact_id_isSet) {
        obj.insert(QString("LastSuccessfulSyncProvisioningArtifactId"), ::OpenAPI::toJsonValue(m_last_successful_sync_provisioning_artifact_id));
    }
    return obj;
}

QDateTime OAILastSync::getLastSyncTime() const {
    return m_last_sync_time;
}
void OAILastSync::setLastSyncTime(const QDateTime &last_sync_time) {
    m_last_sync_time = last_sync_time;
    m_last_sync_time_isSet = true;
}

bool OAILastSync::is_last_sync_time_Set() const{
    return m_last_sync_time_isSet;
}

bool OAILastSync::is_last_sync_time_Valid() const{
    return m_last_sync_time_isValid;
}

OAILastSyncStatus OAILastSync::getLastSyncStatus() const {
    return m_last_sync_status;
}
void OAILastSync::setLastSyncStatus(const OAILastSyncStatus &last_sync_status) {
    m_last_sync_status = last_sync_status;
    m_last_sync_status_isSet = true;
}

bool OAILastSync::is_last_sync_status_Set() const{
    return m_last_sync_status_isSet;
}

bool OAILastSync::is_last_sync_status_Valid() const{
    return m_last_sync_status_isValid;
}

QString OAILastSync::getLastSyncStatusMessage() const {
    return m_last_sync_status_message;
}
void OAILastSync::setLastSyncStatusMessage(const QString &last_sync_status_message) {
    m_last_sync_status_message = last_sync_status_message;
    m_last_sync_status_message_isSet = true;
}

bool OAILastSync::is_last_sync_status_message_Set() const{
    return m_last_sync_status_message_isSet;
}

bool OAILastSync::is_last_sync_status_message_Valid() const{
    return m_last_sync_status_message_isValid;
}

QDateTime OAILastSync::getLastSuccessfulSyncTime() const {
    return m_last_successful_sync_time;
}
void OAILastSync::setLastSuccessfulSyncTime(const QDateTime &last_successful_sync_time) {
    m_last_successful_sync_time = last_successful_sync_time;
    m_last_successful_sync_time_isSet = true;
}

bool OAILastSync::is_last_successful_sync_time_Set() const{
    return m_last_successful_sync_time_isSet;
}

bool OAILastSync::is_last_successful_sync_time_Valid() const{
    return m_last_successful_sync_time_isValid;
}

QString OAILastSync::getLastSuccessfulSyncProvisioningArtifactId() const {
    return m_last_successful_sync_provisioning_artifact_id;
}
void OAILastSync::setLastSuccessfulSyncProvisioningArtifactId(const QString &last_successful_sync_provisioning_artifact_id) {
    m_last_successful_sync_provisioning_artifact_id = last_successful_sync_provisioning_artifact_id;
    m_last_successful_sync_provisioning_artifact_id_isSet = true;
}

bool OAILastSync::is_last_successful_sync_provisioning_artifact_id_Set() const{
    return m_last_successful_sync_provisioning_artifact_id_isSet;
}

bool OAILastSync::is_last_successful_sync_provisioning_artifact_id_Valid() const{
    return m_last_successful_sync_provisioning_artifact_id_isValid;
}

bool OAILastSync::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_sync_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_sync_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_sync_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_successful_sync_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_successful_sync_provisioning_artifact_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILastSync::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
