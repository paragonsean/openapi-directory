/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListOrganizationPortfolioAccessOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListOrganizationPortfolioAccessOutput::OAIListOrganizationPortfolioAccessOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListOrganizationPortfolioAccessOutput::OAIListOrganizationPortfolioAccessOutput() {
    this->initializeModel();
}

OAIListOrganizationPortfolioAccessOutput::~OAIListOrganizationPortfolioAccessOutput() {}

void OAIListOrganizationPortfolioAccessOutput::initializeModel() {

    m_organization_nodes_isSet = false;
    m_organization_nodes_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;
}

void OAIListOrganizationPortfolioAccessOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListOrganizationPortfolioAccessOutput::fromJsonObject(QJsonObject json) {

    m_organization_nodes_isValid = ::OpenAPI::fromJsonValue(m_organization_nodes, json[QString("OrganizationNodes")]);
    m_organization_nodes_isSet = !json[QString("OrganizationNodes")].isNull() && m_organization_nodes_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("NextPageToken")]);
    m_next_page_token_isSet = !json[QString("NextPageToken")].isNull() && m_next_page_token_isValid;
}

QString OAIListOrganizationPortfolioAccessOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListOrganizationPortfolioAccessOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_organization_nodes.isSet()) {
        obj.insert(QString("OrganizationNodes"), ::OpenAPI::toJsonValue(m_organization_nodes));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("NextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    return obj;
}

QList OAIListOrganizationPortfolioAccessOutput::getOrganizationNodes() const {
    return m_organization_nodes;
}
void OAIListOrganizationPortfolioAccessOutput::setOrganizationNodes(const QList &organization_nodes) {
    m_organization_nodes = organization_nodes;
    m_organization_nodes_isSet = true;
}

bool OAIListOrganizationPortfolioAccessOutput::is_organization_nodes_Set() const{
    return m_organization_nodes_isSet;
}

bool OAIListOrganizationPortfolioAccessOutput::is_organization_nodes_Valid() const{
    return m_organization_nodes_isValid;
}

QString OAIListOrganizationPortfolioAccessOutput::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListOrganizationPortfolioAccessOutput::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListOrganizationPortfolioAccessOutput::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListOrganizationPortfolioAccessOutput::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

bool OAIListOrganizationPortfolioAccessOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_organization_nodes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListOrganizationPortfolioAccessOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
