/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEvaluationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEvaluationType::OAIEvaluationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEvaluationType::OAIEvaluationType() {
    this->initializeModel();
}

OAIEvaluationType::~OAIEvaluationType() {}

void OAIEvaluationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEvaluationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEvaluationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("STATIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEvaluationType::STATIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DYNAMIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEvaluationType::DYNAMIC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEvaluationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEvaluationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEvaluationType::STATIC:
            val = "STATIC";
            break;
        case eOAIEvaluationType::DYNAMIC:
            val = "DYNAMIC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEvaluationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEvaluationType::eOAIEvaluationType OAIEvaluationType::getValue() const {
    return m_value;
}

void OAIEvaluationType::setValue(const OAIEvaluationType::eOAIEvaluationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEvaluationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIEvaluationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
