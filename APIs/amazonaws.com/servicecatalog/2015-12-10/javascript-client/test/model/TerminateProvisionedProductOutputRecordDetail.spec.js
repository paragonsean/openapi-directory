/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsServiceCatalog);
  }
}(this, function(expect, AwsServiceCatalog) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TerminateProvisionedProductOutputRecordDetail', function() {
    it('should create an instance of TerminateProvisionedProductOutputRecordDetail', function() {
      // uncomment below and update the code to test TerminateProvisionedProductOutputRecordDetail
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be.a(AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail);
    });

    it('should have the property recordId (base name: "RecordId")', function() {
      // uncomment below and update the code to test the property recordId
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property provisionedProductName (base name: "ProvisionedProductName")', function() {
      // uncomment below and update the code to test the property provisionedProductName
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property createdTime (base name: "CreatedTime")', function() {
      // uncomment below and update the code to test the property createdTime
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property updatedTime (base name: "UpdatedTime")', function() {
      // uncomment below and update the code to test the property updatedTime
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property provisionedProductType (base name: "ProvisionedProductType")', function() {
      // uncomment below and update the code to test the property provisionedProductType
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property recordType (base name: "RecordType")', function() {
      // uncomment below and update the code to test the property recordType
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property provisionedProductId (base name: "ProvisionedProductId")', function() {
      // uncomment below and update the code to test the property provisionedProductId
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "ProductId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property provisioningArtifactId (base name: "ProvisioningArtifactId")', function() {
      // uncomment below and update the code to test the property provisioningArtifactId
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property pathId (base name: "PathId")', function() {
      // uncomment below and update the code to test the property pathId
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property recordErrors (base name: "RecordErrors")', function() {
      // uncomment below and update the code to test the property recordErrors
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property recordTags (base name: "RecordTags")', function() {
      // uncomment below and update the code to test the property recordTags
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

    it('should have the property launchRoleArn (base name: "LaunchRoleArn")', function() {
      // uncomment below and update the code to test the property launchRoleArn
      //var instance = new AwsServiceCatalog.TerminateProvisionedProductOutputRecordDetail();
      //expect(instance).to.be();
    });

  });

}));
