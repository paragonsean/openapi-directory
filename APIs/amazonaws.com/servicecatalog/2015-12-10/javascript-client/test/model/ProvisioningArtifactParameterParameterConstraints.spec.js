/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsServiceCatalog);
  }
}(this, function(expect, AwsServiceCatalog) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProvisioningArtifactParameterParameterConstraints', function() {
    it('should create an instance of ProvisioningArtifactParameterParameterConstraints', function() {
      // uncomment below and update the code to test ProvisioningArtifactParameterParameterConstraints
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be.a(AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints);
    });

    it('should have the property allowedValues (base name: "AllowedValues")', function() {
      // uncomment below and update the code to test the property allowedValues
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

    it('should have the property allowedPattern (base name: "AllowedPattern")', function() {
      // uncomment below and update the code to test the property allowedPattern
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

    it('should have the property constraintDescription (base name: "ConstraintDescription")', function() {
      // uncomment below and update the code to test the property constraintDescription
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

    it('should have the property maxLength (base name: "MaxLength")', function() {
      // uncomment below and update the code to test the property maxLength
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

    it('should have the property minLength (base name: "MinLength")', function() {
      // uncomment below and update the code to test the property minLength
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

    it('should have the property maxValue (base name: "MaxValue")', function() {
      // uncomment below and update the code to test the property maxValue
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

    it('should have the property minValue (base name: "MinValue")', function() {
      // uncomment below and update the code to test the property minValue
      //var instance = new AwsServiceCatalog.ProvisioningArtifactParameterParameterConstraints();
      //expect(instance).to.be();
    });

  });

}));
