/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsServiceCatalog);
  }
}(this, function(expect, AwsServiceCatalog) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsServiceCatalog.CopyProductInput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CopyProductInput', function() {
    it('should create an instance of CopyProductInput', function() {
      // uncomment below and update the code to test CopyProductInput
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be.a(AwsServiceCatalog.CopyProductInput);
    });

    it('should have the property acceptLanguage (base name: "AcceptLanguage")', function() {
      // uncomment below and update the code to test the property acceptLanguage
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

    it('should have the property sourceProductArn (base name: "SourceProductArn")', function() {
      // uncomment below and update the code to test the property sourceProductArn
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

    it('should have the property targetProductId (base name: "TargetProductId")', function() {
      // uncomment below and update the code to test the property targetProductId
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

    it('should have the property targetProductName (base name: "TargetProductName")', function() {
      // uncomment below and update the code to test the property targetProductName
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

    it('should have the property sourceProvisioningArtifactIdentifiers (base name: "SourceProvisioningArtifactIdentifiers")', function() {
      // uncomment below and update the code to test the property sourceProvisioningArtifactIdentifiers
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

    it('should have the property copyOptions (base name: "CopyOptions")', function() {
      // uncomment below and update the code to test the property copyOptions
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

    it('should have the property idempotencyToken (base name: "IdempotencyToken")', function() {
      // uncomment below and update the code to test the property idempotencyToken
      //var instance = new AwsServiceCatalog.CopyProductInput();
      //expect(instance).to.be();
    });

  });

}));
