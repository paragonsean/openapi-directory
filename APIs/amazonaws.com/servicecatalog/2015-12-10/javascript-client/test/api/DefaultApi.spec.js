/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsServiceCatalog);
  }
}(this, function(expect, AwsServiceCatalog) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsServiceCatalog.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('acceptPortfolioShare', function() {
      it('should call acceptPortfolioShare successfully', function(done) {
        //uncomment below and update the code to test acceptPortfolioShare
        //instance.acceptPortfolioShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateBudgetWithResource', function() {
      it('should call associateBudgetWithResource successfully', function(done) {
        //uncomment below and update the code to test associateBudgetWithResource
        //instance.associateBudgetWithResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associatePrincipalWithPortfolio', function() {
      it('should call associatePrincipalWithPortfolio successfully', function(done) {
        //uncomment below and update the code to test associatePrincipalWithPortfolio
        //instance.associatePrincipalWithPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateProductWithPortfolio', function() {
      it('should call associateProductWithPortfolio successfully', function(done) {
        //uncomment below and update the code to test associateProductWithPortfolio
        //instance.associateProductWithPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateServiceActionWithProvisioningArtifact', function() {
      it('should call associateServiceActionWithProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test associateServiceActionWithProvisioningArtifact
        //instance.associateServiceActionWithProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateTagOptionWithResource', function() {
      it('should call associateTagOptionWithResource successfully', function(done) {
        //uncomment below and update the code to test associateTagOptionWithResource
        //instance.associateTagOptionWithResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchAssociateServiceActionWithProvisioningArtifact', function() {
      it('should call batchAssociateServiceActionWithProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test batchAssociateServiceActionWithProvisioningArtifact
        //instance.batchAssociateServiceActionWithProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDisassociateServiceActionFromProvisioningArtifact', function() {
      it('should call batchDisassociateServiceActionFromProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test batchDisassociateServiceActionFromProvisioningArtifact
        //instance.batchDisassociateServiceActionFromProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyProduct', function() {
      it('should call copyProduct successfully', function(done) {
        //uncomment below and update the code to test copyProduct
        //instance.copyProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConstraint', function() {
      it('should call createConstraint successfully', function(done) {
        //uncomment below and update the code to test createConstraint
        //instance.createConstraint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPortfolio', function() {
      it('should call createPortfolio successfully', function(done) {
        //uncomment below and update the code to test createPortfolio
        //instance.createPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPortfolioShare', function() {
      it('should call createPortfolioShare successfully', function(done) {
        //uncomment below and update the code to test createPortfolioShare
        //instance.createPortfolioShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProduct', function() {
      it('should call createProduct successfully', function(done) {
        //uncomment below and update the code to test createProduct
        //instance.createProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProvisionedProductPlan', function() {
      it('should call createProvisionedProductPlan successfully', function(done) {
        //uncomment below and update the code to test createProvisionedProductPlan
        //instance.createProvisionedProductPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProvisioningArtifact', function() {
      it('should call createProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test createProvisioningArtifact
        //instance.createProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createServiceAction', function() {
      it('should call createServiceAction successfully', function(done) {
        //uncomment below and update the code to test createServiceAction
        //instance.createServiceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTagOption', function() {
      it('should call createTagOption successfully', function(done) {
        //uncomment below and update the code to test createTagOption
        //instance.createTagOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConstraint', function() {
      it('should call deleteConstraint successfully', function(done) {
        //uncomment below and update the code to test deleteConstraint
        //instance.deleteConstraint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolio', function() {
      it('should call deletePortfolio successfully', function(done) {
        //uncomment below and update the code to test deletePortfolio
        //instance.deletePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortfolioShare', function() {
      it('should call deletePortfolioShare successfully', function(done) {
        //uncomment below and update the code to test deletePortfolioShare
        //instance.deletePortfolioShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProduct', function() {
      it('should call deleteProduct successfully', function(done) {
        //uncomment below and update the code to test deleteProduct
        //instance.deleteProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProvisionedProductPlan', function() {
      it('should call deleteProvisionedProductPlan successfully', function(done) {
        //uncomment below and update the code to test deleteProvisionedProductPlan
        //instance.deleteProvisionedProductPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProvisioningArtifact', function() {
      it('should call deleteProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test deleteProvisioningArtifact
        //instance.deleteProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteServiceAction', function() {
      it('should call deleteServiceAction successfully', function(done) {
        //uncomment below and update the code to test deleteServiceAction
        //instance.deleteServiceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTagOption', function() {
      it('should call deleteTagOption successfully', function(done) {
        //uncomment below and update the code to test deleteTagOption
        //instance.deleteTagOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeConstraint', function() {
      it('should call describeConstraint successfully', function(done) {
        //uncomment below and update the code to test describeConstraint
        //instance.describeConstraint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCopyProductStatus', function() {
      it('should call describeCopyProductStatus successfully', function(done) {
        //uncomment below and update the code to test describeCopyProductStatus
        //instance.describeCopyProductStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePortfolio', function() {
      it('should call describePortfolio successfully', function(done) {
        //uncomment below and update the code to test describePortfolio
        //instance.describePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePortfolioShareStatus', function() {
      it('should call describePortfolioShareStatus successfully', function(done) {
        //uncomment below and update the code to test describePortfolioShareStatus
        //instance.describePortfolioShareStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePortfolioShares', function() {
      it('should call describePortfolioShares successfully', function(done) {
        //uncomment below and update the code to test describePortfolioShares
        //instance.describePortfolioShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProduct', function() {
      it('should call describeProduct successfully', function(done) {
        //uncomment below and update the code to test describeProduct
        //instance.describeProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProductAsAdmin', function() {
      it('should call describeProductAsAdmin successfully', function(done) {
        //uncomment below and update the code to test describeProductAsAdmin
        //instance.describeProductAsAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProductView', function() {
      it('should call describeProductView successfully', function(done) {
        //uncomment below and update the code to test describeProductView
        //instance.describeProductView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProvisionedProduct', function() {
      it('should call describeProvisionedProduct successfully', function(done) {
        //uncomment below and update the code to test describeProvisionedProduct
        //instance.describeProvisionedProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProvisionedProductPlan', function() {
      it('should call describeProvisionedProductPlan successfully', function(done) {
        //uncomment below and update the code to test describeProvisionedProductPlan
        //instance.describeProvisionedProductPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProvisioningArtifact', function() {
      it('should call describeProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test describeProvisioningArtifact
        //instance.describeProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProvisioningParameters', function() {
      it('should call describeProvisioningParameters successfully', function(done) {
        //uncomment below and update the code to test describeProvisioningParameters
        //instance.describeProvisioningParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeRecord', function() {
      it('should call describeRecord successfully', function(done) {
        //uncomment below and update the code to test describeRecord
        //instance.describeRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeServiceAction', function() {
      it('should call describeServiceAction successfully', function(done) {
        //uncomment below and update the code to test describeServiceAction
        //instance.describeServiceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeServiceActionExecutionParameters', function() {
      it('should call describeServiceActionExecutionParameters successfully', function(done) {
        //uncomment below and update the code to test describeServiceActionExecutionParameters
        //instance.describeServiceActionExecutionParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTagOption', function() {
      it('should call describeTagOption successfully', function(done) {
        //uncomment below and update the code to test describeTagOption
        //instance.describeTagOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableAWSOrganizationsAccess', function() {
      it('should call disableAWSOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test disableAWSOrganizationsAccess
        //instance.disableAWSOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateBudgetFromResource', function() {
      it('should call disassociateBudgetFromResource successfully', function(done) {
        //uncomment below and update the code to test disassociateBudgetFromResource
        //instance.disassociateBudgetFromResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociatePrincipalFromPortfolio', function() {
      it('should call disassociatePrincipalFromPortfolio successfully', function(done) {
        //uncomment below and update the code to test disassociatePrincipalFromPortfolio
        //instance.disassociatePrincipalFromPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateProductFromPortfolio', function() {
      it('should call disassociateProductFromPortfolio successfully', function(done) {
        //uncomment below and update the code to test disassociateProductFromPortfolio
        //instance.disassociateProductFromPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateServiceActionFromProvisioningArtifact', function() {
      it('should call disassociateServiceActionFromProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test disassociateServiceActionFromProvisioningArtifact
        //instance.disassociateServiceActionFromProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateTagOptionFromResource', function() {
      it('should call disassociateTagOptionFromResource successfully', function(done) {
        //uncomment below and update the code to test disassociateTagOptionFromResource
        //instance.disassociateTagOptionFromResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableAWSOrganizationsAccess', function() {
      it('should call enableAWSOrganizationsAccess successfully', function(done) {
        //uncomment below and update the code to test enableAWSOrganizationsAccess
        //instance.enableAWSOrganizationsAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('executeProvisionedProductPlan', function() {
      it('should call executeProvisionedProductPlan successfully', function(done) {
        //uncomment below and update the code to test executeProvisionedProductPlan
        //instance.executeProvisionedProductPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('executeProvisionedProductServiceAction', function() {
      it('should call executeProvisionedProductServiceAction successfully', function(done) {
        //uncomment below and update the code to test executeProvisionedProductServiceAction
        //instance.executeProvisionedProductServiceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAWSOrganizationsAccessStatus', function() {
      it('should call getAWSOrganizationsAccessStatus successfully', function(done) {
        //uncomment below and update the code to test getAWSOrganizationsAccessStatus
        //instance.getAWSOrganizationsAccessStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProvisionedProductOutputs', function() {
      it('should call getProvisionedProductOutputs successfully', function(done) {
        //uncomment below and update the code to test getProvisionedProductOutputs
        //instance.getProvisionedProductOutputs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importAsProvisionedProduct', function() {
      it('should call importAsProvisionedProduct successfully', function(done) {
        //uncomment below and update the code to test importAsProvisionedProduct
        //instance.importAsProvisionedProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAcceptedPortfolioShares', function() {
      it('should call listAcceptedPortfolioShares successfully', function(done) {
        //uncomment below and update the code to test listAcceptedPortfolioShares
        //instance.listAcceptedPortfolioShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBudgetsForResource', function() {
      it('should call listBudgetsForResource successfully', function(done) {
        //uncomment below and update the code to test listBudgetsForResource
        //instance.listBudgetsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConstraintsForPortfolio', function() {
      it('should call listConstraintsForPortfolio successfully', function(done) {
        //uncomment below and update the code to test listConstraintsForPortfolio
        //instance.listConstraintsForPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLaunchPaths', function() {
      it('should call listLaunchPaths successfully', function(done) {
        //uncomment below and update the code to test listLaunchPaths
        //instance.listLaunchPaths(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOrganizationPortfolioAccess', function() {
      it('should call listOrganizationPortfolioAccess successfully', function(done) {
        //uncomment below and update the code to test listOrganizationPortfolioAccess
        //instance.listOrganizationPortfolioAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPortfolioAccess', function() {
      it('should call listPortfolioAccess successfully', function(done) {
        //uncomment below and update the code to test listPortfolioAccess
        //instance.listPortfolioAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPortfolios', function() {
      it('should call listPortfolios successfully', function(done) {
        //uncomment below and update the code to test listPortfolios
        //instance.listPortfolios(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPortfoliosForProduct', function() {
      it('should call listPortfoliosForProduct successfully', function(done) {
        //uncomment below and update the code to test listPortfoliosForProduct
        //instance.listPortfoliosForProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPrincipalsForPortfolio', function() {
      it('should call listPrincipalsForPortfolio successfully', function(done) {
        //uncomment below and update the code to test listPrincipalsForPortfolio
        //instance.listPrincipalsForPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProvisionedProductPlans', function() {
      it('should call listProvisionedProductPlans successfully', function(done) {
        //uncomment below and update the code to test listProvisionedProductPlans
        //instance.listProvisionedProductPlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProvisioningArtifacts', function() {
      it('should call listProvisioningArtifacts successfully', function(done) {
        //uncomment below and update the code to test listProvisioningArtifacts
        //instance.listProvisioningArtifacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProvisioningArtifactsForServiceAction', function() {
      it('should call listProvisioningArtifactsForServiceAction successfully', function(done) {
        //uncomment below and update the code to test listProvisioningArtifactsForServiceAction
        //instance.listProvisioningArtifactsForServiceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRecordHistory', function() {
      it('should call listRecordHistory successfully', function(done) {
        //uncomment below and update the code to test listRecordHistory
        //instance.listRecordHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResourcesForTagOption', function() {
      it('should call listResourcesForTagOption successfully', function(done) {
        //uncomment below and update the code to test listResourcesForTagOption
        //instance.listResourcesForTagOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServiceActions', function() {
      it('should call listServiceActions successfully', function(done) {
        //uncomment below and update the code to test listServiceActions
        //instance.listServiceActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServiceActionsForProvisioningArtifact', function() {
      it('should call listServiceActionsForProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test listServiceActionsForProvisioningArtifact
        //instance.listServiceActionsForProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStackInstancesForProvisionedProduct', function() {
      it('should call listStackInstancesForProvisionedProduct successfully', function(done) {
        //uncomment below and update the code to test listStackInstancesForProvisionedProduct
        //instance.listStackInstancesForProvisionedProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagOptions', function() {
      it('should call listTagOptions successfully', function(done) {
        //uncomment below and update the code to test listTagOptions
        //instance.listTagOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notifyProvisionProductEngineWorkflowResult', function() {
      it('should call notifyProvisionProductEngineWorkflowResult successfully', function(done) {
        //uncomment below and update the code to test notifyProvisionProductEngineWorkflowResult
        //instance.notifyProvisionProductEngineWorkflowResult(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notifyTerminateProvisionedProductEngineWorkflowResult', function() {
      it('should call notifyTerminateProvisionedProductEngineWorkflowResult successfully', function(done) {
        //uncomment below and update the code to test notifyTerminateProvisionedProductEngineWorkflowResult
        //instance.notifyTerminateProvisionedProductEngineWorkflowResult(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notifyUpdateProvisionedProductEngineWorkflowResult', function() {
      it('should call notifyUpdateProvisionedProductEngineWorkflowResult successfully', function(done) {
        //uncomment below and update the code to test notifyUpdateProvisionedProductEngineWorkflowResult
        //instance.notifyUpdateProvisionedProductEngineWorkflowResult(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('provisionProduct', function() {
      it('should call provisionProduct successfully', function(done) {
        //uncomment below and update the code to test provisionProduct
        //instance.provisionProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectPortfolioShare', function() {
      it('should call rejectPortfolioShare successfully', function(done) {
        //uncomment below and update the code to test rejectPortfolioShare
        //instance.rejectPortfolioShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scanProvisionedProducts', function() {
      it('should call scanProvisionedProducts successfully', function(done) {
        //uncomment below and update the code to test scanProvisionedProducts
        //instance.scanProvisionedProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchProducts', function() {
      it('should call searchProducts successfully', function(done) {
        //uncomment below and update the code to test searchProducts
        //instance.searchProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchProductsAsAdmin', function() {
      it('should call searchProductsAsAdmin successfully', function(done) {
        //uncomment below and update the code to test searchProductsAsAdmin
        //instance.searchProductsAsAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchProvisionedProducts', function() {
      it('should call searchProvisionedProducts successfully', function(done) {
        //uncomment below and update the code to test searchProvisionedProducts
        //instance.searchProvisionedProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('terminateProvisionedProduct', function() {
      it('should call terminateProvisionedProduct successfully', function(done) {
        //uncomment below and update the code to test terminateProvisionedProduct
        //instance.terminateProvisionedProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConstraint', function() {
      it('should call updateConstraint successfully', function(done) {
        //uncomment below and update the code to test updateConstraint
        //instance.updateConstraint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolio', function() {
      it('should call updatePortfolio successfully', function(done) {
        //uncomment below and update the code to test updatePortfolio
        //instance.updatePortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortfolioShare', function() {
      it('should call updatePortfolioShare successfully', function(done) {
        //uncomment below and update the code to test updatePortfolioShare
        //instance.updatePortfolioShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProduct', function() {
      it('should call updateProduct successfully', function(done) {
        //uncomment below and update the code to test updateProduct
        //instance.updateProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProvisionedProduct', function() {
      it('should call updateProvisionedProduct successfully', function(done) {
        //uncomment below and update the code to test updateProvisionedProduct
        //instance.updateProvisionedProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProvisionedProductProperties', function() {
      it('should call updateProvisionedProductProperties successfully', function(done) {
        //uncomment below and update the code to test updateProvisionedProductProperties
        //instance.updateProvisionedProductProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProvisioningArtifact', function() {
      it('should call updateProvisioningArtifact successfully', function(done) {
        //uncomment below and update the code to test updateProvisioningArtifact
        //instance.updateProvisioningArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServiceAction', function() {
      it('should call updateServiceAction successfully', function(done) {
        //uncomment below and update the code to test updateServiceAction
        //instance.updateServiceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTagOption', function() {
      it('should call updateTagOption successfully', function(done) {
        //uncomment below and update the code to test updateTagOption
        //instance.updateTagOption(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
