/**
 * AWS Service Catalog
 * <fullname>Service Catalog</fullname> <p> <a href=\"http://aws.amazon.com/servicecatalog\">Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for Amazon Web Services. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href=\"http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html\">Service Catalog Concepts</a>.</p>
 *
 * The version of the OpenAPI document: 2015-12-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExecuteProvisionedProductServiceActionInput model module.
 * @module model/ExecuteProvisionedProductServiceActionInput
 * @version 2015-12-10
 */
class ExecuteProvisionedProductServiceActionInput {
    /**
     * Constructs a new <code>ExecuteProvisionedProductServiceActionInput</code>.
     * @alias module:model/ExecuteProvisionedProductServiceActionInput
     * @param provisionedProductId {String} 
     * @param serviceActionId {String} 
     * @param executeToken {String} 
     */
    constructor(provisionedProductId, serviceActionId, executeToken) { 
        
        ExecuteProvisionedProductServiceActionInput.initialize(this, provisionedProductId, serviceActionId, executeToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, provisionedProductId, serviceActionId, executeToken) { 
        obj['ProvisionedProductId'] = provisionedProductId;
        obj['ServiceActionId'] = serviceActionId;
        obj['ExecuteToken'] = executeToken;
    }

    /**
     * Constructs a <code>ExecuteProvisionedProductServiceActionInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecuteProvisionedProductServiceActionInput} obj Optional instance to populate.
     * @return {module:model/ExecuteProvisionedProductServiceActionInput} The populated <code>ExecuteProvisionedProductServiceActionInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecuteProvisionedProductServiceActionInput();

            if (data.hasOwnProperty('ProvisionedProductId')) {
                obj['ProvisionedProductId'] = ApiClient.convertToType(data['ProvisionedProductId'], 'String');
            }
            if (data.hasOwnProperty('ServiceActionId')) {
                obj['ServiceActionId'] = ApiClient.convertToType(data['ServiceActionId'], 'String');
            }
            if (data.hasOwnProperty('ExecuteToken')) {
                obj['ExecuteToken'] = ApiClient.convertToType(data['ExecuteToken'], 'String');
            }
            if (data.hasOwnProperty('AcceptLanguage')) {
                obj['AcceptLanguage'] = ApiClient.convertToType(data['AcceptLanguage'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecuteProvisionedProductServiceActionInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecuteProvisionedProductServiceActionInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExecuteProvisionedProductServiceActionInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProvisionedProductId`
        if (data['ProvisionedProductId']) { // data not null
          String.validateJSON(data['ProvisionedProductId']);
        }
        // validate the optional field `ServiceActionId`
        if (data['ServiceActionId']) { // data not null
          String.validateJSON(data['ServiceActionId']);
        }
        // validate the optional field `ExecuteToken`
        if (data['ExecuteToken']) { // data not null
          String.validateJSON(data['ExecuteToken']);
        }
        // validate the optional field `AcceptLanguage`
        if (data['AcceptLanguage']) { // data not null
          String.validateJSON(data['AcceptLanguage']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }

        return true;
    }


}

ExecuteProvisionedProductServiceActionInput.RequiredProperties = ["ProvisionedProductId", "ServiceActionId", "ExecuteToken"];

/**
 * @member {String} ProvisionedProductId
 */
ExecuteProvisionedProductServiceActionInput.prototype['ProvisionedProductId'] = undefined;

/**
 * @member {String} ServiceActionId
 */
ExecuteProvisionedProductServiceActionInput.prototype['ServiceActionId'] = undefined;

/**
 * @member {String} ExecuteToken
 */
ExecuteProvisionedProductServiceActionInput.prototype['ExecuteToken'] = undefined;

/**
 * @member {String} AcceptLanguage
 */
ExecuteProvisionedProductServiceActionInput.prototype['AcceptLanguage'] = undefined;

/**
 * @member {Object} Parameters
 */
ExecuteProvisionedProductServiceActionInput.prototype['Parameters'] = undefined;






export default ExecuteProvisionedProductServiceActionInput;

