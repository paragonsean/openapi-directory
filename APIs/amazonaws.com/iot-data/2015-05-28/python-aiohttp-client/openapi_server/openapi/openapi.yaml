openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>IoT data</fullname> <p>IoT data enables secure, bi-directional\
    \ communication between Internet-connected things (such as sensors, actuators,\
    \ embedded devices, or smart appliances) and the Amazon Web Services cloud. It\
    \ implements a broker for applications and things to publish messages over HTTP\
    \ (Publish) and retrieve, update, and delete shadows. A shadow is a persistent\
    \ representation of your things and their state in the Amazon Web Services cloud.</p>\
    \ <p>Find the endpoint address for actions in IoT data by running this CLI command:</p>\
    \ <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p>\
    \ <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"\
    >Amazon Web ServicesSignature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS IoT Data Plane
  version: 2015-05-28
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: iot-data
  x-aws-signingName: iotdata
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-data-2015-05-28.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iot/
servers:
- description: The AWS IoT Data Plane multi-region endpoint
  url: "http://data-ats.iot.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Data Plane multi-region endpoint
  url: "https://data-ats.iot.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Data Plane endpoint for China (Beijing) and China (Ningxia)
  url: "http://data-ats.iot.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS IoT Data Plane endpoint for China (Beijing) and China (Ningxia)
  url: "https://data-ats.iot.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /api/things/shadow/ListNamedShadowsForThing/{thingName}:
    get:
      description: <p>Lists the shadows for the specified thing.</p> <p>Requires permission
        to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">ListNamedShadowsForThing</a>
        action.</p>
      operationId: list_named_shadows_for_thing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the thing.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      - description: The token to retrieve the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The result page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNamedShadowsForThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /retainedMessage:
    get:
      description: "<p>Lists summary information about the retained messages stored\
        \ for the account.</p> <p>This action returns only the topic names of the\
        \ retained messages. It doesn't return any message payloads. Although this\
        \ action doesn't return a message payload, it can still incur messaging costs.</p>\
        \ <p>To get the message payload of a retained message, call <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_iotdata_GetRetainedMessage.html\"\
        >GetRetainedMessage</a> with the topic name of the retained message.</p> <p>Requires\
        \ permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions\"\
        >ListRetainedMessages</a> action.</p> <p>For more information about messaging\
        \ costs, see <a href=\"http://aws.amazon.com/iot-core/pricing/#Messaging\"\
        >Amazon Web Services IoT Core pricing - Messaging</a>.</p>"
      operationId: list_retained_messages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return at one time.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRetainedMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /retainedMessage/{topic}:
    get:
      description: "<p>Gets the details of a single retained message for the specified\
        \ topic.</p> <p>This action returns the message payload of the retained message,\
        \ which can incur messaging costs. To list only the topic names of the retained\
        \ messages, call <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_iotdata_ListRetainedMessages.html\"\
        >ListRetainedMessages</a>.</p> <p>Requires permission to access the <a href=\"\
        https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions\"\
        >GetRetainedMessage</a> action.</p> <p>For more information about messaging\
        \ costs, see <a href=\"http://aws.amazon.com/iot-core/pricing/#Messaging\"\
        >Amazon Web Services IoT Core pricing - Messaging</a>.</p>"
      operationId: get_retained_message
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The topic name of the retained message to retrieve.
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRetainedMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /things/{thingName}/shadow:
    delete:
      description: "<p>Deletes the shadow for the specified thing.</p> <p>Requires\
        \ permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\"\
        >DeleteThingShadow</a> action.</p> <p>For more information, see <a href=\"\
        http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html\"\
        >DeleteThingShadow</a> in the IoT Developer Guide.</p>"
      operationId: delete_thing_shadow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the thing.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      - description: The name of the shadow.
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[$a-zA-Z0-9:_-]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThingShadowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
          description: UnsupportedDocumentEncodingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "<p>Gets the shadow for the specified thing.</p> <p>Requires permission\
        \ to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\"\
        >GetThingShadow</a> action.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html\"\
        >GetThingShadow</a> in the IoT Developer Guide.</p>"
      operationId: get_thing_shadow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the thing.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      - description: The name of the shadow.
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[$a-zA-Z0-9:_-]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThingShadowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
          description: UnsupportedDocumentEncodingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Updates the shadow for the specified thing.</p> <p>Requires\
        \ permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\"\
        >UpdateThingShadow</a> action.</p> <p>For more information, see <a href=\"\
        http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html\"\
        >UpdateThingShadow</a> in the IoT Developer Guide.</p>"
      operationId: update_thing_shadow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the thing.
        explode: false
        in: path
        name: thingName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9:_-]+"
          type: string
        style: simple
      - description: The name of the shadow.
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[$a-zA-Z0-9:_-]+"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThingShadow_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThingShadowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEntityTooLargeException'
          description: RequestEntityTooLargeException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
          description: UnsupportedDocumentEncodingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /topics/{topic}:
    post:
      description: "<p>Publishes an MQTT message.</p> <p>Requires permission to access\
        \ the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\"\
        >Publish</a> action.</p> <p>For more information about MQTT messages, see\
        \ <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html\"\
        >MQTT Protocol</a> in the IoT Developer Guide.</p> <p>For more information\
        \ about messaging costs, see <a href=\"http://aws.amazon.com/iot-core/pricing/#Messaging\"\
        >Amazon Web Services IoT Core pricing - Messaging</a>.</p>"
      operationId: publish
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the MQTT topic.
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      - description: The Quality of Service (QoS) level. The default QoS level is
          0.
        explode: true
        in: query
        name: qos
        required: false
        schema:
          maximum: 1
          minimum: 0
          type: integer
        style: form
      - description: "<p>A Boolean value that determines whether to set the RETAIN\
          \ flag when the message is published.</p> <p>Setting the RETAIN flag causes\
          \ the message to be retained and sent to new subscribers to the topic.</p>\
          \ <p>Valid values: <code>true</code> | <code>false</code> </p> <p>Default\
          \ value: <code>false</code> </p>"
        explode: true
        in: query
        name: retain
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>A JSON string that contains an array of JSON objects. If\
          \ you don’t use Amazon Web Services SDK or CLI, you must encode the JSON\
          \ string to base64 format before adding it to the HTTP header. <code>userProperties</code>\
          \ is an HTTP header value in the API.</p> <p>The following example <code>userProperties</code>\
          \ parameter is a JSON string which represents two User Properties. Note\
          \ that it needs to be base64-encoded:</p> <p> <code>[{\"deviceName\": \"\
          alpha\"}, {\"deviceCnt\": \"45\"}]</code> </p>"
        explode: false
        in: header
        name: x-amz-mqtt5-user-properties
        required: false
        schema:
          type: string
        style: simple
      - description: An <code>Enum</code> string value that indicates whether the
          payload is formatted as UTF-8. <code>payloadFormatIndicator</code> is an
          HTTP header value in the API.
        explode: false
        in: header
        name: x-amz-mqtt5-payload-format-indicator
        required: false
        schema:
          enum:
          - UNSPECIFIED_BYTES
          - UTF8_DATA
          type: string
        style: simple
      - description: A UTF-8 encoded string that describes the content of the publishing
          message.
        explode: true
        in: query
        name: contentType
        required: false
        schema:
          type: string
        style: form
      - description: A UTF-8 encoded string that's used as the topic name for a response
          message. The response topic is used to describe the topic which the receiver
          should publish to as part of the request-response flow. The topic must not
          contain wildcard characters.
        explode: true
        in: query
        name: responseTopic
        required: false
        schema:
          type: string
        style: form
      - description: The base64-encoded binary data used by the sender of the request
          message to identify which request the response message is for when it's
          received. <code>correlationData</code> is an HTTP header value in the API.
        explode: false
        in: header
        name: x-amz-mqtt5-correlation-data
        required: false
        schema:
          type: string
        style: simple
      - description: "A user-defined integer value that represents the message expiry\
          \ interval in seconds. If absent, the message doesn't expire. For more information\
          \ about the limits of <code>messageExpiry</code>, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/iot-core.html#message-broker-limits\"\
          >Amazon Web Services IoT Core message broker and protocol limits and quotas\
          \ </a> from the Amazon Web Services Reference Guide."
        explode: true
        in: query
        name: messageExpiry
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publish_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    DeleteThingShadowResponse:
      description: The output from the DeleteThingShadow operation.
      example:
        payload: ""
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          - description: "The state information, in JSON format."
          title: payload
      required:
      - payload
      title: DeleteThingShadowResponse
      type: object
    ResourceNotFoundException: {}
    InvalidRequestException: {}
    ThrottlingException: {}
    UnauthorizedException: {}
    ServiceUnavailableException: {}
    InternalFailureException: {}
    MethodNotAllowedException: {}
    UnsupportedDocumentEncodingException: {}
    GetRetainedMessageResponse:
      description: The output from the GetRetainedMessage operation.
      example:
        lastModifiedTime: ""
        qos: ""
        payload: ""
        userProperties: ""
        topic: ""
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          - description: The topic name to which the retained message was published.
          title: topic
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          - description: The Base64-encoded message payload of the retained message
              body.
          title: payload
        qos:
          allOf:
          - $ref: '#/components/schemas/Qos'
          - description: The quality of service (QoS) level used to publish the retained
              message.
          title: qos
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The Epoch date and time, in milliseconds, when the retained\
              \ message was stored by IoT."
          title: lastModifiedTime
        userProperties:
          allOf:
          - $ref: '#/components/schemas/UserPropertiesBlob'
          - description: "<p>A base64-encoded JSON string that includes an array of\
              \ JSON objects, or null if the retained message doesn't include any\
              \ user properties.</p> <p>The following example <code>userProperties</code>\
              \ parameter is a JSON string that represents two user properties. Note\
              \ that it will be base64-encoded:</p> <p> <code>[{\"deviceName\": \"\
              alpha\"}, {\"deviceCnt\": \"45\"}]</code> </p>"
          title: userProperties
      title: GetRetainedMessageResponse
      type: object
    GetThingShadowResponse:
      description: The output from the GetThingShadow operation.
      example:
        payload: ""
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          - description: "The state information, in JSON format."
          title: payload
      title: GetThingShadowResponse
      type: object
    ListNamedShadowsForThingResponse:
      example:
        nextToken: ""
        results: ""
        timestamp: ""
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/NamedShadowList'
          - description: The list of shadows for the specified thing.
          title: results
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
          title: nextToken
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The Epoch date and time the response was generated by IoT.
          title: timestamp
      title: ListNamedShadowsForThingResponse
      type: object
    ListRetainedMessagesResponse:
      example:
        nextToken: ""
        retainedTopics: ""
      properties:
        retainedTopics:
          allOf:
          - $ref: '#/components/schemas/RetainedMessageList'
          - description: A summary list the account's retained messages. The information
              returned doesn't include the message payloads of the retained messages.
          title: retainedTopics
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token for the next set of results, or null if there\
              \ are no additional results."
          title: nextToken
      title: ListRetainedMessagesResponse
      type: object
    UpdateThingShadowResponse:
      description: The output from the UpdateThingShadow operation.
      example:
        payload: ""
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          - description: "The state information, in JSON format."
          title: payload
      title: UpdateThingShadowResponse
      type: object
    ConflictException: {}
    RequestEntityTooLargeException: {}
    ContentType:
      type: string
    CorrelationData:
      type: string
    ThingName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9:_-]+"
      type: string
    ShadowName:
      maxLength: 64
      minLength: 1
      pattern: "[$a-zA-Z0-9:_-]+"
      title: ShadowName
      type: string
    DeleteThingShadowRequest:
      description: The input for the DeleteThingShadow operation.
      properties: {}
      title: DeleteThingShadowRequest
      type: object
    JsonDocument:
      type: string
    Topic:
      type: string
    GetRetainedMessageRequest:
      description: The input for the GetRetainedMessage operation.
      properties: {}
      title: GetRetainedMessageRequest
      type: object
    Payload:
      type: string
    Qos:
      maximum: 1
      minimum: 0
      type: integer
    Timestamp:
      type: integer
    UserPropertiesBlob:
      type: string
    GetThingShadowRequest:
      description: The input for the GetThingShadow operation.
      properties: {}
      title: GetThingShadowRequest
      type: object
    NextToken:
      type: string
    PageSize:
      maximum: 100
      minimum: 1
      type: integer
    ListNamedShadowsForThingRequest:
      properties: {}
      title: ListNamedShadowsForThingRequest
      type: object
    NamedShadowList:
      items:
        $ref: '#/components/schemas/ShadowName'
      type: array
    MaxResults:
      maximum: 200
      minimum: 1
      type: integer
    ListRetainedMessagesRequest:
      properties: {}
      title: ListRetainedMessagesRequest
      type: object
    RetainedMessageList:
      items:
        $ref: '#/components/schemas/RetainedMessageSummary'
      type: array
    MessageExpiry:
      type: integer
    PayloadFormatIndicator:
      enum:
      - UNSPECIFIED_BYTES
      - UTF8_DATA
      type: string
    PayloadSize:
      type: integer
    Retain:
      type: boolean
    UserProperties:
      type: string
    ResponseTopic:
      type: string
    PublishRequest:
      description: The input for the Publish operation.
      example:
        payload: ""
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          - description: "<p>The message body. MQTT accepts text, binary, and empty\
              \ (null) message payloads.</p> <p>Publishing an empty (null) payload\
              \ with <b>retain</b> = <code>true</code> deletes the retained message\
              \ identified by <b>topic</b> from Amazon Web Services IoT Core.</p>"
      title: PublishRequest
      type: object
    RetainedMessageSummary:
      description: Information about a single retained message.
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          - description: The topic name to which the retained message was published.
          title: topic
        payloadSize:
          allOf:
          - $ref: '#/components/schemas/PayloadSize'
          - description: The size of the retained message's payload in bytes.
          title: payloadSize
        qos:
          allOf:
          - $ref: '#/components/schemas/Qos'
          - description: The quality of service (QoS) level used to publish the retained
              message.
          title: qos
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The Epoch date and time, in milliseconds, when the retained\
              \ message was stored by IoT."
          title: lastModifiedTime
      title: RetainedMessageSummary
      type: object
    UpdateThingShadowRequest:
      description: The input for the UpdateThingShadow operation.
      example:
        payload: ""
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          - description: "The state information, in JSON format."
      required:
      - payload
      title: UpdateThingShadowRequest
      type: object
    UpdateThingShadow_request:
      properties:
        payload:
          description: "The state information, in JSON format."
          title: payload
          type: string
      required:
      - payload
      title: UpdateThingShadow_request
      type: object
    Publish_request:
      properties:
        payload:
          description: "<p>The message body. MQTT accepts text, binary, and empty\
            \ (null) message payloads.</p> <p>Publishing an empty (null) payload with\
            \ <b>retain</b> = <code>true</code> deletes the retained message identified\
            \ by <b>topic</b> from Amazon Web Services IoT Core.</p>"
          title: payload
          type: string
      title: Publish_request
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
