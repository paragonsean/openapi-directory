# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateThingShadowRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payload: str=None):
        """UpdateThingShadowRequest - a model defined in OpenAPI

        :param payload: The payload of this UpdateThingShadowRequest.
        """
        self.openapi_types = {
            'payload': str
        }

        self.attribute_map = {
            'payload': 'payload'
        }

        self._payload = payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateThingShadowRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateThingShadow_request of this UpdateThingShadowRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payload(self):
        """Gets the payload of this UpdateThingShadowRequest.

        The state information, in JSON format.

        :return: The payload of this UpdateThingShadowRequest.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this UpdateThingShadowRequest.

        The state information, in JSON format.

        :param payload: The payload of this UpdateThingShadowRequest.
        :type payload: str
        """
        if payload is None:
            raise ValueError("Invalid value for `payload`, must not be `None`")

        self._payload = payload
