/**
 * AWS IoT Data Plane
 * <fullname>IoT data</fullname> <p>IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the Amazon Web Services cloud.</p> <p>Find the endpoint address for actions in IoT data by running this CLI command:</p> <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Amazon Web ServicesSignature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>
 *
 * The version of the OpenAPI document: 2015-05-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRetainedMessageSummary.h
 *
 * Information about a single retained message.
 */

#ifndef OAIRetainedMessageSummary_H
#define OAIRetainedMessageSummary_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRetainedMessageSummary : public OAIObject {
public:
    OAIRetainedMessageSummary();
    OAIRetainedMessageSummary(QString json);
    ~OAIRetainedMessageSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    qint32 getPayloadSize() const;
    void setPayloadSize(const qint32 &payload_size);
    bool is_payload_size_Set() const;
    bool is_payload_size_Valid() const;

    qint32 getQos() const;
    void setQos(const qint32 &qos);
    bool is_qos_Set() const;
    bool is_qos_Valid() const;

    qint32 getLastModifiedTime() const;
    void setLastModifiedTime(const qint32 &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    qint32 m_payload_size;
    bool m_payload_size_isSet;
    bool m_payload_size_isValid;

    qint32 m_qos;
    bool m_qos_isSet;
    bool m_qos_isValid;

    qint32 m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRetainedMessageSummary)

#endif // OAIRetainedMessageSummary_H
