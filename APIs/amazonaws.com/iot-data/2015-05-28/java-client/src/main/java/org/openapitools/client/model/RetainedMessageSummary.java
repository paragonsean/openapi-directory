/*
 * AWS IoT Data Plane
 * <fullname>IoT data</fullname> <p>IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the Amazon Web Services cloud.</p> <p>Find the endpoint address for actions in IoT data by running this CLI command:</p> <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Amazon Web ServicesSignature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>
 *
 * The version of the OpenAPI document: 2015-05-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a single retained message.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:47.070429-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RetainedMessageSummary {
  public static final String SERIALIZED_NAME_TOPIC = "topic";
  @SerializedName(SERIALIZED_NAME_TOPIC)
  private String topic;

  public static final String SERIALIZED_NAME_PAYLOAD_SIZE = "payloadSize";
  @SerializedName(SERIALIZED_NAME_PAYLOAD_SIZE)
  private Integer payloadSize;

  public static final String SERIALIZED_NAME_QOS = "qos";
  @SerializedName(SERIALIZED_NAME_QOS)
  private Integer qos;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private Integer lastModifiedTime;

  public RetainedMessageSummary() {
  }

  public RetainedMessageSummary topic(String topic) {
    this.topic = topic;
    return this;
  }

  /**
   * Get topic
   * @return topic
   */
  @javax.annotation.Nullable
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }


  public RetainedMessageSummary payloadSize(Integer payloadSize) {
    this.payloadSize = payloadSize;
    return this;
  }

  /**
   * Get payloadSize
   * @return payloadSize
   */
  @javax.annotation.Nullable
  public Integer getPayloadSize() {
    return payloadSize;
  }

  public void setPayloadSize(Integer payloadSize) {
    this.payloadSize = payloadSize;
  }


  public RetainedMessageSummary qos(Integer qos) {
    this.qos = qos;
    return this;
  }

  /**
   * Get qos
   * @return qos
   */
  @javax.annotation.Nullable
  public Integer getQos() {
    return qos;
  }

  public void setQos(Integer qos) {
    this.qos = qos;
  }


  public RetainedMessageSummary lastModifiedTime(Integer lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public Integer getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(Integer lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetainedMessageSummary retainedMessageSummary = (RetainedMessageSummary) o;
    return Objects.equals(this.topic, retainedMessageSummary.topic) &&
        Objects.equals(this.payloadSize, retainedMessageSummary.payloadSize) &&
        Objects.equals(this.qos, retainedMessageSummary.qos) &&
        Objects.equals(this.lastModifiedTime, retainedMessageSummary.lastModifiedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(topic, payloadSize, qos, lastModifiedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetainedMessageSummary {\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    payloadSize: ").append(toIndentedString(payloadSize)).append("\n");
    sb.append("    qos: ").append(toIndentedString(qos)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("topic");
    openapiFields.add("payloadSize");
    openapiFields.add("qos");
    openapiFields.add("lastModifiedTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RetainedMessageSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RetainedMessageSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetainedMessageSummary is not found in the empty JSON string", RetainedMessageSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RetainedMessageSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetainedMessageSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `topic`
      if (jsonObj.get("topic") != null && !jsonObj.get("topic").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("topic"));
      }
      // validate the optional field `payloadSize`
      if (jsonObj.get("payloadSize") != null && !jsonObj.get("payloadSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("payloadSize"));
      }
      // validate the optional field `qos`
      if (jsonObj.get("qos") != null && !jsonObj.get("qos").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("qos"));
      }
      // validate the optional field `lastModifiedTime`
      if (jsonObj.get("lastModifiedTime") != null && !jsonObj.get("lastModifiedTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastModifiedTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetainedMessageSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetainedMessageSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetainedMessageSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetainedMessageSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<RetainedMessageSummary>() {
           @Override
           public void write(JsonWriter out, RetainedMessageSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetainedMessageSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RetainedMessageSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RetainedMessageSummary
   * @throws IOException if the JSON string is invalid with respect to RetainedMessageSummary
   */
  public static RetainedMessageSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetainedMessageSummary.class);
  }

  /**
   * Convert an instance of RetainedMessageSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

