/**
 * AWS IoT Data Plane
 * <fullname>IoT data</fullname> <p>IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the Amazon Web Services cloud.</p> <p>Find the endpoint address for actions in IoT data by running this CLI command:</p> <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Amazon Web ServicesSignature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>
 *
 * The version of the OpenAPI document: 2015-05-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DeleteThingShadowResponse from './model/DeleteThingShadowResponse';
import GetRetainedMessageResponse from './model/GetRetainedMessageResponse';
import GetThingShadowResponse from './model/GetThingShadowResponse';
import ListNamedShadowsForThingResponse from './model/ListNamedShadowsForThingResponse';
import ListRetainedMessagesResponse from './model/ListRetainedMessagesResponse';
import PayloadFormatIndicator from './model/PayloadFormatIndicator';
import PublishRequest from './model/PublishRequest';
import RetainedMessageSummary from './model/RetainedMessageSummary';
import UpdateThingShadowRequest from './model/UpdateThingShadowRequest';
import UpdateThingShadowResponse from './model/UpdateThingShadowResponse';
import DefaultApi from './api/DefaultApi';


/**
* &lt;fullname&gt;IoT data&lt;/fullname&gt; &lt;p&gt;IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the Amazon Web Services cloud.&lt;/p&gt; &lt;p&gt;Find the endpoint address for actions in IoT data by running this CLI command:&lt;/p&gt; &lt;p&gt; &lt;code&gt;aws iot describe-endpoint --endpoint-type iot:Data-ATS&lt;/code&gt; &lt;/p&gt; &lt;p&gt;The service name used by &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\&quot;&gt;Amazon Web ServicesSignature Version 4&lt;/a&gt; to sign requests is: &lt;i&gt;iotdevicegateway&lt;/i&gt;.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsIoTDataPlane = require('index'); // See note below*.
* var xxxSvc = new AwsIoTDataPlane.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsIoTDataPlane.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsIoTDataPlane.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsIoTDataPlane.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2015-05-28
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DeleteThingShadowResponse model constructor.
     * @property {module:model/DeleteThingShadowResponse}
     */
    DeleteThingShadowResponse,

    /**
     * The GetRetainedMessageResponse model constructor.
     * @property {module:model/GetRetainedMessageResponse}
     */
    GetRetainedMessageResponse,

    /**
     * The GetThingShadowResponse model constructor.
     * @property {module:model/GetThingShadowResponse}
     */
    GetThingShadowResponse,

    /**
     * The ListNamedShadowsForThingResponse model constructor.
     * @property {module:model/ListNamedShadowsForThingResponse}
     */
    ListNamedShadowsForThingResponse,

    /**
     * The ListRetainedMessagesResponse model constructor.
     * @property {module:model/ListRetainedMessagesResponse}
     */
    ListRetainedMessagesResponse,

    /**
     * The PayloadFormatIndicator model constructor.
     * @property {module:model/PayloadFormatIndicator}
     */
    PayloadFormatIndicator,

    /**
     * The PublishRequest model constructor.
     * @property {module:model/PublishRequest}
     */
    PublishRequest,

    /**
     * The RetainedMessageSummary model constructor.
     * @property {module:model/RetainedMessageSummary}
     */
    RetainedMessageSummary,

    /**
     * The UpdateThingShadowRequest model constructor.
     * @property {module:model/UpdateThingShadowRequest}
     */
    UpdateThingShadowRequest,

    /**
     * The UpdateThingShadowResponse model constructor.
     * @property {module:model/UpdateThingShadowResponse}
     */
    UpdateThingShadowResponse,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
