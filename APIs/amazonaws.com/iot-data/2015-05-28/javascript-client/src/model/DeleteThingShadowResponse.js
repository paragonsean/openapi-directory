/**
 * AWS IoT Data Plane
 * <fullname>IoT data</fullname> <p>IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the Amazon Web Services cloud.</p> <p>Find the endpoint address for actions in IoT data by running this CLI command:</p> <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Amazon Web ServicesSignature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>
 *
 * The version of the OpenAPI document: 2015-05-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteThingShadowResponse model module.
 * @module model/DeleteThingShadowResponse
 * @version 2015-05-28
 */
class DeleteThingShadowResponse {
    /**
     * Constructs a new <code>DeleteThingShadowResponse</code>.
     * The output from the DeleteThingShadow operation.
     * @alias module:model/DeleteThingShadowResponse
     * @param payload {String} 
     */
    constructor(payload) { 
        
        DeleteThingShadowResponse.initialize(this, payload);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, payload) { 
        obj['payload'] = payload;
    }

    /**
     * Constructs a <code>DeleteThingShadowResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteThingShadowResponse} obj Optional instance to populate.
     * @return {module:model/DeleteThingShadowResponse} The populated <code>DeleteThingShadowResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteThingShadowResponse();

            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteThingShadowResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteThingShadowResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteThingShadowResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `payload`
        if (data['payload']) { // data not null
          String.validateJSON(data['payload']);
        }

        return true;
    }


}

DeleteThingShadowResponse.RequiredProperties = ["payload"];

/**
 * @member {String} payload
 */
DeleteThingShadowResponse.prototype['payload'] = undefined;






export default DeleteThingShadowResponse;

