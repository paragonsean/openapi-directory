/*
 * AWS Elemental MediaStore Data Plane
 * An AWS Elemental MediaStore asset is an object, similar to an object in the Amazon S3 service. Objects are the fundamental entities that are stored in AWS Elemental MediaStore.
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetObjectResponse;
import org.openapitools.client.model.ListItemsResponse;
import org.openapitools.client.model.PutObjectRequest;
import org.openapitools.client.model.PutObjectResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Deletes an object at the specified path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteObjectTest() throws ApiException {
        String path = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteObject(path, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the headers for an object at the specified path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeObjectTest() throws ApiException {
        String path = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.describeObject(path, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Downloads the object at the specified path. If the object’s upload availability is set to &lt;code&gt;streaming&lt;/code&gt;, AWS Elemental MediaStore downloads the object even if it’s still uploading the object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getObjectTest() throws ApiException {
        String path = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String range = null;
        GetObjectResponse response = api.getObject(path, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, range);
        // TODO: test validations
    }

    /**
     * Provides a list of metadata entries about folders and objects in the specified folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listItemsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String path = null;
        Integer maxResults = null;
        String nextToken = null;
        ListItemsResponse response = api.listItems(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, path, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Uploads an object to the specified path. Object sizes are limited to 25 MB for standard upload availability and 10 MB for streaming upload availability.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putObjectTest() throws ApiException {
        String path = null;
        PutObjectRequest putObjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String contentType = null;
        String cacheControl = null;
        String xAmzStorageClass = null;
        String xAmzUploadAvailability = null;
        PutObjectResponse response = api.putObject(path, putObjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, contentType, cacheControl, xAmzStorageClass, xAmzUploadAvailability);
        // TODO: test validations
    }

}
