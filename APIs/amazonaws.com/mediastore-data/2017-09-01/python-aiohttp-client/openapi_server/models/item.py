# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.item_type import ItemType
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, type: ItemType=None, e_tag: str=None, last_modified: datetime=None, content_type: str=None, content_length: int=None):
        """Item - a model defined in OpenAPI

        :param name: The name of this Item.
        :param type: The type of this Item.
        :param e_tag: The e_tag of this Item.
        :param last_modified: The last_modified of this Item.
        :param content_type: The content_type of this Item.
        :param content_length: The content_length of this Item.
        """
        self.openapi_types = {
            'name': str,
            'type': ItemType,
            'e_tag': str,
            'last_modified': datetime,
            'content_type': str,
            'content_length': int
        }

        self.attribute_map = {
            'name': 'Name',
            'type': 'Type',
            'e_tag': 'ETag',
            'last_modified': 'LastModified',
            'content_type': 'ContentType',
            'content_length': 'ContentLength'
        }

        self._name = name
        self._type = type
        self._e_tag = e_tag
        self._last_modified = last_modified
        self._content_type = content_type
        self._content_length = content_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item of this Item.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Item.


        :return: The name of this Item.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Item.


        :param name: The name of this Item.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this Item.


        :return: The type of this Item.
        :rtype: ItemType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Item.


        :param type: The type of this Item.
        :type type: ItemType
        """

        self._type = type

    @property
    def e_tag(self):
        """Gets the e_tag of this Item.


        :return: The e_tag of this Item.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this Item.


        :param e_tag: The e_tag of this Item.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def last_modified(self):
        """Gets the last_modified of this Item.


        :return: The last_modified of this Item.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this Item.


        :param last_modified: The last_modified of this Item.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def content_type(self):
        """Gets the content_type of this Item.


        :return: The content_type of this Item.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this Item.


        :param content_type: The content_type of this Item.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def content_length(self):
        """Gets the content_length of this Item.


        :return: The content_length of this Item.
        :rtype: int
        """
        return self._content_length

    @content_length.setter
    def content_length(self, content_length):
        """Sets the content_length of this Item.


        :param content_length: The content_length of this Item.
        :type content_length: int
        """

        self._content_length = content_length
