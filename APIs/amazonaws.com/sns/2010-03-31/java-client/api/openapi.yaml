openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Simple Notification Service</fullname> <p>Amazon\
    \ Simple Notification Service (Amazon SNS) is a web service that enables you to\
    \ build distributed web-enabled applications. Applications can use Amazon SNS\
    \ to easily push real-time notification messages to interested subscribers over\
    \ multiple delivery protocols. For more information about this product see the\
    \ <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed\
    \ information about Amazon SNS features and their associated API calls, see the\
    \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer\
    \ Guide</a>. </p> <p>For information on the permissions you need to use this API,\
    \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\"\
    >Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer\
    \ Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS\
    \ from your preferred programming language. The SDKs contain functionality that\
    \ automatically takes care of tasks such as: cryptographically signing your service\
    \ requests, retrying requests, and handling error responses. For a list of available\
    \ SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.\
    \ </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Simple Notification Service
  version: 2010-03-31
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sns
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sns-2010-03-31.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sns/
servers:
- description: The Amazon SNS multi-region endpoint
  url: "http://sns.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SNS multi-region endpoint
  url: "https://sns.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SNS endpoint for China (Beijing) and China (Ningxia)
  url: "http://sns.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon SNS endpoint for China (Beijing) and China (Ningxia)
  url: "https://sns.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#Action=AddPermission:
    get:
      description: "<p>Adds a statement to a topic's access control policy, granting\
        \ access for the specified Amazon Web Services accounts to the specified actions.</p>\
        \ <note> <p>To remove the ability to change topic permissions, you must deny\
        \ permissions to the <code>AddPermission</code>, <code>RemovePermission</code>,\
        \ and <code>SetTopicAttributes</code> actions in your IAM policy.</p> </note>"
      operationId: GET_AddPermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic whose access control policy you wish to
          modify.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: A unique identifier for the new policy statement.
        explode: true
        in: query
        name: Label
        required: true
        schema:
          type: string
        style: form
      - description: "The Amazon Web Services account IDs of the users (principals)\
          \ who will be given access to the specified actions. The users must have\
          \ Amazon Web Services account, but do not need to be signed up for this\
          \ service."
        explode: true
        in: query
        name: AWSAccountId
        required: true
        schema:
          items:
            $ref: '#/components/schemas/delegate'
          type: array
        style: form
      - description: "<p>The action you want to allow for the specified principal(s).</p>\
          \ <p>Valid values: Any Amazon SNS action name, for example <code>Publish</code>.</p>"
        explode: true
        in: query
        name: ActionName
        required: true
        schema:
          items:
            $ref: '#/components/schemas/action'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddPermission
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: AddPermission
      x-accepts:
      - text/xml
    post:
      description: "<p>Adds a statement to a topic's access control policy, granting\
        \ access for the specified Amazon Web Services accounts to the specified actions.</p>\
        \ <note> <p>To remove the ability to change topic permissions, you must deny\
        \ permissions to the <code>AddPermission</code>, <code>RemovePermission</code>,\
        \ and <code>SetTopicAttributes</code> actions in your IAM policy.</p> </note>"
      operationId: POST_AddPermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddPermission
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddPermissionInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: AddPermission
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CheckIfPhoneNumberIsOptedOut:
    get:
      description: "<p>Accepts a phone number and indicates whether the phone holder\
        \ has opted out of receiving SMS messages from your Amazon Web Services account.\
        \ You cannot send SMS messages to a number that is opted out.</p> <p>To resume\
        \ sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code>\
        \ action.</p>"
      operationId: GET_CheckIfPhoneNumberIsOptedOut
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The phone number for which you want to check the opt out status.
        explode: true
        in: query
        name: phoneNumber
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CheckIfPhoneNumberIsOptedOut
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: CheckIfPhoneNumberIsOptedOut
      x-accepts:
      - text/xml
    post:
      description: "<p>Accepts a phone number and indicates whether the phone holder\
        \ has opted out of receiving SMS messages from your Amazon Web Services account.\
        \ You cannot send SMS messages to a number that is opted out.</p> <p>To resume\
        \ sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code>\
        \ action.</p>"
      operationId: POST_CheckIfPhoneNumberIsOptedOut
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CheckIfPhoneNumberIsOptedOut
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: CheckIfPhoneNumberIsOptedOut
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ConfirmSubscription:
    get:
      description: "Verifies an endpoint owner's intent to receive messages by validating\
        \ the token sent to the endpoint by an earlier <code>Subscribe</code> action.\
        \ If the token is valid, the action creates a new subscription and returns\
        \ its Amazon Resource Name (ARN). This call requires an AWS signature only\
        \ when the <code>AuthenticateOnUnsubscribe</code> flag is set to \"true\"."
      operationId: GET_ConfirmSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic for which you wish to confirm a subscription.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: Short-lived token sent to an endpoint during the <code>Subscribe</code>
          action.
        explode: true
        in: query
        name: Token
        required: true
        schema:
          type: string
        style: form
      - description: "Disallows unauthenticated unsubscribes of the subscription.\
          \ If the value of this parameter is <code>true</code> and the request has\
          \ an Amazon Web Services signature, then only the topic owner and the subscription\
          \ owner can unsubscribe the endpoint. The unsubscribe action requires Amazon\
          \ Web Services authentication. "
        explode: true
        in: query
        name: AuthenticateOnUnsubscribe
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ConfirmSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfirmSubscriptionResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionLimitExceededException'
          description: SubscriptionLimitExceededException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterPolicyLimitExceededException'
          description: FilterPolicyLimitExceededException
      x-aws-operation-name: ConfirmSubscription
      x-accepts:
      - text/xml
    post:
      description: "Verifies an endpoint owner's intent to receive messages by validating\
        \ the token sent to the endpoint by an earlier <code>Subscribe</code> action.\
        \ If the token is valid, the action creates a new subscription and returns\
        \ its Amazon Resource Name (ARN). This call requires an AWS signature only\
        \ when the <code>AuthenticateOnUnsubscribe</code> flag is set to \"true\"."
      operationId: POST_ConfirmSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ConfirmSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ConfirmSubscriptionInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConfirmSubscriptionResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionLimitExceededException'
          description: SubscriptionLimitExceededException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterPolicyLimitExceededException'
          description: FilterPolicyLimitExceededException
      x-aws-operation-name: ConfirmSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreatePlatformApplication:
    get:
      description: "<p>Creates a platform application object for one of the supported\
        \ push notification services, such as APNS and GCM (Firebase Cloud Messaging),\
        \ to which devices and mobile apps may register. You must specify <code>PlatformPrincipal</code>\
        \ and <code>PlatformCredential</code> attributes when using the <code>CreatePlatformApplication</code>\
        \ action.</p> <p> <code>PlatformPrincipal</code> and <code>PlatformCredential</code>\
        \ are received from the notification service.</p> <ul> <li> <p>For <code>ADM</code>,\
        \ <code>PlatformPrincipal</code> is <code>client id</code> and <code>PlatformCredential</code>\
        \ is <code>client secret</code>.</p> </li> <li> <p>For <code>Baidu</code>,\
        \ <code>PlatformPrincipal</code> is <code>API key</code> and <code>PlatformCredential</code>\
        \ is <code>secret key</code>.</p> </li> <li> <p>For <code>APNS</code> and\
        \ <code>APNS_SANDBOX</code> using certificate credentials, <code>PlatformPrincipal</code>\
        \ is <code>SSL certificate</code> and <code>PlatformCredential</code> is <code>private\
        \ key</code>.</p> </li> <li> <p>For <code>APNS</code> and <code>APNS_SANDBOX</code>\
        \ using token credentials, <code>PlatformPrincipal</code> is <code>signing\
        \ key ID</code> and <code>PlatformCredential</code> is <code>signing key</code>.</p>\
        \ </li> <li> <p>For <code>GCM</code> (Firebase Cloud Messaging), there is\
        \ no <code>PlatformPrincipal</code> and the <code>PlatformCredential</code>\
        \ is <code>API key</code>.</p> </li> <li> <p>For <code>MPNS</code>, <code>PlatformPrincipal</code>\
        \ is <code>TLS certificate</code> and <code>PlatformCredential</code> is <code>private\
        \ key</code>.</p> </li> <li> <p>For <code>WNS</code>, <code>PlatformPrincipal</code>\
        \ is <code>Package Security Identifier</code> and <code>PlatformCredential</code>\
        \ is <code>secret key</code>.</p> </li> </ul> <p>You can use the returned\
        \ <code>PlatformApplicationArn</code> as an attribute for the <code>CreatePlatformEndpoint</code>\
        \ action.</p>"
      operationId: GET_CreatePlatformApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Application names must be made up of only uppercase and lowercase\
          \ ASCII letters, numbers, underscores, hyphens, and periods, and must be\
          \ between 1 and 256 characters long."
        explode: true
        in: query
        name: Name
        required: true
        schema:
          type: string
        style: form
      - description: "The following platforms are supported: ADM (Amazon Device Messaging),\
          \ APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Firebase\
          \ Cloud Messaging)."
        explode: true
        in: query
        name: Platform
        required: true
        schema:
          type: string
        style: form
      - description: "For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\"\
          >SetPlatformApplicationAttributes</a>."
        explode: true
        in: query
        name: Attributes
        required: true
        schema:
          additionalProperties:
            $ref: '#/components/schemas/String'
          type: object
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreatePlatformApplication
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePlatformApplicationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: CreatePlatformApplication
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a platform application object for one of the supported\
        \ push notification services, such as APNS and GCM (Firebase Cloud Messaging),\
        \ to which devices and mobile apps may register. You must specify <code>PlatformPrincipal</code>\
        \ and <code>PlatformCredential</code> attributes when using the <code>CreatePlatformApplication</code>\
        \ action.</p> <p> <code>PlatformPrincipal</code> and <code>PlatformCredential</code>\
        \ are received from the notification service.</p> <ul> <li> <p>For <code>ADM</code>,\
        \ <code>PlatformPrincipal</code> is <code>client id</code> and <code>PlatformCredential</code>\
        \ is <code>client secret</code>.</p> </li> <li> <p>For <code>Baidu</code>,\
        \ <code>PlatformPrincipal</code> is <code>API key</code> and <code>PlatformCredential</code>\
        \ is <code>secret key</code>.</p> </li> <li> <p>For <code>APNS</code> and\
        \ <code>APNS_SANDBOX</code> using certificate credentials, <code>PlatformPrincipal</code>\
        \ is <code>SSL certificate</code> and <code>PlatformCredential</code> is <code>private\
        \ key</code>.</p> </li> <li> <p>For <code>APNS</code> and <code>APNS_SANDBOX</code>\
        \ using token credentials, <code>PlatformPrincipal</code> is <code>signing\
        \ key ID</code> and <code>PlatformCredential</code> is <code>signing key</code>.</p>\
        \ </li> <li> <p>For <code>GCM</code> (Firebase Cloud Messaging), there is\
        \ no <code>PlatformPrincipal</code> and the <code>PlatformCredential</code>\
        \ is <code>API key</code>.</p> </li> <li> <p>For <code>MPNS</code>, <code>PlatformPrincipal</code>\
        \ is <code>TLS certificate</code> and <code>PlatformCredential</code> is <code>private\
        \ key</code>.</p> </li> <li> <p>For <code>WNS</code>, <code>PlatformPrincipal</code>\
        \ is <code>Package Security Identifier</code> and <code>PlatformCredential</code>\
        \ is <code>secret key</code>.</p> </li> </ul> <p>You can use the returned\
        \ <code>PlatformApplicationArn</code> as an attribute for the <code>CreatePlatformEndpoint</code>\
        \ action.</p>"
      operationId: POST_CreatePlatformApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreatePlatformApplication
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePlatformApplicationInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePlatformApplicationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: CreatePlatformApplication
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreatePlatformEndpoint:
    get:
      description: "<p>Creates an endpoint for a device and mobile app on one of the\
        \ supported push notification services, such as GCM (Firebase Cloud Messaging)\
        \ and APNS. <code>CreatePlatformEndpoint</code> requires the <code>PlatformApplicationArn</code>\
        \ that is returned from <code>CreatePlatformApplication</code>. You can use\
        \ the returned <code>EndpointArn</code> to send a message to a mobile app\
        \ or by the <code>Subscribe</code> action for subscription to a topic. The\
        \ <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester\
        \ already owns an endpoint with the same device token and attributes, that\
        \ endpoint's ARN is returned without creating a new endpoint. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code>\
        \ with Baidu, two attributes must be provided: ChannelId and UserId. The token\
        \ field must also contain the ChannelId. For more information, see <a href=\"\
        https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\"\
        >Creating an Amazon SNS Endpoint for Baidu</a>. </p>"
      operationId: GET_CreatePlatformEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: PlatformApplicationArn returned from CreatePlatformApplication
          is used to create a an endpoint.
        explode: true
        in: query
        name: PlatformApplicationArn
        required: true
        schema:
          type: string
        style: form
      - description: "Unique identifier created by the notification service for an\
          \ app on a device. The specific name for Token will vary, depending on which\
          \ notification service is being used. For example, when using APNS as the\
          \ notification service, you need the device token. Alternatively, when using\
          \ GCM (Firebase Cloud Messaging) or ADM, the device token equivalent is\
          \ called the registration ID."
        explode: true
        in: query
        name: Token
        required: true
        schema:
          type: string
        style: form
      - description: Arbitrary user data to associate with the endpoint. Amazon SNS
          does not use this data. The data must be in UTF-8 format and less than 2KB.
        explode: true
        in: query
        name: CustomUserData
        required: false
        schema:
          type: string
        style: form
      - description: "For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\"\
          >SetEndpointAttributes</a>."
        explode: true
        in: query
        name: Attributes
        required: false
        schema:
          additionalProperties:
            $ref: '#/components/schemas/String'
          type: object
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreatePlatformEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEndpointResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: CreatePlatformEndpoint
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates an endpoint for a device and mobile app on one of the\
        \ supported push notification services, such as GCM (Firebase Cloud Messaging)\
        \ and APNS. <code>CreatePlatformEndpoint</code> requires the <code>PlatformApplicationArn</code>\
        \ that is returned from <code>CreatePlatformApplication</code>. You can use\
        \ the returned <code>EndpointArn</code> to send a message to a mobile app\
        \ or by the <code>Subscribe</code> action for subscription to a topic. The\
        \ <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester\
        \ already owns an endpoint with the same device token and attributes, that\
        \ endpoint's ARN is returned without creating a new endpoint. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code>\
        \ with Baidu, two attributes must be provided: ChannelId and UserId. The token\
        \ field must also contain the ChannelId. For more information, see <a href=\"\
        https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\"\
        >Creating an Amazon SNS Endpoint for Baidu</a>. </p>"
      operationId: POST_CreatePlatformEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreatePlatformEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePlatformEndpointInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEndpointResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: CreatePlatformEndpoint
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateSMSSandboxPhoneNumber:
    get:
      description: "<p>Adds a destination phone number to an Amazon Web Services account\
        \ in the SMS sandbox and sends a one-time password (OTP) to that phone number.</p>\
        \ <p>When you start using Amazon SNS to send SMS messages, your Amazon Web\
        \ Services account is in the <i>SMS sandbox</i>. The SMS sandbox provides\
        \ a safe environment for you to try Amazon SNS features without risking your\
        \ reputation as an SMS sender. While your Amazon Web Services account is in\
        \ the SMS sandbox, you can use all of the features of Amazon SNS. However,\
        \ you can send SMS messages only to verified destination phone numbers. For\
        \ more information, including how to move out of the sandbox to send messages\
        \ without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: GET_CreateSMSSandboxPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The destination phone number to verify. On verification, Amazon\
          \ SNS adds this phone number to the list of verified phone numbers that\
          \ you can send SMS messages to."
        explode: true
        in: query
        name: PhoneNumber
        required: true
        schema:
          maxLength: 20
          pattern: "^(\\+[0-9]{8,}|[0-9]{0,9})$"
          type: string
        style: form
      - description: The language to use for sending the OTP. The default value is
          <code>en-US</code>.
        explode: true
        in: query
        name: LanguageCode
        required: false
        schema:
          description: Supported language code for sending OTP message
          enum:
          - en-US
          - en-GB
          - es-419
          - es-ES
          - de-DE
          - fr-CA
          - fr-FR
          - it-IT
          - ja-JP
          - pt-BR
          - kr-KR
          - zh-CN
          - zh-TW
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateSMSSandboxPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSMSSandboxPhoneNumberResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptedOutException'
          description: OptedOutException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserErrorException'
          description: UserErrorException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: CreateSMSSandboxPhoneNumber
      x-accepts:
      - text/xml
    post:
      description: "<p>Adds a destination phone number to an Amazon Web Services account\
        \ in the SMS sandbox and sends a one-time password (OTP) to that phone number.</p>\
        \ <p>When you start using Amazon SNS to send SMS messages, your Amazon Web\
        \ Services account is in the <i>SMS sandbox</i>. The SMS sandbox provides\
        \ a safe environment for you to try Amazon SNS features without risking your\
        \ reputation as an SMS sender. While your Amazon Web Services account is in\
        \ the SMS sandbox, you can use all of the features of Amazon SNS. However,\
        \ you can send SMS messages only to verified destination phone numbers. For\
        \ more information, including how to move out of the sandbox to send messages\
        \ without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: POST_CreateSMSSandboxPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateSMSSandboxPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSMSSandboxPhoneNumberInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateSMSSandboxPhoneNumberResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptedOutException'
          description: OptedOutException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserErrorException'
          description: UserErrorException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: CreateSMSSandboxPhoneNumber
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateTopic:
    get:
      description: "Creates a topic to which notifications can be published. Users\
        \ can create at most 100,000 standard topics (at most 1,000 FIFO topics).\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html\"\
        >Creating an Amazon SNS topic</a> in the <i>Amazon SNS Developer Guide</i>.\
        \ This action is idempotent, so if the requester already owns a topic with\
        \ the specified name, that topic's ARN is returned without creating a new\
        \ topic."
      operationId: GET_CreateTopic
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the topic you want to create.</p> <p>Constraints:\
          \ Topic names must be made up of only uppercase and lowercase ASCII letters,\
          \ numbers, underscores, and hyphens, and must be between 1 and 256 characters\
          \ long.</p> <p>For a FIFO (first-in-first-out) topic, the name must end\
          \ with the <code>.fifo</code> suffix. </p>"
        explode: true
        in: query
        name: Name
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A map of attributes with their corresponding values.</p>\
          \ <p>The following lists the names, descriptions, and values of the special\
          \ request parameters that the <code>CreateTopic</code> action uses:</p>\
          \ <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that defines how\
          \ Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li>\
          \ <p> <code>DisplayName</code> – The display name to use for a topic with\
          \ SMS subscriptions.</p> </li> <li> <p> <code>FifoTopic</code> – Set to\
          \ true to create a FIFO topic.</p> </li> <li> <p> <code>Policy</code> –\
          \ The policy that defines who can access your topic. By default, only the\
          \ topic owner can publish or subscribe to the topic.</p> </li> <li> <p>\
          \ <code>SignatureVersion</code> – The signature version corresponds to the\
          \ hashing algorithm used while creating the signature of the notifications,\
          \ subscription confirmations, or unsubscribe confirmation messages sent\
          \ by Amazon SNS. By default, <code>SignatureVersion</code> is set to <code>1</code>.</p>\
          \ </li> <li> <p> <code>TracingConfig</code> – Tracing mode of an Amazon\
          \ SNS topic. By default <code>TracingConfig</code> is set to <code>PassThrough</code>,\
          \ and the topic passes through the tracing header it receives from an Amazon\
          \ SNS publisher to its subscriptions. If set to <code>Active</code>, Amazon\
          \ SNS will vend X-Ray segment data to topic owner account if the sampled\
          \ flag in the tracing header is true. This is only supported on standard\
          \ topics.</p> </li> </ul> <p>The following attribute applies only to <a\
          \ href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\"\
          >server-side encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code>\
          \ – The ID of an Amazon Web Services managed customer master key (CMK) for\
          \ Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\"\
          >Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
          >KeyId</a> in the <i>Key Management Service API Reference</i>. </p> </li>\
          \ </ul> <p>The following attributes apply only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\"\
          >FIFO topics</a>:</p> <ul> <li> <p> <code>FifoTopic</code> – When this is\
          \ set to <code>true</code>, a FIFO topic is created.</p> </li> <li> <p>\
          \ <code>ContentBasedDeduplication</code> – Enables content-based deduplication\
          \ for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code>\
          \ is set to <code>false</code>. If you create a FIFO topic and this attribute\
          \ is <code>false</code>, you must specify a value for the <code>MessageDeduplicationId</code>\
          \ parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\"\
          >Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code>\
          \ to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code>\
          \ using the body of the message (but not the attributes of the message).</p>\
          \ <p>(Optional) To override the generated value, you can specify a value\
          \ for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code>\
          \ action.</p> </li> </ul> </li> </ul>"
        explode: true
        in: query
        name: Attributes
        required: false
        schema:
          additionalProperties:
            $ref: '#/components/schemas/attributeValue'
          type: object
        style: form
      - description: "<p>The list of tags to add to a new topic.</p> <note> <p>To\
          \ be able to tag a topic on creation, you must have the <code>sns:CreateTopic</code>\
          \ and <code>sns:TagResource</code> permissions.</p> </note>"
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        style: form
      - description: "<p>The body of the policy document you want to use for this\
          \ topic.</p> <p>You can only add one policy per topic.</p> <p>The policy\
          \ must be in JSON string format.</p> <p>Length Constraints: Maximum length\
          \ of 30,720.</p>"
        explode: true
        in: query
        name: DataProtectionPolicy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateTopic
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTopicResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TopicLimitExceededException'
          description: TopicLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: CreateTopic
      x-accepts:
      - text/xml
    post:
      description: "Creates a topic to which notifications can be published. Users\
        \ can create at most 100,000 standard topics (at most 1,000 FIFO topics).\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html\"\
        >Creating an Amazon SNS topic</a> in the <i>Amazon SNS Developer Guide</i>.\
        \ This action is idempotent, so if the requester already owns a topic with\
        \ the specified name, that topic's ARN is returned without creating a new\
        \ topic."
      operationId: POST_CreateTopic
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateTopic
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTopicInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTopicResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TopicLimitExceededException'
          description: TopicLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: CreateTopic
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteEndpoint:
    get:
      description: "<p>Deletes the endpoint for a device and mobile app from Amazon\
        \ SNS. This action is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an\
        \ endpoint that is also subscribed to a topic, then you must also unsubscribe\
        \ the endpoint from the topic.</p>"
      operationId: GET_DeleteEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: EndpointArn of endpoint to delete.
        explode: true
        in: query
        name: EndpointArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: DeleteEndpoint
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes the endpoint for a device and mobile app from Amazon\
        \ SNS. This action is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an\
        \ endpoint that is also subscribed to a topic, then you must also unsubscribe\
        \ the endpoint from the topic.</p>"
      operationId: POST_DeleteEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteEndpoint
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEndpointInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: DeleteEndpoint
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeletePlatformApplication:
    get:
      description: "Deletes a platform application object for one of the supported\
        \ push notification services, such as APNS and GCM (Firebase Cloud Messaging).\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: GET_DeletePlatformApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: PlatformApplicationArn of platform application object to delete.
        explode: true
        in: query
        name: PlatformApplicationArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeletePlatformApplication
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: DeletePlatformApplication
      x-accepts:
      - text/xml
    post:
      description: "Deletes a platform application object for one of the supported\
        \ push notification services, such as APNS and GCM (Firebase Cloud Messaging).\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: POST_DeletePlatformApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeletePlatformApplication
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePlatformApplicationInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: DeletePlatformApplication
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteSMSSandboxPhoneNumber:
    get:
      description: "<p>Deletes an Amazon Web Services account's verified or pending\
        \ phone number from the SMS sandbox.</p> <p>When you start using Amazon SNS\
        \ to send SMS messages, your Amazon Web Services account is in the <i>SMS\
        \ sandbox</i>. The SMS sandbox provides a safe environment for you to try\
        \ Amazon SNS features without risking your reputation as an SMS sender. While\
        \ your Amazon Web Services account is in the SMS sandbox, you can use all\
        \ of the features of Amazon SNS. However, you can send SMS messages only to\
        \ verified destination phone numbers. For more information, including how\
        \ to move out of the sandbox to send messages without restrictions, see <a\
        \ href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: GET_DeleteSMSSandboxPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The destination phone number to delete.
        explode: true
        in: query
        name: PhoneNumber
        required: true
        schema:
          maxLength: 20
          pattern: "^(\\+[0-9]{8,}|[0-9]{0,9})$"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteSMSSandboxPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSMSSandboxPhoneNumberResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserErrorException'
          description: UserErrorException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: DeleteSMSSandboxPhoneNumber
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes an Amazon Web Services account's verified or pending\
        \ phone number from the SMS sandbox.</p> <p>When you start using Amazon SNS\
        \ to send SMS messages, your Amazon Web Services account is in the <i>SMS\
        \ sandbox</i>. The SMS sandbox provides a safe environment for you to try\
        \ Amazon SNS features without risking your reputation as an SMS sender. While\
        \ your Amazon Web Services account is in the SMS sandbox, you can use all\
        \ of the features of Amazon SNS. However, you can send SMS messages only to\
        \ verified destination phone numbers. For more information, including how\
        \ to move out of the sandbox to send messages without restrictions, see <a\
        \ href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: POST_DeleteSMSSandboxPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteSMSSandboxPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSMSSandboxPhoneNumberInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteSMSSandboxPhoneNumberResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UserErrorException'
          description: UserErrorException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: DeleteSMSSandboxPhoneNumber
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteTopic:
    get:
      description: "Deletes a topic and all its subscriptions. Deleting a topic might\
        \ prevent some messages previously sent to the topic from being delivered\
        \ to subscribers. This action is idempotent, so deleting a topic that does\
        \ not exist does not result in an error."
      operationId: GET_DeleteTopic
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic you want to delete.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteTopic
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: DeleteTopic
      x-accepts:
      - text/xml
    post:
      description: "Deletes a topic and all its subscriptions. Deleting a topic might\
        \ prevent some messages previously sent to the topic from being delivered\
        \ to subscribers. This action is idempotent, so deleting a topic that does\
        \ not exist does not result in an error."
      operationId: POST_DeleteTopic
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteTopic
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteTopicInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: DeleteTopic
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetDataProtectionPolicy:
    get:
      description: 'Retrieves the specified inline <code>DataProtectionPolicy</code>
        document that is stored in the specified Amazon SNS topic. '
      operationId: GET_GetDataProtectionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The ARN of the topic whose <code>DataProtectionPolicy</code>\
          \ you want to get.</p> <p>For more information about ARNs, see <a href=\"\
          https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs)</a> in the Amazon Web Services General Reference.</p>"
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetDataProtectionPolicy
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDataProtectionPolicyResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: GetDataProtectionPolicy
      x-accepts:
      - text/xml
    post:
      description: 'Retrieves the specified inline <code>DataProtectionPolicy</code>
        document that is stored in the specified Amazon SNS topic. '
      operationId: POST_GetDataProtectionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetDataProtectionPolicy
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetDataProtectionPolicyInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDataProtectionPolicyResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: GetDataProtectionPolicy
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetEndpointAttributes:
    get:
      description: "Retrieves the endpoint attributes for a device on one of the supported\
        \ push notification services, such as GCM (Firebase Cloud Messaging) and APNS.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: GET_GetEndpointAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: EndpointArn for GetEndpointAttributes input.
        explode: true
        in: query
        name: EndpointArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetEndpointAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetEndpointAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: GetEndpointAttributes
      x-accepts:
      - text/xml
    post:
      description: "Retrieves the endpoint attributes for a device on one of the supported\
        \ push notification services, such as GCM (Firebase Cloud Messaging) and APNS.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: POST_GetEndpointAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetEndpointAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetEndpointAttributesInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetEndpointAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: GetEndpointAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetPlatformApplicationAttributes:
    get:
      description: "Retrieves the attributes of the platform application object for\
        \ the supported push notification services, such as APNS and GCM (Firebase\
        \ Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: GET_GetPlatformApplicationAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: PlatformApplicationArn for GetPlatformApplicationAttributesInput.
        explode: true
        in: query
        name: PlatformApplicationArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetPlatformApplicationAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPlatformApplicationAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: GetPlatformApplicationAttributes
      x-accepts:
      - text/xml
    post:
      description: "Retrieves the attributes of the platform application object for\
        \ the supported push notification services, such as APNS and GCM (Firebase\
        \ Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: POST_GetPlatformApplicationAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetPlatformApplicationAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPlatformApplicationAttributesInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPlatformApplicationAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: GetPlatformApplicationAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetSMSAttributes:
    get:
      description: <p>Returns the settings for sending SMS messages from your Amazon
        Web Services account.</p> <p>These settings are set with the <code>SetSMSAttributes</code>
        action.</p>
      operationId: GET_GetSMSAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>A list of the individual attribute names, such as <code>MonthlySpendLimit</code>,\
          \ for which you want values.</p> <p>For all attribute names, see <a href=\"\
          https://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html\">SetSMSAttributes</a>.</p>\
          \ <p>If you don't use this parameter, Amazon SNS returns all SMS attributes.</p>"
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSMSAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSMSAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: GetSMSAttributes
      x-accepts:
      - text/xml
    post:
      description: <p>Returns the settings for sending SMS messages from your Amazon
        Web Services account.</p> <p>These settings are set with the <code>SetSMSAttributes</code>
        action.</p>
      operationId: POST_GetSMSAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSMSAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSMSAttributesInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSMSAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: GetSMSAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetSMSSandboxAccountStatus:
    get:
      description: "<p>Retrieves the SMS sandbox status for the calling Amazon Web\
        \ Services account in the target Amazon Web Services Region.</p> <p>When you\
        \ start using Amazon SNS to send SMS messages, your Amazon Web Services account\
        \ is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment\
        \ for you to try Amazon SNS features without risking your reputation as an\
        \ SMS sender. While your Amazon Web Services account is in the SMS sandbox,\
        \ you can use all of the features of Amazon SNS. However, you can send SMS\
        \ messages only to verified destination phone numbers. For more information,\
        \ including how to move out of the sandbox to send messages without restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: GET_GetSMSSandboxAccountStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSMSSandboxAccountStatus
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSMSSandboxAccountStatusResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: GetSMSSandboxAccountStatus
      x-accepts:
      - text/xml
    post:
      description: "<p>Retrieves the SMS sandbox status for the calling Amazon Web\
        \ Services account in the target Amazon Web Services Region.</p> <p>When you\
        \ start using Amazon SNS to send SMS messages, your Amazon Web Services account\
        \ is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment\
        \ for you to try Amazon SNS features without risking your reputation as an\
        \ SMS sender. While your Amazon Web Services account is in the SMS sandbox,\
        \ you can use all of the features of Amazon SNS. However, you can send SMS\
        \ messages only to verified destination phone numbers. For more information,\
        \ including how to move out of the sandbox to send messages without restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: POST_GetSMSSandboxAccountStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSMSSandboxAccountStatus
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSMSSandboxAccountStatusInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSMSSandboxAccountStatusResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: GetSMSSandboxAccountStatus
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetSubscriptionAttributes:
    get:
      description: Returns all of the properties of a subscription.
      operationId: GET_GetSubscriptionAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the subscription whose properties you want to get.
        explode: true
        in: query
        name: SubscriptionArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSubscriptionAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSubscriptionAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: GetSubscriptionAttributes
      x-accepts:
      - text/xml
    post:
      description: Returns all of the properties of a subscription.
      operationId: POST_GetSubscriptionAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetSubscriptionAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSubscriptionAttributesInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetSubscriptionAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: GetSubscriptionAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=GetTopicAttributes:
    get:
      description: Returns all of the properties of a topic. Topic properties returned
        might differ based on the authorization of the user.
      operationId: GET_GetTopicAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic whose properties you want to get.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetTopicAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTopicAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: GetTopicAttributes
      x-accepts:
      - text/xml
    post:
      description: Returns all of the properties of a topic. Topic properties returned
        might differ based on the authorization of the user.
      operationId: POST_GetTopicAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - GetTopicAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTopicAttributesInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTopicAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: GetTopicAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListEndpointsByPlatformApplication:
    get:
      description: "<p>Lists the endpoints and endpoint attributes for devices in\
        \ a supported push notification service, such as GCM (Firebase Cloud Messaging)\
        \ and APNS. The results for <code>ListEndpointsByPlatformApplication</code>\
        \ are paginated and return a limited list of endpoints, up to 100. If additional\
        \ records are available after the first page results, then a NextToken string\
        \ will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code>\
        \ again using the NextToken string received from the previous call. When there\
        \ are no more records to return, NextToken will be null. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled\
        \ at 30 transactions per second (TPS).</p>"
      operationId: GET_ListEndpointsByPlatformApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
          action.
        explode: true
        in: query
        name: PlatformApplicationArn
        required: true
        schema:
          type: string
        style: form
      - description: NextToken string is used when calling ListEndpointsByPlatformApplication
          action to retrieve additional records that are available after the first
          page results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListEndpointsByPlatformApplication
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListEndpointsByPlatformApplicationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: ListEndpointsByPlatformApplication
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists the endpoints and endpoint attributes for devices in\
        \ a supported push notification service, such as GCM (Firebase Cloud Messaging)\
        \ and APNS. The results for <code>ListEndpointsByPlatformApplication</code>\
        \ are paginated and return a limited list of endpoints, up to 100. If additional\
        \ records are available after the first page results, then a NextToken string\
        \ will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code>\
        \ again using the NextToken string received from the previous call. When there\
        \ are no more records to return, NextToken will be null. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled\
        \ at 30 transactions per second (TPS).</p>"
      operationId: POST_ListEndpointsByPlatformApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListEndpointsByPlatformApplication
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListEndpointsByPlatformApplicationInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListEndpointsByPlatformApplicationResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: ListEndpointsByPlatformApplication
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListOriginationNumbers:
    get:
      description: "Lists the calling Amazon Web Services account's dedicated origination\
        \ numbers and their metadata. For more information about origination numbers,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/channels-sms-originating-identities-origination-numbers.html\"\
        >Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>."
      operationId: GET_ListOriginationNumbers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Token that the previous <code>ListOriginationNumbers</code> request
          returns.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of origination numbers to return.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 30
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListOriginationNumbers
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOriginationNumbersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-aws-operation-name: ListOriginationNumbers
      x-accepts:
      - text/xml
    post:
      description: "Lists the calling Amazon Web Services account's dedicated origination\
        \ numbers and their metadata. For more information about origination numbers,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/channels-sms-originating-identities-origination-numbers.html\"\
        >Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>."
      operationId: POST_ListOriginationNumbers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListOriginationNumbers
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListOriginationNumbersRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOriginationNumbersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-aws-operation-name: ListOriginationNumbers
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListPhoneNumbersOptedOut:
    get:
      description: "<p>Returns a list of phone numbers that are opted out, meaning\
        \ you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code>\
        \ are paginated, and each page returns up to 100 phone numbers. If additional\
        \ phone numbers are available after the first page of results, then a <code>NextToken</code>\
        \ string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code>\
        \ again using the <code>NextToken</code> string received from the previous\
        \ call. When there are no more records to return, <code>NextToken</code> will\
        \ be null.</p>"
      operationId: GET_ListPhoneNumbersOptedOut
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A <code>NextToken</code> string is used when you call the <code>ListPhoneNumbersOptedOut</code>
          action to retrieve additional records that are available after the first
          page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListPhoneNumbersOptedOut
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPhoneNumbersOptedOutResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: ListPhoneNumbersOptedOut
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of phone numbers that are opted out, meaning\
        \ you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code>\
        \ are paginated, and each page returns up to 100 phone numbers. If additional\
        \ phone numbers are available after the first page of results, then a <code>NextToken</code>\
        \ string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code>\
        \ again using the <code>NextToken</code> string received from the previous\
        \ call. When there are no more records to return, <code>NextToken</code> will\
        \ be null.</p>"
      operationId: POST_ListPhoneNumbersOptedOut
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListPhoneNumbersOptedOut
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPhoneNumbersOptedOutInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPhoneNumbersOptedOutResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: ListPhoneNumbersOptedOut
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListPlatformApplications:
    get:
      description: "<p>Lists the platform application objects for the supported push\
        \ notification services, such as APNS and GCM (Firebase Cloud Messaging).\
        \ The results for <code>ListPlatformApplications</code> are paginated and\
        \ return a limited list of applications, up to 100. If additional records\
        \ are available after the first page results, then a NextToken string will\
        \ be returned. To receive the next page, you call <code>ListPlatformApplications</code>\
        \ using the NextToken string received from the previous call. When there are\
        \ no more records to return, <code>NextToken</code> will be null. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled\
        \ at 15 transactions per second (TPS).</p>"
      operationId: GET_ListPlatformApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: NextToken string is used when calling ListPlatformApplications
          action to retrieve additional records that are available after the first
          page results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListPlatformApplications
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPlatformApplicationsResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListPlatformApplications
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists the platform application objects for the supported push\
        \ notification services, such as APNS and GCM (Firebase Cloud Messaging).\
        \ The results for <code>ListPlatformApplications</code> are paginated and\
        \ return a limited list of applications, up to 100. If additional records\
        \ are available after the first page results, then a NextToken string will\
        \ be returned. To receive the next page, you call <code>ListPlatformApplications</code>\
        \ using the NextToken string received from the previous call. When there are\
        \ no more records to return, <code>NextToken</code> will be null. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled\
        \ at 15 transactions per second (TPS).</p>"
      operationId: POST_ListPlatformApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListPlatformApplications
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPlatformApplicationsInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPlatformApplicationsResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListPlatformApplications
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListSMSSandboxPhoneNumbers:
    get:
      description: "<p>Lists the calling Amazon Web Services account's current verified\
        \ and pending destination phone numbers in the SMS sandbox.</p> <p>When you\
        \ start using Amazon SNS to send SMS messages, your Amazon Web Services account\
        \ is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment\
        \ for you to try Amazon SNS features without risking your reputation as an\
        \ SMS sender. While your Amazon Web Services account is in the SMS sandbox,\
        \ you can use all of the features of Amazon SNS. However, you can send SMS\
        \ messages only to verified destination phone numbers. For more information,\
        \ including how to move out of the sandbox to send messages without restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: GET_ListSMSSandboxPhoneNumbers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Token that the previous <code>ListSMSSandboxPhoneNumbersInput</code>
          request returns.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of phone numbers to return.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListSMSSandboxPhoneNumbers
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSMSSandboxPhoneNumbersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: ListSMSSandboxPhoneNumbers
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists the calling Amazon Web Services account's current verified\
        \ and pending destination phone numbers in the SMS sandbox.</p> <p>When you\
        \ start using Amazon SNS to send SMS messages, your Amazon Web Services account\
        \ is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment\
        \ for you to try Amazon SNS features without risking your reputation as an\
        \ SMS sender. While your Amazon Web Services account is in the SMS sandbox,\
        \ you can use all of the features of Amazon SNS. However, you can send SMS\
        \ messages only to verified destination phone numbers. For more information,\
        \ including how to move out of the sandbox to send messages without restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: POST_ListSMSSandboxPhoneNumbers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListSMSSandboxPhoneNumbers
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSMSSandboxPhoneNumbersInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSMSSandboxPhoneNumbersResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: ListSMSSandboxPhoneNumbers
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListSubscriptions:
    get:
      description: "<p>Returns a list of the requester's subscriptions. Each call\
        \ returns a limited list of subscriptions, up to 100. If there are more subscriptions,\
        \ a <code>NextToken</code> is also returned. Use the <code>NextToken</code>\
        \ parameter in a new <code>ListSubscriptions</code> call to get further results.</p>\
        \ <p>This action is throttled at 30 transactions per second (TPS).</p>"
      operationId: GET_ListSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Token returned by the previous <code>ListSubscriptions</code>
          request.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListSubscriptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListSubscriptions
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of the requester's subscriptions. Each call\
        \ returns a limited list of subscriptions, up to 100. If there are more subscriptions,\
        \ a <code>NextToken</code> is also returned. Use the <code>NextToken</code>\
        \ parameter in a new <code>ListSubscriptions</code> call to get further results.</p>\
        \ <p>This action is throttled at 30 transactions per second (TPS).</p>"
      operationId: POST_ListSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListSubscriptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSubscriptionsInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListSubscriptions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListSubscriptionsByTopic:
    get:
      description: "<p>Returns a list of the subscriptions to a specific topic. Each\
        \ call returns a limited list of subscriptions, up to 100. If there are more\
        \ subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code>\
        \ parameter in a new <code>ListSubscriptionsByTopic</code> call to get further\
        \ results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>"
      operationId: GET_ListSubscriptionsByTopic
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic for which you wish to find subscriptions.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: Token returned by the previous <code>ListSubscriptionsByTopic</code>
          request.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListSubscriptionsByTopic
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsByTopicResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListSubscriptionsByTopic
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of the subscriptions to a specific topic. Each\
        \ call returns a limited list of subscriptions, up to 100. If there are more\
        \ subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code>\
        \ parameter in a new <code>ListSubscriptionsByTopic</code> call to get further\
        \ results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>"
      operationId: POST_ListSubscriptionsByTopic
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListSubscriptionsByTopic
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSubscriptionsByTopicInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsByTopicResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListSubscriptionsByTopic
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListTagsForResource:
    get:
      description: "List all tags added to the specified Amazon SNS topic. For an\
        \ overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\"\
        >Amazon SNS Tags</a> in the <i>Amazon Simple Notification Service Developer\
        \ Guide</i>."
      operationId: GET_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic for which to list tags.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: ListTagsForResource
      x-accepts:
      - text/xml
    post:
      description: "List all tags added to the specified Amazon SNS topic. For an\
        \ overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\"\
        >Amazon SNS Tags</a> in the <i>Amazon Simple Notification Service Developer\
        \ Guide</i>."
      operationId: POST_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: ListTagsForResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListTopics:
    get:
      description: "<p>Returns a list of the requester's topics. Each call returns\
        \ a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code>\
        \ is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code>\
        \ call to get further results.</p> <p>This action is throttled at 30 transactions\
        \ per second (TPS).</p>"
      operationId: GET_ListTopics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Token returned by the previous <code>ListTopics</code> request.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTopics
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListTopics
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of the requester's topics. Each call returns\
        \ a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code>\
        \ is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code>\
        \ call to get further results.</p> <p>This action is throttled at 30 transactions\
        \ per second (TPS).</p>"
      operationId: POST_ListTopics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTopics
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTopicsInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: ListTopics
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=OptInPhoneNumber:
    get:
      description: "<p>Use this request to opt in a phone number that is opted out,\
        \ which enables you to resume sending SMS messages to the number.</p> <p>You\
        \ can opt in a phone number only once every 30 days.</p>"
      operationId: GET_OptInPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The phone number to opt in. Use E.164 format.
        explode: true
        in: query
        name: phoneNumber
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - OptInPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptInPhoneNumberResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: OptInPhoneNumber
      x-accepts:
      - text/xml
    post:
      description: "<p>Use this request to opt in a phone number that is opted out,\
        \ which enables you to resume sending SMS messages to the number.</p> <p>You\
        \ can opt in a phone number only once every 30 days.</p>"
      operationId: POST_OptInPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - OptInPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/OptInPhoneNumberInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OptInPhoneNumberResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-aws-operation-name: OptInPhoneNumber
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=Publish:
    get:
      description: "<p>Sends a message to an Amazon SNS topic, a text message (SMS\
        \ message) directly to a phone number, or a message to a mobile platform endpoint\
        \ (when you specify the <code>TargetArn</code>).</p> <p>If you send a message\
        \ to a topic, Amazon SNS delivers the message to each endpoint that is subscribed\
        \ to the topic. The format of the message depends on the notification protocol\
        \ for each subscribed endpoint.</p> <p>When a <code>messageId</code> is returned,\
        \ the message is saved and Amazon SNS immediately delivers it to subscribers.</p>\
        \ <p>To use the <code>Publish</code> action for publishing a message to a\
        \ mobile endpoint, such as an app on a Kindle device or mobile phone, you\
        \ must specify the EndpointArn for the TargetArn parameter. The EndpointArn\
        \ is returned when making a call with the <code>CreatePlatformEndpoint</code>\
        \ action. </p> <p>For more information about formatting messages, see <a href=\"\
        https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html\"\
        >Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>.\
        \ </p> <important> <p>You can publish messages only to topics and endpoints\
        \ in the same Amazon Web Services Region.</p> </important>"
      operationId: GET_Publish
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The topic you want to publish to.</p> <p>If you don't specify\
          \ a value for the <code>TopicArn</code> parameter, you must specify a value\
          \ for the <code>PhoneNumber</code> or <code>TargetArn</code> parameters.</p>"
        explode: true
        in: query
        name: TopicArn
        required: false
        schema:
          type: string
        style: form
      - description: "If you don't specify a value for the <code>TargetArn</code>\
          \ parameter, you must specify a value for the <code>PhoneNumber</code> or\
          \ <code>TopicArn</code> parameters."
        explode: true
        in: query
        name: TargetArn
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The phone number to which you want to deliver an SMS message.\
          \ Use E.164 format.</p> <p>If you don't specify a value for the <code>PhoneNumber</code>\
          \ parameter, you must specify a value for the <code>TargetArn</code> or\
          \ <code>TopicArn</code> parameters.</p>"
        explode: true
        in: query
        name: PhoneNumber
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The message you want to send.</p> <p>If you are publishing\
          \ to a topic and you want to send the same message to all transport protocols,\
          \ include the text of the message as a String value. If you want to send\
          \ different messages for each transport protocol, set the value of the <code>MessageStructure</code>\
          \ parameter to <code>json</code> and use a JSON object for the <code>Message</code>\
          \ parameter. </p> <p/> <p>Constraints:</p> <ul> <li> <p>With the exception\
          \ of SMS, messages must be UTF-8 encoded strings and at most 256 KB in size\
          \ (262,144 bytes, not 262,144 characters).</p> </li> <li> <p>For SMS, each\
          \ message can contain up to 140 characters. This character limit depends\
          \ on the encoding schema. For example, an SMS message can contain 160 GSM\
          \ characters, 140 ASCII characters, or 70 UCS-2 characters.</p> <p>If you\
          \ publish a message that exceeds this size limit, Amazon SNS sends the message\
          \ as multiple messages, each fitting within the size limit. Messages aren't\
          \ truncated mid-word but are cut off at whole-word boundaries.</p> <p>The\
          \ total size limit for a single SMS <code>Publish</code> action is 1,600\
          \ characters.</p> </li> </ul> <p>JSON-specific constraints:</p> <ul> <li>\
          \ <p>Keys in the JSON object that correspond to supported transport protocols\
          \ must have simple JSON string values.</p> </li> <li> <p>The values will\
          \ be parsed (unescaped) before they are used in outgoing messages.</p> </li>\
          \ <li> <p>Outbound notifications are JSON encoded (meaning that the characters\
          \ will be reescaped for sending).</p> </li> <li> <p>Values have a minimum\
          \ length of 0 (the empty string, \"\", is allowed).</p> </li> <li> <p>Values\
          \ have a maximum length bounded by the overall message size (so, including\
          \ multiple protocols may limit message sizes).</p> </li> <li> <p>Non-string\
          \ values will cause the key to be ignored.</p> </li> <li> <p>Keys that do\
          \ not correspond to supported transport protocols are ignored.</p> </li>\
          \ <li> <p>Duplicate keys are not allowed.</p> </li> <li> <p>Failure to parse\
          \ or validate any key or value in the message will cause the <code>Publish</code>\
          \ call to return an error (no partial delivery).</p> </li> </ul>"
        explode: true
        in: query
        name: Message
        required: true
        schema:
          type: string
        style: form
      - description: "<p>Optional parameter to be used as the \"Subject\" line when\
          \ the message is delivered to email endpoints. This field will also be included,\
          \ if present, in the standard JSON messages delivered to other endpoints.</p>\
          \ <p>Constraints: Subjects must be ASCII text that begins with a letter,\
          \ number, or punctuation mark; must not include line breaks or control characters;\
          \ and must be less than 100 characters long.</p>"
        explode: true
        in: query
        name: Subject
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Set <code>MessageStructure</code> to <code>json</code> if\
          \ you want to send a different message for each protocol. For example, using\
          \ one publish action, you can send a short message to your SMS subscribers\
          \ and a longer message to your email subscribers. If you set <code>MessageStructure</code>\
          \ to <code>json</code>, the value of the <code>Message</code> parameter\
          \ must: </p> <ul> <li> <p>be a syntactically valid JSON object; and</p>\
          \ </li> <li> <p>contain at least a top-level JSON key of \"default\" with\
          \ a value that is a string.</p> </li> </ul> <p>You can define other top-level\
          \ keys that define the message you want to send to a specific transport\
          \ protocol (e.g., \"http\").</p> <p>Valid value: <code>json</code> </p>"
        explode: true
        in: query
        name: MessageStructure
        required: false
        schema:
          type: string
        style: form
      - description: Message attributes for Publish action.
        explode: true
        in: query
        name: MessageAttributes
        required: false
        schema:
          additionalProperties:
            $ref: '#/components/schemas/MessageAttributeValue'
          type: object
        style: form
      - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
          \ topics. The <code>MessageDeduplicationId</code> can contain up to 128\
          \ alphanumeric characters <code>(a-z, A-Z, 0-9)</code> and punctuation <code>(!\"\
          #$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>Every message\
          \ must have a unique <code>MessageDeduplicationId</code>, which is a token\
          \ used for deduplication of sent messages. If a message with a particular\
          \ <code>MessageDeduplicationId</code> is sent successfully, any message\
          \ sent with the same <code>MessageDeduplicationId</code> during the 5-minute\
          \ deduplication interval is treated as a duplicate. </p> <p>If the topic\
          \ has <code>ContentBasedDeduplication</code> set, the system generates a\
          \ <code>MessageDeduplicationId</code> based on the contents of the message.\
          \ Your <code>MessageDeduplicationId</code> overrides the generated one.</p>"
        explode: true
        in: query
        name: MessageDeduplicationId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
          \ topics. The <code>MessageGroupId</code> can contain up to 128 alphanumeric\
          \ characters <code>(a-z, A-Z, 0-9)</code> and punctuation <code>(!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\\
          ]^_`{|}~)</code>.</p> <p>The <code>MessageGroupId</code> is a tag that specifies\
          \ that a message belongs to a specific message group. Messages that belong\
          \ to the same message group are processed in a FIFO manner (however, messages\
          \ in different message groups might be processed out of order). Every message\
          \ must include a <code>MessageGroupId</code>.</p>"
        explode: true
        in: query
        name: MessageGroupId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - Publish
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublishResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointDisabledException'
          description: EndpointDisabledException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PlatformApplicationDisabledException'
          description: PlatformApplicationDisabledException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSDisabledException'
          description: KMSDisabledException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSInvalidStateException'
          description: KMSInvalidStateException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSNotFoundException'
          description: KMSNotFoundException
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSOptInRequired'
          description: KMSOptInRequired
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSThrottlingException'
          description: KMSThrottlingException
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSAccessDeniedException'
          description: KMSAccessDeniedException
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-aws-operation-name: Publish
      x-accepts:
      - text/xml
    post:
      description: "<p>Sends a message to an Amazon SNS topic, a text message (SMS\
        \ message) directly to a phone number, or a message to a mobile platform endpoint\
        \ (when you specify the <code>TargetArn</code>).</p> <p>If you send a message\
        \ to a topic, Amazon SNS delivers the message to each endpoint that is subscribed\
        \ to the topic. The format of the message depends on the notification protocol\
        \ for each subscribed endpoint.</p> <p>When a <code>messageId</code> is returned,\
        \ the message is saved and Amazon SNS immediately delivers it to subscribers.</p>\
        \ <p>To use the <code>Publish</code> action for publishing a message to a\
        \ mobile endpoint, such as an app on a Kindle device or mobile phone, you\
        \ must specify the EndpointArn for the TargetArn parameter. The EndpointArn\
        \ is returned when making a call with the <code>CreatePlatformEndpoint</code>\
        \ action. </p> <p>For more information about formatting messages, see <a href=\"\
        https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html\"\
        >Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>.\
        \ </p> <important> <p>You can publish messages only to topics and endpoints\
        \ in the same Amazon Web Services Region.</p> </important>"
      operationId: POST_Publish
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - Publish
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PublishInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublishResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointDisabledException'
          description: EndpointDisabledException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PlatformApplicationDisabledException'
          description: PlatformApplicationDisabledException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSDisabledException'
          description: KMSDisabledException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSInvalidStateException'
          description: KMSInvalidStateException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSNotFoundException'
          description: KMSNotFoundException
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSOptInRequired'
          description: KMSOptInRequired
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSThrottlingException'
          description: KMSThrottlingException
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSAccessDeniedException'
          description: KMSAccessDeniedException
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-aws-operation-name: Publish
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=PublishBatch:
    get:
      description: "<p>Publishes up to ten messages to the specified topic. This is\
        \ a batch version of <code>Publish</code>. For FIFO topics, multiple messages\
        \ within a single batch are published in the order they are sent, and messages\
        \ are deduplicated within the batch and across batches for 5 minutes.</p>\
        \ <p>The result of publishing each message is reported individually in the\
        \ response. Because the batch request can result in a combination of successful\
        \ and unsuccessful actions, you should check for batch errors even when the\
        \ call returns an HTTP status code of <code>200</code>.</p> <p>The maximum\
        \ allowed individual message size and the maximum total payload size (the\
        \ sum of the individual lengths of all of the batched messages) are both 256\
        \ KB (262,144 bytes). </p> <p>Some actions take lists of parameters. These\
        \ lists are specified using the <code>param.n</code> notation. Values of <code>n</code>\
        \ are integers starting from 1. For example, a parameter list with two elements\
        \ looks like this: </p> <p>&amp;AttributeName.1=first</p> <p>&amp;AttributeName.2=second</p>\
        \ <p>If you send a batch message to a topic, Amazon SNS publishes the batch\
        \ message to each endpoint that is subscribed to the topic. The format of\
        \ the batch message depends on the notification protocol for each subscribed\
        \ endpoint.</p> <p>When a <code>messageId</code> is returned, the batch message\
        \ is saved and Amazon SNS immediately delivers the message to subscribers.</p>"
      operationId: GET_PublishBatch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon resource name (ARN) of the topic you want to batch
          publish to.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: A list of <code>PublishBatch</code> request entries to be sent
          to the SNS topic.
        explode: true
        in: query
        name: PublishBatchRequestEntries
        required: true
        schema:
          items:
            $ref: '#/components/schemas/PublishBatchRequestEntry'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PublishBatch
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublishBatchResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointDisabledException'
          description: EndpointDisabledException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PlatformApplicationDisabledException'
          description: PlatformApplicationDisabledException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchEntryIdsNotDistinctException'
          description: BatchEntryIdsNotDistinctException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchRequestTooLongException'
          description: BatchRequestTooLongException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EmptyBatchRequestException'
          description: EmptyBatchRequestException
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidBatchEntryIdException'
          description: InvalidBatchEntryIdException
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyEntriesInBatchRequestException'
          description: TooManyEntriesInBatchRequestException
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSDisabledException'
          description: KMSDisabledException
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSInvalidStateException'
          description: KMSInvalidStateException
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSNotFoundException'
          description: KMSNotFoundException
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSOptInRequired'
          description: KMSOptInRequired
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSThrottlingException'
          description: KMSThrottlingException
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSAccessDeniedException'
          description: KMSAccessDeniedException
        "498":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
        "499":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-aws-operation-name: PublishBatch
      x-accepts:
      - text/xml
    post:
      description: "<p>Publishes up to ten messages to the specified topic. This is\
        \ a batch version of <code>Publish</code>. For FIFO topics, multiple messages\
        \ within a single batch are published in the order they are sent, and messages\
        \ are deduplicated within the batch and across batches for 5 minutes.</p>\
        \ <p>The result of publishing each message is reported individually in the\
        \ response. Because the batch request can result in a combination of successful\
        \ and unsuccessful actions, you should check for batch errors even when the\
        \ call returns an HTTP status code of <code>200</code>.</p> <p>The maximum\
        \ allowed individual message size and the maximum total payload size (the\
        \ sum of the individual lengths of all of the batched messages) are both 256\
        \ KB (262,144 bytes). </p> <p>Some actions take lists of parameters. These\
        \ lists are specified using the <code>param.n</code> notation. Values of <code>n</code>\
        \ are integers starting from 1. For example, a parameter list with two elements\
        \ looks like this: </p> <p>&amp;AttributeName.1=first</p> <p>&amp;AttributeName.2=second</p>\
        \ <p>If you send a batch message to a topic, Amazon SNS publishes the batch\
        \ message to each endpoint that is subscribed to the topic. The format of\
        \ the batch message depends on the notification protocol for each subscribed\
        \ endpoint.</p> <p>When a <code>messageId</code> is returned, the batch message\
        \ is saved and Amazon SNS immediately delivers the message to subscribers.</p>"
      operationId: POST_PublishBatch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PublishBatch
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PublishBatchInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublishBatchResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EndpointDisabledException'
          description: EndpointDisabledException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PlatformApplicationDisabledException'
          description: PlatformApplicationDisabledException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchEntryIdsNotDistinctException'
          description: BatchEntryIdsNotDistinctException
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchRequestTooLongException'
          description: BatchRequestTooLongException
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EmptyBatchRequestException'
          description: EmptyBatchRequestException
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidBatchEntryIdException'
          description: InvalidBatchEntryIdException
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyEntriesInBatchRequestException'
          description: TooManyEntriesInBatchRequestException
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSDisabledException'
          description: KMSDisabledException
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSInvalidStateException'
          description: KMSInvalidStateException
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSNotFoundException'
          description: KMSNotFoundException
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSOptInRequired'
          description: KMSOptInRequired
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSThrottlingException'
          description: KMSThrottlingException
        "497":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSAccessDeniedException'
          description: KMSAccessDeniedException
        "498":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
        "499":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-aws-operation-name: PublishBatch
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=PutDataProtectionPolicy:
    get:
      description: Adds or updates an inline policy document that is stored in the
        specified Amazon SNS topic.
      operationId: GET_PutDataProtectionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The ARN of the topic whose <code>DataProtectionPolicy</code>\
          \ you want to add or update.</p> <p>For more information about ARNs, see\
          \ <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
          >Amazon Resource Names (ARNs)</a> in the Amazon Web Services General Reference.</p>"
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The JSON serialization of the topic's <code>DataProtectionPolicy</code>.</p>\
          \ <p>The <code>DataProtectionPolicy</code> must be in JSON string format.</p>\
          \ <p>Length Constraints: Maximum length of 30,720.</p>"
        explode: true
        in: query
        name: DataProtectionPolicy
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PutDataProtectionPolicy
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: PutDataProtectionPolicy
      x-accepts:
      - text/xml
    post:
      description: Adds or updates an inline policy document that is stored in the
        specified Amazon SNS topic.
      operationId: POST_PutDataProtectionPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - PutDataProtectionPolicy
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutDataProtectionPolicyInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: PutDataProtectionPolicy
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemovePermission:
    get:
      description: "<p>Removes a statement from a topic's access control policy.</p>\
        \ <note> <p>To remove the ability to change topic permissions, you must deny\
        \ permissions to the <code>AddPermission</code>, <code>RemovePermission</code>,\
        \ and <code>SetTopicAttributes</code> actions in your IAM policy.</p> </note>"
      operationId: GET_RemovePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic whose access control policy you wish to
          modify.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: The unique label of the statement you want to remove.
        explode: true
        in: query
        name: Label
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemovePermission
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: RemovePermission
      x-accepts:
      - text/xml
    post:
      description: "<p>Removes a statement from a topic's access control policy.</p>\
        \ <note> <p>To remove the ability to change topic permissions, you must deny\
        \ permissions to the <code>AddPermission</code>, <code>RemovePermission</code>,\
        \ and <code>SetTopicAttributes</code> actions in your IAM policy.</p> </note>"
      operationId: POST_RemovePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemovePermission
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemovePermissionInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: RemovePermission
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=SetEndpointAttributes:
    get:
      description: "Sets the attributes for an endpoint for a device on one of the\
        \ supported push notification services, such as GCM (Firebase Cloud Messaging)\
        \ and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: GET_SetEndpointAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: EndpointArn used for SetEndpointAttributes action.
        explode: true
        in: query
        name: EndpointArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A map of the endpoint attributes. Attributes in this map\
          \ include the following:</p> <ul> <li> <p> <code>CustomUserData</code> –\
          \ arbitrary user data to associate with the endpoint. Amazon SNS does not\
          \ use this data. The data must be in UTF-8 format and less than 2KB.</p>\
          \ </li> <li> <p> <code>Enabled</code> – flag that enables/disables delivery\
          \ to the endpoint. Amazon SNS will set this to false when a notification\
          \ service indicates to Amazon SNS that the endpoint is invalid. Users can\
          \ set it back to true, typically after updating Token.</p> </li> <li> <p>\
          \ <code>Token</code> – device token, also referred to as a registration\
          \ id, for an app and mobile device. This is returned from the notification\
          \ service when an app and mobile device are registered with the notification\
          \ service.</p> </li> </ul>"
        explode: true
        in: query
        name: Attributes
        required: true
        schema:
          additionalProperties:
            $ref: '#/components/schemas/String'
          type: object
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetEndpointAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: SetEndpointAttributes
      x-accepts:
      - text/xml
    post:
      description: "Sets the attributes for an endpoint for a device on one of the\
        \ supported push notification services, such as GCM (Firebase Cloud Messaging)\
        \ and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. "
      operationId: POST_SetEndpointAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetEndpointAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetEndpointAttributesInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: SetEndpointAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=SetPlatformApplicationAttributes:
    get:
      description: "Sets the attributes of the platform application object for the\
        \ supported push notification services, such as APNS and GCM (Firebase Cloud\
        \ Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. For information on configuring\
        \ attributes for message delivery status, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\"\
        >Using Amazon SNS Application Attributes for Message Delivery Status</a>. "
      operationId: GET_SetPlatformApplicationAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: PlatformApplicationArn for SetPlatformApplicationAttributes action.
        explode: true
        in: query
        name: PlatformApplicationArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A map of the platform application attributes. Attributes\
          \ in this map include the following:</p> <ul> <li> <p> <code>PlatformCredential</code>\
          \ – The credential received from the notification service.</p> <ul> <li>\
          \ <p>For ADM, <code>PlatformCredential</code>is client secret.</p> </li>\
          \ <li> <p>For Apple Services using certificate credentials, <code>PlatformCredential</code>\
          \ is private key.</p> </li> <li> <p>For Apple Services using token credentials,\
          \ <code>PlatformCredential</code> is signing key.</p> </li> <li> <p>For\
          \ GCM (Firebase Cloud Messaging), <code>PlatformCredential</code> is API\
          \ key. </p> </li> </ul> </li> </ul> <ul> <li> <p> <code>PlatformPrincipal</code>\
          \ – The principal received from the notification service.</p> <ul> <li>\
          \ <p>For ADM, <code>PlatformPrincipal</code>is client id.</p> </li> <li>\
          \ <p>For Apple Services using certificate credentials, <code>PlatformPrincipal</code>\
          \ is SSL certificate.</p> </li> <li> <p>For Apple Services using token credentials,\
          \ <code>PlatformPrincipal</code> is signing key ID.</p> </li> <li> <p>For\
          \ GCM (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code>.\
          \ </p> </li> </ul> </li> </ul> <ul> <li> <p> <code>EventEndpointCreated</code>\
          \ – Topic ARN to which <code>EndpointCreated</code> event notifications\
          \ are sent.</p> </li> <li> <p> <code>EventEndpointDeleted</code> – Topic\
          \ ARN to which <code>EndpointDeleted</code> event notifications are sent.</p>\
          \ </li> <li> <p> <code>EventEndpointUpdated</code> – Topic ARN to which\
          \ <code>EndpointUpdate</code> event notifications are sent.</p> </li> <li>\
          \ <p> <code>EventDeliveryFailure</code> – Topic ARN to which <code>DeliveryFailure</code>\
          \ event notifications are sent upon Direct Publish delivery failure (permanent)\
          \ to one of the application's endpoints.</p> </li> <li> <p> <code>SuccessFeedbackRoleArn</code>\
          \ – IAM role ARN used to give Amazon SNS write access to use CloudWatch\
          \ Logs on your behalf.</p> </li> <li> <p> <code>FailureFeedbackRoleArn</code>\
          \ – IAM role ARN used to give Amazon SNS write access to use CloudWatch\
          \ Logs on your behalf.</p> </li> <li> <p> <code>SuccessFeedbackSampleRate</code>\
          \ – Sample rate percentage (0-100) of successfully delivered messages.</p>\
          \ </li> </ul> <p>The following attributes only apply to <code>APNs</code>\
          \ token-based authentication:</p> <ul> <li> <p> <code>ApplePlatformTeamID</code>\
          \ – The identifier that's assigned to your Apple developer account team.</p>\
          \ </li> <li> <p> <code>ApplePlatformBundleID</code> – The bundle identifier\
          \ that's assigned to your iOS app.</p> </li> </ul>"
        explode: true
        in: query
        name: Attributes
        required: true
        schema:
          additionalProperties:
            $ref: '#/components/schemas/String'
          type: object
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetPlatformApplicationAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: SetPlatformApplicationAttributes
      x-accepts:
      - text/xml
    post:
      description: "Sets the attributes of the platform application object for the\
        \ supported push notification services, such as APNS and GCM (Firebase Cloud\
        \ Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\"\
        >Using Amazon SNS Mobile Push Notifications</a>. For information on configuring\
        \ attributes for message delivery status, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\"\
        >Using Amazon SNS Application Attributes for Message Delivery Status</a>. "
      operationId: POST_SetPlatformApplicationAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetPlatformApplicationAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetPlatformApplicationAttributesInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-aws-operation-name: SetPlatformApplicationAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=SetSMSAttributes:
    get:
      description: "<p>Use this request to set the default settings for sending SMS\
        \ messages and receiving daily SMS usage reports.</p> <p>You can override\
        \ some of these settings for a single message when you use the <code>Publish</code>\
        \ action with the <code>MessageAttributes.entry.N</code> parameter. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\"\
        >Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide</i>.</p>\
        \ <note> <p>To use this operation, you must grant the Amazon SNS service principal\
        \ (<code>sns.amazonaws.com</code>) permission to perform the <code>s3:ListBucket</code>\
        \ action. </p> </note>"
      operationId: GET_SetSMSAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The default settings for sending SMS messages from your Amazon\
          \ Web Services account. You can set values for the following attribute names:</p>\
          \ <p> <code>MonthlySpendLimit</code> – The maximum amount in USD that you\
          \ are willing to spend each month to send SMS messages. When Amazon SNS\
          \ determines that sending an SMS message would incur a cost that exceeds\
          \ this limit, it stops sending SMS messages within minutes.</p> <important>\
          \ <p>Amazon SNS stops sending SMS messages within minutes of the limit being\
          \ crossed. During that interval, if you continue to send SMS messages, you\
          \ will incur costs that exceed your limit.</p> </important> <p>By default,\
          \ the spend limit is set to the maximum allowed by Amazon SNS. If you want\
          \ to raise the limit, submit an <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-sns\"\
          >SNS Limit Increase case</a>. For <b>New limit value</b>, enter your desired\
          \ monthly spend limit. In the <b>Use Case Description</b> field, explain\
          \ that you are requesting an SMS monthly spend limit increase.</p> <p> <code>DeliveryStatusIAMRole</code>\
          \ – The ARN of the IAM role that allows Amazon SNS to write logs about SMS\
          \ deliveries in CloudWatch Logs. For each SMS message that you send, Amazon\
          \ SNS writes a log that includes the message price, the success or failure\
          \ status, the reason for failure (if the message failed), the message dwell\
          \ time, and other information.</p> <p> <code>DeliveryStatusSuccessSamplingRate</code>\
          \ – The percentage of successful SMS deliveries for which Amazon SNS will\
          \ write logs in CloudWatch Logs. The value can be an integer from 0 - 100.\
          \ For example, to write logs only for failed deliveries, set this value\
          \ to <code>0</code>. To write logs for 10% of your successful deliveries,\
          \ set it to <code>10</code>.</p> <p> <code>DefaultSenderID</code> – A string,\
          \ such as your business brand, that is displayed as the sender on the receiving\
          \ device. Support for sender IDs varies by country. The sender ID can be\
          \ 1 - 11 alphanumeric characters, and it must contain at least one letter.</p>\
          \ <p> <code>DefaultSMSType</code> – The type of SMS message that you will\
          \ send by default. You can assign the following values:</p> <ul> <li> <p>\
          \ <code>Promotional</code> – (Default) Noncritical messages, such as marketing\
          \ messages. Amazon SNS optimizes the message delivery to incur the lowest\
          \ cost.</p> </li> <li> <p> <code>Transactional</code> – Critical messages\
          \ that support customer transactions, such as one-time passcodes for multi-factor\
          \ authentication. Amazon SNS optimizes the message delivery to achieve the\
          \ highest reliability.</p> </li> </ul> <p> <code>UsageReportS3Bucket</code>\
          \ – The name of the Amazon S3 bucket to receive daily SMS usage reports\
          \ from Amazon SNS. Each day, Amazon SNS will deliver a usage report as a\
          \ CSV file to the bucket. The report includes the following information\
          \ for each SMS message that was successfully delivered by your Amazon Web\
          \ Services account:</p> <ul> <li> <p>Time that the message was published\
          \ (in UTC)</p> </li> <li> <p>Message ID</p> </li> <li> <p>Destination phone\
          \ number</p> </li> <li> <p>Message type</p> </li> <li> <p>Delivery status</p>\
          \ </li> <li> <p>Message price (in USD)</p> </li> <li> <p>Part number (a\
          \ message is split into multiple parts if it is too long for a single message)</p>\
          \ </li> <li> <p>Total number of parts</p> </li> </ul> <p>To receive the\
          \ report, the bucket must have a policy that allows the Amazon SNS service\
          \ principal to perform the <code>s3:PutObject</code> and <code>s3:GetBucketLocation</code>\
          \ actions.</p> <p>For an example bucket policy and usage report, see <a\
          \ href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_stats.html\">Monitoring\
          \ SMS Activity</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
        explode: true
        in: query
        name: attributes
        required: true
        schema:
          additionalProperties:
            $ref: '#/components/schemas/String'
          type: object
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetSMSAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SetSMSAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: SetSMSAttributes
      x-accepts:
      - text/xml
    post:
      description: "<p>Use this request to set the default settings for sending SMS\
        \ messages and receiving daily SMS usage reports.</p> <p>You can override\
        \ some of these settings for a single message when you use the <code>Publish</code>\
        \ action with the <code>MessageAttributes.entry.N</code> parameter. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\"\
        >Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide</i>.</p>\
        \ <note> <p>To use this operation, you must grant the Amazon SNS service principal\
        \ (<code>sns.amazonaws.com</code>) permission to perform the <code>s3:ListBucket</code>\
        \ action. </p> </note>"
      operationId: POST_SetSMSAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetSMSAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetSMSAttributesInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SetSMSAttributesResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: SetSMSAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=SetSubscriptionAttributes:
    get:
      description: Allows a subscription owner to set an attribute of the subscription
        to a new value.
      operationId: GET_SetSubscriptionAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the subscription to modify.
        explode: true
        in: query
        name: SubscriptionArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A map of attributes with their corresponding values.</p>\
          \ <p>The following lists the names, descriptions, and values of the special\
          \ request parameters that this action uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code>\
          \ – The policy that defines how Amazon SNS retries failed deliveries to\
          \ HTTP/S endpoints.</p> </li> <li> <p> <code>FilterPolicy</code> – The simple\
          \ JSON object that lets your subscriber receive only a subset of messages,\
          \ rather than receiving every message published to the topic.</p> </li>\
          \ <li> <p> <code>FilterPolicyScope</code> – This attribute lets you choose\
          \ the filtering scope by using one of the following string value types:</p>\
          \ <ul> <li> <p> <code>MessageAttributes</code> (default) – The filter is\
          \ applied on the message attributes.</p> </li> <li> <p> <code>MessageBody</code>\
          \ – The filter is applied on the message body.</p> </li> </ul> </li> <li>\
          \ <p> <code>RawMessageDelivery</code> – When set to <code>true</code>, enables\
          \ raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates\
          \ the need for the endpoints to process JSON formatting, which is otherwise\
          \ created for Amazon SNS metadata.</p> </li> <li> <p> <code>RedrivePolicy</code>\
          \ – When specified, sends undeliverable messages to the specified Amazon\
          \ SQS dead-letter queue. Messages that can't be delivered due to client\
          \ errors (for example, when the subscribed endpoint is unreachable) or server\
          \ errors (for example, when the service that powers the subscribed endpoint\
          \ becomes unavailable) are held in the dead-letter queue for further analysis\
          \ or reprocessing.</p> </li> </ul> <p>The following attribute applies only\
          \ to Amazon Kinesis Data Firehose delivery stream subscriptions:</p> <ul>\
          \ <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that\
          \ has the following:</p> <ul> <li> <p>Permission to write to the Kinesis\
          \ Data Firehose delivery stream</p> </li> <li> <p>Amazon SNS listed as a\
          \ trusted entity</p> </li> </ul> <p>Specifying a valid ARN for this attribute\
          \ is required for Kinesis Data Firehose delivery stream subscriptions. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\"\
          >Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS\
          \ Developer Guide</i>.</p> </li> </ul>"
        explode: true
        in: query
        name: AttributeName
        required: true
        schema:
          type: string
        style: form
      - description: The new value for the attribute in JSON format.
        explode: true
        in: query
        name: AttributeValue
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetSubscriptionAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterPolicyLimitExceededException'
          description: FilterPolicyLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: SetSubscriptionAttributes
      x-accepts:
      - text/xml
    post:
      description: Allows a subscription owner to set an attribute of the subscription
        to a new value.
      operationId: POST_SetSubscriptionAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetSubscriptionAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetSubscriptionAttributesInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterPolicyLimitExceededException'
          description: FilterPolicyLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
      x-aws-operation-name: SetSubscriptionAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=SetTopicAttributes:
    get:
      description: "<p>Allows a topic owner to set an attribute of the topic to a\
        \ new value.</p> <note> <p>To remove the ability to change topic permissions,\
        \ you must deny permissions to the <code>AddPermission</code>, <code>RemovePermission</code>,\
        \ and <code>SetTopicAttributes</code> actions in your IAM policy.</p> </note>"
      operationId: GET_SetTopicAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic to modify.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A map of attributes with their corresponding values.</p>\
          \ <p>The following lists the names, descriptions, and values of the special\
          \ request parameters that the <code>SetTopicAttributes</code> action uses:</p>\
          \ <ul> <li> <p> <code>ApplicationSuccessFeedbackRoleArn</code> – Indicates\
          \ failed message delivery status for an Amazon SNS topic that is subscribed\
          \ to a platform application endpoint.</p> </li> <li> <p> <code>DeliveryPolicy</code>\
          \ – The policy that defines how Amazon SNS retries failed deliveries to\
          \ HTTP/S endpoints.</p> </li> <li> <p> <code>DisplayName</code> – The display\
          \ name to use for a topic with SMS subscriptions.</p> </li> <li> <p> <code>Policy</code>\
          \ – The policy that defines who can access your topic. By default, only\
          \ the topic owner can publish or subscribe to the topic.</p> </li> <li>\
          \ <p> <code>TracingConfig</code> – Tracing mode of an Amazon SNS topic.\
          \ By default <code>TracingConfig</code> is set to <code>PassThrough</code>,\
          \ and the topic passes through the tracing header it receives from an Amazon\
          \ SNS publisher to its subscriptions. If set to <code>Active</code>, Amazon\
          \ SNS will vend X-Ray segment data to topic owner account if the sampled\
          \ flag in the tracing header is true. This is only supported on standard\
          \ topics.</p> </li> <li> <p>HTTP</p> <ul> <li> <p> <code>HTTPSuccessFeedbackRoleArn</code>\
          \ – Indicates successful message delivery status for an Amazon SNS topic\
          \ that is subscribed to an HTTP endpoint. </p> </li> <li> <p> <code>HTTPSuccessFeedbackSampleRate</code>\
          \ – Indicates percentage of successful messages to sample for an Amazon\
          \ SNS topic that is subscribed to an HTTP endpoint.</p> </li> <li> <p> <code>HTTPFailureFeedbackRoleArn</code>\
          \ – Indicates failed message delivery status for an Amazon SNS topic that\
          \ is subscribed to an HTTP endpoint.</p> </li> </ul> </li> <li> <p>Amazon\
          \ Kinesis Data Firehose</p> <ul> <li> <p> <code>FirehoseSuccessFeedbackRoleArn</code>\
          \ – Indicates successful message delivery status for an Amazon SNS topic\
          \ that is subscribed to an Amazon Kinesis Data Firehose endpoint.</p> </li>\
          \ <li> <p> <code>FirehoseSuccessFeedbackSampleRate</code> – Indicates percentage\
          \ of successful messages to sample for an Amazon SNS topic that is subscribed\
          \ to an Amazon Kinesis Data Firehose endpoint.</p> </li> <li> <p> <code>FirehoseFailureFeedbackRoleArn</code>\
          \ – Indicates failed message delivery status for an Amazon SNS topic that\
          \ is subscribed to an Amazon Kinesis Data Firehose endpoint. </p> </li>\
          \ </ul> </li> <li> <p>Lambda</p> <ul> <li> <p> <code>LambdaSuccessFeedbackRoleArn</code>\
          \ – Indicates successful message delivery status for an Amazon SNS topic\
          \ that is subscribed to an Lambda endpoint.</p> </li> <li> <p> <code>LambdaSuccessFeedbackSampleRate</code>\
          \ – Indicates percentage of successful messages to sample for an Amazon\
          \ SNS topic that is subscribed to an Lambda endpoint.</p> </li> <li> <p>\
          \ <code>LambdaFailureFeedbackRoleArn</code> – Indicates failed message delivery\
          \ status for an Amazon SNS topic that is subscribed to an Lambda endpoint.\
          \ </p> </li> </ul> </li> <li> <p>Platform application endpoint</p> <ul>\
          \ <li> <p> <code>ApplicationSuccessFeedbackRoleArn</code> – Indicates successful\
          \ message delivery status for an Amazon SNS topic that is subscribed to\
          \ an Amazon Web Services application endpoint.</p> </li> <li> <p> <code>ApplicationSuccessFeedbackSampleRate</code>\
          \ – Indicates percentage of successful messages to sample for an Amazon\
          \ SNS topic that is subscribed to an Amazon Web Services application endpoint.</p>\
          \ </li> <li> <p> <code>ApplicationFailureFeedbackRoleArn</code> – Indicates\
          \ failed message delivery status for an Amazon SNS topic that is subscribed\
          \ to an Amazon Web Services application endpoint.</p> </li> </ul> <note>\
          \ <p>In addition to being able to configure topic attributes for message\
          \ delivery status of notification messages sent to Amazon SNS application\
          \ endpoints, you can also configure application attributes for the delivery\
          \ status of push notification messages sent to push notification services.</p>\
          \ <p>For example, For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\"\
          >Using Amazon SNS Application Attributes for Message Delivery Status</a>.\
          \ </p> </note> </li> <li> <p>Amazon SQS</p> <ul> <li> <p> <code>SQSSuccessFeedbackRoleArn</code>\
          \ – Indicates successful message delivery status for an Amazon SNS topic\
          \ that is subscribed to an Amazon SQS endpoint. </p> </li> <li> <p> <code>SQSSuccessFeedbackSampleRate</code>\
          \ – Indicates percentage of successful messages to sample for an Amazon\
          \ SNS topic that is subscribed to an Amazon SQS endpoint. </p> </li> <li>\
          \ <p> <code>SQSFailureFeedbackRoleArn</code> – Indicates failed message\
          \ delivery status for an Amazon SNS topic that is subscribed to an Amazon\
          \ SQS endpoint. </p> </li> </ul> </li> </ul> <note> <p>The &lt;ENDPOINT&gt;SuccessFeedbackRoleArn\
          \ and &lt;ENDPOINT&gt;FailureFeedbackRoleArn attributes are used to give\
          \ Amazon SNS write access to use CloudWatch Logs on your behalf. The &lt;ENDPOINT&gt;SuccessFeedbackSampleRate\
          \ attribute is for specifying the sample rate percentage (0-100) of successfully\
          \ delivered messages. After you configure the &lt;ENDPOINT&gt;FailureFeedbackRoleArn\
          \ attribute, then all failed message deliveries generate CloudWatch Logs.\
          \ </p> </note> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\"\
          >server-side-encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code>\
          \ – The ID of an Amazon Web Services managed customer master key (CMK) for\
          \ Amazon SNS or a custom CMK. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\"\
          >Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
          >KeyId</a> in the <i>Key Management Service API Reference</i>. </p> </li>\
          \ <li> <p> <code>SignatureVersion</code> – The signature version corresponds\
          \ to the hashing algorithm used while creating the signature of the notifications,\
          \ subscription confirmations, or unsubscribe confirmation messages sent\
          \ by Amazon SNS. By default, <code>SignatureVersion</code> is set to <code>1</code>.</p>\
          \ </li> </ul> <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\"\
          >FIFO topics</a>:</p> <ul> <li> <p> <code>ContentBasedDeduplication</code>\
          \ – Enables content-based deduplication for FIFO topics.</p> <ul> <li> <p>By\
          \ default, <code>ContentBasedDeduplication</code> is set to <code>false</code>.\
          \ If you create a FIFO topic and this attribute is <code>false</code>, you\
          \ must specify a value for the <code>MessageDeduplicationId</code> parameter\
          \ for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\"\
          >Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code>\
          \ to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code>\
          \ using the body of the message (but not the attributes of the message).</p>\
          \ <p>(Optional) To override the generated value, you can specify a value\
          \ for the <code>MessageDeduplicationId</code> parameter for the <code>Publish</code>\
          \ action.</p> </li> </ul> </li> </ul>"
        explode: true
        in: query
        name: AttributeName
        required: true
        schema:
          type: string
        style: form
      - description: The new value for the attribute.
        explode: true
        in: query
        name: AttributeValue
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetTopicAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: SetTopicAttributes
      x-accepts:
      - text/xml
    post:
      description: "<p>Allows a topic owner to set an attribute of the topic to a\
        \ new value.</p> <note> <p>To remove the ability to change topic permissions,\
        \ you must deny permissions to the <code>AddPermission</code>, <code>RemovePermission</code>,\
        \ and <code>SetTopicAttributes</code> actions in your IAM policy.</p> </note>"
      operationId: POST_SetTopicAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - SetTopicAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SetTopicAttributesInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: SetTopicAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=Subscribe:
    get:
      description: "<p>Subscribes an endpoint to an Amazon SNS topic. If the endpoint\
        \ type is HTTP/S or email, or if the endpoint and the topic are not in the\
        \ same Amazon Web Services account, the endpoint owner must run the <code>ConfirmSubscription</code>\
        \ action to confirm the subscription.</p> <p>You call the <code>ConfirmSubscription</code>\
        \ action with the token from the subscription response. Confirmation tokens\
        \ are valid for three days.</p> <p>This action is throttled at 100 transactions\
        \ per second (TPS).</p>"
      operationId: GET_Subscribe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic you want to subscribe to.
        explode: true
        in: query
        name: TopicArn
        required: true
        schema:
          type: string
        style: form
      - description: <p>The protocol that you want to use. Supported protocols include:</p>
          <ul> <li> <p> <code>http</code> – delivery of JSON-encoded message via HTTP
          POST</p> </li> <li> <p> <code>https</code> – delivery of JSON-encoded message
          via HTTPS POST</p> </li> <li> <p> <code>email</code> – delivery of message
          via SMTP</p> </li> <li> <p> <code>email-json</code> – delivery of JSON-encoded
          message via SMTP</p> </li> <li> <p> <code>sms</code> – delivery of message
          via SMS</p> </li> <li> <p> <code>sqs</code> – delivery of JSON-encoded message
          to an Amazon SQS queue</p> </li> <li> <p> <code>application</code> – delivery
          of JSON-encoded message to an EndpointArn for a mobile app and device</p>
          </li> <li> <p> <code>lambda</code> – delivery of JSON-encoded message to
          an Lambda function</p> </li> <li> <p> <code>firehose</code> – delivery of
          JSON-encoded message to an Amazon Kinesis Data Firehose delivery stream.</p>
          </li> </ul>
        explode: true
        in: query
        name: Protocol
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The endpoint that you want to receive notifications. Endpoints\
          \ vary by protocol:</p> <ul> <li> <p>For the <code>http</code> protocol,\
          \ the (public) endpoint is a URL beginning with <code>http://</code>.</p>\
          \ </li> <li> <p>For the <code>https</code> protocol, the (public) endpoint\
          \ is a URL beginning with <code>https://</code>.</p> </li> <li> <p>For the\
          \ <code>email</code> protocol, the endpoint is an email address.</p> </li>\
          \ <li> <p>For the <code>email-json</code> protocol, the endpoint is an email\
          \ address.</p> </li> <li> <p>For the <code>sms</code> protocol, the endpoint\
          \ is a phone number of an SMS-enabled device.</p> </li> <li> <p>For the\
          \ <code>sqs</code> protocol, the endpoint is the ARN of an Amazon SQS queue.</p>\
          \ </li> <li> <p>For the <code>application</code> protocol, the endpoint\
          \ is the EndpointArn of a mobile app and device.</p> </li> <li> <p>For the\
          \ <code>lambda</code> protocol, the endpoint is the ARN of an Lambda function.</p>\
          \ </li> <li> <p>For the <code>firehose</code> protocol, the endpoint is\
          \ the ARN of an Amazon Kinesis Data Firehose delivery stream.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: Endpoint
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A map of attributes with their corresponding values.</p>\
          \ <p>The following lists the names, descriptions, and values of the special\
          \ request parameters that the <code>Subscribe</code> action uses:</p> <ul>\
          \ <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon\
          \ SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p>\
          \ <code>FilterPolicy</code> – The simple JSON object that lets your subscriber\
          \ receive only a subset of messages, rather than receiving every message\
          \ published to the topic.</p> </li> <li> <p> <code>FilterPolicyScope</code>\
          \ – This attribute lets you choose the filtering scope by using one of the\
          \ following string value types:</p> <ul> <li> <p> <code>MessageAttributes</code>\
          \ (default) – The filter is applied on the message attributes.</p> </li>\
          \ <li> <p> <code>MessageBody</code> – The filter is applied on the message\
          \ body.</p> </li> </ul> </li> <li> <p> <code>RawMessageDelivery</code> –\
          \ When set to <code>true</code>, enables raw message delivery to Amazon\
          \ SQS or HTTP/S endpoints. This eliminates the need for the endpoints to\
          \ process JSON formatting, which is otherwise created for Amazon SNS metadata.</p>\
          \ </li> <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable\
          \ messages to the specified Amazon SQS dead-letter queue. Messages that\
          \ can't be delivered due to client errors (for example, when the subscribed\
          \ endpoint is unreachable) or server errors (for example, when the service\
          \ that powers the subscribed endpoint becomes unavailable) are held in the\
          \ dead-letter queue for further analysis or reprocessing.</p> </li> </ul>\
          \ <p>The following attribute applies only to Amazon Kinesis Data Firehose\
          \ delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code>\
          \ – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission\
          \ to write to the Kinesis Data Firehose delivery stream</p> </li> <li> <p>Amazon\
          \ SNS listed as a trusted entity</p> </li> </ul> <p>Specifying a valid ARN\
          \ for this attribute is required for Kinesis Data Firehose delivery stream\
          \ subscriptions. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\"\
          >Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS\
          \ Developer Guide</i>.</p> </li> </ul>"
        explode: true
        in: query
        name: Attributes
        required: false
        schema:
          additionalProperties:
            $ref: '#/components/schemas/attributeValue'
          type: object
        style: form
      - description: "<p>Sets whether the response from the <code>Subscribe</code>\
          \ request includes the subscription ARN, even if the subscription is not\
          \ yet confirmed.</p> <p>If you set this parameter to <code>true</code>,\
          \ the response includes the ARN in all cases, even if the subscription is\
          \ not yet confirmed. In addition to the ARN for confirmed subscriptions,\
          \ the response also includes the <code>pending subscription</code> ARN value\
          \ for subscriptions that aren't yet confirmed. A subscription becomes confirmed\
          \ when the subscriber calls the <code>ConfirmSubscription</code> action\
          \ with a confirmation token.</p> <p/> <p>The default value is <code>false</code>.</p>"
        explode: true
        in: query
        name: ReturnSubscriptionArn
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - Subscribe
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscribeResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionLimitExceededException'
          description: SubscriptionLimitExceededException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterPolicyLimitExceededException'
          description: FilterPolicyLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: Subscribe
      x-accepts:
      - text/xml
    post:
      description: "<p>Subscribes an endpoint to an Amazon SNS topic. If the endpoint\
        \ type is HTTP/S or email, or if the endpoint and the topic are not in the\
        \ same Amazon Web Services account, the endpoint owner must run the <code>ConfirmSubscription</code>\
        \ action to confirm the subscription.</p> <p>You call the <code>ConfirmSubscription</code>\
        \ action with the token from the subscription response. Confirmation tokens\
        \ are valid for three days.</p> <p>This action is throttled at 100 transactions\
        \ per second (TPS).</p>"
      operationId: POST_Subscribe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - Subscribe
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SubscribeInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscribeResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionLimitExceededException'
          description: SubscriptionLimitExceededException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterPolicyLimitExceededException'
          description: FilterPolicyLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: Subscribe
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=TagResource:
    get:
      description: "<p>Add tags to the specified Amazon SNS topic. For an overview,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\"\
        >Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When\
        \ you use topic tags, keep the following guidelines in mind:</p> <ul> <li>\
        \ <p>Adding more than 50 tags to a topic isn't recommended.</p> </li> <li>\
        \ <p>Tags don't have any semantic meaning. Amazon SNS interprets tags as character\
        \ strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li> <li> <p>A\
        \ new tag with a key identical to that of an existing tag overwrites the existing\
        \ tag.</p> </li> <li> <p>Tagging actions are limited to 10 TPS per Amazon\
        \ Web Services account, per Amazon Web Services Region. If your application\
        \ requires a higher throughput, file a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=technical\"\
        >technical support request</a>.</p> </li> </ul>"
      operationId: GET_TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic to which to add tags.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: form
      - description: The tags to be added to the specified topic. A tag consists of
          a required key and an optional value.
        explode: true
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - TagResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: TagResource
      x-accepts:
      - text/xml
    post:
      description: "<p>Add tags to the specified Amazon SNS topic. For an overview,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\"\
        >Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When\
        \ you use topic tags, keep the following guidelines in mind:</p> <ul> <li>\
        \ <p>Adding more than 50 tags to a topic isn't recommended.</p> </li> <li>\
        \ <p>Tags don't have any semantic meaning. Amazon SNS interprets tags as character\
        \ strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li> <li> <p>A\
        \ new tag with a key identical to that of an existing tag overwrites the existing\
        \ tag.</p> </li> <li> <p>Tagging actions are limited to 10 TPS per Amazon\
        \ Web Services account, per Amazon Web Services Region. If your application\
        \ requires a higher throughput, file a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=technical\"\
        >technical support request</a>.</p> </li> </ul>"
      operationId: POST_TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - TagResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: TagResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=Unsubscribe:
    get:
      description: "<p>Deletes a subscription. If the subscription requires authentication\
        \ for deletion, only the owner of the subscription or the topic's owner can\
        \ unsubscribe, and an Amazon Web Services signature is required. If the <code>Unsubscribe</code>\
        \ call does not require authentication and the requester is not the subscription\
        \ owner, a final cancellation message is delivered to the endpoint, so that\
        \ the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code>\
        \ request was unintended.</p> <note> <p>Amazon SQS queue subscriptions require\
        \ authentication for deletion. Only the owner of the subscription, or the\
        \ owner of the topic can unsubscribe using the required Amazon Web Services\
        \ signature.</p> </note> <p>This action is throttled at 100 transactions per\
        \ second (TPS).</p>"
      operationId: GET_Unsubscribe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the subscription to be deleted.
        explode: true
        in: query
        name: SubscriptionArn
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - Unsubscribe
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: Unsubscribe
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes a subscription. If the subscription requires authentication\
        \ for deletion, only the owner of the subscription or the topic's owner can\
        \ unsubscribe, and an Amazon Web Services signature is required. If the <code>Unsubscribe</code>\
        \ call does not require authentication and the requester is not the subscription\
        \ owner, a final cancellation message is delivered to the endpoint, so that\
        \ the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code>\
        \ request was unintended.</p> <note> <p>Amazon SQS queue subscriptions require\
        \ authentication for deletion. Only the owner of the subscription, or the\
        \ owner of the topic can unsubscribe using the required Amazon Web Services\
        \ signature.</p> </note> <p>This action is throttled at 100 transactions per\
        \ second (TPS).</p>"
      operationId: POST_Unsubscribe
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - Unsubscribe
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UnsubscribeInput'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSecurityException'
          description: InvalidSecurityException
      x-aws-operation-name: Unsubscribe
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=UntagResource:
    get:
      description: "Remove tags from the specified Amazon SNS topic. For an overview,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\"\
        >Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>."
      operationId: GET_UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the topic from which to remove tags.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: form
      - description: The list of tag keys to remove from the specified topic.
        explode: true
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - UntagResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: UntagResource
      x-accepts:
      - text/xml
    post:
      description: "Remove tags from the specified Amazon SNS topic. For an overview,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\"\
        >Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>."
      operationId: POST_UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - UntagResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
          description: TagLimitExceededException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StaleTagException'
          description: StaleTagException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentAccessException'
          description: ConcurrentAccessException
      x-aws-operation-name: UntagResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=VerifySMSSandboxPhoneNumber:
    get:
      description: "<p>Verifies a destination phone number with a one-time password\
        \ (OTP) for the calling Amazon Web Services account.</p> <p>When you start\
        \ using Amazon SNS to send SMS messages, your Amazon Web Services account\
        \ is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment\
        \ for you to try Amazon SNS features without risking your reputation as an\
        \ SMS sender. While your Amazon Web Services account is in the SMS sandbox,\
        \ you can use all of the features of Amazon SNS. However, you can send SMS\
        \ messages only to verified destination phone numbers. For more information,\
        \ including how to move out of the sandbox to send messages without restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: GET_VerifySMSSandboxPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The destination phone number to verify.
        explode: true
        in: query
        name: PhoneNumber
        required: true
        schema:
          maxLength: 20
          pattern: "^(\\+[0-9]{8,}|[0-9]{0,9})$"
          type: string
        style: form
      - description: The OTP sent to the destination number from the <code>CreateSMSSandBoxPhoneNumber</code>
          call.
        explode: true
        in: query
        name: OneTimePassword
        required: true
        schema:
          description: String of Origination/Destination address including phone numbers
            and email addresses
          maxLength: 8
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - VerifySMSSandboxPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VerifySMSSandboxPhoneNumberResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VerificationException'
          description: VerificationException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: VerifySMSSandboxPhoneNumber
      x-accepts:
      - text/xml
    post:
      description: "<p>Verifies a destination phone number with a one-time password\
        \ (OTP) for the calling Amazon Web Services account.</p> <p>When you start\
        \ using Amazon SNS to send SMS messages, your Amazon Web Services account\
        \ is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment\
        \ for you to try Amazon SNS features without risking your reputation as an\
        \ SMS sender. While your Amazon Web Services account is in the SMS sandbox,\
        \ you can use all of the features of Amazon SNS. However, you can send SMS\
        \ messages only to verified destination phone numbers. For more information,\
        \ including how to move out of the sandbox to send messages without restrictions,\
        \ see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      operationId: POST_VerifySMSSandboxPhoneNumber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - VerifySMSSandboxPhoneNumber
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2010-03-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/VerifySMSSandboxPhoneNumberInput'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VerifySMSSandboxPhoneNumberResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
          description: AuthorizationErrorException
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VerificationException'
          description: VerificationException
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-aws-operation-name: VerifySMSSandboxPhoneNumber
      x-content-type: text/xml
      x-accepts:
      - text/xml
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    delegate:
      type: string
    action:
      type: string
    InvalidParameterException: {}
    InternalErrorException: {}
    AuthorizationErrorException: {}
    NotFoundException: {}
    CheckIfPhoneNumberIsOptedOutResponse:
      description: The response from the <code>CheckIfPhoneNumberIsOptedOut</code>
        action.
      properties:
        isOptedOut:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "<p>Indicates whether the phone number is opted out:</p>\
              \ <ul> <li> <p> <code>true</code> – The phone number is opted out, meaning\
              \ you cannot publish SMS messages to it.</p> </li> <li> <p> <code>false</code>\
              \ – The phone number is opted in, meaning you can publish SMS messages\
              \ to it.</p> </li> </ul>"
      type: object
    ThrottledException: {}
    ConfirmSubscriptionResponse:
      description: Response for ConfirmSubscriptions action.
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/subscriptionARN'
          - description: The ARN of the created subscription.
      type: object
    SubscriptionLimitExceededException: {}
    FilterPolicyLimitExceededException: {}
    CreatePlatformApplicationResponse:
      description: Response from CreatePlatformApplication action.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn is returned.
      type: object
    String:
      type: string
    CreateEndpointResponse:
      description: Response from CreateEndpoint action.
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: EndpointArn returned from CreateEndpoint action.
      type: object
    CreateSMSSandboxPhoneNumberResult:
      properties: {}
      type: object
    OptedOutException: {}
    UserErrorException: {}
    CreateTopicResponse:
      description: Response from CreateTopic action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The Amazon Resource Name (ARN) assigned to the created topic.
      type: object
    attributeValue:
      type: string
    Tag:
      description: The list of tags to be added to the specified topic.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The required key portion of the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The optional value portion of the tag.
      required:
      - Key
      - Value
      type: object
    TopicLimitExceededException: {}
    InvalidSecurityException: {}
    TagLimitExceededException: {}
    StaleTagException: {}
    TagPolicyException: {}
    ConcurrentAccessException: {}
    DeleteSMSSandboxPhoneNumberResult:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    GetDataProtectionPolicyResponse:
      properties:
        DataProtectionPolicy:
          allOf:
          - $ref: '#/components/schemas/attributeValue'
          - description: Retrieves the <code>DataProtectionPolicy</code> in JSON string
              format.
      type: object
    GetEndpointAttributesResponse:
      description: Response from GetEndpointAttributes of the EndpointArn.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: "<p>Attributes include the following:</p> <ul> <li> <p> <code>CustomUserData</code>\
              \ – arbitrary user data to associate with the endpoint. Amazon SNS does\
              \ not use this data. The data must be in UTF-8 format and less than\
              \ 2KB.</p> </li> <li> <p> <code>Enabled</code> – flag that enables/disables\
              \ delivery to the endpoint. Amazon SNS will set this to false when a\
              \ notification service indicates to Amazon SNS that the endpoint is\
              \ invalid. Users can set it back to true, typically after updating Token.</p>\
              \ </li> <li> <p> <code>Token</code> – device token, also referred to\
              \ as a registration id, for an app and mobile device. This is returned\
              \ from the notification service when an app and mobile device are registered\
              \ with the notification service.</p> <note> <p>The device token for\
              \ the iOS platform is returned in lowercase.</p> </note> </li> </ul>"
      type: object
    GetPlatformApplicationAttributesResponse:
      description: Response for GetPlatformApplicationAttributes action.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: <p>Attributes include the following:</p> <ul> <li> <p> <code>AppleCertificateExpiryDate</code>
              – The expiry date of the SSL certificate used to configure certificate-based
              authentication.</p> </li> <li> <p> <code>ApplePlatformTeamID</code>
              – The Apple developer account ID used to configure token-based authentication.</p>
              </li> <li> <p> <code>ApplePlatformBundleID</code> – The app identifier
              used to configure token-based authentication.</p> </li> <li> <p> <code>EventEndpointCreated</code>
              – Topic ARN to which EndpointCreated event notifications should be sent.</p>
              </li> <li> <p> <code>EventEndpointDeleted</code> – Topic ARN to which
              EndpointDeleted event notifications should be sent.</p> </li> <li> <p>
              <code>EventEndpointUpdated</code> – Topic ARN to which EndpointUpdate
              event notifications should be sent.</p> </li> <li> <p> <code>EventDeliveryFailure</code>
              – Topic ARN to which DeliveryFailure event notifications should be sent
              upon Direct Publish delivery failure (permanent) to one of the application's
              endpoints.</p> </li> </ul>
      type: object
    GetSMSAttributesResponse:
      description: The response from the <code>GetSMSAttributes</code> request.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: The SMS attribute names and their values.
      type: object
    GetSMSSandboxAccountStatusResult:
      properties:
        IsInSandbox:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether the calling Amazon Web Services account
              is in the SMS sandbox.
      required:
      - IsInSandbox
      type: object
    GetSubscriptionAttributesResponse:
      description: Response for GetSubscriptionAttributes action.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/SubscriptionAttributesMap'
          - description: "<p>A map of the subscription's attributes. Attributes in\
              \ this map include the following:</p> <ul> <li> <p> <code>ConfirmationWasAuthenticated</code>\
              \ – <code>true</code> if the subscription confirmation request was authenticated.</p>\
              \ </li> <li> <p> <code>DeliveryPolicy</code> – The JSON serialization\
              \ of the subscription's delivery policy.</p> </li> <li> <p> <code>EffectiveDeliveryPolicy</code>\
              \ – The JSON serialization of the effective delivery policy that takes\
              \ into account the topic delivery policy and account system defaults.</p>\
              \ </li> <li> <p> <code>FilterPolicy</code> – The filter policy JSON\
              \ that is assigned to the subscription. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-message-filtering.html\"\
              >Amazon SNS Message Filtering</a> in the <i>Amazon SNS Developer Guide</i>.</p>\
              \ </li> <li> <p> <code>FilterPolicyScope</code> – This attribute lets\
              \ you choose the filtering scope by using one of the following string\
              \ value types:</p> <ul> <li> <p> <code>MessageAttributes</code> (default)\
              \ – The filter is applied on the message attributes.</p> </li> <li>\
              \ <p> <code>MessageBody</code> – The filter is applied on the message\
              \ body.</p> </li> </ul> </li> <li> <p> <code>Owner</code> – The Amazon\
              \ Web Services account ID of the subscription's owner.</p> </li> <li>\
              \ <p> <code>PendingConfirmation</code> – <code>true</code> if the subscription\
              \ hasn't been confirmed. To confirm a pending subscription, call the\
              \ <code>ConfirmSubscription</code> action with a confirmation token.</p>\
              \ </li> <li> <p> <code>RawMessageDelivery</code> – <code>true</code>\
              \ if raw message delivery is enabled for the subscription. Raw messages\
              \ are free of JSON formatting and can be sent to HTTP/S and Amazon SQS\
              \ endpoints.</p> </li> <li> <p> <code>RedrivePolicy</code> – When specified,\
              \ sends undeliverable messages to the specified Amazon SQS dead-letter\
              \ queue. Messages that can't be delivered due to client errors (for\
              \ example, when the subscribed endpoint is unreachable) or server errors\
              \ (for example, when the service that powers the subscribed endpoint\
              \ becomes unavailable) are held in the dead-letter queue for further\
              \ analysis or reprocessing.</p> </li> <li> <p> <code>SubscriptionArn</code>\
              \ – The subscription's ARN.</p> </li> <li> <p> <code>TopicArn</code>\
              \ – The topic ARN that the subscription is associated with.</p> </li>\
              \ </ul> <p>The following attribute applies only to Amazon Kinesis Data\
              \ Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code>\
              \ – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission\
              \ to write to the Kinesis Data Firehose delivery stream</p> </li> <li>\
              \ <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying\
              \ a valid ARN for this attribute is required for Kinesis Data Firehose\
              \ delivery stream subscriptions. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\"\
              >Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon\
              \ SNS Developer Guide</i>.</p> </li> </ul>"
      type: object
    GetTopicAttributesResponse:
      description: Response for GetTopicAttributes action.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TopicAttributesMap'
          - description: "<p>A map of the topic's attributes. Attributes in this map\
              \ include the following:</p> <ul> <li> <p> <code>DeliveryPolicy</code>\
              \ – The JSON serialization of the topic's delivery policy.</p> </li>\
              \ <li> <p> <code>DisplayName</code> – The human-readable name used in\
              \ the <code>From</code> field for notifications to <code>email</code>\
              \ and <code>email-json</code> endpoints.</p> </li> <li> <p> <code>EffectiveDeliveryPolicy</code>\
              \ – The JSON serialization of the effective delivery policy, taking\
              \ system defaults into account.</p> </li> <li> <p> <code>Owner</code>\
              \ – The Amazon Web Services account ID of the topic's owner.</p> </li>\
              \ <li> <p> <code>Policy</code> – The JSON serialization of the topic's\
              \ access control policy.</p> </li> <li> <p> <code>SignatureVersion</code>\
              \ – The signature version corresponds to the hashing algorithm used\
              \ while creating the signature of the notifications, subscription confirmations,\
              \ or unsubscribe confirmation messages sent by Amazon SNS.</p> <ul>\
              \ <li> <p>By default, <code>SignatureVersion</code> is set to <b>1</b>.\
              \ The signature is a Base64-encoded <b>SHA1withRSA</b> signature.</p>\
              \ </li> <li> <p>When you set <code>SignatureVersion</code> to <b>2</b>.\
              \ Amazon SNS uses a Base64-encoded <b>SHA256withRSA</b> signature. </p>\
              \ <note> <p>If the API response does not include the <code>SignatureVersion</code>\
              \ attribute, it means that the <code>SignatureVersion</code> for the\
              \ topic has value <b>1</b>.</p> </note> </li> </ul> </li> <li> <p> <code>SubscriptionsConfirmed</code>\
              \ – The number of confirmed subscriptions for the topic.</p> </li> <li>\
              \ <p> <code>SubscriptionsDeleted</code> – The number of deleted subscriptions\
              \ for the topic.</p> </li> <li> <p> <code>SubscriptionsPending</code>\
              \ – The number of subscriptions pending confirmation for the topic.</p>\
              \ </li> <li> <p> <code>TopicArn</code> – The topic's ARN.</p> </li>\
              \ <li> <p> <code>TracingConfig</code> – Tracing mode of an Amazon SNS\
              \ topic. By default <code>TracingConfig</code> is set to <code>PassThrough</code>,\
              \ and the topic passes through the tracing header it receives from an\
              \ Amazon SNS publisher to its subscriptions. If set to <code>Active</code>,\
              \ Amazon SNS will vend X-Ray segment data to topic owner account if\
              \ the sampled flag in the tracing header is true. This is only supported\
              \ on standard topics.</p> </li> </ul> <p>The following attribute applies\
              \ only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\"\
              >server-side-encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code>\
              \ - The ID of an Amazon Web Services managed customer master key (CMK)\
              \ for Amazon SNS or a custom CMK. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\"\
              >Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
              >KeyId</a> in the <i>Key Management Service API Reference</i>.</p> </li>\
              \ </ul> <p>The following attributes apply only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\"\
              >FIFO topics</a>:</p> <ul> <li> <p> <code>FifoTopic</code> – When this\
              \ is set to <code>true</code>, a FIFO topic is created.</p> </li> <li>\
              \ <p> <code>ContentBasedDeduplication</code> – Enables content-based\
              \ deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code>\
              \ is set to <code>false</code>. If you create a FIFO topic and this\
              \ attribute is <code>false</code>, you must specify a value for the\
              \ <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\"\
              >Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code>\
              \ to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the\
              \ <code>MessageDeduplicationId</code> using the body of the message\
              \ (but not the attributes of the message).</p> <p>(Optional) To override\
              \ the generated value, you can specify a value for the <code>MessageDeduplicationId</code>\
              \ parameter for the <code>Publish</code> action.</p> </li> </ul> </li>\
              \ </ul>"
      type: object
    ListEndpointsByPlatformApplicationResponse:
      description: Response for ListEndpointsByPlatformApplication action.
      properties:
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/ListOfEndpoints'
          - description: Endpoints returned for ListEndpointsByPlatformApplication
              action.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: NextToken string is returned when calling ListEndpointsByPlatformApplication
              action if additional records are available after the first page results.
      type: object
    ListOriginationNumbersResult:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: A <code>NextToken</code> string is returned when you call
              the <code>ListOriginationNumbers</code> operation if additional pages
              of records are available.
        PhoneNumbers:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberInformationList'
          - description: A list of the calling account's verified and pending origination
              numbers.
      type: object
    ValidationException: {}
    ListPhoneNumbersOptedOutResponse:
      description: The response from the <code>ListPhoneNumbersOptedOut</code> action.
      properties:
        phoneNumbers:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberList'
          - description: "A list of phone numbers that are opted out of receiving\
              \ SMS messages. The list is paginated, and each page can contain up\
              \ to 100 phone numbers."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A <code>NextToken</code> string is returned when you call
              the <code>ListPhoneNumbersOptedOut</code> action if additional records
              are available after the first page of results.
      type: object
    ListPlatformApplicationsResponse:
      description: Response for ListPlatformApplications action.
      properties:
        PlatformApplications:
          allOf:
          - $ref: '#/components/schemas/ListOfPlatformApplications'
          - description: Platform applications returned when calling ListPlatformApplications
              action.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: NextToken string is returned when calling ListPlatformApplications
              action if additional records are available after the first page results.
      type: object
    ListSMSSandboxPhoneNumbersResult:
      properties:
        PhoneNumbers:
          allOf:
          - $ref: '#/components/schemas/SMSSandboxPhoneNumberList'
          - description: A list of the calling account's pending and verified phone
              numbers.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A <code>NextToken</code> string is returned when you call
              the <code>ListSMSSandboxPhoneNumbersInput</code> operation if additional
              pages of records are available.
      required:
      - PhoneNumbers
      type: object
    ListSubscriptionsResponse:
      description: Response for ListSubscriptions action
      properties:
        Subscriptions:
          allOf:
          - $ref: '#/components/schemas/SubscriptionsList'
          - description: A list of subscriptions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token to pass along to the next <code>ListSubscriptions</code>
              request. This element is returned if there are more subscriptions to
              retrieve.
      type: object
    ListSubscriptionsByTopicResponse:
      description: Response for ListSubscriptionsByTopic action.
      properties:
        Subscriptions:
          allOf:
          - $ref: '#/components/schemas/SubscriptionsList'
          - description: A list of subscriptions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token to pass along to the next <code>ListSubscriptionsByTopic</code>
              request. This element is returned if there are more subscriptions to
              retrieve.
      type: object
    ListTagsForResourceResponse:
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with the specified topic.
      type: object
    ListTopicsResponse:
      description: Response for ListTopics action.
      properties:
        Topics:
          allOf:
          - $ref: '#/components/schemas/TopicsList'
          - description: A list of topic ARNs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token to pass along to the next <code>ListTopics</code> request.
              This element is returned if there are additional topics to retrieve.
      type: object
    OptInPhoneNumberResponse:
      description: The response for the OptInPhoneNumber action.
      properties: {}
      type: object
    PublishResponse:
      description: Response for Publish action.
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/messageId'
          - description: "<p>Unique identifier assigned to the published message.</p>\
              \ <p>Length Constraint: Maximum 100 characters</p>"
        SequenceNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>This response element applies only to FIFO (first-in-first-out)\
              \ topics. </p> <p>The sequence number is a large, non-consecutive number\
              \ that Amazon SNS assigns to each message. The length of <code>SequenceNumber</code>\
              \ is 128 bits. <code>SequenceNumber</code> continues to increase for\
              \ each <code>MessageGroupId</code>.</p>"
      type: object
    MessageAttributeValue:
      description: "<p>The user-specified message attribute value. For string data\
        \ types, the value attribute has the same restrictions on the content as the\
        \ message body. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\"\
        >Publish</a>.</p> <p>Name, type, and value must not be empty or null. In addition,\
        \ the message body should not be empty or null. All parts of the message attribute,\
        \ including name, type, and value, are included in the message size restriction,\
        \ which is currently 256 KB (262,144 bytes). For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html\"\
        >Amazon SNS message attributes</a> and <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\"\
        >Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide.</i>\
        \ </p>"
      properties:
        DataType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Amazon SNS supports the following logical data types: String,\
              \ String.Array, Number, and Binary. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes\"\
              >Message Attribute Data Types</a>."
        StringValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Strings are Unicode with UTF8 binary encoding. For a list\
              \ of code values, see <a href=\"https://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\"\
              >ASCII Printable Characters</a>."
        BinaryValue:
          allOf:
          - $ref: '#/components/schemas/Binary'
          - description: "Binary type attributes can store any binary data, for example,\
              \ compressed data, encrypted data, or images."
      required:
      - DataType
      type: object
    InvalidParameterValueException: {}
    EndpointDisabledException: {}
    PlatformApplicationDisabledException: {}
    KMSDisabledException: {}
    KMSInvalidStateException: {}
    KMSNotFoundException: {}
    KMSOptInRequired: {}
    KMSThrottlingException: {}
    KMSAccessDeniedException: {}
    PublishBatchResponse:
      properties:
        Successful:
          allOf:
          - $ref: '#/components/schemas/PublishBatchResultEntryList'
          - description: A list of successful <code>PublishBatch</code> responses.
        Failed:
          allOf:
          - $ref: '#/components/schemas/BatchResultErrorEntryList'
          - description: 'A list of failed <code>PublishBatch</code> responses. '
      type: object
    PublishBatchRequestEntry:
      description: 'Contains the details of a single Amazon SNS message along with
        an <code>Id</code> that identifies a message within the batch. '
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>An identifier for the message in this batch.</p> <note>\
              \ <p>The <code>Ids</code> of a batch request must be unique within a\
              \ request. </p> <p>This identifier can have up to 80 characters. The\
              \ following characters are accepted: alphanumeric characters, hyphens(-),\
              \ and underscores (_). </p> </note>"
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: The body of the message.
        Subject:
          allOf:
          - $ref: '#/components/schemas/subject'
          - description: The subject of the batch message.
        MessageStructure:
          allOf:
          - $ref: '#/components/schemas/messageStructure'
          - description: "<p>Set <code>MessageStructure</code> to <code>json</code>\
              \ if you want to send a different message for each protocol. For example,\
              \ using one publish action, you can send a short message to your SMS\
              \ subscribers and a longer message to your email subscribers. If you\
              \ set <code>MessageStructure</code> to <code>json</code>, the value\
              \ of the <code>Message</code> parameter must: </p> <ul> <li> <p>be a\
              \ syntactically valid JSON object; and</p> </li> <li> <p>contain at\
              \ least a top-level JSON key of \"default\" with a value that is a string.</p>\
              \ </li> </ul> <p>You can define other top-level keys that define the\
              \ message you want to send to a specific transport protocol (e.g. http).\
              \ </p>"
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: "Each message attribute consists of a <code>Name</code>,\
              \ <code>Type</code>, and <code>Value</code>. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html\"\
              >Amazon SNS message attributes</a> in the Amazon SNS Developer Guide."
        MessageDeduplicationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
              \ topics.</p> <p>The token used for deduplication of messages within\
              \ a 5-minute minimum deduplication interval. If a message with a particular\
              \ <code>MessageDeduplicationId</code> is sent successfully, subsequent\
              \ messages with the same <code>MessageDeduplicationId</code> are accepted\
              \ successfully but aren't delivered.</p> <ul> <li> <p>Every message\
              \ must have a unique <code>MessageDeduplicationId</code>.</p> <ul> <li>\
              \ <p>You may provide a <code>MessageDeduplicationId</code> explicitly.</p>\
              \ </li> <li> <p>If you aren't able to provide a <code>MessageDeduplicationId</code>\
              \ and you enable <code>ContentBasedDeduplication</code> for your topic,\
              \ Amazon SNS uses a SHA-256 hash to generate the <code>MessageDeduplicationId</code>\
              \ using the body of the message (but not the attributes of the message).</p>\
              \ </li> <li> <p>If you don't provide a <code>MessageDeduplicationId</code>\
              \ and the topic doesn't have <code>ContentBasedDeduplication</code>\
              \ set, the action fails with an error.</p> </li> <li> <p>If the topic\
              \ has a <code>ContentBasedDeduplication</code> set, your <code>MessageDeduplicationId</code>\
              \ overrides the generated one. </p> </li> </ul> </li> <li> <p>When <code>ContentBasedDeduplication</code>\
              \ is in effect, messages with identical content sent within the deduplication\
              \ interval are treated as duplicates and only one copy of the message\
              \ is delivered.</p> </li> <li> <p>If you send one message with <code>ContentBasedDeduplication</code>\
              \ enabled, and then another message with a <code>MessageDeduplicationId</code>\
              \ that is the same as the one generated for the first <code>MessageDeduplicationId</code>,\
              \ the two messages are treated as duplicates and only one copy of the\
              \ message is delivered. </p> </li> </ul> <note> <p>The <code>MessageDeduplicationId</code>\
              \ is available to the consumer of the message (this can be useful for\
              \ troubleshooting delivery issues).</p> <p>If a message is sent successfully\
              \ but the acknowledgement is lost and the message is resent with the\
              \ same <code>MessageDeduplicationId</code> after the deduplication interval,\
              \ Amazon SNS can't detect duplicate messages. </p> <p>Amazon SNS continues\
              \ to keep track of the message deduplication ID even after the message\
              \ is received and deleted. </p> </note> <p>The length of <code>MessageDeduplicationId</code>\
              \ is 128 characters.</p> <p> <code>MessageDeduplicationId</code> can\
              \ contain alphanumeric characters <code>(a-z, A-Z, 0-9)</code> and punctuation\
              \ <code>(!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p>"
        MessageGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
              \ topics.</p> <p>The tag that specifies that a message belongs to a\
              \ specific message group. Messages that belong to the same message group\
              \ are processed in a FIFO manner (however, messages in different message\
              \ groups might be processed out of order). To interleave multiple ordered\
              \ streams within a single topic, use <code>MessageGroupId</code> values\
              \ (for example, session data for multiple users). In this scenario,\
              \ multiple consumers can process the topic, but the session data of\
              \ each user is processed in a FIFO fashion. </p> <p>You must associate\
              \ a non-empty <code>MessageGroupId</code> with a message. If you don't\
              \ provide a <code>MessageGroupId</code>, the action fails. </p> <p>The\
              \ length of <code>MessageGroupId</code> is 128 characters.</p> <p> <code>MessageGroupId</code>\
              \ can contain alphanumeric characters <code>(a-z, A-Z, 0-9)</code> and\
              \ punctuation <code>(!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p>\
              \ <important> <p> <code>MessageGroupId</code> is required for FIFO topics.\
              \ You can't use it for standard topics. </p> </important>"
      required:
      - Id
      - Message
      type: object
    BatchEntryIdsNotDistinctException: {}
    BatchRequestTooLongException: {}
    EmptyBatchRequestException: {}
    InvalidBatchEntryIdException: {}
    TooManyEntriesInBatchRequestException: {}
    SetSMSAttributesResponse:
      description: The response for the SetSMSAttributes action.
      properties: {}
      type: object
    SubscribeResponse:
      description: Response for Subscribe action.
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/subscriptionARN'
          - description: "The ARN of the subscription if it is confirmed, or the string\
              \ \"pending confirmation\" if the subscription requires confirmation.\
              \ However, if the API request parameter <code>ReturnSubscriptionArn</code>\
              \ is true, then the value is always the subscription ARN, even if the\
              \ subscription requires confirmation."
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    VerifySMSSandboxPhoneNumberResult:
      description: The destination phone number's verification status.
      properties: {}
      type: object
    VerificationException: {}
    ActionsList:
      items:
        $ref: '#/components/schemas/action'
      type: array
    topicARN:
      type: string
    label:
      type: string
    DelegatesList:
      items:
        $ref: '#/components/schemas/delegate'
      type: array
    AddPermissionInput:
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic whose access control policy you wish
              to modify.
        Label:
          allOf:
          - $ref: '#/components/schemas/label'
          - description: A unique identifier for the new policy statement.
        AWSAccountId:
          allOf:
          - $ref: '#/components/schemas/DelegatesList'
          - description: "The Amazon Web Services account IDs of the users (principals)\
              \ who will be given access to the specified actions. The users must\
              \ have Amazon Web Services account, but do not need to be signed up\
              \ for this service."
        ActionName:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          - description: "<p>The action you want to allow for the specified principal(s).</p>\
              \ <p>Valid values: Any Amazon SNS action name, for example <code>Publish</code>.</p>"
      required:
      - AWSAccountId
      - ActionName
      - Label
      - TopicArn
      title: AddPermissionInput
      type: object
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      type: string
    boolean:
      type: boolean
    BatchResultErrorEntry:
      description: Gives a detailed description of failed messages in the batch.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The <code>Id</code> of an entry in a batch request
        Code:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An error code representing why the action failed on this
              entry.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A message explaining why the action failed on this entry.
        SenderFault:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Specifies whether the error happened due to the caller of
              the batch API action.
      required:
      - Code
      - Id
      - SenderFault
      type: object
    BatchResultErrorEntryList:
      items:
        $ref: '#/components/schemas/BatchResultErrorEntry'
      type: array
    Binary:
      type: string
    PhoneNumber:
      type: string
    CheckIfPhoneNumberIsOptedOutInput:
      description: The input for the <code>CheckIfPhoneNumberIsOptedOut</code> action.
      properties:
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          - description: The phone number for which you want to check the opt out
              status.
      required:
      - phoneNumber
      title: CheckIfPhoneNumberIsOptedOutInput
      type: object
    token:
      type: string
    authenticateOnUnsubscribe:
      type: string
    ConfirmSubscriptionInput:
      description: Input for ConfirmSubscription action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic for which you wish to confirm a subscription.
        Token:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: Short-lived token sent to an endpoint during the <code>Subscribe</code>
              action.
        AuthenticateOnUnsubscribe:
          allOf:
          - $ref: '#/components/schemas/authenticateOnUnsubscribe'
          - description: "Disallows unauthenticated unsubscribes of the subscription.\
              \ If the value of this parameter is <code>true</code> and the request\
              \ has an Amazon Web Services signature, then only the topic owner and\
              \ the subscription owner can unsubscribe the endpoint. The unsubscribe\
              \ action requires Amazon Web Services authentication. "
      required:
      - Token
      - TopicArn
      title: ConfirmSubscriptionInput
      type: object
    subscriptionARN:
      type: string
    MapStringToString:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    CreatePlatformApplicationInput:
      description: Input for CreatePlatformApplication action.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Application names must be made up of only uppercase and\
              \ lowercase ASCII letters, numbers, underscores, hyphens, and periods,\
              \ and must be between 1 and 256 characters long."
        Platform:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The following platforms are supported: ADM (Amazon Device\
              \ Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX,\
              \ and GCM (Firebase Cloud Messaging)."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: "For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\"\
              >SetPlatformApplicationAttributes</a>."
      required:
      - Attributes
      - Name
      - Platform
      title: CreatePlatformApplicationInput
      type: object
    CreatePlatformEndpointInput:
      description: Input for CreatePlatformEndpoint action.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn returned from CreatePlatformApplication
              is used to create a an endpoint.
        Token:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Unique identifier created by the notification service for\
              \ an app on a device. The specific name for Token will vary, depending\
              \ on which notification service is being used. For example, when using\
              \ APNS as the notification service, you need the device token. Alternatively,\
              \ when using GCM (Firebase Cloud Messaging) or ADM, the device token\
              \ equivalent is called the registration ID."
        CustomUserData:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Arbitrary user data to associate with the endpoint. Amazon
              SNS does not use this data. The data must be in UTF-8 format and less
              than 2KB.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: "For a list of attributes, see <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\"\
              >SetEndpointAttributes</a>."
      required:
      - PlatformApplicationArn
      - Token
      title: CreatePlatformEndpointInput
      type: object
    PhoneNumberString:
      maxLength: 20
      pattern: "^(\\+[0-9]{8,}|[0-9]{0,9})$"
      type: string
    LanguageCodeString:
      description: Supported language code for sending OTP message
      enum:
      - en-US
      - en-GB
      - es-419
      - es-ES
      - de-DE
      - fr-CA
      - fr-FR
      - it-IT
      - ja-JP
      - pt-BR
      - kr-KR
      - zh-CN
      - zh-TW
      type: string
    CreateSMSSandboxPhoneNumberInput:
      properties:
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberString'
          - description: "The destination phone number to verify. On verification,\
              \ Amazon SNS adds this phone number to the list of verified phone numbers\
              \ that you can send SMS messages to."
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/LanguageCodeString'
          - description: The language to use for sending the OTP. The default value
              is <code>en-US</code>.
      required:
      - PhoneNumber
      title: CreateSMSSandboxPhoneNumberInput
      type: object
    topicName:
      type: string
    TopicAttributesMap:
      additionalProperties:
        $ref: '#/components/schemas/attributeValue'
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    CreateTopicInput:
      description: Input for CreateTopic action.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/topicName'
          - description: "<p>The name of the topic you want to create.</p> <p>Constraints:\
              \ Topic names must be made up of only uppercase and lowercase ASCII\
              \ letters, numbers, underscores, and hyphens, and must be between 1\
              \ and 256 characters long.</p> <p>For a FIFO (first-in-first-out) topic,\
              \ the name must end with the <code>.fifo</code> suffix. </p>"
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TopicAttributesMap'
          - description: "<p>A map of attributes with their corresponding values.</p>\
              \ <p>The following lists the names, descriptions, and values of the\
              \ special request parameters that the <code>CreateTopic</code> action\
              \ uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that\
              \ defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p>\
              \ </li> <li> <p> <code>DisplayName</code> – The display name to use\
              \ for a topic with SMS subscriptions.</p> </li> <li> <p> <code>FifoTopic</code>\
              \ – Set to true to create a FIFO topic.</p> </li> <li> <p> <code>Policy</code>\
              \ – The policy that defines who can access your topic. By default, only\
              \ the topic owner can publish or subscribe to the topic.</p> </li> <li>\
              \ <p> <code>SignatureVersion</code> – The signature version corresponds\
              \ to the hashing algorithm used while creating the signature of the\
              \ notifications, subscription confirmations, or unsubscribe confirmation\
              \ messages sent by Amazon SNS. By default, <code>SignatureVersion</code>\
              \ is set to <code>1</code>.</p> </li> <li> <p> <code>TracingConfig</code>\
              \ – Tracing mode of an Amazon SNS topic. By default <code>TracingConfig</code>\
              \ is set to <code>PassThrough</code>, and the topic passes through the\
              \ tracing header it receives from an Amazon SNS publisher to its subscriptions.\
              \ If set to <code>Active</code>, Amazon SNS will vend X-Ray segment\
              \ data to topic owner account if the sampled flag in the tracing header\
              \ is true. This is only supported on standard topics.</p> </li> </ul>\
              \ <p>The following attribute applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\"\
              >server-side encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code>\
              \ – The ID of an Amazon Web Services managed customer master key (CMK)\
              \ for Amazon SNS or a custom CMK. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\"\
              >Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
              >KeyId</a> in the <i>Key Management Service API Reference</i>. </p>\
              \ </li> </ul> <p>The following attributes apply only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\"\
              >FIFO topics</a>:</p> <ul> <li> <p> <code>FifoTopic</code> – When this\
              \ is set to <code>true</code>, a FIFO topic is created.</p> </li> <li>\
              \ <p> <code>ContentBasedDeduplication</code> – Enables content-based\
              \ deduplication for FIFO topics.</p> <ul> <li> <p>By default, <code>ContentBasedDeduplication</code>\
              \ is set to <code>false</code>. If you create a FIFO topic and this\
              \ attribute is <code>false</code>, you must specify a value for the\
              \ <code>MessageDeduplicationId</code> parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\"\
              >Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code>\
              \ to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the\
              \ <code>MessageDeduplicationId</code> using the body of the message\
              \ (but not the attributes of the message).</p> <p>(Optional) To override\
              \ the generated value, you can specify a value for the <code>MessageDeduplicationId</code>\
              \ parameter for the <code>Publish</code> action.</p> </li> </ul> </li>\
              \ </ul>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>The list of tags to add to a new topic.</p> <note> <p>To\
              \ be able to tag a topic on creation, you must have the <code>sns:CreateTopic</code>\
              \ and <code>sns:TagResource</code> permissions.</p> </note>"
        DataProtectionPolicy:
          allOf:
          - $ref: '#/components/schemas/attributeValue'
          - description: "<p>The body of the policy document you want to use for this\
              \ topic.</p> <p>You can only add one policy per topic.</p> <p>The policy\
              \ must be in JSON string format.</p> <p>Length Constraints: Maximum\
              \ length of 30,720.</p>"
      required:
      - Name
      title: CreateTopicInput
      type: object
    DeleteEndpointInput:
      description: Input for DeleteEndpoint action.
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: EndpointArn of endpoint to delete.
      required:
      - EndpointArn
      title: DeleteEndpointInput
      type: object
    DeletePlatformApplicationInput:
      description: Input for DeletePlatformApplication action.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn of platform application object to
              delete.
      required:
      - PlatformApplicationArn
      title: DeletePlatformApplicationInput
      type: object
    DeleteSMSSandboxPhoneNumberInput:
      properties:
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberString'
          - description: The destination phone number to delete.
      required:
      - PhoneNumber
      title: DeleteSMSSandboxPhoneNumberInput
      type: object
    DeleteTopicInput:
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic you want to delete.
      required:
      - TopicArn
      title: DeleteTopicInput
      type: object
    Endpoint:
      description: The endpoint for mobile app and device.
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The <code>EndpointArn</code> for mobile app and device.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: Attributes for endpoint.
      type: object
    GetDataProtectionPolicyInput:
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: "<p>The ARN of the topic whose <code>DataProtectionPolicy</code>\
              \ you want to get.</p> <p>For more information about ARNs, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the Amazon Web Services General\
              \ Reference.</p>"
      required:
      - ResourceArn
      title: GetDataProtectionPolicyInput
      type: object
    GetEndpointAttributesInput:
      description: Input for GetEndpointAttributes action.
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: EndpointArn for GetEndpointAttributes input.
      required:
      - EndpointArn
      title: GetEndpointAttributesInput
      type: object
    GetPlatformApplicationAttributesInput:
      description: Input for GetPlatformApplicationAttributes action.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn for GetPlatformApplicationAttributesInput.
      required:
      - PlatformApplicationArn
      title: GetPlatformApplicationAttributesInput
      type: object
    ListString:
      items:
        $ref: '#/components/schemas/String'
      type: array
    GetSMSAttributesInput:
      description: The input for the <code>GetSMSAttributes</code> request.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/ListString'
          - description: "<p>A list of the individual attribute names, such as <code>MonthlySpendLimit</code>,\
              \ for which you want values.</p> <p>For all attribute names, see <a\
              \ href=\"https://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html\"\
              >SetSMSAttributes</a>.</p> <p>If you don't use this parameter, Amazon\
              \ SNS returns all SMS attributes.</p>"
      title: GetSMSAttributesInput
      type: object
    GetSMSSandboxAccountStatusInput:
      properties: {}
      title: GetSMSSandboxAccountStatusInput
      type: object
    GetSubscriptionAttributesInput:
      description: Input for GetSubscriptionAttributes.
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/subscriptionARN'
          - description: The ARN of the subscription whose properties you want to
              get.
      required:
      - SubscriptionArn
      title: GetSubscriptionAttributesInput
      type: object
    SubscriptionAttributesMap:
      additionalProperties:
        $ref: '#/components/schemas/attributeValue'
      type: object
    GetTopicAttributesInput:
      description: Input for GetTopicAttributes action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic whose properties you want to get.
      required:
      - TopicArn
      title: GetTopicAttributesInput
      type: object
    Iso2CountryCode:
      description: "The two-character code, in ISO 3166-1 alpha-2 format, for the\
        \ country or region. For example, GB or US."
      maxLength: 2
      pattern: "^[A-Za-z]{2}$"
      type: string
    ListEndpointsByPlatformApplicationInput:
      description: Input for ListEndpointsByPlatformApplication action.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
              action.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: NextToken string is used when calling ListEndpointsByPlatformApplication
              action to retrieve additional records that are available after the first
              page results.
      required:
      - PlatformApplicationArn
      title: ListEndpointsByPlatformApplicationInput
      type: object
    ListOfEndpoints:
      items:
        $ref: '#/components/schemas/Endpoint'
      type: array
    PlatformApplication:
      description: Platform application object.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn for platform application object.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: Attributes for platform application object.
      type: object
    ListOfPlatformApplications:
      items:
        $ref: '#/components/schemas/PlatformApplication'
      type: array
    nextToken:
      type: string
    MaxItemsListOriginationNumbers:
      maximum: 30
      minimum: 1
      type: integer
    ListOriginationNumbersRequest:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token that the previous <code>ListOriginationNumbers</code>
              request returns.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxItemsListOriginationNumbers'
          - description: The maximum number of origination numbers to return.
      title: ListOriginationNumbersRequest
      type: object
    PhoneNumberInformationList:
      description: List of customer owned phone numbers.
      items:
        $ref: '#/components/schemas/PhoneNumberInformation'
      type: array
    string:
      type: string
    ListPhoneNumbersOptedOutInput:
      description: The input for the <code>ListPhoneNumbersOptedOut</code> action.
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A <code>NextToken</code> string is used when you call the
              <code>ListPhoneNumbersOptedOut</code> action to retrieve additional
              records that are available after the first page of results.
      title: ListPhoneNumbersOptedOutInput
      type: object
    PhoneNumberList:
      items:
        $ref: '#/components/schemas/PhoneNumber'
      type: array
    ListPlatformApplicationsInput:
      description: Input for ListPlatformApplications action.
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: NextToken string is used when calling ListPlatformApplications
              action to retrieve additional records that are available after the first
              page results.
      title: ListPlatformApplicationsInput
      type: object
    MaxItems:
      maximum: 100
      minimum: 1
      type: integer
    ListSMSSandboxPhoneNumbersInput:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token that the previous <code>ListSMSSandboxPhoneNumbersInput</code>
              request returns.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          - description: The maximum number of phone numbers to return.
      title: ListSMSSandboxPhoneNumbersInput
      type: object
    SMSSandboxPhoneNumberList:
      items:
        $ref: '#/components/schemas/SMSSandboxPhoneNumber'
      type: array
    ListSubscriptionsByTopicInput:
      description: Input for ListSubscriptionsByTopic action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic for which you wish to find subscriptions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token returned by the previous <code>ListSubscriptionsByTopic</code>
              request.
      required:
      - TopicArn
      title: ListSubscriptionsByTopicInput
      type: object
    SubscriptionsList:
      items:
        $ref: '#/components/schemas/Subscription'
      type: array
    ListSubscriptionsInput:
      description: Input for ListSubscriptions action.
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token returned by the previous <code>ListSubscriptions</code>
              request.
      title: ListSubscriptionsInput
      type: object
    ListTagsForResourceRequest:
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the topic for which to list tags.
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ListTopicsInput:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/nextToken'
          - description: Token returned by the previous <code>ListTopics</code> request.
      title: ListTopicsInput
      type: object
    TopicsList:
      items:
        $ref: '#/components/schemas/Topic'
      type: array
    MessageAttributeMap:
      additionalProperties:
        $ref: '#/components/schemas/MessageAttributeValue'
      type: object
    NumberCapability:
      description: Enum listing out all supported number capabilities.
      enum:
      - SMS
      - MMS
      - VOICE
      type: string
    NumberCapabilityList:
      description: "List of number capability (SMS,MMS,Voice)."
      items:
        $ref: '#/components/schemas/NumberCapability'
      type: array
    OTPCode:
      description: String of Origination/Destination address including phone numbers
        and email addresses
      maxLength: 8
      minLength: 5
      pattern: "^[0-9]+$"
      type: string
    OptInPhoneNumberInput:
      description: Input for the OptInPhoneNumber action.
      properties:
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          - description: The phone number to opt in. Use E.164 format.
      required:
      - phoneNumber
      title: OptInPhoneNumberInput
      type: object
    Timestamp:
      format: date-time
      type: string
    RouteType:
      description: "Enum listing out all supported route types. The following enum\
        \ values are supported. 1. Transactional : Non-marketing traffic 2. Promotional\
        \ : Marketing 3. Premium : Premium routes for OTP delivery to the carriers"
      enum:
      - Transactional
      - Promotional
      - Premium
      type: string
    PhoneNumberInformation:
      description: A list of phone numbers and their metadata.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the phone number was created.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The phone number.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the phone number.
        Iso2CountryCode:
          allOf:
          - $ref: '#/components/schemas/Iso2CountryCode'
          - description: "The two-character code for the country or region, in ISO\
              \ 3166-1 alpha-2 format."
        RouteType:
          allOf:
          - $ref: '#/components/schemas/RouteType'
          - description: The list of supported routes.
        NumberCapabilities:
          allOf:
          - $ref: '#/components/schemas/NumberCapabilityList'
          - description: The capabilities of each phone number.
      type: object
    PublishBatchRequestEntryList:
      items:
        $ref: '#/components/schemas/PublishBatchRequestEntry'
      type: array
    PublishBatchInput:
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The Amazon resource name (ARN) of the topic you want to batch
              publish to.
        PublishBatchRequestEntries:
          allOf:
          - $ref: '#/components/schemas/PublishBatchRequestEntryList'
          - description: A list of <code>PublishBatch</code> request entries to be
              sent to the SNS topic.
      required:
      - PublishBatchRequestEntries
      - TopicArn
      title: PublishBatchInput
      type: object
    message:
      type: string
    subject:
      type: string
    messageStructure:
      type: string
    PublishBatchResultEntryList:
      items:
        $ref: '#/components/schemas/PublishBatchResultEntry'
      type: array
    messageId:
      type: string
    PublishBatchResultEntry:
      description: Encloses data related to a successful message in a batch request
        for topic.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The <code>Id</code> of an entry in a batch request.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/messageId'
          - description: An identifier for the message.
        SequenceNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
              \ topics.</p> <p>The large, non-consecutive number that Amazon SNS assigns\
              \ to each message.</p> <p>The length of <code>SequenceNumber</code>\
              \ is 128 bits. <code>SequenceNumber</code> continues to increase for\
              \ a particular <code>MessageGroupId</code>.</p>"
      type: object
    PublishInput:
      description: Input for Publish action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: "<p>The topic you want to publish to.</p> <p>If you don't\
              \ specify a value for the <code>TopicArn</code> parameter, you must\
              \ specify a value for the <code>PhoneNumber</code> or <code>TargetArn</code>\
              \ parameters.</p>"
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If you don't specify a value for the <code>TargetArn</code>\
              \ parameter, you must specify a value for the <code>PhoneNumber</code>\
              \ or <code>TopicArn</code> parameters."
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The phone number to which you want to deliver an SMS\
              \ message. Use E.164 format.</p> <p>If you don't specify a value for\
              \ the <code>PhoneNumber</code> parameter, you must specify a value for\
              \ the <code>TargetArn</code> or <code>TopicArn</code> parameters.</p>"
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: "<p>The message you want to send.</p> <p>If you are publishing\
              \ to a topic and you want to send the same message to all transport\
              \ protocols, include the text of the message as a String value. If you\
              \ want to send different messages for each transport protocol, set the\
              \ value of the <code>MessageStructure</code> parameter to <code>json</code>\
              \ and use a JSON object for the <code>Message</code> parameter. </p>\
              \ <p/> <p>Constraints:</p> <ul> <li> <p>With the exception of SMS, messages\
              \ must be UTF-8 encoded strings and at most 256 KB in size (262,144\
              \ bytes, not 262,144 characters).</p> </li> <li> <p>For SMS, each message\
              \ can contain up to 140 characters. This character limit depends on\
              \ the encoding schema. For example, an SMS message can contain 160 GSM\
              \ characters, 140 ASCII characters, or 70 UCS-2 characters.</p> <p>If\
              \ you publish a message that exceeds this size limit, Amazon SNS sends\
              \ the message as multiple messages, each fitting within the size limit.\
              \ Messages aren't truncated mid-word but are cut off at whole-word boundaries.</p>\
              \ <p>The total size limit for a single SMS <code>Publish</code> action\
              \ is 1,600 characters.</p> </li> </ul> <p>JSON-specific constraints:</p>\
              \ <ul> <li> <p>Keys in the JSON object that correspond to supported\
              \ transport protocols must have simple JSON string values.</p> </li>\
              \ <li> <p>The values will be parsed (unescaped) before they are used\
              \ in outgoing messages.</p> </li> <li> <p>Outbound notifications are\
              \ JSON encoded (meaning that the characters will be reescaped for sending).</p>\
              \ </li> <li> <p>Values have a minimum length of 0 (the empty string,\
              \ \"\", is allowed).</p> </li> <li> <p>Values have a maximum length\
              \ bounded by the overall message size (so, including multiple protocols\
              \ may limit message sizes).</p> </li> <li> <p>Non-string values will\
              \ cause the key to be ignored.</p> </li> <li> <p>Keys that do not correspond\
              \ to supported transport protocols are ignored.</p> </li> <li> <p>Duplicate\
              \ keys are not allowed.</p> </li> <li> <p>Failure to parse or validate\
              \ any key or value in the message will cause the <code>Publish</code>\
              \ call to return an error (no partial delivery).</p> </li> </ul>"
        Subject:
          allOf:
          - $ref: '#/components/schemas/subject'
          - description: "<p>Optional parameter to be used as the \"Subject\" line\
              \ when the message is delivered to email endpoints. This field will\
              \ also be included, if present, in the standard JSON messages delivered\
              \ to other endpoints.</p> <p>Constraints: Subjects must be ASCII text\
              \ that begins with a letter, number, or punctuation mark; must not include\
              \ line breaks or control characters; and must be less than 100 characters\
              \ long.</p>"
        MessageStructure:
          allOf:
          - $ref: '#/components/schemas/messageStructure'
          - description: "<p>Set <code>MessageStructure</code> to <code>json</code>\
              \ if you want to send a different message for each protocol. For example,\
              \ using one publish action, you can send a short message to your SMS\
              \ subscribers and a longer message to your email subscribers. If you\
              \ set <code>MessageStructure</code> to <code>json</code>, the value\
              \ of the <code>Message</code> parameter must: </p> <ul> <li> <p>be a\
              \ syntactically valid JSON object; and</p> </li> <li> <p>contain at\
              \ least a top-level JSON key of \"default\" with a value that is a string.</p>\
              \ </li> </ul> <p>You can define other top-level keys that define the\
              \ message you want to send to a specific transport protocol (e.g., \"\
              http\").</p> <p>Valid value: <code>json</code> </p>"
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: Message attributes for Publish action.
        MessageDeduplicationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
              \ topics. The <code>MessageDeduplicationId</code> can contain up to\
              \ 128 alphanumeric characters <code>(a-z, A-Z, 0-9)</code> and punctuation\
              \ <code>(!\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>Every\
              \ message must have a unique <code>MessageDeduplicationId</code>, which\
              \ is a token used for deduplication of sent messages. If a message with\
              \ a particular <code>MessageDeduplicationId</code> is sent successfully,\
              \ any message sent with the same <code>MessageDeduplicationId</code>\
              \ during the 5-minute deduplication interval is treated as a duplicate.\
              \ </p> <p>If the topic has <code>ContentBasedDeduplication</code> set,\
              \ the system generates a <code>MessageDeduplicationId</code> based on\
              \ the contents of the message. Your <code>MessageDeduplicationId</code>\
              \ overrides the generated one.</p>"
        MessageGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>This parameter applies only to FIFO (first-in-first-out)\
              \ topics. The <code>MessageGroupId</code> can contain up to 128 alphanumeric\
              \ characters <code>(a-z, A-Z, 0-9)</code> and punctuation <code>(!\"\
              #$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~)</code>.</p> <p>The <code>MessageGroupId</code>\
              \ is a tag that specifies that a message belongs to a specific message\
              \ group. Messages that belong to the same message group are processed\
              \ in a FIFO manner (however, messages in different message groups might\
              \ be processed out of order). Every message must include a <code>MessageGroupId</code>.</p>"
      required:
      - Message
      title: PublishInput
      type: object
    PutDataProtectionPolicyInput:
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: "<p>The ARN of the topic whose <code>DataProtectionPolicy</code>\
              \ you want to add or update.</p> <p>For more information about ARNs,\
              \ see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the Amazon Web Services General\
              \ Reference.</p>"
        DataProtectionPolicy:
          allOf:
          - $ref: '#/components/schemas/attributeValue'
          - description: "<p>The JSON serialization of the topic's <code>DataProtectionPolicy</code>.</p>\
              \ <p>The <code>DataProtectionPolicy</code> must be in JSON string format.</p>\
              \ <p>Length Constraints: Maximum length of 30,720.</p>"
      required:
      - DataProtectionPolicy
      - ResourceArn
      title: PutDataProtectionPolicyInput
      type: object
    RemovePermissionInput:
      description: Input for RemovePermission action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic whose access control policy you wish
              to modify.
        Label:
          allOf:
          - $ref: '#/components/schemas/label'
          - description: The unique label of the statement you want to remove.
      required:
      - Label
      - TopicArn
      title: RemovePermissionInput
      type: object
    SMSSandboxPhoneNumberVerificationStatus:
      description: "Enum listing out all supported destination phone number verification\
        \ statuses. The following enum values are supported. 1. PENDING : The destination\
        \ phone number is pending verification. 2. VERIFIED : The destination phone\
        \ number is verified."
      enum:
      - Pending
      - Verified
      type: string
    SMSSandboxPhoneNumber:
      description: "<p>A verified or pending destination phone number in the SMS sandbox.</p>\
        \ <p>When you start using Amazon SNS to send SMS messages, your Amazon Web\
        \ Services account is in the <i>SMS sandbox</i>. The SMS sandbox provides\
        \ a safe environment for you to try Amazon SNS features without risking your\
        \ reputation as an SMS sender. While your Amazon Web Services account is in\
        \ the SMS sandbox, you can use all of the features of Amazon SNS. However,\
        \ you can send SMS messages only to verified destination phone numbers. For\
        \ more information, including how to move out of the sandbox to send messages\
        \ without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\"\
        >SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      properties:
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberString'
          - description: The destination phone number.
        Status:
          allOf:
          - $ref: '#/components/schemas/SMSSandboxPhoneNumberVerificationStatus'
          - description: The destination phone number's verification status.
      type: object
    SetEndpointAttributesInput:
      description: Input for SetEndpointAttributes action.
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: EndpointArn used for SetEndpointAttributes action.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: "<p>A map of the endpoint attributes. Attributes in this\
              \ map include the following:</p> <ul> <li> <p> <code>CustomUserData</code>\
              \ – arbitrary user data to associate with the endpoint. Amazon SNS does\
              \ not use this data. The data must be in UTF-8 format and less than\
              \ 2KB.</p> </li> <li> <p> <code>Enabled</code> – flag that enables/disables\
              \ delivery to the endpoint. Amazon SNS will set this to false when a\
              \ notification service indicates to Amazon SNS that the endpoint is\
              \ invalid. Users can set it back to true, typically after updating Token.</p>\
              \ </li> <li> <p> <code>Token</code> – device token, also referred to\
              \ as a registration id, for an app and mobile device. This is returned\
              \ from the notification service when an app and mobile device are registered\
              \ with the notification service.</p> </li> </ul>"
      required:
      - Attributes
      - EndpointArn
      title: SetEndpointAttributesInput
      type: object
    SetPlatformApplicationAttributesInput:
      description: Input for SetPlatformApplicationAttributes action.
      properties:
        PlatformApplicationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: PlatformApplicationArn for SetPlatformApplicationAttributes
              action.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: "<p>A map of the platform application attributes. Attributes\
              \ in this map include the following:</p> <ul> <li> <p> <code>PlatformCredential</code>\
              \ – The credential received from the notification service.</p> <ul>\
              \ <li> <p>For ADM, <code>PlatformCredential</code>is client secret.</p>\
              \ </li> <li> <p>For Apple Services using certificate credentials, <code>PlatformCredential</code>\
              \ is private key.</p> </li> <li> <p>For Apple Services using token credentials,\
              \ <code>PlatformCredential</code> is signing key.</p> </li> <li> <p>For\
              \ GCM (Firebase Cloud Messaging), <code>PlatformCredential</code> is\
              \ API key. </p> </li> </ul> </li> </ul> <ul> <li> <p> <code>PlatformPrincipal</code>\
              \ – The principal received from the notification service.</p> <ul> <li>\
              \ <p>For ADM, <code>PlatformPrincipal</code>is client id.</p> </li>\
              \ <li> <p>For Apple Services using certificate credentials, <code>PlatformPrincipal</code>\
              \ is SSL certificate.</p> </li> <li> <p>For Apple Services using token\
              \ credentials, <code>PlatformPrincipal</code> is signing key ID.</p>\
              \ </li> <li> <p>For GCM (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code>.\
              \ </p> </li> </ul> </li> </ul> <ul> <li> <p> <code>EventEndpointCreated</code>\
              \ – Topic ARN to which <code>EndpointCreated</code> event notifications\
              \ are sent.</p> </li> <li> <p> <code>EventEndpointDeleted</code> – Topic\
              \ ARN to which <code>EndpointDeleted</code> event notifications are\
              \ sent.</p> </li> <li> <p> <code>EventEndpointUpdated</code> – Topic\
              \ ARN to which <code>EndpointUpdate</code> event notifications are sent.</p>\
              \ </li> <li> <p> <code>EventDeliveryFailure</code> – Topic ARN to which\
              \ <code>DeliveryFailure</code> event notifications are sent upon Direct\
              \ Publish delivery failure (permanent) to one of the application's endpoints.</p>\
              \ </li> <li> <p> <code>SuccessFeedbackRoleArn</code> – IAM role ARN\
              \ used to give Amazon SNS write access to use CloudWatch Logs on your\
              \ behalf.</p> </li> <li> <p> <code>FailureFeedbackRoleArn</code> – IAM\
              \ role ARN used to give Amazon SNS write access to use CloudWatch Logs\
              \ on your behalf.</p> </li> <li> <p> <code>SuccessFeedbackSampleRate</code>\
              \ – Sample rate percentage (0-100) of successfully delivered messages.</p>\
              \ </li> </ul> <p>The following attributes only apply to <code>APNs</code>\
              \ token-based authentication:</p> <ul> <li> <p> <code>ApplePlatformTeamID</code>\
              \ – The identifier that's assigned to your Apple developer account team.</p>\
              \ </li> <li> <p> <code>ApplePlatformBundleID</code> – The bundle identifier\
              \ that's assigned to your iOS app.</p> </li> </ul>"
      required:
      - Attributes
      - PlatformApplicationArn
      title: SetPlatformApplicationAttributesInput
      type: object
    SetSMSAttributesInput:
      description: The input for the SetSMSAttributes action.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/MapStringToString'
          - description: "<p>The default settings for sending SMS messages from your\
              \ Amazon Web Services account. You can set values for the following\
              \ attribute names:</p> <p> <code>MonthlySpendLimit</code> – The maximum\
              \ amount in USD that you are willing to spend each month to send SMS\
              \ messages. When Amazon SNS determines that sending an SMS message would\
              \ incur a cost that exceeds this limit, it stops sending SMS messages\
              \ within minutes.</p> <important> <p>Amazon SNS stops sending SMS messages\
              \ within minutes of the limit being crossed. During that interval, if\
              \ you continue to send SMS messages, you will incur costs that exceed\
              \ your limit.</p> </important> <p>By default, the spend limit is set\
              \ to the maximum allowed by Amazon SNS. If you want to raise the limit,\
              \ submit an <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-sns\"\
              >SNS Limit Increase case</a>. For <b>New limit value</b>, enter your\
              \ desired monthly spend limit. In the <b>Use Case Description</b> field,\
              \ explain that you are requesting an SMS monthly spend limit increase.</p>\
              \ <p> <code>DeliveryStatusIAMRole</code> – The ARN of the IAM role that\
              \ allows Amazon SNS to write logs about SMS deliveries in CloudWatch\
              \ Logs. For each SMS message that you send, Amazon SNS writes a log\
              \ that includes the message price, the success or failure status, the\
              \ reason for failure (if the message failed), the message dwell time,\
              \ and other information.</p> <p> <code>DeliveryStatusSuccessSamplingRate</code>\
              \ – The percentage of successful SMS deliveries for which Amazon SNS\
              \ will write logs in CloudWatch Logs. The value can be an integer from\
              \ 0 - 100. For example, to write logs only for failed deliveries, set\
              \ this value to <code>0</code>. To write logs for 10% of your successful\
              \ deliveries, set it to <code>10</code>.</p> <p> <code>DefaultSenderID</code>\
              \ – A string, such as your business brand, that is displayed as the\
              \ sender on the receiving device. Support for sender IDs varies by country.\
              \ The sender ID can be 1 - 11 alphanumeric characters, and it must contain\
              \ at least one letter.</p> <p> <code>DefaultSMSType</code> – The type\
              \ of SMS message that you will send by default. You can assign the following\
              \ values:</p> <ul> <li> <p> <code>Promotional</code> – (Default) Noncritical\
              \ messages, such as marketing messages. Amazon SNS optimizes the message\
              \ delivery to incur the lowest cost.</p> </li> <li> <p> <code>Transactional</code>\
              \ – Critical messages that support customer transactions, such as one-time\
              \ passcodes for multi-factor authentication. Amazon SNS optimizes the\
              \ message delivery to achieve the highest reliability.</p> </li> </ul>\
              \ <p> <code>UsageReportS3Bucket</code> – The name of the Amazon S3 bucket\
              \ to receive daily SMS usage reports from Amazon SNS. Each day, Amazon\
              \ SNS will deliver a usage report as a CSV file to the bucket. The report\
              \ includes the following information for each SMS message that was successfully\
              \ delivered by your Amazon Web Services account:</p> <ul> <li> <p>Time\
              \ that the message was published (in UTC)</p> </li> <li> <p>Message\
              \ ID</p> </li> <li> <p>Destination phone number</p> </li> <li> <p>Message\
              \ type</p> </li> <li> <p>Delivery status</p> </li> <li> <p>Message price\
              \ (in USD)</p> </li> <li> <p>Part number (a message is split into multiple\
              \ parts if it is too long for a single message)</p> </li> <li> <p>Total\
              \ number of parts</p> </li> </ul> <p>To receive the report, the bucket\
              \ must have a policy that allows the Amazon SNS service principal to\
              \ perform the <code>s3:PutObject</code> and <code>s3:GetBucketLocation</code>\
              \ actions.</p> <p>For an example bucket policy and usage report, see\
              \ <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_stats.html\"\
              >Monitoring SMS Activity</a> in the <i>Amazon SNS Developer Guide</i>.</p>"
      required:
      - attributes
      title: SetSMSAttributesInput
      type: object
    attributeName:
      type: string
    SetSubscriptionAttributesInput:
      description: Input for SetSubscriptionAttributes action.
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/subscriptionARN'
          - description: The ARN of the subscription to modify.
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/attributeName'
          - description: "<p>A map of attributes with their corresponding values.</p>\
              \ <p>The following lists the names, descriptions, and values of the\
              \ special request parameters that this action uses:</p> <ul> <li> <p>\
              \ <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS\
              \ retries failed deliveries to HTTP/S endpoints.</p> </li> <li> <p>\
              \ <code>FilterPolicy</code> – The simple JSON object that lets your\
              \ subscriber receive only a subset of messages, rather than receiving\
              \ every message published to the topic.</p> </li> <li> <p> <code>FilterPolicyScope</code>\
              \ – This attribute lets you choose the filtering scope by using one\
              \ of the following string value types:</p> <ul> <li> <p> <code>MessageAttributes</code>\
              \ (default) – The filter is applied on the message attributes.</p> </li>\
              \ <li> <p> <code>MessageBody</code> – The filter is applied on the message\
              \ body.</p> </li> </ul> </li> <li> <p> <code>RawMessageDelivery</code>\
              \ – When set to <code>true</code>, enables raw message delivery to Amazon\
              \ SQS or HTTP/S endpoints. This eliminates the need for the endpoints\
              \ to process JSON formatting, which is otherwise created for Amazon\
              \ SNS metadata.</p> </li> <li> <p> <code>RedrivePolicy</code> – When\
              \ specified, sends undeliverable messages to the specified Amazon SQS\
              \ dead-letter queue. Messages that can't be delivered due to client\
              \ errors (for example, when the subscribed endpoint is unreachable)\
              \ or server errors (for example, when the service that powers the subscribed\
              \ endpoint becomes unavailable) are held in the dead-letter queue for\
              \ further analysis or reprocessing.</p> </li> </ul> <p>The following\
              \ attribute applies only to Amazon Kinesis Data Firehose delivery stream\
              \ subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code>\
              \ – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission\
              \ to write to the Kinesis Data Firehose delivery stream</p> </li> <li>\
              \ <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying\
              \ a valid ARN for this attribute is required for Kinesis Data Firehose\
              \ delivery stream subscriptions. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\"\
              >Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon\
              \ SNS Developer Guide</i>.</p> </li> </ul>"
        AttributeValue:
          allOf:
          - $ref: '#/components/schemas/attributeValue'
          - description: The new value for the attribute in JSON format.
      required:
      - AttributeName
      - SubscriptionArn
      title: SetSubscriptionAttributesInput
      type: object
    SetTopicAttributesInput:
      description: Input for SetTopicAttributes action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic to modify.
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/attributeName'
          - description: "<p>A map of attributes with their corresponding values.</p>\
              \ <p>The following lists the names, descriptions, and values of the\
              \ special request parameters that the <code>SetTopicAttributes</code>\
              \ action uses:</p> <ul> <li> <p> <code>ApplicationSuccessFeedbackRoleArn</code>\
              \ – Indicates failed message delivery status for an Amazon SNS topic\
              \ that is subscribed to a platform application endpoint.</p> </li> <li>\
              \ <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon\
              \ SNS retries failed deliveries to HTTP/S endpoints.</p> </li> <li>\
              \ <p> <code>DisplayName</code> – The display name to use for a topic\
              \ with SMS subscriptions.</p> </li> <li> <p> <code>Policy</code> – The\
              \ policy that defines who can access your topic. By default, only the\
              \ topic owner can publish or subscribe to the topic.</p> </li> <li>\
              \ <p> <code>TracingConfig</code> – Tracing mode of an Amazon SNS topic.\
              \ By default <code>TracingConfig</code> is set to <code>PassThrough</code>,\
              \ and the topic passes through the tracing header it receives from an\
              \ Amazon SNS publisher to its subscriptions. If set to <code>Active</code>,\
              \ Amazon SNS will vend X-Ray segment data to topic owner account if\
              \ the sampled flag in the tracing header is true. This is only supported\
              \ on standard topics.</p> </li> <li> <p>HTTP</p> <ul> <li> <p> <code>HTTPSuccessFeedbackRoleArn</code>\
              \ – Indicates successful message delivery status for an Amazon SNS topic\
              \ that is subscribed to an HTTP endpoint. </p> </li> <li> <p> <code>HTTPSuccessFeedbackSampleRate</code>\
              \ – Indicates percentage of successful messages to sample for an Amazon\
              \ SNS topic that is subscribed to an HTTP endpoint.</p> </li> <li> <p>\
              \ <code>HTTPFailureFeedbackRoleArn</code> – Indicates failed message\
              \ delivery status for an Amazon SNS topic that is subscribed to an HTTP\
              \ endpoint.</p> </li> </ul> </li> <li> <p>Amazon Kinesis Data Firehose</p>\
              \ <ul> <li> <p> <code>FirehoseSuccessFeedbackRoleArn</code> – Indicates\
              \ successful message delivery status for an Amazon SNS topic that is\
              \ subscribed to an Amazon Kinesis Data Firehose endpoint.</p> </li>\
              \ <li> <p> <code>FirehoseSuccessFeedbackSampleRate</code> – Indicates\
              \ percentage of successful messages to sample for an Amazon SNS topic\
              \ that is subscribed to an Amazon Kinesis Data Firehose endpoint.</p>\
              \ </li> <li> <p> <code>FirehoseFailureFeedbackRoleArn</code> – Indicates\
              \ failed message delivery status for an Amazon SNS topic that is subscribed\
              \ to an Amazon Kinesis Data Firehose endpoint. </p> </li> </ul> </li>\
              \ <li> <p>Lambda</p> <ul> <li> <p> <code>LambdaSuccessFeedbackRoleArn</code>\
              \ – Indicates successful message delivery status for an Amazon SNS topic\
              \ that is subscribed to an Lambda endpoint.</p> </li> <li> <p> <code>LambdaSuccessFeedbackSampleRate</code>\
              \ – Indicates percentage of successful messages to sample for an Amazon\
              \ SNS topic that is subscribed to an Lambda endpoint.</p> </li> <li>\
              \ <p> <code>LambdaFailureFeedbackRoleArn</code> – Indicates failed message\
              \ delivery status for an Amazon SNS topic that is subscribed to an Lambda\
              \ endpoint. </p> </li> </ul> </li> <li> <p>Platform application endpoint</p>\
              \ <ul> <li> <p> <code>ApplicationSuccessFeedbackRoleArn</code> – Indicates\
              \ successful message delivery status for an Amazon SNS topic that is\
              \ subscribed to an Amazon Web Services application endpoint.</p> </li>\
              \ <li> <p> <code>ApplicationSuccessFeedbackSampleRate</code> – Indicates\
              \ percentage of successful messages to sample for an Amazon SNS topic\
              \ that is subscribed to an Amazon Web Services application endpoint.</p>\
              \ </li> <li> <p> <code>ApplicationFailureFeedbackRoleArn</code> – Indicates\
              \ failed message delivery status for an Amazon SNS topic that is subscribed\
              \ to an Amazon Web Services application endpoint.</p> </li> </ul> <note>\
              \ <p>In addition to being able to configure topic attributes for message\
              \ delivery status of notification messages sent to Amazon SNS application\
              \ endpoints, you can also configure application attributes for the delivery\
              \ status of push notification messages sent to push notification services.</p>\
              \ <p>For example, For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\"\
              >Using Amazon SNS Application Attributes for Message Delivery Status</a>.\
              \ </p> </note> </li> <li> <p>Amazon SQS</p> <ul> <li> <p> <code>SQSSuccessFeedbackRoleArn</code>\
              \ – Indicates successful message delivery status for an Amazon SNS topic\
              \ that is subscribed to an Amazon SQS endpoint. </p> </li> <li> <p>\
              \ <code>SQSSuccessFeedbackSampleRate</code> – Indicates percentage of\
              \ successful messages to sample for an Amazon SNS topic that is subscribed\
              \ to an Amazon SQS endpoint. </p> </li> <li> <p> <code>SQSFailureFeedbackRoleArn</code>\
              \ – Indicates failed message delivery status for an Amazon SNS topic\
              \ that is subscribed to an Amazon SQS endpoint. </p> </li> </ul> </li>\
              \ </ul> <note> <p>The &lt;ENDPOINT&gt;SuccessFeedbackRoleArn and &lt;ENDPOINT&gt;FailureFeedbackRoleArn\
              \ attributes are used to give Amazon SNS write access to use CloudWatch\
              \ Logs on your behalf. The &lt;ENDPOINT&gt;SuccessFeedbackSampleRate\
              \ attribute is for specifying the sample rate percentage (0-100) of\
              \ successfully delivered messages. After you configure the &lt;ENDPOINT&gt;FailureFeedbackRoleArn\
              \ attribute, then all failed message deliveries generate CloudWatch\
              \ Logs. </p> </note> <p>The following attribute applies only to <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html\"\
              >server-side-encryption</a>:</p> <ul> <li> <p> <code>KmsMasterKeyId</code>\
              \ – The ID of an Amazon Web Services managed customer master key (CMK)\
              \ for Amazon SNS or a custom CMK. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms\"\
              >Key Terms</a>. For more examples, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
              >KeyId</a> in the <i>Key Management Service API Reference</i>. </p>\
              \ </li> <li> <p> <code>SignatureVersion</code> – The signature version\
              \ corresponds to the hashing algorithm used while creating the signature\
              \ of the notifications, subscription confirmations, or unsubscribe confirmation\
              \ messages sent by Amazon SNS. By default, <code>SignatureVersion</code>\
              \ is set to <code>1</code>.</p> </li> </ul> <p>The following attribute\
              \ applies only to <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html\"\
              >FIFO topics</a>:</p> <ul> <li> <p> <code>ContentBasedDeduplication</code>\
              \ – Enables content-based deduplication for FIFO topics.</p> <ul> <li>\
              \ <p>By default, <code>ContentBasedDeduplication</code> is set to <code>false</code>.\
              \ If you create a FIFO topic and this attribute is <code>false</code>,\
              \ you must specify a value for the <code>MessageDeduplicationId</code>\
              \ parameter for the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\"\
              >Publish</a> action. </p> </li> <li> <p>When you set <code>ContentBasedDeduplication</code>\
              \ to <code>true</code>, Amazon SNS uses a SHA-256 hash to generate the\
              \ <code>MessageDeduplicationId</code> using the body of the message\
              \ (but not the attributes of the message).</p> <p>(Optional) To override\
              \ the generated value, you can specify a value for the <code>MessageDeduplicationId</code>\
              \ parameter for the <code>Publish</code> action.</p> </li> </ul> </li>\
              \ </ul>"
        AttributeValue:
          allOf:
          - $ref: '#/components/schemas/attributeValue'
          - description: The new value for the attribute.
      required:
      - AttributeName
      - TopicArn
      title: SetTopicAttributesInput
      type: object
    protocol:
      type: string
    endpoint:
      type: string
    SubscribeInput:
      description: Input for Subscribe action.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the topic you want to subscribe to.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/protocol'
          - description: <p>The protocol that you want to use. Supported protocols
              include:</p> <ul> <li> <p> <code>http</code> – delivery of JSON-encoded
              message via HTTP POST</p> </li> <li> <p> <code>https</code> – delivery
              of JSON-encoded message via HTTPS POST</p> </li> <li> <p> <code>email</code>
              – delivery of message via SMTP</p> </li> <li> <p> <code>email-json</code>
              – delivery of JSON-encoded message via SMTP</p> </li> <li> <p> <code>sms</code>
              – delivery of message via SMS</p> </li> <li> <p> <code>sqs</code> –
              delivery of JSON-encoded message to an Amazon SQS queue</p> </li> <li>
              <p> <code>application</code> – delivery of JSON-encoded message to an
              EndpointArn for a mobile app and device</p> </li> <li> <p> <code>lambda</code>
              – delivery of JSON-encoded message to an Lambda function</p> </li> <li>
              <p> <code>firehose</code> – delivery of JSON-encoded message to an Amazon
              Kinesis Data Firehose delivery stream.</p> </li> </ul>
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/endpoint'
          - description: "<p>The endpoint that you want to receive notifications.\
              \ Endpoints vary by protocol:</p> <ul> <li> <p>For the <code>http</code>\
              \ protocol, the (public) endpoint is a URL beginning with <code>http://</code>.</p>\
              \ </li> <li> <p>For the <code>https</code> protocol, the (public) endpoint\
              \ is a URL beginning with <code>https://</code>.</p> </li> <li> <p>For\
              \ the <code>email</code> protocol, the endpoint is an email address.</p>\
              \ </li> <li> <p>For the <code>email-json</code> protocol, the endpoint\
              \ is an email address.</p> </li> <li> <p>For the <code>sms</code> protocol,\
              \ the endpoint is a phone number of an SMS-enabled device.</p> </li>\
              \ <li> <p>For the <code>sqs</code> protocol, the endpoint is the ARN\
              \ of an Amazon SQS queue.</p> </li> <li> <p>For the <code>application</code>\
              \ protocol, the endpoint is the EndpointArn of a mobile app and device.</p>\
              \ </li> <li> <p>For the <code>lambda</code> protocol, the endpoint is\
              \ the ARN of an Lambda function.</p> </li> <li> <p>For the <code>firehose</code>\
              \ protocol, the endpoint is the ARN of an Amazon Kinesis Data Firehose\
              \ delivery stream.</p> </li> </ul>"
        Attributes:
          allOf:
          - $ref: '#/components/schemas/SubscriptionAttributesMap'
          - description: "<p>A map of attributes with their corresponding values.</p>\
              \ <p>The following lists the names, descriptions, and values of the\
              \ special request parameters that the <code>Subscribe</code> action\
              \ uses:</p> <ul> <li> <p> <code>DeliveryPolicy</code> – The policy that\
              \ defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p>\
              \ </li> <li> <p> <code>FilterPolicy</code> – The simple JSON object\
              \ that lets your subscriber receive only a subset of messages, rather\
              \ than receiving every message published to the topic.</p> </li> <li>\
              \ <p> <code>FilterPolicyScope</code> – This attribute lets you choose\
              \ the filtering scope by using one of the following string value types:</p>\
              \ <ul> <li> <p> <code>MessageAttributes</code> (default) – The filter\
              \ is applied on the message attributes.</p> </li> <li> <p> <code>MessageBody</code>\
              \ – The filter is applied on the message body.</p> </li> </ul> </li>\
              \ <li> <p> <code>RawMessageDelivery</code> – When set to <code>true</code>,\
              \ enables raw message delivery to Amazon SQS or HTTP/S endpoints. This\
              \ eliminates the need for the endpoints to process JSON formatting,\
              \ which is otherwise created for Amazon SNS metadata.</p> </li> <li>\
              \ <p> <code>RedrivePolicy</code> – When specified, sends undeliverable\
              \ messages to the specified Amazon SQS dead-letter queue. Messages that\
              \ can't be delivered due to client errors (for example, when the subscribed\
              \ endpoint is unreachable) or server errors (for example, when the service\
              \ that powers the subscribed endpoint becomes unavailable) are held\
              \ in the dead-letter queue for further analysis or reprocessing.</p>\
              \ </li> </ul> <p>The following attribute applies only to Amazon Kinesis\
              \ Data Firehose delivery stream subscriptions:</p> <ul> <li> <p> <code>SubscriptionRoleArn</code>\
              \ – The ARN of the IAM role that has the following:</p> <ul> <li> <p>Permission\
              \ to write to the Kinesis Data Firehose delivery stream</p> </li> <li>\
              \ <p>Amazon SNS listed as a trusted entity</p> </li> </ul> <p>Specifying\
              \ a valid ARN for this attribute is required for Kinesis Data Firehose\
              \ delivery stream subscriptions. For more information, see <a href=\"\
              https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html\"\
              >Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon\
              \ SNS Developer Guide</i>.</p> </li> </ul>"
        ReturnSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "<p>Sets whether the response from the <code>Subscribe</code>\
              \ request includes the subscription ARN, even if the subscription is\
              \ not yet confirmed.</p> <p>If you set this parameter to <code>true</code>,\
              \ the response includes the ARN in all cases, even if the subscription\
              \ is not yet confirmed. In addition to the ARN for confirmed subscriptions,\
              \ the response also includes the <code>pending subscription</code> ARN\
              \ value for subscriptions that aren't yet confirmed. A subscription\
              \ becomes confirmed when the subscriber calls the <code>ConfirmSubscription</code>\
              \ action with a confirmation token.</p> <p/> <p>The default value is\
              \ <code>false</code>.</p>"
      required:
      - Protocol
      - TopicArn
      title: SubscribeInput
      type: object
    account:
      type: string
    Subscription:
      description: A wrapper type for the attributes of an Amazon SNS subscription.
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/subscriptionARN'
          - description: The subscription's ARN.
        Owner:
          allOf:
          - $ref: '#/components/schemas/account'
          - description: The subscription's owner.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/protocol'
          - description: The subscription's protocol.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/endpoint'
          - description: The subscription's endpoint (format depends on the protocol).
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The ARN of the subscription's topic.
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the topic to which to add tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be added to the specified topic. A tag consists
              of a required key and an optional value.
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    Topic:
      description: "A wrapper type for the topic's Amazon Resource Name (ARN). To\
        \ retrieve a topic's attributes, use <code>GetTopicAttributes</code>."
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/topicARN'
          - description: The topic's ARN.
      type: object
    UnsubscribeInput:
      description: Input for Unsubscribe action.
      properties:
        SubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/subscriptionARN'
          - description: The ARN of the subscription to be deleted.
      required:
      - SubscriptionArn
      title: UnsubscribeInput
      type: object
    UntagResourceRequest:
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the topic from which to remove tags.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The list of tag keys to remove from the specified topic.
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    VerifySMSSandboxPhoneNumberInput:
      properties:
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberString'
          - description: The destination phone number to verify.
        OneTimePassword:
          allOf:
          - $ref: '#/components/schemas/OTPCode'
          - description: The OTP sent to the destination number from the <code>CreateSMSSandBoxPhoneNumber</code>
              call.
      required:
      - OneTimePassword
      - PhoneNumber
      title: VerifySMSSandboxPhoneNumberInput
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

