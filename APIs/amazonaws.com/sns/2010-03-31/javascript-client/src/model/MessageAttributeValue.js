/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessageAttributeValue model module.
 * @module model/MessageAttributeValue
 * @version 2010-03-31
 */
class MessageAttributeValue {
    /**
     * Constructs a new <code>MessageAttributeValue</code>.
     * &lt;p&gt;The user-specified message attribute value. For string data types, the value attribute has the same restrictions on the content as the message body. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sns/latest/api/API_Publish.html\&quot;&gt;Publish&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Name, type, and value must not be empty or null. In addition, the message body should not be empty or null. All parts of the message attribute, including name, type, and value, are included in the message size restriction, which is currently 256 KB (262,144 bytes). For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html\&quot;&gt;Amazon SNS message attributes&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\&quot;&gt;Publishing to a mobile phone&lt;/a&gt; in the &lt;i&gt;Amazon SNS Developer Guide.&lt;/i&gt; &lt;/p&gt;
     * @alias module:model/MessageAttributeValue
     * @param dataType {String} 
     */
    constructor(dataType) { 
        
        MessageAttributeValue.initialize(this, dataType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataType) { 
        obj['DataType'] = dataType;
    }

    /**
     * Constructs a <code>MessageAttributeValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageAttributeValue} obj Optional instance to populate.
     * @return {module:model/MessageAttributeValue} The populated <code>MessageAttributeValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageAttributeValue();

            if (data.hasOwnProperty('DataType')) {
                obj['DataType'] = ApiClient.convertToType(data['DataType'], 'String');
            }
            if (data.hasOwnProperty('StringValue')) {
                obj['StringValue'] = ApiClient.convertToType(data['StringValue'], 'String');
            }
            if (data.hasOwnProperty('BinaryValue')) {
                obj['BinaryValue'] = ApiClient.convertToType(data['BinaryValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageAttributeValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageAttributeValue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MessageAttributeValue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DataType`
        if (data['DataType']) { // data not null
          String.validateJSON(data['DataType']);
        }
        // validate the optional field `StringValue`
        if (data['StringValue']) { // data not null
          String.validateJSON(data['StringValue']);
        }
        // validate the optional field `BinaryValue`
        if (data['BinaryValue']) { // data not null
          String.validateJSON(data['BinaryValue']);
        }

        return true;
    }


}

MessageAttributeValue.RequiredProperties = ["DataType"];

/**
 * @member {String} DataType
 */
MessageAttributeValue.prototype['DataType'] = undefined;

/**
 * @member {String} StringValue
 */
MessageAttributeValue.prototype['StringValue'] = undefined;

/**
 * @member {String} BinaryValue
 */
MessageAttributeValue.prototype['BinaryValue'] = undefined;






export default MessageAttributeValue;

