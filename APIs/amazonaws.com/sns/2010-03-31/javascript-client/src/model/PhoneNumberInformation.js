/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RouteType from './RouteType';

/**
 * The PhoneNumberInformation model module.
 * @module model/PhoneNumberInformation
 * @version 2010-03-31
 */
class PhoneNumberInformation {
    /**
     * Constructs a new <code>PhoneNumberInformation</code>.
     * A list of phone numbers and their metadata.
     * @alias module:model/PhoneNumberInformation
     */
    constructor() { 
        
        PhoneNumberInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhoneNumberInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhoneNumberInformation} obj Optional instance to populate.
     * @return {module:model/PhoneNumberInformation} The populated <code>PhoneNumberInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhoneNumberInformation();

            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('PhoneNumber')) {
                obj['PhoneNumber'] = ApiClient.convertToType(data['PhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Iso2CountryCode')) {
                obj['Iso2CountryCode'] = ApiClient.convertToType(data['Iso2CountryCode'], 'String');
            }
            if (data.hasOwnProperty('RouteType')) {
                obj['RouteType'] = ApiClient.convertToType(data['RouteType'], RouteType);
            }
            if (data.hasOwnProperty('NumberCapabilities')) {
                obj['NumberCapabilities'] = ApiClient.convertToType(data['NumberCapabilities'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhoneNumberInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhoneNumberInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `PhoneNumber`
        if (data['PhoneNumber']) { // data not null
          String.validateJSON(data['PhoneNumber']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `Iso2CountryCode`
        if (data['Iso2CountryCode']) { // data not null
          String.validateJSON(data['Iso2CountryCode']);
        }
        // validate the optional field `RouteType`
        if (data['RouteType']) { // data not null
          RouteType.validateJSON(data['RouteType']);
        }
        // validate the optional field `NumberCapabilities`
        if (data['NumberCapabilities']) { // data not null
          Array.validateJSON(data['NumberCapabilities']);
        }

        return true;
    }


}



/**
 * @member {Date} CreatedAt
 */
PhoneNumberInformation.prototype['CreatedAt'] = undefined;

/**
 * @member {String} PhoneNumber
 */
PhoneNumberInformation.prototype['PhoneNumber'] = undefined;

/**
 * @member {String} Status
 */
PhoneNumberInformation.prototype['Status'] = undefined;

/**
 * @member {String} Iso2CountryCode
 */
PhoneNumberInformation.prototype['Iso2CountryCode'] = undefined;

/**
 * @member {module:model/RouteType} RouteType
 */
PhoneNumberInformation.prototype['RouteType'] = undefined;

/**
 * @member {Array} NumberCapabilities
 */
PhoneNumberInformation.prototype['NumberCapabilities'] = undefined;






export default PhoneNumberInformation;

