/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSimpleNotificationService);
  }
}(this, function(expect, AmazonSimpleNotificationService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PublishBatchRequestEntry', function() {
    it('should create an instance of PublishBatchRequestEntry', function() {
      // uncomment below and update the code to test PublishBatchRequestEntry
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be.a(AmazonSimpleNotificationService.PublishBatchRequestEntry);
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "Message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "Subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

    it('should have the property messageStructure (base name: "MessageStructure")', function() {
      // uncomment below and update the code to test the property messageStructure
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

    it('should have the property messageAttributes (base name: "MessageAttributes")', function() {
      // uncomment below and update the code to test the property messageAttributes
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

    it('should have the property messageDeduplicationId (base name: "MessageDeduplicationId")', function() {
      // uncomment below and update the code to test the property messageDeduplicationId
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

    it('should have the property messageGroupId (base name: "MessageGroupId")', function() {
      // uncomment below and update the code to test the property messageGroupId
      //var instance = new AmazonSimpleNotificationService.PublishBatchRequestEntry();
      //expect(instance).to.be();
    });

  });

}));
