# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetSubscriptionAttributesInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscription_arn: str=None, attribute_name: str=None, attribute_value: str=None):
        """SetSubscriptionAttributesInput - a model defined in OpenAPI

        :param subscription_arn: The subscription_arn of this SetSubscriptionAttributesInput.
        :param attribute_name: The attribute_name of this SetSubscriptionAttributesInput.
        :param attribute_value: The attribute_value of this SetSubscriptionAttributesInput.
        """
        self.openapi_types = {
            'subscription_arn': str,
            'attribute_name': str,
            'attribute_value': str
        }

        self.attribute_map = {
            'subscription_arn': 'SubscriptionArn',
            'attribute_name': 'AttributeName',
            'attribute_value': 'AttributeValue'
        }

        self._subscription_arn = subscription_arn
        self._attribute_name = attribute_name
        self._attribute_value = attribute_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetSubscriptionAttributesInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetSubscriptionAttributesInput of this SetSubscriptionAttributesInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscription_arn(self):
        """Gets the subscription_arn of this SetSubscriptionAttributesInput.


        :return: The subscription_arn of this SetSubscriptionAttributesInput.
        :rtype: str
        """
        return self._subscription_arn

    @subscription_arn.setter
    def subscription_arn(self, subscription_arn):
        """Sets the subscription_arn of this SetSubscriptionAttributesInput.


        :param subscription_arn: The subscription_arn of this SetSubscriptionAttributesInput.
        :type subscription_arn: str
        """
        if subscription_arn is None:
            raise ValueError("Invalid value for `subscription_arn`, must not be `None`")

        self._subscription_arn = subscription_arn

    @property
    def attribute_name(self):
        """Gets the attribute_name of this SetSubscriptionAttributesInput.


        :return: The attribute_name of this SetSubscriptionAttributesInput.
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this SetSubscriptionAttributesInput.


        :param attribute_name: The attribute_name of this SetSubscriptionAttributesInput.
        :type attribute_name: str
        """
        if attribute_name is None:
            raise ValueError("Invalid value for `attribute_name`, must not be `None`")

        self._attribute_name = attribute_name

    @property
    def attribute_value(self):
        """Gets the attribute_value of this SetSubscriptionAttributesInput.


        :return: The attribute_value of this SetSubscriptionAttributesInput.
        :rtype: str
        """
        return self._attribute_value

    @attribute_value.setter
    def attribute_value(self, attribute_value):
        """Sets the attribute_value of this SetSubscriptionAttributesInput.


        :param attribute_value: The attribute_value of this SetSubscriptionAttributesInput.
        :type attribute_value: str
        """

        self._attribute_value = attribute_value
