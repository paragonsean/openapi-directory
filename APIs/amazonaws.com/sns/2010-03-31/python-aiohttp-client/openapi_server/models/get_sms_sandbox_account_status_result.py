# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSMSSandboxAccountStatusResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_in_sandbox: bool=None):
        """GetSMSSandboxAccountStatusResult - a model defined in OpenAPI

        :param is_in_sandbox: The is_in_sandbox of this GetSMSSandboxAccountStatusResult.
        """
        self.openapi_types = {
            'is_in_sandbox': bool
        }

        self.attribute_map = {
            'is_in_sandbox': 'IsInSandbox'
        }

        self._is_in_sandbox = is_in_sandbox

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSMSSandboxAccountStatusResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSMSSandboxAccountStatusResult of this GetSMSSandboxAccountStatusResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_in_sandbox(self):
        """Gets the is_in_sandbox of this GetSMSSandboxAccountStatusResult.


        :return: The is_in_sandbox of this GetSMSSandboxAccountStatusResult.
        :rtype: bool
        """
        return self._is_in_sandbox

    @is_in_sandbox.setter
    def is_in_sandbox(self, is_in_sandbox):
        """Sets the is_in_sandbox of this GetSMSSandboxAccountStatusResult.


        :param is_in_sandbox: The is_in_sandbox of this GetSMSSandboxAccountStatusResult.
        :type is_in_sandbox: bool
        """
        if is_in_sandbox is None:
            raise ValueError("Invalid value for `is_in_sandbox`, must not be `None`")

        self._is_in_sandbox = is_in_sandbox
