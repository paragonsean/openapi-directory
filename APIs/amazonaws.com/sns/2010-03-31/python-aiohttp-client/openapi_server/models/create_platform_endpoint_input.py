# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreatePlatformEndpointInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, platform_application_arn: str=None, token: str=None, custom_user_data: str=None, attributes: Dict=None):
        """CreatePlatformEndpointInput - a model defined in OpenAPI

        :param platform_application_arn: The platform_application_arn of this CreatePlatformEndpointInput.
        :param token: The token of this CreatePlatformEndpointInput.
        :param custom_user_data: The custom_user_data of this CreatePlatformEndpointInput.
        :param attributes: The attributes of this CreatePlatformEndpointInput.
        """
        self.openapi_types = {
            'platform_application_arn': str,
            'token': str,
            'custom_user_data': str,
            'attributes': Dict
        }

        self.attribute_map = {
            'platform_application_arn': 'PlatformApplicationArn',
            'token': 'Token',
            'custom_user_data': 'CustomUserData',
            'attributes': 'Attributes'
        }

        self._platform_application_arn = platform_application_arn
        self._token = token
        self._custom_user_data = custom_user_data
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePlatformEndpointInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePlatformEndpointInput of this CreatePlatformEndpointInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def platform_application_arn(self):
        """Gets the platform_application_arn of this CreatePlatformEndpointInput.


        :return: The platform_application_arn of this CreatePlatformEndpointInput.
        :rtype: str
        """
        return self._platform_application_arn

    @platform_application_arn.setter
    def platform_application_arn(self, platform_application_arn):
        """Sets the platform_application_arn of this CreatePlatformEndpointInput.


        :param platform_application_arn: The platform_application_arn of this CreatePlatformEndpointInput.
        :type platform_application_arn: str
        """
        if platform_application_arn is None:
            raise ValueError("Invalid value for `platform_application_arn`, must not be `None`")

        self._platform_application_arn = platform_application_arn

    @property
    def token(self):
        """Gets the token of this CreatePlatformEndpointInput.


        :return: The token of this CreatePlatformEndpointInput.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this CreatePlatformEndpointInput.


        :param token: The token of this CreatePlatformEndpointInput.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")

        self._token = token

    @property
    def custom_user_data(self):
        """Gets the custom_user_data of this CreatePlatformEndpointInput.


        :return: The custom_user_data of this CreatePlatformEndpointInput.
        :rtype: str
        """
        return self._custom_user_data

    @custom_user_data.setter
    def custom_user_data(self, custom_user_data):
        """Sets the custom_user_data of this CreatePlatformEndpointInput.


        :param custom_user_data: The custom_user_data of this CreatePlatformEndpointInput.
        :type custom_user_data: str
        """

        self._custom_user_data = custom_user_data

    @property
    def attributes(self):
        """Gets the attributes of this CreatePlatformEndpointInput.


        :return: The attributes of this CreatePlatformEndpointInput.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this CreatePlatformEndpointInput.


        :param attributes: The attributes of this CreatePlatformEndpointInput.
        :type attributes: Dict
        """

        self._attributes = attributes
