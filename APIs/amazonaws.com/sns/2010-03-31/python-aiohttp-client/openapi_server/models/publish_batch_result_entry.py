# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublishBatchResultEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, message_id: str=None, sequence_number: str=None):
        """PublishBatchResultEntry - a model defined in OpenAPI

        :param id: The id of this PublishBatchResultEntry.
        :param message_id: The message_id of this PublishBatchResultEntry.
        :param sequence_number: The sequence_number of this PublishBatchResultEntry.
        """
        self.openapi_types = {
            'id': str,
            'message_id': str,
            'sequence_number': str
        }

        self.attribute_map = {
            'id': 'Id',
            'message_id': 'MessageId',
            'sequence_number': 'SequenceNumber'
        }

        self._id = id
        self._message_id = message_id
        self._sequence_number = sequence_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishBatchResultEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishBatchResultEntry of this PublishBatchResultEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PublishBatchResultEntry.


        :return: The id of this PublishBatchResultEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PublishBatchResultEntry.


        :param id: The id of this PublishBatchResultEntry.
        :type id: str
        """

        self._id = id

    @property
    def message_id(self):
        """Gets the message_id of this PublishBatchResultEntry.


        :return: The message_id of this PublishBatchResultEntry.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this PublishBatchResultEntry.


        :param message_id: The message_id of this PublishBatchResultEntry.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def sequence_number(self):
        """Gets the sequence_number of this PublishBatchResultEntry.


        :return: The sequence_number of this PublishBatchResultEntry.
        :rtype: str
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this PublishBatchResultEntry.


        :param sequence_number: The sequence_number of this PublishBatchResultEntry.
        :type sequence_number: str
        """

        self._sequence_number = sequence_number
