# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.route_type import RouteType
from openapi_server import util


class PhoneNumberInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, phone_number: str=None, status: str=None, iso2_country_code: str=None, route_type: RouteType=None, number_capabilities: List=None):
        """PhoneNumberInformation - a model defined in OpenAPI

        :param created_at: The created_at of this PhoneNumberInformation.
        :param phone_number: The phone_number of this PhoneNumberInformation.
        :param status: The status of this PhoneNumberInformation.
        :param iso2_country_code: The iso2_country_code of this PhoneNumberInformation.
        :param route_type: The route_type of this PhoneNumberInformation.
        :param number_capabilities: The number_capabilities of this PhoneNumberInformation.
        """
        self.openapi_types = {
            'created_at': datetime,
            'phone_number': str,
            'status': str,
            'iso2_country_code': str,
            'route_type': RouteType,
            'number_capabilities': List
        }

        self.attribute_map = {
            'created_at': 'CreatedAt',
            'phone_number': 'PhoneNumber',
            'status': 'Status',
            'iso2_country_code': 'Iso2CountryCode',
            'route_type': 'RouteType',
            'number_capabilities': 'NumberCapabilities'
        }

        self._created_at = created_at
        self._phone_number = phone_number
        self._status = status
        self._iso2_country_code = iso2_country_code
        self._route_type = route_type
        self._number_capabilities = number_capabilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneNumberInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhoneNumberInformation of this PhoneNumberInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PhoneNumberInformation.


        :return: The created_at of this PhoneNumberInformation.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PhoneNumberInformation.


        :param created_at: The created_at of this PhoneNumberInformation.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def phone_number(self):
        """Gets the phone_number of this PhoneNumberInformation.


        :return: The phone_number of this PhoneNumberInformation.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this PhoneNumberInformation.


        :param phone_number: The phone_number of this PhoneNumberInformation.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def status(self):
        """Gets the status of this PhoneNumberInformation.


        :return: The status of this PhoneNumberInformation.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PhoneNumberInformation.


        :param status: The status of this PhoneNumberInformation.
        :type status: str
        """

        self._status = status

    @property
    def iso2_country_code(self):
        """Gets the iso2_country_code of this PhoneNumberInformation.


        :return: The iso2_country_code of this PhoneNumberInformation.
        :rtype: str
        """
        return self._iso2_country_code

    @iso2_country_code.setter
    def iso2_country_code(self, iso2_country_code):
        """Sets the iso2_country_code of this PhoneNumberInformation.


        :param iso2_country_code: The iso2_country_code of this PhoneNumberInformation.
        :type iso2_country_code: str
        """

        self._iso2_country_code = iso2_country_code

    @property
    def route_type(self):
        """Gets the route_type of this PhoneNumberInformation.


        :return: The route_type of this PhoneNumberInformation.
        :rtype: RouteType
        """
        return self._route_type

    @route_type.setter
    def route_type(self, route_type):
        """Sets the route_type of this PhoneNumberInformation.


        :param route_type: The route_type of this PhoneNumberInformation.
        :type route_type: RouteType
        """

        self._route_type = route_type

    @property
    def number_capabilities(self):
        """Gets the number_capabilities of this PhoneNumberInformation.


        :return: The number_capabilities of this PhoneNumberInformation.
        :rtype: List
        """
        return self._number_capabilities

    @number_capabilities.setter
    def number_capabilities(self, number_capabilities):
        """Sets the number_capabilities of this PhoneNumberInformation.


        :param number_capabilities: The number_capabilities of this PhoneNumberInformation.
        :type number_capabilities: List
        """

        self._number_capabilities = number_capabilities
