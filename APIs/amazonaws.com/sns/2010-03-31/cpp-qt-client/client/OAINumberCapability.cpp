/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumberCapability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumberCapability::OAINumberCapability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumberCapability::OAINumberCapability() {
    this->initializeModel();
}

OAINumberCapability::~OAINumberCapability() {}

void OAINumberCapability::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINumberCapability::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINumberCapability::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SMS", Qt::CaseInsensitive) == 0) {
        m_value = eOAINumberCapability::SMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MMS", Qt::CaseInsensitive) == 0) {
        m_value = eOAINumberCapability::MMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VOICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAINumberCapability::VOICE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINumberCapability::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINumberCapability::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINumberCapability::SMS:
            val = "SMS";
            break;
        case eOAINumberCapability::MMS:
            val = "MMS";
            break;
        case eOAINumberCapability::VOICE:
            val = "VOICE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINumberCapability::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINumberCapability::eOAINumberCapability OAINumberCapability::getValue() const {
    return m_value;
}

void OAINumberCapability::setValue(const OAINumberCapability::eOAINumberCapability& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINumberCapability::isSet() const {
    
    return m_value_isSet;
}

bool OAINumberCapability::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
