/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPhoneNumberInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPhoneNumberInformation::OAIPhoneNumberInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPhoneNumberInformation::OAIPhoneNumberInformation() {
    this->initializeModel();
}

OAIPhoneNumberInformation::~OAIPhoneNumberInformation() {}

void OAIPhoneNumberInformation::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_iso2_country_code_isSet = false;
    m_iso2_country_code_isValid = false;

    m_route_type_isSet = false;
    m_route_type_isValid = false;

    m_number_capabilities_isSet = false;
    m_number_capabilities_isValid = false;
}

void OAIPhoneNumberInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPhoneNumberInformation::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_iso2_country_code_isValid = ::OpenAPI::fromJsonValue(m_iso2_country_code, json[QString("Iso2CountryCode")]);
    m_iso2_country_code_isSet = !json[QString("Iso2CountryCode")].isNull() && m_iso2_country_code_isValid;

    m_route_type_isValid = ::OpenAPI::fromJsonValue(m_route_type, json[QString("RouteType")]);
    m_route_type_isSet = !json[QString("RouteType")].isNull() && m_route_type_isValid;

    m_number_capabilities_isValid = ::OpenAPI::fromJsonValue(m_number_capabilities, json[QString("NumberCapabilities")]);
    m_number_capabilities_isSet = !json[QString("NumberCapabilities")].isNull() && m_number_capabilities_isValid;
}

QString OAIPhoneNumberInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPhoneNumberInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_iso2_country_code_isSet) {
        obj.insert(QString("Iso2CountryCode"), ::OpenAPI::toJsonValue(m_iso2_country_code));
    }
    if (m_route_type.isSet()) {
        obj.insert(QString("RouteType"), ::OpenAPI::toJsonValue(m_route_type));
    }
    if (m_number_capabilities.isSet()) {
        obj.insert(QString("NumberCapabilities"), ::OpenAPI::toJsonValue(m_number_capabilities));
    }
    return obj;
}

QDateTime OAIPhoneNumberInformation::getCreatedAt() const {
    return m_created_at;
}
void OAIPhoneNumberInformation::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIPhoneNumberInformation::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIPhoneNumberInformation::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIPhoneNumberInformation::getPhoneNumber() const {
    return m_phone_number;
}
void OAIPhoneNumberInformation::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIPhoneNumberInformation::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIPhoneNumberInformation::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIPhoneNumberInformation::getStatus() const {
    return m_status;
}
void OAIPhoneNumberInformation::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIPhoneNumberInformation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIPhoneNumberInformation::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIPhoneNumberInformation::getIso2CountryCode() const {
    return m_iso2_country_code;
}
void OAIPhoneNumberInformation::setIso2CountryCode(const QString &iso2_country_code) {
    m_iso2_country_code = iso2_country_code;
    m_iso2_country_code_isSet = true;
}

bool OAIPhoneNumberInformation::is_iso2_country_code_Set() const{
    return m_iso2_country_code_isSet;
}

bool OAIPhoneNumberInformation::is_iso2_country_code_Valid() const{
    return m_iso2_country_code_isValid;
}

OAIRouteType OAIPhoneNumberInformation::getRouteType() const {
    return m_route_type;
}
void OAIPhoneNumberInformation::setRouteType(const OAIRouteType &route_type) {
    m_route_type = route_type;
    m_route_type_isSet = true;
}

bool OAIPhoneNumberInformation::is_route_type_Set() const{
    return m_route_type_isSet;
}

bool OAIPhoneNumberInformation::is_route_type_Valid() const{
    return m_route_type_isValid;
}

QList OAIPhoneNumberInformation::getNumberCapabilities() const {
    return m_number_capabilities;
}
void OAIPhoneNumberInformation::setNumberCapabilities(const QList &number_capabilities) {
    m_number_capabilities = number_capabilities;
    m_number_capabilities_isSet = true;
}

bool OAIPhoneNumberInformation::is_number_capabilities_Set() const{
    return m_number_capabilities_isSet;
}

bool OAIPhoneNumberInformation::is_number_capabilities_Valid() const{
    return m_number_capabilities_isValid;
}

bool OAIPhoneNumberInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso2_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPhoneNumberInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
