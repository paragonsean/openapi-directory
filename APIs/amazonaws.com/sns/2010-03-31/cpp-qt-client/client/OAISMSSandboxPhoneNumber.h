/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISMSSandboxPhoneNumber.h
 *
 * &lt;p&gt;A verified or pending destination phone number in the SMS sandbox.&lt;/p&gt; &lt;p&gt;When you start using Amazon SNS to send SMS messages, your Amazon Web Services account is in the &lt;i&gt;SMS sandbox&lt;/i&gt;. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your Amazon Web Services account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\&quot;&gt;SMS sandbox&lt;/a&gt; in the &lt;i&gt;Amazon SNS Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAISMSSandboxPhoneNumber_H
#define OAISMSSandboxPhoneNumber_H

#include <QJsonObject>

#include "OAISMSSandboxPhoneNumberVerificationStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISMSSandboxPhoneNumber : public OAIObject {
public:
    OAISMSSandboxPhoneNumber();
    OAISMSSandboxPhoneNumber(QString json);
    ~OAISMSSandboxPhoneNumber() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    OAISMSSandboxPhoneNumberVerificationStatus getStatus() const;
    void setStatus(const OAISMSSandboxPhoneNumberVerificationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    OAISMSSandboxPhoneNumberVerificationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISMSSandboxPhoneNumber)

#endif // OAISMSSandboxPhoneNumber_H
