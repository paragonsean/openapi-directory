/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddPermissionInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddPermissionInput::OAIAddPermissionInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddPermissionInput::OAIAddPermissionInput() {
    this->initializeModel();
}

OAIAddPermissionInput::~OAIAddPermissionInput() {}

void OAIAddPermissionInput::initializeModel() {

    m_topic_arn_isSet = false;
    m_topic_arn_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_action_name_isSet = false;
    m_action_name_isValid = false;
}

void OAIAddPermissionInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddPermissionInput::fromJsonObject(QJsonObject json) {

    m_topic_arn_isValid = ::OpenAPI::fromJsonValue(m_topic_arn, json[QString("TopicArn")]);
    m_topic_arn_isSet = !json[QString("TopicArn")].isNull() && m_topic_arn_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("Label")]);
    m_label_isSet = !json[QString("Label")].isNull() && m_label_isValid;

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("AWSAccountId")]);
    m_aws_account_id_isSet = !json[QString("AWSAccountId")].isNull() && m_aws_account_id_isValid;

    m_action_name_isValid = ::OpenAPI::fromJsonValue(m_action_name, json[QString("ActionName")]);
    m_action_name_isSet = !json[QString("ActionName")].isNull() && m_action_name_isValid;
}

QString OAIAddPermissionInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddPermissionInput::asJsonObject() const {
    QJsonObject obj;
    if (m_topic_arn_isSet) {
        obj.insert(QString("TopicArn"), ::OpenAPI::toJsonValue(m_topic_arn));
    }
    if (m_label_isSet) {
        obj.insert(QString("Label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_aws_account_id.isSet()) {
        obj.insert(QString("AWSAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_action_name.isSet()) {
        obj.insert(QString("ActionName"), ::OpenAPI::toJsonValue(m_action_name));
    }
    return obj;
}

QString OAIAddPermissionInput::getTopicArn() const {
    return m_topic_arn;
}
void OAIAddPermissionInput::setTopicArn(const QString &topic_arn) {
    m_topic_arn = topic_arn;
    m_topic_arn_isSet = true;
}

bool OAIAddPermissionInput::is_topic_arn_Set() const{
    return m_topic_arn_isSet;
}

bool OAIAddPermissionInput::is_topic_arn_Valid() const{
    return m_topic_arn_isValid;
}

QString OAIAddPermissionInput::getLabel() const {
    return m_label;
}
void OAIAddPermissionInput::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIAddPermissionInput::is_label_Set() const{
    return m_label_isSet;
}

bool OAIAddPermissionInput::is_label_Valid() const{
    return m_label_isValid;
}

QList OAIAddPermissionInput::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAIAddPermissionInput::setAwsAccountId(const QList &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAIAddPermissionInput::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAIAddPermissionInput::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QList OAIAddPermissionInput::getActionName() const {
    return m_action_name;
}
void OAIAddPermissionInput::setActionName(const QList &action_name) {
    m_action_name = action_name;
    m_action_name_isSet = true;
}

bool OAIAddPermissionInput::is_action_name_Set() const{
    return m_action_name_isSet;
}

bool OAIAddPermissionInput::is_action_name_Valid() const{
    return m_action_name_isValid;
}

bool OAIAddPermissionInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_topic_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_account_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_name.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddPermissionInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_topic_arn_isValid && m_label_isValid && m_aws_account_id_isValid && m_action_name_isValid && true;
}

} // namespace OpenAPI
