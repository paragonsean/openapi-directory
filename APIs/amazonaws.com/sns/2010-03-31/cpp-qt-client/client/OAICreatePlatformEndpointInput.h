/**
 * Amazon Simple Notification Service
 * <fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see the <a href=\"http://aws.amazon.com/sns/\">Amazon SNS product page</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/\">Amazon SNS Developer Guide</a>. </p> <p>For information on the permissions you need to use this API, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-authentication-and-access-control.html\">Identity and access management in Amazon SNS</a> in the <i>Amazon SNS Developer Guide.</i> </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p>
 *
 * The version of the OpenAPI document: 2010-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreatePlatformEndpointInput.h
 *
 * Input for CreatePlatformEndpoint action.
 */

#ifndef OAICreatePlatformEndpointInput_H
#define OAICreatePlatformEndpointInput_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreatePlatformEndpointInput : public OAIObject {
public:
    OAICreatePlatformEndpointInput();
    OAICreatePlatformEndpointInput(QString json);
    ~OAICreatePlatformEndpointInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPlatformApplicationArn() const;
    void setPlatformApplicationArn(const QString &platform_application_arn);
    bool is_platform_application_arn_Set() const;
    bool is_platform_application_arn_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getCustomUserData() const;
    void setCustomUserData(const QString &custom_user_data);
    bool is_custom_user_data_Set() const;
    bool is_custom_user_data_Valid() const;

    QMap getAttributes() const;
    void setAttributes(const QMap &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_platform_application_arn;
    bool m_platform_application_arn_isSet;
    bool m_platform_application_arn_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_custom_user_data;
    bool m_custom_user_data_isSet;
    bool m_custom_user_data_isValid;

    QMap m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreatePlatformEndpointInput)

#endif // OAICreatePlatformEndpointInput_H
