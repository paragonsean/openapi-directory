# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateRouteCalculatorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calculator_arn: str=None, calculator_name: str=None, create_time: datetime=None):
        """CreateRouteCalculatorResponse - a model defined in OpenAPI

        :param calculator_arn: The calculator_arn of this CreateRouteCalculatorResponse.
        :param calculator_name: The calculator_name of this CreateRouteCalculatorResponse.
        :param create_time: The create_time of this CreateRouteCalculatorResponse.
        """
        self.openapi_types = {
            'calculator_arn': str,
            'calculator_name': str,
            'create_time': datetime
        }

        self.attribute_map = {
            'calculator_arn': 'CalculatorArn',
            'calculator_name': 'CalculatorName',
            'create_time': 'CreateTime'
        }

        self._calculator_arn = calculator_arn
        self._calculator_name = calculator_name
        self._create_time = create_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRouteCalculatorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRouteCalculatorResponse of this CreateRouteCalculatorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calculator_arn(self):
        """Gets the calculator_arn of this CreateRouteCalculatorResponse.


        :return: The calculator_arn of this CreateRouteCalculatorResponse.
        :rtype: str
        """
        return self._calculator_arn

    @calculator_arn.setter
    def calculator_arn(self, calculator_arn):
        """Sets the calculator_arn of this CreateRouteCalculatorResponse.


        :param calculator_arn: The calculator_arn of this CreateRouteCalculatorResponse.
        :type calculator_arn: str
        """
        if calculator_arn is None:
            raise ValueError("Invalid value for `calculator_arn`, must not be `None`")

        self._calculator_arn = calculator_arn

    @property
    def calculator_name(self):
        """Gets the calculator_name of this CreateRouteCalculatorResponse.


        :return: The calculator_name of this CreateRouteCalculatorResponse.
        :rtype: str
        """
        return self._calculator_name

    @calculator_name.setter
    def calculator_name(self, calculator_name):
        """Sets the calculator_name of this CreateRouteCalculatorResponse.


        :param calculator_name: The calculator_name of this CreateRouteCalculatorResponse.
        :type calculator_name: str
        """
        if calculator_name is None:
            raise ValueError("Invalid value for `calculator_name`, must not be `None`")

        self._calculator_name = calculator_name

    @property
    def create_time(self):
        """Gets the create_time of this CreateRouteCalculatorResponse.


        :return: The create_time of this CreateRouteCalculatorResponse.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this CreateRouteCalculatorResponse.


        :param create_time: The create_time of this CreateRouteCalculatorResponse.
        :type create_time: datetime
        """
        if create_time is None:
            raise ValueError("Invalid value for `create_time`, must not be `None`")

        self._create_time = create_time
