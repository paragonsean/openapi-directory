# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class ApiKeyFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_status: Status=None):
        """ApiKeyFilter - a model defined in OpenAPI

        :param key_status: The key_status of this ApiKeyFilter.
        """
        self.openapi_types = {
            'key_status': Status
        }

        self.attribute_map = {
            'key_status': 'KeyStatus'
        }

        self._key_status = key_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiKeyFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiKeyFilter of this ApiKeyFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_status(self):
        """Gets the key_status of this ApiKeyFilter.


        :return: The key_status of this ApiKeyFilter.
        :rtype: Status
        """
        return self._key_status

    @key_status.setter
    def key_status(self, key_status):
        """Sets the key_status of this ApiKeyFilter.


        :param key_status: The key_status of this ApiKeyFilter.
        :type key_status: Status
        """

        self._key_status = key_status
