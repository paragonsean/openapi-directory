# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DevicePositionUpdateAccuracy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, horizontal: float=None):
        """DevicePositionUpdateAccuracy - a model defined in OpenAPI

        :param horizontal: The horizontal of this DevicePositionUpdateAccuracy.
        """
        self.openapi_types = {
            'horizontal': float
        }

        self.attribute_map = {
            'horizontal': 'Horizontal'
        }

        self._horizontal = horizontal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DevicePositionUpdateAccuracy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DevicePositionUpdate_Accuracy of this DevicePositionUpdateAccuracy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def horizontal(self):
        """Gets the horizontal of this DevicePositionUpdateAccuracy.


        :return: The horizontal of this DevicePositionUpdateAccuracy.
        :rtype: float
        """
        return self._horizontal

    @horizontal.setter
    def horizontal(self, horizontal):
        """Sets the horizontal of this DevicePositionUpdateAccuracy.


        :param horizontal: The horizontal of this DevicePositionUpdateAccuracy.
        :type horizontal: float
        """
        if horizontal is None:
            raise ValueError("Invalid value for `horizontal`, must not be `None`")

        self._horizontal = horizontal
