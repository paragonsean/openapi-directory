# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDevicePositionHistoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time_exclusive: datetime=None, max_results: int=None, next_token: str=None, start_time_inclusive: datetime=None):
        """GetDevicePositionHistoryRequest - a model defined in OpenAPI

        :param end_time_exclusive: The end_time_exclusive of this GetDevicePositionHistoryRequest.
        :param max_results: The max_results of this GetDevicePositionHistoryRequest.
        :param next_token: The next_token of this GetDevicePositionHistoryRequest.
        :param start_time_inclusive: The start_time_inclusive of this GetDevicePositionHistoryRequest.
        """
        self.openapi_types = {
            'end_time_exclusive': datetime,
            'max_results': int,
            'next_token': str,
            'start_time_inclusive': datetime
        }

        self.attribute_map = {
            'end_time_exclusive': 'EndTimeExclusive',
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'start_time_inclusive': 'StartTimeInclusive'
        }

        self._end_time_exclusive = end_time_exclusive
        self._max_results = max_results
        self._next_token = next_token
        self._start_time_inclusive = start_time_inclusive

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDevicePositionHistoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDevicePositionHistory_request of this GetDevicePositionHistoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time_exclusive(self):
        """Gets the end_time_exclusive of this GetDevicePositionHistoryRequest.

        <p>Specify the end time for the position history in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>EndTimeExclusive</code> must be after the time for <code>StartTimeInclusive</code>.</p> </li> </ul>

        :return: The end_time_exclusive of this GetDevicePositionHistoryRequest.
        :rtype: datetime
        """
        return self._end_time_exclusive

    @end_time_exclusive.setter
    def end_time_exclusive(self, end_time_exclusive):
        """Sets the end_time_exclusive of this GetDevicePositionHistoryRequest.

        <p>Specify the end time for the position history in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>EndTimeExclusive</code> must be after the time for <code>StartTimeInclusive</code>.</p> </li> </ul>

        :param end_time_exclusive: The end_time_exclusive of this GetDevicePositionHistoryRequest.
        :type end_time_exclusive: datetime
        """

        self._end_time_exclusive = end_time_exclusive

    @property
    def max_results(self):
        """Gets the max_results of this GetDevicePositionHistoryRequest.

        <p>An optional limit for the number of device positions returned in a single call.</p> <p>Default value: <code>100</code> </p>

        :return: The max_results of this GetDevicePositionHistoryRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetDevicePositionHistoryRequest.

        <p>An optional limit for the number of device positions returned in a single call.</p> <p>Default value: <code>100</code> </p>

        :param max_results: The max_results of this GetDevicePositionHistoryRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 100:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `100`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this GetDevicePositionHistoryRequest.

        <p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>

        :return: The next_token of this GetDevicePositionHistoryRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetDevicePositionHistoryRequest.

        <p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p> <p>Default value: <code>null</code> </p>

        :param next_token: The next_token of this GetDevicePositionHistoryRequest.
        :type next_token: str
        """
        if next_token is not None and len(next_token) > 2000:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `2000`")
        if next_token is not None and len(next_token) < 1:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `1`")

        self._next_token = next_token

    @property
    def start_time_inclusive(self):
        """Gets the start_time_inclusive of this GetDevicePositionHistoryRequest.

        <p>Specify the start time for the position history in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be 24 hours prior to the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>StartTimeInclusive</code> must be before <code>EndTimeExclusive</code>.</p> </li> </ul>

        :return: The start_time_inclusive of this GetDevicePositionHistoryRequest.
        :rtype: datetime
        """
        return self._start_time_inclusive

    @start_time_inclusive.setter
    def start_time_inclusive(self, start_time_inclusive):
        """Sets the start_time_inclusive of this GetDevicePositionHistoryRequest.

        <p>Specify the start time for the position history in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value will be 24 hours prior to the time that the request is made.</p> <p>Requirement:</p> <ul> <li> <p>The time specified for <code>StartTimeInclusive</code> must be before <code>EndTimeExclusive</code>.</p> </li> </ul>

        :param start_time_inclusive: The start_time_inclusive of this GetDevicePositionHistoryRequest.
        :type start_time_inclusive: datetime
        """

        self._start_time_inclusive = start_time_inclusive
