# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_key_request_restrictions import CreateKeyRequestRestrictions
from openapi_server import util


class UpdateKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, expire_time: datetime=None, force_update: bool=None, no_expiry: bool=None, restrictions: CreateKeyRequestRestrictions=None):
        """UpdateKeyRequest - a model defined in OpenAPI

        :param description: The description of this UpdateKeyRequest.
        :param expire_time: The expire_time of this UpdateKeyRequest.
        :param force_update: The force_update of this UpdateKeyRequest.
        :param no_expiry: The no_expiry of this UpdateKeyRequest.
        :param restrictions: The restrictions of this UpdateKeyRequest.
        """
        self.openapi_types = {
            'description': str,
            'expire_time': datetime,
            'force_update': bool,
            'no_expiry': bool,
            'restrictions': CreateKeyRequestRestrictions
        }

        self.attribute_map = {
            'description': 'Description',
            'expire_time': 'ExpireTime',
            'force_update': 'ForceUpdate',
            'no_expiry': 'NoExpiry',
            'restrictions': 'Restrictions'
        }

        self._description = description
        self._expire_time = expire_time
        self._force_update = force_update
        self._no_expiry = no_expiry
        self._restrictions = restrictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateKey_request of this UpdateKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UpdateKeyRequest.

        Updates the description for the API key resource.

        :return: The description of this UpdateKeyRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateKeyRequest.

        Updates the description for the API key resource.

        :param description: The description of this UpdateKeyRequest.
        :type description: str
        """
        if description is not None and len(description) > 1000:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `1000`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def expire_time(self):
        """Gets the expire_time of this UpdateKeyRequest.

        Updates the timestamp for when the API key resource will expire in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. 

        :return: The expire_time of this UpdateKeyRequest.
        :rtype: datetime
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this UpdateKeyRequest.

        Updates the timestamp for when the API key resource will expire in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. 

        :param expire_time: The expire_time of this UpdateKeyRequest.
        :type expire_time: datetime
        """

        self._expire_time = expire_time

    @property
    def force_update(self):
        """Gets the force_update of this UpdateKeyRequest.

        <p>The boolean flag to be included for updating <code>ExpireTime</code> or <code>Restrictions</code> details.</p> <p>Must be set to <code>true</code> to update an API key resource that has been used in the past 7 days.</p> <p> <code>False</code> if force update is not preferred</p> <p>Default value: <code>False</code> </p>

        :return: The force_update of this UpdateKeyRequest.
        :rtype: bool
        """
        return self._force_update

    @force_update.setter
    def force_update(self, force_update):
        """Sets the force_update of this UpdateKeyRequest.

        <p>The boolean flag to be included for updating <code>ExpireTime</code> or <code>Restrictions</code> details.</p> <p>Must be set to <code>true</code> to update an API key resource that has been used in the past 7 days.</p> <p> <code>False</code> if force update is not preferred</p> <p>Default value: <code>False</code> </p>

        :param force_update: The force_update of this UpdateKeyRequest.
        :type force_update: bool
        """

        self._force_update = force_update

    @property
    def no_expiry(self):
        """Gets the no_expiry of this UpdateKeyRequest.

        Whether the API key should expire. Set to <code>true</code> to set the API key to have no expiration time.

        :return: The no_expiry of this UpdateKeyRequest.
        :rtype: bool
        """
        return self._no_expiry

    @no_expiry.setter
    def no_expiry(self, no_expiry):
        """Sets the no_expiry of this UpdateKeyRequest.

        Whether the API key should expire. Set to <code>true</code> to set the API key to have no expiration time.

        :param no_expiry: The no_expiry of this UpdateKeyRequest.
        :type no_expiry: bool
        """

        self._no_expiry = no_expiry

    @property
    def restrictions(self):
        """Gets the restrictions of this UpdateKeyRequest.


        :return: The restrictions of this UpdateKeyRequest.
        :rtype: CreateKeyRequestRestrictions
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this UpdateKeyRequest.


        :param restrictions: The restrictions of this UpdateKeyRequest.
        :type restrictions: CreateKeyRequestRestrictions
        """

        self._restrictions = restrictions
