# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.intended_use import IntendedUse
from openapi_server import util


class DescribePlaceIndexResponseDataSourceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intended_use: IntendedUse=None):
        """DescribePlaceIndexResponseDataSourceConfiguration - a model defined in OpenAPI

        :param intended_use: The intended_use of this DescribePlaceIndexResponseDataSourceConfiguration.
        """
        self.openapi_types = {
            'intended_use': IntendedUse
        }

        self.attribute_map = {
            'intended_use': 'IntendedUse'
        }

        self._intended_use = intended_use

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePlaceIndexResponseDataSourceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePlaceIndexResponse_DataSourceConfiguration of this DescribePlaceIndexResponseDataSourceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intended_use(self):
        """Gets the intended_use of this DescribePlaceIndexResponseDataSourceConfiguration.


        :return: The intended_use of this DescribePlaceIndexResponseDataSourceConfiguration.
        :rtype: IntendedUse
        """
        return self._intended_use

    @intended_use.setter
    def intended_use(self, intended_use):
        """Sets the intended_use of this DescribePlaceIndexResponseDataSourceConfiguration.


        :param intended_use: The intended_use of this DescribePlaceIndexResponseDataSourceConfiguration.
        :type intended_use: IntendedUse
        """

        self._intended_use = intended_use
