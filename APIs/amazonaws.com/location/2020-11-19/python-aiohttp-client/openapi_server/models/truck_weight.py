# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vehicle_weight_unit import VehicleWeightUnit
from openapi_server import util


class TruckWeight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: float=None, unit: VehicleWeightUnit=None):
        """TruckWeight - a model defined in OpenAPI

        :param total: The total of this TruckWeight.
        :param unit: The unit of this TruckWeight.
        """
        self.openapi_types = {
            'total': float,
            'unit': VehicleWeightUnit
        }

        self.attribute_map = {
            'total': 'Total',
            'unit': 'Unit'
        }

        self._total = total
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TruckWeight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TruckWeight of this TruckWeight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this TruckWeight.


        :return: The total of this TruckWeight.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this TruckWeight.


        :param total: The total of this TruckWeight.
        :type total: float
        """

        self._total = total

    @property
    def unit(self):
        """Gets the unit of this TruckWeight.


        :return: The unit of this TruckWeight.
        :rtype: VehicleWeightUnit
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this TruckWeight.


        :param unit: The unit of this TruckWeight.
        :type unit: VehicleWeightUnit
        """

        self._unit = unit
