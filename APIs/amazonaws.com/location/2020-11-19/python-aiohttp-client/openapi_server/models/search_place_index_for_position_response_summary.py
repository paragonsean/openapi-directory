# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchPlaceIndexForPositionResponseSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source: str=None, language: str=None, max_results: int=None, position: List=None):
        """SearchPlaceIndexForPositionResponseSummary - a model defined in OpenAPI

        :param data_source: The data_source of this SearchPlaceIndexForPositionResponseSummary.
        :param language: The language of this SearchPlaceIndexForPositionResponseSummary.
        :param max_results: The max_results of this SearchPlaceIndexForPositionResponseSummary.
        :param position: The position of this SearchPlaceIndexForPositionResponseSummary.
        """
        self.openapi_types = {
            'data_source': str,
            'language': str,
            'max_results': int,
            'position': List
        }

        self.attribute_map = {
            'data_source': 'DataSource',
            'language': 'Language',
            'max_results': 'MaxResults',
            'position': 'Position'
        }

        self._data_source = data_source
        self._language = language
        self._max_results = max_results
        self._position = position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchPlaceIndexForPositionResponseSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchPlaceIndexForPositionResponse_Summary of this SearchPlaceIndexForPositionResponseSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source(self):
        """Gets the data_source of this SearchPlaceIndexForPositionResponseSummary.


        :return: The data_source of this SearchPlaceIndexForPositionResponseSummary.
        :rtype: str
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this SearchPlaceIndexForPositionResponseSummary.


        :param data_source: The data_source of this SearchPlaceIndexForPositionResponseSummary.
        :type data_source: str
        """
        if data_source is None:
            raise ValueError("Invalid value for `data_source`, must not be `None`")

        self._data_source = data_source

    @property
    def language(self):
        """Gets the language of this SearchPlaceIndexForPositionResponseSummary.


        :return: The language of this SearchPlaceIndexForPositionResponseSummary.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this SearchPlaceIndexForPositionResponseSummary.


        :param language: The language of this SearchPlaceIndexForPositionResponseSummary.
        :type language: str
        """

        self._language = language

    @property
    def max_results(self):
        """Gets the max_results of this SearchPlaceIndexForPositionResponseSummary.


        :return: The max_results of this SearchPlaceIndexForPositionResponseSummary.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this SearchPlaceIndexForPositionResponseSummary.


        :param max_results: The max_results of this SearchPlaceIndexForPositionResponseSummary.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def position(self):
        """Gets the position of this SearchPlaceIndexForPositionResponseSummary.


        :return: The position of this SearchPlaceIndexForPositionResponseSummary.
        :rtype: List
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this SearchPlaceIndexForPositionResponseSummary.


        :param position: The position of this SearchPlaceIndexForPositionResponseSummary.
        :type position: List
        """
        if position is None:
            raise ValueError("Invalid value for `position`, must not be `None`")

        self._position = position
