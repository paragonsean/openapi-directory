# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_geofence_request_geometry_circle import PutGeofenceRequestGeometryCircle
from openapi_server import util


class GeofenceGeometry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, circle: PutGeofenceRequestGeometryCircle=None, polygon: List=None):
        """GeofenceGeometry - a model defined in OpenAPI

        :param circle: The circle of this GeofenceGeometry.
        :param polygon: The polygon of this GeofenceGeometry.
        """
        self.openapi_types = {
            'circle': PutGeofenceRequestGeometryCircle,
            'polygon': List
        }

        self.attribute_map = {
            'circle': 'Circle',
            'polygon': 'Polygon'
        }

        self._circle = circle
        self._polygon = polygon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeofenceGeometry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeofenceGeometry of this GeofenceGeometry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def circle(self):
        """Gets the circle of this GeofenceGeometry.


        :return: The circle of this GeofenceGeometry.
        :rtype: PutGeofenceRequestGeometryCircle
        """
        return self._circle

    @circle.setter
    def circle(self, circle):
        """Sets the circle of this GeofenceGeometry.


        :param circle: The circle of this GeofenceGeometry.
        :type circle: PutGeofenceRequestGeometryCircle
        """

        self._circle = circle

    @property
    def polygon(self):
        """Gets the polygon of this GeofenceGeometry.


        :return: The polygon of this GeofenceGeometry.
        :rtype: List
        """
        return self._polygon

    @polygon.setter
    def polygon(self, polygon):
        """Sets the polygon of this GeofenceGeometry.


        :param polygon: The polygon of this GeofenceGeometry.
        :type polygon: List
        """

        self._polygon = polygon
