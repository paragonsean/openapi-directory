/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchPlaceIndexForSuggestionsRequest model module.
 * @module model/SearchPlaceIndexForSuggestionsRequest
 * @version 2020-11-19
 */
class SearchPlaceIndexForSuggestionsRequest {
    /**
     * Constructs a new <code>SearchPlaceIndexForSuggestionsRequest</code>.
     * @alias module:model/SearchPlaceIndexForSuggestionsRequest
     * @param text {String} The free-form partial text to use to generate place suggestions. For example, <code>eiffel tow</code>.
     */
    constructor(text) { 
        
        SearchPlaceIndexForSuggestionsRequest.initialize(this, text);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, text) { 
        obj['Text'] = text;
    }

    /**
     * Constructs a <code>SearchPlaceIndexForSuggestionsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchPlaceIndexForSuggestionsRequest} obj Optional instance to populate.
     * @return {module:model/SearchPlaceIndexForSuggestionsRequest} The populated <code>SearchPlaceIndexForSuggestionsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchPlaceIndexForSuggestionsRequest();

            if (data.hasOwnProperty('BiasPosition')) {
                obj['BiasPosition'] = ApiClient.convertToType(data['BiasPosition'], ['Number']);
            }
            if (data.hasOwnProperty('FilterBBox')) {
                obj['FilterBBox'] = ApiClient.convertToType(data['FilterBBox'], ['Number']);
            }
            if (data.hasOwnProperty('FilterCategories')) {
                obj['FilterCategories'] = ApiClient.convertToType(data['FilterCategories'], ['String']);
            }
            if (data.hasOwnProperty('FilterCountries')) {
                obj['FilterCountries'] = ApiClient.convertToType(data['FilterCountries'], ['String']);
            }
            if (data.hasOwnProperty('Language')) {
                obj['Language'] = ApiClient.convertToType(data['Language'], 'String');
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
            if (data.hasOwnProperty('Text')) {
                obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchPlaceIndexForSuggestionsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchPlaceIndexForSuggestionsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchPlaceIndexForSuggestionsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['BiasPosition'])) {
            throw new Error("Expected the field `BiasPosition` to be an array in the JSON data but got " + data['BiasPosition']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['FilterBBox'])) {
            throw new Error("Expected the field `FilterBBox` to be an array in the JSON data but got " + data['FilterBBox']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['FilterCategories'])) {
            throw new Error("Expected the field `FilterCategories` to be an array in the JSON data but got " + data['FilterCategories']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['FilterCountries'])) {
            throw new Error("Expected the field `FilterCountries` to be an array in the JSON data but got " + data['FilterCountries']);
        }
        // ensure the json data is a string
        if (data['Language'] && !(typeof data['Language'] === 'string' || data['Language'] instanceof String)) {
            throw new Error("Expected the field `Language` to be a primitive type in the JSON string but got " + data['Language']);
        }
        // ensure the json data is a string
        if (data['Text'] && !(typeof data['Text'] === 'string' || data['Text'] instanceof String)) {
            throw new Error("Expected the field `Text` to be a primitive type in the JSON string but got " + data['Text']);
        }

        return true;
    }


}

SearchPlaceIndexForSuggestionsRequest.RequiredProperties = ["Text"];

/**
 * <p>An optional parameter that indicates a preference for place suggestions that are closer to a specified position.</p> <p> If provided, this parameter must contain a pair of numbers. The first number represents the X coordinate, or longitude; the second number represents the Y coordinate, or latitude.</p> <p>For example, <code>[-123.1174, 49.2847]</code> represents the position with longitude <code>-123.1174</code> and latitude <code>49.2847</code>.</p> <note> <p> <code>BiasPosition</code> and <code>FilterBBox</code> are mutually exclusive. Specifying both options results in an error. </p> </note>
 * @member {Array.<Number>} BiasPosition
 */
SearchPlaceIndexForSuggestionsRequest.prototype['BiasPosition'] = undefined;

/**
 * <p>An optional parameter that limits the search results by returning only suggestions within a specified bounding box.</p> <p> If provided, this parameter must contain a total of four consecutive numbers in two pairs. The first pair of numbers represents the X and Y coordinates (longitude and latitude, respectively) of the southwest corner of the bounding box; the second pair of numbers represents the X and Y coordinates (longitude and latitude, respectively) of the northeast corner of the bounding box.</p> <p>For example, <code>[-12.7935, -37.4835, -12.0684, -36.9542]</code> represents a bounding box where the southwest corner has longitude <code>-12.7935</code> and latitude <code>-37.4835</code>, and the northeast corner has longitude <code>-12.0684</code> and latitude <code>-36.9542</code>.</p> <note> <p> <code>FilterBBox</code> and <code>BiasPosition</code> are mutually exclusive. Specifying both options results in an error. </p> </note>
 * @member {Array.<Number>} FilterBBox
 */
SearchPlaceIndexForSuggestionsRequest.prototype['FilterBBox'] = undefined;

/**
 * <p>A list of one or more Amazon Location categories to filter the returned places. If you include more than one category, the results will include results that match <i>any</i> of the categories listed.</p> <p>For more information about using categories, including a list of Amazon Location categories, see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/category-filtering.html\">Categories and filtering</a>, in the <i>Amazon Location Service Developer Guide</i>.</p>
 * @member {Array.<String>} FilterCategories
 */
SearchPlaceIndexForSuggestionsRequest.prototype['FilterCategories'] = undefined;

/**
 * <p>An optional parameter that limits the search results by returning only suggestions within the provided list of countries.</p> <ul> <li> <p>Use the <a href=\"https://www.iso.org/iso-3166-country-codes.html\">ISO 3166</a> 3-digit country code. For example, Australia uses three upper-case characters: <code>AUS</code>.</p> </li> </ul>
 * @member {Array.<String>} FilterCountries
 */
SearchPlaceIndexForSuggestionsRequest.prototype['FilterCountries'] = undefined;

/**
 * <p>The preferred language used to return results. The value must be a valid <a href=\"https://tools.ietf.org/search/bcp47\">BCP 47</a> language tag, for example, <code>en</code> for English.</p> <p>This setting affects the languages used in the results. If no language is specified, or not supported for a particular result, the partner automatically chooses a language for the result.</p> <p>For an example, we'll use the Greek language. You search for <code>Athens, Gr</code> to get suggestions with the <code>language</code> parameter set to <code>en</code>. The results found will most likely be returned as <code>Athens, Greece</code>.</p> <p>If you set the <code>language</code> parameter to <code>el</code>, for Greek, then the result found will more likely be returned as <code>Αθήνα, Ελλάδα</code>.</p> <p>If the data provider does not have a value for Greek, the result will be in a language that the provider does support.</p>
 * @member {String} Language
 */
SearchPlaceIndexForSuggestionsRequest.prototype['Language'] = undefined;

/**
 * <p>An optional parameter. The maximum number of results returned per request. </p> <p>The default: <code>5</code> </p>
 * @member {Number} MaxResults
 */
SearchPlaceIndexForSuggestionsRequest.prototype['MaxResults'] = undefined;

/**
 * The free-form partial text to use to generate place suggestions. For example, <code>eiffel tow</code>.
 * @member {String} Text
 */
SearchPlaceIndexForSuggestionsRequest.prototype['Text'] = undefined;






export default SearchPlaceIndexForSuggestionsRequest;

