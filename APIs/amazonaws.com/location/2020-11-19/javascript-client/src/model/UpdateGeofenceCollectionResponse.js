/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateGeofenceCollectionResponse model module.
 * @module model/UpdateGeofenceCollectionResponse
 * @version 2020-11-19
 */
class UpdateGeofenceCollectionResponse {
    /**
     * Constructs a new <code>UpdateGeofenceCollectionResponse</code>.
     * @alias module:model/UpdateGeofenceCollectionResponse
     * @param collectionArn {String} 
     * @param collectionName {String} 
     * @param updateTime {Date} 
     */
    constructor(collectionArn, collectionName, updateTime) { 
        
        UpdateGeofenceCollectionResponse.initialize(this, collectionArn, collectionName, updateTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, collectionArn, collectionName, updateTime) { 
        obj['CollectionArn'] = collectionArn;
        obj['CollectionName'] = collectionName;
        obj['UpdateTime'] = updateTime;
    }

    /**
     * Constructs a <code>UpdateGeofenceCollectionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateGeofenceCollectionResponse} obj Optional instance to populate.
     * @return {module:model/UpdateGeofenceCollectionResponse} The populated <code>UpdateGeofenceCollectionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateGeofenceCollectionResponse();

            if (data.hasOwnProperty('CollectionArn')) {
                obj['CollectionArn'] = ApiClient.convertToType(data['CollectionArn'], 'String');
            }
            if (data.hasOwnProperty('CollectionName')) {
                obj['CollectionName'] = ApiClient.convertToType(data['CollectionName'], 'String');
            }
            if (data.hasOwnProperty('UpdateTime')) {
                obj['UpdateTime'] = ApiClient.convertToType(data['UpdateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateGeofenceCollectionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateGeofenceCollectionResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateGeofenceCollectionResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CollectionArn`
        if (data['CollectionArn']) { // data not null
          String.validateJSON(data['CollectionArn']);
        }
        // validate the optional field `CollectionName`
        if (data['CollectionName']) { // data not null
          String.validateJSON(data['CollectionName']);
        }
        // validate the optional field `UpdateTime`
        if (data['UpdateTime']) { // data not null
          Date.validateJSON(data['UpdateTime']);
        }

        return true;
    }


}

UpdateGeofenceCollectionResponse.RequiredProperties = ["CollectionArn", "CollectionName", "UpdateTime"];

/**
 * @member {String} CollectionArn
 */
UpdateGeofenceCollectionResponse.prototype['CollectionArn'] = undefined;

/**
 * @member {String} CollectionName
 */
UpdateGeofenceCollectionResponse.prototype['CollectionName'] = undefined;

/**
 * @member {Date} UpdateTime
 */
UpdateGeofenceCollectionResponse.prototype['UpdateTime'] = undefined;






export default UpdateGeofenceCollectionResponse;

