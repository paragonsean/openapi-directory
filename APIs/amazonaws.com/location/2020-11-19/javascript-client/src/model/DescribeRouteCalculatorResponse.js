/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricingPlan from './PricingPlan';

/**
 * The DescribeRouteCalculatorResponse model module.
 * @module model/DescribeRouteCalculatorResponse
 * @version 2020-11-19
 */
class DescribeRouteCalculatorResponse {
    /**
     * Constructs a new <code>DescribeRouteCalculatorResponse</code>.
     * @alias module:model/DescribeRouteCalculatorResponse
     * @param calculatorArn {String} 
     * @param calculatorName {String} 
     * @param createTime {Date} 
     * @param dataSource {String} 
     * @param description {String} 
     * @param updateTime {Date} 
     */
    constructor(calculatorArn, calculatorName, createTime, dataSource, description, updateTime) { 
        
        DescribeRouteCalculatorResponse.initialize(this, calculatorArn, calculatorName, createTime, dataSource, description, updateTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, calculatorArn, calculatorName, createTime, dataSource, description, updateTime) { 
        obj['CalculatorArn'] = calculatorArn;
        obj['CalculatorName'] = calculatorName;
        obj['CreateTime'] = createTime;
        obj['DataSource'] = dataSource;
        obj['Description'] = description;
        obj['UpdateTime'] = updateTime;
    }

    /**
     * Constructs a <code>DescribeRouteCalculatorResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeRouteCalculatorResponse} obj Optional instance to populate.
     * @return {module:model/DescribeRouteCalculatorResponse} The populated <code>DescribeRouteCalculatorResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeRouteCalculatorResponse();

            if (data.hasOwnProperty('CalculatorArn')) {
                obj['CalculatorArn'] = ApiClient.convertToType(data['CalculatorArn'], 'String');
            }
            if (data.hasOwnProperty('CalculatorName')) {
                obj['CalculatorName'] = ApiClient.convertToType(data['CalculatorName'], 'String');
            }
            if (data.hasOwnProperty('CreateTime')) {
                obj['CreateTime'] = ApiClient.convertToType(data['CreateTime'], 'Date');
            }
            if (data.hasOwnProperty('DataSource')) {
                obj['DataSource'] = ApiClient.convertToType(data['DataSource'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('PricingPlan')) {
                obj['PricingPlan'] = ApiClient.convertToType(data['PricingPlan'], PricingPlan);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('UpdateTime')) {
                obj['UpdateTime'] = ApiClient.convertToType(data['UpdateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeRouteCalculatorResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeRouteCalculatorResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeRouteCalculatorResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CalculatorArn`
        if (data['CalculatorArn']) { // data not null
          String.validateJSON(data['CalculatorArn']);
        }
        // validate the optional field `CalculatorName`
        if (data['CalculatorName']) { // data not null
          String.validateJSON(data['CalculatorName']);
        }
        // validate the optional field `CreateTime`
        if (data['CreateTime']) { // data not null
          Date.validateJSON(data['CreateTime']);
        }
        // validate the optional field `DataSource`
        if (data['DataSource']) { // data not null
          String.validateJSON(data['DataSource']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `PricingPlan`
        if (data['PricingPlan']) { // data not null
          PricingPlan.validateJSON(data['PricingPlan']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `UpdateTime`
        if (data['UpdateTime']) { // data not null
          Date.validateJSON(data['UpdateTime']);
        }

        return true;
    }


}

DescribeRouteCalculatorResponse.RequiredProperties = ["CalculatorArn", "CalculatorName", "CreateTime", "DataSource", "Description", "UpdateTime"];

/**
 * @member {String} CalculatorArn
 */
DescribeRouteCalculatorResponse.prototype['CalculatorArn'] = undefined;

/**
 * @member {String} CalculatorName
 */
DescribeRouteCalculatorResponse.prototype['CalculatorName'] = undefined;

/**
 * @member {Date} CreateTime
 */
DescribeRouteCalculatorResponse.prototype['CreateTime'] = undefined;

/**
 * @member {String} DataSource
 */
DescribeRouteCalculatorResponse.prototype['DataSource'] = undefined;

/**
 * @member {String} Description
 */
DescribeRouteCalculatorResponse.prototype['Description'] = undefined;

/**
 * @member {module:model/PricingPlan} PricingPlan
 */
DescribeRouteCalculatorResponse.prototype['PricingPlan'] = undefined;

/**
 * @member {Object} Tags
 */
DescribeRouteCalculatorResponse.prototype['Tags'] = undefined;

/**
 * @member {Date} UpdateTime
 */
DescribeRouteCalculatorResponse.prototype['UpdateTime'] = undefined;






export default DescribeRouteCalculatorResponse;

