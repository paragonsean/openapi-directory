/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PositionFiltering from './PositionFiltering';
import PricingPlan from './PricingPlan';

/**
 * The DescribeTrackerResponse model module.
 * @module model/DescribeTrackerResponse
 * @version 2020-11-19
 */
class DescribeTrackerResponse {
    /**
     * Constructs a new <code>DescribeTrackerResponse</code>.
     * @alias module:model/DescribeTrackerResponse
     * @param createTime {Date} 
     * @param description {String} 
     * @param trackerArn {String} 
     * @param trackerName {String} 
     * @param updateTime {Date} 
     */
    constructor(createTime, description, trackerArn, trackerName, updateTime) { 
        
        DescribeTrackerResponse.initialize(this, createTime, description, trackerArn, trackerName, updateTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createTime, description, trackerArn, trackerName, updateTime) { 
        obj['CreateTime'] = createTime;
        obj['Description'] = description;
        obj['TrackerArn'] = trackerArn;
        obj['TrackerName'] = trackerName;
        obj['UpdateTime'] = updateTime;
    }

    /**
     * Constructs a <code>DescribeTrackerResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeTrackerResponse} obj Optional instance to populate.
     * @return {module:model/DescribeTrackerResponse} The populated <code>DescribeTrackerResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeTrackerResponse();

            if (data.hasOwnProperty('CreateTime')) {
                obj['CreateTime'] = ApiClient.convertToType(data['CreateTime'], 'Date');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('EventBridgeEnabled')) {
                obj['EventBridgeEnabled'] = ApiClient.convertToType(data['EventBridgeEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('PositionFiltering')) {
                obj['PositionFiltering'] = ApiClient.convertToType(data['PositionFiltering'], PositionFiltering);
            }
            if (data.hasOwnProperty('PricingPlan')) {
                obj['PricingPlan'] = ApiClient.convertToType(data['PricingPlan'], PricingPlan);
            }
            if (data.hasOwnProperty('PricingPlanDataSource')) {
                obj['PricingPlanDataSource'] = ApiClient.convertToType(data['PricingPlanDataSource'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('TrackerArn')) {
                obj['TrackerArn'] = ApiClient.convertToType(data['TrackerArn'], 'String');
            }
            if (data.hasOwnProperty('TrackerName')) {
                obj['TrackerName'] = ApiClient.convertToType(data['TrackerName'], 'String');
            }
            if (data.hasOwnProperty('UpdateTime')) {
                obj['UpdateTime'] = ApiClient.convertToType(data['UpdateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeTrackerResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeTrackerResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeTrackerResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CreateTime`
        if (data['CreateTime']) { // data not null
          Date.validateJSON(data['CreateTime']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `EventBridgeEnabled`
        if (data['EventBridgeEnabled']) { // data not null
          Boolean.validateJSON(data['EventBridgeEnabled']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `PositionFiltering`
        if (data['PositionFiltering']) { // data not null
          PositionFiltering.validateJSON(data['PositionFiltering']);
        }
        // validate the optional field `PricingPlan`
        if (data['PricingPlan']) { // data not null
          PricingPlan.validateJSON(data['PricingPlan']);
        }
        // validate the optional field `PricingPlanDataSource`
        if (data['PricingPlanDataSource']) { // data not null
          String.validateJSON(data['PricingPlanDataSource']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `TrackerArn`
        if (data['TrackerArn']) { // data not null
          String.validateJSON(data['TrackerArn']);
        }
        // validate the optional field `TrackerName`
        if (data['TrackerName']) { // data not null
          String.validateJSON(data['TrackerName']);
        }
        // validate the optional field `UpdateTime`
        if (data['UpdateTime']) { // data not null
          Date.validateJSON(data['UpdateTime']);
        }

        return true;
    }


}

DescribeTrackerResponse.RequiredProperties = ["CreateTime", "Description", "TrackerArn", "TrackerName", "UpdateTime"];

/**
 * @member {Date} CreateTime
 */
DescribeTrackerResponse.prototype['CreateTime'] = undefined;

/**
 * @member {String} Description
 */
DescribeTrackerResponse.prototype['Description'] = undefined;

/**
 * @member {Boolean} EventBridgeEnabled
 */
DescribeTrackerResponse.prototype['EventBridgeEnabled'] = undefined;

/**
 * @member {String} KmsKeyId
 */
DescribeTrackerResponse.prototype['KmsKeyId'] = undefined;

/**
 * @member {module:model/PositionFiltering} PositionFiltering
 */
DescribeTrackerResponse.prototype['PositionFiltering'] = undefined;

/**
 * @member {module:model/PricingPlan} PricingPlan
 */
DescribeTrackerResponse.prototype['PricingPlan'] = undefined;

/**
 * @member {String} PricingPlanDataSource
 */
DescribeTrackerResponse.prototype['PricingPlanDataSource'] = undefined;

/**
 * @member {Object} Tags
 */
DescribeTrackerResponse.prototype['Tags'] = undefined;

/**
 * @member {String} TrackerArn
 */
DescribeTrackerResponse.prototype['TrackerArn'] = undefined;

/**
 * @member {String} TrackerName
 */
DescribeTrackerResponse.prototype['TrackerName'] = undefined;

/**
 * @member {Date} UpdateTime
 */
DescribeTrackerResponse.prototype['UpdateTime'] = undefined;






export default DescribeTrackerResponse;

