/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GeofenceGeometry from './GeofenceGeometry';
import PutGeofenceRequestGeometryCircle from './PutGeofenceRequestGeometryCircle';

/**
 * The BatchPutGeofenceRequestEntryGeometry model module.
 * @module model/BatchPutGeofenceRequestEntryGeometry
 * @version 2020-11-19
 */
class BatchPutGeofenceRequestEntryGeometry {
    /**
     * Constructs a new <code>BatchPutGeofenceRequestEntryGeometry</code>.
     * @alias module:model/BatchPutGeofenceRequestEntryGeometry
     * @implements module:model/GeofenceGeometry
     */
    constructor() { 
        GeofenceGeometry.initialize(this);
        BatchPutGeofenceRequestEntryGeometry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchPutGeofenceRequestEntryGeometry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchPutGeofenceRequestEntryGeometry} obj Optional instance to populate.
     * @return {module:model/BatchPutGeofenceRequestEntryGeometry} The populated <code>BatchPutGeofenceRequestEntryGeometry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchPutGeofenceRequestEntryGeometry();
            GeofenceGeometry.constructFromObject(data, obj);

            if (data.hasOwnProperty('Circle')) {
                obj['Circle'] = PutGeofenceRequestGeometryCircle.constructFromObject(data['Circle']);
            }
            if (data.hasOwnProperty('Polygon')) {
                obj['Polygon'] = ApiClient.convertToType(data['Polygon'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchPutGeofenceRequestEntryGeometry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchPutGeofenceRequestEntryGeometry</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Circle`
        if (data['Circle']) { // data not null
          PutGeofenceRequestGeometryCircle.validateJSON(data['Circle']);
        }
        // validate the optional field `Polygon`
        if (data['Polygon']) { // data not null
          Array.validateJSON(data['Polygon']);
        }

        return true;
    }


}



/**
 * @member {module:model/PutGeofenceRequestGeometryCircle} Circle
 */
BatchPutGeofenceRequestEntryGeometry.prototype['Circle'] = undefined;

/**
 * @member {Array} Polygon
 */
BatchPutGeofenceRequestEntryGeometry.prototype['Polygon'] = undefined;


// Implement GeofenceGeometry interface:
/**
 * @member {module:model/PutGeofenceRequestGeometryCircle} Circle
 */
GeofenceGeometry.prototype['Circle'] = undefined;
/**
 * @member {Array} Polygon
 */
GeofenceGeometry.prototype['Polygon'] = undefined;




export default BatchPutGeofenceRequestEntryGeometry;

