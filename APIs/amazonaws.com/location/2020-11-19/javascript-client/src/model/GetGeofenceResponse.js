/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetGeofenceResponseGeometry from './GetGeofenceResponseGeometry';

/**
 * The GetGeofenceResponse model module.
 * @module model/GetGeofenceResponse
 * @version 2020-11-19
 */
class GetGeofenceResponse {
    /**
     * Constructs a new <code>GetGeofenceResponse</code>.
     * @alias module:model/GetGeofenceResponse
     * @param createTime {Date} 
     * @param geofenceId {String} 
     * @param geometry {module:model/GetGeofenceResponseGeometry} 
     * @param status {String} 
     * @param updateTime {Date} 
     */
    constructor(createTime, geofenceId, geometry, status, updateTime) { 
        
        GetGeofenceResponse.initialize(this, createTime, geofenceId, geometry, status, updateTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createTime, geofenceId, geometry, status, updateTime) { 
        obj['CreateTime'] = createTime;
        obj['GeofenceId'] = geofenceId;
        obj['Geometry'] = geometry;
        obj['Status'] = status;
        obj['UpdateTime'] = updateTime;
    }

    /**
     * Constructs a <code>GetGeofenceResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetGeofenceResponse} obj Optional instance to populate.
     * @return {module:model/GetGeofenceResponse} The populated <code>GetGeofenceResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetGeofenceResponse();

            if (data.hasOwnProperty('CreateTime')) {
                obj['CreateTime'] = ApiClient.convertToType(data['CreateTime'], 'Date');
            }
            if (data.hasOwnProperty('GeofenceId')) {
                obj['GeofenceId'] = ApiClient.convertToType(data['GeofenceId'], 'String');
            }
            if (data.hasOwnProperty('GeofenceProperties')) {
                obj['GeofenceProperties'] = ApiClient.convertToType(data['GeofenceProperties'], Object);
            }
            if (data.hasOwnProperty('Geometry')) {
                obj['Geometry'] = GetGeofenceResponseGeometry.constructFromObject(data['Geometry']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('UpdateTime')) {
                obj['UpdateTime'] = ApiClient.convertToType(data['UpdateTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetGeofenceResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetGeofenceResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetGeofenceResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CreateTime`
        if (data['CreateTime']) { // data not null
          Date.validateJSON(data['CreateTime']);
        }
        // validate the optional field `GeofenceId`
        if (data['GeofenceId']) { // data not null
          String.validateJSON(data['GeofenceId']);
        }
        // validate the optional field `GeofenceProperties`
        if (data['GeofenceProperties']) { // data not null
          Object.validateJSON(data['GeofenceProperties']);
        }
        // validate the optional field `Geometry`
        if (data['Geometry']) { // data not null
          GetGeofenceResponseGeometry.validateJSON(data['Geometry']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `UpdateTime`
        if (data['UpdateTime']) { // data not null
          Date.validateJSON(data['UpdateTime']);
        }

        return true;
    }


}

GetGeofenceResponse.RequiredProperties = ["CreateTime", "GeofenceId", "Geometry", "Status", "UpdateTime"];

/**
 * @member {Date} CreateTime
 */
GetGeofenceResponse.prototype['CreateTime'] = undefined;

/**
 * @member {String} GeofenceId
 */
GetGeofenceResponse.prototype['GeofenceId'] = undefined;

/**
 * @member {Object} GeofenceProperties
 */
GetGeofenceResponse.prototype['GeofenceProperties'] = undefined;

/**
 * @member {module:model/GetGeofenceResponseGeometry} Geometry
 */
GetGeofenceResponse.prototype['Geometry'] = undefined;

/**
 * @member {String} Status
 */
GetGeofenceResponse.prototype['Status'] = undefined;

/**
 * @member {Date} UpdateTime
 */
GetGeofenceResponse.prototype['UpdateTime'] = undefined;






export default GetGeofenceResponse;

