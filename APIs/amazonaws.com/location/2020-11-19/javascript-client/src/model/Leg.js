/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LegGeometry from './LegGeometry';

/**
 * The Leg model module.
 * @module model/Leg
 * @version 2020-11-19
 */
class Leg {
    /**
     * Constructs a new <code>Leg</code>.
     * &lt;p&gt;Contains the calculated route&#39;s details for each path between a pair of positions. The number of legs returned corresponds to one fewer than the total number of positions in the request. &lt;/p&gt; &lt;p&gt;For example, a route with a departure position and destination position returns one leg with the positions &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html\&quot;&gt;snapped to a nearby road&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;StartPosition&lt;/code&gt; is the departure position.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;EndPosition&lt;/code&gt; is the destination position.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A route with a waypoint between the departure and destination position returns two legs with the positions snapped to a nearby road:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Leg 1: The &lt;code&gt;StartPosition&lt;/code&gt; is the departure position . The &lt;code&gt;EndPosition&lt;/code&gt; is the waypoint positon.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Leg 2: The &lt;code&gt;StartPosition&lt;/code&gt; is the waypoint position. The &lt;code&gt;EndPosition&lt;/code&gt; is the destination position.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/Leg
     * @param distance {Number} 
     * @param durationSeconds {Number} 
     * @param endPosition {Array} 
     * @param startPosition {Array} 
     * @param steps {Array} 
     */
    constructor(distance, durationSeconds, endPosition, startPosition, steps) { 
        
        Leg.initialize(this, distance, durationSeconds, endPosition, startPosition, steps);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, distance, durationSeconds, endPosition, startPosition, steps) { 
        obj['Distance'] = distance;
        obj['DurationSeconds'] = durationSeconds;
        obj['EndPosition'] = endPosition;
        obj['StartPosition'] = startPosition;
        obj['Steps'] = steps;
    }

    /**
     * Constructs a <code>Leg</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Leg} obj Optional instance to populate.
     * @return {module:model/Leg} The populated <code>Leg</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Leg();

            if (data.hasOwnProperty('Distance')) {
                obj['Distance'] = ApiClient.convertToType(data['Distance'], 'Number');
            }
            if (data.hasOwnProperty('DurationSeconds')) {
                obj['DurationSeconds'] = ApiClient.convertToType(data['DurationSeconds'], 'Number');
            }
            if (data.hasOwnProperty('EndPosition')) {
                obj['EndPosition'] = ApiClient.convertToType(data['EndPosition'], Array);
            }
            if (data.hasOwnProperty('Geometry')) {
                obj['Geometry'] = LegGeometry.constructFromObject(data['Geometry']);
            }
            if (data.hasOwnProperty('StartPosition')) {
                obj['StartPosition'] = ApiClient.convertToType(data['StartPosition'], Array);
            }
            if (data.hasOwnProperty('Steps')) {
                obj['Steps'] = ApiClient.convertToType(data['Steps'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Leg</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Leg</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Leg.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Distance`
        if (data['Distance']) { // data not null
          Number.validateJSON(data['Distance']);
        }
        // validate the optional field `DurationSeconds`
        if (data['DurationSeconds']) { // data not null
          Number.validateJSON(data['DurationSeconds']);
        }
        // validate the optional field `EndPosition`
        if (data['EndPosition']) { // data not null
          Array.validateJSON(data['EndPosition']);
        }
        // validate the optional field `Geometry`
        if (data['Geometry']) { // data not null
          LegGeometry.validateJSON(data['Geometry']);
        }
        // validate the optional field `StartPosition`
        if (data['StartPosition']) { // data not null
          Array.validateJSON(data['StartPosition']);
        }
        // validate the optional field `Steps`
        if (data['Steps']) { // data not null
          Array.validateJSON(data['Steps']);
        }

        return true;
    }


}

Leg.RequiredProperties = ["Distance", "DurationSeconds", "EndPosition", "StartPosition", "Steps"];

/**
 * @member {Number} Distance
 */
Leg.prototype['Distance'] = undefined;

/**
 * @member {Number} DurationSeconds
 */
Leg.prototype['DurationSeconds'] = undefined;

/**
 * @member {Array} EndPosition
 */
Leg.prototype['EndPosition'] = undefined;

/**
 * @member {module:model/LegGeometry} Geometry
 */
Leg.prototype['Geometry'] = undefined;

/**
 * @member {Array} StartPosition
 */
Leg.prototype['StartPosition'] = undefined;

/**
 * @member {Array} Steps
 */
Leg.prototype['Steps'] = undefined;






export default Leg;

