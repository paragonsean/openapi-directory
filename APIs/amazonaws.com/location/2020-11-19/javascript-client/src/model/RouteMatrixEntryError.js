/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RouteMatrixEntryError from './RouteMatrixEntryError';
import RouteMatrixErrorCode from './RouteMatrixErrorCode';

/**
 * The RouteMatrixEntryError model module.
 * @module model/RouteMatrixEntryError
 * @version 2020-11-19
 */
class RouteMatrixEntryError {
    /**
     * Constructs a new <code>RouteMatrixEntryError</code>.
     * @alias module:model/RouteMatrixEntryError
     * @implements module:model/RouteMatrixEntryError
     * @param code {module:model/RouteMatrixErrorCode} 
     */
    constructor(code) { 
        RouteMatrixEntryError.initialize(this, code);
        RouteMatrixEntryError.initialize(this, code);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code) { 
        obj['Code'] = code;
    }

    /**
     * Constructs a <code>RouteMatrixEntryError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RouteMatrixEntryError} obj Optional instance to populate.
     * @return {module:model/RouteMatrixEntryError} The populated <code>RouteMatrixEntryError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RouteMatrixEntryError();
            RouteMatrixEntryError.constructFromObject(data, obj);

            if (data.hasOwnProperty('Code')) {
                obj['Code'] = ApiClient.convertToType(data['Code'], RouteMatrixErrorCode);
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RouteMatrixEntryError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RouteMatrixEntryError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RouteMatrixEntryError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Code`
        if (data['Code']) { // data not null
          RouteMatrixErrorCode.validateJSON(data['Code']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }

        return true;
    }


}

RouteMatrixEntryError.RequiredProperties = ["Code"];

/**
 * @member {module:model/RouteMatrixErrorCode} Code
 */
RouteMatrixEntryError.prototype['Code'] = undefined;

/**
 * @member {String} Message
 */
RouteMatrixEntryError.prototype['Message'] = undefined;


// Implement RouteMatrixEntryError interface:
/**
 * @member {module:model/RouteMatrixErrorCode} Code
 */
RouteMatrixEntryError.prototype['Code'] = undefined;
/**
 * @member {String} Message
 */
RouteMatrixEntryError.prototype['Message'] = undefined;




export default RouteMatrixEntryError;

