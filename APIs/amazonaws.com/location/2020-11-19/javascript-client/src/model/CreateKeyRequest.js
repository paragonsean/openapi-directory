/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateKeyRequestRestrictions from './CreateKeyRequestRestrictions';

/**
 * The CreateKeyRequest model module.
 * @module model/CreateKeyRequest
 * @version 2020-11-19
 */
class CreateKeyRequest {
    /**
     * Constructs a new <code>CreateKeyRequest</code>.
     * @alias module:model/CreateKeyRequest
     * @param keyName {String} <p>A custom name for the API key resource.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique API key name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleAPIKey</code>.</p> </li> </ul>
     * @param restrictions {module:model/CreateKeyRequestRestrictions} 
     */
    constructor(keyName, restrictions) { 
        
        CreateKeyRequest.initialize(this, keyName, restrictions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keyName, restrictions) { 
        obj['KeyName'] = keyName;
        obj['Restrictions'] = restrictions;
    }

    /**
     * Constructs a <code>CreateKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateKeyRequest} obj Optional instance to populate.
     * @return {module:model/CreateKeyRequest} The populated <code>CreateKeyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateKeyRequest();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ExpireTime')) {
                obj['ExpireTime'] = ApiClient.convertToType(data['ExpireTime'], 'Date');
            }
            if (data.hasOwnProperty('KeyName')) {
                obj['KeyName'] = ApiClient.convertToType(data['KeyName'], 'String');
            }
            if (data.hasOwnProperty('NoExpiry')) {
                obj['NoExpiry'] = ApiClient.convertToType(data['NoExpiry'], 'Boolean');
            }
            if (data.hasOwnProperty('Restrictions')) {
                obj['Restrictions'] = CreateKeyRequestRestrictions.constructFromObject(data['Restrictions']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateKeyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateKeyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateKeyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['KeyName'] && !(typeof data['KeyName'] === 'string' || data['KeyName'] instanceof String)) {
            throw new Error("Expected the field `KeyName` to be a primitive type in the JSON string but got " + data['KeyName']);
        }
        // validate the optional field `Restrictions`
        if (data['Restrictions']) { // data not null
          CreateKeyRequestRestrictions.validateJSON(data['Restrictions']);
        }

        return true;
    }


}

CreateKeyRequest.RequiredProperties = ["KeyName", "Restrictions"];

/**
 * An optional description for the API key resource.
 * @member {String} Description
 */
CreateKeyRequest.prototype['Description'] = undefined;

/**
 * The optional timestamp for when the API key resource will expire in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\"> ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. One of <code>NoExpiry</code> or <code>ExpireTime</code> must be set.
 * @member {Date} ExpireTime
 */
CreateKeyRequest.prototype['ExpireTime'] = undefined;

/**
 * <p>A custom name for the API key resource.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique API key name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleAPIKey</code>.</p> </li> </ul>
 * @member {String} KeyName
 */
CreateKeyRequest.prototype['KeyName'] = undefined;

/**
 * Optionally set to <code>true</code> to set no expiration time for the API key. One of <code>NoExpiry</code> or <code>ExpireTime</code> must be set.
 * @member {Boolean} NoExpiry
 */
CreateKeyRequest.prototype['NoExpiry'] = undefined;

/**
 * @member {module:model/CreateKeyRequestRestrictions} Restrictions
 */
CreateKeyRequest.prototype['Restrictions'] = undefined;

/**
 * <p>Applies one or more tags to the map resource. A tag is a key-value pair that helps manage, identify, search, and filter your resources by labelling them.</p> <p>Format: <code>\"key\" : \"value\"</code> </p> <p>Restrictions:</p> <ul> <li> <p>Maximum 50 tags per resource</p> </li> <li> <p>Each resource tag must be unique with a maximum of one value.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length: 256 Unicode characters in UTF-8</p> </li> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @. </p> </li> <li> <p>Cannot use \"aws:\" as a prefix for a key.</p> </li> </ul>
 * @member {Object.<String, String>} Tags
 */
CreateKeyRequest.prototype['Tags'] = undefined;






export default CreateKeyRequest;

