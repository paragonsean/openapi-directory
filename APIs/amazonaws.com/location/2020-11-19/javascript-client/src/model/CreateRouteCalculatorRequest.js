/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRouteCalculatorRequest model module.
 * @module model/CreateRouteCalculatorRequest
 * @version 2020-11-19
 */
class CreateRouteCalculatorRequest {
    /**
     * Constructs a new <code>CreateRouteCalculatorRequest</code>.
     * @alias module:model/CreateRouteCalculatorRequest
     * @param calculatorName {String} <p>The name of the route calculator resource. </p> <p>Requirements:</p> <ul> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-), periods (.), and underscores (_).</p> </li> <li> <p>Must be a unique Route calculator resource name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleRouteCalculator</code>.</p> </li> </ul>
     * @param dataSource {String} <p>Specifies the data provider of traffic and road network data.</p> <note> <p>This field is case-sensitive. Enter the valid values as shown. For example, entering <code>HERE</code> returns an error.</p> </note> <p>Valid values include:</p> <ul> <li> <p> <code>Esri</code> – For additional information about <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/esri.html\">Esri</a>'s coverage in your region of interest, see <a href=\"https://doc.arcgis.com/en/arcgis-online/reference/network-coverage.htm\">Esri details on street networks and traffic coverage</a>.</p> <p>Route calculators that use Esri as a data source only calculate routes that are shorter than 400 km.</p> </li> <li> <p> <code>Grab</code> – Grab provides routing functionality for Southeast Asia. For additional information about <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/grab.html\">GrabMaps</a>' coverage, see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/grab.html#grab-coverage-area\">GrabMaps countries and areas covered</a>.</p> </li> <li> <p> <code>Here</code> – For additional information about <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/HERE.html\">HERE Technologies</a>' coverage in your region of interest, see <a href=\"https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/car-routing.html\">HERE car routing coverage</a> and <a href=\"https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/truck-routing.html\">HERE truck routing coverage</a>.</p> </li> </ul> <p>For additional information , see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html\">Data providers</a> on the <i>Amazon Location Service Developer Guide</i>.</p>
     */
    constructor(calculatorName, dataSource) { 
        
        CreateRouteCalculatorRequest.initialize(this, calculatorName, dataSource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, calculatorName, dataSource) { 
        obj['CalculatorName'] = calculatorName;
        obj['DataSource'] = dataSource;
    }

    /**
     * Constructs a <code>CreateRouteCalculatorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRouteCalculatorRequest} obj Optional instance to populate.
     * @return {module:model/CreateRouteCalculatorRequest} The populated <code>CreateRouteCalculatorRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRouteCalculatorRequest();

            if (data.hasOwnProperty('CalculatorName')) {
                obj['CalculatorName'] = ApiClient.convertToType(data['CalculatorName'], 'String');
            }
            if (data.hasOwnProperty('DataSource')) {
                obj['DataSource'] = ApiClient.convertToType(data['DataSource'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('PricingPlan')) {
                obj['PricingPlan'] = ApiClient.convertToType(data['PricingPlan'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRouteCalculatorRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRouteCalculatorRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRouteCalculatorRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CalculatorName'] && !(typeof data['CalculatorName'] === 'string' || data['CalculatorName'] instanceof String)) {
            throw new Error("Expected the field `CalculatorName` to be a primitive type in the JSON string but got " + data['CalculatorName']);
        }
        // ensure the json data is a string
        if (data['DataSource'] && !(typeof data['DataSource'] === 'string' || data['DataSource'] instanceof String)) {
            throw new Error("Expected the field `DataSource` to be a primitive type in the JSON string but got " + data['DataSource']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['PricingPlan'] && !(typeof data['PricingPlan'] === 'string' || data['PricingPlan'] instanceof String)) {
            throw new Error("Expected the field `PricingPlan` to be a primitive type in the JSON string but got " + data['PricingPlan']);
        }

        return true;
    }


}

CreateRouteCalculatorRequest.RequiredProperties = ["CalculatorName", "DataSource"];

/**
 * <p>The name of the route calculator resource. </p> <p>Requirements:</p> <ul> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-), periods (.), and underscores (_).</p> </li> <li> <p>Must be a unique Route calculator resource name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleRouteCalculator</code>.</p> </li> </ul>
 * @member {String} CalculatorName
 */
CreateRouteCalculatorRequest.prototype['CalculatorName'] = undefined;

/**
 * <p>Specifies the data provider of traffic and road network data.</p> <note> <p>This field is case-sensitive. Enter the valid values as shown. For example, entering <code>HERE</code> returns an error.</p> </note> <p>Valid values include:</p> <ul> <li> <p> <code>Esri</code> – For additional information about <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/esri.html\">Esri</a>'s coverage in your region of interest, see <a href=\"https://doc.arcgis.com/en/arcgis-online/reference/network-coverage.htm\">Esri details on street networks and traffic coverage</a>.</p> <p>Route calculators that use Esri as a data source only calculate routes that are shorter than 400 km.</p> </li> <li> <p> <code>Grab</code> – Grab provides routing functionality for Southeast Asia. For additional information about <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/grab.html\">GrabMaps</a>' coverage, see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/grab.html#grab-coverage-area\">GrabMaps countries and areas covered</a>.</p> </li> <li> <p> <code>Here</code> – For additional information about <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/HERE.html\">HERE Technologies</a>' coverage in your region of interest, see <a href=\"https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/car-routing.html\">HERE car routing coverage</a> and <a href=\"https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/truck-routing.html\">HERE truck routing coverage</a>.</p> </li> </ul> <p>For additional information , see <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html\">Data providers</a> on the <i>Amazon Location Service Developer Guide</i>.</p>
 * @member {String} DataSource
 */
CreateRouteCalculatorRequest.prototype['DataSource'] = undefined;

/**
 * The optional description for the route calculator resource.
 * @member {String} Description
 */
CreateRouteCalculatorRequest.prototype['Description'] = undefined;

/**
 * No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
 * @member {module:model/CreateRouteCalculatorRequest.PricingPlanEnum} PricingPlan
 */
CreateRouteCalculatorRequest.prototype['PricingPlan'] = undefined;

/**
 * <p>Applies one or more tags to the route calculator resource. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them.</p> <ul> <li> <p>For example: { <code>\"tag1\" : \"value1\"</code>, <code>\"tag2\" : \"value2\"</code>}</p> </li> </ul> <p>Format: <code>\"key\" : \"value\"</code> </p> <p>Restrictions:</p> <ul> <li> <p>Maximum 50 tags per resource</p> </li> <li> <p>Each resource tag must be unique with a maximum of one value.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length: 256 Unicode characters in UTF-8</p> </li> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @. </p> </li> <li> <p>Cannot use \"aws:\" as a prefix for a key.</p> </li> </ul>
 * @member {Object.<String, String>} Tags
 */
CreateRouteCalculatorRequest.prototype['Tags'] = undefined;





/**
 * Allowed values for the <code>PricingPlan</code> property.
 * @enum {String}
 * @readonly
 */
CreateRouteCalculatorRequest['PricingPlanEnum'] = {

    /**
     * value: "RequestBasedUsage"
     * @const
     */
    "RequestBasedUsage": "RequestBasedUsage",

    /**
     * value: "MobileAssetTracking"
     * @const
     */
    "MobileAssetTracking": "MobileAssetTracking",

    /**
     * value: "MobileAssetManagement"
     * @const
     */
    "MobileAssetManagement": "MobileAssetManagement"
};



export default CreateRouteCalculatorRequest;

