/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateMapRequestConfiguration from './CreateMapRequestConfiguration';

/**
 * The CreateMapRequest model module.
 * @module model/CreateMapRequest
 * @version 2020-11-19
 */
class CreateMapRequest {
    /**
     * Constructs a new <code>CreateMapRequest</code>.
     * @alias module:model/CreateMapRequest
     * @param configuration {module:model/CreateMapRequestConfiguration} 
     * @param mapName {String} <p>The name for the map resource.</p> <p>Requirements:</p> <ul> <li> <p>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique map resource name. </p> </li> <li> <p>No spaces allowed. For example, <code>ExampleMap</code>.</p> </li> </ul>
     */
    constructor(configuration, mapName) { 
        
        CreateMapRequest.initialize(this, configuration, mapName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configuration, mapName) { 
        obj['Configuration'] = configuration;
        obj['MapName'] = mapName;
    }

    /**
     * Constructs a <code>CreateMapRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMapRequest} obj Optional instance to populate.
     * @return {module:model/CreateMapRequest} The populated <code>CreateMapRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMapRequest();

            if (data.hasOwnProperty('Configuration')) {
                obj['Configuration'] = CreateMapRequestConfiguration.constructFromObject(data['Configuration']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('MapName')) {
                obj['MapName'] = ApiClient.convertToType(data['MapName'], 'String');
            }
            if (data.hasOwnProperty('PricingPlan')) {
                obj['PricingPlan'] = ApiClient.convertToType(data['PricingPlan'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMapRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMapRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMapRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Configuration`
        if (data['Configuration']) { // data not null
          CreateMapRequestConfiguration.validateJSON(data['Configuration']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['MapName'] && !(typeof data['MapName'] === 'string' || data['MapName'] instanceof String)) {
            throw new Error("Expected the field `MapName` to be a primitive type in the JSON string but got " + data['MapName']);
        }
        // ensure the json data is a string
        if (data['PricingPlan'] && !(typeof data['PricingPlan'] === 'string' || data['PricingPlan'] instanceof String)) {
            throw new Error("Expected the field `PricingPlan` to be a primitive type in the JSON string but got " + data['PricingPlan']);
        }

        return true;
    }


}

CreateMapRequest.RequiredProperties = ["Configuration", "MapName"];

/**
 * @member {module:model/CreateMapRequestConfiguration} Configuration
 */
CreateMapRequest.prototype['Configuration'] = undefined;

/**
 * An optional description for the map resource.
 * @member {String} Description
 */
CreateMapRequest.prototype['Description'] = undefined;

/**
 * <p>The name for the map resource.</p> <p>Requirements:</p> <ul> <li> <p>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique map resource name. </p> </li> <li> <p>No spaces allowed. For example, <code>ExampleMap</code>.</p> </li> </ul>
 * @member {String} MapName
 */
CreateMapRequest.prototype['MapName'] = undefined;

/**
 * No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
 * @member {module:model/CreateMapRequest.PricingPlanEnum} PricingPlan
 */
CreateMapRequest.prototype['PricingPlan'] = undefined;

/**
 * <p>Applies one or more tags to the map resource. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them.</p> <p>Format: <code>\"key\" : \"value\"</code> </p> <p>Restrictions:</p> <ul> <li> <p>Maximum 50 tags per resource</p> </li> <li> <p>Each resource tag must be unique with a maximum of one value.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length: 256 Unicode characters in UTF-8</p> </li> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @. </p> </li> <li> <p>Cannot use \"aws:\" as a prefix for a key.</p> </li> </ul>
 * @member {Object.<String, String>} Tags
 */
CreateMapRequest.prototype['Tags'] = undefined;





/**
 * Allowed values for the <code>PricingPlan</code> property.
 * @enum {String}
 * @readonly
 */
CreateMapRequest['PricingPlanEnum'] = {

    /**
     * value: "RequestBasedUsage"
     * @const
     */
    "RequestBasedUsage": "RequestBasedUsage",

    /**
     * value: "MobileAssetTracking"
     * @const
     */
    "MobileAssetTracking": "MobileAssetTracking",

    /**
     * value: "MobileAssetManagement"
     * @const
     */
    "MobileAssetManagement": "MobileAssetManagement"
};



export default CreateMapRequest;

