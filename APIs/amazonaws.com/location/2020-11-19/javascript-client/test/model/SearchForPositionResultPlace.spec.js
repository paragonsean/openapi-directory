/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonLocationService);
  }
}(this, function(expect, AmazonLocationService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonLocationService.SearchForPositionResultPlace();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchForPositionResultPlace', function() {
    it('should create an instance of SearchForPositionResultPlace', function() {
      // uncomment below and update the code to test SearchForPositionResultPlace
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be.a(AmazonLocationService.SearchForPositionResultPlace);
    });

    it('should have the property addressNumber (base name: "AddressNumber")', function() {
      // uncomment below and update the code to test the property addressNumber
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "Categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property geometry (base name: "Geometry")', function() {
      // uncomment below and update the code to test the property geometry
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property interpolated (base name: "Interpolated")', function() {
      // uncomment below and update the code to test the property interpolated
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "Label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property municipality (base name: "Municipality")', function() {
      // uncomment below and update the code to test the property municipality
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property neighborhood (base name: "Neighborhood")', function() {
      // uncomment below and update the code to test the property neighborhood
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "PostalCode")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "Region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "Street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property subRegion (base name: "SubRegion")', function() {
      // uncomment below and update the code to test the property subRegion
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property supplementalCategories (base name: "SupplementalCategories")', function() {
      // uncomment below and update the code to test the property supplementalCategories
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "TimeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property unitNumber (base name: "UnitNumber")', function() {
      // uncomment below and update the code to test the property unitNumber
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

    it('should have the property unitType (base name: "UnitType")', function() {
      // uncomment below and update the code to test the property unitType
      //var instance = new AmazonLocationService.SearchForPositionResultPlace();
      //expect(instance).to.be();
    });

  });

}));
