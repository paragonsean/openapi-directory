/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILegGeometry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILegGeometry::OAILegGeometry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILegGeometry::OAILegGeometry() {
    this->initializeModel();
}

OAILegGeometry::~OAILegGeometry() {}

void OAILegGeometry::initializeModel() {

    m_line_string_isSet = false;
    m_line_string_isValid = false;
}

void OAILegGeometry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILegGeometry::fromJsonObject(QJsonObject json) {

    m_line_string_isValid = ::OpenAPI::fromJsonValue(m_line_string, json[QString("LineString")]);
    m_line_string_isSet = !json[QString("LineString")].isNull() && m_line_string_isValid;
}

QString OAILegGeometry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILegGeometry::asJsonObject() const {
    QJsonObject obj;
    if (m_line_string.isSet()) {
        obj.insert(QString("LineString"), ::OpenAPI::toJsonValue(m_line_string));
    }
    return obj;
}

QList OAILegGeometry::getLineString() const {
    return m_line_string;
}
void OAILegGeometry::setLineString(const QList &line_string) {
    m_line_string = line_string;
    m_line_string_isSet = true;
}

bool OAILegGeometry::is_line_string_Set() const{
    return m_line_string_isSet;
}

bool OAILegGeometry::is_line_string_Valid() const{
    return m_line_string_isValid;
}

bool OAILegGeometry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_line_string.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILegGeometry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
