/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITravelMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITravelMode::OAITravelMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITravelMode::OAITravelMode() {
    this->initializeModel();
}

OAITravelMode::~OAITravelMode() {}

void OAITravelMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITravelMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITravelMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Car", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelMode::CAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Truck", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelMode::TRUCK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Walking", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelMode::WALKING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Bicycle", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelMode::BICYCLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Motorcycle", Qt::CaseInsensitive) == 0) {
        m_value = eOAITravelMode::MOTORCYCLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITravelMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITravelMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITravelMode::CAR:
            val = "Car";
            break;
        case eOAITravelMode::TRUCK:
            val = "Truck";
            break;
        case eOAITravelMode::WALKING:
            val = "Walking";
            break;
        case eOAITravelMode::BICYCLE:
            val = "Bicycle";
            break;
        case eOAITravelMode::MOTORCYCLE:
            val = "Motorcycle";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITravelMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITravelMode::eOAITravelMode OAITravelMode::getValue() const {
    return m_value;
}

void OAITravelMode::setValue(const OAITravelMode::eOAITravelMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITravelMode::isSet() const {
    
    return m_value_isSet;
}

bool OAITravelMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
