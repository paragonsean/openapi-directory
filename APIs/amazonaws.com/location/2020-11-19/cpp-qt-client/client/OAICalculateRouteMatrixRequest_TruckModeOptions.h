/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculateRouteMatrixRequest_TruckModeOptions.h
 *
 * 
 */

#ifndef OAICalculateRouteMatrixRequest_TruckModeOptions_H
#define OAICalculateRouteMatrixRequest_TruckModeOptions_H

#include <QJsonObject>

#include "OAICalculateRoute_request_TruckModeOptions_Dimensions.h"
#include "OAICalculateRoute_request_TruckModeOptions_Weight.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICalculateRoute_request_TruckModeOptions_Dimensions;
class OAICalculateRoute_request_TruckModeOptions_Weight;

class OAICalculateRouteMatrixRequest_TruckModeOptions : public OAIObject {
public:
    OAICalculateRouteMatrixRequest_TruckModeOptions();
    OAICalculateRouteMatrixRequest_TruckModeOptions(QString json);
    ~OAICalculateRouteMatrixRequest_TruckModeOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAvoidFerries() const;
    void setAvoidFerries(const bool &avoid_ferries);
    bool is_avoid_ferries_Set() const;
    bool is_avoid_ferries_Valid() const;

    bool getAvoidTolls() const;
    void setAvoidTolls(const bool &avoid_tolls);
    bool is_avoid_tolls_Set() const;
    bool is_avoid_tolls_Valid() const;

    OAICalculateRoute_request_TruckModeOptions_Dimensions getDimensions() const;
    void setDimensions(const OAICalculateRoute_request_TruckModeOptions_Dimensions &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    OAICalculateRoute_request_TruckModeOptions_Weight getWeight() const;
    void setWeight(const OAICalculateRoute_request_TruckModeOptions_Weight &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_avoid_ferries;
    bool m_avoid_ferries_isSet;
    bool m_avoid_ferries_isValid;

    bool m_avoid_tolls;
    bool m_avoid_tolls_isSet;
    bool m_avoid_tolls_isValid;

    OAICalculateRoute_request_TruckModeOptions_Dimensions m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    OAICalculateRoute_request_TruckModeOptions_Weight m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculateRouteMatrixRequest_TruckModeOptions)

#endif // OAICalculateRouteMatrixRequest_TruckModeOptions_H
