/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchUpdateDevicePositionError.h
 *
 * Contains error details for each device that failed to update its position.
 */

#ifndef OAIBatchUpdateDevicePositionError_H
#define OAIBatchUpdateDevicePositionError_H

#include <QJsonObject>

#include "OAIBatchUpdateDevicePositionError_Error.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBatchUpdateDevicePositionError_Error;

class OAIBatchUpdateDevicePositionError : public OAIObject {
public:
    OAIBatchUpdateDevicePositionError();
    OAIBatchUpdateDevicePositionError(QString json);
    ~OAIBatchUpdateDevicePositionError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    OAIBatchUpdateDevicePositionError_Error getError() const;
    void setError(const OAIBatchUpdateDevicePositionError_Error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QDateTime getSampleTime() const;
    void setSampleTime(const QDateTime &sample_time);
    bool is_sample_time_Set() const;
    bool is_sample_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    OAIBatchUpdateDevicePositionError_Error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QDateTime m_sample_time;
    bool m_sample_time_isSet;
    bool m_sample_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchUpdateDevicePositionError)

#endif // OAIBatchUpdateDevicePositionError_H
