/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateTracker_request.h
 *
 * 
 */

#ifndef OAICreateTracker_request_H
#define OAICreateTracker_request_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateTracker_request : public OAIObject {
public:
    OAICreateTracker_request();
    OAICreateTracker_request(QString json);
    ~OAICreateTracker_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isEventBridgeEnabled() const;
    void setEventBridgeEnabled(const bool &event_bridge_enabled);
    bool is_event_bridge_enabled_Set() const;
    bool is_event_bridge_enabled_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getPositionFiltering() const;
    void setPositionFiltering(const QString &position_filtering);
    bool is_position_filtering_Set() const;
    bool is_position_filtering_Valid() const;

    QString getPricingPlan() const;
    void setPricingPlan(const QString &pricing_plan);
    bool is_pricing_plan_Set() const;
    bool is_pricing_plan_Valid() const;

    QString getPricingPlanDataSource() const;
    void setPricingPlanDataSource(const QString &pricing_plan_data_source);
    bool is_pricing_plan_data_source_Set() const;
    bool is_pricing_plan_data_source_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTrackerName() const;
    void setTrackerName(const QString &tracker_name);
    bool is_tracker_name_Set() const;
    bool is_tracker_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_event_bridge_enabled;
    bool m_event_bridge_enabled_isSet;
    bool m_event_bridge_enabled_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_position_filtering;
    bool m_position_filtering_isSet;
    bool m_position_filtering_isValid;

    QString m_pricing_plan;
    bool m_pricing_plan_isSet;
    bool m_pricing_plan_isValid;

    QString m_pricing_plan_data_source;
    bool m_pricing_plan_data_source_isSet;
    bool m_pricing_plan_data_source_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_tracker_name;
    bool m_tracker_name_isSet;
    bool m_tracker_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateTracker_request)

#endif // OAICreateTracker_request_H
