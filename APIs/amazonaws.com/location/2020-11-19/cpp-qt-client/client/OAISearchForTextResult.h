/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchForTextResult.h
 *
 * Contains a search result from a text search query that is run on a place index resource.
 */

#ifndef OAISearchForTextResult_H
#define OAISearchForTextResult_H

#include <QJsonObject>

#include "OAISearchForPositionResult_Place.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchForPositionResult_Place;

class OAISearchForTextResult : public OAIObject {
public:
    OAISearchForTextResult();
    OAISearchForTextResult(QString json);
    ~OAISearchForTextResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    OAISearchForPositionResult_Place getPlace() const;
    void setPlace(const OAISearchForPositionResult_Place &place);
    bool is_place_Set() const;
    bool is_place_Valid() const;

    QString getPlaceId() const;
    void setPlaceId(const QString &place_id);
    bool is_place_id_Set() const;
    bool is_place_id_Valid() const;

    double getRelevance() const;
    void setRelevance(const double &relevance);
    bool is_relevance_Set() const;
    bool is_relevance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    OAISearchForPositionResult_Place m_place;
    bool m_place_isSet;
    bool m_place_isValid;

    QString m_place_id;
    bool m_place_id_isSet;
    bool m_place_id_isValid;

    double m_relevance;
    bool m_relevance_isSet;
    bool m_relevance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchForTextResult)

#endif // OAISearchForTextResult_H
