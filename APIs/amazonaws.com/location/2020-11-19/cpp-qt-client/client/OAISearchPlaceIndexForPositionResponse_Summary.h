/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchPlaceIndexForPositionResponse_Summary.h
 *
 * 
 */

#ifndef OAISearchPlaceIndexForPositionResponse_Summary_H
#define OAISearchPlaceIndexForPositionResponse_Summary_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchPlaceIndexForPositionResponse_Summary : public OAIObject {
public:
    OAISearchPlaceIndexForPositionResponse_Summary();
    OAISearchPlaceIndexForPositionResponse_Summary(QString json);
    ~OAISearchPlaceIndexForPositionResponse_Summary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSource() const;
    void setDataSource(const QString &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QList getPosition() const;
    void setPosition(const QList &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QList m_position;
    bool m_position_isSet;
    bool m_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchPlaceIndexForPositionResponse_Summary)

#endif // OAISearchPlaceIndexForPositionResponse_Summary_H
