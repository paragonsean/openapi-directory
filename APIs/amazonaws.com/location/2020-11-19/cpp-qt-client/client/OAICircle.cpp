/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICircle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICircle::OAICircle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICircle::OAICircle() {
    this->initializeModel();
}

OAICircle::~OAICircle() {}

void OAICircle::initializeModel() {

    m_center_isSet = false;
    m_center_isValid = false;

    m_radius_isSet = false;
    m_radius_isValid = false;
}

void OAICircle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICircle::fromJsonObject(QJsonObject json) {

    m_center_isValid = ::OpenAPI::fromJsonValue(m_center, json[QString("Center")]);
    m_center_isSet = !json[QString("Center")].isNull() && m_center_isValid;

    m_radius_isValid = ::OpenAPI::fromJsonValue(m_radius, json[QString("Radius")]);
    m_radius_isSet = !json[QString("Radius")].isNull() && m_radius_isValid;
}

QString OAICircle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICircle::asJsonObject() const {
    QJsonObject obj;
    if (m_center.isSet()) {
        obj.insert(QString("Center"), ::OpenAPI::toJsonValue(m_center));
    }
    if (m_radius_isSet) {
        obj.insert(QString("Radius"), ::OpenAPI::toJsonValue(m_radius));
    }
    return obj;
}

QList OAICircle::getCenter() const {
    return m_center;
}
void OAICircle::setCenter(const QList &center) {
    m_center = center;
    m_center_isSet = true;
}

bool OAICircle::is_center_Set() const{
    return m_center_isSet;
}

bool OAICircle::is_center_Valid() const{
    return m_center_isValid;
}

double OAICircle::getRadius() const {
    return m_radius;
}
void OAICircle::setRadius(const double &radius) {
    m_radius = radius;
    m_radius_isSet = true;
}

bool OAICircle::is_radius_Set() const{
    return m_radius_isSet;
}

bool OAICircle::is_radius_Valid() const{
    return m_radius_isValid;
}

bool OAICircle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_center.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_radius_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICircle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_center_isValid && m_radius_isValid && true;
}

} // namespace OpenAPI
