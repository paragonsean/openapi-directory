/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetGeofenceResponse_Geometry.h
 *
 * 
 */

#ifndef OAIGetGeofenceResponse_Geometry_H
#define OAIGetGeofenceResponse_Geometry_H

#include <QJsonObject>

#include "OAIPutGeofence_request_Geometry_Circle.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutGeofence_request_Geometry_Circle;

class OAIGetGeofenceResponse_Geometry : public OAIObject {
public:
    OAIGetGeofenceResponse_Geometry();
    OAIGetGeofenceResponse_Geometry(QString json);
    ~OAIGetGeofenceResponse_Geometry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPutGeofence_request_Geometry_Circle getCircle() const;
    void setCircle(const OAIPutGeofence_request_Geometry_Circle &circle);
    bool is_circle_Set() const;
    bool is_circle_Valid() const;

    QList getPolygon() const;
    void setPolygon(const QList &polygon);
    bool is_polygon_Set() const;
    bool is_polygon_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPutGeofence_request_Geometry_Circle m_circle;
    bool m_circle_isSet;
    bool m_circle_isValid;

    QList m_polygon;
    bool m_polygon_isSet;
    bool m_polygon_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetGeofenceResponse_Geometry)

#endif // OAIGetGeofenceResponse_Geometry_H
