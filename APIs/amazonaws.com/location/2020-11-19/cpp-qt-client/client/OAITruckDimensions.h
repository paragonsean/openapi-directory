/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITruckDimensions.h
 *
 * Contains details about the truck dimensions in the unit of measurement that you specify. Used to filter out roads that can&#39;t support or allow the specified dimensions for requests that specify &lt;code&gt;TravelMode&lt;/code&gt; as &lt;code&gt;Truck&lt;/code&gt;.
 */

#ifndef OAITruckDimensions_H
#define OAITruckDimensions_H

#include <QJsonObject>

#include "OAIDimensionUnit.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITruckDimensions : public OAIObject {
public:
    OAITruckDimensions();
    OAITruckDimensions(QString json);
    ~OAITruckDimensions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    double getLength() const;
    void setLength(const double &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    OAIDimensionUnit getUnit() const;
    void setUnit(const OAIDimensionUnit &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    double m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    OAIDimensionUnit m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITruckDimensions)

#endif // OAITruckDimensions_H
