/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchUpdateDevicePosition_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchUpdateDevicePosition_request::OAIBatchUpdateDevicePosition_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchUpdateDevicePosition_request::OAIBatchUpdateDevicePosition_request() {
    this->initializeModel();
}

OAIBatchUpdateDevicePosition_request::~OAIBatchUpdateDevicePosition_request() {}

void OAIBatchUpdateDevicePosition_request::initializeModel() {

    m_updates_isSet = false;
    m_updates_isValid = false;
}

void OAIBatchUpdateDevicePosition_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchUpdateDevicePosition_request::fromJsonObject(QJsonObject json) {

    m_updates_isValid = ::OpenAPI::fromJsonValue(m_updates, json[QString("Updates")]);
    m_updates_isSet = !json[QString("Updates")].isNull() && m_updates_isValid;
}

QString OAIBatchUpdateDevicePosition_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchUpdateDevicePosition_request::asJsonObject() const {
    QJsonObject obj;
    if (m_updates.size() > 0) {
        obj.insert(QString("Updates"), ::OpenAPI::toJsonValue(m_updates));
    }
    return obj;
}

QList<OAIDevicePositionUpdate> OAIBatchUpdateDevicePosition_request::getUpdates() const {
    return m_updates;
}
void OAIBatchUpdateDevicePosition_request::setUpdates(const QList<OAIDevicePositionUpdate> &updates) {
    m_updates = updates;
    m_updates_isSet = true;
}

bool OAIBatchUpdateDevicePosition_request::is_updates_Set() const{
    return m_updates_isSet;
}

bool OAIBatchUpdateDevicePosition_request::is_updates_Valid() const{
    return m_updates_isValid;
}

bool OAIBatchUpdateDevicePosition_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_updates.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchUpdateDevicePosition_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_updates_isValid && true;
}

} // namespace OpenAPI
