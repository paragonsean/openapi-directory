/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRouteCalculatorResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRouteCalculatorResponse::OAIUpdateRouteCalculatorResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRouteCalculatorResponse::OAIUpdateRouteCalculatorResponse() {
    this->initializeModel();
}

OAIUpdateRouteCalculatorResponse::~OAIUpdateRouteCalculatorResponse() {}

void OAIUpdateRouteCalculatorResponse::initializeModel() {

    m_calculator_arn_isSet = false;
    m_calculator_arn_isValid = false;

    m_calculator_name_isSet = false;
    m_calculator_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIUpdateRouteCalculatorResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRouteCalculatorResponse::fromJsonObject(QJsonObject json) {

    m_calculator_arn_isValid = ::OpenAPI::fromJsonValue(m_calculator_arn, json[QString("CalculatorArn")]);
    m_calculator_arn_isSet = !json[QString("CalculatorArn")].isNull() && m_calculator_arn_isValid;

    m_calculator_name_isValid = ::OpenAPI::fromJsonValue(m_calculator_name, json[QString("CalculatorName")]);
    m_calculator_name_isSet = !json[QString("CalculatorName")].isNull() && m_calculator_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("UpdateTime")]);
    m_update_time_isSet = !json[QString("UpdateTime")].isNull() && m_update_time_isValid;
}

QString OAIUpdateRouteCalculatorResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRouteCalculatorResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_calculator_arn_isSet) {
        obj.insert(QString("CalculatorArn"), ::OpenAPI::toJsonValue(m_calculator_arn));
    }
    if (m_calculator_name_isSet) {
        obj.insert(QString("CalculatorName"), ::OpenAPI::toJsonValue(m_calculator_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("UpdateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIUpdateRouteCalculatorResponse::getCalculatorArn() const {
    return m_calculator_arn;
}
void OAIUpdateRouteCalculatorResponse::setCalculatorArn(const QString &calculator_arn) {
    m_calculator_arn = calculator_arn;
    m_calculator_arn_isSet = true;
}

bool OAIUpdateRouteCalculatorResponse::is_calculator_arn_Set() const{
    return m_calculator_arn_isSet;
}

bool OAIUpdateRouteCalculatorResponse::is_calculator_arn_Valid() const{
    return m_calculator_arn_isValid;
}

QString OAIUpdateRouteCalculatorResponse::getCalculatorName() const {
    return m_calculator_name;
}
void OAIUpdateRouteCalculatorResponse::setCalculatorName(const QString &calculator_name) {
    m_calculator_name = calculator_name;
    m_calculator_name_isSet = true;
}

bool OAIUpdateRouteCalculatorResponse::is_calculator_name_Set() const{
    return m_calculator_name_isSet;
}

bool OAIUpdateRouteCalculatorResponse::is_calculator_name_Valid() const{
    return m_calculator_name_isValid;
}

QDateTime OAIUpdateRouteCalculatorResponse::getUpdateTime() const {
    return m_update_time;
}
void OAIUpdateRouteCalculatorResponse::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIUpdateRouteCalculatorResponse::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIUpdateRouteCalculatorResponse::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIUpdateRouteCalculatorResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calculator_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_calculator_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRouteCalculatorResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_calculator_arn_isValid && m_calculator_name_isValid && m_update_time_isValid && true;
}

} // namespace OpenAPI
