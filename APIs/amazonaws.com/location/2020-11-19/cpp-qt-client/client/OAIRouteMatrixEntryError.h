/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRouteMatrixEntryError.h
 *
 * &lt;p&gt;An error corresponding to the calculation of a route between the &lt;code&gt;DeparturePosition&lt;/code&gt; and &lt;code&gt;DestinationPosition&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The error code can be one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RouteNotFound&lt;/code&gt; - Unable to find a valid route with the given parameters.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RouteTooLong&lt;/code&gt; - Route calculation went beyond the maximum size of a route and was terminated before completion.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PositionsNotFound&lt;/code&gt; - One or more of the input positions were not found on the route network.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DestinationPositionNotFound&lt;/code&gt; - The destination position was not found on the route network.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DeparturePositionNotFound&lt;/code&gt; - The departure position was not found on the route network.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;OtherValidationError&lt;/code&gt; - The given inputs were not valid or a route was not found. More information is given in the error &lt;code&gt;Message&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIRouteMatrixEntryError_H
#define OAIRouteMatrixEntryError_H

#include <QJsonObject>

#include "OAIRouteMatrixErrorCode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRouteMatrixEntryError : public OAIObject {
public:
    OAIRouteMatrixEntryError();
    OAIRouteMatrixEntryError(QString json);
    ~OAIRouteMatrixEntryError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRouteMatrixErrorCode getCode() const;
    void setCode(const OAIRouteMatrixErrorCode &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRouteMatrixErrorCode m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRouteMatrixEntryError)

#endif // OAIRouteMatrixEntryError_H
