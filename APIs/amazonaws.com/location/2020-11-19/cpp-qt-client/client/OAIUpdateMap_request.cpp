/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateMap_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateMap_request::OAIUpdateMap_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateMap_request::OAIUpdateMap_request() {
    this->initializeModel();
}

OAIUpdateMap_request::~OAIUpdateMap_request() {}

void OAIUpdateMap_request::initializeModel() {

    m_configuration_update_isSet = false;
    m_configuration_update_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_pricing_plan_isSet = false;
    m_pricing_plan_isValid = false;
}

void OAIUpdateMap_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateMap_request::fromJsonObject(QJsonObject json) {

    m_configuration_update_isValid = ::OpenAPI::fromJsonValue(m_configuration_update, json[QString("ConfigurationUpdate")]);
    m_configuration_update_isSet = !json[QString("ConfigurationUpdate")].isNull() && m_configuration_update_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_pricing_plan_isValid = ::OpenAPI::fromJsonValue(m_pricing_plan, json[QString("PricingPlan")]);
    m_pricing_plan_isSet = !json[QString("PricingPlan")].isNull() && m_pricing_plan_isValid;
}

QString OAIUpdateMap_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateMap_request::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_update.isSet()) {
        obj.insert(QString("ConfigurationUpdate"), ::OpenAPI::toJsonValue(m_configuration_update));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_pricing_plan_isSet) {
        obj.insert(QString("PricingPlan"), ::OpenAPI::toJsonValue(m_pricing_plan));
    }
    return obj;
}

OAIUpdateMap_request_ConfigurationUpdate OAIUpdateMap_request::getConfigurationUpdate() const {
    return m_configuration_update;
}
void OAIUpdateMap_request::setConfigurationUpdate(const OAIUpdateMap_request_ConfigurationUpdate &configuration_update) {
    m_configuration_update = configuration_update;
    m_configuration_update_isSet = true;
}

bool OAIUpdateMap_request::is_configuration_update_Set() const{
    return m_configuration_update_isSet;
}

bool OAIUpdateMap_request::is_configuration_update_Valid() const{
    return m_configuration_update_isValid;
}

QString OAIUpdateMap_request::getDescription() const {
    return m_description;
}
void OAIUpdateMap_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateMap_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateMap_request::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateMap_request::getPricingPlan() const {
    return m_pricing_plan;
}
void OAIUpdateMap_request::setPricingPlan(const QString &pricing_plan) {
    m_pricing_plan = pricing_plan;
    m_pricing_plan_isSet = true;
}

bool OAIUpdateMap_request::is_pricing_plan_Set() const{
    return m_pricing_plan_isSet;
}

bool OAIUpdateMap_request::is_pricing_plan_Valid() const{
    return m_pricing_plan_isValid;
}

bool OAIUpdateMap_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_update.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_plan_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateMap_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
