/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiKeyRestrictions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiKeyRestrictions::OAIApiKeyRestrictions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiKeyRestrictions::OAIApiKeyRestrictions() {
    this->initializeModel();
}

OAIApiKeyRestrictions::~OAIApiKeyRestrictions() {}

void OAIApiKeyRestrictions::initializeModel() {

    m_allow_actions_isSet = false;
    m_allow_actions_isValid = false;

    m_allow_referers_isSet = false;
    m_allow_referers_isValid = false;

    m_allow_resources_isSet = false;
    m_allow_resources_isValid = false;
}

void OAIApiKeyRestrictions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiKeyRestrictions::fromJsonObject(QJsonObject json) {

    m_allow_actions_isValid = ::OpenAPI::fromJsonValue(m_allow_actions, json[QString("AllowActions")]);
    m_allow_actions_isSet = !json[QString("AllowActions")].isNull() && m_allow_actions_isValid;

    m_allow_referers_isValid = ::OpenAPI::fromJsonValue(m_allow_referers, json[QString("AllowReferers")]);
    m_allow_referers_isSet = !json[QString("AllowReferers")].isNull() && m_allow_referers_isValid;

    m_allow_resources_isValid = ::OpenAPI::fromJsonValue(m_allow_resources, json[QString("AllowResources")]);
    m_allow_resources_isSet = !json[QString("AllowResources")].isNull() && m_allow_resources_isValid;
}

QString OAIApiKeyRestrictions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiKeyRestrictions::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_actions.isSet()) {
        obj.insert(QString("AllowActions"), ::OpenAPI::toJsonValue(m_allow_actions));
    }
    if (m_allow_referers.isSet()) {
        obj.insert(QString("AllowReferers"), ::OpenAPI::toJsonValue(m_allow_referers));
    }
    if (m_allow_resources.isSet()) {
        obj.insert(QString("AllowResources"), ::OpenAPI::toJsonValue(m_allow_resources));
    }
    return obj;
}

QList OAIApiKeyRestrictions::getAllowActions() const {
    return m_allow_actions;
}
void OAIApiKeyRestrictions::setAllowActions(const QList &allow_actions) {
    m_allow_actions = allow_actions;
    m_allow_actions_isSet = true;
}

bool OAIApiKeyRestrictions::is_allow_actions_Set() const{
    return m_allow_actions_isSet;
}

bool OAIApiKeyRestrictions::is_allow_actions_Valid() const{
    return m_allow_actions_isValid;
}

QList OAIApiKeyRestrictions::getAllowReferers() const {
    return m_allow_referers;
}
void OAIApiKeyRestrictions::setAllowReferers(const QList &allow_referers) {
    m_allow_referers = allow_referers;
    m_allow_referers_isSet = true;
}

bool OAIApiKeyRestrictions::is_allow_referers_Set() const{
    return m_allow_referers_isSet;
}

bool OAIApiKeyRestrictions::is_allow_referers_Valid() const{
    return m_allow_referers_isValid;
}

QList OAIApiKeyRestrictions::getAllowResources() const {
    return m_allow_resources;
}
void OAIApiKeyRestrictions::setAllowResources(const QList &allow_resources) {
    m_allow_resources = allow_resources;
    m_allow_resources_isSet = true;
}

bool OAIApiKeyRestrictions::is_allow_resources_Set() const{
    return m_allow_resources_isSet;
}

bool OAIApiKeyRestrictions::is_allow_resources_Valid() const{
    return m_allow_resources_isValid;
}

bool OAIApiKeyRestrictions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_referers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiKeyRestrictions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_allow_actions_isValid && m_allow_resources_isValid && true;
}

} // namespace OpenAPI
