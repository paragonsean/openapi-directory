/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateKey_request.h
 *
 * 
 */

#ifndef OAICreateKey_request_H
#define OAICreateKey_request_H

#include <QJsonObject>

#include "OAICreateKey_request_Restrictions.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateKey_request_Restrictions;

class OAICreateKey_request : public OAIObject {
public:
    OAICreateKey_request();
    OAICreateKey_request(QString json);
    ~OAICreateKey_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getExpireTime() const;
    void setExpireTime(const QDateTime &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QString getKeyName() const;
    void setKeyName(const QString &key_name);
    bool is_key_name_Set() const;
    bool is_key_name_Valid() const;

    bool isNoExpiry() const;
    void setNoExpiry(const bool &no_expiry);
    bool is_no_expiry_Set() const;
    bool is_no_expiry_Valid() const;

    OAICreateKey_request_Restrictions getRestrictions() const;
    void setRestrictions(const OAICreateKey_request_Restrictions &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QString m_key_name;
    bool m_key_name_isSet;
    bool m_key_name_isValid;

    bool m_no_expiry;
    bool m_no_expiry_isSet;
    bool m_no_expiry_isValid;

    OAICreateKey_request_Restrictions m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateKey_request)

#endif // OAICreateKey_request_H
