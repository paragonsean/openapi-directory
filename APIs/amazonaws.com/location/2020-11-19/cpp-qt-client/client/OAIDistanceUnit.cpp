/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistanceUnit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistanceUnit::OAIDistanceUnit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistanceUnit::OAIDistanceUnit() {
    this->initializeModel();
}

OAIDistanceUnit::~OAIDistanceUnit() {}

void OAIDistanceUnit::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDistanceUnit::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDistanceUnit::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Kilometers", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDistanceUnit::KILOMETERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Miles", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDistanceUnit::MILES;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDistanceUnit::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDistanceUnit::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDistanceUnit::KILOMETERS:
            val = "Kilometers";
            break;
        case eOAIDistanceUnit::MILES:
            val = "Miles";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDistanceUnit::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDistanceUnit::eOAIDistanceUnit OAIDistanceUnit::getValue() const {
    return m_value;
}

void OAIDistanceUnit::setValue(const OAIDistanceUnit::eOAIDistanceUnit& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDistanceUnit::isSet() const {
    
    return m_value_isSet;
}

bool OAIDistanceUnit::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
