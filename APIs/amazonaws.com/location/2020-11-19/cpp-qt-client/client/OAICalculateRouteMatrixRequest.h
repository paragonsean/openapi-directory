/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculateRouteMatrixRequest.h
 *
 * 
 */

#ifndef OAICalculateRouteMatrixRequest_H
#define OAICalculateRouteMatrixRequest_H

#include <QJsonObject>

#include "OAICalculateRouteMatrixRequest_CarModeOptions.h"
#include "OAICalculateRouteMatrixRequest_TruckModeOptions.h"
#include "OAIDistanceUnit.h"
#include "OAITravelMode.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICalculateRouteMatrixRequest_CarModeOptions;
class OAICalculateRouteMatrixRequest_TruckModeOptions;

class OAICalculateRouteMatrixRequest : public OAIObject {
public:
    OAICalculateRouteMatrixRequest();
    OAICalculateRouteMatrixRequest(QString json);
    ~OAICalculateRouteMatrixRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICalculateRouteMatrixRequest_CarModeOptions getCarModeOptions() const;
    void setCarModeOptions(const OAICalculateRouteMatrixRequest_CarModeOptions &car_mode_options);
    bool is_car_mode_options_Set() const;
    bool is_car_mode_options_Valid() const;

    bool getDepartNow() const;
    void setDepartNow(const bool &depart_now);
    bool is_depart_now_Set() const;
    bool is_depart_now_Valid() const;

    QList getDeparturePositions() const;
    void setDeparturePositions(const QList &departure_positions);
    bool is_departure_positions_Set() const;
    bool is_departure_positions_Valid() const;

    QDateTime getDepartureTime() const;
    void setDepartureTime(const QDateTime &departure_time);
    bool is_departure_time_Set() const;
    bool is_departure_time_Valid() const;

    QList getDestinationPositions() const;
    void setDestinationPositions(const QList &destination_positions);
    bool is_destination_positions_Set() const;
    bool is_destination_positions_Valid() const;

    OAIDistanceUnit getDistanceUnit() const;
    void setDistanceUnit(const OAIDistanceUnit &distance_unit);
    bool is_distance_unit_Set() const;
    bool is_distance_unit_Valid() const;

    OAITravelMode getTravelMode() const;
    void setTravelMode(const OAITravelMode &travel_mode);
    bool is_travel_mode_Set() const;
    bool is_travel_mode_Valid() const;

    OAICalculateRouteMatrixRequest_TruckModeOptions getTruckModeOptions() const;
    void setTruckModeOptions(const OAICalculateRouteMatrixRequest_TruckModeOptions &truck_mode_options);
    bool is_truck_mode_options_Set() const;
    bool is_truck_mode_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICalculateRouteMatrixRequest_CarModeOptions m_car_mode_options;
    bool m_car_mode_options_isSet;
    bool m_car_mode_options_isValid;

    bool m_depart_now;
    bool m_depart_now_isSet;
    bool m_depart_now_isValid;

    QList m_departure_positions;
    bool m_departure_positions_isSet;
    bool m_departure_positions_isValid;

    QDateTime m_departure_time;
    bool m_departure_time_isSet;
    bool m_departure_time_isValid;

    QList m_destination_positions;
    bool m_destination_positions_isSet;
    bool m_destination_positions_isValid;

    OAIDistanceUnit m_distance_unit;
    bool m_distance_unit_isSet;
    bool m_distance_unit_isValid;

    OAITravelMode m_travel_mode;
    bool m_travel_mode_isSet;
    bool m_travel_mode_isValid;

    OAICalculateRouteMatrixRequest_TruckModeOptions m_truck_mode_options;
    bool m_truck_mode_options_isSet;
    bool m_truck_mode_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculateRouteMatrixRequest)

#endif // OAICalculateRouteMatrixRequest_H
