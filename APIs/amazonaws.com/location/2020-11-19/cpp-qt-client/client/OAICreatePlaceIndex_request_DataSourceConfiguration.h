/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreatePlaceIndex_request_DataSourceConfiguration.h
 *
 * &lt;p&gt;Specifies the data storage option chosen for requesting Places.&lt;/p&gt; &lt;important&gt; &lt;p&gt;When using Amazon Location Places:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If using HERE Technologies as a data provider, you can&#39;t store results for locations in Japan by setting &lt;code&gt;IntendedUse&lt;/code&gt; to &lt;code&gt;Storage&lt;/code&gt;. parameter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Under the &lt;code&gt;MobileAssetTracking&lt;/code&gt; or &lt;code&gt;MobilAssetManagement&lt;/code&gt; pricing plan, you can&#39;t store results from your place index resources by setting &lt;code&gt;IntendedUse&lt;/code&gt; to &lt;code&gt;Storage&lt;/code&gt;. This returns a validation exception error.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see the &lt;a href&#x3D;\&quot;https://aws.amazon.com/service-terms/\&quot;&gt;AWS Service Terms&lt;/a&gt; for Amazon Location Service.&lt;/p&gt; &lt;/important&gt;
 */

#ifndef OAICreatePlaceIndex_request_DataSourceConfiguration_H
#define OAICreatePlaceIndex_request_DataSourceConfiguration_H

#include <QJsonObject>

#include "OAIIntendedUse.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreatePlaceIndex_request_DataSourceConfiguration : public OAIObject {
public:
    OAICreatePlaceIndex_request_DataSourceConfiguration();
    OAICreatePlaceIndex_request_DataSourceConfiguration(QString json);
    ~OAICreatePlaceIndex_request_DataSourceConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIntendedUse getIntendedUse() const;
    void setIntendedUse(const OAIIntendedUse &intended_use);
    bool is_intended_use_Set() const;
    bool is_intended_use_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIntendedUse m_intended_use;
    bool m_intended_use_isSet;
    bool m_intended_use_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreatePlaceIndex_request_DataSourceConfiguration)

#endif // OAICreatePlaceIndex_request_DataSourceConfiguration_H
