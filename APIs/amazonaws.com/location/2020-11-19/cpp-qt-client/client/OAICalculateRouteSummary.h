/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculateRouteSummary.h
 *
 * A summary of the calculated route.
 */

#ifndef OAICalculateRouteSummary_H
#define OAICalculateRouteSummary_H

#include <QJsonObject>

#include "OAIDistanceUnit.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICalculateRouteSummary : public OAIObject {
public:
    OAICalculateRouteSummary();
    OAICalculateRouteSummary(QString json);
    ~OAICalculateRouteSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSource() const;
    void setDataSource(const QString &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    OAIDistanceUnit getDistanceUnit() const;
    void setDistanceUnit(const OAIDistanceUnit &distance_unit);
    bool is_distance_unit_Set() const;
    bool is_distance_unit_Valid() const;

    double getDurationSeconds() const;
    void setDurationSeconds(const double &duration_seconds);
    bool is_duration_seconds_Set() const;
    bool is_duration_seconds_Valid() const;

    QList getRouteBBox() const;
    void setRouteBBox(const QList &route_b_box);
    bool is_route_b_box_Set() const;
    bool is_route_b_box_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    OAIDistanceUnit m_distance_unit;
    bool m_distance_unit_isSet;
    bool m_distance_unit_isValid;

    double m_duration_seconds;
    bool m_duration_seconds_isSet;
    bool m_duration_seconds_isValid;

    QList m_route_b_box;
    bool m_route_b_box_isSet;
    bool m_route_b_box_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculateRouteSummary)

#endif // OAICalculateRouteSummary_H
