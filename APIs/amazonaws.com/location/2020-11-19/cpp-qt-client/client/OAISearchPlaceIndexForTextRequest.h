/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchPlaceIndexForTextRequest.h
 *
 * 
 */

#ifndef OAISearchPlaceIndexForTextRequest_H
#define OAISearchPlaceIndexForTextRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchPlaceIndexForTextRequest : public OAIObject {
public:
    OAISearchPlaceIndexForTextRequest();
    OAISearchPlaceIndexForTextRequest(QString json);
    ~OAISearchPlaceIndexForTextRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getBiasPosition() const;
    void setBiasPosition(const QList &bias_position);
    bool is_bias_position_Set() const;
    bool is_bias_position_Valid() const;

    QList getFilterBBox() const;
    void setFilterBBox(const QList &filter_b_box);
    bool is_filter_b_box_Set() const;
    bool is_filter_b_box_Valid() const;

    QList getFilterCategories() const;
    void setFilterCategories(const QList &filter_categories);
    bool is_filter_categories_Set() const;
    bool is_filter_categories_Valid() const;

    QList getFilterCountries() const;
    void setFilterCountries(const QList &filter_countries);
    bool is_filter_countries_Set() const;
    bool is_filter_countries_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_bias_position;
    bool m_bias_position_isSet;
    bool m_bias_position_isValid;

    QList m_filter_b_box;
    bool m_filter_b_box_isSet;
    bool m_filter_b_box_isValid;

    QList m_filter_categories;
    bool m_filter_categories_isSet;
    bool m_filter_categories_isValid;

    QList m_filter_countries;
    bool m_filter_countries_isSet;
    bool m_filter_countries_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchPlaceIndexForTextRequest)

#endif // OAISearchPlaceIndexForTextRequest_H
