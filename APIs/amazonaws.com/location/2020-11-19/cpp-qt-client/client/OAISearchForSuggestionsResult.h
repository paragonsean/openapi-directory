/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchForSuggestionsResult.h
 *
 * Contains a place suggestion resulting from a place suggestion query that is run on a place index resource.
 */

#ifndef OAISearchForSuggestionsResult_H
#define OAISearchForSuggestionsResult_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchForSuggestionsResult : public OAIObject {
public:
    OAISearchForSuggestionsResult();
    OAISearchForSuggestionsResult(QString json);
    ~OAISearchForSuggestionsResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCategories() const;
    void setCategories(const QList &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getPlaceId() const;
    void setPlaceId(const QString &place_id);
    bool is_place_id_Set() const;
    bool is_place_id_Valid() const;

    QList getSupplementalCategories() const;
    void setSupplementalCategories(const QList &supplemental_categories);
    bool is_supplemental_categories_Set() const;
    bool is_supplemental_categories_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_place_id;
    bool m_place_id_isSet;
    bool m_place_id_isValid;

    QList m_supplemental_categories;
    bool m_supplemental_categories_isSet;
    bool m_supplemental_categories_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchForSuggestionsResult)

#endif // OAISearchForSuggestionsResult_H
