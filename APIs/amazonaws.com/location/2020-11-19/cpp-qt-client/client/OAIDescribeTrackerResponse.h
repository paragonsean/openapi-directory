/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTrackerResponse.h
 *
 * 
 */

#ifndef OAIDescribeTrackerResponse_H
#define OAIDescribeTrackerResponse_H

#include <QJsonObject>

#include "OAIPositionFiltering.h"
#include "OAIPricingPlan.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeTrackerResponse : public OAIObject {
public:
    OAIDescribeTrackerResponse();
    OAIDescribeTrackerResponse(QString json);
    ~OAIDescribeTrackerResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreateTime() const;
    void setCreateTime(const QDateTime &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool getEventBridgeEnabled() const;
    void setEventBridgeEnabled(const bool &event_bridge_enabled);
    bool is_event_bridge_enabled_Set() const;
    bool is_event_bridge_enabled_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    OAIPositionFiltering getPositionFiltering() const;
    void setPositionFiltering(const OAIPositionFiltering &position_filtering);
    bool is_position_filtering_Set() const;
    bool is_position_filtering_Valid() const;

    OAIPricingPlan getPricingPlan() const;
    void setPricingPlan(const OAIPricingPlan &pricing_plan);
    bool is_pricing_plan_Set() const;
    bool is_pricing_plan_Valid() const;

    QString getPricingPlanDataSource() const;
    void setPricingPlanDataSource(const QString &pricing_plan_data_source);
    bool is_pricing_plan_data_source_Set() const;
    bool is_pricing_plan_data_source_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTrackerArn() const;
    void setTrackerArn(const QString &tracker_arn);
    bool is_tracker_arn_Set() const;
    bool is_tracker_arn_Valid() const;

    QString getTrackerName() const;
    void setTrackerName(const QString &tracker_name);
    bool is_tracker_name_Set() const;
    bool is_tracker_name_Valid() const;

    QDateTime getUpdateTime() const;
    void setUpdateTime(const QDateTime &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_event_bridge_enabled;
    bool m_event_bridge_enabled_isSet;
    bool m_event_bridge_enabled_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    OAIPositionFiltering m_position_filtering;
    bool m_position_filtering_isSet;
    bool m_position_filtering_isValid;

    OAIPricingPlan m_pricing_plan;
    bool m_pricing_plan_isSet;
    bool m_pricing_plan_isValid;

    QString m_pricing_plan_data_source;
    bool m_pricing_plan_data_source_isSet;
    bool m_pricing_plan_data_source_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_tracker_arn;
    bool m_tracker_arn_isSet;
    bool m_tracker_arn_isValid;

    QString m_tracker_name;
    bool m_tracker_name_isSet;
    bool m_tracker_name_isValid;

    QDateTime m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTrackerResponse)

#endif // OAIDescribeTrackerResponse_H
