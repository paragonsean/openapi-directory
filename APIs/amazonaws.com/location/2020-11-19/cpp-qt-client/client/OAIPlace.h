/**
 * Amazon Location Service
 * \"Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing\"
 *
 * The version of the OpenAPI document: 2020-11-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlace.h
 *
 * &lt;p&gt;Contains details about addresses or points of interest that match the search criteria.&lt;/p&gt; &lt;p&gt;Not all details are included with all responses. Some details may only be returned by specific data partners.&lt;/p&gt;
 */

#ifndef OAIPlace_H
#define OAIPlace_H

#include <QJsonObject>

#include "OAIPlaceGeometry.h"
#include "OAIPlace_TimeZone.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaceGeometry;
class OAIPlace_TimeZone;

class OAIPlace : public OAIObject {
public:
    OAIPlace();
    OAIPlace(QString json);
    ~OAIPlace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddressNumber() const;
    void setAddressNumber(const QString &address_number);
    bool is_address_number_Set() const;
    bool is_address_number_Valid() const;

    QList getCategories() const;
    void setCategories(const QList &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIPlaceGeometry getGeometry() const;
    void setGeometry(const OAIPlaceGeometry &geometry);
    bool is_geometry_Set() const;
    bool is_geometry_Valid() const;

    bool getInterpolated() const;
    void setInterpolated(const bool &interpolated);
    bool is_interpolated_Set() const;
    bool is_interpolated_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QString getMunicipality() const;
    void setMunicipality(const QString &municipality);
    bool is_municipality_Set() const;
    bool is_municipality_Valid() const;

    QString getNeighborhood() const;
    void setNeighborhood(const QString &neighborhood);
    bool is_neighborhood_Set() const;
    bool is_neighborhood_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getSubRegion() const;
    void setSubRegion(const QString &sub_region);
    bool is_sub_region_Set() const;
    bool is_sub_region_Valid() const;

    QList getSupplementalCategories() const;
    void setSupplementalCategories(const QList &supplemental_categories);
    bool is_supplemental_categories_Set() const;
    bool is_supplemental_categories_Valid() const;

    OAIPlace_TimeZone getTimeZone() const;
    void setTimeZone(const OAIPlace_TimeZone &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getUnitNumber() const;
    void setUnitNumber(const QString &unit_number);
    bool is_unit_number_Set() const;
    bool is_unit_number_Valid() const;

    QString getUnitType() const;
    void setUnitType(const QString &unit_type);
    bool is_unit_type_Set() const;
    bool is_unit_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address_number;
    bool m_address_number_isSet;
    bool m_address_number_isValid;

    QList m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIPlaceGeometry m_geometry;
    bool m_geometry_isSet;
    bool m_geometry_isValid;

    bool m_interpolated;
    bool m_interpolated_isSet;
    bool m_interpolated_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QString m_municipality;
    bool m_municipality_isSet;
    bool m_municipality_isValid;

    QString m_neighborhood;
    bool m_neighborhood_isSet;
    bool m_neighborhood_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString m_sub_region;
    bool m_sub_region_isSet;
    bool m_sub_region_isValid;

    QList m_supplemental_categories;
    bool m_supplemental_categories_isSet;
    bool m_supplemental_categories_isValid;

    OAIPlace_TimeZone m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_unit_number;
    bool m_unit_number_isSet;
    bool m_unit_number_isValid;

    QString m_unit_type;
    bool m_unit_type_isSet;
    bool m_unit_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlace)

#endif // OAIPlace_H
