openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon SimpleDB is a web service providing the core database functions\
    \ of data indexing and querying in the cloud. By offloading the time and effort\
    \ associated with building and operating a web-scale database, SimpleDB provides\
    \ developers the freedom to focus on application development. <p> A traditional,\
    \ clustered relational database requires a sizable upfront capital outlay, is\
    \ complex to design, and often requires extensive and repetitive database administration.\
    \ Amazon SimpleDB is dramatically simpler, requiring no schema, automatically\
    \ indexing your data and providing a simple API for storage and access. This approach\
    \ eliminates the administrative burden of data modeling, index maintenance, and\
    \ performance tuning. Developers gain access to this functionality within Amazon's\
    \ proven computing environment, are able to scale instantly, and pay only for\
    \ what they use. </p> <p> Visit <a href=\"http://aws.amazon.com/simpledb/\">http://aws.amazon.com/simpledb/</a>\
    \ for more information. </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon SimpleDB
  version: 2009-04-15
  x-release: v2
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sdb
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sdb-2009-04-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sdb/
servers:
- description: The general Amazon SimpleDB endpoint for US East (N. Virginia)
  url: http://sdb.amazonaws.com
- description: The general Amazon SimpleDB endpoint for US East (N. Virginia)
  url: https://sdb.amazonaws.com
- description: The Amazon SimpleDB multi-region endpoint
  url: "http://sdb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-2
      description: The AWS region
      enum:
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SimpleDB multi-region endpoint
  url: "https://sdb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-2
      description: The AWS region
      enum:
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SimpleDB endpoint for China (Beijing) and China (Ningxia)
  url: "http://sdb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon SimpleDB endpoint for China (Beijing) and China (Ningxia)
  url: "https://sdb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#Action=BatchDeleteAttributes:
    get:
      description: "<p> Performs multiple DeleteAttributes operations in a single\
        \ call, which reduces round trips and latencies. This enables Amazon SimpleDB\
        \ to optimize requests, which generally yields better throughput. </p> <note>\
        \ <p> If you specify BatchDeleteAttributes without attributes or values, all\
        \ the attributes for the item are deleted. </p> <p> BatchDeleteAttributes\
        \ is an idempotent operation; running it multiple times on the same item or\
        \ attribute doesn't result in an error. </p> <p> The BatchDeleteAttributes\
        \ operation succeeds or fails in its entirety. There are no partial deletes.\
        \ You can execute multiple BatchDeleteAttributes operations and other operations\
        \ in parallel. However, large numbers of concurrent BatchDeleteAttributes\
        \ calls can result in Service Unavailable (503) responses. </p> <p> This operation\
        \ is vulnerable to exceeding the maximum URL size when making a REST request\
        \ using the HTTP GET method. </p> <p> This operation does not support conditions\
        \ using Expected.X.Name, Expected.X.Value, or Expected.X.Exists. </p> </note>\
        \ <p> The following limitations are enforced for this operation: <ul> <li>1\
        \ MB request size</li> <li>25 item limit per BatchDeleteAttributes operation</li>\
        \ </ul> </p>"
      operationId: g_et_batch_delete_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain in which the attributes are being deleted.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - description: A list of items on which to perform the operation.
        explode: true
        in: query
        name: Items
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_BatchDeleteAttributes_Items_parameter_inner'
          type: array
          xml:
            wrapped: false
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      x-aws-operation-name: BatchDeleteAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> Performs multiple DeleteAttributes operations in a single\
        \ call, which reduces round trips and latencies. This enables Amazon SimpleDB\
        \ to optimize requests, which generally yields better throughput. </p> <note>\
        \ <p> If you specify BatchDeleteAttributes without attributes or values, all\
        \ the attributes for the item are deleted. </p> <p> BatchDeleteAttributes\
        \ is an idempotent operation; running it multiple times on the same item or\
        \ attribute doesn't result in an error. </p> <p> The BatchDeleteAttributes\
        \ operation succeeds or fails in its entirety. There are no partial deletes.\
        \ You can execute multiple BatchDeleteAttributes operations and other operations\
        \ in parallel. However, large numbers of concurrent BatchDeleteAttributes\
        \ calls can result in Service Unavailable (503) responses. </p> <p> This operation\
        \ is vulnerable to exceeding the maximum URL size when making a REST request\
        \ using the HTTP GET method. </p> <p> This operation does not support conditions\
        \ using Expected.X.Name, Expected.X.Value, or Expected.X.Exists. </p> </note>\
        \ <p> The following limitations are enforced for this operation: <ul> <li>1\
        \ MB request size</li> <li>25 item limit per BatchDeleteAttributes operation</li>\
        \ </ul> </p>"
      operationId: p_ost_batch_delete_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchDeleteAttributesRequest'
        x-body-name: body
      responses:
        "200":
          description: Success
      x-aws-operation-name: BatchDeleteAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=BatchPutAttributes:
    get:
      description: "<p> The <code>BatchPutAttributes</code> operation creates or replaces\
        \ attributes within one or more items. By using this operation, the client\
        \ can perform multiple <a>PutAttribute</a> operation with a single call. This\
        \ helps yield savings in round trips and latencies, enabling Amazon SimpleDB\
        \ to optimize requests and generally produce better throughput. </p> <p> The\
        \ client may specify the item name with the <code>Item.X.ItemName</code> parameter.\
        \ The client may specify new attributes using a combination of the <code>Item.X.Attribute.Y.Name</code>\
        \ and <code>Item.X.Attribute.Y.Value</code> parameters. The client may specify\
        \ the first attribute for the first item using the parameters <code>Item.0.Attribute.0.Name</code>\
        \ and <code>Item.0.Attribute.0.Value</code>, and for the second attribute\
        \ for the first item by the parameters <code>Item.0.Attribute.1.Name</code>\
        \ and <code>Item.0.Attribute.1.Value</code>, and so on. </p> <p> Attributes\
        \ are uniquely identified within an item by their name/value combination.\
        \ For example, a single item can have the attributes <code>{ \"first_name\"\
        , \"first_value\" }</code> and <code>{ \"first_name\", \"second_value\" }</code>.\
        \ However, it cannot have two attribute instances where both the <code>Item.X.Attribute.Y.Name</code>\
        \ and <code>Item.X.Attribute.Y.Value</code> are the same. </p> <p> Optionally,\
        \ the requester can supply the <code>Replace</code> parameter for each individual\
        \ value. Setting this value to <code>true</code> will cause the new attribute\
        \ values to replace the existing attribute values. For example, if an item\
        \ <code>I</code> has the attributes <code>{ 'a', '1' }, { 'b', '2'}</code>\
        \ and <code>{ 'b', '3' }</code> and the requester does a BatchPutAttributes\
        \ of <code>{'I', 'b', '4' }</code> with the Replace parameter set to true,\
        \ the final attributes of the item will be <code>{ 'a', '1' }</code> and <code>{\
        \ 'b', '4' }</code>, replacing the previous values of the 'b' attribute with\
        \ the new value. </p> <note> You cannot specify an empty string as an item\
        \ or as an attribute name. The <code>BatchPutAttributes</code> operation succeeds\
        \ or fails in its entirety. There are no partial puts. </note> <important>\
        \ This operation is vulnerable to exceeding the maximum URL size when making\
        \ a REST request using the HTTP GET method. This operation does not support\
        \ conditions using <code>Expected.X.Name</code>, <code>Expected.X.Value</code>,\
        \ or <code>Expected.X.Exists</code>. </important> <p> You can execute multiple\
        \ <code>BatchPutAttributes</code> operations and other operations in parallel.\
        \ However, large numbers of concurrent <code>BatchPutAttributes</code> calls\
        \ can result in Service Unavailable (503) responses. </p> <p> The following\
        \ limitations are enforced for this operation: <ul> <li>256 attribute name-value\
        \ pairs per item</li> <li>1 MB request size</li> <li>1 billion attributes\
        \ per domain</li> <li>10 GB of total user data storage per domain</li> <li>25\
        \ item limit per <code>BatchPutAttributes</code> operation</li> </ul> </p>"
      operationId: g_et_batch_put_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain in which the attributes are being stored.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - description: A list of items on which to perform the operation.
        explode: true
        in: query
        name: Items
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_BatchPutAttributes_Items_parameter_inner'
          type: array
          xml:
            wrapped: false
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
        "409":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberSubmittedAttributesExceeded'
          description: NumberSubmittedAttributesExceeded
          x-aws-exception: true
      x-aws-operation-name: BatchPutAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> The <code>BatchPutAttributes</code> operation creates or replaces\
        \ attributes within one or more items. By using this operation, the client\
        \ can perform multiple <a>PutAttribute</a> operation with a single call. This\
        \ helps yield savings in round trips and latencies, enabling Amazon SimpleDB\
        \ to optimize requests and generally produce better throughput. </p> <p> The\
        \ client may specify the item name with the <code>Item.X.ItemName</code> parameter.\
        \ The client may specify new attributes using a combination of the <code>Item.X.Attribute.Y.Name</code>\
        \ and <code>Item.X.Attribute.Y.Value</code> parameters. The client may specify\
        \ the first attribute for the first item using the parameters <code>Item.0.Attribute.0.Name</code>\
        \ and <code>Item.0.Attribute.0.Value</code>, and for the second attribute\
        \ for the first item by the parameters <code>Item.0.Attribute.1.Name</code>\
        \ and <code>Item.0.Attribute.1.Value</code>, and so on. </p> <p> Attributes\
        \ are uniquely identified within an item by their name/value combination.\
        \ For example, a single item can have the attributes <code>{ \"first_name\"\
        , \"first_value\" }</code> and <code>{ \"first_name\", \"second_value\" }</code>.\
        \ However, it cannot have two attribute instances where both the <code>Item.X.Attribute.Y.Name</code>\
        \ and <code>Item.X.Attribute.Y.Value</code> are the same. </p> <p> Optionally,\
        \ the requester can supply the <code>Replace</code> parameter for each individual\
        \ value. Setting this value to <code>true</code> will cause the new attribute\
        \ values to replace the existing attribute values. For example, if an item\
        \ <code>I</code> has the attributes <code>{ 'a', '1' }, { 'b', '2'}</code>\
        \ and <code>{ 'b', '3' }</code> and the requester does a BatchPutAttributes\
        \ of <code>{'I', 'b', '4' }</code> with the Replace parameter set to true,\
        \ the final attributes of the item will be <code>{ 'a', '1' }</code> and <code>{\
        \ 'b', '4' }</code>, replacing the previous values of the 'b' attribute with\
        \ the new value. </p> <note> You cannot specify an empty string as an item\
        \ or as an attribute name. The <code>BatchPutAttributes</code> operation succeeds\
        \ or fails in its entirety. There are no partial puts. </note> <important>\
        \ This operation is vulnerable to exceeding the maximum URL size when making\
        \ a REST request using the HTTP GET method. This operation does not support\
        \ conditions using <code>Expected.X.Name</code>, <code>Expected.X.Value</code>,\
        \ or <code>Expected.X.Exists</code>. </important> <p> You can execute multiple\
        \ <code>BatchPutAttributes</code> operations and other operations in parallel.\
        \ However, large numbers of concurrent <code>BatchPutAttributes</code> calls\
        \ can result in Service Unavailable (503) responses. </p> <p> The following\
        \ limitations are enforced for this operation: <ul> <li>256 attribute name-value\
        \ pairs per item</li> <li>1 MB request size</li> <li>1 billion attributes\
        \ per domain</li> <li>10 GB of total user data storage per domain</li> <li>25\
        \ item limit per <code>BatchPutAttributes</code> operation</li> </ul> </p>"
      operationId: p_ost_batch_put_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchPutAttributesRequest'
        x-body-name: body
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
        "409":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberSubmittedAttributesExceeded'
          description: NumberSubmittedAttributesExceeded
          x-aws-exception: true
      x-aws-operation-name: BatchPutAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=CreateDomain:
    get:
      description: "<p> The <code>CreateDomain</code> operation creates a new domain.\
        \ The domain name should be unique among the domains associated with the Access\
        \ Key ID provided in the request. The <code>CreateDomain</code> operation\
        \ may take 10 or more seconds to complete. </p> <note> CreateDomain is an\
        \ idempotent operation; running it multiple times using the same domain name\
        \ will not result in an error response. </note> <p> The client can create\
        \ up to 100 domains per account. </p> <p> If the client requires additional\
        \ domains, go to <a href=\"http://aws.amazon.com/contact-us/simpledb-limit-request/\"\
        > http://aws.amazon.com/contact-us/simpledb-limit-request/</a>. </p>"
      operationId: g_et_create_domain
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: "The name of the domain to create. The name can range between\
          \ 3 and 255 characters and can contain the following characters: a-z, A-Z,\
          \ 0-9, '_', '-', and '.'."
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingParameter'
          description: MissingParameter
          x-aws-exception: true
        "409":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberDomainsExceeded'
          description: NumberDomainsExceeded
          x-aws-exception: true
      x-aws-operation-name: CreateDomain
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> The <code>CreateDomain</code> operation creates a new domain.\
        \ The domain name should be unique among the domains associated with the Access\
        \ Key ID provided in the request. The <code>CreateDomain</code> operation\
        \ may take 10 or more seconds to complete. </p> <note> CreateDomain is an\
        \ idempotent operation; running it multiple times using the same domain name\
        \ will not result in an error response. </note> <p> The client can create\
        \ up to 100 domains per account. </p> <p> If the client requires additional\
        \ domains, go to <a href=\"http://aws.amazon.com/contact-us/simpledb-limit-request/\"\
        > http://aws.amazon.com/contact-us/simpledb-limit-request/</a>. </p>"
      operationId: p_ost_create_domain
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        x-body-name: body
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingParameter'
          description: MissingParameter
          x-aws-exception: true
        "409":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberDomainsExceeded'
          description: NumberDomainsExceeded
          x-aws-exception: true
      x-aws-operation-name: CreateDomain
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=DeleteAttributes:
    get:
      description: "<p> Deletes one or more attributes associated with an item. If\
        \ all attributes of the item are deleted, the item is deleted. </p> <note>\
        \ If <code>DeleteAttributes</code> is called without being passed any attributes\
        \ or values specified, all the attributes for the item are deleted. </note>\
        \ <p> <code>DeleteAttributes</code> is an idempotent operation; running it\
        \ multiple times on the same item or attribute does not result in an error\
        \ response. </p> <p> Because Amazon SimpleDB makes multiple copies of item\
        \ data and uses an eventual consistency update model, performing a <a>GetAttributes</a>\
        \ or <a>Select</a> operation (read) immediately after a <code>DeleteAttributes</code>\
        \ or <a>PutAttributes</a> operation (write) might not return updated item\
        \ data. </p>"
      operationId: g_et_delete_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain in which to perform the operation.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - description: "The name of the item. Similar to rows on a spreadsheet, items\
          \ represent individual objects that contain one or more value-attribute\
          \ pairs."
        explode: true
        in: query
        name: ItemName
        required: true
        schema:
          type: string
        style: form
      - description: "A list of Attributes. Similar to columns on a spreadsheet, attributes\
          \ represent categories of data that can be assigned to items."
        explode: true
        in: query
        name: Attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DeleteAttributes_Attributes_parameter_inner'
          type: array
          xml:
            wrapped: false
        style: form
      - description: "The update condition which, if specified, determines whether\
          \ the specified attributes will be deleted or not. The update condition\
          \ must be satisfied in order for this request to be processed and the attributes\
          \ to be deleted."
        explode: true
        in: query
        name: Expected
        required: false
        schema:
          $ref: '#/components/schemas/GET_DeleteAttributes_Expected_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
        "404":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttributeDoesNotExist'
          description: AttributeDoesNotExist
          x-aws-exception: true
      x-aws-operation-name: DeleteAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> Deletes one or more attributes associated with an item. If\
        \ all attributes of the item are deleted, the item is deleted. </p> <note>\
        \ If <code>DeleteAttributes</code> is called without being passed any attributes\
        \ or values specified, all the attributes for the item are deleted. </note>\
        \ <p> <code>DeleteAttributes</code> is an idempotent operation; running it\
        \ multiple times on the same item or attribute does not result in an error\
        \ response. </p> <p> Because Amazon SimpleDB makes multiple copies of item\
        \ data and uses an eventual consistency update model, performing a <a>GetAttributes</a>\
        \ or <a>Select</a> operation (read) immediately after a <code>DeleteAttributes</code>\
        \ or <a>PutAttributes</a> operation (write) might not return updated item\
        \ data. </p>"
      operationId: p_ost_delete_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteAttributesRequest'
        x-body-name: body
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
        "404":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttributeDoesNotExist'
          description: AttributeDoesNotExist
          x-aws-exception: true
      x-aws-operation-name: DeleteAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=DeleteDomain:
    get:
      description: <p> The <code>DeleteDomain</code> operation deletes a domain. Any
        items (and their attributes) in the domain are deleted as well. The <code>DeleteDomain</code>
        operation might take 10 or more seconds to complete. </p> <note> Running <code>DeleteDomain</code>
        on a domain that does not exist or running the function multiple times using
        the same domain name will not result in an error response. </note>
      operationId: g_et_delete_domain
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain to delete.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingParameter'
          description: MissingParameter
          x-aws-exception: true
      x-aws-operation-name: DeleteDomain
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: <p> The <code>DeleteDomain</code> operation deletes a domain. Any
        items (and their attributes) in the domain are deleted as well. The <code>DeleteDomain</code>
        operation might take 10 or more seconds to complete. </p> <note> Running <code>DeleteDomain</code>
        on a domain that does not exist or running the function multiple times using
        the same domain name will not result in an error response. </note>
      operationId: p_ost_delete_domain
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
        x-body-name: body
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingParameter'
          description: MissingParameter
          x-aws-exception: true
      x-aws-operation-name: DeleteDomain
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=DomainMetadata:
    get:
      description: " Returns information about the domain, including when the domain\
        \ was created, the number of items and attributes in the domain, and the size\
        \ of the attribute names and values. "
      operationId: g_et_domain_metadata
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain for which to display the metadata of.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainMetadataResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
      x-aws-operation-name: DomainMetadata
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: " Returns information about the domain, including when the domain\
        \ was created, the number of items and attributes in the domain, and the size\
        \ of the attribute names and values. "
      operationId: p_ost_domain_metadata
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DomainMetadataRequest'
        x-body-name: body
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DomainMetadataResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
      x-aws-operation-name: DomainMetadata
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=GetAttributes:
    get:
      description: "<p> Returns all of the attributes associated with the specified\
        \ item. Optionally, the attributes returned can be limited to one or more\
        \ attributes by specifying an attribute name parameter. </p> <p> If the item\
        \ does not exist on the replica that was accessed for this operation, an empty\
        \ set is returned. The system does not return an error as it cannot guarantee\
        \ the item does not exist on other replicas. </p> <note> If GetAttributes\
        \ is called without being passed any attribute names, all the attributes for\
        \ the item are returned. </note>"
      operationId: g_et_get_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain in which to perform the operation.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - description: The name of the item.
        explode: true
        in: query
        name: ItemName
        required: true
        schema:
          type: string
        style: form
      - description: The names of the attributes.
        explode: true
        in: query
        name: AttributeNames
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AttributeName
          type: array
          xml:
            wrapped: false
        style: form
      - description: "Determines whether or not strong consistency should be enforced\
          \ when data is read from SimpleDB. If <code>true</code>, any data previously\
          \ written to SimpleDB will be returned. Otherwise, results will be consistent\
          \ eventually, and the client may not see data that was written immediately\
          \ before your read."
        explode: true
        in: query
        name: ConsistentRead
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAttributesResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
      x-aws-operation-name: GetAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> Returns all of the attributes associated with the specified\
        \ item. Optionally, the attributes returned can be limited to one or more\
        \ attributes by specifying an attribute name parameter. </p> <p> If the item\
        \ does not exist on the replica that was accessed for this operation, an empty\
        \ set is returned. The system does not return an error as it cannot guarantee\
        \ the item does not exist on other replicas. </p> <note> If GetAttributes\
        \ is called without being passed any attribute names, all the attributes for\
        \ the item are returned. </note>"
      operationId: p_ost_get_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAttributesRequest'
        x-body-name: body
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetAttributesResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
      x-aws-operation-name: GetAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=ListDomains:
    get:
      description: ' The <code>ListDomains</code> operation lists all domains associated
        with the Access Key ID. It returns domain names up to the limit set by <a
        href="#MaxNumberOfDomains">MaxNumberOfDomains</a>. A <a href="#NextToken">NextToken</a>
        is returned if there are more than <code>MaxNumberOfDomains</code> domains.
        Calling <code>ListDomains</code> successive times with the <code>NextToken</code>
        provided by the operation returns up to <code>MaxNumberOfDomains</code> more
        domain names with each successive operation call. '
      operationId: g_et_list_domains
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The maximum number of domain names you want returned. The range
          is 1 to 100. The default setting is 100.
        explode: true
        in: query
        name: MaxNumberOfDomains
        required: false
        schema:
          type: integer
        style: form
      - description: A string informing Amazon SimpleDB where to start the next list
          of domain names.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDomainsResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
          x-aws-exception: true
      x-aws-operation-name: ListDomains
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: ' The <code>ListDomains</code> operation lists all domains associated
        with the Access Key ID. It returns domain names up to the limit set by <a
        href="#MaxNumberOfDomains">MaxNumberOfDomains</a>. A <a href="#NextToken">NextToken</a>
        is returned if there are more than <code>MaxNumberOfDomains</code> domains.
        Calling <code>ListDomains</code> successive times with the <code>NextToken</code>
        provided by the operation returns up to <code>MaxNumberOfDomains</code> more
        domain names with each successive operation call. '
      operationId: p_ost_list_domains
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxNumberOfDomains
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListDomainsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDomainsResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
          x-aws-exception: true
      x-aws-operation-name: ListDomains
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=PutAttributes:
    get:
      description: "<p> The PutAttributes operation creates or replaces attributes\
        \ in an item. The client may specify new attributes using a combination of\
        \ the <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code> parameters.\
        \ The client specifies the first attribute by the parameters <code>Attribute.0.Name</code>\
        \ and <code>Attribute.0.Value</code>, the second attribute by the parameters\
        \ <code>Attribute.1.Name</code> and <code>Attribute.1.Value</code>, and so\
        \ on. </p> <p> Attributes are uniquely identified in an item by their name/value\
        \ combination. For example, a single item can have the attributes <code>{\
        \ \"first_name\", \"first_value\" }</code> and <code>{ \"first_name\", second_value\"\
        \ }</code>. However, it cannot have two attribute instances where both the\
        \ <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code> are the\
        \ same. </p> <p> Optionally, the requestor can supply the <code>Replace</code>\
        \ parameter for each individual attribute. Setting this value to <code>true</code>\
        \ causes the new attribute value to replace the existing attribute value(s).\
        \ For example, if an item has the attributes <code>{ 'a', '1' }</code>, <code>{\
        \ 'b', '2'}</code> and <code>{ 'b', '3' }</code> and the requestor calls <code>PutAttributes</code>\
        \ using the attributes <code>{ 'b', '4' }</code> with the <code>Replace</code>\
        \ parameter set to true, the final attributes of the item are changed to <code>{\
        \ 'a', '1' }</code> and <code>{ 'b', '4' }</code>, which replaces the previous\
        \ values of the 'b' attribute with the new value. </p> <note> Using <code>PutAttributes</code>\
        \ to replace attribute values that do not exist will not result in an error\
        \ response. </note> <p> You cannot specify an empty string as an attribute\
        \ name. </p> <p> Because Amazon SimpleDB makes multiple copies of client data\
        \ and uses an eventual consistency update model, an immediate <a>GetAttributes</a>\
        \ or <a>Select</a> operation (read) immediately after a <a>PutAttributes</a>\
        \ or <a>DeleteAttributes</a> operation (write) might not return the updated\
        \ data. </p> <p> The following limitations are enforced for this operation:\
        \ <ul> <li>256 total attribute name-value pairs per item</li> <li>One billion\
        \ attributes per domain</li> <li>10 GB of total user data storage per domain</li>\
        \ </ul> </p>"
      operationId: g_et_put_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The name of the domain in which to perform the operation.
        explode: true
        in: query
        name: DomainName
        required: true
        schema:
          type: string
        style: form
      - description: The name of the item.
        explode: true
        in: query
        name: ItemName
        required: true
        schema:
          type: string
        style: form
      - description: The list of attributes.
        explode: true
        in: query
        name: Attributes
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_PutAttributes_Attributes_parameter_inner'
          type: array
          xml:
            wrapped: false
        style: form
      - description: "The update condition which, if specified, determines whether\
          \ the specified attributes will be updated or not. The update condition\
          \ must be satisfied in order for this request to be processed and the attributes\
          \ to be updated."
        explode: true
        in: query
        name: Expected
        required: false
        schema:
          $ref: '#/components/schemas/GET_DeleteAttributes_Expected_parameter'
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
        "404":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttributeDoesNotExist'
          description: AttributeDoesNotExist
          x-aws-exception: true
        "409":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberItemAttributesExceeded'
          description: NumberItemAttributesExceeded
          x-aws-exception: true
      x-aws-operation-name: PutAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> The PutAttributes operation creates or replaces attributes\
        \ in an item. The client may specify new attributes using a combination of\
        \ the <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code> parameters.\
        \ The client specifies the first attribute by the parameters <code>Attribute.0.Name</code>\
        \ and <code>Attribute.0.Value</code>, the second attribute by the parameters\
        \ <code>Attribute.1.Name</code> and <code>Attribute.1.Value</code>, and so\
        \ on. </p> <p> Attributes are uniquely identified in an item by their name/value\
        \ combination. For example, a single item can have the attributes <code>{\
        \ \"first_name\", \"first_value\" }</code> and <code>{ \"first_name\", second_value\"\
        \ }</code>. However, it cannot have two attribute instances where both the\
        \ <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code> are the\
        \ same. </p> <p> Optionally, the requestor can supply the <code>Replace</code>\
        \ parameter for each individual attribute. Setting this value to <code>true</code>\
        \ causes the new attribute value to replace the existing attribute value(s).\
        \ For example, if an item has the attributes <code>{ 'a', '1' }</code>, <code>{\
        \ 'b', '2'}</code> and <code>{ 'b', '3' }</code> and the requestor calls <code>PutAttributes</code>\
        \ using the attributes <code>{ 'b', '4' }</code> with the <code>Replace</code>\
        \ parameter set to true, the final attributes of the item are changed to <code>{\
        \ 'a', '1' }</code> and <code>{ 'b', '4' }</code>, which replaces the previous\
        \ values of the 'b' attribute with the new value. </p> <note> Using <code>PutAttributes</code>\
        \ to replace attribute values that do not exist will not result in an error\
        \ response. </note> <p> You cannot specify an empty string as an attribute\
        \ name. </p> <p> Because Amazon SimpleDB makes multiple copies of client data\
        \ and uses an eventual consistency update model, an immediate <a>GetAttributes</a>\
        \ or <a>Select</a> operation (read) immediately after a <a>PutAttributes</a>\
        \ or <a>DeleteAttributes</a> operation (write) might not return the updated\
        \ data. </p> <p> The following limitations are enforced for this operation:\
        \ <ul> <li>256 total attribute name-value pairs per item</li> <li>One billion\
        \ attributes per domain</li> <li>10 GB of total user data storage per domain</li>\
        \ </ul> </p>"
      operationId: p_ost_put_attributes
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutAttributesRequest'
        x-body-name: body
      responses:
        "200":
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDomain'
          description: NoSuchDomain
          x-aws-exception: true
        "404":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AttributeDoesNotExist'
          description: AttributeDoesNotExist
          x-aws-exception: true
        "409":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NumberItemAttributesExceeded'
          description: NumberItemAttributesExceeded
          x-aws-exception: true
      x-aws-operation-name: PutAttributes
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#Action=Select:
    get:
      description: "<p> The <code>Select</code> operation returns a set of attributes\
        \ for <code>ItemNames</code> that match the select expression. <code>Select</code>\
        \ is similar to the standard SQL SELECT statement. </p> <p> The total size\
        \ of the response cannot exceed 1 MB in total size. Amazon SimpleDB automatically\
        \ adjusts the number of items returned per page to enforce this limit. For\
        \ example, if the client asks to retrieve 2500 items, but each individual\
        \ item is 10 kB in size, the system returns 100 items and an appropriate <code>NextToken</code>\
        \ so the client can access the next page of results. </p> <p> For information\
        \ on how to construct select expressions, see Using Select to Create Amazon\
        \ SimpleDB Queries in the Developer Guide. </p>"
      operationId: g_et_select
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: The expression used to query the domain.
        explode: true
        in: query
        name: SelectExpression
        required: true
        schema:
          type: string
        style: form
      - description: A string informing Amazon SimpleDB where to start the next list
          of <code>ItemNames</code>.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "Determines whether or not strong consistency should be enforced\
          \ when data is read from SimpleDB. If <code>true</code>, any data previously\
          \ written to SimpleDB will be returned. Otherwise, results will be consistent\
          \ eventually, and the client may not see data that was written immediately\
          \ before your read."
        explode: true
        in: query
        name: ConsistentRead
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SelectResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestedAttributes'
          description: TooManyRequestedAttributes
          x-aws-exception: true
        "408":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RequestTimeout'
          description: RequestTimeout
          x-aws-exception: true
      x-aws-operation-name: Select
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p> The <code>Select</code> operation returns a set of attributes\
        \ for <code>ItemNames</code> that match the select expression. <code>Select</code>\
        \ is similar to the standard SQL SELECT statement. </p> <p> The total size\
        \ of the response cannot exceed 1 MB in total size. Amazon SimpleDB automatically\
        \ adjusts the number of items returned per page to enforce this limit. For\
        \ example, if the client asks to retrieve 2500 items, but each individual\
        \ item is 10 kB in size, the system returns 100 items and an appropriate <code>NextToken</code>\
        \ so the client can access the next page of results. </p> <p> For information\
        \ on how to construct select expressions, see Using Select to Create Amazon\
        \ SimpleDB Queries in the Developer Guide. </p>"
      operationId: p_ost_select
      parameters:
      - explode: true
        in: query
        name: AWSAccessKeyId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureMethod
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SignatureVersion
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Timestamp
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Signature
        required: true
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/SelectRequest'
        x-body-name: body
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SelectResult'
          description: Success
        "400":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRequestedAttributes'
          description: TooManyRequestedAttributes
          x-aws-exception: true
        "408":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RequestTimeout'
          description: RequestTimeout
          x-aws-exception: true
      x-aws-operation-name: Select
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    AWSAccessKeyId:
      explode: true
      in: query
      name: AWSAccessKeyId
      required: true
      schema:
        type: string
      style: form
    Action:
      explode: true
      in: query
      name: Action
      required: true
      schema:
        type: string
      style: form
    SignatureMethod:
      explode: true
      in: query
      name: SignatureMethod
      required: true
      schema:
        type: string
      style: form
    SignatureVersion:
      explode: true
      in: query
      name: SignatureVersion
      required: true
      schema:
        type: string
      style: form
    Timestamp:
      explode: true
      in: query
      name: Timestamp
      required: true
      schema:
        type: string
      style: form
    Version:
      explode: true
      in: query
      name: Version
      required: true
      schema:
        type: string
      style: form
    Signature:
      explode: true
      in: query
      name: Signature
      required: true
      schema:
        type: string
      style: form
  schemas:
    DeletableItem:
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: ItemName
          title: Name
        Attributes:
          items:
            $ref: '#/components/schemas/GET_DeleteAttributes_Attributes_parameter_inner'
          title: Attributes
          type: array
          xml:
            wrapped: false
      required:
      - Name
      title: DeletableItem
      type: object
    ReplaceableItem:
      description: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the replaceable item.
            xml:
              name: ItemName
          title: Name
        Attributes:
          allOf:
          - $ref: '#/components/schemas/ReplaceableAttributeList'
          - description: The list of attributes for a replaceable item.
          title: Attributes
      required:
      - Attributes
      - Name
      title: ReplaceableItem
      type: object
    DuplicateItemName:
      description: 'The item name was specified more than once. '
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    InvalidParameterValue:
      description: The value for a parameter is invalid.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    MissingParameter:
      description: The request must contain the specified missing parameter.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: MissingParameter
      type: object
    NoSuchDomain:
      description: The specified domain does not exist.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: NoSuchDomain
      type: object
    NumberItemAttributesExceeded:
      description: Too many attributes in this item.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: NumberItemAttributesExceeded
      type: object
    NumberDomainAttributesExceeded:
      description: Too many attributes in this domain.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    NumberDomainBytesExceeded:
      description: Too many bytes in this domain.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    NumberSubmittedItemsExceeded:
      description: Too many items exist in a single call.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    NumberSubmittedAttributesExceeded:
      description: Too many attributes exist in a single call.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: NumberSubmittedAttributesExceeded
      type: object
    NumberDomainsExceeded:
      description: Too many domains exist per this account.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: NumberDomainsExceeded
      type: object
    DeletableAttribute:
      description: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the attribute.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the attribute.
          title: Value
      required:
      - Name
      title: DeletableAttribute
      type: object
    String:
      type: string
    Boolean:
      type: boolean
    AttributeDoesNotExist:
      description: The specified attribute does not exist.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: AttributeDoesNotExist
      type: object
    DomainMetadataResult:
      properties:
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of all items in the domain.
          title: ItemCount
        ItemNamesSizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The total size of all item names in the domain, in bytes."
          title: ItemNamesSizeBytes
        AttributeNameCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of unique attribute names in the domain.
          title: AttributeNameCount
        AttributeNamesSizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The total size of all unique attribute names in the domain,\
              \ in bytes."
          title: AttributeNamesSizeBytes
        AttributeValueCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of all attribute name/value pairs in the domain.
          title: AttributeValueCount
        AttributeValuesSizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The total size of all attribute values in the domain, in\
              \ bytes."
          title: AttributeValuesSizeBytes
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The data and time when metadata was calculated, in Epoch\
              \ (UNIX) seconds."
          title: Timestamp
      title: DomainMetadataResult
      type: object
    GetAttributesResult:
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeList'
          - description: The list of attributes returned by the operation.
          title: Attributes
      title: GetAttributesResult
      type: object
    ListDomainsResult:
      properties:
        DomainNames:
          allOf:
          - $ref: '#/components/schemas/DomainNameList'
          - description: A list of domain names that match the expression.
          title: DomainNames
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An opaque token indicating that there are more domains than
              the specified <code>MaxNumberOfDomains</code> still available.
          title: NextToken
      title: ListDomainsResult
      type: object
    InvalidNextToken:
      description: 'The specified NextToken is not valid. '
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: InvalidNextToken
      type: object
    ReplaceableAttribute:
      description: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the replaceable attribute.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the replaceable attribute.
          title: Value
        Replace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A flag specifying whether or not to replace the attribute/value
              pair or to add a new attribute/value pair. The default setting is <code>false</code>.
          title: Replace
      required:
      - Name
      - Value
      title: ReplaceableAttribute
      type: object
    SelectResult:
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ItemList'
          - description: A list of items that match the select expression.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An opaque token indicating that more items than <code>MaxNumberOfItems</code>\
              \ were matched, the response size exceeded 1 megabyte, or the execution\
              \ time exceeded 5 seconds."
          title: NextToken
      title: SelectResult
      type: object
    InvalidNumberPredicates:
      description: Too many predicates exist in the query expression.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    InvalidNumberValueTests:
      description: Too many predicates exist in the query expression.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    InvalidQueryExpression:
      description: The specified query expression syntax is not valid.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      type: object
    RequestTimeout:
      description: A timeout occurred when attempting to query the specified domain
        with specified query expression.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: RequestTimeout
      type: object
    TooManyRequestedAttributes:
      description: Too many attributes requested.
      properties:
        BoxUsage:
          format: float
          title: BoxUsage
          type: number
      title: TooManyRequestedAttributes
      type: object
    Attribute:
      description: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the attribute.
          title: Name
        AlternateNameEncoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ""
          title: AlternateNameEncoding
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the attribute.
          title: Value
        AlternateValueEncoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ""
          title: AlternateValueEncoding
      required:
      - Name
      - Value
      title: Attribute
      type: object
    Float:
      format: float
      title: BoxUsage
      type: number
    AttributeList:
      items:
        $ref: '#/components/schemas/AttributeList_inner'
      type: array
      xml:
        wrapped: false
    AttributeNameList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: AttributeName
      type: array
      xml:
        wrapped: false
    DeletableItemList:
      items:
        $ref: '#/components/schemas/GET_BatchDeleteAttributes_Items_parameter_inner'
      type: array
      xml:
        wrapped: false
    BatchDeleteAttributesRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain in which the attributes are being
              deleted.
          title: DomainName
        Items:
          allOf:
          - $ref: '#/components/schemas/DeletableItemList'
          - description: A list of items on which to perform the operation.
          title: Items
      required:
      - DomainName
      - Items
      title: BatchDeleteAttributesRequest
      type: object
    ReplaceableItemList:
      items:
        $ref: '#/components/schemas/GET_BatchPutAttributes_Items_parameter_inner'
      type: array
      xml:
        wrapped: false
    BatchPutAttributesRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain in which the attributes are being
              stored.
          title: DomainName
        Items:
          allOf:
          - $ref: '#/components/schemas/ReplaceableItemList'
          - description: A list of items on which to perform the operation.
          title: Items
      required:
      - DomainName
      - Items
      title: BatchPutAttributesRequest
      type: object
    CreateDomainRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the domain to create. The name can range between\
              \ 3 and 255 characters and can contain the following characters: a-z,\
              \ A-Z, 0-9, '_', '-', and '.'."
          title: DomainName
      required:
      - DomainName
      title: CreateDomainRequest
      type: object
    DeletableAttributeList:
      items:
        $ref: '#/components/schemas/GET_DeleteAttributes_Attributes_parameter_inner'
      title: Attributes
      type: array
      xml:
        wrapped: false
    UpdateCondition:
      description: " Specifies the conditions under which data should be updated.\
        \ If an update condition is specified for a request, the data will only be\
        \ updated if the condition is satisfied. For example, if an attribute with\
        \ a specific name and value exists, or if a specific attribute doesn't exist. "
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the attribute involved in the condition.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of an attribute. This value can only be specified
              when the <code>Exists</code> parameter is equal to <code>true</code>.
          title: Value
        Exists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value specifying whether or not the specified attribute
              must exist with the specified value in order for the update condition
              to be satisfied. Specify <code>true</code> if the attribute must exist
              for the update condition to be satisfied. Specify <code>false</code>
              if the attribute should not exist in order for the update condition
              to be satisfied.
          title: Exists
      title: UpdateCondition
      type: object
    DeleteAttributesRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain in which to perform the operation.
          title: DomainName
        ItemName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the item. Similar to rows on a spreadsheet,\
              \ items represent individual objects that contain one or more value-attribute\
              \ pairs."
          title: ItemName
        Attributes:
          allOf:
          - $ref: '#/components/schemas/DeletableAttributeList'
          - description: "A list of Attributes. Similar to columns on a spreadsheet,\
              \ attributes represent categories of data that can be assigned to items."
          title: Attributes
        Expected:
          $ref: '#/components/schemas/DeleteAttributesRequest_Expected'
      required:
      - DomainName
      - ItemName
      title: DeleteAttributesRequest
      type: object
    DeleteDomainRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain to delete.
          title: DomainName
      required:
      - DomainName
      title: DeleteDomainRequest
      type: object
    DomainMetadataRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain for which to display the metadata
              of.
          title: DomainName
      required:
      - DomainName
      title: DomainMetadataRequest
      type: object
    Integer:
      type: integer
    Long:
      type: integer
    DomainNameList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: DomainName
      type: array
      xml:
        wrapped: false
    GetAttributesRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain in which to perform the operation.
          title: DomainName
        ItemName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the item.
          title: ItemName
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          - description: The names of the attributes.
          title: AttributeNames
        ConsistentRead:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Determines whether or not strong consistency should be enforced\
              \ when data is read from SimpleDB. If <code>true</code>, any data previously\
              \ written to SimpleDB will be returned. Otherwise, results will be consistent\
              \ eventually, and the client may not see data that was written immediately\
              \ before your read."
          title: ConsistentRead
      required:
      - DomainName
      - ItemName
      title: GetAttributesRequest
      type: object
    Item:
      description: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the item.
          title: Name
        AlternateNameEncoding:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ""
          title: AlternateNameEncoding
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeList'
          - description: A list of attributes.
          title: Attributes
      required:
      - Attributes
      - Name
      title: Item
      type: object
    ItemList:
      items:
        $ref: '#/components/schemas/ItemList_inner'
      type: array
      xml:
        wrapped: false
    ListDomainsRequest:
      properties:
        MaxNumberOfDomains:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of domain names you want returned. The
              range is 1 to 100. The default setting is 100.
          title: MaxNumberOfDomains
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A string informing Amazon SimpleDB where to start the next
              list of domain names.
          title: NextToken
      title: ListDomainsRequest
      type: object
    ReplaceableAttributeList:
      items:
        $ref: '#/components/schemas/GET_PutAttributes_Attributes_parameter_inner'
      type: array
      xml:
        wrapped: false
    PutAttributesRequest:
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the domain in which to perform the operation.
          title: DomainName
        ItemName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the item.
          title: ItemName
        Attributes:
          allOf:
          - $ref: '#/components/schemas/ReplaceableAttributeList'
          - description: The list of attributes.
          title: Attributes
        Expected:
          $ref: '#/components/schemas/PutAttributesRequest_Expected'
      required:
      - Attributes
      - DomainName
      - ItemName
      title: PutAttributesRequest
      type: object
    SelectRequest:
      properties:
        SelectExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The expression used to query the domain.
          title: SelectExpression
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A string informing Amazon SimpleDB where to start the next
              list of <code>ItemNames</code>.
          title: NextToken
        ConsistentRead:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Determines whether or not strong consistency should be enforced\
              \ when data is read from SimpleDB. If <code>true</code>, any data previously\
              \ written to SimpleDB will be returned. Otherwise, results will be consistent\
              \ eventually, and the client may not see data that was written immediately\
              \ before your read."
          title: ConsistentRead
      required:
      - SelectExpression
      title: SelectRequest
      type: object
    GET_BatchDeleteAttributes_Items_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/DeletableItem'
      - xml:
          name: Item
      title: GET_BatchDeleteAttributes_Items_parameter_inner
    GET_BatchPutAttributes_Items_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/ReplaceableItem'
      - xml:
          name: Item
      title: GET_BatchPutAttributes_Items_parameter_inner
    GET_DeleteAttributes_Attributes_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/DeletableAttribute'
      - xml:
          name: Attribute
      title: GET_DeleteAttributes_Attributes_parameter_inner
    GET_DeleteAttributes_Expected_parameter:
      description: " Specifies the conditions under which data should be updated.\
        \ If an update condition is specified for a request, the data will only be\
        \ updated if the condition is satisfied. For example, if an attribute with\
        \ a specific name and value exists, or if a specific attribute doesn't exist. "
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the attribute involved in the condition.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of an attribute. This value can only be specified
              when the <code>Exists</code> parameter is equal to <code>true</code>.
        Exists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value specifying whether or not the specified attribute
              must exist with the specified value in order for the update condition
              to be satisfied. Specify <code>true</code> if the attribute must exist
              for the update condition to be satisfied. Specify <code>false</code>
              if the attribute should not exist in order for the update condition
              to be satisfied.
      type: object
    GET_PutAttributes_Attributes_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/ReplaceableAttribute'
      - xml:
          name: Attribute
      title: GET_PutAttributes_Attributes_parameter_inner
    AttributeList_inner:
      allOf:
      - $ref: '#/components/schemas/Attribute'
      - xml:
          name: Attribute
      title: AttributeList_inner
    DeleteAttributesRequest_Expected:
      allOf:
      - $ref: '#/components/schemas/UpdateCondition'
      - description: "The update condition which, if specified, determines whether\
          \ the specified attributes will be deleted or not. The update condition\
          \ must be satisfied in order for this request to be processed and the attributes\
          \ to be deleted."
      title: DeleteAttributesRequest_Expected
    ItemList_inner:
      allOf:
      - $ref: '#/components/schemas/Item'
      - xml:
          name: Item
      title: ItemList_inner
    PutAttributesRequest_Expected:
      allOf:
      - $ref: '#/components/schemas/UpdateCondition'
      - description: "The update condition which, if specified, determines whether\
          \ the specified attributes will be updated or not. The update condition\
          \ must be satisfied in order for this request to be processed and the attributes\
          \ to be updated."
      title: PutAttributesRequest_Expected
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v2
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv2
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
