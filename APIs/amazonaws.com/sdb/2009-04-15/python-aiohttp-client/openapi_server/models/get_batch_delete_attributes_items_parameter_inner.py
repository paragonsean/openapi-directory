# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_delete_attributes_attributes_parameter_inner import GETDeleteAttributesAttributesParameterInner
from openapi_server import util


class GETBatchDeleteAttributesItemsParameterInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, attributes: List[GETDeleteAttributesAttributesParameterInner]=None):
        """GETBatchDeleteAttributesItemsParameterInner - a model defined in OpenAPI

        :param name: The name of this GETBatchDeleteAttributesItemsParameterInner.
        :param attributes: The attributes of this GETBatchDeleteAttributesItemsParameterInner.
        """
        self.openapi_types = {
            'name': str,
            'attributes': List[GETDeleteAttributesAttributesParameterInner]
        }

        self.attribute_map = {
            'name': 'Name',
            'attributes': 'Attributes'
        }

        self._name = name
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETBatchDeleteAttributesItemsParameterInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_BatchDeleteAttributes_Items_parameter_inner of this GETBatchDeleteAttributesItemsParameterInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GETBatchDeleteAttributesItemsParameterInner.


        :return: The name of this GETBatchDeleteAttributesItemsParameterInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GETBatchDeleteAttributesItemsParameterInner.


        :param name: The name of this GETBatchDeleteAttributesItemsParameterInner.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def attributes(self):
        """Gets the attributes of this GETBatchDeleteAttributesItemsParameterInner.


        :return: The attributes of this GETBatchDeleteAttributesItemsParameterInner.
        :rtype: List[GETDeleteAttributesAttributesParameterInner]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GETBatchDeleteAttributesItemsParameterInner.


        :param attributes: The attributes of this GETBatchDeleteAttributesItemsParameterInner.
        :type attributes: List[GETDeleteAttributesAttributesParameterInner]
        """

        self._attributes = attributes
