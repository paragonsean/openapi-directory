# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAttributesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, item_name: str=None, attribute_names: List=None, consistent_read: bool=None):
        """GetAttributesRequest - a model defined in OpenAPI

        :param domain_name: The domain_name of this GetAttributesRequest.
        :param item_name: The item_name of this GetAttributesRequest.
        :param attribute_names: The attribute_names of this GetAttributesRequest.
        :param consistent_read: The consistent_read of this GetAttributesRequest.
        """
        self.openapi_types = {
            'domain_name': str,
            'item_name': str,
            'attribute_names': List,
            'consistent_read': bool
        }

        self.attribute_map = {
            'domain_name': 'DomainName',
            'item_name': 'ItemName',
            'attribute_names': 'AttributeNames',
            'consistent_read': 'ConsistentRead'
        }

        self._domain_name = domain_name
        self._item_name = item_name
        self._attribute_names = attribute_names
        self._consistent_read = consistent_read

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAttributesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAttributesRequest of this GetAttributesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this GetAttributesRequest.


        :return: The domain_name of this GetAttributesRequest.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this GetAttributesRequest.


        :param domain_name: The domain_name of this GetAttributesRequest.
        :type domain_name: str
        """
        if domain_name is None:
            raise ValueError("Invalid value for `domain_name`, must not be `None`")

        self._domain_name = domain_name

    @property
    def item_name(self):
        """Gets the item_name of this GetAttributesRequest.


        :return: The item_name of this GetAttributesRequest.
        :rtype: str
        """
        return self._item_name

    @item_name.setter
    def item_name(self, item_name):
        """Sets the item_name of this GetAttributesRequest.


        :param item_name: The item_name of this GetAttributesRequest.
        :type item_name: str
        """
        if item_name is None:
            raise ValueError("Invalid value for `item_name`, must not be `None`")

        self._item_name = item_name

    @property
    def attribute_names(self):
        """Gets the attribute_names of this GetAttributesRequest.


        :return: The attribute_names of this GetAttributesRequest.
        :rtype: List
        """
        return self._attribute_names

    @attribute_names.setter
    def attribute_names(self, attribute_names):
        """Sets the attribute_names of this GetAttributesRequest.


        :param attribute_names: The attribute_names of this GetAttributesRequest.
        :type attribute_names: List
        """

        self._attribute_names = attribute_names

    @property
    def consistent_read(self):
        """Gets the consistent_read of this GetAttributesRequest.


        :return: The consistent_read of this GetAttributesRequest.
        :rtype: bool
        """
        return self._consistent_read

    @consistent_read.setter
    def consistent_read(self, consistent_read):
        """Sets the consistent_read of this GetAttributesRequest.


        :param consistent_read: The consistent_read of this GetAttributesRequest.
        :type consistent_read: bool
        """

        self._consistent_read = consistent_read
