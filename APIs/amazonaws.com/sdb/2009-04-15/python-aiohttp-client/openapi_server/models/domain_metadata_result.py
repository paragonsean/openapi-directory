# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainMetadataResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_count: int=None, item_names_size_bytes: int=None, attribute_name_count: int=None, attribute_names_size_bytes: int=None, attribute_value_count: int=None, attribute_values_size_bytes: int=None, timestamp: int=None):
        """DomainMetadataResult - a model defined in OpenAPI

        :param item_count: The item_count of this DomainMetadataResult.
        :param item_names_size_bytes: The item_names_size_bytes of this DomainMetadataResult.
        :param attribute_name_count: The attribute_name_count of this DomainMetadataResult.
        :param attribute_names_size_bytes: The attribute_names_size_bytes of this DomainMetadataResult.
        :param attribute_value_count: The attribute_value_count of this DomainMetadataResult.
        :param attribute_values_size_bytes: The attribute_values_size_bytes of this DomainMetadataResult.
        :param timestamp: The timestamp of this DomainMetadataResult.
        """
        self.openapi_types = {
            'item_count': int,
            'item_names_size_bytes': int,
            'attribute_name_count': int,
            'attribute_names_size_bytes': int,
            'attribute_value_count': int,
            'attribute_values_size_bytes': int,
            'timestamp': int
        }

        self.attribute_map = {
            'item_count': 'ItemCount',
            'item_names_size_bytes': 'ItemNamesSizeBytes',
            'attribute_name_count': 'AttributeNameCount',
            'attribute_names_size_bytes': 'AttributeNamesSizeBytes',
            'attribute_value_count': 'AttributeValueCount',
            'attribute_values_size_bytes': 'AttributeValuesSizeBytes',
            'timestamp': 'Timestamp'
        }

        self._item_count = item_count
        self._item_names_size_bytes = item_names_size_bytes
        self._attribute_name_count = attribute_name_count
        self._attribute_names_size_bytes = attribute_names_size_bytes
        self._attribute_value_count = attribute_value_count
        self._attribute_values_size_bytes = attribute_values_size_bytes
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainMetadataResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainMetadataResult of this DomainMetadataResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_count(self):
        """Gets the item_count of this DomainMetadataResult.


        :return: The item_count of this DomainMetadataResult.
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this DomainMetadataResult.


        :param item_count: The item_count of this DomainMetadataResult.
        :type item_count: int
        """

        self._item_count = item_count

    @property
    def item_names_size_bytes(self):
        """Gets the item_names_size_bytes of this DomainMetadataResult.


        :return: The item_names_size_bytes of this DomainMetadataResult.
        :rtype: int
        """
        return self._item_names_size_bytes

    @item_names_size_bytes.setter
    def item_names_size_bytes(self, item_names_size_bytes):
        """Sets the item_names_size_bytes of this DomainMetadataResult.


        :param item_names_size_bytes: The item_names_size_bytes of this DomainMetadataResult.
        :type item_names_size_bytes: int
        """

        self._item_names_size_bytes = item_names_size_bytes

    @property
    def attribute_name_count(self):
        """Gets the attribute_name_count of this DomainMetadataResult.


        :return: The attribute_name_count of this DomainMetadataResult.
        :rtype: int
        """
        return self._attribute_name_count

    @attribute_name_count.setter
    def attribute_name_count(self, attribute_name_count):
        """Sets the attribute_name_count of this DomainMetadataResult.


        :param attribute_name_count: The attribute_name_count of this DomainMetadataResult.
        :type attribute_name_count: int
        """

        self._attribute_name_count = attribute_name_count

    @property
    def attribute_names_size_bytes(self):
        """Gets the attribute_names_size_bytes of this DomainMetadataResult.


        :return: The attribute_names_size_bytes of this DomainMetadataResult.
        :rtype: int
        """
        return self._attribute_names_size_bytes

    @attribute_names_size_bytes.setter
    def attribute_names_size_bytes(self, attribute_names_size_bytes):
        """Sets the attribute_names_size_bytes of this DomainMetadataResult.


        :param attribute_names_size_bytes: The attribute_names_size_bytes of this DomainMetadataResult.
        :type attribute_names_size_bytes: int
        """

        self._attribute_names_size_bytes = attribute_names_size_bytes

    @property
    def attribute_value_count(self):
        """Gets the attribute_value_count of this DomainMetadataResult.


        :return: The attribute_value_count of this DomainMetadataResult.
        :rtype: int
        """
        return self._attribute_value_count

    @attribute_value_count.setter
    def attribute_value_count(self, attribute_value_count):
        """Sets the attribute_value_count of this DomainMetadataResult.


        :param attribute_value_count: The attribute_value_count of this DomainMetadataResult.
        :type attribute_value_count: int
        """

        self._attribute_value_count = attribute_value_count

    @property
    def attribute_values_size_bytes(self):
        """Gets the attribute_values_size_bytes of this DomainMetadataResult.


        :return: The attribute_values_size_bytes of this DomainMetadataResult.
        :rtype: int
        """
        return self._attribute_values_size_bytes

    @attribute_values_size_bytes.setter
    def attribute_values_size_bytes(self, attribute_values_size_bytes):
        """Sets the attribute_values_size_bytes of this DomainMetadataResult.


        :param attribute_values_size_bytes: The attribute_values_size_bytes of this DomainMetadataResult.
        :type attribute_values_size_bytes: int
        """

        self._attribute_values_size_bytes = attribute_values_size_bytes

    @property
    def timestamp(self):
        """Gets the timestamp of this DomainMetadataResult.


        :return: The timestamp of this DomainMetadataResult.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this DomainMetadataResult.


        :param timestamp: The timestamp of this DomainMetadataResult.
        :type timestamp: int
        """

        self._timestamp = timestamp
