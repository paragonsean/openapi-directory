/**
 * Amazon SimpleDB
 * Amazon SimpleDB is a web service providing the core database functions of data indexing and querying in the cloud. By offloading the time and effort associated with building and operating a web-scale database, SimpleDB provides developers the freedom to focus on application development. <p> A traditional, clustered relational database requires a sizable upfront capital outlay, is complex to design, and often requires extensive and repetitive database administration. Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing your data and providing a simple API for storage and access. This approach eliminates the administrative burden of data modeling, index maintenance, and performance tuning. Developers gain access to this functionality within Amazon's proven computing environment, are able to scale instantly, and pay only for what they use. </p> <p> Visit <a href=\"http://aws.amazon.com/simpledb/\">http://aws.amazon.com/simpledb/</a> for more information. </p>
 *
 * The version of the OpenAPI document: 2009-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSimpleDb);
  }
}(this, function(expect, AmazonSimpleDb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSimpleDb.DomainMetadataResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DomainMetadataResult', function() {
    it('should create an instance of DomainMetadataResult', function() {
      // uncomment below and update the code to test DomainMetadataResult
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be.a(AmazonSimpleDb.DomainMetadataResult);
    });

    it('should have the property itemCount (base name: "ItemCount")', function() {
      // uncomment below and update the code to test the property itemCount
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

    it('should have the property itemNamesSizeBytes (base name: "ItemNamesSizeBytes")', function() {
      // uncomment below and update the code to test the property itemNamesSizeBytes
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

    it('should have the property attributeNameCount (base name: "AttributeNameCount")', function() {
      // uncomment below and update the code to test the property attributeNameCount
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

    it('should have the property attributeNamesSizeBytes (base name: "AttributeNamesSizeBytes")', function() {
      // uncomment below and update the code to test the property attributeNamesSizeBytes
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

    it('should have the property attributeValueCount (base name: "AttributeValueCount")', function() {
      // uncomment below and update the code to test the property attributeValueCount
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

    it('should have the property attributeValuesSizeBytes (base name: "AttributeValuesSizeBytes")', function() {
      // uncomment below and update the code to test the property attributeValuesSizeBytes
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "Timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new AmazonSimpleDb.DomainMetadataResult();
      //expect(instance).to.be();
    });

  });

}));
