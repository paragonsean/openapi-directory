/**
 * Amazon SimpleDB
 * Amazon SimpleDB is a web service providing the core database functions of data indexing and querying in the cloud. By offloading the time and effort associated with building and operating a web-scale database, SimpleDB provides developers the freedom to focus on application development. <p> A traditional, clustered relational database requires a sizable upfront capital outlay, is complex to design, and often requires extensive and repetitive database administration. Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing your data and providing a simple API for storage and access. This approach eliminates the administrative burden of data modeling, index maintenance, and performance tuning. Developers gain access to this functionality within Amazon's proven computing environment, are able to scale instantly, and pay only for what they use. </p> <p> Visit <a href=\"http://aws.amazon.com/simpledb/\">http://aws.amazon.com/simpledb/</a> for more information. </p>
 *
 * The version of the OpenAPI document: 2009-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAttributesRequest.h
 *
 * 
 */

#ifndef OAIGetAttributesRequest_H
#define OAIGetAttributesRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetAttributesRequest : public OAIObject {
public:
    OAIGetAttributesRequest();
    OAIGetAttributesRequest(QString json);
    ~OAIGetAttributesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getItemName() const;
    void setItemName(const QString &item_name);
    bool is_item_name_Set() const;
    bool is_item_name_Valid() const;

    QList getAttributeNames() const;
    void setAttributeNames(const QList &attribute_names);
    bool is_attribute_names_Set() const;
    bool is_attribute_names_Valid() const;

    bool getConsistentRead() const;
    void setConsistentRead(const bool &consistent_read);
    bool is_consistent_read_Set() const;
    bool is_consistent_read_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_item_name;
    bool m_item_name_isSet;
    bool m_item_name_isValid;

    QList m_attribute_names;
    bool m_attribute_names_isSet;
    bool m_attribute_names_isValid;

    bool m_consistent_read;
    bool m_consistent_read_isSet;
    bool m_consistent_read_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAttributesRequest)

#endif // OAIGetAttributesRequest_H
