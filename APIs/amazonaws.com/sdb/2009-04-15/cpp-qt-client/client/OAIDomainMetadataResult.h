/**
 * Amazon SimpleDB
 * Amazon SimpleDB is a web service providing the core database functions of data indexing and querying in the cloud. By offloading the time and effort associated with building and operating a web-scale database, SimpleDB provides developers the freedom to focus on application development. <p> A traditional, clustered relational database requires a sizable upfront capital outlay, is complex to design, and often requires extensive and repetitive database administration. Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing your data and providing a simple API for storage and access. This approach eliminates the administrative burden of data modeling, index maintenance, and performance tuning. Developers gain access to this functionality within Amazon's proven computing environment, are able to scale instantly, and pay only for what they use. </p> <p> Visit <a href=\"http://aws.amazon.com/simpledb/\">http://aws.amazon.com/simpledb/</a> for more information. </p>
 *
 * The version of the OpenAPI document: 2009-04-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainMetadataResult.h
 *
 * 
 */

#ifndef OAIDomainMetadataResult_H
#define OAIDomainMetadataResult_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDomainMetadataResult : public OAIObject {
public:
    OAIDomainMetadataResult();
    OAIDomainMetadataResult(QString json);
    ~OAIDomainMetadataResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getItemCount() const;
    void setItemCount(const qint32 &item_count);
    bool is_item_count_Set() const;
    bool is_item_count_Valid() const;

    qint32 getItemNamesSizeBytes() const;
    void setItemNamesSizeBytes(const qint32 &item_names_size_bytes);
    bool is_item_names_size_bytes_Set() const;
    bool is_item_names_size_bytes_Valid() const;

    qint32 getAttributeNameCount() const;
    void setAttributeNameCount(const qint32 &attribute_name_count);
    bool is_attribute_name_count_Set() const;
    bool is_attribute_name_count_Valid() const;

    qint32 getAttributeNamesSizeBytes() const;
    void setAttributeNamesSizeBytes(const qint32 &attribute_names_size_bytes);
    bool is_attribute_names_size_bytes_Set() const;
    bool is_attribute_names_size_bytes_Valid() const;

    qint32 getAttributeValueCount() const;
    void setAttributeValueCount(const qint32 &attribute_value_count);
    bool is_attribute_value_count_Set() const;
    bool is_attribute_value_count_Valid() const;

    qint32 getAttributeValuesSizeBytes() const;
    void setAttributeValuesSizeBytes(const qint32 &attribute_values_size_bytes);
    bool is_attribute_values_size_bytes_Set() const;
    bool is_attribute_values_size_bytes_Valid() const;

    qint32 getTimestamp() const;
    void setTimestamp(const qint32 &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_item_count;
    bool m_item_count_isSet;
    bool m_item_count_isValid;

    qint32 m_item_names_size_bytes;
    bool m_item_names_size_bytes_isSet;
    bool m_item_names_size_bytes_isValid;

    qint32 m_attribute_name_count;
    bool m_attribute_name_count_isSet;
    bool m_attribute_name_count_isValid;

    qint32 m_attribute_names_size_bytes;
    bool m_attribute_names_size_bytes_isSet;
    bool m_attribute_names_size_bytes_isValid;

    qint32 m_attribute_value_count;
    bool m_attribute_value_count_isSet;
    bool m_attribute_value_count_isValid;

    qint32 m_attribute_values_size_bytes;
    bool m_attribute_values_size_bytes_isSet;
    bool m_attribute_values_size_bytes_isValid;

    qint32 m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainMetadataResult)

#endif // OAIDomainMetadataResult_H
