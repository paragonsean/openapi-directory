/**
 * Amazon Prometheus Service
 * Amazon Managed Service for Prometheus
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateWorkspaceRequest model module.
 * @module model/CreateWorkspaceRequest
 * @version 2020-08-01
 */
class CreateWorkspaceRequest {
    /**
     * Constructs a new <code>CreateWorkspaceRequest</code>.
     * @alias module:model/CreateWorkspaceRequest
     */
    constructor() { 
        
        CreateWorkspaceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateWorkspaceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorkspaceRequest} obj Optional instance to populate.
     * @return {module:model/CreateWorkspaceRequest} The populated <code>CreateWorkspaceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorkspaceRequest();

            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorkspaceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorkspaceRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alias'] && !(typeof data['alias'] === 'string' || data['alias'] instanceof String)) {
            throw new Error("Expected the field `alias` to be a primitive type in the JSON string but got " + data['alias']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}



/**
 * A user-assigned workspace alias.
 * @member {String} alias
 */
CreateWorkspaceRequest.prototype['alias'] = undefined;

/**
 * An identifier used to ensure the idempotency of a write request.
 * @member {String} clientToken
 */
CreateWorkspaceRequest.prototype['clientToken'] = undefined;

/**
 * The list of tags assigned to the resource.
 * @member {Object.<String, String>} tags
 */
CreateWorkspaceRequest.prototype['tags'] = undefined;






export default CreateWorkspaceRequest;

