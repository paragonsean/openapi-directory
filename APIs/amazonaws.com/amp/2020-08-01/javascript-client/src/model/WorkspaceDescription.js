/**
 * Amazon Prometheus Service
 * Amazon Managed Service for Prometheus
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkspaceDescriptionStatus from './WorkspaceDescriptionStatus';

/**
 * The WorkspaceDescription model module.
 * @module model/WorkspaceDescription
 * @version 2020-08-01
 */
class WorkspaceDescription {
    /**
     * Constructs a new <code>WorkspaceDescription</code>.
     * Represents the properties of a workspace.
     * @alias module:model/WorkspaceDescription
     * @param workspaceId {String} 
     * @param arn {String} 
     * @param status {module:model/WorkspaceDescriptionStatus} 
     * @param createdAt {Date} 
     */
    constructor(workspaceId, arn, status, createdAt) { 
        
        WorkspaceDescription.initialize(this, workspaceId, arn, status, createdAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workspaceId, arn, status, createdAt) { 
        obj['workspaceId'] = workspaceId;
        obj['arn'] = arn;
        obj['status'] = status;
        obj['createdAt'] = createdAt;
    }

    /**
     * Constructs a <code>WorkspaceDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkspaceDescription} obj Optional instance to populate.
     * @return {module:model/WorkspaceDescription} The populated <code>WorkspaceDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkspaceDescription();

            if (data.hasOwnProperty('workspaceId')) {
                obj['workspaceId'] = ApiClient.convertToType(data['workspaceId'], 'String');
            }
            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = WorkspaceDescriptionStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('prometheusEndpoint')) {
                obj['prometheusEndpoint'] = ApiClient.convertToType(data['prometheusEndpoint'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkspaceDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkspaceDescription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkspaceDescription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `workspaceId`
        if (data['workspaceId']) { // data not null
          String.validateJSON(data['workspaceId']);
        }
        // validate the optional field `alias`
        if (data['alias']) { // data not null
          String.validateJSON(data['alias']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          WorkspaceDescriptionStatus.validateJSON(data['status']);
        }
        // validate the optional field `prometheusEndpoint`
        if (data['prometheusEndpoint']) { // data not null
          String.validateJSON(data['prometheusEndpoint']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}

WorkspaceDescription.RequiredProperties = ["workspaceId", "arn", "status", "createdAt"];

/**
 * @member {String} workspaceId
 */
WorkspaceDescription.prototype['workspaceId'] = undefined;

/**
 * @member {String} alias
 */
WorkspaceDescription.prototype['alias'] = undefined;

/**
 * @member {String} arn
 */
WorkspaceDescription.prototype['arn'] = undefined;

/**
 * @member {module:model/WorkspaceDescriptionStatus} status
 */
WorkspaceDescription.prototype['status'] = undefined;

/**
 * @member {String} prometheusEndpoint
 */
WorkspaceDescription.prototype['prometheusEndpoint'] = undefined;

/**
 * @member {Date} createdAt
 */
WorkspaceDescription.prototype['createdAt'] = undefined;

/**
 * @member {Object} tags
 */
WorkspaceDescription.prototype['tags'] = undefined;






export default WorkspaceDescription;

