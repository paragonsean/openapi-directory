/**
 * Amazon Prometheus Service
 * Amazon Managed Service for Prometheus
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRuleGroupsNamespaceStatusCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRuleGroupsNamespaceStatusCode::OAIRuleGroupsNamespaceStatusCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRuleGroupsNamespaceStatusCode::OAIRuleGroupsNamespaceStatusCode() {
    this->initializeModel();
}

OAIRuleGroupsNamespaceStatusCode::~OAIRuleGroupsNamespaceStatusCode() {}

void OAIRuleGroupsNamespaceStatusCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRuleGroupsNamespaceStatusCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRuleGroupsNamespaceStatusCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleGroupsNamespaceStatusCode::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleGroupsNamespaceStatusCode::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleGroupsNamespaceStatusCode::UPDATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleGroupsNamespaceStatusCode::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATION_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleGroupsNamespaceStatusCode::CREATION_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATE_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRuleGroupsNamespaceStatusCode::UPDATE_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRuleGroupsNamespaceStatusCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRuleGroupsNamespaceStatusCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRuleGroupsNamespaceStatusCode::CREATING:
            val = "CREATING";
            break;
        case eOAIRuleGroupsNamespaceStatusCode::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIRuleGroupsNamespaceStatusCode::UPDATING:
            val = "UPDATING";
            break;
        case eOAIRuleGroupsNamespaceStatusCode::DELETING:
            val = "DELETING";
            break;
        case eOAIRuleGroupsNamespaceStatusCode::CREATION_FAILED:
            val = "CREATION_FAILED";
            break;
        case eOAIRuleGroupsNamespaceStatusCode::UPDATE_FAILED:
            val = "UPDATE_FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRuleGroupsNamespaceStatusCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRuleGroupsNamespaceStatusCode::eOAIRuleGroupsNamespaceStatusCode OAIRuleGroupsNamespaceStatusCode::getValue() const {
    return m_value;
}

void OAIRuleGroupsNamespaceStatusCode::setValue(const OAIRuleGroupsNamespaceStatusCode::eOAIRuleGroupsNamespaceStatusCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRuleGroupsNamespaceStatusCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIRuleGroupsNamespaceStatusCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
