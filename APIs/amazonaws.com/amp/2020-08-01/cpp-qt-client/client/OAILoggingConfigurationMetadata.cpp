/**
 * Amazon Prometheus Service
 * Amazon Managed Service for Prometheus
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoggingConfigurationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoggingConfigurationMetadata::OAILoggingConfigurationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoggingConfigurationMetadata::OAILoggingConfigurationMetadata() {
    this->initializeModel();
}

OAILoggingConfigurationMetadata::~OAILoggingConfigurationMetadata() {}

void OAILoggingConfigurationMetadata::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_workspace_isSet = false;
    m_workspace_isValid = false;

    m_log_group_arn_isSet = false;
    m_log_group_arn_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_modified_at_isSet = false;
    m_modified_at_isValid = false;
}

void OAILoggingConfigurationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoggingConfigurationMetadata::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_workspace_isValid = ::OpenAPI::fromJsonValue(m_workspace, json[QString("workspace")]);
    m_workspace_isSet = !json[QString("workspace")].isNull() && m_workspace_isValid;

    m_log_group_arn_isValid = ::OpenAPI::fromJsonValue(m_log_group_arn, json[QString("logGroupArn")]);
    m_log_group_arn_isSet = !json[QString("logGroupArn")].isNull() && m_log_group_arn_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_modified_at_isValid = ::OpenAPI::fromJsonValue(m_modified_at, json[QString("modifiedAt")]);
    m_modified_at_isSet = !json[QString("modifiedAt")].isNull() && m_modified_at_isValid;
}

QString OAILoggingConfigurationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoggingConfigurationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_workspace_isSet) {
        obj.insert(QString("workspace"), ::OpenAPI::toJsonValue(m_workspace));
    }
    if (m_log_group_arn_isSet) {
        obj.insert(QString("logGroupArn"), ::OpenAPI::toJsonValue(m_log_group_arn));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_modified_at_isSet) {
        obj.insert(QString("modifiedAt"), ::OpenAPI::toJsonValue(m_modified_at));
    }
    return obj;
}

OAICreateLoggingConfigurationResponse_status OAILoggingConfigurationMetadata::getStatus() const {
    return m_status;
}
void OAILoggingConfigurationMetadata::setStatus(const OAICreateLoggingConfigurationResponse_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILoggingConfigurationMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAILoggingConfigurationMetadata::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILoggingConfigurationMetadata::getWorkspace() const {
    return m_workspace;
}
void OAILoggingConfigurationMetadata::setWorkspace(const QString &workspace) {
    m_workspace = workspace;
    m_workspace_isSet = true;
}

bool OAILoggingConfigurationMetadata::is_workspace_Set() const{
    return m_workspace_isSet;
}

bool OAILoggingConfigurationMetadata::is_workspace_Valid() const{
    return m_workspace_isValid;
}

QString OAILoggingConfigurationMetadata::getLogGroupArn() const {
    return m_log_group_arn;
}
void OAILoggingConfigurationMetadata::setLogGroupArn(const QString &log_group_arn) {
    m_log_group_arn = log_group_arn;
    m_log_group_arn_isSet = true;
}

bool OAILoggingConfigurationMetadata::is_log_group_arn_Set() const{
    return m_log_group_arn_isSet;
}

bool OAILoggingConfigurationMetadata::is_log_group_arn_Valid() const{
    return m_log_group_arn_isValid;
}

QDateTime OAILoggingConfigurationMetadata::getCreatedAt() const {
    return m_created_at;
}
void OAILoggingConfigurationMetadata::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAILoggingConfigurationMetadata::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAILoggingConfigurationMetadata::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAILoggingConfigurationMetadata::getModifiedAt() const {
    return m_modified_at;
}
void OAILoggingConfigurationMetadata::setModifiedAt(const QDateTime &modified_at) {
    m_modified_at = modified_at;
    m_modified_at_isSet = true;
}

bool OAILoggingConfigurationMetadata::is_modified_at_Set() const{
    return m_modified_at_isSet;
}

bool OAILoggingConfigurationMetadata::is_modified_at_Valid() const{
    return m_modified_at_isValid;
}

bool OAILoggingConfigurationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_workspace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoggingConfigurationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_isValid && m_workspace_isValid && m_log_group_arn_isValid && m_created_at_isValid && m_modified_at_isValid && true;
}

} // namespace OpenAPI
