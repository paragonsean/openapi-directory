/**
 * Amazon Prometheus Service
 * Amazon Managed Service for Prometheus
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlertManagerDefinitionDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlertManagerDefinitionDescription::OAIAlertManagerDefinitionDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlertManagerDefinitionDescription::OAIAlertManagerDefinitionDescription() {
    this->initializeModel();
}

OAIAlertManagerDefinitionDescription::~OAIAlertManagerDefinitionDescription() {}

void OAIAlertManagerDefinitionDescription::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_modified_at_isSet = false;
    m_modified_at_isValid = false;
}

void OAIAlertManagerDefinitionDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlertManagerDefinitionDescription::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_modified_at_isValid = ::OpenAPI::fromJsonValue(m_modified_at, json[QString("modifiedAt")]);
    m_modified_at_isSet = !json[QString("modifiedAt")].isNull() && m_modified_at_isValid;
}

QString OAIAlertManagerDefinitionDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlertManagerDefinitionDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_modified_at_isSet) {
        obj.insert(QString("modifiedAt"), ::OpenAPI::toJsonValue(m_modified_at));
    }
    return obj;
}

OAICreateAlertManagerDefinitionResponse_status OAIAlertManagerDefinitionDescription::getStatus() const {
    return m_status;
}
void OAIAlertManagerDefinitionDescription::setStatus(const OAICreateAlertManagerDefinitionResponse_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAlertManagerDefinitionDescription::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAlertManagerDefinitionDescription::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAlertManagerDefinitionDescription::getData() const {
    return m_data;
}
void OAIAlertManagerDefinitionDescription::setData(const QString &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIAlertManagerDefinitionDescription::is_data_Set() const{
    return m_data_isSet;
}

bool OAIAlertManagerDefinitionDescription::is_data_Valid() const{
    return m_data_isValid;
}

QDateTime OAIAlertManagerDefinitionDescription::getCreatedAt() const {
    return m_created_at;
}
void OAIAlertManagerDefinitionDescription::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAlertManagerDefinitionDescription::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAlertManagerDefinitionDescription::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIAlertManagerDefinitionDescription::getModifiedAt() const {
    return m_modified_at;
}
void OAIAlertManagerDefinitionDescription::setModifiedAt(const QDateTime &modified_at) {
    m_modified_at = modified_at;
    m_modified_at_isSet = true;
}

bool OAIAlertManagerDefinitionDescription::is_modified_at_Set() const{
    return m_modified_at_isSet;
}

bool OAIAlertManagerDefinitionDescription::is_modified_at_Valid() const{
    return m_modified_at_isValid;
}

bool OAIAlertManagerDefinitionDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlertManagerDefinitionDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_isValid && m_data_isValid && m_created_at_isValid && m_modified_at_isValid && true;
}

} // namespace OpenAPI
