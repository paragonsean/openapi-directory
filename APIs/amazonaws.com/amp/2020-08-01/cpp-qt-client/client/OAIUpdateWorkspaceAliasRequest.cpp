/**
 * Amazon Prometheus Service
 * Amazon Managed Service for Prometheus
 *
 * The version of the OpenAPI document: 2020-08-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateWorkspaceAliasRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateWorkspaceAliasRequest::OAIUpdateWorkspaceAliasRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateWorkspaceAliasRequest::OAIUpdateWorkspaceAliasRequest() {
    this->initializeModel();
}

OAIUpdateWorkspaceAliasRequest::~OAIUpdateWorkspaceAliasRequest() {}

void OAIUpdateWorkspaceAliasRequest::initializeModel() {

    m_alias_isSet = false;
    m_alias_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIUpdateWorkspaceAliasRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateWorkspaceAliasRequest::fromJsonObject(QJsonObject json) {

    m_alias_isValid = ::OpenAPI::fromJsonValue(m_alias, json[QString("alias")]);
    m_alias_isSet = !json[QString("alias")].isNull() && m_alias_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;
}

QString OAIUpdateWorkspaceAliasRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateWorkspaceAliasRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_alias_isSet) {
        obj.insert(QString("alias"), ::OpenAPI::toJsonValue(m_alias));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QString OAIUpdateWorkspaceAliasRequest::getAlias() const {
    return m_alias;
}
void OAIUpdateWorkspaceAliasRequest::setAlias(const QString &alias) {
    m_alias = alias;
    m_alias_isSet = true;
}

bool OAIUpdateWorkspaceAliasRequest::is_alias_Set() const{
    return m_alias_isSet;
}

bool OAIUpdateWorkspaceAliasRequest::is_alias_Valid() const{
    return m_alias_isValid;
}

QString OAIUpdateWorkspaceAliasRequest::getClientToken() const {
    return m_client_token;
}
void OAIUpdateWorkspaceAliasRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIUpdateWorkspaceAliasRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIUpdateWorkspaceAliasRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIUpdateWorkspaceAliasRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateWorkspaceAliasRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
