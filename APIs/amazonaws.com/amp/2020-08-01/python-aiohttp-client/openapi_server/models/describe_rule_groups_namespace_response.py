# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_rule_groups_namespace_response_rule_groups_namespace import DescribeRuleGroupsNamespaceResponseRuleGroupsNamespace
from openapi_server import util


class DescribeRuleGroupsNamespaceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_groups_namespace: DescribeRuleGroupsNamespaceResponseRuleGroupsNamespace=None):
        """DescribeRuleGroupsNamespaceResponse - a model defined in OpenAPI

        :param rule_groups_namespace: The rule_groups_namespace of this DescribeRuleGroupsNamespaceResponse.
        """
        self.openapi_types = {
            'rule_groups_namespace': DescribeRuleGroupsNamespaceResponseRuleGroupsNamespace
        }

        self.attribute_map = {
            'rule_groups_namespace': 'ruleGroupsNamespace'
        }

        self._rule_groups_namespace = rule_groups_namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeRuleGroupsNamespaceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeRuleGroupsNamespaceResponse of this DescribeRuleGroupsNamespaceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_groups_namespace(self):
        """Gets the rule_groups_namespace of this DescribeRuleGroupsNamespaceResponse.


        :return: The rule_groups_namespace of this DescribeRuleGroupsNamespaceResponse.
        :rtype: DescribeRuleGroupsNamespaceResponseRuleGroupsNamespace
        """
        return self._rule_groups_namespace

    @rule_groups_namespace.setter
    def rule_groups_namespace(self, rule_groups_namespace):
        """Sets the rule_groups_namespace of this DescribeRuleGroupsNamespaceResponse.


        :param rule_groups_namespace: The rule_groups_namespace of this DescribeRuleGroupsNamespaceResponse.
        :type rule_groups_namespace: DescribeRuleGroupsNamespaceResponseRuleGroupsNamespace
        """
        if rule_groups_namespace is None:
            raise ValueError("Invalid value for `rule_groups_namespace`, must not be `None`")

        self._rule_groups_namespace = rule_groups_namespace
