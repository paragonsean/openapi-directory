/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIName::OAIAPIName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIName::OAIAPIName() {
    this->initializeModel();
}

OAIAPIName::~OAIAPIName() {}

void OAIAPIName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAPIName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAPIName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PUT_MEDIA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::PUT_MEDIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GET_MEDIA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::GET_MEDIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIST_FRAGMENTS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::LIST_FRAGMENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GET_MEDIA_FOR_FRAGMENT_LIST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::GET_MEDIA_FOR_FRAGMENT_LIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GET_HLS_STREAMING_SESSION_URL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::GET_HLS_STREAMING_SESSION_URL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GET_DASH_STREAMING_SESSION_URL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::GET_DASH_STREAMING_SESSION_URL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GET_CLIP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::GET_CLIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GET_IMAGES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAPIName::GET_IMAGES;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAPIName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAPIName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAPIName::PUT_MEDIA:
            val = "PUT_MEDIA";
            break;
        case eOAIAPIName::GET_MEDIA:
            val = "GET_MEDIA";
            break;
        case eOAIAPIName::LIST_FRAGMENTS:
            val = "LIST_FRAGMENTS";
            break;
        case eOAIAPIName::GET_MEDIA_FOR_FRAGMENT_LIST:
            val = "GET_MEDIA_FOR_FRAGMENT_LIST";
            break;
        case eOAIAPIName::GET_HLS_STREAMING_SESSION_URL:
            val = "GET_HLS_STREAMING_SESSION_URL";
            break;
        case eOAIAPIName::GET_DASH_STREAMING_SESSION_URL:
            val = "GET_DASH_STREAMING_SESSION_URL";
            break;
        case eOAIAPIName::GET_CLIP:
            val = "GET_CLIP";
            break;
        case eOAIAPIName::GET_IMAGES:
            val = "GET_IMAGES";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAPIName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAPIName::eOAIAPIName OAIAPIName::getValue() const {
    return m_value;
}

void OAIAPIName::setValue(const OAIAPIName::eOAIAPIName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAPIName::isSet() const {
    
    return m_value_isSet;
}

bool OAIAPIName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
