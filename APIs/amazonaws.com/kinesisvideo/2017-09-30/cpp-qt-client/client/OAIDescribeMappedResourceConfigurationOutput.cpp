/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeMappedResourceConfigurationOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeMappedResourceConfigurationOutput::OAIDescribeMappedResourceConfigurationOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeMappedResourceConfigurationOutput::OAIDescribeMappedResourceConfigurationOutput() {
    this->initializeModel();
}

OAIDescribeMappedResourceConfigurationOutput::~OAIDescribeMappedResourceConfigurationOutput() {}

void OAIDescribeMappedResourceConfigurationOutput::initializeModel() {

    m_mapped_resource_configuration_list_isSet = false;
    m_mapped_resource_configuration_list_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIDescribeMappedResourceConfigurationOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeMappedResourceConfigurationOutput::fromJsonObject(QJsonObject json) {

    m_mapped_resource_configuration_list_isValid = ::OpenAPI::fromJsonValue(m_mapped_resource_configuration_list, json[QString("MappedResourceConfigurationList")]);
    m_mapped_resource_configuration_list_isSet = !json[QString("MappedResourceConfigurationList")].isNull() && m_mapped_resource_configuration_list_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIDescribeMappedResourceConfigurationOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeMappedResourceConfigurationOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_mapped_resource_configuration_list.isSet()) {
        obj.insert(QString("MappedResourceConfigurationList"), ::OpenAPI::toJsonValue(m_mapped_resource_configuration_list));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIDescribeMappedResourceConfigurationOutput::getMappedResourceConfigurationList() const {
    return m_mapped_resource_configuration_list;
}
void OAIDescribeMappedResourceConfigurationOutput::setMappedResourceConfigurationList(const QList &mapped_resource_configuration_list) {
    m_mapped_resource_configuration_list = mapped_resource_configuration_list;
    m_mapped_resource_configuration_list_isSet = true;
}

bool OAIDescribeMappedResourceConfigurationOutput::is_mapped_resource_configuration_list_Set() const{
    return m_mapped_resource_configuration_list_isSet;
}

bool OAIDescribeMappedResourceConfigurationOutput::is_mapped_resource_configuration_list_Valid() const{
    return m_mapped_resource_configuration_list_isValid;
}

QString OAIDescribeMappedResourceConfigurationOutput::getNextToken() const {
    return m_next_token;
}
void OAIDescribeMappedResourceConfigurationOutput::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIDescribeMappedResourceConfigurationOutput::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIDescribeMappedResourceConfigurationOutput::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIDescribeMappedResourceConfigurationOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mapped_resource_configuration_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeMappedResourceConfigurationOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
