/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeEdgeConfigurationInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeEdgeConfigurationInput::OAIDescribeEdgeConfigurationInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeEdgeConfigurationInput::OAIDescribeEdgeConfigurationInput() {
    this->initializeModel();
}

OAIDescribeEdgeConfigurationInput::~OAIDescribeEdgeConfigurationInput() {}

void OAIDescribeEdgeConfigurationInput::initializeModel() {

    m_stream_name_isSet = false;
    m_stream_name_isValid = false;

    m_stream_arn_isSet = false;
    m_stream_arn_isValid = false;
}

void OAIDescribeEdgeConfigurationInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeEdgeConfigurationInput::fromJsonObject(QJsonObject json) {

    m_stream_name_isValid = ::OpenAPI::fromJsonValue(m_stream_name, json[QString("StreamName")]);
    m_stream_name_isSet = !json[QString("StreamName")].isNull() && m_stream_name_isValid;

    m_stream_arn_isValid = ::OpenAPI::fromJsonValue(m_stream_arn, json[QString("StreamARN")]);
    m_stream_arn_isSet = !json[QString("StreamARN")].isNull() && m_stream_arn_isValid;
}

QString OAIDescribeEdgeConfigurationInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeEdgeConfigurationInput::asJsonObject() const {
    QJsonObject obj;
    if (m_stream_name_isSet) {
        obj.insert(QString("StreamName"), ::OpenAPI::toJsonValue(m_stream_name));
    }
    if (m_stream_arn_isSet) {
        obj.insert(QString("StreamARN"), ::OpenAPI::toJsonValue(m_stream_arn));
    }
    return obj;
}

QString OAIDescribeEdgeConfigurationInput::getStreamName() const {
    return m_stream_name;
}
void OAIDescribeEdgeConfigurationInput::setStreamName(const QString &stream_name) {
    m_stream_name = stream_name;
    m_stream_name_isSet = true;
}

bool OAIDescribeEdgeConfigurationInput::is_stream_name_Set() const{
    return m_stream_name_isSet;
}

bool OAIDescribeEdgeConfigurationInput::is_stream_name_Valid() const{
    return m_stream_name_isValid;
}

QString OAIDescribeEdgeConfigurationInput::getStreamArn() const {
    return m_stream_arn;
}
void OAIDescribeEdgeConfigurationInput::setStreamArn(const QString &stream_arn) {
    m_stream_arn = stream_arn;
    m_stream_arn_isSet = true;
}

bool OAIDescribeEdgeConfigurationInput::is_stream_arn_Set() const{
    return m_stream_arn_isSet;
}

bool OAIDescribeEdgeConfigurationInput::is_stream_arn_Valid() const{
    return m_stream_arn_isValid;
}

bool OAIDescribeEdgeConfigurationInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stream_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeEdgeConfigurationInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
