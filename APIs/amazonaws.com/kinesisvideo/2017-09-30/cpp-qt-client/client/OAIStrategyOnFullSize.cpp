/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStrategyOnFullSize.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStrategyOnFullSize::OAIStrategyOnFullSize(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStrategyOnFullSize::OAIStrategyOnFullSize() {
    this->initializeModel();
}

OAIStrategyOnFullSize::~OAIStrategyOnFullSize() {}

void OAIStrategyOnFullSize::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStrategyOnFullSize::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStrategyOnFullSize::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DELETE_OLDEST_MEDIA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStrategyOnFullSize::DELETE_OLDEST_MEDIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DENY_NEW_MEDIA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStrategyOnFullSize::DENY_NEW_MEDIA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStrategyOnFullSize::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStrategyOnFullSize::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStrategyOnFullSize::DELETE_OLDEST_MEDIA:
            val = "DELETE_OLDEST_MEDIA";
            break;
        case eOAIStrategyOnFullSize::DENY_NEW_MEDIA:
            val = "DENY_NEW_MEDIA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStrategyOnFullSize::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStrategyOnFullSize::eOAIStrategyOnFullSize OAIStrategyOnFullSize::getValue() const {
    return m_value;
}

void OAIStrategyOnFullSize::setValue(const OAIStrategyOnFullSize::eOAIStrategyOnFullSize& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStrategyOnFullSize::isSet() const {
    
    return m_value_isSet;
}

bool OAIStrategyOnFullSize::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
