/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus() {
    this->initializeModel();
}

OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::~OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus() {}

void OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::initializeModel() {

    m_last_recorder_status_isSet = false;
    m_last_recorder_status_isValid = false;

    m_last_uploader_status_isSet = false;
    m_last_uploader_status_isValid = false;
}

void OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::fromJsonObject(QJsonObject json) {

    m_last_recorder_status_isValid = ::OpenAPI::fromJsonValue(m_last_recorder_status, json[QString("LastRecorderStatus")]);
    m_last_recorder_status_isSet = !json[QString("LastRecorderStatus")].isNull() && m_last_recorder_status_isValid;

    m_last_uploader_status_isValid = ::OpenAPI::fromJsonValue(m_last_uploader_status, json[QString("LastUploaderStatus")]);
    m_last_uploader_status_isSet = !json[QString("LastUploaderStatus")].isNull() && m_last_uploader_status_isValid;
}

QString OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_last_recorder_status.isSet()) {
        obj.insert(QString("LastRecorderStatus"), ::OpenAPI::toJsonValue(m_last_recorder_status));
    }
    if (m_last_uploader_status.isSet()) {
        obj.insert(QString("LastUploaderStatus"), ::OpenAPI::toJsonValue(m_last_uploader_status));
    }
    return obj;
}

OAIEdgeAgentStatus_LastRecorderStatus OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::getLastRecorderStatus() const {
    return m_last_recorder_status;
}
void OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::setLastRecorderStatus(const OAIEdgeAgentStatus_LastRecorderStatus &last_recorder_status) {
    m_last_recorder_status = last_recorder_status;
    m_last_recorder_status_isSet = true;
}

bool OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::is_last_recorder_status_Set() const{
    return m_last_recorder_status_isSet;
}

bool OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::is_last_recorder_status_Valid() const{
    return m_last_recorder_status_isValid;
}

OAIEdgeAgentStatus_LastUploaderStatus OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::getLastUploaderStatus() const {
    return m_last_uploader_status;
}
void OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::setLastUploaderStatus(const OAIEdgeAgentStatus_LastUploaderStatus &last_uploader_status) {
    m_last_uploader_status = last_uploader_status;
    m_last_uploader_status_isSet = true;
}

bool OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::is_last_uploader_status_Set() const{
    return m_last_uploader_status_isSet;
}

bool OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::is_last_uploader_status_Valid() const{
    return m_last_uploader_status_isValid;
}

bool OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_recorder_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_uploader_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeEdgeConfigurationOutput_EdgeAgentStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
