/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStreamInfo.h
 *
 * An object describing a Kinesis video stream.
 */

#ifndef OAIStreamInfo_H
#define OAIStreamInfo_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStreamInfo : public OAIObject {
public:
    OAIStreamInfo();
    OAIStreamInfo(QString json);
    ~OAIStreamInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    QString getStreamName() const;
    void setStreamName(const QString &stream_name);
    bool is_stream_name_Set() const;
    bool is_stream_name_Valid() const;

    QString getStreamArn() const;
    void setStreamArn(const QString &stream_arn);
    bool is_stream_arn_Set() const;
    bool is_stream_arn_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    qint32 getDataRetentionInHours() const;
    void setDataRetentionInHours(const qint32 &data_retention_in_hours);
    bool is_data_retention_in_hours_Set() const;
    bool is_data_retention_in_hours_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    QString m_stream_name;
    bool m_stream_name_isSet;
    bool m_stream_name_isValid;

    QString m_stream_arn;
    bool m_stream_arn_isSet;
    bool m_stream_arn_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    qint32 m_data_retention_in_hours;
    bool m_data_retention_in_hours_isSet;
    bool m_data_retention_in_hours_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStreamInfo)

#endif // OAIStreamInfo_H
