/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeSignalingChannelInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeSignalingChannelInput::OAIDescribeSignalingChannelInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeSignalingChannelInput::OAIDescribeSignalingChannelInput() {
    this->initializeModel();
}

OAIDescribeSignalingChannelInput::~OAIDescribeSignalingChannelInput() {}

void OAIDescribeSignalingChannelInput::initializeModel() {

    m_channel_name_isSet = false;
    m_channel_name_isValid = false;

    m_channel_arn_isSet = false;
    m_channel_arn_isValid = false;
}

void OAIDescribeSignalingChannelInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeSignalingChannelInput::fromJsonObject(QJsonObject json) {

    m_channel_name_isValid = ::OpenAPI::fromJsonValue(m_channel_name, json[QString("ChannelName")]);
    m_channel_name_isSet = !json[QString("ChannelName")].isNull() && m_channel_name_isValid;

    m_channel_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_arn, json[QString("ChannelARN")]);
    m_channel_arn_isSet = !json[QString("ChannelARN")].isNull() && m_channel_arn_isValid;
}

QString OAIDescribeSignalingChannelInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeSignalingChannelInput::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_name_isSet) {
        obj.insert(QString("ChannelName"), ::OpenAPI::toJsonValue(m_channel_name));
    }
    if (m_channel_arn_isSet) {
        obj.insert(QString("ChannelARN"), ::OpenAPI::toJsonValue(m_channel_arn));
    }
    return obj;
}

QString OAIDescribeSignalingChannelInput::getChannelName() const {
    return m_channel_name;
}
void OAIDescribeSignalingChannelInput::setChannelName(const QString &channel_name) {
    m_channel_name = channel_name;
    m_channel_name_isSet = true;
}

bool OAIDescribeSignalingChannelInput::is_channel_name_Set() const{
    return m_channel_name_isSet;
}

bool OAIDescribeSignalingChannelInput::is_channel_name_Valid() const{
    return m_channel_name_isValid;
}

QString OAIDescribeSignalingChannelInput::getChannelArn() const {
    return m_channel_arn;
}
void OAIDescribeSignalingChannelInput::setChannelArn(const QString &channel_arn) {
    m_channel_arn = channel_arn;
    m_channel_arn_isSet = true;
}

bool OAIDescribeSignalingChannelInput::is_channel_arn_Set() const{
    return m_channel_arn_isSet;
}

bool OAIDescribeSignalingChannelInput::is_channel_arn_Valid() const{
    return m_channel_arn_isValid;
}

bool OAIDescribeSignalingChannelInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeSignalingChannelInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
