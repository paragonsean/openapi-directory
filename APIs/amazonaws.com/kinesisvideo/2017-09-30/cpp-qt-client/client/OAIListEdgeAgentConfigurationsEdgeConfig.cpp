/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEdgeAgentConfigurationsEdgeConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEdgeAgentConfigurationsEdgeConfig::OAIListEdgeAgentConfigurationsEdgeConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEdgeAgentConfigurationsEdgeConfig::OAIListEdgeAgentConfigurationsEdgeConfig() {
    this->initializeModel();
}

OAIListEdgeAgentConfigurationsEdgeConfig::~OAIListEdgeAgentConfigurationsEdgeConfig() {}

void OAIListEdgeAgentConfigurationsEdgeConfig::initializeModel() {

    m_stream_name_isSet = false;
    m_stream_name_isValid = false;

    m_stream_arn_isSet = false;
    m_stream_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_updated_time_isSet = false;
    m_last_updated_time_isValid = false;

    m_sync_status_isSet = false;
    m_sync_status_isValid = false;

    m_failed_status_details_isSet = false;
    m_failed_status_details_isValid = false;

    m_edge_config_isSet = false;
    m_edge_config_isValid = false;
}

void OAIListEdgeAgentConfigurationsEdgeConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListEdgeAgentConfigurationsEdgeConfig::fromJsonObject(QJsonObject json) {

    m_stream_name_isValid = ::OpenAPI::fromJsonValue(m_stream_name, json[QString("StreamName")]);
    m_stream_name_isSet = !json[QString("StreamName")].isNull() && m_stream_name_isValid;

    m_stream_arn_isValid = ::OpenAPI::fromJsonValue(m_stream_arn, json[QString("StreamARN")]);
    m_stream_arn_isSet = !json[QString("StreamARN")].isNull() && m_stream_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_updated_time_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time, json[QString("LastUpdatedTime")]);
    m_last_updated_time_isSet = !json[QString("LastUpdatedTime")].isNull() && m_last_updated_time_isValid;

    m_sync_status_isValid = ::OpenAPI::fromJsonValue(m_sync_status, json[QString("SyncStatus")]);
    m_sync_status_isSet = !json[QString("SyncStatus")].isNull() && m_sync_status_isValid;

    m_failed_status_details_isValid = ::OpenAPI::fromJsonValue(m_failed_status_details, json[QString("FailedStatusDetails")]);
    m_failed_status_details_isSet = !json[QString("FailedStatusDetails")].isNull() && m_failed_status_details_isValid;

    m_edge_config_isValid = ::OpenAPI::fromJsonValue(m_edge_config, json[QString("EdgeConfig")]);
    m_edge_config_isSet = !json[QString("EdgeConfig")].isNull() && m_edge_config_isValid;
}

QString OAIListEdgeAgentConfigurationsEdgeConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListEdgeAgentConfigurationsEdgeConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_stream_name_isSet) {
        obj.insert(QString("StreamName"), ::OpenAPI::toJsonValue(m_stream_name));
    }
    if (m_stream_arn_isSet) {
        obj.insert(QString("StreamARN"), ::OpenAPI::toJsonValue(m_stream_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_updated_time_isSet) {
        obj.insert(QString("LastUpdatedTime"), ::OpenAPI::toJsonValue(m_last_updated_time));
    }
    if (m_sync_status.isSet()) {
        obj.insert(QString("SyncStatus"), ::OpenAPI::toJsonValue(m_sync_status));
    }
    if (m_failed_status_details_isSet) {
        obj.insert(QString("FailedStatusDetails"), ::OpenAPI::toJsonValue(m_failed_status_details));
    }
    if (m_edge_config.isSet()) {
        obj.insert(QString("EdgeConfig"), ::OpenAPI::toJsonValue(m_edge_config));
    }
    return obj;
}

QString OAIListEdgeAgentConfigurationsEdgeConfig::getStreamName() const {
    return m_stream_name;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setStreamName(const QString &stream_name) {
    m_stream_name = stream_name;
    m_stream_name_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_stream_name_Set() const{
    return m_stream_name_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_stream_name_Valid() const{
    return m_stream_name_isValid;
}

QString OAIListEdgeAgentConfigurationsEdgeConfig::getStreamArn() const {
    return m_stream_arn;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setStreamArn(const QString &stream_arn) {
    m_stream_arn = stream_arn;
    m_stream_arn_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_stream_arn_Set() const{
    return m_stream_arn_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_stream_arn_Valid() const{
    return m_stream_arn_isValid;
}

QDateTime OAIListEdgeAgentConfigurationsEdgeConfig::getCreationTime() const {
    return m_creation_time;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIListEdgeAgentConfigurationsEdgeConfig::getLastUpdatedTime() const {
    return m_last_updated_time;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setLastUpdatedTime(const QDateTime &last_updated_time) {
    m_last_updated_time = last_updated_time;
    m_last_updated_time_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_last_updated_time_Set() const{
    return m_last_updated_time_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_last_updated_time_Valid() const{
    return m_last_updated_time_isValid;
}

OAISyncStatus OAIListEdgeAgentConfigurationsEdgeConfig::getSyncStatus() const {
    return m_sync_status;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setSyncStatus(const OAISyncStatus &sync_status) {
    m_sync_status = sync_status;
    m_sync_status_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_sync_status_Set() const{
    return m_sync_status_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_sync_status_Valid() const{
    return m_sync_status_isValid;
}

QString OAIListEdgeAgentConfigurationsEdgeConfig::getFailedStatusDetails() const {
    return m_failed_status_details;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setFailedStatusDetails(const QString &failed_status_details) {
    m_failed_status_details = failed_status_details;
    m_failed_status_details_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_failed_status_details_Set() const{
    return m_failed_status_details_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_failed_status_details_Valid() const{
    return m_failed_status_details_isValid;
}

OAIEdgeConfig OAIListEdgeAgentConfigurationsEdgeConfig::getEdgeConfig() const {
    return m_edge_config;
}
void OAIListEdgeAgentConfigurationsEdgeConfig::setEdgeConfig(const OAIEdgeConfig &edge_config) {
    m_edge_config = edge_config;
    m_edge_config_isSet = true;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_edge_config_Set() const{
    return m_edge_config_isSet;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::is_edge_config_Valid() const{
    return m_edge_config_isValid;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stream_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sync_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failed_status_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edge_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListEdgeAgentConfigurationsEdgeConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
