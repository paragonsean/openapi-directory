/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateSignalingChannelInput.h
 *
 * 
 */

#ifndef OAICreateSignalingChannelInput_H
#define OAICreateSignalingChannelInput_H

#include <QJsonObject>

#include "OAIChannelType.h"
#include "OAICreateSignalingChannelInput_SingleMasterConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateSignalingChannelInput_SingleMasterConfiguration;

class OAICreateSignalingChannelInput : public OAIObject {
public:
    OAICreateSignalingChannelInput();
    OAICreateSignalingChannelInput(QString json);
    ~OAICreateSignalingChannelInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChannelName() const;
    void setChannelName(const QString &channel_name);
    bool is_channel_name_Set() const;
    bool is_channel_name_Valid() const;

    OAIChannelType getChannelType() const;
    void setChannelType(const OAIChannelType &channel_type);
    bool is_channel_type_Set() const;
    bool is_channel_type_Valid() const;

    OAICreateSignalingChannelInput_SingleMasterConfiguration getSingleMasterConfiguration() const;
    void setSingleMasterConfiguration(const OAICreateSignalingChannelInput_SingleMasterConfiguration &single_master_configuration);
    bool is_single_master_configuration_Set() const;
    bool is_single_master_configuration_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_channel_name;
    bool m_channel_name_isSet;
    bool m_channel_name_isValid;

    OAIChannelType m_channel_type;
    bool m_channel_type_isSet;
    bool m_channel_type_isValid;

    OAICreateSignalingChannelInput_SingleMasterConfiguration m_single_master_configuration;
    bool m_single_master_configuration_isSet;
    bool m_single_master_configuration_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateSignalingChannelInput)

#endif // OAICreateSignalingChannelInput_H
