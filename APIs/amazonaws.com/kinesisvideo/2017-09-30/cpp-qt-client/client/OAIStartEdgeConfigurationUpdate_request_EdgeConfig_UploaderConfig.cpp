/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig() {
    this->initializeModel();
}

OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::~OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig() {}

void OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::initializeModel() {

    m_schedule_config_isSet = false;
    m_schedule_config_isValid = false;
}

void OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::fromJsonObject(QJsonObject json) {

    m_schedule_config_isValid = ::OpenAPI::fromJsonValue(m_schedule_config, json[QString("ScheduleConfig")]);
    m_schedule_config_isSet = !json[QString("ScheduleConfig")].isNull() && m_schedule_config_isValid;
}

QString OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_schedule_config.isSet()) {
        obj.insert(QString("ScheduleConfig"), ::OpenAPI::toJsonValue(m_schedule_config));
    }
    return obj;
}

OAIUploaderConfig_ScheduleConfig OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::getScheduleConfig() const {
    return m_schedule_config;
}
void OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::setScheduleConfig(const OAIUploaderConfig_ScheduleConfig &schedule_config) {
    m_schedule_config = schedule_config;
    m_schedule_config_isSet = true;
}

bool OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::is_schedule_config_Set() const{
    return m_schedule_config_isSet;
}

bool OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::is_schedule_config_Valid() const{
    return m_schedule_config_isValid;
}

bool OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schedule_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schedule_config_isValid && true;
}

} // namespace OpenAPI
