/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelNameCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelNameCondition::OAIChannelNameCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelNameCondition::OAIChannelNameCondition() {
    this->initializeModel();
}

OAIChannelNameCondition::~OAIChannelNameCondition() {}

void OAIChannelNameCondition::initializeModel() {

    m_comparison_operator_isSet = false;
    m_comparison_operator_isValid = false;

    m_comparison_value_isSet = false;
    m_comparison_value_isValid = false;
}

void OAIChannelNameCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelNameCondition::fromJsonObject(QJsonObject json) {

    m_comparison_operator_isValid = ::OpenAPI::fromJsonValue(m_comparison_operator, json[QString("ComparisonOperator")]);
    m_comparison_operator_isSet = !json[QString("ComparisonOperator")].isNull() && m_comparison_operator_isValid;

    m_comparison_value_isValid = ::OpenAPI::fromJsonValue(m_comparison_value, json[QString("ComparisonValue")]);
    m_comparison_value_isSet = !json[QString("ComparisonValue")].isNull() && m_comparison_value_isValid;
}

QString OAIChannelNameCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelNameCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_comparison_operator.isSet()) {
        obj.insert(QString("ComparisonOperator"), ::OpenAPI::toJsonValue(m_comparison_operator));
    }
    if (m_comparison_value_isSet) {
        obj.insert(QString("ComparisonValue"), ::OpenAPI::toJsonValue(m_comparison_value));
    }
    return obj;
}

OAIComparisonOperator OAIChannelNameCondition::getComparisonOperator() const {
    return m_comparison_operator;
}
void OAIChannelNameCondition::setComparisonOperator(const OAIComparisonOperator &comparison_operator) {
    m_comparison_operator = comparison_operator;
    m_comparison_operator_isSet = true;
}

bool OAIChannelNameCondition::is_comparison_operator_Set() const{
    return m_comparison_operator_isSet;
}

bool OAIChannelNameCondition::is_comparison_operator_Valid() const{
    return m_comparison_operator_isValid;
}

QString OAIChannelNameCondition::getComparisonValue() const {
    return m_comparison_value;
}
void OAIChannelNameCondition::setComparisonValue(const QString &comparison_value) {
    m_comparison_value = comparison_value;
    m_comparison_value_isSet = true;
}

bool OAIChannelNameCondition::is_comparison_value_Set() const{
    return m_comparison_value_isSet;
}

bool OAIChannelNameCondition::is_comparison_value_Valid() const{
    return m_comparison_value_isValid;
}

bool OAIChannelNameCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comparison_operator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comparison_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelNameCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
