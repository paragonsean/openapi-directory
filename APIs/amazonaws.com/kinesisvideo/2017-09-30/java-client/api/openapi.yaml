openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <p/>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Kinesis Video Streams
  version: 2017-09-30
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: kinesisvideo
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesisvideo-2017-09-30.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/kinesisvideo/
servers:
- description: The Kinesis Video multi-region endpoint
  url: "http://kinesisvideo.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Kinesis Video multi-region endpoint
  url: "https://kinesisvideo.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
  url: "http://kinesisvideo.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
  url: "https://kinesisvideo.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /createSignalingChannel:
    post:
      description: <p>Creates a signaling channel. </p> <p> <code>CreateSignalingChannel</code>
        is an asynchronous operation.</p>
      operationId: CreateSignalingChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSignalingChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSignalingChannelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountChannelLimitExceededException'
          description: AccountChannelLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
          description: TagsPerResourceExceededLimitException
      x-content-type: application/json
      x-accepts:
      - application/json
  /createStream:
    post:
      description: "<p>Creates a new Kinesis video stream. </p> <p>When you create\
        \ a new stream, Kinesis Video Streams assigns it a version number. When you\
        \ change the stream's metadata, Kinesis Video Streams updates the version.\
        \ </p> <p> <code>CreateStream</code> is an asynchronous operation.</p> <p>For\
        \ information about how the service works, see <a href=\"https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html\"\
        >How it Works</a>. </p> <p>You must have permissions for the <code>KinesisVideo:CreateStream</code>\
        \ action.</p>"
      operationId: CreateStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStreamLimitExceededException'
          description: AccountStreamLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStreamLimitExceededException'
          description: DeviceStreamLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDeviceException'
          description: InvalidDeviceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
          description: TagsPerResourceExceededLimitException
      x-content-type: application/json
      x-accepts:
      - application/json
  /deleteEdgeConfiguration:
    post:
      description: "<p>An asynchronous API that deletes a streamâ€™s existing edge configuration,\
        \ as well as the corresponding media from the Edge Agent.</p> <p>When you\
        \ invoke this API, the sync status is set to <code>DELETING</code>. A deletion\
        \ process starts, in which active edge jobs are stopped and all media is deleted\
        \ from the edge device. The time to delete varies, depending on the total\
        \ amount of stored media. If the deletion process fails, the sync status changes\
        \ to <code>DELETE_FAILED</code>. You will need to re-try the deletion.</p>\
        \ <p>When the deletion process has completed successfully, the edge configuration\
        \ is no longer accessible.</p>"
      operationId: DeleteEdgeConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEdgeConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEdgeConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamEdgeConfigurationNotFoundException'
          description: StreamEdgeConfigurationNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /deleteSignalingChannel:
    post:
      description: "Deletes a specified signaling channel. <code>DeleteSignalingChannel</code>\
        \ is an asynchronous operation. If you don't specify the channel's current\
        \ version, the most recent version is deleted."
      operationId: DeleteSignalingChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSignalingChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSignalingChannelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /deleteStream:
    post:
      description: "<p>Deletes a Kinesis video stream and the data contained in the\
        \ stream. </p> <p>This method marks the stream for deletion, and makes the\
        \ data in the stream inaccessible immediately.</p> <p> </p> <p> To ensure\
        \ that you have the latest version of the stream before deleting it, you can\
        \ specify the stream version. Kinesis Video Streams assigns a version to each\
        \ stream. When you update a stream, Kinesis Video Streams assigns a new version\
        \ number. To get the latest stream version, use the <code>DescribeStream</code>\
        \ API. </p> <p>This operation requires permission for the <code>KinesisVideo:DeleteStream</code>\
        \ action.</p>"
      operationId: DeleteStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeEdgeConfiguration:
    post:
      description: Describes a streamâ€™s edge configuration that was set using the
        <code>StartEdgeConfigurationUpdate</code> API and the latest status of the
        edge agent's recorder and uploader jobs. Use this API to get the status of
        the configuration to determine if the configuration is in sync with the Edge
        Agent. Use this API to evaluate the health of the Edge Agent.
      operationId: DescribeEdgeConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEdgeConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEdgeConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamEdgeConfigurationNotFoundException'
          description: StreamEdgeConfigurationNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeImageGenerationConfiguration:
    post:
      description: Gets the <code>ImageGenerationConfiguration</code> for a given
        Kinesis video stream.
      operationId: DescribeImageGenerationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImageGenerationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImageGenerationConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeMappedResourceConfiguration:
    post:
      description: Returns the most current information about the stream. The <code>streamName</code>
        or <code>streamARN</code> should be provided in the input.
      operationId: DescribeMappedResourceConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMappedResourceConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMappedResourceConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeMediaStorageConfiguration:
    post:
      description: Returns the most current information about the channel. Specify
        the <code>ChannelName</code> or <code>ChannelARN</code> in the input.
      operationId: DescribeMediaStorageConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMediaStorageConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMediaStorageConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeNotificationConfiguration:
    post:
      description: Gets the <code>NotificationConfiguration</code> for a given Kinesis
        video stream.
      operationId: DescribeNotificationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotificationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotificationConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeSignalingChannel:
    post:
      description: Returns the most current information about the signaling channel.
        You must specify either the name or the Amazon Resource Name (ARN) of the
        channel that you want to describe.
      operationId: DescribeSignalingChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSignalingChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSignalingChannelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /describeStream:
    post:
      description: 'Returns the most current information about the specified stream.
        You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. '
      operationId: DescribeStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /getDataEndpoint:
    post:
      description: "<p>Gets an endpoint for a specified stream for either reading\
        \ or writing. Use this endpoint in your application to read from the specified\
        \ stream (using the <code>GetMedia</code> or <code>GetMediaForFragmentList</code>\
        \ operations) or write to it (using the <code>PutMedia</code> operation).\
        \ </p> <note> <p>The returned endpoint does not have the API name appended.\
        \ The client needs to add the API name to the returned endpoint.</p> </note>\
        \ <p>In the request, specify the stream either by <code>StreamName</code>\
        \ or <code>StreamARN</code>.</p>"
      operationId: GetDataEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataEndpoint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataEndpointOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /getSignalingChannelEndpoint:
    post:
      description: "<p>Provides an endpoint for the specified signaling channel to\
        \ send and receive messages. This API uses the <code>SingleMasterChannelEndpointConfiguration</code>\
        \ input parameter, which consists of the <code>Protocols</code> and <code>Role</code>\
        \ properties.</p> <p> <code>Protocols</code> is used to determine the communication\
        \ mechanism. For example, if you specify <code>WSS</code> as the protocol,\
        \ this API produces a secure websocket endpoint. If you specify <code>HTTPS</code>\
        \ as the protocol, this API generates an HTTPS endpoint. </p> <p> <code>Role</code>\
        \ determines the messaging permissions. A <code>MASTER</code> role results\
        \ in this API generating an endpoint that a client can use to communicate\
        \ with any of the viewers on the channel. A <code>VIEWER</code> role results\
        \ in this API generating an endpoint that a client can use to communicate\
        \ only with a <code>MASTER</code>. </p>"
      operationId: GetSignalingChannelEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSignalingChannelEndpoint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSignalingChannelEndpointOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /listEdgeAgentConfigurations:
    post:
      description: "<p>Returns an array of edge configurations associated with the\
        \ specified Edge Agent.</p> <p>In the request, you must specify the Edge Agent\
        \ <code>HubDeviceArn</code>.</p>"
      operationId: ListEdgeAgentConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEdgeAgentConfigurations_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgeAgentConfigurationsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
      x-content-type: application/json
      x-accepts:
      - application/json
  /listSignalingChannels:
    post:
      description: "Returns an array of <code>ChannelInfo</code> objects. Each object\
        \ describes a signaling channel. To retrieve only those channels that satisfy\
        \ a specific condition, you can specify a <code>ChannelNameCondition</code>."
      operationId: ListSignalingChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSignalingChannels_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSignalingChannelsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /listStreams:
    post:
      description: "Returns an array of <code>StreamInfo</code> objects. Each object\
        \ describes a stream. To retrieve only streams that satisfy a specific condition,\
        \ you can specify a <code>StreamNameCondition</code>. "
      operationId: ListStreams
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStreams_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListTagsForResource:
    post:
      description: Returns a list of tags associated with the specified signaling
        channel.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /listTagsForStream:
    post:
      description: "<p>Returns a list of tags associated with the specified stream.</p>\
        \ <p>In the request, you must specify either the <code>StreamName</code> or\
        \ the <code>StreamARN</code>. </p>"
      operationId: ListTagsForStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceFormatException'
          description: InvalidResourceFormatException
      x-content-type: application/json
      x-accepts:
      - application/json
  /startEdgeConfigurationUpdate:
    post:
      description: "<p>An asynchronous API that updates a streamâ€™s existing edge configuration.\
        \ The Kinesis Video Stream will sync the streamâ€™s edge configuration with\
        \ the Edge Agent IoT Greengrass component that runs on an IoT Hub Device,\
        \ setup at your premise. The time to sync can vary and depends on the connectivity\
        \ of the Hub Device. The <code>SyncStatus</code> will be updated as the edge\
        \ configuration is acknowledged, and synced with the Edge Agent. </p> <p>If\
        \ this API is invoked for the first time, a new edge configuration will be\
        \ created for the stream, and the sync status will be set to <code>SYNCING</code>.\
        \ You will have to wait for the sync status to reach a terminal state such\
        \ as: <code>IN_SYNC</code>, or <code>SYNC_FAILED</code>, before using this\
        \ API again. If you invoke this API during the syncing process, a <code>ResourceInUseException</code>\
        \ will be thrown. The connectivity of the streamâ€™s edge configuration and\
        \ the Edge Agent will be retried for 15 minutes. After 15 minutes, the status\
        \ will transition into the <code>SYNC_FAILED</code> state.</p>"
      operationId: StartEdgeConfigurationUpdate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartEdgeConfigurationUpdateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoDataRetentionException'
          description: NoDataRetentionException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /TagResource:
    post:
      description: "Adds one or more tags to a signaling channel. A <i>tag</i> is\
        \ a key-value pair (the value is optional) that you can define and assign\
        \ to Amazon Web Services resources. If you specify a tag that already exists,\
        \ the tag value is replaced with the value that you specify in the request.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\"\
        >Using Cost Allocation Tags</a> in the <i>Billing and Cost Management and\
        \ Cost Management User Guide</i>."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
          description: TagsPerResourceExceededLimitException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tagStream:
    post:
      description: "<p>Adds one or more tags to a stream. A <i>tag</i> is a key-value\
        \ pair (the value is optional) that you can define and assign to Amazon Web\
        \ Services resources. If you specify a tag that already exists, the tag value\
        \ is replaced with the value that you specify in the request. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\"\
        >Using Cost Allocation Tags</a> in the <i>Billing and Cost Management and\
        \ Cost Management User Guide</i>. </p> <p>You must provide either the <code>StreamName</code>\
        \ or the <code>StreamARN</code>.</p> <p>This operation requires permission\
        \ for the <code>KinesisVideo:TagStream</code> action.</p> <p>A Kinesis video\
        \ stream can support up to 50 tags.</p>"
      operationId: TagStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceFormatException'
          description: InvalidResourceFormatException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
          description: TagsPerResourceExceededLimitException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UntagResource:
    post:
      description: "Removes one or more tags from a signaling channel. In the request,\
        \ specify only a tag key or keys; don't specify the value. If you specify\
        \ a tag key that does not exist, it's ignored."
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /untagStream:
    post:
      description: "<p>Removes one or more tags from a stream. In the request, specify\
        \ only a tag key or keys; don't specify the value. If you specify a tag key\
        \ that does not exist, it's ignored.</p> <p>In the request, you must provide\
        \ the <code>StreamName</code> or <code>StreamARN</code>.</p>"
      operationId: UntagStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceFormatException'
          description: InvalidResourceFormatException
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateDataRetention:
    post:
      description: "<p> Increases or decreases the stream's data retention period\
        \ by the value that you specify. To indicate whether you want to increase\
        \ or decrease the data retention period, specify the <code>Operation</code>\
        \ parameter in the request body. In the request, you must specify either the\
        \ <code>StreamName</code> or the <code>StreamARN</code>. </p> <note> <p>The\
        \ retention period that you specify replaces the current value.</p> </note>\
        \ <p>This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code>\
        \ action.</p> <p>Changing the data retention period affects the data in the\
        \ stream as follows:</p> <ul> <li> <p>If the data retention period is increased,\
        \ existing data is retained for the new retention period. For example, if\
        \ the data retention period is increased from one hour to seven hours, all\
        \ existing data is retained for seven hours.</p> </li> <li> <p>If the data\
        \ retention period is decreased, existing data is retained for the new retention\
        \ period. For example, if the data retention period is decreased from seven\
        \ hours to one hour, all existing data is retained for one hour, and any data\
        \ older than one hour is deleted immediately.</p> </li> </ul>"
      operationId: UpdateDataRetention
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataRetention_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataRetentionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateImageGenerationConfiguration:
    post:
      description: Updates the <code>StreamInfo</code> and <code>ImageProcessingConfiguration</code>
        fields.
      operationId: UpdateImageGenerationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageGenerationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImageGenerationConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoDataRetentionException'
          description: NoDataRetentionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateMediaStorageConfiguration:
    post:
      description: "<p>Associates a <code>SignalingChannel</code> to a stream to store\
        \ the media. There are two signaling modes that can specified :</p> <ul> <li>\
        \ <p>If the <code>StorageStatus</code> is disabled, no data will be stored,\
        \ and the <code>StreamARN</code> parameter will not be needed. </p> </li>\
        \ <li> <p>If the <code>StorageStatus</code> is enabled, the data will be stored\
        \ in the <code>StreamARN</code> provided. </p> </li> </ul> <important> <p>If\
        \ <code>StorageStatus</code> is enabled, direct peer-to-peer (master-viewer)\
        \ connections no longer occur. Peers connect directly to the storage session.\
        \ You must call the <code>JoinStorageSession</code> API to trigger an SDP\
        \ offer send and establish a connection between a peer and the storage session.\
        \ </p> </important>"
      operationId: UpdateMediaStorageConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaStorageConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMediaStorageConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoDataRetentionException'
          description: NoDataRetentionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateNotificationConfiguration:
    post:
      description: Updates the notification information for a stream.
      operationId: UpdateNotificationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotificationConfigurationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoDataRetentionException'
          description: NoDataRetentionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateSignalingChannel:
    post:
      description: "<p>Updates the existing signaling channel. This is an asynchronous\
        \ operation and takes time to complete. </p> <p>If the <code>MessageTtlSeconds</code>\
        \ value is updated (either increased or reduced), it only applies to new messages\
        \ sent via this channel after it's been updated. Existing messages are still\
        \ expired as per the previous <code>MessageTtlSeconds</code> value.</p>"
      operationId: UpdateSignalingChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSignalingChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSignalingChannelOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
      x-content-type: application/json
      x-accepts:
      - application/json
  /updateStream:
    post:
      description: "<p>Updates stream metadata, such as the device name and media\
        \ type.</p> <p>You must provide the stream name or the Amazon Resource Name\
        \ (ARN) of the stream.</p> <p>To make sure that you have the latest version\
        \ of the stream before updating it, you can specify the stream version. Kinesis\
        \ Video Streams assigns a version to each stream. When you update a stream,\
        \ Kinesis Video Streams assigns a new version number. To get the latest stream\
        \ version, use the <code>DescribeStream</code> API. </p> <p> <code>UpdateStream</code>\
        \ is an asynchronous operation, and takes time to complete.</p>"
      operationId: UpdateStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLimitExceededException'
          description: ClientLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
          description: InvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: NotAuthorizedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateSignalingChannelOutput:
      example:
        ChannelARN: ""
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the created channel.
      type: object
    MessageTtlSeconds:
      maximum: 120
      minimum: 5
      type: integer
    Tag:
      description: A key and value pair that is associated with the specified signaling
        channel.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key of the tag that is associated with the specified
              signaling channel.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag that is associated with the specified
              signaling channel.
      required:
      - Key
      - Value
      type: object
    InvalidArgumentException: {}
    ClientLimitExceededException: {}
    AccountChannelLimitExceededException: {}
    ResourceInUseException: {}
    AccessDeniedException: {}
    TagsPerResourceExceededLimitException: {}
    CreateStreamOutput:
      example:
        StreamARN: ""
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*"
      type: string
    AccountStreamLimitExceededException: {}
    DeviceStreamLimitExceededException: {}
    InvalidDeviceException: {}
    DeleteEdgeConfigurationOutput:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    StreamEdgeConfigurationNotFoundException: {}
    DeleteSignalingChannelOutput:
      properties: {}
      type: object
    VersionMismatchException: {}
    DeleteStreamOutput:
      properties: {}
      type: object
    NotAuthorizedException: {}
    DescribeEdgeConfigurationOutput:
      example:
        EdgeAgentStatus:
          LastRecorderStatus:
            LastCollectedTime: ""
            RecorderStatus: ""
            LastUpdatedTime: ""
            JobStatusDetails: ""
          LastUploaderStatus:
            UploaderStatus: ""
            LastCollectedTime: ""
            LastUpdatedTime: ""
            JobStatusDetails: ""
        StreamName: ""
        EdgeConfig:
          UploaderConfig:
            ScheduleConfig:
              DurationInSeconds: ""
              ScheduleExpression: ""
          DeletionConfig:
            LocalSizeConfig:
              MaxLocalMediaSizeInMB: ""
              StrategyOnFullSize: ""
            EdgeRetentionInHours: ""
            DeleteAfterUpload: ""
          HubDeviceArn: ""
          RecorderConfig:
            MediaSourceConfig:
              MediaUriSecretArn: ""
              MediaUriType: ""
            ScheduleConfig:
              DurationInSeconds: ""
              ScheduleExpression: ""
        CreationTime: ""
        SyncStatus: ""
        LastUpdatedTime: ""
        StreamARN: ""
        FailedStatusDetails: ""
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream from which the edge configuration
              was updated.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which a streamâ€™s edge configuration was
              first created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which a streamâ€™s edge configuration was
              last updated.
        SyncStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          - description: The latest status of the edge configuration update.
        FailedStatusDetails:
          allOf:
          - $ref: '#/components/schemas/FailedStatusDetails'
          - description: A description of the generated failure status.
        EdgeConfig:
          $ref: '#/components/schemas/DescribeEdgeConfigurationOutput_EdgeConfig'
        EdgeAgentStatus:
          $ref: '#/components/schemas/DescribeEdgeConfigurationOutput_EdgeAgentStatus'
      type: object
    DescribeImageGenerationConfigurationOutput:
      example:
        ImageGenerationConfiguration:
          Status: ""
          DestinationConfig:
            DestinationRegion: ""
            Uri: ""
          Format: ""
          FormatConfig: ""
          WidthPixels: ""
          SamplingInterval: ""
          HeightPixels: ""
          ImageSelectorType: ""
      properties:
        ImageGenerationConfiguration:
          $ref: '#/components/schemas/DescribeImageGenerationConfigurationOutput_ImageGenerationConfiguration'
      type: object
    DescribeMappedResourceConfigurationOutput:
      example:
        NextToken: ""
        MappedResourceConfigurationList: ""
      properties:
        MappedResourceConfigurationList:
          allOf:
          - $ref: '#/components/schemas/MappedResourceConfigurationList'
          - description: "A structure that encapsulates, or contains, the media storage\
              \ configuration properties."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token that was used in the <code>NextToken</code>request
              to fetch the next set of results. '
      type: object
    DescribeMediaStorageConfigurationOutput:
      example:
        MediaStorageConfiguration:
          Status: ""
          StreamARN: ""
      properties:
        MediaStorageConfiguration:
          $ref: '#/components/schemas/DescribeMediaStorageConfigurationOutput_MediaStorageConfiguration'
      type: object
    DescribeNotificationConfigurationOutput:
      example:
        NotificationConfiguration:
          Status: ""
          DestinationConfig:
            Uri: ""
      properties:
        NotificationConfiguration:
          $ref: '#/components/schemas/DescribeNotificationConfigurationOutput_NotificationConfiguration'
      type: object
    DescribeSignalingChannelOutput:
      example:
        ChannelInfo:
          ChannelARN: ""
          ChannelName: ""
          Version: ""
          CreationTime: ""
          ChannelStatus: ""
          SingleMasterConfiguration:
            MessageTtlSeconds: ""
          ChannelType: ""
      properties:
        ChannelInfo:
          $ref: '#/components/schemas/DescribeSignalingChannelOutput_ChannelInfo'
      type: object
    DescribeStreamOutput:
      example:
        StreamInfo:
          Status: ""
          StreamName: ""
          KmsKeyId: ""
          Version: ""
          CreationTime: ""
          MediaType: ""
          StreamARN: ""
          DataRetentionInHours: ""
          DeviceName: ""
      properties:
        StreamInfo:
          $ref: '#/components/schemas/DescribeStreamOutput_StreamInfo'
      type: object
    GetDataEndpointOutput:
      example:
        DataEndpoint: ""
      properties:
        DataEndpoint:
          allOf:
          - $ref: '#/components/schemas/DataEndpoint'
          - description: "The endpoint value. To read data from the stream or to write\
              \ data to it, specify this endpoint in your application."
      type: object
    GetSignalingChannelEndpointOutput:
      example:
        ResourceEndpointList: ""
      properties:
        ResourceEndpointList:
          allOf:
          - $ref: '#/components/schemas/ResourceEndpointList'
          - description: A list of endpoints for the specified signaling channel.
      type: object
    ListOfProtocols:
      items:
        $ref: '#/components/schemas/ChannelProtocol'
      maxItems: 5
      minItems: 1
      type: array
    ChannelRole:
      enum:
      - MASTER
      - VIEWER
      type: string
    ListEdgeAgentConfigurationsOutput:
      example:
        NextToken: ""
        EdgeConfigs: ""
      properties:
        EdgeConfigs:
          allOf:
          - $ref: '#/components/schemas/ListEdgeAgentConfigurationsEdgeConfigList'
          - description: A description of a single stream's edge configuration.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, the call returns this element\
              \ with a given token. To get the next batch of edge configurations,\
              \ use this token in your next request."
      type: object
    ListSignalingChannelsOutput:
      example:
        NextToken: ""
        ChannelInfoList: ""
      properties:
        ChannelInfoList:
          allOf:
          - $ref: '#/components/schemas/ChannelInfoList'
          - description: An array of <code>ChannelInfo</code> objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, the call returns this element\
              \ with a token. To get the next batch of streams, use this token in\
              \ your next request."
      type: object
    ComparisonOperator:
      enum:
      - BEGINS_WITH
      type: string
    ChannelName:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9_.-]+"
      type: string
    ListStreamsOutput:
      example:
        NextToken: ""
        StreamInfoList: ""
      properties:
        StreamInfoList:
          allOf:
          - $ref: '#/components/schemas/StreamInfoList'
          - description: An array of <code>StreamInfo</code> objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the response is truncated, the call returns this element\
              \ with a token. To get the next batch of streams, use this token in\
              \ your next request. "
      type: object
    StreamName:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9_.-]+"
      type: string
    ListTagsForResourceOutput:
      example:
        NextToken: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter and the result of a <code>ListTagsForResource</code>\
              \ call is truncated, the response includes a token that you can use\
              \ in the next request to fetch the next set of tags. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: A map of tag keys and values associated with the specified
              signaling channel.
      type: object
    ListTagsForStreamOutput:
      example:
        NextToken: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter and the result of a <code>ListTags</code>\
              \ call is truncated, the response includes a token that you can use\
              \ in the next request to fetch the next set of tags."
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: A map of tag keys and values associated with the specified
              stream.
      type: object
    InvalidResourceFormatException: {}
    StartEdgeConfigurationUpdateOutput:
      example:
        StreamName: ""
        EdgeConfig:
          UploaderConfig:
            ScheduleConfig:
              DurationInSeconds: ""
              ScheduleExpression: ""
          DeletionConfig:
            LocalSizeConfig:
              MaxLocalMediaSizeInMB: ""
              StrategyOnFullSize: ""
            EdgeRetentionInHours: ""
            DeleteAfterUpload: ""
          HubDeviceArn: ""
          RecorderConfig:
            MediaSourceConfig:
              MediaUriSecretArn: ""
              MediaUriType: ""
            ScheduleConfig:
              DurationInSeconds: ""
              ScheduleExpression: ""
        CreationTime: ""
        SyncStatus: ""
        LastUpdatedTime: ""
        StreamARN: ""
        FailedStatusDetails: ""
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream from which the edge configuration
              was updated.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which a streamâ€™s edge configuration was
              first created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which a streamâ€™s edge configuration was
              last updated.
        SyncStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          - description: " The current sync status of the stream's edge configuration.\
              \ When you invoke this API, the sync status will be set to the <code>SYNCING</code>\
              \ state. Use the <code>DescribeEdgeConfiguration</code> API to get the\
              \ latest status of the edge configuration."
        FailedStatusDetails:
          allOf:
          - $ref: '#/components/schemas/FailedStatusDetails'
          - description: A description of the generated failure status.
        EdgeConfig:
          $ref: '#/components/schemas/DescribeEdgeConfigurationOutput_EdgeConfig'
      type: object
    HubDeviceArn:
      maxLength: 1024
      minLength: 1
      pattern: "arn:[a-z\\d-]+:iot:[a-z0-9-]+:[0-9]+:thing/[a-zA-Z0-9_.-]+"
      type: string
    RecorderConfig:
      description: 'The recorder configuration consists of the local <code>MediaSourceConfig</code>
        details that are used as credentials to accesss the local media files streamed
        on the camera. '
      properties:
        MediaSourceConfig:
          $ref: '#/components/schemas/RecorderConfig_MediaSourceConfig'
        ScheduleConfig:
          $ref: '#/components/schemas/RecorderConfig_ScheduleConfig'
      required:
      - MediaSourceConfig
      type: object
    UploaderConfig:
      description: "The configuration that consists of the <code>ScheduleExpression</code>\
        \ and the <code>DurationInMinutes</code> details that specify the scheduling\
        \ to record from a camera, or local media file, onto the Edge Agent. If the\
        \ <code>ScheduleConfig</code> is not provided in the <code>UploaderConfig</code>,\
        \ then the Edge Agent will upload at regular intervals (every 1 hour). "
      properties:
        ScheduleConfig:
          $ref: '#/components/schemas/UploaderConfig_ScheduleConfig'
      required:
      - ScheduleConfig
      type: object
    DeletionConfig:
      description: The configuration details required to delete the connection of
        the stream from the Edge Agent.
      properties:
        EdgeRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/EdgeRetentionInHours'
          - description: "The number of hours that you want to retain the data in\
              \ the stream on the Edge Agent. The default value of the retention time\
              \ is 720 hours, which translates to 30 days."
        LocalSizeConfig:
          $ref: '#/components/schemas/DeletionConfig_LocalSizeConfig'
        DeleteAfterUpload:
          allOf:
          - $ref: '#/components/schemas/DeleteAfterUpload'
          - description: "<p>The <code>boolean</code> value used to indicate whether\
              \ or not you want to mark the media for deletion, once it has been uploaded\
              \ to the Kinesis Video Stream cloud. The media files can be deleted\
              \ if any of the deletion configuration values are set to <code>true</code>,\
              \ such as when the limit for the <code>EdgeRetentionInHours</code>,\
              \ or the <code>MaxLocalMediaSizeInMB</code>, has been reached. </p>\
              \ <p>Since the default value is set to <code>true</code>, configure\
              \ the uploader schedule such that the media files are not being deleted\
              \ before they are initially uploaded to the Amazon Web Services cloud.</p>"
      type: object
    NoDataRetentionException: {}
    TagResourceOutput:
      properties: {}
      type: object
    TagStreamOutput:
      properties: {}
      type: object
    UntagResourceOutput:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    UntagStreamOutput:
      properties: {}
      type: object
    UpdateDataRetentionOutput:
      properties: {}
      type: object
    UpdateImageGenerationConfigurationOutput:
      properties: {}
      type: object
    ConfigurationStatus:
      enum:
      - ENABLED
      - DISABLED
      type: string
    ImageSelectorType:
      enum:
      - SERVER_TIMESTAMP
      - PRODUCER_TIMESTAMP
      type: string
    ImageGenerationDestinationConfig:
      description: The structure that contains the information required to deliver
        images to a customer.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/DestinationUri'
          - description: The Uniform Resource Identifier (URI) that identifies where
              the images will be delivered.
        DestinationRegion:
          allOf:
          - $ref: '#/components/schemas/DestinationRegion'
          - description: The Amazon Web Services Region of the S3 bucket where images
              will be delivered. This <code>DestinationRegion</code> must match the
              Region where the stream is located.
      required:
      - DestinationRegion
      - Uri
      type: object
    SamplingInterval:
      type: integer
    Format:
      enum:
      - JPEG
      - PNG
      type: string
    FormatConfig:
      additionalProperties:
        $ref: '#/components/schemas/FormatConfigValue'
      maxProperties: 1
      minProperties: 1
      type: object
    WidthPixels:
      maximum: 3840
      minimum: 1
      type: integer
    HeightPixels:
      maximum: 2160
      minimum: 1
      type: integer
    UpdateMediaStorageConfigurationOutput:
      properties: {}
      type: object
    ResourceARN:
      maxLength: 1024
      minLength: 1
      pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
      type: string
    MediaStorageConfigurationStatus:
      enum:
      - ENABLED
      - DISABLED
      type: string
    UpdateNotificationConfigurationOutput:
      properties: {}
      type: object
    NotificationDestinationConfig:
      description: The structure that contains the information required to deliver
        a notification to a customer.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/DestinationUri'
          - description: The Uniform Resource Identifier (URI) that identifies where
              the images will be delivered.
      required:
      - Uri
      type: object
    UpdateSignalingChannelOutput:
      properties: {}
      type: object
    UpdateStreamOutput:
      properties: {}
      type: object
    APIName:
      enum:
      - PUT_MEDIA
      - GET_MEDIA
      - LIST_FRAGMENTS
      - GET_MEDIA_FOR_FRAGMENT_LIST
      - GET_HLS_STREAMING_SESSION_URL
      - GET_DASH_STREAMING_SESSION_URL
      - GET_CLIP
      - GET_IMAGES
      type: string
    ChannelType:
      enum:
      - SINGLE_MASTER
      - FULL_MESH
      type: string
    Status:
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      type: string
    Timestamp:
      format: date-time
      type: string
    SingleMasterConfiguration:
      description: A structure that contains the configuration for the <code>SINGLE_MASTER</code>
        channel type.
      properties:
        MessageTtlSeconds:
          allOf:
          - $ref: '#/components/schemas/MessageTtlSeconds'
          - description: The period of time a signaling channel retains undelivered
              messages before they are discarded.
      type: object
    Version:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9]+"
      type: string
    ChannelInfo:
      description: A structure that encapsulates a signaling channel's metadata and
        properties.
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: The name of the signaling channel.
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signaling channel.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The type of the signaling channel.
        ChannelStatus:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: Current status of the signaling channel.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the signaling channel was created.
        SingleMasterConfiguration:
          $ref: '#/components/schemas/ChannelInfo_SingleMasterConfiguration'
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The current version of the signaling channel.
      type: object
    ChannelInfoList:
      items:
        $ref: '#/components/schemas/ChannelInfo'
      type: array
    ChannelNameCondition:
      description: "An optional input parameter for the <code>ListSignalingChannels</code>\
        \ API. When this parameter is specified while invoking <code>ListSignalingChannels</code>,\
        \ the API returns only the channels that satisfy a condition specified in\
        \ <code>ChannelNameCondition</code>."
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: "A comparison operator. Currently, you can only specify the\
              \ <code>BEGINS_WITH</code> operator, which finds signaling channels\
              \ whose names begin with a given prefix."
        ComparisonValue:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: A value to compare.
      type: object
    ChannelProtocol:
      enum:
      - WSS
      - HTTPS
      - WEBRTC
      type: string
    TagOnCreateList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    CreateSignalingChannelInput:
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: A name for the signaling channel that you are creating. It
              must be unique for each Amazon Web Services account and Amazon Web Services
              Region.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: "A type of the signaling channel that you are creating. Currently,\
              \ <code>SINGLE_MASTER</code> is the only supported channel type. "
        SingleMasterConfiguration:
          $ref: '#/components/schemas/CreateSignalingChannelInput_SingleMasterConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagOnCreateList'
          - description: A set of tags (key-value pairs) that you want to associate
              with this channel.
      required:
      - ChannelName
      title: CreateSignalingChannelInput
      type: object
    DeviceName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9_.-]+"
      type: string
    MediaType:
      maxLength: 128
      minLength: 1
      pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*"
      type: string
    KmsKeyId:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    DataRetentionInHours:
      minimum: 0
      type: integer
    ResourceTags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    CreateStreamInput:
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: "<p>The name of the device that is writing to the stream.\
              \ </p> <note> <p>In the current implementation, Kinesis Video Streams\
              \ does not use this name.</p> </note>"
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: "<p>A name for the stream that you are creating.</p> <p>The\
              \ stream name is an identifier for the stream, and must be unique for\
              \ each account and region.</p>"
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          - description: "<p>The media type of the stream. Consumers of the stream\
              \ can use this information when processing the stream. For more information\
              \ about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\"\
              >Media Types</a>. If you choose to specify the <code>MediaType</code>,\
              \ see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming\
              \ Requirements</a> for guidelines.</p> <p>Example valid values include\
              \ \"video/h264\" and \"video/h264,audio/aac\".</p> <p>This parameter\
              \ is optional; the default value is <code>null</code> (or empty in JSON).</p>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "<p>The ID of the Key Management Service (KMS) key that you\
              \ want Kinesis Video Streams to use to encrypt stream data.</p> <p>If\
              \ no key ID is specified, the default, Kinesis Video-managed key (<code>Amazon\
              \ Web Services/kinesisvideo</code>) is used.</p> <p> For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
              >DescribeKey</a>. </p>"
        DataRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionInHours'
          - description: "<p>The number of hours that you want to retain the data\
              \ in the stream. Kinesis Video Streams retains the data in a data store\
              \ that is associated with the stream.</p> <p>The default value is 0,\
              \ indicating that the stream does not persist data.</p> <p>When the\
              \ <code>DataRetentionInHours</code> value is 0, consumers can still\
              \ consume the fragments that remain in the service host buffer, which\
              \ has a retention time limit of 5 minutes and a retention memory limit\
              \ of 200 MB. Fragments are removed from the buffer when either limit\
              \ is reached.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: A list of tags to associate with the specified stream. Each
              tag is a key-value pair (the value is optional).
      required:
      - StreamName
      title: CreateStreamInput
      type: object
    DataEndpoint:
      type: string
    DataRetentionChangeInHours:
      minimum: 1
      type: integer
    DeleteAfterUpload:
      type: boolean
    DeleteEdgeConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream from which to delete the edge configuration.
              Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream. Specify either
              the <code>StreamName</code> or the <code>StreamARN</code>.
      title: DeleteEdgeConfigurationInput
      type: object
    DeleteSignalingChannelInput:
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signaling channel that
              you want to delete.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The current version of the signaling channel that you want
              to delete. You can obtain the current version by invoking the <code>DescribeSignalingChannel</code>
              or <code>ListSignalingChannels</code> API operations.
      required:
      - ChannelARN
      title: DeleteSignalingChannelInput
      type: object
    DeleteStreamInput:
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: 'The Amazon Resource Name (ARN) of the stream that you want
              to delete. '
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>Optional: The version of the stream that you want to\
              \ delete. </p> <p>Specify the version as a safeguard to ensure that\
              \ your are deleting the correct stream. To get the stream version, use\
              \ the <code>DescribeStream</code> API.</p> <p>If not specified, only\
              \ the <code>CreationTime</code> is checked before deleting the stream.</p>"
      required:
      - StreamARN
      title: DeleteStreamInput
      type: object
    EdgeRetentionInHours:
      maximum: 720
      minimum: 1
      type: integer
    LocalSizeConfig:
      description: "The configuration details that include the maximum size of the\
        \ media (<code>MaxLocalMediaSizeInMB</code>) that you want to store for a\
        \ stream on the Edge Agent, as well as the strategy that should be used (<code>StrategyOnFullSize</code>)\
        \ when a stream's maximum size has been reached."
      properties:
        MaxLocalMediaSizeInMB:
          allOf:
          - $ref: '#/components/schemas/MaxLocalMediaSizeInMB'
          - description: 'The overall maximum size of the media that you want to store
              for a stream on the Edge Agent. '
        StrategyOnFullSize:
          allOf:
          - $ref: '#/components/schemas/StrategyOnFullSize'
          - description: The strategy to perform when a streamâ€™s <code>MaxLocalMediaSizeInMB</code>
              limit is reached.
      type: object
    DescribeEdgeConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: 'The name of the stream whose edge configuration you want
              to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>. '
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream. Specify either
              the <code>StreamName</code>or the <code>StreamARN</code>.
      title: DescribeEdgeConfigurationInput
      type: object
    SyncStatus:
      enum:
      - SYNCING
      - ACKNOWLEDGED
      - IN_SYNC
      - SYNC_FAILED
      - DELETING
      - DELETE_FAILED
      - DELETING_ACKNOWLEDGED
      type: string
    FailedStatusDetails:
      type: string
    EdgeConfig:
      description: A description of the stream's edge configuration that will be used
        to sync with the Edge Agent IoT Greengrass component. The Edge Agent component
        will run on an IoT Hub Device setup at your premise.
      properties:
        HubDeviceArn:
          allOf:
          - $ref: '#/components/schemas/HubDeviceArn'
          - description: The "<b>Internet of Things (IoT) Thing</b>" Arn of the stream.
        RecorderConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig_RecorderConfig'
        UploaderConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig'
        DeletionConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig_DeletionConfig'
      required:
      - HubDeviceArn
      - RecorderConfig
      type: object
    EdgeAgentStatus:
      description: An object that contains the latest status details for an edge agent's
        recorder and uploader jobs. Use this information to determine the current
        health of an edge agent.
      properties:
        LastRecorderStatus:
          $ref: '#/components/schemas/EdgeAgentStatus_LastRecorderStatus'
        LastUploaderStatus:
          $ref: '#/components/schemas/EdgeAgentStatus_LastUploaderStatus'
      type: object
    DescribeImageGenerationConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: 'The name of the stream from which to retrieve the image
              generation configuration. You must specify either the <code>StreamName</code>
              or the <code>StreamARN</code>. '
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the Kinesis video stream
              from which to retrieve the image generation configuration. You must
              specify either the <code>StreamName</code> or the <code>StreamARN</code>.
      title: DescribeImageGenerationConfigurationInput
      type: object
    ImageGenerationConfiguration:
      description: "The structure that contains the information required for the KVS\
        \ images delivery. If null, the configuration will be deleted from the stream."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          - description: Indicates whether the <code>ContinuousImageGenerationConfigurations</code>
              API is enabled or disabled.
        ImageSelectorType:
          allOf:
          - $ref: '#/components/schemas/ImageSelectorType'
          - description: The origin of the Server or Producer timestamps to use to
              generate the images.
        DestinationConfig:
          $ref: '#/components/schemas/UpdateImageGenerationConfiguration_request_ImageGenerationConfiguration_DestinationConfig'
        SamplingInterval:
          allOf:
          - $ref: '#/components/schemas/SamplingInterval'
          - description: "The time interval in milliseconds (ms) at which the images\
              \ need to be generated from the stream. The minimum value that can be\
              \ provided is 33 ms, because a camera that generates content at 30 FPS\
              \ would create a frame every 33.3 ms. If the timestamp range is less\
              \ than the sampling interval, the Image from the <code>StartTimestamp</code>\
              \ will be returned if available. "
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: The accepted image format.
        FormatConfig:
          allOf:
          - $ref: '#/components/schemas/FormatConfig'
          - description: "The list of a key-value pair structure that contains extra\
              \ parameters that can be applied when the image is generated. The <code>FormatConfig</code>\
              \ key is the <code>JPEGQuality</code>, which indicates the JPEG quality\
              \ key to be used to generate the image. The <code>FormatConfig</code>\
              \ value accepts ints from 1 to 100. If the value is 1, the image will\
              \ be generated with less quality and the best compression. If the value\
              \ is 100, the image will be generated with the best quality and less\
              \ compression. If no value is provided, the default value of the <code>JPEGQuality</code>\
              \ key will be set to 80."
        WidthPixels:
          allOf:
          - $ref: '#/components/schemas/WidthPixels'
          - description: "The width of the output image that is used in conjunction\
              \ with the <code>HeightPixels</code> parameter. When both <code>WidthPixels</code>\
              \ and <code>HeightPixels</code> parameters are provided, the image will\
              \ be stretched to fit the specified aspect ratio. If only the <code>WidthPixels</code>\
              \ parameter is provided, its original aspect ratio will be used to calculate\
              \ the <code>HeightPixels</code> ratio. If neither parameter is provided,\
              \ the original image size will be returned."
        HeightPixels:
          allOf:
          - $ref: '#/components/schemas/HeightPixels'
          - description: "The height of the output image that is used in conjunction\
              \ with the <code>WidthPixels</code> parameter. When both <code>HeightPixels</code>\
              \ and <code>WidthPixels</code> parameters are provided, the image will\
              \ be stretched to fit the specified aspect ratio. If only the <code>HeightPixels</code>\
              \ parameter is provided, its original aspect ratio will be used to calculate\
              \ the <code>WidthPixels</code> ratio. If neither parameter is provided,\
              \ the original image size will be returned."
      required:
      - DestinationConfig
      - Format
      - ImageSelectorType
      - SamplingInterval
      - Status
      type: object
    MappedResourceConfigurationListLimit:
      maximum: 1
      minimum: 1
      type: integer
    NextToken:
      maxLength: 512
      minLength: 0
      pattern: "[a-zA-Z0-9+/=]*"
      type: string
    DescribeMappedResourceConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MappedResourceConfigurationListLimit'
          - description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to provide in your next request, to get another\
              \ batch of results."
      title: DescribeMappedResourceConfigurationInput
      type: object
    MappedResourceConfigurationList:
      items:
        $ref: '#/components/schemas/MappedResourceConfigurationListItem'
      maxItems: 1
      minItems: 0
      type: array
    DescribeMediaStorageConfigurationInput:
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: The name of the channel.
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the channel.
      title: DescribeMediaStorageConfigurationInput
      type: object
    MediaStorageConfiguration:
      description: "A structure that encapsulates, or contains, the media storage\
        \ configuration properties."
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: 'The Amazon Resource Name (ARN) of the stream '
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaStorageConfigurationStatus'
          - description: The status of the media storage configuration.
      required:
      - Status
      type: object
    DescribeNotificationConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream from which to retrieve the notification
              configuration. You must specify either the <code>StreamName</code> or
              the <code>StreamARN</code>.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the Kinesis video stream
              from where you want to retrieve the notification configuration. You
              must specify either the <code>StreamName</code> or the StreamARN.
      title: DescribeNotificationConfigurationInput
      type: object
    NotificationConfiguration:
      description: "The structure that contains the notification information for the\
        \ KVS images delivery. If this parameter is null, the configuration will be\
        \ deleted from the stream."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          - description: Indicates if a notification configuration is enabled or disabled.
        DestinationConfig:
          $ref: '#/components/schemas/UpdateNotificationConfiguration_request_NotificationConfiguration_DestinationConfig'
      required:
      - DestinationConfig
      - Status
      type: object
    DescribeSignalingChannelInput:
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: The name of the signaling channel that you want to describe.
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The ARN of the signaling channel that you want to describe.
      title: DescribeSignalingChannelInput
      type: object
    DescribeStreamInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
      title: DescribeStreamInput
      type: object
    StreamInfo:
      description: An object describing a Kinesis video stream.
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The name of the device that is associated with the stream.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          - description: 'The <code>MediaType</code> of the stream. '
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: The ID of the Key Management Service (KMS) key that Kinesis
              Video Streams uses to encrypt data on the stream.
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the stream.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The status of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp that indicates when the stream was created.
        DataRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionInHours'
          - description: "How long the stream retains data, in hours."
      type: object
    DestinationRegion:
      maxLength: 14
      minLength: 9
      pattern: "^[a-z]+(-[a-z]+)?-[a-z]+-[0-9]$"
      type: string
    DestinationUri:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z_0-9]+:(//)?([^/]+)/?([^*]*)$"
      type: string
    DurationInSeconds:
      maximum: 3600
      minimum: 60
      type: integer
    LastRecorderStatus:
      description: The latest status of a stream's edge recording job.
      properties:
        JobStatusDetails:
          allOf:
          - $ref: '#/components/schemas/JobStatusDetails'
          - description: A description of a recorder jobâ€™s latest status.
        LastCollectedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which the recorder job was last executed
              and media stored to local disk.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which the recorder status was last updated.
        RecorderStatus:
          allOf:
          - $ref: '#/components/schemas/RecorderStatus'
          - description: The status of the latest recorder job.
      type: object
    LastUploaderStatus:
      description: The latest status of a streamâ€™s edge to cloud uploader job.
      properties:
        JobStatusDetails:
          allOf:
          - $ref: '#/components/schemas/JobStatusDetails'
          - description: A description of an uploader jobâ€™s latest status.
        LastCollectedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which the uploader job was last executed
              and media collected to the cloud.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp at which the uploader status was last updated.
        UploaderStatus:
          allOf:
          - $ref: '#/components/schemas/UploaderStatus'
          - description: The status of the latest uploader job.
      type: object
    FormatConfigValue:
      maxLength: 256
      minLength: 0
      pattern: "^[a-zA-Z_0-9]+"
      type: string
    FormatConfigKey:
      enum:
      - JPEGQuality
      type: string
    GetDataEndpointInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream that you want to get the endpoint
              for. You must specify either this parameter or a <code>StreamARN</code>
              in the request.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: 'The Amazon Resource Name (ARN) of the stream that you want
              to get the endpoint for. You must specify either this parameter or a
              <code>StreamName</code> in the request. '
        APIName:
          allOf:
          - $ref: '#/components/schemas/APIName'
          - description: The name of the API action for which to get an endpoint.
      required:
      - APIName
      title: GetDataEndpointInput
      type: object
    SingleMasterChannelEndpointConfiguration:
      description: 'An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code>
        channel type. '
      properties:
        Protocols:
          allOf:
          - $ref: '#/components/schemas/ListOfProtocols'
          - description: "This property is used to determine the nature of communication\
              \ over this <code>SINGLE_MASTER</code> signaling channel. If <code>WSS</code>\
              \ is specified, this API returns a websocket endpoint. If <code>HTTPS</code>\
              \ is specified, this API returns an <code>HTTPS</code> endpoint."
        Role:
          allOf:
          - $ref: '#/components/schemas/ChannelRole'
          - description: "This property is used to determine messaging permissions\
              \ in this <code>SINGLE_MASTER</code> signaling channel. If <code>MASTER</code>\
              \ is specified, this API returns an endpoint that a client can use to\
              \ receive offers from and send answers to any of the viewers on this\
              \ signaling channel. If <code>VIEWER</code> is specified, this API returns\
              \ an endpoint that a client can use only to send offers to another <code>MASTER</code>\
              \ client on this signaling channel. "
      type: object
    GetSignalingChannelEndpointInput:
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signalling channel
              for which you want to get an endpoint.
        SingleMasterChannelEndpointConfiguration:
          $ref: '#/components/schemas/GetSignalingChannelEndpointInput_SingleMasterChannelEndpointConfiguration'
      required:
      - ChannelARN
      title: GetSignalingChannelEndpointInput
      type: object
    ResourceEndpointList:
      items:
        $ref: '#/components/schemas/ResourceEndpointListItem'
      type: array
    JobStatusDetails:
      type: string
    RecorderStatus:
      enum:
      - SUCCESS
      - USER_ERROR
      - SYSTEM_ERROR
      type: string
    UploaderStatus:
      enum:
      - SUCCESS
      - USER_ERROR
      - SYSTEM_ERROR
      type: string
    ListEdgeAgentConfigurationsEdgeConfig:
      description: A description of a single stream's edge configuration.
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the stream first created the edge config.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp when the stream last updated the edge config.
        SyncStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          - description: The current sync status of the stream's edge configuration.
        FailedStatusDetails:
          allOf:
          - $ref: '#/components/schemas/FailedStatusDetails'
          - description: A description of the generated failure status.
        EdgeConfig:
          $ref: '#/components/schemas/EdgeConfig'
      type: object
    ListEdgeAgentConfigurationsEdgeConfigList:
      items:
        $ref: '#/components/schemas/ListEdgeAgentConfigurationsEdgeConfig'
      type: array
    ListEdgeAgentConfigurationsInputLimit:
      maximum: 10
      minimum: 1
      type: integer
    ListEdgeAgentConfigurationsInput:
      properties:
        HubDeviceArn:
          allOf:
          - $ref: '#/components/schemas/HubDeviceArn'
          - description: The "Internet of Things (IoT) Thing" Arn of the edge agent.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListEdgeAgentConfigurationsInputLimit'
          - description: The maximum number of edge configurations to return in the
              response. The default is 5.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter, when the result of a <code>ListEdgeAgentConfigurations</code>\
              \ operation is truncated, the call returns the <code>NextToken</code>\
              \ in the response. To get another batch of edge configurations, provide\
              \ this token in your next request. "
      required:
      - HubDeviceArn
      title: ListEdgeAgentConfigurationsInput
      type: object
    ListStreamsInputLimit:
      maximum: 10000
      minimum: 1
      type: integer
    ListSignalingChannelsInput:
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListStreamsInputLimit'
          - description: The maximum number of channels to return in the response.
              The default is 500.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter, when the result of a <code>ListSignalingChannels</code>\
              \ operation is truncated, the call returns the <code>NextToken</code>\
              \ in the response. To get another batch of channels, provide this token\
              \ in your next request."
        ChannelNameCondition:
          $ref: '#/components/schemas/ListSignalingChannelsInput_ChannelNameCondition'
      title: ListSignalingChannelsInput
      type: object
    StreamNameCondition:
      description: "Specifies the condition that streams must satisfy to be returned\
        \ when you list streams (see the <code>ListStreams</code> API). A condition\
        \ has a comparison operation and a value. Currently, you can specify only\
        \ the <code>BEGINS_WITH</code> operator, which finds streams whose names start\
        \ with a given prefix. "
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: "A comparison operator. Currently, you can specify only the\
              \ <code>BEGINS_WITH</code> operator, which finds streams whose names\
              \ start with a given prefix."
        ComparisonValue:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: A value to compare.
      type: object
    ListStreamsInput:
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListStreamsInputLimit'
          - description: "The maximum number of streams to return in the response.\
              \ The default is 10,000."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter, when the result of a <code>ListStreams</code>\
              \ operation is truncated, the call returns the <code>NextToken</code>\
              \ in the response. To get another batch of streams, provide this token\
              \ in your next request."
        StreamNameCondition:
          $ref: '#/components/schemas/ListStreamsInput_StreamNameCondition'
      title: ListStreamsInput
      type: object
    StreamInfoList:
      items:
        $ref: '#/components/schemas/StreamInfo'
      type: array
    ListTagsForResourceInput:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter and the result of a <code>ListTagsForResource</code>\
              \ call is truncated, the response includes a token that you can use\
              \ in the next request to fetch the next batch of tags. "
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signaling channel for
              which you want to list tags.
      required:
      - ResourceARN
      title: ListTagsForResourceInput
      type: object
    ListTagsForStreamInput:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If you specify this parameter and the result of a <code>ListTagsForStream</code>\
              \ call is truncated, the response includes a token that you can use\
              \ in the next request to fetch the next batch of tags."
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream that you want
              to list tags for.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream that you want to list tags for.
      title: ListTagsForStreamInput
      type: object
    MaxLocalMediaSizeInMB:
      maximum: 2000000
      minimum: 64
      type: integer
    StrategyOnFullSize:
      enum:
      - DELETE_OLDEST_MEDIA
      - DENY_NEW_MEDIA
      type: string
    MappedResourceConfigurationListItem:
      description: "A structure that encapsulates, or contains, the media storage\
        \ configuration properties."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of the associated resource for the kinesis video
              stream.
        ARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: "The Amazon Resource Name (ARN) of the Kinesis Video Stream\
              \ resource, associated with the stream."
      type: object
    Type:
      type: string
    MediaUriSecretArn:
      format: password
      maxLength: 2048
      minLength: 20
      pattern: "arn:[a-z\\d-]+:secretsmanager:[a-z0-9-]+:[0-9]+:secret:[a-zA-Z0-9_.-]+"
      type: string
    MediaUriType:
      enum:
      - RTSP_URI
      - FILE_URI
      type: string
    MediaSourceConfig:
      description: The configuration details that consist of the credentials required
        (<code>MediaUriSecretArn</code> and <code>MediaUriType</code>) to access the
        media files that are streamed to the camera.
      properties:
        MediaUriSecretArn:
          allOf:
          - $ref: '#/components/schemas/MediaUriSecretArn'
          - description: "The Amazon Web Services Secrets Manager ARN for the username\
              \ and password of the camera, or a local media file location."
        MediaUriType:
          allOf:
          - $ref: '#/components/schemas/MediaUriType'
          - description: <p>The Uniform Resource Identifier (URI) type. The <code>FILE_URI</code>
              value can be used to stream local media files.</p> <note> <p>Preview
              only supports the <code>RTSP_URI</code> media source URI format .</p>
              </note>
      required:
      - MediaUriSecretArn
      - MediaUriType
      type: object
    ScheduleConfig:
      description: "<p>This API enables you to specify the duration that the camera,\
        \ or local media file, should record onto the Edge Agent. The <code>ScheduleConfig</code>\
        \ consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>\
        \ attributes. </p> <p>If the <code>ScheduleConfig</code> is not provided in\
        \ the <code>RecorderConfig</code>, then the Edge Agent will always be set\
        \ to recording mode.</p> <p>If the <code>ScheduleConfig</code> is not provided\
        \ in the <code>UploaderConfig</code>, then the Edge Agent will upload at regular\
        \ intervals (every 1 hour).</p>"
      properties:
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: "<p>The Quartz cron expression that takes care of scheduling\
              \ jobs to record from the camera, or local media file, onto the Edge\
              \ Agent. If the <code>ScheduleExpression</code> is not provided for\
              \ the <code>RecorderConfig</code>, then the Edge Agent will always be\
              \ set to recording mode.</p> <p>For more information about Quartz, refer\
              \ to the <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html\"\
              > <i>Cron Trigger Tutorial</i> </a> page to understand the valid expressions\
              \ and its use.</p>"
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          - description: "The total duration to record the media. If the <code>ScheduleExpression</code>\
              \ attribute is provided, then the <code>DurationInSeconds</code> attribute\
              \ should also be specified."
      required:
      - DurationInSeconds
      - ScheduleExpression
      type: object
    ResourceEndpoint:
      type: string
    ResourceEndpointListItem:
      description: <p>An object that describes the endpoint of the signaling channel
        returned by the <code>GetSignalingChannelEndpoint</code> API.</p> <p>The media
        server endpoint will correspond to the <code>WEBRTC</code> Protocol.</p>
      properties:
        Protocol:
          allOf:
          - $ref: '#/components/schemas/ChannelProtocol'
          - description: The protocol of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code>
              API.
        ResourceEndpoint:
          allOf:
          - $ref: '#/components/schemas/ResourceEndpoint'
          - description: The endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code>
              API.
      type: object
    ScheduleExpression:
      maxLength: 100
      minLength: 11
      pattern: "[^\\n]{11,100}"
      type: string
    StartEdgeConfigurationUpdateInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream whose edge configuration you want
              to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: ' The Amazon Resource Name (ARN) of the stream. Specify either
              the <code>StreamName</code> or the <code>StreamARN</code>.'
        EdgeConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdateInput_EdgeConfig'
      required:
      - EdgeConfig
      title: StartEdgeConfigurationUpdateInput
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceInput:
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signaling channel to
              which you want to add tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags to associate with the specified signaling
              channel. Each tag is a key-value pair.
      required:
      - ResourceARN
      - Tags
      title: TagResourceInput
      type: object
    TagStreamInput:
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to add the tag or tags to.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream that you want to add the tag or tags
              to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: A list of tags to associate with the specified stream. Each
              tag is a key-value pair (the value is optional).
      required:
      - Tags
      title: TagStreamInput
      type: object
    UntagResourceInput:
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signaling channel from
              which you want to remove tags.
        TagKeyList:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: A list of the keys of the tags that you want to remove.
      required:
      - ResourceARN
      - TagKeyList
      title: UntagResourceInput
      type: object
    UntagStreamInput:
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream that you want
              to remove tags from.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream that you want to remove tags from.
        TagKeyList:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: A list of the keys of the tags that you want to remove.
      required:
      - TagKeyList
      title: UntagStreamInput
      type: object
    UpdateDataRetentionOperation:
      enum:
      - INCREASE_DATA_RETENTION
      - DECREASE_DATA_RETENTION
      type: string
    UpdateDataRetentionInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream whose retention period you want to
              change.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the stream whose retention
              period you want to change.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "The version of the stream whose retention period you want\
              \ to change. To get the version, call either the <code>DescribeStream</code>\
              \ or the <code>ListStreams</code> API."
        Operation:
          allOf:
          - $ref: '#/components/schemas/UpdateDataRetentionOperation'
          - description: Indicates whether you want to increase or decrease the retention
              period.
        DataRetentionChangeInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionChangeInHours'
          - description: "The retention period, in hours. The value you specify replaces\
              \ the current value. The maximum value for this parameter is 87600 (ten\
              \ years)."
      required:
      - CurrentVersion
      - DataRetentionChangeInHours
      - Operation
      title: UpdateDataRetentionInput
      type: object
    UpdateImageGenerationConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream from which to update the image generation
              configuration. You must specify either the <code>StreamName</code> or
              the <code>StreamARN</code>.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the Kinesis video stream
              from where you want to update the image generation configuration. You
              must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        ImageGenerationConfiguration:
          $ref: '#/components/schemas/UpdateImageGenerationConfigurationInput_ImageGenerationConfiguration'
      title: UpdateImageGenerationConfigurationInput
      type: object
    UpdateMediaStorageConfigurationInput:
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the channel.
        MediaStorageConfiguration:
          $ref: '#/components/schemas/DescribeMediaStorageConfigurationOutput_MediaStorageConfiguration'
      required:
      - ChannelARN
      - MediaStorageConfiguration
      title: UpdateMediaStorageConfigurationInput
      type: object
    UpdateNotificationConfigurationInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: The name of the stream from which to update the notification
              configuration. You must specify either the <code>StreamName</code> or
              the <code>StreamARN</code>.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the Kinesis video stream
              from where you want to update the notification configuration. You must
              specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        NotificationConfiguration:
          $ref: '#/components/schemas/UpdateNotificationConfigurationInput_NotificationConfiguration'
      title: UpdateNotificationConfigurationInput
      type: object
    UpdateSignalingChannelInput:
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The Amazon Resource Name (ARN) of the signaling channel that
              you want to update.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The current version of the signaling channel that you want
              to update.
        SingleMasterConfiguration:
          $ref: '#/components/schemas/UpdateSignalingChannelInput_SingleMasterConfiguration'
      required:
      - ChannelARN
      - CurrentVersion
      title: UpdateSignalingChannelInput
      type: object
    UpdateStreamInput:
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: "<p>The name of the stream whose metadata you want to update.</p>\
              \ <p>The stream name is an identifier for the stream, and must be unique\
              \ for each account and region.</p>"
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The ARN of the stream whose metadata you want to update.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the stream whose metadata you want to update.
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: "<p>The name of the device that is writing to the stream.\
              \ </p> <note> <p> In the current implementation, Kinesis Video Streams\
              \ does not use this name. </p> </note>"
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          - description: "<p>The stream's media type. Use <code>MediaType</code> to\
              \ specify the type of content that the stream contains to the consumers\
              \ of the stream. For more information about media types, see <a href=\"\
              http://www.iana.org/assignments/media-types/media-types.xhtml\">Media\
              \ Types</a>. If you choose to specify the <code>MediaType</code>, see\
              \ <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming\
              \ Requirements</a>.</p> <p>To play video on the console, you must specify\
              \ the correct video type. For example, if the video in the stream is\
              \ H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>"
      required:
      - CurrentVersion
      title: UpdateStreamInput
      type: object
    CreateSignalingChannel_request_SingleMasterConfiguration:
      description: A structure that contains the configuration for the <code>SINGLE_MASTER</code>
        channel type.
      properties:
        MessageTtlSeconds:
          allOf:
          - $ref: '#/components/schemas/MessageTtlSeconds'
          - description: The period of time a signaling channel retains undelivered
              messages before they are discarded.
      type: object
    CreateSignalingChannel_request:
      properties:
        ChannelName:
          description: A name for the signaling channel that you are creating. It
            must be unique for each Amazon Web Services account and Amazon Web Services
            Region.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        ChannelType:
          description: "A type of the signaling channel that you are creating. Currently,\
            \ <code>SINGLE_MASTER</code> is the only supported channel type. "
          enum:
          - SINGLE_MASTER
          - FULL_MESH
          type: string
        SingleMasterConfiguration:
          $ref: '#/components/schemas/CreateSignalingChannel_request_SingleMasterConfiguration'
        Tags:
          description: A set of tags (key-value pairs) that you want to associate
            with this channel.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - ChannelName
      type: object
    CreateStream_request:
      properties:
        DeviceName:
          description: "<p>The name of the device that is writing to the stream. </p>\
            \ <note> <p>In the current implementation, Kinesis Video Streams does\
            \ not use this name.</p> </note>"
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamName:
          description: "<p>A name for the stream that you are creating.</p> <p>The\
            \ stream name is an identifier for the stream, and must be unique for\
            \ each account and region.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        MediaType:
          description: "<p>The media type of the stream. Consumers of the stream can\
            \ use this information when processing the stream. For more information\
            \ about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\"\
            >Media Types</a>. If you choose to specify the <code>MediaType</code>,\
            \ see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming\
            \ Requirements</a> for guidelines.</p> <p>Example valid values include\
            \ \"video/h264\" and \"video/h264,audio/aac\".</p> <p>This parameter is\
            \ optional; the default value is <code>null</code> (or empty in JSON).</p>"
          maxLength: 128
          minLength: 1
          pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\\
            +]+)*"
          type: string
        KmsKeyId:
          description: "<p>The ID of the Key Management Service (KMS) key that you\
            \ want Kinesis Video Streams to use to encrypt stream data.</p> <p>If\
            \ no key ID is specified, the default, Kinesis Video-managed key (<code>Amazon\
            \ Web Services/kinesisvideo</code>) is used.</p> <p> For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\"\
            >DescribeKey</a>. </p>"
          maxLength: 2048
          minLength: 1
          pattern: .+
          type: string
        DataRetentionInHours:
          description: "<p>The number of hours that you want to retain the data in\
            \ the stream. Kinesis Video Streams retains the data in a data store that\
            \ is associated with the stream.</p> <p>The default value is 0, indicating\
            \ that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code>\
            \ value is 0, consumers can still consume the fragments that remain in\
            \ the service host buffer, which has a retention time limit of 5 minutes\
            \ and a retention memory limit of 200 MB. Fragments are removed from the\
            \ buffer when either limit is reached.</p>"
          minimum: 0
          type: integer
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A list of tags to associate with the specified stream. Each
            tag is a key-value pair (the value is optional).
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - StreamName
      type: object
    DeleteEdgeConfiguration_request:
      properties:
        StreamName:
          description: The name of the stream from which to delete the edge configuration.
            Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream. Specify either
            the <code>StreamName</code> or the <code>StreamARN</code>.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    DeleteSignalingChannel_request:
      properties:
        ChannelARN:
          description: The Amazon Resource Name (ARN) of the signaling channel that
            you want to delete.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        CurrentVersion:
          description: The current version of the signaling channel that you want
            to delete. You can obtain the current version by invoking the <code>DescribeSignalingChannel</code>
            or <code>ListSignalingChannels</code> API operations.
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9]+"
          type: string
      required:
      - ChannelARN
      type: object
    DeleteStream_request:
      properties:
        StreamARN:
          description: 'The Amazon Resource Name (ARN) of the stream that you want
            to delete. '
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        CurrentVersion:
          description: "<p>Optional: The version of the stream that you want to delete.\
            \ </p> <p>Specify the version as a safeguard to ensure that your are deleting\
            \ the correct stream. To get the stream version, use the <code>DescribeStream</code>\
            \ API.</p> <p>If not specified, only the <code>CreationTime</code> is\
            \ checked before deleting the stream.</p>"
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9]+"
          type: string
      required:
      - StreamARN
      type: object
    DescribeEdgeConfiguration_request:
      properties:
        StreamName:
          description: 'The name of the stream whose edge configuration you want to
            update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>. '
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream. Specify either
            the <code>StreamName</code>or the <code>StreamARN</code>.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    DescribeImageGenerationConfiguration_request:
      properties:
        StreamName:
          description: 'The name of the stream from which to retrieve the image generation
            configuration. You must specify either the <code>StreamName</code> or
            the <code>StreamARN</code>. '
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from which to retrieve the image generation configuration. You must specify
            either the <code>StreamName</code> or the <code>StreamARN</code>.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    DescribeMappedResourceConfiguration_request:
      properties:
        StreamName:
          description: The name of the stream.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        MaxResults:
          description: The maximum number of results to return in the response.
          maximum: 1
          minimum: 1
          type: integer
        NextToken:
          description: "The token to provide in your next request, to get another\
            \ batch of results."
          maxLength: 512
          minLength: 0
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
      type: object
    DescribeMediaStorageConfiguration_request:
      properties:
        ChannelName:
          description: The name of the channel.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        ChannelARN:
          description: The Amazon Resource Name (ARN) of the channel.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    DescribeNotificationConfiguration_request:
      properties:
        StreamName:
          description: The name of the stream from which to retrieve the notification
            configuration. You must specify either the <code>StreamName</code> or
            the <code>StreamARN</code>.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from where you want to retrieve the notification configuration. You must
            specify either the <code>StreamName</code> or the StreamARN.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    DescribeSignalingChannel_request:
      properties:
        ChannelName:
          description: The name of the signaling channel that you want to describe.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        ChannelARN:
          description: The ARN of the signaling channel that you want to describe.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    DescribeStream_request:
      properties:
        StreamName:
          description: The name of the stream.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      type: object
    GetDataEndpoint_request:
      properties:
        StreamName:
          description: The name of the stream that you want to get the endpoint for.
            You must specify either this parameter or a <code>StreamARN</code> in
            the request.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: 'The Amazon Resource Name (ARN) of the stream that you want
            to get the endpoint for. You must specify either this parameter or a <code>StreamName</code>
            in the request. '
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        APIName:
          description: The name of the API action for which to get an endpoint.
          enum:
          - PUT_MEDIA
          - GET_MEDIA
          - LIST_FRAGMENTS
          - GET_MEDIA_FOR_FRAGMENT_LIST
          - GET_HLS_STREAMING_SESSION_URL
          - GET_DASH_STREAMING_SESSION_URL
          - GET_CLIP
          - GET_IMAGES
          type: string
      required:
      - APIName
      type: object
    GetSignalingChannelEndpoint_request_SingleMasterChannelEndpointConfiguration:
      description: 'An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code>
        channel type. '
      properties:
        Protocols:
          allOf:
          - $ref: '#/components/schemas/ListOfProtocols'
          - description: "This property is used to determine the nature of communication\
              \ over this <code>SINGLE_MASTER</code> signaling channel. If <code>WSS</code>\
              \ is specified, this API returns a websocket endpoint. If <code>HTTPS</code>\
              \ is specified, this API returns an <code>HTTPS</code> endpoint."
        Role:
          allOf:
          - $ref: '#/components/schemas/ChannelRole'
          - description: "This property is used to determine messaging permissions\
              \ in this <code>SINGLE_MASTER</code> signaling channel. If <code>MASTER</code>\
              \ is specified, this API returns an endpoint that a client can use to\
              \ receive offers from and send answers to any of the viewers on this\
              \ signaling channel. If <code>VIEWER</code> is specified, this API returns\
              \ an endpoint that a client can use only to send offers to another <code>MASTER</code>\
              \ client on this signaling channel. "
      type: object
    GetSignalingChannelEndpoint_request:
      properties:
        ChannelARN:
          description: The Amazon Resource Name (ARN) of the signalling channel for
            which you want to get an endpoint.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        SingleMasterChannelEndpointConfiguration:
          $ref: '#/components/schemas/GetSignalingChannelEndpoint_request_SingleMasterChannelEndpointConfiguration'
      required:
      - ChannelARN
      type: object
    ListEdgeAgentConfigurations_request:
      properties:
        HubDeviceArn:
          description: The "Internet of Things (IoT) Thing" Arn of the edge agent.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:iot:[a-z0-9-]+:[0-9]+:thing/[a-zA-Z0-9_.-]+"
          type: string
        MaxResults:
          description: The maximum number of edge configurations to return in the
            response. The default is 5.
          maximum: 10
          minimum: 1
          type: integer
        NextToken:
          description: "If you specify this parameter, when the result of a <code>ListEdgeAgentConfigurations</code>\
            \ operation is truncated, the call returns the <code>NextToken</code>\
            \ in the response. To get another batch of edge configurations, provide\
            \ this token in your next request. "
          maxLength: 512
          minLength: 0
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
      required:
      - HubDeviceArn
      type: object
    ListSignalingChannels_request_ChannelNameCondition:
      description: "An optional input parameter for the <code>ListSignalingChannels</code>\
        \ API. When this parameter is specified while invoking <code>ListSignalingChannels</code>,\
        \ the API returns only the channels that satisfy a condition specified in\
        \ <code>ChannelNameCondition</code>."
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: "A comparison operator. Currently, you can only specify the\
              \ <code>BEGINS_WITH</code> operator, which finds signaling channels\
              \ whose names begin with a given prefix."
        ComparisonValue:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: A value to compare.
      type: object
    ListSignalingChannels_request:
      properties:
        MaxResults:
          description: The maximum number of channels to return in the response. The
            default is 500.
          maximum: 10000
          minimum: 1
          type: integer
        NextToken:
          description: "If you specify this parameter, when the result of a <code>ListSignalingChannels</code>\
            \ operation is truncated, the call returns the <code>NextToken</code>\
            \ in the response. To get another batch of channels, provide this token\
            \ in your next request."
          maxLength: 512
          minLength: 0
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        ChannelNameCondition:
          $ref: '#/components/schemas/ListSignalingChannels_request_ChannelNameCondition'
      type: object
    ListStreams_request_StreamNameCondition:
      description: "Specifies the condition that streams must satisfy to be returned\
        \ when you list streams (see the <code>ListStreams</code> API). A condition\
        \ has a comparison operation and a value. Currently, you can specify only\
        \ the <code>BEGINS_WITH</code> operator, which finds streams whose names start\
        \ with a given prefix. "
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: "A comparison operator. Currently, you can specify only the\
              \ <code>BEGINS_WITH</code> operator, which finds streams whose names\
              \ start with a given prefix."
        ComparisonValue:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          - description: A value to compare.
      type: object
    ListStreams_request:
      properties:
        MaxResults:
          description: "The maximum number of streams to return in the response. The\
            \ default is 10,000."
          maximum: 10000
          minimum: 1
          type: integer
        NextToken:
          description: "If you specify this parameter, when the result of a <code>ListStreams</code>\
            \ operation is truncated, the call returns the <code>NextToken</code>\
            \ in the response. To get another batch of streams, provide this token\
            \ in your next request."
          maxLength: 512
          minLength: 0
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        StreamNameCondition:
          $ref: '#/components/schemas/ListStreams_request_StreamNameCondition'
      type: object
    ListTagsForResource_request:
      properties:
        NextToken:
          description: "If you specify this parameter and the result of a <code>ListTagsForResource</code>\
            \ call is truncated, the response includes a token that you can use in\
            \ the next request to fetch the next batch of tags. "
          maxLength: 512
          minLength: 0
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        ResourceARN:
          description: The Amazon Resource Name (ARN) of the signaling channel for
            which you want to list tags.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
      required:
      - ResourceARN
      type: object
    ListTagsForStream_request:
      properties:
        NextToken:
          description: "If you specify this parameter and the result of a <code>ListTagsForStream</code>\
            \ call is truncated, the response includes a token that you can use in\
            \ the next request to fetch the next batch of tags."
          maxLength: 512
          minLength: 0
          pattern: "[a-zA-Z0-9+/=]*"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream that you want
            to list tags for.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        StreamName:
          description: The name of the stream that you want to list tags for.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
      type: object
    StartEdgeConfigurationUpdate_request_EdgeConfig_RecorderConfig:
      allOf:
      - $ref: '#/components/schemas/RecorderConfig'
      - description: "The recorder configuration consists of the local <code>MediaSourceConfig</code>\
          \ details, that are used as credentials to access the local media files\
          \ streamed on the camera. "
      example:
        MediaSourceConfig:
          MediaUriSecretArn: ""
          MediaUriType: ""
        ScheduleConfig:
          DurationInSeconds: ""
          ScheduleExpression: ""
    StartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig:
      allOf:
      - $ref: '#/components/schemas/UploaderConfig'
      - description: The uploader configuration contains the <code>ScheduleExpression</code>
          details that are used to schedule upload jobs for the recorded media files
          from the Edge Agent to a Kinesis Video Stream.
      example:
        ScheduleConfig:
          DurationInSeconds: ""
          ScheduleExpression: ""
    StartEdgeConfigurationUpdate_request_EdgeConfig_DeletionConfig:
      allOf:
      - $ref: '#/components/schemas/DeletionConfig'
      - description: The deletion configuration is made up of the retention time (<code>EdgeRetentionInHours</code>)
          and local size configuration (<code>LocalSizeConfig</code>) details that
          are used to make the deletion.
      example:
        LocalSizeConfig:
          MaxLocalMediaSizeInMB: ""
          StrategyOnFullSize: ""
        EdgeRetentionInHours: ""
        DeleteAfterUpload: ""
    StartEdgeConfigurationUpdate_request_EdgeConfig:
      description: A description of the stream's edge configuration that will be used
        to sync with the Edge Agent IoT Greengrass component. The Edge Agent component
        will run on an IoT Hub Device setup at your premise.
      properties:
        HubDeviceArn:
          allOf:
          - $ref: '#/components/schemas/HubDeviceArn'
          - description: The "<b>Internet of Things (IoT) Thing</b>" Arn of the stream.
        RecorderConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig_RecorderConfig'
        UploaderConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig'
        DeletionConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig_DeletionConfig'
      type: object
    StartEdgeConfigurationUpdate_request:
      properties:
        StreamName:
          description: The name of the stream whose edge configuration you want to
            update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: ' The Amazon Resource Name (ARN) of the stream. Specify either
            the <code>StreamName</code> or the <code>StreamARN</code>.'
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        EdgeConfig:
          $ref: '#/components/schemas/StartEdgeConfigurationUpdate_request_EdgeConfig'
      required:
      - EdgeConfig
      type: object
    TagResource_request:
      properties:
        ResourceARN:
          description: The Amazon Resource Name (ARN) of the signaling channel to
            which you want to add tags.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        Tags:
          description: A list of tags to associate with the specified signaling channel.
            Each tag is a key-value pair.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ResourceARN
      - Tags
      type: object
    TagStream_request:
      properties:
        StreamARN:
          description: The Amazon Resource Name (ARN) of the resource that you want
            to add the tag or tags to.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        StreamName:
          description: The name of the stream that you want to add the tag or tags
            to.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: A list of tags to associate with the specified stream. Each
            tag is a key-value pair (the value is optional).
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - Tags
      type: object
    UntagResource_request:
      properties:
        ResourceARN:
          description: The Amazon Resource Name (ARN) of the signaling channel from
            which you want to remove tags.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        TagKeyList:
          description: A list of the keys of the tags that you want to remove.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ResourceARN
      - TagKeyList
      type: object
    UntagStream_request:
      properties:
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream that you want
            to remove tags from.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        StreamName:
          description: The name of the stream that you want to remove tags from.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        TagKeyList:
          description: A list of the keys of the tags that you want to remove.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - TagKeyList
      type: object
    UpdateDataRetention_request:
      properties:
        StreamName:
          description: The name of the stream whose retention period you want to change.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the stream whose retention
            period you want to change.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        CurrentVersion:
          description: "The version of the stream whose retention period you want\
            \ to change. To get the version, call either the <code>DescribeStream</code>\
            \ or the <code>ListStreams</code> API."
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9]+"
          type: string
        Operation:
          description: Indicates whether you want to increase or decrease the retention
            period.
          enum:
          - INCREASE_DATA_RETENTION
          - DECREASE_DATA_RETENTION
          type: string
        DataRetentionChangeInHours:
          description: "The retention period, in hours. The value you specify replaces\
            \ the current value. The maximum value for this parameter is 87600 (ten\
            \ years)."
          minimum: 1
          type: integer
      required:
      - CurrentVersion
      - DataRetentionChangeInHours
      - Operation
      type: object
    UpdateImageGenerationConfiguration_request_ImageGenerationConfiguration_DestinationConfig:
      allOf:
      - $ref: '#/components/schemas/ImageGenerationDestinationConfig'
      - description: The structure that contains the information required to deliver
          images to a customer.
      example:
        DestinationRegion: ""
        Uri: ""
    UpdateImageGenerationConfiguration_request_ImageGenerationConfiguration:
      description: "The structure that contains the information required for the KVS\
        \ images delivery. If null, the configuration will be deleted from the stream."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          - description: Indicates whether the <code>ContinuousImageGenerationConfigurations</code>
              API is enabled or disabled.
        ImageSelectorType:
          allOf:
          - $ref: '#/components/schemas/ImageSelectorType'
          - description: The origin of the Server or Producer timestamps to use to
              generate the images.
        DestinationConfig:
          $ref: '#/components/schemas/UpdateImageGenerationConfiguration_request_ImageGenerationConfiguration_DestinationConfig'
        SamplingInterval:
          allOf:
          - $ref: '#/components/schemas/SamplingInterval'
          - description: "The time interval in milliseconds (ms) at which the images\
              \ need to be generated from the stream. The minimum value that can be\
              \ provided is 33 ms, because a camera that generates content at 30 FPS\
              \ would create a frame every 33.3 ms. If the timestamp range is less\
              \ than the sampling interval, the Image from the <code>StartTimestamp</code>\
              \ will be returned if available. "
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: The accepted image format.
        FormatConfig:
          allOf:
          - $ref: '#/components/schemas/FormatConfig'
          - description: "The list of a key-value pair structure that contains extra\
              \ parameters that can be applied when the image is generated. The <code>FormatConfig</code>\
              \ key is the <code>JPEGQuality</code>, which indicates the JPEG quality\
              \ key to be used to generate the image. The <code>FormatConfig</code>\
              \ value accepts ints from 1 to 100. If the value is 1, the image will\
              \ be generated with less quality and the best compression. If the value\
              \ is 100, the image will be generated with the best quality and less\
              \ compression. If no value is provided, the default value of the <code>JPEGQuality</code>\
              \ key will be set to 80."
        WidthPixels:
          allOf:
          - $ref: '#/components/schemas/WidthPixels'
          - description: "The width of the output image that is used in conjunction\
              \ with the <code>HeightPixels</code> parameter. When both <code>WidthPixels</code>\
              \ and <code>HeightPixels</code> parameters are provided, the image will\
              \ be stretched to fit the specified aspect ratio. If only the <code>WidthPixels</code>\
              \ parameter is provided, its original aspect ratio will be used to calculate\
              \ the <code>HeightPixels</code> ratio. If neither parameter is provided,\
              \ the original image size will be returned."
        HeightPixels:
          allOf:
          - $ref: '#/components/schemas/HeightPixels'
          - description: "The height of the output image that is used in conjunction\
              \ with the <code>WidthPixels</code> parameter. When both <code>HeightPixels</code>\
              \ and <code>WidthPixels</code> parameters are provided, the image will\
              \ be stretched to fit the specified aspect ratio. If only the <code>HeightPixels</code>\
              \ parameter is provided, its original aspect ratio will be used to calculate\
              \ the <code>WidthPixels</code> ratio. If neither parameter is provided,\
              \ the original image size will be returned."
      type: object
    UpdateImageGenerationConfiguration_request:
      properties:
        StreamName:
          description: The name of the stream from which to update the image generation
            configuration. You must specify either the <code>StreamName</code> or
            the <code>StreamARN</code>.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from where you want to update the image generation configuration. You
            must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        ImageGenerationConfiguration:
          $ref: '#/components/schemas/UpdateImageGenerationConfiguration_request_ImageGenerationConfiguration'
      type: object
    UpdateMediaStorageConfiguration_request_MediaStorageConfiguration:
      description: "A structure that encapsulates, or contains, the media storage\
        \ configuration properties."
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: 'The Amazon Resource Name (ARN) of the stream '
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaStorageConfigurationStatus'
          - description: The status of the media storage configuration.
      type: object
    UpdateMediaStorageConfiguration_request:
      properties:
        ChannelARN:
          description: The Amazon Resource Name (ARN) of the channel.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        MediaStorageConfiguration:
          $ref: '#/components/schemas/UpdateMediaStorageConfiguration_request_MediaStorageConfiguration'
      required:
      - ChannelARN
      - MediaStorageConfiguration
      type: object
    UpdateNotificationConfiguration_request_NotificationConfiguration_DestinationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationDestinationConfig'
      - description: The destination information required to deliver a notification
          to a customer.
      example:
        Uri: ""
    UpdateNotificationConfiguration_request_NotificationConfiguration:
      description: "The structure that contains the notification information for the\
        \ KVS images delivery. If this parameter is null, the configuration will be\
        \ deleted from the stream."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          - description: Indicates if a notification configuration is enabled or disabled.
        DestinationConfig:
          $ref: '#/components/schemas/UpdateNotificationConfiguration_request_NotificationConfiguration_DestinationConfig'
      type: object
    UpdateNotificationConfiguration_request:
      properties:
        StreamName:
          description: The name of the stream from which to update the notification
            configuration. You must specify either the <code>StreamName</code> or
            the <code>StreamARN</code>.
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from where you want to update the notification configuration. You must
            specify either the <code>StreamName</code> or the <code>StreamARN</code>.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        NotificationConfiguration:
          $ref: '#/components/schemas/UpdateNotificationConfiguration_request_NotificationConfiguration'
      type: object
    UpdateSignalingChannel_request:
      properties:
        ChannelARN:
          description: The Amazon Resource Name (ARN) of the signaling channel that
            you want to update.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        CurrentVersion:
          description: The current version of the signaling channel that you want
            to update.
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9]+"
          type: string
        SingleMasterConfiguration:
          $ref: '#/components/schemas/CreateSignalingChannel_request_SingleMasterConfiguration'
      required:
      - ChannelARN
      - CurrentVersion
      type: object
    UpdateStream_request:
      properties:
        StreamName:
          description: "<p>The name of the stream whose metadata you want to update.</p>\
            \ <p>The stream name is an identifier for the stream, and must be unique\
            \ for each account and region.</p>"
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        StreamARN:
          description: The ARN of the stream whose metadata you want to update.
          maxLength: 1024
          minLength: 1
          pattern: "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+"
          type: string
        CurrentVersion:
          description: The version of the stream whose metadata you want to update.
          maxLength: 64
          minLength: 1
          pattern: "[a-zA-Z0-9]+"
          type: string
        DeviceName:
          description: "<p>The name of the device that is writing to the stream. </p>\
            \ <note> <p> In the current implementation, Kinesis Video Streams does\
            \ not use this name. </p> </note>"
          maxLength: 128
          minLength: 1
          pattern: "[a-zA-Z0-9_.-]+"
          type: string
        MediaType:
          description: "<p>The stream's media type. Use <code>MediaType</code> to\
            \ specify the type of content that the stream contains to the consumers\
            \ of the stream. For more information about media types, see <a href=\"\
            http://www.iana.org/assignments/media-types/media-types.xhtml\">Media\
            \ Types</a>. If you choose to specify the <code>MediaType</code>, see\
            \ <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming Requirements</a>.</p>\
            \ <p>To play video on the console, you must specify the correct video\
            \ type. For example, if the video in the stream is H.264, specify <code>video/h264</code>\
            \ as the <code>MediaType</code>.</p>"
          maxLength: 128
          minLength: 1
          pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\\
            +]+)*"
          type: string
      required:
      - CurrentVersion
      type: object
    DescribeEdgeConfigurationOutput_EdgeConfig:
      allOf:
      - $ref: '#/components/schemas/EdgeConfig'
      - description: A description of the stream's edge configuration that will be
          used to sync with the Edge Agent IoT Greengrass component. The Edge Agent
          component will run on an IoT Hub Device setup at your premise.
      example:
        UploaderConfig:
          ScheduleConfig:
            DurationInSeconds: ""
            ScheduleExpression: ""
        DeletionConfig:
          LocalSizeConfig:
            MaxLocalMediaSizeInMB: ""
            StrategyOnFullSize: ""
          EdgeRetentionInHours: ""
          DeleteAfterUpload: ""
        HubDeviceArn: ""
        RecorderConfig:
          MediaSourceConfig:
            MediaUriSecretArn: ""
            MediaUriType: ""
          ScheduleConfig:
            DurationInSeconds: ""
            ScheduleExpression: ""
    DescribeEdgeConfigurationOutput_EdgeAgentStatus:
      allOf:
      - $ref: '#/components/schemas/EdgeAgentStatus'
      - description: An object that contains the latest status details for an edge
          agent's recorder and uploader jobs. Use this information to determine the
          current health of an edge agent.
      example:
        LastRecorderStatus:
          LastCollectedTime: ""
          RecorderStatus: ""
          LastUpdatedTime: ""
          JobStatusDetails: ""
        LastUploaderStatus:
          UploaderStatus: ""
          LastCollectedTime: ""
          LastUpdatedTime: ""
          JobStatusDetails: ""
    DescribeImageGenerationConfigurationOutput_ImageGenerationConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageGenerationConfiguration'
      - description: "The structure that contains the information required for the\
          \ Kinesis video stream (KVS) images delivery. If this structure is null,\
          \ the configuration will be deleted from the stream."
      example:
        Status: ""
        DestinationConfig:
          DestinationRegion: ""
          Uri: ""
        Format: ""
        FormatConfig: ""
        WidthPixels: ""
        SamplingInterval: ""
        HeightPixels: ""
        ImageSelectorType: ""
    DescribeMediaStorageConfigurationOutput_MediaStorageConfiguration:
      allOf:
      - $ref: '#/components/schemas/MediaStorageConfiguration'
      - description: "A structure that encapsulates, or contains, the media storage\
          \ configuration properties."
      example:
        Status: ""
        StreamARN: ""
    DescribeNotificationConfigurationOutput_NotificationConfiguration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: "The structure that contains the information required for notifications.\
          \ If the structure is null, the configuration will be deleted from the stream."
      example:
        Status: ""
        DestinationConfig:
          Uri: ""
    DescribeSignalingChannelOutput_ChannelInfo:
      allOf:
      - $ref: '#/components/schemas/ChannelInfo'
      - description: A structure that encapsulates the specified signaling channel's
          metadata and properties.
      example:
        ChannelARN: ""
        ChannelName: ""
        Version: ""
        CreationTime: ""
        ChannelStatus: ""
        SingleMasterConfiguration:
          MessageTtlSeconds: ""
        ChannelType: ""
    DescribeStreamOutput_StreamInfo:
      allOf:
      - $ref: '#/components/schemas/StreamInfo'
      - description: An object that describes the stream.
      example:
        Status: ""
        StreamName: ""
        KmsKeyId: ""
        Version: ""
        CreationTime: ""
        MediaType: ""
        StreamARN: ""
        DataRetentionInHours: ""
        DeviceName: ""
    RecorderConfig_MediaSourceConfig:
      allOf:
      - $ref: '#/components/schemas/MediaSourceConfig'
      - description: 'The configuration details that consist of the credentials required
          (<code>MediaUriSecretArn</code> and <code>MediaUriType</code>) to access
          the media files streamed to the camera. '
      example:
        MediaUriSecretArn: ""
        MediaUriType: ""
    RecorderConfig_ScheduleConfig:
      allOf:
      - $ref: '#/components/schemas/ScheduleConfig'
      - description: "The configuration that consists of the <code>ScheduleExpression</code>\
          \ and the <code>DurationInMinutes</code> details that specify the scheduling\
          \ to record from a camera, or local media file, onto the Edge Agent. If\
          \ the <code>ScheduleExpression</code> attribute is not provided, then the\
          \ Edge Agent will always be set to recording mode."
      example:
        DurationInSeconds: ""
        ScheduleExpression: ""
    UploaderConfig_ScheduleConfig:
      allOf:
      - $ref: '#/components/schemas/ScheduleConfig'
      - description: "The configuration that consists of the <code>ScheduleExpression</code>\
          \ and the <code>DurationInMinutes</code> details that specify the scheduling\
          \ to record from a camera, or local media file, onto the Edge Agent. If\
          \ the <code>ScheduleConfig</code> is not provided in this <code>UploaderConfig</code>,\
          \ then the Edge Agent will upload at regular intervals (every 1 hour)."
      example:
        DurationInSeconds: ""
        ScheduleExpression: ""
    DeletionConfig_LocalSizeConfig:
      allOf:
      - $ref: '#/components/schemas/LocalSizeConfig'
      - description: The value of the local size required in order to delete the edge
          configuration.
      example:
        MaxLocalMediaSizeInMB: ""
        StrategyOnFullSize: ""
    ChannelInfo_SingleMasterConfiguration:
      allOf:
      - $ref: '#/components/schemas/SingleMasterConfiguration'
      - description: A structure that contains the configuration for the <code>SINGLE_MASTER</code>
          channel type.
      example:
        MessageTtlSeconds: ""
    CreateSignalingChannelInput_SingleMasterConfiguration:
      allOf:
      - $ref: '#/components/schemas/SingleMasterConfiguration'
      - description: 'A structure containing the configuration for the <code>SINGLE_MASTER</code>
          channel type. '
    EdgeAgentStatus_LastRecorderStatus:
      allOf:
      - $ref: '#/components/schemas/LastRecorderStatus'
      - description: The latest status of a streamâ€™s edge recording job.
      example:
        LastCollectedTime: ""
        RecorderStatus: ""
        LastUpdatedTime: ""
        JobStatusDetails: ""
    EdgeAgentStatus_LastUploaderStatus:
      allOf:
      - $ref: '#/components/schemas/LastUploaderStatus'
      - description: The latest status of a streamâ€™s edge to cloud uploader job.
      example:
        UploaderStatus: ""
        LastCollectedTime: ""
        LastUpdatedTime: ""
        JobStatusDetails: ""
    GetSignalingChannelEndpointInput_SingleMasterChannelEndpointConfiguration:
      allOf:
      - $ref: '#/components/schemas/SingleMasterChannelEndpointConfiguration'
      - description: A structure containing the endpoint configuration for the <code>SINGLE_MASTER</code>
          channel type.
    ListSignalingChannelsInput_ChannelNameCondition:
      allOf:
      - $ref: '#/components/schemas/ChannelNameCondition'
      - description: "Optional: Returns only the channels that satisfy a specific\
          \ condition."
    ListStreamsInput_StreamNameCondition:
      allOf:
      - $ref: '#/components/schemas/StreamNameCondition'
      - description: "Optional: Returns only streams that satisfy a specific condition.\
          \ Currently, you can specify only the prefix of a stream name as a condition. "
    StartEdgeConfigurationUpdateInput_EdgeConfig:
      allOf:
      - $ref: '#/components/schemas/EdgeConfig'
      - description: The edge configuration details required to invoke the update
          process.
    UpdateImageGenerationConfigurationInput_ImageGenerationConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageGenerationConfiguration'
      - description: "The structure that contains the information required for the\
          \ KVS images delivery. If the structure is null, the configuration will\
          \ be deleted from the stream."
    UpdateNotificationConfigurationInput_NotificationConfiguration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: "The structure containing the information required for notifications.\
          \ If the structure is null, the configuration will be deleted from the stream."
    UpdateSignalingChannelInput_SingleMasterConfiguration:
      allOf:
      - $ref: '#/components/schemas/SingleMasterConfiguration'
      - description: 'The structure containing the configuration for the <code>SINGLE_MASTER</code>
          type of the signaling channel that you want to update. '
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

