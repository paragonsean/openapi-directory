/*
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig;
import org.openapitools.client.model.StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig;
import org.openapitools.client.model.StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A description of the stream&#39;s edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:54.410070-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartEdgeConfigurationUpdateRequestEdgeConfig {
  public static final String SERIALIZED_NAME_HUB_DEVICE_ARN = "HubDeviceArn";
  @SerializedName(SERIALIZED_NAME_HUB_DEVICE_ARN)
  private String hubDeviceArn;

  public static final String SERIALIZED_NAME_RECORDER_CONFIG = "RecorderConfig";
  @SerializedName(SERIALIZED_NAME_RECORDER_CONFIG)
  private StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig recorderConfig;

  public static final String SERIALIZED_NAME_UPLOADER_CONFIG = "UploaderConfig";
  @SerializedName(SERIALIZED_NAME_UPLOADER_CONFIG)
  private StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig uploaderConfig;

  public static final String SERIALIZED_NAME_DELETION_CONFIG = "DeletionConfig";
  @SerializedName(SERIALIZED_NAME_DELETION_CONFIG)
  private StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig deletionConfig;

  public StartEdgeConfigurationUpdateRequestEdgeConfig() {
  }

  public StartEdgeConfigurationUpdateRequestEdgeConfig hubDeviceArn(String hubDeviceArn) {
    this.hubDeviceArn = hubDeviceArn;
    return this;
  }

  /**
   * Get hubDeviceArn
   * @return hubDeviceArn
   */
  @javax.annotation.Nullable
  public String getHubDeviceArn() {
    return hubDeviceArn;
  }

  public void setHubDeviceArn(String hubDeviceArn) {
    this.hubDeviceArn = hubDeviceArn;
  }


  public StartEdgeConfigurationUpdateRequestEdgeConfig recorderConfig(StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig recorderConfig) {
    this.recorderConfig = recorderConfig;
    return this;
  }

  /**
   * Get recorderConfig
   * @return recorderConfig
   */
  @javax.annotation.Nullable
  public StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig getRecorderConfig() {
    return recorderConfig;
  }

  public void setRecorderConfig(StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig recorderConfig) {
    this.recorderConfig = recorderConfig;
  }


  public StartEdgeConfigurationUpdateRequestEdgeConfig uploaderConfig(StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig uploaderConfig) {
    this.uploaderConfig = uploaderConfig;
    return this;
  }

  /**
   * Get uploaderConfig
   * @return uploaderConfig
   */
  @javax.annotation.Nullable
  public StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig getUploaderConfig() {
    return uploaderConfig;
  }

  public void setUploaderConfig(StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig uploaderConfig) {
    this.uploaderConfig = uploaderConfig;
  }


  public StartEdgeConfigurationUpdateRequestEdgeConfig deletionConfig(StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig deletionConfig) {
    this.deletionConfig = deletionConfig;
    return this;
  }

  /**
   * Get deletionConfig
   * @return deletionConfig
   */
  @javax.annotation.Nullable
  public StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig getDeletionConfig() {
    return deletionConfig;
  }

  public void setDeletionConfig(StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig deletionConfig) {
    this.deletionConfig = deletionConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartEdgeConfigurationUpdateRequestEdgeConfig startEdgeConfigurationUpdateRequestEdgeConfig = (StartEdgeConfigurationUpdateRequestEdgeConfig) o;
    return Objects.equals(this.hubDeviceArn, startEdgeConfigurationUpdateRequestEdgeConfig.hubDeviceArn) &&
        Objects.equals(this.recorderConfig, startEdgeConfigurationUpdateRequestEdgeConfig.recorderConfig) &&
        Objects.equals(this.uploaderConfig, startEdgeConfigurationUpdateRequestEdgeConfig.uploaderConfig) &&
        Objects.equals(this.deletionConfig, startEdgeConfigurationUpdateRequestEdgeConfig.deletionConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hubDeviceArn, recorderConfig, uploaderConfig, deletionConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartEdgeConfigurationUpdateRequestEdgeConfig {\n");
    sb.append("    hubDeviceArn: ").append(toIndentedString(hubDeviceArn)).append("\n");
    sb.append("    recorderConfig: ").append(toIndentedString(recorderConfig)).append("\n");
    sb.append("    uploaderConfig: ").append(toIndentedString(uploaderConfig)).append("\n");
    sb.append("    deletionConfig: ").append(toIndentedString(deletionConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HubDeviceArn");
    openapiFields.add("RecorderConfig");
    openapiFields.add("UploaderConfig");
    openapiFields.add("DeletionConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartEdgeConfigurationUpdateRequestEdgeConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartEdgeConfigurationUpdateRequestEdgeConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartEdgeConfigurationUpdateRequestEdgeConfig is not found in the empty JSON string", StartEdgeConfigurationUpdateRequestEdgeConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartEdgeConfigurationUpdateRequestEdgeConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartEdgeConfigurationUpdateRequestEdgeConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `HubDeviceArn`
      if (jsonObj.get("HubDeviceArn") != null && !jsonObj.get("HubDeviceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HubDeviceArn"));
      }
      // validate the optional field `RecorderConfig`
      if (jsonObj.get("RecorderConfig") != null && !jsonObj.get("RecorderConfig").isJsonNull()) {
        StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.validateJsonElement(jsonObj.get("RecorderConfig"));
      }
      // validate the optional field `UploaderConfig`
      if (jsonObj.get("UploaderConfig") != null && !jsonObj.get("UploaderConfig").isJsonNull()) {
        StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.validateJsonElement(jsonObj.get("UploaderConfig"));
      }
      // validate the optional field `DeletionConfig`
      if (jsonObj.get("DeletionConfig") != null && !jsonObj.get("DeletionConfig").isJsonNull()) {
        StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig.validateJsonElement(jsonObj.get("DeletionConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartEdgeConfigurationUpdateRequestEdgeConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartEdgeConfigurationUpdateRequestEdgeConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartEdgeConfigurationUpdateRequestEdgeConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartEdgeConfigurationUpdateRequestEdgeConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<StartEdgeConfigurationUpdateRequestEdgeConfig>() {
           @Override
           public void write(JsonWriter out, StartEdgeConfigurationUpdateRequestEdgeConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartEdgeConfigurationUpdateRequestEdgeConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartEdgeConfigurationUpdateRequestEdgeConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartEdgeConfigurationUpdateRequestEdgeConfig
   * @throws IOException if the JSON string is invalid with respect to StartEdgeConfigurationUpdateRequestEdgeConfig
   */
  public static StartEdgeConfigurationUpdateRequestEdgeConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartEdgeConfigurationUpdateRequestEdgeConfig.class);
  }

  /**
   * Convert an instance of StartEdgeConfigurationUpdateRequestEdgeConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

