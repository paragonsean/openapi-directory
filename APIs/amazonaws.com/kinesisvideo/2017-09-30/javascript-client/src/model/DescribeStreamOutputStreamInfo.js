/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';
import StreamInfo from './StreamInfo';

/**
 * The DescribeStreamOutputStreamInfo model module.
 * @module model/DescribeStreamOutputStreamInfo
 * @version 2017-09-30
 */
class DescribeStreamOutputStreamInfo {
    /**
     * Constructs a new <code>DescribeStreamOutputStreamInfo</code>.
     * @alias module:model/DescribeStreamOutputStreamInfo
     * @implements module:model/StreamInfo
     */
    constructor() { 
        StreamInfo.initialize(this);
        DescribeStreamOutputStreamInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeStreamOutputStreamInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeStreamOutputStreamInfo} obj Optional instance to populate.
     * @return {module:model/DescribeStreamOutputStreamInfo} The populated <code>DescribeStreamOutputStreamInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeStreamOutputStreamInfo();
            StreamInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('DeviceName')) {
                obj['DeviceName'] = ApiClient.convertToType(data['DeviceName'], 'String');
            }
            if (data.hasOwnProperty('StreamName')) {
                obj['StreamName'] = ApiClient.convertToType(data['StreamName'], 'String');
            }
            if (data.hasOwnProperty('StreamARN')) {
                obj['StreamARN'] = ApiClient.convertToType(data['StreamARN'], 'String');
            }
            if (data.hasOwnProperty('MediaType')) {
                obj['MediaType'] = ApiClient.convertToType(data['MediaType'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], Status);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('DataRetentionInHours')) {
                obj['DataRetentionInHours'] = ApiClient.convertToType(data['DataRetentionInHours'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeStreamOutputStreamInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeStreamOutputStreamInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DeviceName`
        if (data['DeviceName']) { // data not null
          String.validateJSON(data['DeviceName']);
        }
        // validate the optional field `StreamName`
        if (data['StreamName']) { // data not null
          String.validateJSON(data['StreamName']);
        }
        // validate the optional field `StreamARN`
        if (data['StreamARN']) { // data not null
          String.validateJSON(data['StreamARN']);
        }
        // validate the optional field `MediaType`
        if (data['MediaType']) { // data not null
          String.validateJSON(data['MediaType']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          String.validateJSON(data['Version']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          Status.validateJSON(data['Status']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `DataRetentionInHours`
        if (data['DataRetentionInHours']) { // data not null
          Number.validateJSON(data['DataRetentionInHours']);
        }

        return true;
    }


}



/**
 * @member {String} DeviceName
 */
DescribeStreamOutputStreamInfo.prototype['DeviceName'] = undefined;

/**
 * @member {String} StreamName
 */
DescribeStreamOutputStreamInfo.prototype['StreamName'] = undefined;

/**
 * @member {String} StreamARN
 */
DescribeStreamOutputStreamInfo.prototype['StreamARN'] = undefined;

/**
 * @member {String} MediaType
 */
DescribeStreamOutputStreamInfo.prototype['MediaType'] = undefined;

/**
 * @member {String} KmsKeyId
 */
DescribeStreamOutputStreamInfo.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} Version
 */
DescribeStreamOutputStreamInfo.prototype['Version'] = undefined;

/**
 * @member {module:model/Status} Status
 */
DescribeStreamOutputStreamInfo.prototype['Status'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeStreamOutputStreamInfo.prototype['CreationTime'] = undefined;

/**
 * @member {Number} DataRetentionInHours
 */
DescribeStreamOutputStreamInfo.prototype['DataRetentionInHours'] = undefined;


// Implement StreamInfo interface:
/**
 * @member {String} DeviceName
 */
StreamInfo.prototype['DeviceName'] = undefined;
/**
 * @member {String} StreamName
 */
StreamInfo.prototype['StreamName'] = undefined;
/**
 * @member {String} StreamARN
 */
StreamInfo.prototype['StreamARN'] = undefined;
/**
 * @member {String} MediaType
 */
StreamInfo.prototype['MediaType'] = undefined;
/**
 * @member {String} KmsKeyId
 */
StreamInfo.prototype['KmsKeyId'] = undefined;
/**
 * @member {String} Version
 */
StreamInfo.prototype['Version'] = undefined;
/**
 * @member {module:model/Status} Status
 */
StreamInfo.prototype['Status'] = undefined;
/**
 * @member {Date} CreationTime
 */
StreamInfo.prototype['CreationTime'] = undefined;
/**
 * @member {Number} DataRetentionInHours
 */
StreamInfo.prototype['DataRetentionInHours'] = undefined;




export default DescribeStreamOutputStreamInfo;

