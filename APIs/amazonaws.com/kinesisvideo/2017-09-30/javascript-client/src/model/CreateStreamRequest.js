/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateStreamRequest model module.
 * @module model/CreateStreamRequest
 * @version 2017-09-30
 */
class CreateStreamRequest {
    /**
     * Constructs a new <code>CreateStreamRequest</code>.
     * @alias module:model/CreateStreamRequest
     * @param streamName {String} <p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>
     */
    constructor(streamName) { 
        
        CreateStreamRequest.initialize(this, streamName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streamName) { 
        obj['StreamName'] = streamName;
    }

    /**
     * Constructs a <code>CreateStreamRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStreamRequest} obj Optional instance to populate.
     * @return {module:model/CreateStreamRequest} The populated <code>CreateStreamRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStreamRequest();

            if (data.hasOwnProperty('DeviceName')) {
                obj['DeviceName'] = ApiClient.convertToType(data['DeviceName'], 'String');
            }
            if (data.hasOwnProperty('StreamName')) {
                obj['StreamName'] = ApiClient.convertToType(data['StreamName'], 'String');
            }
            if (data.hasOwnProperty('MediaType')) {
                obj['MediaType'] = ApiClient.convertToType(data['MediaType'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('DataRetentionInHours')) {
                obj['DataRetentionInHours'] = ApiClient.convertToType(data['DataRetentionInHours'], 'Number');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStreamRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStreamRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateStreamRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DeviceName'] && !(typeof data['DeviceName'] === 'string' || data['DeviceName'] instanceof String)) {
            throw new Error("Expected the field `DeviceName` to be a primitive type in the JSON string but got " + data['DeviceName']);
        }
        // ensure the json data is a string
        if (data['StreamName'] && !(typeof data['StreamName'] === 'string' || data['StreamName'] instanceof String)) {
            throw new Error("Expected the field `StreamName` to be a primitive type in the JSON string but got " + data['StreamName']);
        }
        // ensure the json data is a string
        if (data['MediaType'] && !(typeof data['MediaType'] === 'string' || data['MediaType'] instanceof String)) {
            throw new Error("Expected the field `MediaType` to be a primitive type in the JSON string but got " + data['MediaType']);
        }
        // ensure the json data is a string
        if (data['KmsKeyId'] && !(typeof data['KmsKeyId'] === 'string' || data['KmsKeyId'] instanceof String)) {
            throw new Error("Expected the field `KmsKeyId` to be a primitive type in the JSON string but got " + data['KmsKeyId']);
        }

        return true;
    }


}

CreateStreamRequest.RequiredProperties = ["StreamName"];

/**
 * <p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>
 * @member {String} DeviceName
 */
CreateStreamRequest.prototype['DeviceName'] = undefined;

/**
 * <p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>
 * @member {String} StreamName
 */
CreateStreamRequest.prototype['StreamName'] = undefined;

/**
 * <p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming Requirements</a> for guidelines.</p> <p>Example valid values include \"video/h264\" and \"video/h264,audio/aac\".</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>
 * @member {String} MediaType
 */
CreateStreamRequest.prototype['MediaType'] = undefined;

/**
 * <p>The ID of the Key Management Service (KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>Amazon Web Services/kinesisvideo</code>) is used.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">DescribeKey</a>. </p>
 * @member {String} KmsKeyId
 */
CreateStreamRequest.prototype['KmsKeyId'] = undefined;

/**
 * <p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>
 * @member {Number} DataRetentionInHours
 */
CreateStreamRequest.prototype['DataRetentionInHours'] = undefined;

/**
 * A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
 * @member {Object.<String, String>} Tags
 */
CreateStreamRequest.prototype['Tags'] = undefined;






export default CreateStreamRequest;

