/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSignalingChannelRequestSingleMasterConfiguration from './CreateSignalingChannelRequestSingleMasterConfiguration';
import Tag from './Tag';

/**
 * The CreateSignalingChannelRequest model module.
 * @module model/CreateSignalingChannelRequest
 * @version 2017-09-30
 */
class CreateSignalingChannelRequest {
    /**
     * Constructs a new <code>CreateSignalingChannelRequest</code>.
     * @alias module:model/CreateSignalingChannelRequest
     * @param channelName {String} A name for the signaling channel that you are creating. It must be unique for each Amazon Web Services account and Amazon Web Services Region.
     */
    constructor(channelName) { 
        
        CreateSignalingChannelRequest.initialize(this, channelName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelName) { 
        obj['ChannelName'] = channelName;
    }

    /**
     * Constructs a <code>CreateSignalingChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSignalingChannelRequest} obj Optional instance to populate.
     * @return {module:model/CreateSignalingChannelRequest} The populated <code>CreateSignalingChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSignalingChannelRequest();

            if (data.hasOwnProperty('ChannelName')) {
                obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
            }
            if (data.hasOwnProperty('ChannelType')) {
                obj['ChannelType'] = ApiClient.convertToType(data['ChannelType'], 'String');
            }
            if (data.hasOwnProperty('SingleMasterConfiguration')) {
                obj['SingleMasterConfiguration'] = CreateSignalingChannelRequestSingleMasterConfiguration.constructFromObject(data['SingleMasterConfiguration']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSignalingChannelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSignalingChannelRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSignalingChannelRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ChannelName'] && !(typeof data['ChannelName'] === 'string' || data['ChannelName'] instanceof String)) {
            throw new Error("Expected the field `ChannelName` to be a primitive type in the JSON string but got " + data['ChannelName']);
        }
        // ensure the json data is a string
        if (data['ChannelType'] && !(typeof data['ChannelType'] === 'string' || data['ChannelType'] instanceof String)) {
            throw new Error("Expected the field `ChannelType` to be a primitive type in the JSON string but got " + data['ChannelType']);
        }
        // validate the optional field `SingleMasterConfiguration`
        if (data['SingleMasterConfiguration']) { // data not null
          CreateSignalingChannelRequestSingleMasterConfiguration.validateJSON(data['SingleMasterConfiguration']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

CreateSignalingChannelRequest.RequiredProperties = ["ChannelName"];

/**
 * A name for the signaling channel that you are creating. It must be unique for each Amazon Web Services account and Amazon Web Services Region.
 * @member {String} ChannelName
 */
CreateSignalingChannelRequest.prototype['ChannelName'] = undefined;

/**
 * A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code> is the only supported channel type. 
 * @member {module:model/CreateSignalingChannelRequest.ChannelTypeEnum} ChannelType
 */
CreateSignalingChannelRequest.prototype['ChannelType'] = undefined;

/**
 * @member {module:model/CreateSignalingChannelRequestSingleMasterConfiguration} SingleMasterConfiguration
 */
CreateSignalingChannelRequest.prototype['SingleMasterConfiguration'] = undefined;

/**
 * A set of tags (key-value pairs) that you want to associate with this channel.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateSignalingChannelRequest.prototype['Tags'] = undefined;





/**
 * Allowed values for the <code>ChannelType</code> property.
 * @enum {String}
 * @readonly
 */
CreateSignalingChannelRequest['ChannelTypeEnum'] = {

    /**
     * value: "SINGLE_MASTER"
     * @const
     */
    "SINGLE_MASTER": "SINGLE_MASTER",

    /**
     * value: "FULL_MESH"
     * @const
     */
    "FULL_MESH": "FULL_MESH"
};



export default CreateSignalingChannelRequest;

