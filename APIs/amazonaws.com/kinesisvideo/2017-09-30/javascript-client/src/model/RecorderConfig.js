/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecorderConfigMediaSourceConfig from './RecorderConfigMediaSourceConfig';
import RecorderConfigScheduleConfig from './RecorderConfigScheduleConfig';

/**
 * The RecorderConfig model module.
 * @module model/RecorderConfig
 * @version 2017-09-30
 */
class RecorderConfig {
    /**
     * Constructs a new <code>RecorderConfig</code>.
     * The recorder configuration consists of the local &lt;code&gt;MediaSourceConfig&lt;/code&gt; details that are used as credentials to accesss the local media files streamed on the camera. 
     * @alias module:model/RecorderConfig
     * @param mediaSourceConfig {module:model/RecorderConfigMediaSourceConfig} 
     */
    constructor(mediaSourceConfig) { 
        
        RecorderConfig.initialize(this, mediaSourceConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mediaSourceConfig) { 
        obj['MediaSourceConfig'] = mediaSourceConfig;
    }

    /**
     * Constructs a <code>RecorderConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecorderConfig} obj Optional instance to populate.
     * @return {module:model/RecorderConfig} The populated <code>RecorderConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecorderConfig();

            if (data.hasOwnProperty('MediaSourceConfig')) {
                obj['MediaSourceConfig'] = RecorderConfigMediaSourceConfig.constructFromObject(data['MediaSourceConfig']);
            }
            if (data.hasOwnProperty('ScheduleConfig')) {
                obj['ScheduleConfig'] = RecorderConfigScheduleConfig.constructFromObject(data['ScheduleConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecorderConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecorderConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RecorderConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MediaSourceConfig`
        if (data['MediaSourceConfig']) { // data not null
          RecorderConfigMediaSourceConfig.validateJSON(data['MediaSourceConfig']);
        }
        // validate the optional field `ScheduleConfig`
        if (data['ScheduleConfig']) { // data not null
          RecorderConfigScheduleConfig.validateJSON(data['ScheduleConfig']);
        }

        return true;
    }


}

RecorderConfig.RequiredProperties = ["MediaSourceConfig"];

/**
 * @member {module:model/RecorderConfigMediaSourceConfig} MediaSourceConfig
 */
RecorderConfig.prototype['MediaSourceConfig'] = undefined;

/**
 * @member {module:model/RecorderConfigScheduleConfig} ScheduleConfig
 */
RecorderConfig.prototype['ScheduleConfig'] = undefined;






export default RecorderConfig;

