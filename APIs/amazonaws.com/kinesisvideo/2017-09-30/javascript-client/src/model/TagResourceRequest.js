/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tag from './Tag';

/**
 * The TagResourceRequest model module.
 * @module model/TagResourceRequest
 * @version 2017-09-30
 */
class TagResourceRequest {
    /**
     * Constructs a new <code>TagResourceRequest</code>.
     * @alias module:model/TagResourceRequest
     * @param resourceARN {String} The Amazon Resource Name (ARN) of the signaling channel to which you want to add tags.
     * @param tags {Array.<module:model/Tag>} A list of tags to associate with the specified signaling channel. Each tag is a key-value pair.
     */
    constructor(resourceARN, tags) { 
        
        TagResourceRequest.initialize(this, resourceARN, tags);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceARN, tags) { 
        obj['ResourceARN'] = resourceARN;
        obj['Tags'] = tags;
    }

    /**
     * Constructs a <code>TagResourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TagResourceRequest} obj Optional instance to populate.
     * @return {module:model/TagResourceRequest} The populated <code>TagResourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagResourceRequest();

            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagResourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagResourceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TagResourceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ResourceARN'] && !(typeof data['ResourceARN'] === 'string' || data['ResourceARN'] instanceof String)) {
            throw new Error("Expected the field `ResourceARN` to be a primitive type in the JSON string but got " + data['ResourceARN']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

TagResourceRequest.RequiredProperties = ["ResourceARN", "Tags"];

/**
 * The Amazon Resource Name (ARN) of the signaling channel to which you want to add tags.
 * @member {String} ResourceARN
 */
TagResourceRequest.prototype['ResourceARN'] = undefined;

/**
 * A list of tags to associate with the specified signaling channel. Each tag is a key-value pair.
 * @member {Array.<module:model/Tag>} Tags
 */
TagResourceRequest.prototype['Tags'] = undefined;






export default TagResourceRequest;

