/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MediaUriType from './MediaUriType';

/**
 * The MediaSourceConfig model module.
 * @module model/MediaSourceConfig
 * @version 2017-09-30
 */
class MediaSourceConfig {
    /**
     * Constructs a new <code>MediaSourceConfig</code>.
     * The configuration details that consist of the credentials required (&lt;code&gt;MediaUriSecretArn&lt;/code&gt; and &lt;code&gt;MediaUriType&lt;/code&gt;) to access the media files that are streamed to the camera.
     * @alias module:model/MediaSourceConfig
     * @param mediaUriSecretArn {String} 
     * @param mediaUriType {module:model/MediaUriType} 
     */
    constructor(mediaUriSecretArn, mediaUriType) { 
        
        MediaSourceConfig.initialize(this, mediaUriSecretArn, mediaUriType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mediaUriSecretArn, mediaUriType) { 
        obj['MediaUriSecretArn'] = mediaUriSecretArn;
        obj['MediaUriType'] = mediaUriType;
    }

    /**
     * Constructs a <code>MediaSourceConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MediaSourceConfig} obj Optional instance to populate.
     * @return {module:model/MediaSourceConfig} The populated <code>MediaSourceConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaSourceConfig();

            if (data.hasOwnProperty('MediaUriSecretArn')) {
                obj['MediaUriSecretArn'] = ApiClient.convertToType(data['MediaUriSecretArn'], 'String');
            }
            if (data.hasOwnProperty('MediaUriType')) {
                obj['MediaUriType'] = ApiClient.convertToType(data['MediaUriType'], MediaUriType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaSourceConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaSourceConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MediaSourceConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MediaUriSecretArn`
        if (data['MediaUriSecretArn']) { // data not null
          String.validateJSON(data['MediaUriSecretArn']);
        }
        // validate the optional field `MediaUriType`
        if (data['MediaUriType']) { // data not null
          MediaUriType.validateJSON(data['MediaUriType']);
        }

        return true;
    }


}

MediaSourceConfig.RequiredProperties = ["MediaUriSecretArn", "MediaUriType"];

/**
 * @member {String} MediaUriSecretArn
 */
MediaSourceConfig.prototype['MediaUriSecretArn'] = undefined;

/**
 * @member {module:model/MediaUriType} MediaUriType
 */
MediaSourceConfig.prototype['MediaUriType'] = undefined;






export default MediaSourceConfig;

