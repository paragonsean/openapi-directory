/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ListStreamsRequestStreamNameCondition from './ListStreamsRequestStreamNameCondition';

/**
 * The ListStreamsRequest model module.
 * @module model/ListStreamsRequest
 * @version 2017-09-30
 */
class ListStreamsRequest {
    /**
     * Constructs a new <code>ListStreamsRequest</code>.
     * @alias module:model/ListStreamsRequest
     */
    constructor() { 
        
        ListStreamsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListStreamsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListStreamsRequest} obj Optional instance to populate.
     * @return {module:model/ListStreamsRequest} The populated <code>ListStreamsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListStreamsRequest();

            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('StreamNameCondition')) {
                obj['StreamNameCondition'] = ListStreamsRequestStreamNameCondition.constructFromObject(data['StreamNameCondition']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListStreamsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListStreamsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }
        // validate the optional field `StreamNameCondition`
        if (data['StreamNameCondition']) { // data not null
          ListStreamsRequestStreamNameCondition.validateJSON(data['StreamNameCondition']);
        }

        return true;
    }


}



/**
 * The maximum number of streams to return in the response. The default is 10,000.
 * @member {Number} MaxResults
 */
ListStreamsRequest.prototype['MaxResults'] = undefined;

/**
 * If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.
 * @member {String} NextToken
 */
ListStreamsRequest.prototype['NextToken'] = undefined;

/**
 * @member {module:model/ListStreamsRequestStreamNameCondition} StreamNameCondition
 */
ListStreamsRequest.prototype['StreamNameCondition'] = undefined;






export default ListStreamsRequest;

