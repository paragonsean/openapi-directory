/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateDataRetentionRequest model module.
 * @module model/UpdateDataRetentionRequest
 * @version 2017-09-30
 */
class UpdateDataRetentionRequest {
    /**
     * Constructs a new <code>UpdateDataRetentionRequest</code>.
     * @alias module:model/UpdateDataRetentionRequest
     * @param currentVersion {String} The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.
     * @param operation {module:model/UpdateDataRetentionRequest.OperationEnum} Indicates whether you want to increase or decrease the retention period.
     * @param dataRetentionChangeInHours {Number} The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).
     */
    constructor(currentVersion, operation, dataRetentionChangeInHours) { 
        
        UpdateDataRetentionRequest.initialize(this, currentVersion, operation, dataRetentionChangeInHours);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currentVersion, operation, dataRetentionChangeInHours) { 
        obj['CurrentVersion'] = currentVersion;
        obj['Operation'] = operation;
        obj['DataRetentionChangeInHours'] = dataRetentionChangeInHours;
    }

    /**
     * Constructs a <code>UpdateDataRetentionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDataRetentionRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDataRetentionRequest} The populated <code>UpdateDataRetentionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDataRetentionRequest();

            if (data.hasOwnProperty('StreamName')) {
                obj['StreamName'] = ApiClient.convertToType(data['StreamName'], 'String');
            }
            if (data.hasOwnProperty('StreamARN')) {
                obj['StreamARN'] = ApiClient.convertToType(data['StreamARN'], 'String');
            }
            if (data.hasOwnProperty('CurrentVersion')) {
                obj['CurrentVersion'] = ApiClient.convertToType(data['CurrentVersion'], 'String');
            }
            if (data.hasOwnProperty('Operation')) {
                obj['Operation'] = ApiClient.convertToType(data['Operation'], 'String');
            }
            if (data.hasOwnProperty('DataRetentionChangeInHours')) {
                obj['DataRetentionChangeInHours'] = ApiClient.convertToType(data['DataRetentionChangeInHours'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDataRetentionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDataRetentionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateDataRetentionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['StreamName'] && !(typeof data['StreamName'] === 'string' || data['StreamName'] instanceof String)) {
            throw new Error("Expected the field `StreamName` to be a primitive type in the JSON string but got " + data['StreamName']);
        }
        // ensure the json data is a string
        if (data['StreamARN'] && !(typeof data['StreamARN'] === 'string' || data['StreamARN'] instanceof String)) {
            throw new Error("Expected the field `StreamARN` to be a primitive type in the JSON string but got " + data['StreamARN']);
        }
        // ensure the json data is a string
        if (data['CurrentVersion'] && !(typeof data['CurrentVersion'] === 'string' || data['CurrentVersion'] instanceof String)) {
            throw new Error("Expected the field `CurrentVersion` to be a primitive type in the JSON string but got " + data['CurrentVersion']);
        }
        // ensure the json data is a string
        if (data['Operation'] && !(typeof data['Operation'] === 'string' || data['Operation'] instanceof String)) {
            throw new Error("Expected the field `Operation` to be a primitive type in the JSON string but got " + data['Operation']);
        }

        return true;
    }


}

UpdateDataRetentionRequest.RequiredProperties = ["CurrentVersion", "Operation", "DataRetentionChangeInHours"];

/**
 * The name of the stream whose retention period you want to change.
 * @member {String} StreamName
 */
UpdateDataRetentionRequest.prototype['StreamName'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
 * @member {String} StreamARN
 */
UpdateDataRetentionRequest.prototype['StreamARN'] = undefined;

/**
 * The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.
 * @member {String} CurrentVersion
 */
UpdateDataRetentionRequest.prototype['CurrentVersion'] = undefined;

/**
 * Indicates whether you want to increase or decrease the retention period.
 * @member {module:model/UpdateDataRetentionRequest.OperationEnum} Operation
 */
UpdateDataRetentionRequest.prototype['Operation'] = undefined;

/**
 * The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).
 * @member {Number} DataRetentionChangeInHours
 */
UpdateDataRetentionRequest.prototype['DataRetentionChangeInHours'] = undefined;





/**
 * Allowed values for the <code>Operation</code> property.
 * @enum {String}
 * @readonly
 */
UpdateDataRetentionRequest['OperationEnum'] = {

    /**
     * value: "INCREASE_DATA_RETENTION"
     * @const
     */
    "INCREASE_DATA_RETENTION": "INCREASE_DATA_RETENTION",

    /**
     * value: "DECREASE_DATA_RETENTION"
     * @const
     */
    "DECREASE_DATA_RETENTION": "DECREASE_DATA_RETENTION"
};



export default UpdateDataRetentionRequest;

