/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DescribeSignalingChannelRequest model module.
 * @module model/DescribeSignalingChannelRequest
 * @version 2017-09-30
 */
class DescribeSignalingChannelRequest {
    /**
     * Constructs a new <code>DescribeSignalingChannelRequest</code>.
     * @alias module:model/DescribeSignalingChannelRequest
     */
    constructor() { 
        
        DescribeSignalingChannelRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeSignalingChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeSignalingChannelRequest} obj Optional instance to populate.
     * @return {module:model/DescribeSignalingChannelRequest} The populated <code>DescribeSignalingChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeSignalingChannelRequest();

            if (data.hasOwnProperty('ChannelName')) {
                obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
            }
            if (data.hasOwnProperty('ChannelARN')) {
                obj['ChannelARN'] = ApiClient.convertToType(data['ChannelARN'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeSignalingChannelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeSignalingChannelRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ChannelName'] && !(typeof data['ChannelName'] === 'string' || data['ChannelName'] instanceof String)) {
            throw new Error("Expected the field `ChannelName` to be a primitive type in the JSON string but got " + data['ChannelName']);
        }
        // ensure the json data is a string
        if (data['ChannelARN'] && !(typeof data['ChannelARN'] === 'string' || data['ChannelARN'] instanceof String)) {
            throw new Error("Expected the field `ChannelARN` to be a primitive type in the JSON string but got " + data['ChannelARN']);
        }

        return true;
    }


}



/**
 * The name of the signaling channel that you want to describe.
 * @member {String} ChannelName
 */
DescribeSignalingChannelRequest.prototype['ChannelName'] = undefined;

/**
 * The ARN of the signaling channel that you want to describe.
 * @member {String} ChannelARN
 */
DescribeSignalingChannelRequest.prototype['ChannelARN'] = undefined;






export default DescribeSignalingChannelRequest;

