/**
 * Amazon Kinesis Video Streams
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UntagResourceRequest model module.
 * @module model/UntagResourceRequest
 * @version 2017-09-30
 */
class UntagResourceRequest {
    /**
     * Constructs a new <code>UntagResourceRequest</code>.
     * @alias module:model/UntagResourceRequest
     * @param resourceARN {String} The Amazon Resource Name (ARN) of the signaling channel from which you want to remove tags.
     * @param tagKeyList {Array.<String>} A list of the keys of the tags that you want to remove.
     */
    constructor(resourceARN, tagKeyList) { 
        
        UntagResourceRequest.initialize(this, resourceARN, tagKeyList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceARN, tagKeyList) { 
        obj['ResourceARN'] = resourceARN;
        obj['TagKeyList'] = tagKeyList;
    }

    /**
     * Constructs a <code>UntagResourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UntagResourceRequest} obj Optional instance to populate.
     * @return {module:model/UntagResourceRequest} The populated <code>UntagResourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UntagResourceRequest();

            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('TagKeyList')) {
                obj['TagKeyList'] = ApiClient.convertToType(data['TagKeyList'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UntagResourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UntagResourceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UntagResourceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ResourceARN'] && !(typeof data['ResourceARN'] === 'string' || data['ResourceARN'] instanceof String)) {
            throw new Error("Expected the field `ResourceARN` to be a primitive type in the JSON string but got " + data['ResourceARN']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['TagKeyList'])) {
            throw new Error("Expected the field `TagKeyList` to be an array in the JSON data but got " + data['TagKeyList']);
        }

        return true;
    }


}

UntagResourceRequest.RequiredProperties = ["ResourceARN", "TagKeyList"];

/**
 * The Amazon Resource Name (ARN) of the signaling channel from which you want to remove tags.
 * @member {String} ResourceARN
 */
UntagResourceRequest.prototype['ResourceARN'] = undefined;

/**
 * A list of the keys of the tags that you want to remove.
 * @member {Array.<String>} TagKeyList
 */
UntagResourceRequest.prototype['TagKeyList'] = undefined;






export default UntagResourceRequest;

