# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.uploader_config_schedule_config import UploaderConfigScheduleConfig
from openapi_server import util


class StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_config: UploaderConfigScheduleConfig=None):
        """StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig - a model defined in OpenAPI

        :param schedule_config: The schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.
        """
        self.openapi_types = {
            'schedule_config': UploaderConfigScheduleConfig
        }

        self.attribute_map = {
            'schedule_config': 'ScheduleConfig'
        }

        self._schedule_config = schedule_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartEdgeConfigurationUpdate_request_EdgeConfig_UploaderConfig of this StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_config(self):
        """Gets the schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.


        :return: The schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.
        :rtype: UploaderConfigScheduleConfig
        """
        return self._schedule_config

    @schedule_config.setter
    def schedule_config(self, schedule_config):
        """Sets the schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.


        :param schedule_config: The schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig.
        :type schedule_config: UploaderConfigScheduleConfig
        """
        if schedule_config is None:
            raise ValueError("Invalid value for `schedule_config`, must not be `None`")

        self._schedule_config = schedule_config
