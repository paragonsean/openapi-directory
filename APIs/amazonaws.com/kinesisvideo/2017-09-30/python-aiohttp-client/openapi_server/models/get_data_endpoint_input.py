# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_name import APIName
from openapi_server import util


class GetDataEndpointInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_name: str=None, stream_arn: str=None, api_name: APIName=None):
        """GetDataEndpointInput - a model defined in OpenAPI

        :param stream_name: The stream_name of this GetDataEndpointInput.
        :param stream_arn: The stream_arn of this GetDataEndpointInput.
        :param api_name: The api_name of this GetDataEndpointInput.
        """
        self.openapi_types = {
            'stream_name': str,
            'stream_arn': str,
            'api_name': APIName
        }

        self.attribute_map = {
            'stream_name': 'StreamName',
            'stream_arn': 'StreamARN',
            'api_name': 'APIName'
        }

        self._stream_name = stream_name
        self._stream_arn = stream_arn
        self._api_name = api_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDataEndpointInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDataEndpointInput of this GetDataEndpointInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_name(self):
        """Gets the stream_name of this GetDataEndpointInput.


        :return: The stream_name of this GetDataEndpointInput.
        :rtype: str
        """
        return self._stream_name

    @stream_name.setter
    def stream_name(self, stream_name):
        """Sets the stream_name of this GetDataEndpointInput.


        :param stream_name: The stream_name of this GetDataEndpointInput.
        :type stream_name: str
        """

        self._stream_name = stream_name

    @property
    def stream_arn(self):
        """Gets the stream_arn of this GetDataEndpointInput.


        :return: The stream_arn of this GetDataEndpointInput.
        :rtype: str
        """
        return self._stream_arn

    @stream_arn.setter
    def stream_arn(self, stream_arn):
        """Sets the stream_arn of this GetDataEndpointInput.


        :param stream_arn: The stream_arn of this GetDataEndpointInput.
        :type stream_arn: str
        """

        self._stream_arn = stream_arn

    @property
    def api_name(self):
        """Gets the api_name of this GetDataEndpointInput.


        :return: The api_name of this GetDataEndpointInput.
        :rtype: APIName
        """
        return self._api_name

    @api_name.setter
    def api_name(self, api_name):
        """Sets the api_name of this GetDataEndpointInput.


        :param api_name: The api_name of this GetDataEndpointInput.
        :type api_name: APIName
        """
        if api_name is None:
            raise ValueError("Invalid value for `api_name`, must not be `None`")

        self._api_name = api_name
