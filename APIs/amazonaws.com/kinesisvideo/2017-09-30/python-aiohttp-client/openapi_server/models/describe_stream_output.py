# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_stream_output_stream_info import DescribeStreamOutputStreamInfo
from openapi_server import util


class DescribeStreamOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_info: DescribeStreamOutputStreamInfo=None):
        """DescribeStreamOutput - a model defined in OpenAPI

        :param stream_info: The stream_info of this DescribeStreamOutput.
        """
        self.openapi_types = {
            'stream_info': DescribeStreamOutputStreamInfo
        }

        self.attribute_map = {
            'stream_info': 'StreamInfo'
        }

        self._stream_info = stream_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStreamOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStreamOutput of this DescribeStreamOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_info(self):
        """Gets the stream_info of this DescribeStreamOutput.


        :return: The stream_info of this DescribeStreamOutput.
        :rtype: DescribeStreamOutputStreamInfo
        """
        return self._stream_info

    @stream_info.setter
    def stream_info(self, stream_info):
        """Sets the stream_info of this DescribeStreamOutput.


        :param stream_info: The stream_info of this DescribeStreamOutput.
        :type stream_info: DescribeStreamOutputStreamInfo
        """

        self._stream_info = stream_info
