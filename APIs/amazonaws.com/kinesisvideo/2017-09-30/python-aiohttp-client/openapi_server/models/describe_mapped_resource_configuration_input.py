# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeMappedResourceConfigurationInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_name: str=None, stream_arn: str=None, max_results: int=None, next_token: str=None):
        """DescribeMappedResourceConfigurationInput - a model defined in OpenAPI

        :param stream_name: The stream_name of this DescribeMappedResourceConfigurationInput.
        :param stream_arn: The stream_arn of this DescribeMappedResourceConfigurationInput.
        :param max_results: The max_results of this DescribeMappedResourceConfigurationInput.
        :param next_token: The next_token of this DescribeMappedResourceConfigurationInput.
        """
        self.openapi_types = {
            'stream_name': str,
            'stream_arn': str,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'stream_name': 'StreamName',
            'stream_arn': 'StreamARN',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._stream_name = stream_name
        self._stream_arn = stream_arn
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeMappedResourceConfigurationInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeMappedResourceConfigurationInput of this DescribeMappedResourceConfigurationInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_name(self):
        """Gets the stream_name of this DescribeMappedResourceConfigurationInput.


        :return: The stream_name of this DescribeMappedResourceConfigurationInput.
        :rtype: str
        """
        return self._stream_name

    @stream_name.setter
    def stream_name(self, stream_name):
        """Sets the stream_name of this DescribeMappedResourceConfigurationInput.


        :param stream_name: The stream_name of this DescribeMappedResourceConfigurationInput.
        :type stream_name: str
        """

        self._stream_name = stream_name

    @property
    def stream_arn(self):
        """Gets the stream_arn of this DescribeMappedResourceConfigurationInput.


        :return: The stream_arn of this DescribeMappedResourceConfigurationInput.
        :rtype: str
        """
        return self._stream_arn

    @stream_arn.setter
    def stream_arn(self, stream_arn):
        """Sets the stream_arn of this DescribeMappedResourceConfigurationInput.


        :param stream_arn: The stream_arn of this DescribeMappedResourceConfigurationInput.
        :type stream_arn: str
        """

        self._stream_arn = stream_arn

    @property
    def max_results(self):
        """Gets the max_results of this DescribeMappedResourceConfigurationInput.


        :return: The max_results of this DescribeMappedResourceConfigurationInput.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeMappedResourceConfigurationInput.


        :param max_results: The max_results of this DescribeMappedResourceConfigurationInput.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeMappedResourceConfigurationInput.


        :return: The next_token of this DescribeMappedResourceConfigurationInput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeMappedResourceConfigurationInput.


        :param next_token: The next_token of this DescribeMappedResourceConfigurationInput.
        :type next_token: str
        """

        self._next_token = next_token
