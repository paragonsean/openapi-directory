# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSignalingChannelInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_name: str=None, channel_arn: str=None):
        """DescribeSignalingChannelInput - a model defined in OpenAPI

        :param channel_name: The channel_name of this DescribeSignalingChannelInput.
        :param channel_arn: The channel_arn of this DescribeSignalingChannelInput.
        """
        self.openapi_types = {
            'channel_name': str,
            'channel_arn': str
        }

        self.attribute_map = {
            'channel_name': 'ChannelName',
            'channel_arn': 'ChannelARN'
        }

        self._channel_name = channel_name
        self._channel_arn = channel_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSignalingChannelInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSignalingChannelInput of this DescribeSignalingChannelInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_name(self):
        """Gets the channel_name of this DescribeSignalingChannelInput.


        :return: The channel_name of this DescribeSignalingChannelInput.
        :rtype: str
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this DescribeSignalingChannelInput.


        :param channel_name: The channel_name of this DescribeSignalingChannelInput.
        :type channel_name: str
        """

        self._channel_name = channel_name

    @property
    def channel_arn(self):
        """Gets the channel_arn of this DescribeSignalingChannelInput.


        :return: The channel_arn of this DescribeSignalingChannelInput.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this DescribeSignalingChannelInput.


        :param channel_arn: The channel_arn of this DescribeSignalingChannelInput.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn
