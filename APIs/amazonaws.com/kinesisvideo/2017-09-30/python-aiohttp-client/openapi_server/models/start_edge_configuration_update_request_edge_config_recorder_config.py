# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recorder_config_media_source_config import RecorderConfigMediaSourceConfig
from openapi_server.models.recorder_config_schedule_config import RecorderConfigScheduleConfig
from openapi_server import util


class StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_source_config: RecorderConfigMediaSourceConfig=None, schedule_config: RecorderConfigScheduleConfig=None):
        """StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig - a model defined in OpenAPI

        :param media_source_config: The media_source_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        :param schedule_config: The schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        """
        self.openapi_types = {
            'media_source_config': RecorderConfigMediaSourceConfig,
            'schedule_config': RecorderConfigScheduleConfig
        }

        self.attribute_map = {
            'media_source_config': 'MediaSourceConfig',
            'schedule_config': 'ScheduleConfig'
        }

        self._media_source_config = media_source_config
        self._schedule_config = schedule_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartEdgeConfigurationUpdate_request_EdgeConfig_RecorderConfig of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_source_config(self):
        """Gets the media_source_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.


        :return: The media_source_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        :rtype: RecorderConfigMediaSourceConfig
        """
        return self._media_source_config

    @media_source_config.setter
    def media_source_config(self, media_source_config):
        """Sets the media_source_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.


        :param media_source_config: The media_source_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        :type media_source_config: RecorderConfigMediaSourceConfig
        """
        if media_source_config is None:
            raise ValueError("Invalid value for `media_source_config`, must not be `None`")

        self._media_source_config = media_source_config

    @property
    def schedule_config(self):
        """Gets the schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.


        :return: The schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        :rtype: RecorderConfigScheduleConfig
        """
        return self._schedule_config

    @schedule_config.setter
    def schedule_config(self, schedule_config):
        """Sets the schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.


        :param schedule_config: The schedule_config of this StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig.
        :type schedule_config: RecorderConfigScheduleConfig
        """

        self._schedule_config = schedule_config
