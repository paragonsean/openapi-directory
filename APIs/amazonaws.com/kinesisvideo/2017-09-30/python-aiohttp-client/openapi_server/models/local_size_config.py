# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.strategy_on_full_size import StrategyOnFullSize
from openapi_server import util


class LocalSizeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_local_media_size_in_mb: int=None, strategy_on_full_size: StrategyOnFullSize=None):
        """LocalSizeConfig - a model defined in OpenAPI

        :param max_local_media_size_in_mb: The max_local_media_size_in_mb of this LocalSizeConfig.
        :param strategy_on_full_size: The strategy_on_full_size of this LocalSizeConfig.
        """
        self.openapi_types = {
            'max_local_media_size_in_mb': int,
            'strategy_on_full_size': StrategyOnFullSize
        }

        self.attribute_map = {
            'max_local_media_size_in_mb': 'MaxLocalMediaSizeInMB',
            'strategy_on_full_size': 'StrategyOnFullSize'
        }

        self._max_local_media_size_in_mb = max_local_media_size_in_mb
        self._strategy_on_full_size = strategy_on_full_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalSizeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalSizeConfig of this LocalSizeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_local_media_size_in_mb(self):
        """Gets the max_local_media_size_in_mb of this LocalSizeConfig.


        :return: The max_local_media_size_in_mb of this LocalSizeConfig.
        :rtype: int
        """
        return self._max_local_media_size_in_mb

    @max_local_media_size_in_mb.setter
    def max_local_media_size_in_mb(self, max_local_media_size_in_mb):
        """Sets the max_local_media_size_in_mb of this LocalSizeConfig.


        :param max_local_media_size_in_mb: The max_local_media_size_in_mb of this LocalSizeConfig.
        :type max_local_media_size_in_mb: int
        """

        self._max_local_media_size_in_mb = max_local_media_size_in_mb

    @property
    def strategy_on_full_size(self):
        """Gets the strategy_on_full_size of this LocalSizeConfig.


        :return: The strategy_on_full_size of this LocalSizeConfig.
        :rtype: StrategyOnFullSize
        """
        return self._strategy_on_full_size

    @strategy_on_full_size.setter
    def strategy_on_full_size(self, strategy_on_full_size):
        """Sets the strategy_on_full_size of this LocalSizeConfig.


        :param strategy_on_full_size: The strategy_on_full_size of this LocalSizeConfig.
        :type strategy_on_full_size: StrategyOnFullSize
        """

        self._strategy_on_full_size = strategy_on_full_size
