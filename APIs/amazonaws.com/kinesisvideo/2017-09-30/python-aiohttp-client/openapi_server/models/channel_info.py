# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_info_single_master_configuration import ChannelInfoSingleMasterConfiguration
from openapi_server.models.channel_type import ChannelType
from openapi_server.models.status import Status
from openapi_server import util


class ChannelInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_name: str=None, channel_arn: str=None, channel_type: ChannelType=None, channel_status: Status=None, creation_time: datetime=None, single_master_configuration: ChannelInfoSingleMasterConfiguration=None, version: str=None):
        """ChannelInfo - a model defined in OpenAPI

        :param channel_name: The channel_name of this ChannelInfo.
        :param channel_arn: The channel_arn of this ChannelInfo.
        :param channel_type: The channel_type of this ChannelInfo.
        :param channel_status: The channel_status of this ChannelInfo.
        :param creation_time: The creation_time of this ChannelInfo.
        :param single_master_configuration: The single_master_configuration of this ChannelInfo.
        :param version: The version of this ChannelInfo.
        """
        self.openapi_types = {
            'channel_name': str,
            'channel_arn': str,
            'channel_type': ChannelType,
            'channel_status': Status,
            'creation_time': datetime,
            'single_master_configuration': ChannelInfoSingleMasterConfiguration,
            'version': str
        }

        self.attribute_map = {
            'channel_name': 'ChannelName',
            'channel_arn': 'ChannelARN',
            'channel_type': 'ChannelType',
            'channel_status': 'ChannelStatus',
            'creation_time': 'CreationTime',
            'single_master_configuration': 'SingleMasterConfiguration',
            'version': 'Version'
        }

        self._channel_name = channel_name
        self._channel_arn = channel_arn
        self._channel_type = channel_type
        self._channel_status = channel_status
        self._creation_time = creation_time
        self._single_master_configuration = single_master_configuration
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelInfo of this ChannelInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_name(self):
        """Gets the channel_name of this ChannelInfo.


        :return: The channel_name of this ChannelInfo.
        :rtype: str
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this ChannelInfo.


        :param channel_name: The channel_name of this ChannelInfo.
        :type channel_name: str
        """

        self._channel_name = channel_name

    @property
    def channel_arn(self):
        """Gets the channel_arn of this ChannelInfo.


        :return: The channel_arn of this ChannelInfo.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this ChannelInfo.


        :param channel_arn: The channel_arn of this ChannelInfo.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn

    @property
    def channel_type(self):
        """Gets the channel_type of this ChannelInfo.


        :return: The channel_type of this ChannelInfo.
        :rtype: ChannelType
        """
        return self._channel_type

    @channel_type.setter
    def channel_type(self, channel_type):
        """Sets the channel_type of this ChannelInfo.


        :param channel_type: The channel_type of this ChannelInfo.
        :type channel_type: ChannelType
        """

        self._channel_type = channel_type

    @property
    def channel_status(self):
        """Gets the channel_status of this ChannelInfo.


        :return: The channel_status of this ChannelInfo.
        :rtype: Status
        """
        return self._channel_status

    @channel_status.setter
    def channel_status(self, channel_status):
        """Sets the channel_status of this ChannelInfo.


        :param channel_status: The channel_status of this ChannelInfo.
        :type channel_status: Status
        """

        self._channel_status = channel_status

    @property
    def creation_time(self):
        """Gets the creation_time of this ChannelInfo.


        :return: The creation_time of this ChannelInfo.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ChannelInfo.


        :param creation_time: The creation_time of this ChannelInfo.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def single_master_configuration(self):
        """Gets the single_master_configuration of this ChannelInfo.


        :return: The single_master_configuration of this ChannelInfo.
        :rtype: ChannelInfoSingleMasterConfiguration
        """
        return self._single_master_configuration

    @single_master_configuration.setter
    def single_master_configuration(self, single_master_configuration):
        """Sets the single_master_configuration of this ChannelInfo.


        :param single_master_configuration: The single_master_configuration of this ChannelInfo.
        :type single_master_configuration: ChannelInfoSingleMasterConfiguration
        """

        self._single_master_configuration = single_master_configuration

    @property
    def version(self):
        """Gets the version of this ChannelInfo.


        :return: The version of this ChannelInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ChannelInfo.


        :param version: The version of this ChannelInfo.
        :type version: str
        """

        self._version = version
