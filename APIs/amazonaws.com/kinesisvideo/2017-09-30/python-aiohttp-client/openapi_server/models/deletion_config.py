# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deletion_config_local_size_config import DeletionConfigLocalSizeConfig
from openapi_server import util


class DeletionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, edge_retention_in_hours: int=None, local_size_config: DeletionConfigLocalSizeConfig=None, delete_after_upload: bool=None):
        """DeletionConfig - a model defined in OpenAPI

        :param edge_retention_in_hours: The edge_retention_in_hours of this DeletionConfig.
        :param local_size_config: The local_size_config of this DeletionConfig.
        :param delete_after_upload: The delete_after_upload of this DeletionConfig.
        """
        self.openapi_types = {
            'edge_retention_in_hours': int,
            'local_size_config': DeletionConfigLocalSizeConfig,
            'delete_after_upload': bool
        }

        self.attribute_map = {
            'edge_retention_in_hours': 'EdgeRetentionInHours',
            'local_size_config': 'LocalSizeConfig',
            'delete_after_upload': 'DeleteAfterUpload'
        }

        self._edge_retention_in_hours = edge_retention_in_hours
        self._local_size_config = local_size_config
        self._delete_after_upload = delete_after_upload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletionConfig of this DeletionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def edge_retention_in_hours(self):
        """Gets the edge_retention_in_hours of this DeletionConfig.


        :return: The edge_retention_in_hours of this DeletionConfig.
        :rtype: int
        """
        return self._edge_retention_in_hours

    @edge_retention_in_hours.setter
    def edge_retention_in_hours(self, edge_retention_in_hours):
        """Sets the edge_retention_in_hours of this DeletionConfig.


        :param edge_retention_in_hours: The edge_retention_in_hours of this DeletionConfig.
        :type edge_retention_in_hours: int
        """

        self._edge_retention_in_hours = edge_retention_in_hours

    @property
    def local_size_config(self):
        """Gets the local_size_config of this DeletionConfig.


        :return: The local_size_config of this DeletionConfig.
        :rtype: DeletionConfigLocalSizeConfig
        """
        return self._local_size_config

    @local_size_config.setter
    def local_size_config(self, local_size_config):
        """Sets the local_size_config of this DeletionConfig.


        :param local_size_config: The local_size_config of this DeletionConfig.
        :type local_size_config: DeletionConfigLocalSizeConfig
        """

        self._local_size_config = local_size_config

    @property
    def delete_after_upload(self):
        """Gets the delete_after_upload of this DeletionConfig.


        :return: The delete_after_upload of this DeletionConfig.
        :rtype: bool
        """
        return self._delete_after_upload

    @delete_after_upload.setter
    def delete_after_upload(self, delete_after_upload):
        """Sets the delete_after_upload of this DeletionConfig.


        :param delete_after_upload: The delete_after_upload of this DeletionConfig.
        :type delete_after_upload: bool
        """

        self._delete_after_upload = delete_after_upload
