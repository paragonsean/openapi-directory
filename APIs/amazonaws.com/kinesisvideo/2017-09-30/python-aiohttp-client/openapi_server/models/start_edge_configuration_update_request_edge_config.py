# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_edge_configuration_update_request_edge_config_deletion_config import StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig
from openapi_server.models.start_edge_configuration_update_request_edge_config_recorder_config import StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig
from openapi_server.models.start_edge_configuration_update_request_edge_config_uploader_config import StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig
from openapi_server import util


class StartEdgeConfigurationUpdateRequestEdgeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hub_device_arn: str=None, recorder_config: StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig=None, uploader_config: StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig=None, deletion_config: StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig=None):
        """StartEdgeConfigurationUpdateRequestEdgeConfig - a model defined in OpenAPI

        :param hub_device_arn: The hub_device_arn of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :param recorder_config: The recorder_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :param uploader_config: The uploader_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :param deletion_config: The deletion_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        """
        self.openapi_types = {
            'hub_device_arn': str,
            'recorder_config': StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig,
            'uploader_config': StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig,
            'deletion_config': StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig
        }

        self.attribute_map = {
            'hub_device_arn': 'HubDeviceArn',
            'recorder_config': 'RecorderConfig',
            'uploader_config': 'UploaderConfig',
            'deletion_config': 'DeletionConfig'
        }

        self._hub_device_arn = hub_device_arn
        self._recorder_config = recorder_config
        self._uploader_config = uploader_config
        self._deletion_config = deletion_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartEdgeConfigurationUpdateRequestEdgeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartEdgeConfigurationUpdate_request_EdgeConfig of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_device_arn(self):
        """Gets the hub_device_arn of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :return: The hub_device_arn of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :rtype: str
        """
        return self._hub_device_arn

    @hub_device_arn.setter
    def hub_device_arn(self, hub_device_arn):
        """Sets the hub_device_arn of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :param hub_device_arn: The hub_device_arn of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :type hub_device_arn: str
        """

        self._hub_device_arn = hub_device_arn

    @property
    def recorder_config(self):
        """Gets the recorder_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :return: The recorder_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :rtype: StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig
        """
        return self._recorder_config

    @recorder_config.setter
    def recorder_config(self, recorder_config):
        """Sets the recorder_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :param recorder_config: The recorder_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :type recorder_config: StartEdgeConfigurationUpdateRequestEdgeConfigRecorderConfig
        """

        self._recorder_config = recorder_config

    @property
    def uploader_config(self):
        """Gets the uploader_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :return: The uploader_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :rtype: StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig
        """
        return self._uploader_config

    @uploader_config.setter
    def uploader_config(self, uploader_config):
        """Sets the uploader_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :param uploader_config: The uploader_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :type uploader_config: StartEdgeConfigurationUpdateRequestEdgeConfigUploaderConfig
        """

        self._uploader_config = uploader_config

    @property
    def deletion_config(self):
        """Gets the deletion_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :return: The deletion_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :rtype: StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig
        """
        return self._deletion_config

    @deletion_config.setter
    def deletion_config(self, deletion_config):
        """Sets the deletion_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.


        :param deletion_config: The deletion_config of this StartEdgeConfigurationUpdateRequestEdgeConfig.
        :type deletion_config: StartEdgeConfigurationUpdateRequestEdgeConfigDeletionConfig
        """

        self._deletion_config = deletion_config
