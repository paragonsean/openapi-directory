# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_media_storage_configuration_output_media_storage_configuration import DescribeMediaStorageConfigurationOutputMediaStorageConfiguration
from openapi_server import util


class UpdateMediaStorageConfigurationInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_arn: str=None, media_storage_configuration: DescribeMediaStorageConfigurationOutputMediaStorageConfiguration=None):
        """UpdateMediaStorageConfigurationInput - a model defined in OpenAPI

        :param channel_arn: The channel_arn of this UpdateMediaStorageConfigurationInput.
        :param media_storage_configuration: The media_storage_configuration of this UpdateMediaStorageConfigurationInput.
        """
        self.openapi_types = {
            'channel_arn': str,
            'media_storage_configuration': DescribeMediaStorageConfigurationOutputMediaStorageConfiguration
        }

        self.attribute_map = {
            'channel_arn': 'ChannelARN',
            'media_storage_configuration': 'MediaStorageConfiguration'
        }

        self._channel_arn = channel_arn
        self._media_storage_configuration = media_storage_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMediaStorageConfigurationInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateMediaStorageConfigurationInput of this UpdateMediaStorageConfigurationInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_arn(self):
        """Gets the channel_arn of this UpdateMediaStorageConfigurationInput.


        :return: The channel_arn of this UpdateMediaStorageConfigurationInput.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this UpdateMediaStorageConfigurationInput.


        :param channel_arn: The channel_arn of this UpdateMediaStorageConfigurationInput.
        :type channel_arn: str
        """
        if channel_arn is None:
            raise ValueError("Invalid value for `channel_arn`, must not be `None`")

        self._channel_arn = channel_arn

    @property
    def media_storage_configuration(self):
        """Gets the media_storage_configuration of this UpdateMediaStorageConfigurationInput.


        :return: The media_storage_configuration of this UpdateMediaStorageConfigurationInput.
        :rtype: DescribeMediaStorageConfigurationOutputMediaStorageConfiguration
        """
        return self._media_storage_configuration

    @media_storage_configuration.setter
    def media_storage_configuration(self, media_storage_configuration):
        """Sets the media_storage_configuration of this UpdateMediaStorageConfigurationInput.


        :param media_storage_configuration: The media_storage_configuration of this UpdateMediaStorageConfigurationInput.
        :type media_storage_configuration: DescribeMediaStorageConfigurationOutputMediaStorageConfiguration
        """
        if media_storage_configuration is None:
            raise ValueError("Invalid value for `media_storage_configuration`, must not be `None`")

        self._media_storage_configuration = media_storage_configuration
