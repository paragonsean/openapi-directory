/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2017-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3Origin model module.
 * @module model/S3Origin
 * @version 2017-10-30
 */
class S3Origin {
    /**
     * Constructs a new <code>S3Origin</code>.
     * A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.
     * @alias module:model/S3Origin
     * @param domainName {String} 
     * @param originAccessIdentity {String} 
     */
    constructor(domainName, originAccessIdentity) { 
        
        S3Origin.initialize(this, domainName, originAccessIdentity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainName, originAccessIdentity) { 
        obj['DomainName'] = domainName;
        obj['OriginAccessIdentity'] = originAccessIdentity;
    }

    /**
     * Constructs a <code>S3Origin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3Origin} obj Optional instance to populate.
     * @return {module:model/S3Origin} The populated <code>S3Origin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3Origin();

            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('OriginAccessIdentity')) {
                obj['OriginAccessIdentity'] = ApiClient.convertToType(data['OriginAccessIdentity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3Origin</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3Origin</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of S3Origin.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `OriginAccessIdentity`
        if (data['OriginAccessIdentity']) { // data not null
          String.validateJSON(data['OriginAccessIdentity']);
        }

        return true;
    }


}

S3Origin.RequiredProperties = ["DomainName", "OriginAccessIdentity"];

/**
 * @member {String} DomainName
 */
S3Origin.prototype['DomainName'] = undefined;

/**
 * @member {String} OriginAccessIdentity
 */
S3Origin.prototype['OriginAccessIdentity'] = undefined;






export default S3Origin;

