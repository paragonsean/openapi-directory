/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2017-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PriceClass from './PriceClass';
import StreamingDistributionSummary from './StreamingDistributionSummary';
import StreamingDistributionSummaryAliases from './StreamingDistributionSummaryAliases';
import StreamingDistributionSummaryS3Origin from './StreamingDistributionSummaryS3Origin';
import StreamingDistributionSummaryTrustedSigners from './StreamingDistributionSummaryTrustedSigners';

/**
 * The StreamingDistributionSummaryListInner model module.
 * @module model/StreamingDistributionSummaryListInner
 * @version 2017-10-30
 */
class StreamingDistributionSummaryListInner {
    /**
     * Constructs a new <code>StreamingDistributionSummaryListInner</code>.
     * @alias module:model/StreamingDistributionSummaryListInner
     * @implements module:model/StreamingDistributionSummary
     * @param id {String} 
     * @param ARN {String} 
     * @param status {String} 
     * @param lastModifiedTime {Date} 
     * @param domainName {String} 
     * @param s3Origin {module:model/StreamingDistributionSummaryS3Origin} 
     * @param aliases {module:model/StreamingDistributionSummaryAliases} 
     * @param trustedSigners {module:model/StreamingDistributionSummaryTrustedSigners} 
     * @param comment {String} 
     * @param priceClass {module:model/PriceClass} 
     * @param enabled {Boolean} 
     */
    constructor(id, ARN, status, lastModifiedTime, domainName, s3Origin, aliases, trustedSigners, comment, priceClass, enabled) { 
        StreamingDistributionSummary.initialize(this, id, ARN, status, lastModifiedTime, domainName, s3Origin, aliases, trustedSigners, comment, priceClass, enabled);
        StreamingDistributionSummaryListInner.initialize(this, id, ARN, status, lastModifiedTime, domainName, s3Origin, aliases, trustedSigners, comment, priceClass, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, ARN, status, lastModifiedTime, domainName, s3Origin, aliases, trustedSigners, comment, priceClass, enabled) { 
        obj['Id'] = id;
        obj['ARN'] = ARN;
        obj['Status'] = status;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['DomainName'] = domainName;
        obj['S3Origin'] = s3Origin;
        obj['Aliases'] = aliases;
        obj['TrustedSigners'] = trustedSigners;
        obj['Comment'] = comment;
        obj['PriceClass'] = priceClass;
        obj['Enabled'] = enabled;
    }

    /**
     * Constructs a <code>StreamingDistributionSummaryListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamingDistributionSummaryListInner} obj Optional instance to populate.
     * @return {module:model/StreamingDistributionSummaryListInner} The populated <code>StreamingDistributionSummaryListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamingDistributionSummaryListInner();
            StreamingDistributionSummary.constructFromObject(data, obj);

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('ARN')) {
                obj['ARN'] = ApiClient.convertToType(data['ARN'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('S3Origin')) {
                obj['S3Origin'] = StreamingDistributionSummaryS3Origin.constructFromObject(data['S3Origin']);
            }
            if (data.hasOwnProperty('Aliases')) {
                obj['Aliases'] = StreamingDistributionSummaryAliases.constructFromObject(data['Aliases']);
            }
            if (data.hasOwnProperty('TrustedSigners')) {
                obj['TrustedSigners'] = StreamingDistributionSummaryTrustedSigners.constructFromObject(data['TrustedSigners']);
            }
            if (data.hasOwnProperty('Comment')) {
                obj['Comment'] = ApiClient.convertToType(data['Comment'], 'String');
            }
            if (data.hasOwnProperty('PriceClass')) {
                obj['PriceClass'] = PriceClass.constructFromObject(data['PriceClass']);
            }
            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamingDistributionSummaryListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamingDistributionSummaryListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StreamingDistributionSummaryListInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `ARN`
        if (data['ARN']) { // data not null
          String.validateJSON(data['ARN']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `S3Origin`
        if (data['S3Origin']) { // data not null
          StreamingDistributionSummaryS3Origin.validateJSON(data['S3Origin']);
        }
        // validate the optional field `Aliases`
        if (data['Aliases']) { // data not null
          StreamingDistributionSummaryAliases.validateJSON(data['Aliases']);
        }
        // validate the optional field `TrustedSigners`
        if (data['TrustedSigners']) { // data not null
          StreamingDistributionSummaryTrustedSigners.validateJSON(data['TrustedSigners']);
        }
        // validate the optional field `Comment`
        if (data['Comment']) { // data not null
          String.validateJSON(data['Comment']);
        }
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }

        return true;
    }


}

StreamingDistributionSummaryListInner.RequiredProperties = ["Id", "ARN", "Status", "LastModifiedTime", "DomainName", "S3Origin", "Aliases", "TrustedSigners", "Comment", "PriceClass", "Enabled"];

/**
 * @member {String} Id
 */
StreamingDistributionSummaryListInner.prototype['Id'] = undefined;

/**
 * @member {String} ARN
 */
StreamingDistributionSummaryListInner.prototype['ARN'] = undefined;

/**
 * @member {String} Status
 */
StreamingDistributionSummaryListInner.prototype['Status'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
StreamingDistributionSummaryListInner.prototype['LastModifiedTime'] = undefined;

/**
 * @member {String} DomainName
 */
StreamingDistributionSummaryListInner.prototype['DomainName'] = undefined;

/**
 * @member {module:model/StreamingDistributionSummaryS3Origin} S3Origin
 */
StreamingDistributionSummaryListInner.prototype['S3Origin'] = undefined;

/**
 * @member {module:model/StreamingDistributionSummaryAliases} Aliases
 */
StreamingDistributionSummaryListInner.prototype['Aliases'] = undefined;

/**
 * @member {module:model/StreamingDistributionSummaryTrustedSigners} TrustedSigners
 */
StreamingDistributionSummaryListInner.prototype['TrustedSigners'] = undefined;

/**
 * @member {String} Comment
 */
StreamingDistributionSummaryListInner.prototype['Comment'] = undefined;

/**
 * @member {module:model/PriceClass} PriceClass
 */
StreamingDistributionSummaryListInner.prototype['PriceClass'] = undefined;

/**
 * @member {Boolean} Enabled
 */
StreamingDistributionSummaryListInner.prototype['Enabled'] = undefined;


// Implement StreamingDistributionSummary interface:
/**
 * @member {String} Id
 */
StreamingDistributionSummary.prototype['Id'] = undefined;
/**
 * @member {String} ARN
 */
StreamingDistributionSummary.prototype['ARN'] = undefined;
/**
 * @member {String} Status
 */
StreamingDistributionSummary.prototype['Status'] = undefined;
/**
 * @member {Date} LastModifiedTime
 */
StreamingDistributionSummary.prototype['LastModifiedTime'] = undefined;
/**
 * @member {String} DomainName
 */
StreamingDistributionSummary.prototype['DomainName'] = undefined;
/**
 * @member {module:model/StreamingDistributionSummaryS3Origin} S3Origin
 */
StreamingDistributionSummary.prototype['S3Origin'] = undefined;
/**
 * @member {module:model/StreamingDistributionSummaryAliases} Aliases
 */
StreamingDistributionSummary.prototype['Aliases'] = undefined;
/**
 * @member {module:model/StreamingDistributionSummaryTrustedSigners} TrustedSigners
 */
StreamingDistributionSummary.prototype['TrustedSigners'] = undefined;
/**
 * @member {String} Comment
 */
StreamingDistributionSummary.prototype['Comment'] = undefined;
/**
 * @member {module:model/PriceClass} PriceClass
 */
StreamingDistributionSummary.prototype['PriceClass'] = undefined;
/**
 * @member {Boolean} Enabled
 */
StreamingDistributionSummary.prototype['Enabled'] = undefined;




export default StreamingDistributionSummaryListInner;

