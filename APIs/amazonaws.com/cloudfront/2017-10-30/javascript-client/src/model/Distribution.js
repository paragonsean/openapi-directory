/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2017-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DistributionActiveTrustedSigners from './DistributionActiveTrustedSigners';
import DistributionDistributionConfig from './DistributionDistributionConfig';

/**
 * The Distribution model module.
 * @module model/Distribution
 * @version 2017-10-30
 */
class Distribution {
    /**
     * Constructs a new <code>Distribution</code>.
     * The distribution&#39;s information.
     * @alias module:model/Distribution
     * @param id {String} 
     * @param ARN {String} 
     * @param status {String} 
     * @param lastModifiedTime {Date} 
     * @param inProgressInvalidationBatches {Number} 
     * @param domainName {String} 
     * @param activeTrustedSigners {module:model/DistributionActiveTrustedSigners} 
     * @param distributionConfig {module:model/DistributionDistributionConfig} 
     */
    constructor(id, ARN, status, lastModifiedTime, inProgressInvalidationBatches, domainName, activeTrustedSigners, distributionConfig) { 
        
        Distribution.initialize(this, id, ARN, status, lastModifiedTime, inProgressInvalidationBatches, domainName, activeTrustedSigners, distributionConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, ARN, status, lastModifiedTime, inProgressInvalidationBatches, domainName, activeTrustedSigners, distributionConfig) { 
        obj['Id'] = id;
        obj['ARN'] = ARN;
        obj['Status'] = status;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['InProgressInvalidationBatches'] = inProgressInvalidationBatches;
        obj['DomainName'] = domainName;
        obj['ActiveTrustedSigners'] = activeTrustedSigners;
        obj['DistributionConfig'] = distributionConfig;
    }

    /**
     * Constructs a <code>Distribution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Distribution} obj Optional instance to populate.
     * @return {module:model/Distribution} The populated <code>Distribution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Distribution();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('ARN')) {
                obj['ARN'] = ApiClient.convertToType(data['ARN'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('InProgressInvalidationBatches')) {
                obj['InProgressInvalidationBatches'] = ApiClient.convertToType(data['InProgressInvalidationBatches'], 'Number');
            }
            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('ActiveTrustedSigners')) {
                obj['ActiveTrustedSigners'] = DistributionActiveTrustedSigners.constructFromObject(data['ActiveTrustedSigners']);
            }
            if (data.hasOwnProperty('DistributionConfig')) {
                obj['DistributionConfig'] = DistributionDistributionConfig.constructFromObject(data['DistributionConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Distribution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Distribution</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Distribution.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `ARN`
        if (data['ARN']) { // data not null
          String.validateJSON(data['ARN']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `InProgressInvalidationBatches`
        if (data['InProgressInvalidationBatches']) { // data not null
          Number.validateJSON(data['InProgressInvalidationBatches']);
        }
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `ActiveTrustedSigners`
        if (data['ActiveTrustedSigners']) { // data not null
          DistributionActiveTrustedSigners.validateJSON(data['ActiveTrustedSigners']);
        }
        // validate the optional field `DistributionConfig`
        if (data['DistributionConfig']) { // data not null
          DistributionDistributionConfig.validateJSON(data['DistributionConfig']);
        }

        return true;
    }


}

Distribution.RequiredProperties = ["Id", "ARN", "Status", "LastModifiedTime", "InProgressInvalidationBatches", "DomainName", "ActiveTrustedSigners", "DistributionConfig"];

/**
 * @member {String} Id
 */
Distribution.prototype['Id'] = undefined;

/**
 * @member {String} ARN
 */
Distribution.prototype['ARN'] = undefined;

/**
 * @member {String} Status
 */
Distribution.prototype['Status'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
Distribution.prototype['LastModifiedTime'] = undefined;

/**
 * @member {Number} InProgressInvalidationBatches
 */
Distribution.prototype['InProgressInvalidationBatches'] = undefined;

/**
 * @member {String} DomainName
 */
Distribution.prototype['DomainName'] = undefined;

/**
 * @member {module:model/DistributionActiveTrustedSigners} ActiveTrustedSigners
 */
Distribution.prototype['ActiveTrustedSigners'] = undefined;

/**
 * @member {module:model/DistributionDistributionConfig} DistributionConfig
 */
Distribution.prototype['DistributionConfig'] = undefined;






export default Distribution;

