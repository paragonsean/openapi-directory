/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2017-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDefaultCacheBehavior_ForwardedValues.h
 *
 * 
 */

#ifndef OAIDefaultCacheBehavior_ForwardedValues_H
#define OAIDefaultCacheBehavior_ForwardedValues_H

#include <QJsonObject>

#include "OAIForwardedValues_Cookies.h"
#include "OAIForwardedValues_Headers.h"
#include "OAIForwardedValues_QueryStringCacheKeys.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIForwardedValues_Cookies;
class OAIForwardedValues_Headers;
class OAIForwardedValues_QueryStringCacheKeys;

class OAIDefaultCacheBehavior_ForwardedValues : public OAIObject {
public:
    OAIDefaultCacheBehavior_ForwardedValues();
    OAIDefaultCacheBehavior_ForwardedValues(QString json);
    ~OAIDefaultCacheBehavior_ForwardedValues() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getQueryString() const;
    void setQueryString(const bool &query_string);
    bool is_query_string_Set() const;
    bool is_query_string_Valid() const;

    OAIForwardedValues_Cookies getCookies() const;
    void setCookies(const OAIForwardedValues_Cookies &cookies);
    bool is_cookies_Set() const;
    bool is_cookies_Valid() const;

    OAIForwardedValues_Headers getHeaders() const;
    void setHeaders(const OAIForwardedValues_Headers &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    OAIForwardedValues_QueryStringCacheKeys getQueryStringCacheKeys() const;
    void setQueryStringCacheKeys(const OAIForwardedValues_QueryStringCacheKeys &query_string_cache_keys);
    bool is_query_string_cache_keys_Set() const;
    bool is_query_string_cache_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_query_string;
    bool m_query_string_isSet;
    bool m_query_string_isValid;

    OAIForwardedValues_Cookies m_cookies;
    bool m_cookies_isSet;
    bool m_cookies_isValid;

    OAIForwardedValues_Headers m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    OAIForwardedValues_QueryStringCacheKeys m_query_string_cache_keys;
    bool m_query_string_cache_keys_isSet;
    bool m_query_string_cache_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDefaultCacheBehavior_ForwardedValues)

#endif // OAIDefaultCacheBehavior_ForwardedValues_H
