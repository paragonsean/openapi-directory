# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_level_encryption_profile_field_level_encryption_profile_config import FieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig
from openapi_server import util


class UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, last_modified_time: datetime=None, field_level_encryption_profile_config: FieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig=None):
        """UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile - a model defined in OpenAPI

        :param id: The id of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :param last_modified_time: The last_modified_time of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :param field_level_encryption_profile_config: The field_level_encryption_profile_config of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        """
        self.openapi_types = {
            'id': str,
            'last_modified_time': datetime,
            'field_level_encryption_profile_config': FieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig
        }

        self.attribute_map = {
            'id': 'Id',
            'last_modified_time': 'LastModifiedTime',
            'field_level_encryption_profile_config': 'FieldLevelEncryptionProfileConfig'
        }

        self._id = id
        self._last_modified_time = last_modified_time
        self._field_level_encryption_profile_config = field_level_encryption_profile_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFieldLevelEncryptionProfileResult_FieldLevelEncryptionProfile of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.


        :return: The id of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.


        :param id: The id of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.


        :return: The last_modified_time of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.


        :param last_modified_time: The last_modified_time of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def field_level_encryption_profile_config(self):
        """Gets the field_level_encryption_profile_config of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.


        :return: The field_level_encryption_profile_config of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :rtype: FieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig
        """
        return self._field_level_encryption_profile_config

    @field_level_encryption_profile_config.setter
    def field_level_encryption_profile_config(self, field_level_encryption_profile_config):
        """Sets the field_level_encryption_profile_config of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.


        :param field_level_encryption_profile_config: The field_level_encryption_profile_config of this UpdateFieldLevelEncryptionProfileResultFieldLevelEncryptionProfile.
        :type field_level_encryption_profile_config: FieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig
        """
        if field_level_encryption_profile_config is None:
            raise ValueError("Invalid value for `field_level_encryption_profile_config`, must not be `None`")

        self._field_level_encryption_profile_config = field_level_encryption_profile_config
