# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allowed_methods import AllowedMethods
from openapi_server.models.default_cache_behavior_forwarded_values import DefaultCacheBehaviorForwardedValues
from openapi_server.models.default_cache_behavior_lambda_function_associations import DefaultCacheBehaviorLambdaFunctionAssociations
from openapi_server.models.default_cache_behavior_trusted_signers import DefaultCacheBehaviorTrustedSigners
from openapi_server.models.viewer_protocol_policy import ViewerProtocolPolicy
from openapi_server import util


class CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_origin_id: str=None, forwarded_values: DefaultCacheBehaviorForwardedValues=None, trusted_signers: DefaultCacheBehaviorTrustedSigners=None, viewer_protocol_policy: ViewerProtocolPolicy=None, min_ttl: int=None, allowed_methods: AllowedMethods=None, smooth_streaming: bool=None, default_ttl: int=None, max_ttl: int=None, compress: bool=None, lambda_function_associations: DefaultCacheBehaviorLambdaFunctionAssociations=None, field_level_encryption_id: str=None):
        """CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior - a model defined in OpenAPI

        :param target_origin_id: The target_origin_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param forwarded_values: The forwarded_values of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param trusted_signers: The trusted_signers of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param viewer_protocol_policy: The viewer_protocol_policy of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param min_ttl: The min_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param allowed_methods: The allowed_methods of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param smooth_streaming: The smooth_streaming of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param default_ttl: The default_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param max_ttl: The max_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param compress: The compress of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param lambda_function_associations: The lambda_function_associations of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :param field_level_encryption_id: The field_level_encryption_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        """
        self.openapi_types = {
            'target_origin_id': str,
            'forwarded_values': DefaultCacheBehaviorForwardedValues,
            'trusted_signers': DefaultCacheBehaviorTrustedSigners,
            'viewer_protocol_policy': ViewerProtocolPolicy,
            'min_ttl': int,
            'allowed_methods': AllowedMethods,
            'smooth_streaming': bool,
            'default_ttl': int,
            'max_ttl': int,
            'compress': bool,
            'lambda_function_associations': DefaultCacheBehaviorLambdaFunctionAssociations,
            'field_level_encryption_id': str
        }

        self.attribute_map = {
            'target_origin_id': 'TargetOriginId',
            'forwarded_values': 'ForwardedValues',
            'trusted_signers': 'TrustedSigners',
            'viewer_protocol_policy': 'ViewerProtocolPolicy',
            'min_ttl': 'MinTTL',
            'allowed_methods': 'AllowedMethods',
            'smooth_streaming': 'SmoothStreaming',
            'default_ttl': 'DefaultTTL',
            'max_ttl': 'MaxTTL',
            'compress': 'Compress',
            'lambda_function_associations': 'LambdaFunctionAssociations',
            'field_level_encryption_id': 'FieldLevelEncryptionId'
        }

        self._target_origin_id = target_origin_id
        self._forwarded_values = forwarded_values
        self._trusted_signers = trusted_signers
        self._viewer_protocol_policy = viewer_protocol_policy
        self._min_ttl = min_ttl
        self._allowed_methods = allowed_methods
        self._smooth_streaming = smooth_streaming
        self._default_ttl = default_ttl
        self._max_ttl = max_ttl
        self._compress = compress
        self._lambda_function_associations = lambda_function_associations
        self._field_level_encryption_id = field_level_encryption_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDistribution2017_10_30_request_DistributionConfig_DefaultCacheBehavior of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_origin_id(self):
        """Gets the target_origin_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The target_origin_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: str
        """
        return self._target_origin_id

    @target_origin_id.setter
    def target_origin_id(self, target_origin_id):
        """Sets the target_origin_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param target_origin_id: The target_origin_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type target_origin_id: str
        """
        if target_origin_id is None:
            raise ValueError("Invalid value for `target_origin_id`, must not be `None`")

        self._target_origin_id = target_origin_id

    @property
    def forwarded_values(self):
        """Gets the forwarded_values of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The forwarded_values of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: DefaultCacheBehaviorForwardedValues
        """
        return self._forwarded_values

    @forwarded_values.setter
    def forwarded_values(self, forwarded_values):
        """Sets the forwarded_values of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param forwarded_values: The forwarded_values of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type forwarded_values: DefaultCacheBehaviorForwardedValues
        """
        if forwarded_values is None:
            raise ValueError("Invalid value for `forwarded_values`, must not be `None`")

        self._forwarded_values = forwarded_values

    @property
    def trusted_signers(self):
        """Gets the trusted_signers of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The trusted_signers of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: DefaultCacheBehaviorTrustedSigners
        """
        return self._trusted_signers

    @trusted_signers.setter
    def trusted_signers(self, trusted_signers):
        """Sets the trusted_signers of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param trusted_signers: The trusted_signers of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type trusted_signers: DefaultCacheBehaviorTrustedSigners
        """
        if trusted_signers is None:
            raise ValueError("Invalid value for `trusted_signers`, must not be `None`")

        self._trusted_signers = trusted_signers

    @property
    def viewer_protocol_policy(self):
        """Gets the viewer_protocol_policy of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The viewer_protocol_policy of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: ViewerProtocolPolicy
        """
        return self._viewer_protocol_policy

    @viewer_protocol_policy.setter
    def viewer_protocol_policy(self, viewer_protocol_policy):
        """Sets the viewer_protocol_policy of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param viewer_protocol_policy: The viewer_protocol_policy of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type viewer_protocol_policy: ViewerProtocolPolicy
        """
        if viewer_protocol_policy is None:
            raise ValueError("Invalid value for `viewer_protocol_policy`, must not be `None`")

        self._viewer_protocol_policy = viewer_protocol_policy

    @property
    def min_ttl(self):
        """Gets the min_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The min_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: int
        """
        return self._min_ttl

    @min_ttl.setter
    def min_ttl(self, min_ttl):
        """Sets the min_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param min_ttl: The min_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type min_ttl: int
        """
        if min_ttl is None:
            raise ValueError("Invalid value for `min_ttl`, must not be `None`")

        self._min_ttl = min_ttl

    @property
    def allowed_methods(self):
        """Gets the allowed_methods of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The allowed_methods of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: AllowedMethods
        """
        return self._allowed_methods

    @allowed_methods.setter
    def allowed_methods(self, allowed_methods):
        """Sets the allowed_methods of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param allowed_methods: The allowed_methods of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type allowed_methods: AllowedMethods
        """

        self._allowed_methods = allowed_methods

    @property
    def smooth_streaming(self):
        """Gets the smooth_streaming of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The smooth_streaming of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: bool
        """
        return self._smooth_streaming

    @smooth_streaming.setter
    def smooth_streaming(self, smooth_streaming):
        """Sets the smooth_streaming of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param smooth_streaming: The smooth_streaming of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type smooth_streaming: bool
        """

        self._smooth_streaming = smooth_streaming

    @property
    def default_ttl(self):
        """Gets the default_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The default_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: int
        """
        return self._default_ttl

    @default_ttl.setter
    def default_ttl(self, default_ttl):
        """Sets the default_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param default_ttl: The default_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type default_ttl: int
        """

        self._default_ttl = default_ttl

    @property
    def max_ttl(self):
        """Gets the max_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The max_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: int
        """
        return self._max_ttl

    @max_ttl.setter
    def max_ttl(self, max_ttl):
        """Sets the max_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param max_ttl: The max_ttl of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type max_ttl: int
        """

        self._max_ttl = max_ttl

    @property
    def compress(self):
        """Gets the compress of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The compress of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: bool
        """
        return self._compress

    @compress.setter
    def compress(self, compress):
        """Sets the compress of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param compress: The compress of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type compress: bool
        """

        self._compress = compress

    @property
    def lambda_function_associations(self):
        """Gets the lambda_function_associations of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The lambda_function_associations of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: DefaultCacheBehaviorLambdaFunctionAssociations
        """
        return self._lambda_function_associations

    @lambda_function_associations.setter
    def lambda_function_associations(self, lambda_function_associations):
        """Sets the lambda_function_associations of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param lambda_function_associations: The lambda_function_associations of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type lambda_function_associations: DefaultCacheBehaviorLambdaFunctionAssociations
        """

        self._lambda_function_associations = lambda_function_associations

    @property
    def field_level_encryption_id(self):
        """Gets the field_level_encryption_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :return: The field_level_encryption_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :rtype: str
        """
        return self._field_level_encryption_id

    @field_level_encryption_id.setter
    def field_level_encryption_id(self, field_level_encryption_id):
        """Sets the field_level_encryption_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.


        :param field_level_encryption_id: The field_level_encryption_id of this CreateDistribution20171030RequestDistributionConfigDefaultCacheBehavior.
        :type field_level_encryption_id: str
        """

        self._field_level_encryption_id = field_level_encryption_id
