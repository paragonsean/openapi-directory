# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomErrorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: int=None, response_page_path: str=None, response_code: str=None, error_caching_min_ttl: int=None):
        """CustomErrorResponse - a model defined in OpenAPI

        :param error_code: The error_code of this CustomErrorResponse.
        :param response_page_path: The response_page_path of this CustomErrorResponse.
        :param response_code: The response_code of this CustomErrorResponse.
        :param error_caching_min_ttl: The error_caching_min_ttl of this CustomErrorResponse.
        """
        self.openapi_types = {
            'error_code': int,
            'response_page_path': str,
            'response_code': str,
            'error_caching_min_ttl': int
        }

        self.attribute_map = {
            'error_code': 'ErrorCode',
            'response_page_path': 'ResponsePagePath',
            'response_code': 'ResponseCode',
            'error_caching_min_ttl': 'ErrorCachingMinTTL'
        }

        self._error_code = error_code
        self._response_page_path = response_page_path
        self._response_code = response_code
        self._error_caching_min_ttl = error_caching_min_ttl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomErrorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomErrorResponse of this CustomErrorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this CustomErrorResponse.


        :return: The error_code of this CustomErrorResponse.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this CustomErrorResponse.


        :param error_code: The error_code of this CustomErrorResponse.
        :type error_code: int
        """
        if error_code is None:
            raise ValueError("Invalid value for `error_code`, must not be `None`")

        self._error_code = error_code

    @property
    def response_page_path(self):
        """Gets the response_page_path of this CustomErrorResponse.


        :return: The response_page_path of this CustomErrorResponse.
        :rtype: str
        """
        return self._response_page_path

    @response_page_path.setter
    def response_page_path(self, response_page_path):
        """Sets the response_page_path of this CustomErrorResponse.


        :param response_page_path: The response_page_path of this CustomErrorResponse.
        :type response_page_path: str
        """

        self._response_page_path = response_page_path

    @property
    def response_code(self):
        """Gets the response_code of this CustomErrorResponse.


        :return: The response_code of this CustomErrorResponse.
        :rtype: str
        """
        return self._response_code

    @response_code.setter
    def response_code(self, response_code):
        """Sets the response_code of this CustomErrorResponse.


        :param response_code: The response_code of this CustomErrorResponse.
        :type response_code: str
        """

        self._response_code = response_code

    @property
    def error_caching_min_ttl(self):
        """Gets the error_caching_min_ttl of this CustomErrorResponse.


        :return: The error_caching_min_ttl of this CustomErrorResponse.
        :rtype: int
        """
        return self._error_caching_min_ttl

    @error_caching_min_ttl.setter
    def error_caching_min_ttl(self, error_caching_min_ttl):
        """Sets the error_caching_min_ttl of this CustomErrorResponse.


        :param error_caching_min_ttl: The error_caching_min_ttl of this CustomErrorResponse.
        :type error_caching_min_ttl: int
        """

        self._error_caching_min_ttl = error_caching_min_ttl
