# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_distribution_with_tags_result_distribution import CreateDistributionWithTagsResultDistribution
from openapi_server import util


class CreateDistributionWithTagsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distribution: CreateDistributionWithTagsResultDistribution=None):
        """CreateDistributionWithTagsResult - a model defined in OpenAPI

        :param distribution: The distribution of this CreateDistributionWithTagsResult.
        """
        self.openapi_types = {
            'distribution': CreateDistributionWithTagsResultDistribution
        }

        self.attribute_map = {
            'distribution': 'Distribution'
        }

        self._distribution = distribution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDistributionWithTagsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDistributionWithTagsResult of this CreateDistributionWithTagsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distribution(self):
        """Gets the distribution of this CreateDistributionWithTagsResult.


        :return: The distribution of this CreateDistributionWithTagsResult.
        :rtype: CreateDistributionWithTagsResultDistribution
        """
        return self._distribution

    @distribution.setter
    def distribution(self, distribution):
        """Sets the distribution of this CreateDistributionWithTagsResult.


        :param distribution: The distribution of this CreateDistributionWithTagsResult.
        :type distribution: CreateDistributionWithTagsResultDistribution
        """

        self._distribution = distribution
