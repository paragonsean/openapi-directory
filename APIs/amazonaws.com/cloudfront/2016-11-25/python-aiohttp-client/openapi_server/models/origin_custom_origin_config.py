# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_origin_config_origin_ssl_protocols import CustomOriginConfigOriginSslProtocols
from openapi_server.models.origin_protocol_policy import OriginProtocolPolicy
from openapi_server import util


class OriginCustomOriginConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_port: int=None, https_port: int=None, origin_protocol_policy: OriginProtocolPolicy=None, origin_ssl_protocols: CustomOriginConfigOriginSslProtocols=None):
        """OriginCustomOriginConfig - a model defined in OpenAPI

        :param http_port: The http_port of this OriginCustomOriginConfig.
        :param https_port: The https_port of this OriginCustomOriginConfig.
        :param origin_protocol_policy: The origin_protocol_policy of this OriginCustomOriginConfig.
        :param origin_ssl_protocols: The origin_ssl_protocols of this OriginCustomOriginConfig.
        """
        self.openapi_types = {
            'http_port': int,
            'https_port': int,
            'origin_protocol_policy': OriginProtocolPolicy,
            'origin_ssl_protocols': CustomOriginConfigOriginSslProtocols
        }

        self.attribute_map = {
            'http_port': 'HTTPPort',
            'https_port': 'HTTPSPort',
            'origin_protocol_policy': 'OriginProtocolPolicy',
            'origin_ssl_protocols': 'OriginSslProtocols'
        }

        self._http_port = http_port
        self._https_port = https_port
        self._origin_protocol_policy = origin_protocol_policy
        self._origin_ssl_protocols = origin_ssl_protocols

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OriginCustomOriginConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Origin_CustomOriginConfig of this OriginCustomOriginConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_port(self):
        """Gets the http_port of this OriginCustomOriginConfig.


        :return: The http_port of this OriginCustomOriginConfig.
        :rtype: int
        """
        return self._http_port

    @http_port.setter
    def http_port(self, http_port):
        """Sets the http_port of this OriginCustomOriginConfig.


        :param http_port: The http_port of this OriginCustomOriginConfig.
        :type http_port: int
        """
        if http_port is None:
            raise ValueError("Invalid value for `http_port`, must not be `None`")

        self._http_port = http_port

    @property
    def https_port(self):
        """Gets the https_port of this OriginCustomOriginConfig.


        :return: The https_port of this OriginCustomOriginConfig.
        :rtype: int
        """
        return self._https_port

    @https_port.setter
    def https_port(self, https_port):
        """Sets the https_port of this OriginCustomOriginConfig.


        :param https_port: The https_port of this OriginCustomOriginConfig.
        :type https_port: int
        """
        if https_port is None:
            raise ValueError("Invalid value for `https_port`, must not be `None`")

        self._https_port = https_port

    @property
    def origin_protocol_policy(self):
        """Gets the origin_protocol_policy of this OriginCustomOriginConfig.


        :return: The origin_protocol_policy of this OriginCustomOriginConfig.
        :rtype: OriginProtocolPolicy
        """
        return self._origin_protocol_policy

    @origin_protocol_policy.setter
    def origin_protocol_policy(self, origin_protocol_policy):
        """Sets the origin_protocol_policy of this OriginCustomOriginConfig.


        :param origin_protocol_policy: The origin_protocol_policy of this OriginCustomOriginConfig.
        :type origin_protocol_policy: OriginProtocolPolicy
        """
        if origin_protocol_policy is None:
            raise ValueError("Invalid value for `origin_protocol_policy`, must not be `None`")

        self._origin_protocol_policy = origin_protocol_policy

    @property
    def origin_ssl_protocols(self):
        """Gets the origin_ssl_protocols of this OriginCustomOriginConfig.


        :return: The origin_ssl_protocols of this OriginCustomOriginConfig.
        :rtype: CustomOriginConfigOriginSslProtocols
        """
        return self._origin_ssl_protocols

    @origin_ssl_protocols.setter
    def origin_ssl_protocols(self, origin_ssl_protocols):
        """Sets the origin_ssl_protocols of this OriginCustomOriginConfig.


        :param origin_ssl_protocols: The origin_ssl_protocols of this OriginCustomOriginConfig.
        :type origin_ssl_protocols: CustomOriginConfigOriginSslProtocols
        """

        self._origin_ssl_protocols = origin_ssl_protocols
