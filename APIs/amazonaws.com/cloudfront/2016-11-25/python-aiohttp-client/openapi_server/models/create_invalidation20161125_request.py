# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_invalidation20161125_request_invalidation_batch import CreateInvalidation20161125RequestInvalidationBatch
from openapi_server import util


class CreateInvalidation20161125Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invalidation_batch: CreateInvalidation20161125RequestInvalidationBatch=None):
        """CreateInvalidation20161125Request - a model defined in OpenAPI

        :param invalidation_batch: The invalidation_batch of this CreateInvalidation20161125Request.
        """
        self.openapi_types = {
            'invalidation_batch': CreateInvalidation20161125RequestInvalidationBatch
        }

        self.attribute_map = {
            'invalidation_batch': 'InvalidationBatch'
        }

        self._invalidation_batch = invalidation_batch

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInvalidation20161125Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInvalidation2016_11_25_request of this CreateInvalidation20161125Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invalidation_batch(self):
        """Gets the invalidation_batch of this CreateInvalidation20161125Request.


        :return: The invalidation_batch of this CreateInvalidation20161125Request.
        :rtype: CreateInvalidation20161125RequestInvalidationBatch
        """
        return self._invalidation_batch

    @invalidation_batch.setter
    def invalidation_batch(self, invalidation_batch):
        """Sets the invalidation_batch of this CreateInvalidation20161125Request.


        :param invalidation_batch: The invalidation_batch of this CreateInvalidation20161125Request.
        :type invalidation_batch: CreateInvalidation20161125RequestInvalidationBatch
        """
        if invalidation_batch is None:
            raise ValueError("Invalid value for `invalidation_batch`, must not be `None`")

        self._invalidation_batch = invalidation_batch
