/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTagsForResourceResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTagsForResourceResult::OAIListTagsForResourceResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTagsForResourceResult::OAIListTagsForResourceResult() {
    this->initializeModel();
}

OAIListTagsForResourceResult::~OAIListTagsForResourceResult() {}

void OAIListTagsForResourceResult::initializeModel() {

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIListTagsForResourceResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTagsForResourceResult::fromJsonObject(QJsonObject json) {

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIListTagsForResourceResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTagsForResourceResult::asJsonObject() const {
    QJsonObject obj;
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAIListTagsForResourceResult_Tags OAIListTagsForResourceResult::getTags() const {
    return m_tags;
}
void OAIListTagsForResourceResult::setTags(const OAIListTagsForResourceResult_Tags &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIListTagsForResourceResult::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIListTagsForResourceResult::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIListTagsForResourceResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTagsForResourceResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tags_isValid && true;
}

} // namespace OpenAPI
