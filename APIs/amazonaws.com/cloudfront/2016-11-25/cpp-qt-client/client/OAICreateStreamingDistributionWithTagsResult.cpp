/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStreamingDistributionWithTagsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStreamingDistributionWithTagsResult::OAICreateStreamingDistributionWithTagsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStreamingDistributionWithTagsResult::OAICreateStreamingDistributionWithTagsResult() {
    this->initializeModel();
}

OAICreateStreamingDistributionWithTagsResult::~OAICreateStreamingDistributionWithTagsResult() {}

void OAICreateStreamingDistributionWithTagsResult::initializeModel() {

    m_streaming_distribution_isSet = false;
    m_streaming_distribution_isValid = false;
}

void OAICreateStreamingDistributionWithTagsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStreamingDistributionWithTagsResult::fromJsonObject(QJsonObject json) {

    m_streaming_distribution_isValid = ::OpenAPI::fromJsonValue(m_streaming_distribution, json[QString("StreamingDistribution")]);
    m_streaming_distribution_isSet = !json[QString("StreamingDistribution")].isNull() && m_streaming_distribution_isValid;
}

QString OAICreateStreamingDistributionWithTagsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStreamingDistributionWithTagsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_streaming_distribution.isSet()) {
        obj.insert(QString("StreamingDistribution"), ::OpenAPI::toJsonValue(m_streaming_distribution));
    }
    return obj;
}

OAICreateStreamingDistributionWithTagsResult_StreamingDistribution OAICreateStreamingDistributionWithTagsResult::getStreamingDistribution() const {
    return m_streaming_distribution;
}
void OAICreateStreamingDistributionWithTagsResult::setStreamingDistribution(const OAICreateStreamingDistributionWithTagsResult_StreamingDistribution &streaming_distribution) {
    m_streaming_distribution = streaming_distribution;
    m_streaming_distribution_isSet = true;
}

bool OAICreateStreamingDistributionWithTagsResult::is_streaming_distribution_Set() const{
    return m_streaming_distribution_isSet;
}

bool OAICreateStreamingDistributionWithTagsResult::is_streaming_distribution_Valid() const{
    return m_streaming_distribution_isValid;
}

bool OAICreateStreamingDistributionWithTagsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_streaming_distribution.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStreamingDistributionWithTagsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
