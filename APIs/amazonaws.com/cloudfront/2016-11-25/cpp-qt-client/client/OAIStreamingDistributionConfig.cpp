/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStreamingDistributionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStreamingDistributionConfig::OAIStreamingDistributionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStreamingDistributionConfig::OAIStreamingDistributionConfig() {
    this->initializeModel();
}

OAIStreamingDistributionConfig::~OAIStreamingDistributionConfig() {}

void OAIStreamingDistributionConfig::initializeModel() {

    m_caller_reference_isSet = false;
    m_caller_reference_isValid = false;

    m_s3_origin_isSet = false;
    m_s3_origin_isValid = false;

    m_aliases_isSet = false;
    m_aliases_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_logging_isSet = false;
    m_logging_isValid = false;

    m_trusted_signers_isSet = false;
    m_trusted_signers_isValid = false;

    m_price_class_isSet = false;
    m_price_class_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIStreamingDistributionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStreamingDistributionConfig::fromJsonObject(QJsonObject json) {

    m_caller_reference_isValid = ::OpenAPI::fromJsonValue(m_caller_reference, json[QString("CallerReference")]);
    m_caller_reference_isSet = !json[QString("CallerReference")].isNull() && m_caller_reference_isValid;

    m_s3_origin_isValid = ::OpenAPI::fromJsonValue(m_s3_origin, json[QString("S3Origin")]);
    m_s3_origin_isSet = !json[QString("S3Origin")].isNull() && m_s3_origin_isValid;

    m_aliases_isValid = ::OpenAPI::fromJsonValue(m_aliases, json[QString("Aliases")]);
    m_aliases_isSet = !json[QString("Aliases")].isNull() && m_aliases_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("Comment")]);
    m_comment_isSet = !json[QString("Comment")].isNull() && m_comment_isValid;

    m_logging_isValid = ::OpenAPI::fromJsonValue(m_logging, json[QString("Logging")]);
    m_logging_isSet = !json[QString("Logging")].isNull() && m_logging_isValid;

    m_trusted_signers_isValid = ::OpenAPI::fromJsonValue(m_trusted_signers, json[QString("TrustedSigners")]);
    m_trusted_signers_isSet = !json[QString("TrustedSigners")].isNull() && m_trusted_signers_isValid;

    m_price_class_isValid = ::OpenAPI::fromJsonValue(m_price_class, json[QString("PriceClass")]);
    m_price_class_isSet = !json[QString("PriceClass")].isNull() && m_price_class_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;
}

QString OAIStreamingDistributionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStreamingDistributionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_caller_reference_isSet) {
        obj.insert(QString("CallerReference"), ::OpenAPI::toJsonValue(m_caller_reference));
    }
    if (m_s3_origin.isSet()) {
        obj.insert(QString("S3Origin"), ::OpenAPI::toJsonValue(m_s3_origin));
    }
    if (m_aliases.isSet()) {
        obj.insert(QString("Aliases"), ::OpenAPI::toJsonValue(m_aliases));
    }
    if (m_comment_isSet) {
        obj.insert(QString("Comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_logging.isSet()) {
        obj.insert(QString("Logging"), ::OpenAPI::toJsonValue(m_logging));
    }
    if (m_trusted_signers.isSet()) {
        obj.insert(QString("TrustedSigners"), ::OpenAPI::toJsonValue(m_trusted_signers));
    }
    if (m_price_class.isSet()) {
        obj.insert(QString("PriceClass"), ::OpenAPI::toJsonValue(m_price_class));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

QString OAIStreamingDistributionConfig::getCallerReference() const {
    return m_caller_reference;
}
void OAIStreamingDistributionConfig::setCallerReference(const QString &caller_reference) {
    m_caller_reference = caller_reference;
    m_caller_reference_isSet = true;
}

bool OAIStreamingDistributionConfig::is_caller_reference_Set() const{
    return m_caller_reference_isSet;
}

bool OAIStreamingDistributionConfig::is_caller_reference_Valid() const{
    return m_caller_reference_isValid;
}

OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_S3Origin OAIStreamingDistributionConfig::getS3Origin() const {
    return m_s3_origin;
}
void OAIStreamingDistributionConfig::setS3Origin(const OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_S3Origin &s3_origin) {
    m_s3_origin = s3_origin;
    m_s3_origin_isSet = true;
}

bool OAIStreamingDistributionConfig::is_s3_origin_Set() const{
    return m_s3_origin_isSet;
}

bool OAIStreamingDistributionConfig::is_s3_origin_Valid() const{
    return m_s3_origin_isValid;
}

OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_Aliases OAIStreamingDistributionConfig::getAliases() const {
    return m_aliases;
}
void OAIStreamingDistributionConfig::setAliases(const OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_Aliases &aliases) {
    m_aliases = aliases;
    m_aliases_isSet = true;
}

bool OAIStreamingDistributionConfig::is_aliases_Set() const{
    return m_aliases_isSet;
}

bool OAIStreamingDistributionConfig::is_aliases_Valid() const{
    return m_aliases_isValid;
}

QString OAIStreamingDistributionConfig::getComment() const {
    return m_comment;
}
void OAIStreamingDistributionConfig::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIStreamingDistributionConfig::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIStreamingDistributionConfig::is_comment_Valid() const{
    return m_comment_isValid;
}

OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_Logging OAIStreamingDistributionConfig::getLogging() const {
    return m_logging;
}
void OAIStreamingDistributionConfig::setLogging(const OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_Logging &logging) {
    m_logging = logging;
    m_logging_isSet = true;
}

bool OAIStreamingDistributionConfig::is_logging_Set() const{
    return m_logging_isSet;
}

bool OAIStreamingDistributionConfig::is_logging_Valid() const{
    return m_logging_isValid;
}

OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_TrustedSigners OAIStreamingDistributionConfig::getTrustedSigners() const {
    return m_trusted_signers;
}
void OAIStreamingDistributionConfig::setTrustedSigners(const OAICreateStreamingDistribution2016_11_25_request_StreamingDistributionConfig_TrustedSigners &trusted_signers) {
    m_trusted_signers = trusted_signers;
    m_trusted_signers_isSet = true;
}

bool OAIStreamingDistributionConfig::is_trusted_signers_Set() const{
    return m_trusted_signers_isSet;
}

bool OAIStreamingDistributionConfig::is_trusted_signers_Valid() const{
    return m_trusted_signers_isValid;
}

OAIPriceClass OAIStreamingDistributionConfig::getPriceClass() const {
    return m_price_class;
}
void OAIStreamingDistributionConfig::setPriceClass(const OAIPriceClass &price_class) {
    m_price_class = price_class;
    m_price_class_isSet = true;
}

bool OAIStreamingDistributionConfig::is_price_class_Set() const{
    return m_price_class_isSet;
}

bool OAIStreamingDistributionConfig::is_price_class_Valid() const{
    return m_price_class_isValid;
}

bool OAIStreamingDistributionConfig::getEnabled() const {
    return m_enabled;
}
void OAIStreamingDistributionConfig::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIStreamingDistributionConfig::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIStreamingDistributionConfig::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIStreamingDistributionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_caller_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_origin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aliases.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logging.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trusted_signers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_class.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStreamingDistributionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_caller_reference_isValid && m_s3_origin_isValid && m_comment_isValid && m_trusted_signers_isValid && m_enabled_isValid && true;
}

} // namespace OpenAPI
