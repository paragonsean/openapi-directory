/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDistributionResult_Distribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDistributionResult_Distribution::OAICreateDistributionResult_Distribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDistributionResult_Distribution::OAICreateDistributionResult_Distribution() {
    this->initializeModel();
}

OAICreateDistributionResult_Distribution::~OAICreateDistributionResult_Distribution() {}

void OAICreateDistributionResult_Distribution::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_in_progress_invalidation_batches_isSet = false;
    m_in_progress_invalidation_batches_isValid = false;

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_active_trusted_signers_isSet = false;
    m_active_trusted_signers_isValid = false;

    m_distribution_config_isSet = false;
    m_distribution_config_isValid = false;
}

void OAICreateDistributionResult_Distribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDistributionResult_Distribution::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("ARN")]);
    m_arn_isSet = !json[QString("ARN")].isNull() && m_arn_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_in_progress_invalidation_batches_isValid = ::OpenAPI::fromJsonValue(m_in_progress_invalidation_batches, json[QString("InProgressInvalidationBatches")]);
    m_in_progress_invalidation_batches_isSet = !json[QString("InProgressInvalidationBatches")].isNull() && m_in_progress_invalidation_batches_isValid;

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_active_trusted_signers_isValid = ::OpenAPI::fromJsonValue(m_active_trusted_signers, json[QString("ActiveTrustedSigners")]);
    m_active_trusted_signers_isSet = !json[QString("ActiveTrustedSigners")].isNull() && m_active_trusted_signers_isValid;

    m_distribution_config_isValid = ::OpenAPI::fromJsonValue(m_distribution_config, json[QString("DistributionConfig")]);
    m_distribution_config_isSet = !json[QString("DistributionConfig")].isNull() && m_distribution_config_isValid;
}

QString OAICreateDistributionResult_Distribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDistributionResult_Distribution::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("ARN"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_in_progress_invalidation_batches_isSet) {
        obj.insert(QString("InProgressInvalidationBatches"), ::OpenAPI::toJsonValue(m_in_progress_invalidation_batches));
    }
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_active_trusted_signers.isSet()) {
        obj.insert(QString("ActiveTrustedSigners"), ::OpenAPI::toJsonValue(m_active_trusted_signers));
    }
    if (m_distribution_config.isSet()) {
        obj.insert(QString("DistributionConfig"), ::OpenAPI::toJsonValue(m_distribution_config));
    }
    return obj;
}

QString OAICreateDistributionResult_Distribution::getId() const {
    return m_id;
}
void OAICreateDistributionResult_Distribution::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateDistributionResult_Distribution::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateDistributionResult_Distribution::getArn() const {
    return m_arn;
}
void OAICreateDistributionResult_Distribution::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateDistributionResult_Distribution::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateDistributionResult_Distribution::getStatus() const {
    return m_status;
}
void OAICreateDistributionResult_Distribution::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateDistributionResult_Distribution::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAICreateDistributionResult_Distribution::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAICreateDistributionResult_Distribution::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAICreateDistributionResult_Distribution::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

qint32 OAICreateDistributionResult_Distribution::getInProgressInvalidationBatches() const {
    return m_in_progress_invalidation_batches;
}
void OAICreateDistributionResult_Distribution::setInProgressInvalidationBatches(const qint32 &in_progress_invalidation_batches) {
    m_in_progress_invalidation_batches = in_progress_invalidation_batches;
    m_in_progress_invalidation_batches_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_in_progress_invalidation_batches_Set() const{
    return m_in_progress_invalidation_batches_isSet;
}

bool OAICreateDistributionResult_Distribution::is_in_progress_invalidation_batches_Valid() const{
    return m_in_progress_invalidation_batches_isValid;
}

QString OAICreateDistributionResult_Distribution::getDomainName() const {
    return m_domain_name;
}
void OAICreateDistributionResult_Distribution::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAICreateDistributionResult_Distribution::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

OAIDistribution_ActiveTrustedSigners OAICreateDistributionResult_Distribution::getActiveTrustedSigners() const {
    return m_active_trusted_signers;
}
void OAICreateDistributionResult_Distribution::setActiveTrustedSigners(const OAIDistribution_ActiveTrustedSigners &active_trusted_signers) {
    m_active_trusted_signers = active_trusted_signers;
    m_active_trusted_signers_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_active_trusted_signers_Set() const{
    return m_active_trusted_signers_isSet;
}

bool OAICreateDistributionResult_Distribution::is_active_trusted_signers_Valid() const{
    return m_active_trusted_signers_isValid;
}

OAIDistribution_DistributionConfig OAICreateDistributionResult_Distribution::getDistributionConfig() const {
    return m_distribution_config;
}
void OAICreateDistributionResult_Distribution::setDistributionConfig(const OAIDistribution_DistributionConfig &distribution_config) {
    m_distribution_config = distribution_config;
    m_distribution_config_isSet = true;
}

bool OAICreateDistributionResult_Distribution::is_distribution_config_Set() const{
    return m_distribution_config_isSet;
}

bool OAICreateDistributionResult_Distribution::is_distribution_config_Valid() const{
    return m_distribution_config_isValid;
}

bool OAICreateDistributionResult_Distribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_progress_invalidation_batches_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_trusted_signers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDistributionResult_Distribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_arn_isValid && m_status_isValid && m_last_modified_time_isValid && m_in_progress_invalidation_batches_isValid && m_domain_name_isValid && m_active_trusted_signers_isValid && m_distribution_config_isValid && true;
}

} // namespace OpenAPI
