/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateInvalidationResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateInvalidationResult::OAICreateInvalidationResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateInvalidationResult::OAICreateInvalidationResult() {
    this->initializeModel();
}

OAICreateInvalidationResult::~OAICreateInvalidationResult() {}

void OAICreateInvalidationResult::initializeModel() {

    m_invalidation_isSet = false;
    m_invalidation_isValid = false;
}

void OAICreateInvalidationResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateInvalidationResult::fromJsonObject(QJsonObject json) {

    m_invalidation_isValid = ::OpenAPI::fromJsonValue(m_invalidation, json[QString("Invalidation")]);
    m_invalidation_isSet = !json[QString("Invalidation")].isNull() && m_invalidation_isValid;
}

QString OAICreateInvalidationResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateInvalidationResult::asJsonObject() const {
    QJsonObject obj;
    if (m_invalidation.isSet()) {
        obj.insert(QString("Invalidation"), ::OpenAPI::toJsonValue(m_invalidation));
    }
    return obj;
}

OAICreateInvalidationResult_Invalidation OAICreateInvalidationResult::getInvalidation() const {
    return m_invalidation;
}
void OAICreateInvalidationResult::setInvalidation(const OAICreateInvalidationResult_Invalidation &invalidation) {
    m_invalidation = invalidation;
    m_invalidation_isSet = true;
}

bool OAICreateInvalidationResult::is_invalidation_Set() const{
    return m_invalidation_isSet;
}

bool OAICreateInvalidationResult::is_invalidation_Valid() const{
    return m_invalidation_isValid;
}

bool OAICreateInvalidationResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invalidation.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateInvalidationResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
