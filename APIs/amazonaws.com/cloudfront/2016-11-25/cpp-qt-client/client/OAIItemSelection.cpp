/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItemSelection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItemSelection::OAIItemSelection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItemSelection::OAIItemSelection() {
    this->initializeModel();
}

OAIItemSelection::~OAIItemSelection() {}

void OAIItemSelection::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIItemSelection::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIItemSelection::fromJson(QString jsonString) {
    
    if ( jsonString.compare("none", Qt::CaseInsensitive) == 0) {
        m_value = eOAIItemSelection::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("whitelist", Qt::CaseInsensitive) == 0) {
        m_value = eOAIItemSelection::WHITELIST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("all", Qt::CaseInsensitive) == 0) {
        m_value = eOAIItemSelection::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIItemSelection::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIItemSelection::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIItemSelection::NONE:
            val = "none";
            break;
        case eOAIItemSelection::WHITELIST:
            val = "whitelist";
            break;
        case eOAIItemSelection::ALL:
            val = "all";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIItemSelection::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIItemSelection::eOAIItemSelection OAIItemSelection::getValue() const {
    return m_value;
}

void OAIItemSelection::setValue(const OAIItemSelection::eOAIItemSelection& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIItemSelection::isSet() const {
    
    return m_value_isSet;
}

bool OAIItemSelection::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
