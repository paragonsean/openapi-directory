/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITagResource2016_11_25_request_Tags.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITagResource2016_11_25_request_Tags::OAITagResource2016_11_25_request_Tags(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITagResource2016_11_25_request_Tags::OAITagResource2016_11_25_request_Tags() {
    this->initializeModel();
}

OAITagResource2016_11_25_request_Tags::~OAITagResource2016_11_25_request_Tags() {}

void OAITagResource2016_11_25_request_Tags::initializeModel() {

    m_items_isSet = false;
    m_items_isValid = false;
}

void OAITagResource2016_11_25_request_Tags::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITagResource2016_11_25_request_Tags::fromJsonObject(QJsonObject json) {

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;
}

QString OAITagResource2016_11_25_request_Tags::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITagResource2016_11_25_request_Tags::asJsonObject() const {
    QJsonObject obj;
    if (m_items.isSet()) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    return obj;
}

QList OAITagResource2016_11_25_request_Tags::getItems() const {
    return m_items;
}
void OAITagResource2016_11_25_request_Tags::setItems(const QList &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAITagResource2016_11_25_request_Tags::is_items_Set() const{
    return m_items_isSet;
}

bool OAITagResource2016_11_25_request_Tags::is_items_Valid() const{
    return m_items_isValid;
}

bool OAITagResource2016_11_25_request_Tags::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_items.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITagResource2016_11_25_request_Tags::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
