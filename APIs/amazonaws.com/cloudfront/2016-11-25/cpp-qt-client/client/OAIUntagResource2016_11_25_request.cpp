/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUntagResource2016_11_25_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUntagResource2016_11_25_request::OAIUntagResource2016_11_25_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUntagResource2016_11_25_request::OAIUntagResource2016_11_25_request() {
    this->initializeModel();
}

OAIUntagResource2016_11_25_request::~OAIUntagResource2016_11_25_request() {}

void OAIUntagResource2016_11_25_request::initializeModel() {

    m_tag_keys_isSet = false;
    m_tag_keys_isValid = false;
}

void OAIUntagResource2016_11_25_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUntagResource2016_11_25_request::fromJsonObject(QJsonObject json) {

    m_tag_keys_isValid = ::OpenAPI::fromJsonValue(m_tag_keys, json[QString("TagKeys")]);
    m_tag_keys_isSet = !json[QString("TagKeys")].isNull() && m_tag_keys_isValid;
}

QString OAIUntagResource2016_11_25_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUntagResource2016_11_25_request::asJsonObject() const {
    QJsonObject obj;
    if (m_tag_keys.isSet()) {
        obj.insert(QString("TagKeys"), ::OpenAPI::toJsonValue(m_tag_keys));
    }
    return obj;
}

OAIUntagResource2016_11_25_request_TagKeys OAIUntagResource2016_11_25_request::getTagKeys() const {
    return m_tag_keys;
}
void OAIUntagResource2016_11_25_request::setTagKeys(const OAIUntagResource2016_11_25_request_TagKeys &tag_keys) {
    m_tag_keys = tag_keys;
    m_tag_keys_isSet = true;
}

bool OAIUntagResource2016_11_25_request::is_tag_keys_Set() const{
    return m_tag_keys_isSet;
}

bool OAIUntagResource2016_11_25_request::is_tag_keys_Valid() const{
    return m_tag_keys_isValid;
}

bool OAIUntagResource2016_11_25_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tag_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUntagResource2016_11_25_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tag_keys_isValid && true;
}

} // namespace OpenAPI
