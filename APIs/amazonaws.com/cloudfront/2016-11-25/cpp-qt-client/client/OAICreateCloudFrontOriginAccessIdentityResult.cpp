/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCloudFrontOriginAccessIdentityResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCloudFrontOriginAccessIdentityResult::OAICreateCloudFrontOriginAccessIdentityResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCloudFrontOriginAccessIdentityResult::OAICreateCloudFrontOriginAccessIdentityResult() {
    this->initializeModel();
}

OAICreateCloudFrontOriginAccessIdentityResult::~OAICreateCloudFrontOriginAccessIdentityResult() {}

void OAICreateCloudFrontOriginAccessIdentityResult::initializeModel() {

    m_cloud_front_origin_access_identity_isSet = false;
    m_cloud_front_origin_access_identity_isValid = false;
}

void OAICreateCloudFrontOriginAccessIdentityResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCloudFrontOriginAccessIdentityResult::fromJsonObject(QJsonObject json) {

    m_cloud_front_origin_access_identity_isValid = ::OpenAPI::fromJsonValue(m_cloud_front_origin_access_identity, json[QString("CloudFrontOriginAccessIdentity")]);
    m_cloud_front_origin_access_identity_isSet = !json[QString("CloudFrontOriginAccessIdentity")].isNull() && m_cloud_front_origin_access_identity_isValid;
}

QString OAICreateCloudFrontOriginAccessIdentityResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCloudFrontOriginAccessIdentityResult::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_front_origin_access_identity.isSet()) {
        obj.insert(QString("CloudFrontOriginAccessIdentity"), ::OpenAPI::toJsonValue(m_cloud_front_origin_access_identity));
    }
    return obj;
}

OAICreateCloudFrontOriginAccessIdentityResult_CloudFrontOriginAccessIdentity OAICreateCloudFrontOriginAccessIdentityResult::getCloudFrontOriginAccessIdentity() const {
    return m_cloud_front_origin_access_identity;
}
void OAICreateCloudFrontOriginAccessIdentityResult::setCloudFrontOriginAccessIdentity(const OAICreateCloudFrontOriginAccessIdentityResult_CloudFrontOriginAccessIdentity &cloud_front_origin_access_identity) {
    m_cloud_front_origin_access_identity = cloud_front_origin_access_identity;
    m_cloud_front_origin_access_identity_isSet = true;
}

bool OAICreateCloudFrontOriginAccessIdentityResult::is_cloud_front_origin_access_identity_Set() const{
    return m_cloud_front_origin_access_identity_isSet;
}

bool OAICreateCloudFrontOriginAccessIdentityResult::is_cloud_front_origin_access_identity_Valid() const{
    return m_cloud_front_origin_access_identity_isValid;
}

bool OAICreateCloudFrontOriginAccessIdentityResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_front_origin_access_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCloudFrontOriginAccessIdentityResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
