/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITagResource2016_11_25_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITagResource2016_11_25_request::OAITagResource2016_11_25_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITagResource2016_11_25_request::OAITagResource2016_11_25_request() {
    this->initializeModel();
}

OAITagResource2016_11_25_request::~OAITagResource2016_11_25_request() {}

void OAITagResource2016_11_25_request::initializeModel() {

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAITagResource2016_11_25_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITagResource2016_11_25_request::fromJsonObject(QJsonObject json) {

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAITagResource2016_11_25_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITagResource2016_11_25_request::asJsonObject() const {
    QJsonObject obj;
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAITagResource2016_11_25_request_Tags OAITagResource2016_11_25_request::getTags() const {
    return m_tags;
}
void OAITagResource2016_11_25_request::setTags(const OAITagResource2016_11_25_request_Tags &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAITagResource2016_11_25_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAITagResource2016_11_25_request::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAITagResource2016_11_25_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITagResource2016_11_25_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tags_isValid && true;
}

} // namespace OpenAPI
