/*
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateInvalidationResultInvalidation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The returned result of the corresponding request.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:55.977307-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateInvalidationResult {
  public static final String SERIALIZED_NAME_INVALIDATION = "Invalidation";
  @SerializedName(SERIALIZED_NAME_INVALIDATION)
  private CreateInvalidationResultInvalidation invalidation;

  public CreateInvalidationResult() {
  }

  public CreateInvalidationResult invalidation(CreateInvalidationResultInvalidation invalidation) {
    this.invalidation = invalidation;
    return this;
  }

  /**
   * Get invalidation
   * @return invalidation
   */
  @javax.annotation.Nullable
  public CreateInvalidationResultInvalidation getInvalidation() {
    return invalidation;
  }

  public void setInvalidation(CreateInvalidationResultInvalidation invalidation) {
    this.invalidation = invalidation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInvalidationResult createInvalidationResult = (CreateInvalidationResult) o;
    return Objects.equals(this.invalidation, createInvalidationResult.invalidation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invalidation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInvalidationResult {\n");
    sb.append("    invalidation: ").append(toIndentedString(invalidation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Invalidation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateInvalidationResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateInvalidationResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateInvalidationResult is not found in the empty JSON string", CreateInvalidationResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateInvalidationResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateInvalidationResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Invalidation`
      if (jsonObj.get("Invalidation") != null && !jsonObj.get("Invalidation").isJsonNull()) {
        CreateInvalidationResultInvalidation.validateJsonElement(jsonObj.get("Invalidation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateInvalidationResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateInvalidationResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateInvalidationResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateInvalidationResult.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateInvalidationResult>() {
           @Override
           public void write(JsonWriter out, CreateInvalidationResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateInvalidationResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateInvalidationResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateInvalidationResult
   * @throws IOException if the JSON string is invalid with respect to CreateInvalidationResult
   */
  public static CreateInvalidationResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateInvalidationResult.class);
  }

  /**
   * Convert an instance of CreateInvalidationResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

