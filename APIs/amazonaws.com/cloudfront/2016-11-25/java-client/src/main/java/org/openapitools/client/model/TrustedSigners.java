/*
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content.&lt;/p&gt; &lt;p&gt;If you want to require signed URLs in requests for objects in the target origin that match the &lt;code&gt;PathPattern&lt;/code&gt; for this cache behavior, specify &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;Enabled&lt;/code&gt;, and specify the applicable values for &lt;code&gt;Quantity&lt;/code&gt; and &lt;code&gt;Items&lt;/code&gt;. For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\&quot;&gt;Serving Private Content through CloudFront&lt;/a&gt; in the &lt;i&gt;Amazon Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t want to require signed URLs in requests for objects that match &lt;code&gt;PathPattern&lt;/code&gt;, specify &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;Enabled&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;Quantity&lt;/code&gt;. Omit &lt;code&gt;Items&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To add, change, or remove one or more trusted signers, change &lt;code&gt;Enabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; (if it&#39;s currently &lt;code&gt;false&lt;/code&gt;), change &lt;code&gt;Quantity&lt;/code&gt; as applicable, and specify all of the trusted signers that you want to include in the updated distribution.&lt;/p&gt; &lt;p&gt;For more information about updating the distribution configuration, see &lt;a&gt;DistributionConfig&lt;/a&gt; .&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:55.977307-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TrustedSigners {
  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_QUANTITY = "Quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_ITEMS = "Items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List items;

  public TrustedSigners() {
  }

  public TrustedSigners enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public TrustedSigners quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nonnull
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public TrustedSigners items(List items) {
    this.items = items;
    return this;
  }

  /**
   * Get items
   * @return items
   */
  @javax.annotation.Nullable
  public List getItems() {
    return items;
  }

  public void setItems(List items) {
    this.items = items;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrustedSigners trustedSigners = (TrustedSigners) o;
    return Objects.equals(this.enabled, trustedSigners.enabled) &&
        Objects.equals(this.quantity, trustedSigners.quantity) &&
        Objects.equals(this.items, trustedSigners.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, quantity, items);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrustedSigners {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Enabled");
    openapiFields.add("Quantity");
    openapiFields.add("Items");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Enabled");
    openapiRequiredFields.add("Quantity");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TrustedSigners
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TrustedSigners.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TrustedSigners is not found in the empty JSON string", TrustedSigners.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TrustedSigners.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TrustedSigners` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TrustedSigners.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Enabled`
      Boolean.validateJsonElement(jsonObj.get("Enabled"));
      // validate the required field `Quantity`
      Integer.validateJsonElement(jsonObj.get("Quantity"));
      // validate the optional field `Items`
      if (jsonObj.get("Items") != null && !jsonObj.get("Items").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Items"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TrustedSigners.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TrustedSigners' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TrustedSigners> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TrustedSigners.class));

       return (TypeAdapter<T>) new TypeAdapter<TrustedSigners>() {
           @Override
           public void write(JsonWriter out, TrustedSigners value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TrustedSigners read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TrustedSigners given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TrustedSigners
   * @throws IOException if the JSON string is invalid with respect to TrustedSigners
   */
  public static TrustedSigners fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TrustedSigners.class);
  }

  /**
   * Convert an instance of TrustedSigners to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

