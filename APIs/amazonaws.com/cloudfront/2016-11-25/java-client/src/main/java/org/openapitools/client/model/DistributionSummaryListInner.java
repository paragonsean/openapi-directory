/*
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about the CloudFront API actions, data types, and errors. For detailed information about CloudFront features and their associated API calls, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2016-11-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreateDistribution20161125RequestDistributionConfigAliases;
import org.openapitools.client.model.CreateDistribution20161125RequestDistributionConfigDefaultCacheBehavior;
import org.openapitools.client.model.DistributionSummaryCacheBehaviors;
import org.openapitools.client.model.DistributionSummaryCustomErrorResponses;
import org.openapitools.client.model.DistributionSummaryOrigins;
import org.openapitools.client.model.HttpVersion;
import org.openapitools.client.model.PriceClass;
import org.openapitools.client.model.Restrictions;
import org.openapitools.client.model.ViewerCertificate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DistributionSummaryListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:55.977307-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DistributionSummaryListInner {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_A_R_N = "ARN";
  @SerializedName(SERIALIZED_NAME_A_R_N)
  private String ARN;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_ALIASES = "Aliases";
  @SerializedName(SERIALIZED_NAME_ALIASES)
  private CreateDistribution20161125RequestDistributionConfigAliases aliases;

  public static final String SERIALIZED_NAME_ORIGINS = "Origins";
  @SerializedName(SERIALIZED_NAME_ORIGINS)
  private DistributionSummaryOrigins origins;

  public static final String SERIALIZED_NAME_DEFAULT_CACHE_BEHAVIOR = "DefaultCacheBehavior";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CACHE_BEHAVIOR)
  private CreateDistribution20161125RequestDistributionConfigDefaultCacheBehavior defaultCacheBehavior;

  public static final String SERIALIZED_NAME_CACHE_BEHAVIORS = "CacheBehaviors";
  @SerializedName(SERIALIZED_NAME_CACHE_BEHAVIORS)
  private DistributionSummaryCacheBehaviors cacheBehaviors;

  public static final String SERIALIZED_NAME_CUSTOM_ERROR_RESPONSES = "CustomErrorResponses";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ERROR_RESPONSES)
  private DistributionSummaryCustomErrorResponses customErrorResponses;

  public static final String SERIALIZED_NAME_COMMENT = "Comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_PRICE_CLASS = "PriceClass";
  @SerializedName(SERIALIZED_NAME_PRICE_CLASS)
  private PriceClass priceClass;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_VIEWER_CERTIFICATE = "ViewerCertificate";
  @SerializedName(SERIALIZED_NAME_VIEWER_CERTIFICATE)
  private ViewerCertificate viewerCertificate;

  public static final String SERIALIZED_NAME_RESTRICTIONS = "Restrictions";
  @SerializedName(SERIALIZED_NAME_RESTRICTIONS)
  private Restrictions restrictions;

  public static final String SERIALIZED_NAME_WEB_A_C_L_ID = "WebACLId";
  @SerializedName(SERIALIZED_NAME_WEB_A_C_L_ID)
  private String webACLId;

  public static final String SERIALIZED_NAME_HTTP_VERSION = "HttpVersion";
  @SerializedName(SERIALIZED_NAME_HTTP_VERSION)
  private HttpVersion httpVersion;

  public static final String SERIALIZED_NAME_IS_I_P_V6_ENABLED = "IsIPV6Enabled";
  @SerializedName(SERIALIZED_NAME_IS_I_P_V6_ENABLED)
  private Boolean isIPV6Enabled;

  public DistributionSummaryListInner() {
  }

  public DistributionSummaryListInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DistributionSummaryListInner ARN(String ARN) {
    this.ARN = ARN;
    return this;
  }

  /**
   * Get ARN
   * @return ARN
   */
  @javax.annotation.Nonnull
  public String getARN() {
    return ARN;
  }

  public void setARN(String ARN) {
    this.ARN = ARN;
  }


  public DistributionSummaryListInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public DistributionSummaryListInner lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public DistributionSummaryListInner domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nonnull
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public DistributionSummaryListInner aliases(CreateDistribution20161125RequestDistributionConfigAliases aliases) {
    this.aliases = aliases;
    return this;
  }

  /**
   * Get aliases
   * @return aliases
   */
  @javax.annotation.Nonnull
  public CreateDistribution20161125RequestDistributionConfigAliases getAliases() {
    return aliases;
  }

  public void setAliases(CreateDistribution20161125RequestDistributionConfigAliases aliases) {
    this.aliases = aliases;
  }


  public DistributionSummaryListInner origins(DistributionSummaryOrigins origins) {
    this.origins = origins;
    return this;
  }

  /**
   * Get origins
   * @return origins
   */
  @javax.annotation.Nonnull
  public DistributionSummaryOrigins getOrigins() {
    return origins;
  }

  public void setOrigins(DistributionSummaryOrigins origins) {
    this.origins = origins;
  }


  public DistributionSummaryListInner defaultCacheBehavior(CreateDistribution20161125RequestDistributionConfigDefaultCacheBehavior defaultCacheBehavior) {
    this.defaultCacheBehavior = defaultCacheBehavior;
    return this;
  }

  /**
   * Get defaultCacheBehavior
   * @return defaultCacheBehavior
   */
  @javax.annotation.Nonnull
  public CreateDistribution20161125RequestDistributionConfigDefaultCacheBehavior getDefaultCacheBehavior() {
    return defaultCacheBehavior;
  }

  public void setDefaultCacheBehavior(CreateDistribution20161125RequestDistributionConfigDefaultCacheBehavior defaultCacheBehavior) {
    this.defaultCacheBehavior = defaultCacheBehavior;
  }


  public DistributionSummaryListInner cacheBehaviors(DistributionSummaryCacheBehaviors cacheBehaviors) {
    this.cacheBehaviors = cacheBehaviors;
    return this;
  }

  /**
   * Get cacheBehaviors
   * @return cacheBehaviors
   */
  @javax.annotation.Nonnull
  public DistributionSummaryCacheBehaviors getCacheBehaviors() {
    return cacheBehaviors;
  }

  public void setCacheBehaviors(DistributionSummaryCacheBehaviors cacheBehaviors) {
    this.cacheBehaviors = cacheBehaviors;
  }


  public DistributionSummaryListInner customErrorResponses(DistributionSummaryCustomErrorResponses customErrorResponses) {
    this.customErrorResponses = customErrorResponses;
    return this;
  }

  /**
   * Get customErrorResponses
   * @return customErrorResponses
   */
  @javax.annotation.Nonnull
  public DistributionSummaryCustomErrorResponses getCustomErrorResponses() {
    return customErrorResponses;
  }

  public void setCustomErrorResponses(DistributionSummaryCustomErrorResponses customErrorResponses) {
    this.customErrorResponses = customErrorResponses;
  }


  public DistributionSummaryListInner comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nonnull
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public DistributionSummaryListInner priceClass(PriceClass priceClass) {
    this.priceClass = priceClass;
    return this;
  }

  /**
   * Get priceClass
   * @return priceClass
   */
  @javax.annotation.Nonnull
  public PriceClass getPriceClass() {
    return priceClass;
  }

  public void setPriceClass(PriceClass priceClass) {
    this.priceClass = priceClass;
  }


  public DistributionSummaryListInner enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public DistributionSummaryListInner viewerCertificate(ViewerCertificate viewerCertificate) {
    this.viewerCertificate = viewerCertificate;
    return this;
  }

  /**
   * Get viewerCertificate
   * @return viewerCertificate
   */
  @javax.annotation.Nonnull
  public ViewerCertificate getViewerCertificate() {
    return viewerCertificate;
  }

  public void setViewerCertificate(ViewerCertificate viewerCertificate) {
    this.viewerCertificate = viewerCertificate;
  }


  public DistributionSummaryListInner restrictions(Restrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  /**
   * Get restrictions
   * @return restrictions
   */
  @javax.annotation.Nonnull
  public Restrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(Restrictions restrictions) {
    this.restrictions = restrictions;
  }


  public DistributionSummaryListInner webACLId(String webACLId) {
    this.webACLId = webACLId;
    return this;
  }

  /**
   * Get webACLId
   * @return webACLId
   */
  @javax.annotation.Nonnull
  public String getWebACLId() {
    return webACLId;
  }

  public void setWebACLId(String webACLId) {
    this.webACLId = webACLId;
  }


  public DistributionSummaryListInner httpVersion(HttpVersion httpVersion) {
    this.httpVersion = httpVersion;
    return this;
  }

  /**
   * Get httpVersion
   * @return httpVersion
   */
  @javax.annotation.Nonnull
  public HttpVersion getHttpVersion() {
    return httpVersion;
  }

  public void setHttpVersion(HttpVersion httpVersion) {
    this.httpVersion = httpVersion;
  }


  public DistributionSummaryListInner isIPV6Enabled(Boolean isIPV6Enabled) {
    this.isIPV6Enabled = isIPV6Enabled;
    return this;
  }

  /**
   * Get isIPV6Enabled
   * @return isIPV6Enabled
   */
  @javax.annotation.Nonnull
  public Boolean getIsIPV6Enabled() {
    return isIPV6Enabled;
  }

  public void setIsIPV6Enabled(Boolean isIPV6Enabled) {
    this.isIPV6Enabled = isIPV6Enabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DistributionSummaryListInner distributionSummaryListInner = (DistributionSummaryListInner) o;
    return Objects.equals(this.id, distributionSummaryListInner.id) &&
        Objects.equals(this.ARN, distributionSummaryListInner.ARN) &&
        Objects.equals(this.status, distributionSummaryListInner.status) &&
        Objects.equals(this.lastModifiedTime, distributionSummaryListInner.lastModifiedTime) &&
        Objects.equals(this.domainName, distributionSummaryListInner.domainName) &&
        Objects.equals(this.aliases, distributionSummaryListInner.aliases) &&
        Objects.equals(this.origins, distributionSummaryListInner.origins) &&
        Objects.equals(this.defaultCacheBehavior, distributionSummaryListInner.defaultCacheBehavior) &&
        Objects.equals(this.cacheBehaviors, distributionSummaryListInner.cacheBehaviors) &&
        Objects.equals(this.customErrorResponses, distributionSummaryListInner.customErrorResponses) &&
        Objects.equals(this.comment, distributionSummaryListInner.comment) &&
        Objects.equals(this.priceClass, distributionSummaryListInner.priceClass) &&
        Objects.equals(this.enabled, distributionSummaryListInner.enabled) &&
        Objects.equals(this.viewerCertificate, distributionSummaryListInner.viewerCertificate) &&
        Objects.equals(this.restrictions, distributionSummaryListInner.restrictions) &&
        Objects.equals(this.webACLId, distributionSummaryListInner.webACLId) &&
        Objects.equals(this.httpVersion, distributionSummaryListInner.httpVersion) &&
        Objects.equals(this.isIPV6Enabled, distributionSummaryListInner.isIPV6Enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ARN, status, lastModifiedTime, domainName, aliases, origins, defaultCacheBehavior, cacheBehaviors, customErrorResponses, comment, priceClass, enabled, viewerCertificate, restrictions, webACLId, httpVersion, isIPV6Enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DistributionSummaryListInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ARN: ").append(toIndentedString(ARN)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    defaultCacheBehavior: ").append(toIndentedString(defaultCacheBehavior)).append("\n");
    sb.append("    cacheBehaviors: ").append(toIndentedString(cacheBehaviors)).append("\n");
    sb.append("    customErrorResponses: ").append(toIndentedString(customErrorResponses)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    priceClass: ").append(toIndentedString(priceClass)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    viewerCertificate: ").append(toIndentedString(viewerCertificate)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    webACLId: ").append(toIndentedString(webACLId)).append("\n");
    sb.append("    httpVersion: ").append(toIndentedString(httpVersion)).append("\n");
    sb.append("    isIPV6Enabled: ").append(toIndentedString(isIPV6Enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("ARN");
    openapiFields.add("Status");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("DomainName");
    openapiFields.add("Aliases");
    openapiFields.add("Origins");
    openapiFields.add("DefaultCacheBehavior");
    openapiFields.add("CacheBehaviors");
    openapiFields.add("CustomErrorResponses");
    openapiFields.add("Comment");
    openapiFields.add("PriceClass");
    openapiFields.add("Enabled");
    openapiFields.add("ViewerCertificate");
    openapiFields.add("Restrictions");
    openapiFields.add("WebACLId");
    openapiFields.add("HttpVersion");
    openapiFields.add("IsIPV6Enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Id");
    openapiRequiredFields.add("ARN");
    openapiRequiredFields.add("Status");
    openapiRequiredFields.add("LastModifiedTime");
    openapiRequiredFields.add("DomainName");
    openapiRequiredFields.add("Aliases");
    openapiRequiredFields.add("Origins");
    openapiRequiredFields.add("DefaultCacheBehavior");
    openapiRequiredFields.add("CacheBehaviors");
    openapiRequiredFields.add("CustomErrorResponses");
    openapiRequiredFields.add("Comment");
    openapiRequiredFields.add("PriceClass");
    openapiRequiredFields.add("Enabled");
    openapiRequiredFields.add("ViewerCertificate");
    openapiRequiredFields.add("Restrictions");
    openapiRequiredFields.add("WebACLId");
    openapiRequiredFields.add("HttpVersion");
    openapiRequiredFields.add("IsIPV6Enabled");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DistributionSummaryListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DistributionSummaryListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DistributionSummaryListInner is not found in the empty JSON string", DistributionSummaryListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DistributionSummaryListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DistributionSummaryListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DistributionSummaryListInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Id`
      String.validateJsonElement(jsonObj.get("Id"));
      // validate the required field `ARN`
      String.validateJsonElement(jsonObj.get("ARN"));
      // validate the required field `Status`
      String.validateJsonElement(jsonObj.get("Status"));
      // validate the required field `LastModifiedTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      // validate the required field `DomainName`
      String.validateJsonElement(jsonObj.get("DomainName"));
      // validate the required field `Aliases`
      CreateDistribution20161125RequestDistributionConfigAliases.validateJsonElement(jsonObj.get("Aliases"));
      // validate the required field `Origins`
      DistributionSummaryOrigins.validateJsonElement(jsonObj.get("Origins"));
      // validate the required field `DefaultCacheBehavior`
      CreateDistribution20161125RequestDistributionConfigDefaultCacheBehavior.validateJsonElement(jsonObj.get("DefaultCacheBehavior"));
      // validate the required field `CacheBehaviors`
      DistributionSummaryCacheBehaviors.validateJsonElement(jsonObj.get("CacheBehaviors"));
      // validate the required field `CustomErrorResponses`
      DistributionSummaryCustomErrorResponses.validateJsonElement(jsonObj.get("CustomErrorResponses"));
      // validate the required field `Comment`
      String.validateJsonElement(jsonObj.get("Comment"));
      // validate the required field `PriceClass`
      PriceClass.validateJsonElement(jsonObj.get("PriceClass"));
      // validate the required field `Enabled`
      Boolean.validateJsonElement(jsonObj.get("Enabled"));
      // validate the required field `ViewerCertificate`
      ViewerCertificate.validateJsonElement(jsonObj.get("ViewerCertificate"));
      // validate the required field `Restrictions`
      Restrictions.validateJsonElement(jsonObj.get("Restrictions"));
      // validate the required field `WebACLId`
      String.validateJsonElement(jsonObj.get("WebACLId"));
      // validate the required field `HttpVersion`
      HttpVersion.validateJsonElement(jsonObj.get("HttpVersion"));
      // validate the required field `IsIPV6Enabled`
      Boolean.validateJsonElement(jsonObj.get("IsIPV6Enabled"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DistributionSummaryListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DistributionSummaryListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DistributionSummaryListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DistributionSummaryListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DistributionSummaryListInner>() {
           @Override
           public void write(JsonWriter out, DistributionSummaryListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DistributionSummaryListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DistributionSummaryListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DistributionSummaryListInner
   * @throws IOException if the JSON string is invalid with respect to DistributionSummaryListInner
   */
  public static DistributionSummaryListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DistributionSummaryListInner.class);
  }

  /**
   * Convert an instance of DistributionSummaryListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

