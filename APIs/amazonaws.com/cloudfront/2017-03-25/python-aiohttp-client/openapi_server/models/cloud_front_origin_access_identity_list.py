# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloudFrontOriginAccessIdentityList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, marker: str=None, next_marker: str=None, max_items: int=None, is_truncated: bool=None, quantity: int=None, items: List=None):
        """CloudFrontOriginAccessIdentityList - a model defined in OpenAPI

        :param marker: The marker of this CloudFrontOriginAccessIdentityList.
        :param next_marker: The next_marker of this CloudFrontOriginAccessIdentityList.
        :param max_items: The max_items of this CloudFrontOriginAccessIdentityList.
        :param is_truncated: The is_truncated of this CloudFrontOriginAccessIdentityList.
        :param quantity: The quantity of this CloudFrontOriginAccessIdentityList.
        :param items: The items of this CloudFrontOriginAccessIdentityList.
        """
        self.openapi_types = {
            'marker': str,
            'next_marker': str,
            'max_items': int,
            'is_truncated': bool,
            'quantity': int,
            'items': List
        }

        self.attribute_map = {
            'marker': 'Marker',
            'next_marker': 'NextMarker',
            'max_items': 'MaxItems',
            'is_truncated': 'IsTruncated',
            'quantity': 'Quantity',
            'items': 'Items'
        }

        self._marker = marker
        self._next_marker = next_marker
        self._max_items = max_items
        self._is_truncated = is_truncated
        self._quantity = quantity
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudFrontOriginAccessIdentityList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudFrontOriginAccessIdentityList of this CloudFrontOriginAccessIdentityList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def marker(self):
        """Gets the marker of this CloudFrontOriginAccessIdentityList.


        :return: The marker of this CloudFrontOriginAccessIdentityList.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this CloudFrontOriginAccessIdentityList.


        :param marker: The marker of this CloudFrontOriginAccessIdentityList.
        :type marker: str
        """
        if marker is None:
            raise ValueError("Invalid value for `marker`, must not be `None`")

        self._marker = marker

    @property
    def next_marker(self):
        """Gets the next_marker of this CloudFrontOriginAccessIdentityList.


        :return: The next_marker of this CloudFrontOriginAccessIdentityList.
        :rtype: str
        """
        return self._next_marker

    @next_marker.setter
    def next_marker(self, next_marker):
        """Sets the next_marker of this CloudFrontOriginAccessIdentityList.


        :param next_marker: The next_marker of this CloudFrontOriginAccessIdentityList.
        :type next_marker: str
        """

        self._next_marker = next_marker

    @property
    def max_items(self):
        """Gets the max_items of this CloudFrontOriginAccessIdentityList.


        :return: The max_items of this CloudFrontOriginAccessIdentityList.
        :rtype: int
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this CloudFrontOriginAccessIdentityList.


        :param max_items: The max_items of this CloudFrontOriginAccessIdentityList.
        :type max_items: int
        """
        if max_items is None:
            raise ValueError("Invalid value for `max_items`, must not be `None`")

        self._max_items = max_items

    @property
    def is_truncated(self):
        """Gets the is_truncated of this CloudFrontOriginAccessIdentityList.


        :return: The is_truncated of this CloudFrontOriginAccessIdentityList.
        :rtype: bool
        """
        return self._is_truncated

    @is_truncated.setter
    def is_truncated(self, is_truncated):
        """Sets the is_truncated of this CloudFrontOriginAccessIdentityList.


        :param is_truncated: The is_truncated of this CloudFrontOriginAccessIdentityList.
        :type is_truncated: bool
        """
        if is_truncated is None:
            raise ValueError("Invalid value for `is_truncated`, must not be `None`")

        self._is_truncated = is_truncated

    @property
    def quantity(self):
        """Gets the quantity of this CloudFrontOriginAccessIdentityList.


        :return: The quantity of this CloudFrontOriginAccessIdentityList.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CloudFrontOriginAccessIdentityList.


        :param quantity: The quantity of this CloudFrontOriginAccessIdentityList.
        :type quantity: int
        """
        if quantity is None:
            raise ValueError("Invalid value for `quantity`, must not be `None`")

        self._quantity = quantity

    @property
    def items(self):
        """Gets the items of this CloudFrontOriginAccessIdentityList.


        :return: The items of this CloudFrontOriginAccessIdentityList.
        :rtype: List
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this CloudFrontOriginAccessIdentityList.


        :param items: The items of this CloudFrontOriginAccessIdentityList.
        :type items: List
        """

        self._items = items
