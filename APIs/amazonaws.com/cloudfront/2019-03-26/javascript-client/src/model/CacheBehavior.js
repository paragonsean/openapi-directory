/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-03-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllowedMethods from './AllowedMethods';
import CacheBehaviorTrustedSigners from './CacheBehaviorTrustedSigners';
import DefaultCacheBehaviorForwardedValues from './DefaultCacheBehaviorForwardedValues';
import DefaultCacheBehaviorLambdaFunctionAssociations from './DefaultCacheBehaviorLambdaFunctionAssociations';
import ViewerProtocolPolicy from './ViewerProtocolPolicy';

/**
 * The CacheBehavior model module.
 * @module model/CacheBehavior
 * @version 2019-03-26
 */
class CacheBehavior {
    /**
     * Constructs a new <code>CacheBehavior</code>.
     * &lt;p&gt;A complex type that describes how CloudFront processes requests.&lt;/p&gt; &lt;p&gt;You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.&lt;/p&gt; &lt;p&gt;For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html\&quot;&gt;Quotas&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you don’t want to specify any cache behaviors, include only an empty &lt;code&gt;CacheBehaviors&lt;/code&gt; element. Don’t include an empty &lt;code&gt;CacheBehavior&lt;/code&gt; element because this is invalid.&lt;/p&gt; &lt;p&gt;To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty &lt;code&gt;CacheBehaviors&lt;/code&gt; element.&lt;/p&gt; &lt;p&gt;To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.&lt;/p&gt; &lt;p&gt;For more information about cache behaviors, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior\&quot;&gt;Cache Behavior Settings&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
     * @alias module:model/CacheBehavior
     * @param pathPattern {String} 
     * @param targetOriginId {String} 
     * @param forwardedValues {module:model/DefaultCacheBehaviorForwardedValues} 
     * @param trustedSigners {module:model/CacheBehaviorTrustedSigners} 
     * @param viewerProtocolPolicy {module:model/ViewerProtocolPolicy} 
     * @param minTTL {Number} 
     */
    constructor(pathPattern, targetOriginId, forwardedValues, trustedSigners, viewerProtocolPolicy, minTTL) { 
        
        CacheBehavior.initialize(this, pathPattern, targetOriginId, forwardedValues, trustedSigners, viewerProtocolPolicy, minTTL);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pathPattern, targetOriginId, forwardedValues, trustedSigners, viewerProtocolPolicy, minTTL) { 
        obj['PathPattern'] = pathPattern;
        obj['TargetOriginId'] = targetOriginId;
        obj['ForwardedValues'] = forwardedValues;
        obj['TrustedSigners'] = trustedSigners;
        obj['ViewerProtocolPolicy'] = viewerProtocolPolicy;
        obj['MinTTL'] = minTTL;
    }

    /**
     * Constructs a <code>CacheBehavior</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CacheBehavior} obj Optional instance to populate.
     * @return {module:model/CacheBehavior} The populated <code>CacheBehavior</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CacheBehavior();

            if (data.hasOwnProperty('PathPattern')) {
                obj['PathPattern'] = ApiClient.convertToType(data['PathPattern'], 'String');
            }
            if (data.hasOwnProperty('TargetOriginId')) {
                obj['TargetOriginId'] = ApiClient.convertToType(data['TargetOriginId'], 'String');
            }
            if (data.hasOwnProperty('ForwardedValues')) {
                obj['ForwardedValues'] = DefaultCacheBehaviorForwardedValues.constructFromObject(data['ForwardedValues']);
            }
            if (data.hasOwnProperty('TrustedSigners')) {
                obj['TrustedSigners'] = CacheBehaviorTrustedSigners.constructFromObject(data['TrustedSigners']);
            }
            if (data.hasOwnProperty('ViewerProtocolPolicy')) {
                obj['ViewerProtocolPolicy'] = ApiClient.convertToType(data['ViewerProtocolPolicy'], ViewerProtocolPolicy);
            }
            if (data.hasOwnProperty('MinTTL')) {
                obj['MinTTL'] = ApiClient.convertToType(data['MinTTL'], 'Number');
            }
            if (data.hasOwnProperty('AllowedMethods')) {
                obj['AllowedMethods'] = AllowedMethods.constructFromObject(data['AllowedMethods']);
            }
            if (data.hasOwnProperty('SmoothStreaming')) {
                obj['SmoothStreaming'] = ApiClient.convertToType(data['SmoothStreaming'], 'Boolean');
            }
            if (data.hasOwnProperty('DefaultTTL')) {
                obj['DefaultTTL'] = ApiClient.convertToType(data['DefaultTTL'], 'Number');
            }
            if (data.hasOwnProperty('MaxTTL')) {
                obj['MaxTTL'] = ApiClient.convertToType(data['MaxTTL'], 'Number');
            }
            if (data.hasOwnProperty('Compress')) {
                obj['Compress'] = ApiClient.convertToType(data['Compress'], 'Boolean');
            }
            if (data.hasOwnProperty('LambdaFunctionAssociations')) {
                obj['LambdaFunctionAssociations'] = DefaultCacheBehaviorLambdaFunctionAssociations.constructFromObject(data['LambdaFunctionAssociations']);
            }
            if (data.hasOwnProperty('FieldLevelEncryptionId')) {
                obj['FieldLevelEncryptionId'] = ApiClient.convertToType(data['FieldLevelEncryptionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CacheBehavior</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CacheBehavior</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CacheBehavior.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PathPattern`
        if (data['PathPattern']) { // data not null
          String.validateJSON(data['PathPattern']);
        }
        // validate the optional field `TargetOriginId`
        if (data['TargetOriginId']) { // data not null
          String.validateJSON(data['TargetOriginId']);
        }
        // validate the optional field `ForwardedValues`
        if (data['ForwardedValues']) { // data not null
          DefaultCacheBehaviorForwardedValues.validateJSON(data['ForwardedValues']);
        }
        // validate the optional field `TrustedSigners`
        if (data['TrustedSigners']) { // data not null
          CacheBehaviorTrustedSigners.validateJSON(data['TrustedSigners']);
        }
        // validate the optional field `ViewerProtocolPolicy`
        if (data['ViewerProtocolPolicy']) { // data not null
          ViewerProtocolPolicy.validateJSON(data['ViewerProtocolPolicy']);
        }
        // validate the optional field `MinTTL`
        if (data['MinTTL']) { // data not null
          Number.validateJSON(data['MinTTL']);
        }
        // validate the optional field `AllowedMethods`
        if (data['AllowedMethods']) { // data not null
          AllowedMethods.validateJSON(data['AllowedMethods']);
        }
        // validate the optional field `SmoothStreaming`
        if (data['SmoothStreaming']) { // data not null
          Boolean.validateJSON(data['SmoothStreaming']);
        }
        // validate the optional field `DefaultTTL`
        if (data['DefaultTTL']) { // data not null
          Number.validateJSON(data['DefaultTTL']);
        }
        // validate the optional field `MaxTTL`
        if (data['MaxTTL']) { // data not null
          Number.validateJSON(data['MaxTTL']);
        }
        // validate the optional field `Compress`
        if (data['Compress']) { // data not null
          Boolean.validateJSON(data['Compress']);
        }
        // validate the optional field `LambdaFunctionAssociations`
        if (data['LambdaFunctionAssociations']) { // data not null
          DefaultCacheBehaviorLambdaFunctionAssociations.validateJSON(data['LambdaFunctionAssociations']);
        }
        // validate the optional field `FieldLevelEncryptionId`
        if (data['FieldLevelEncryptionId']) { // data not null
          String.validateJSON(data['FieldLevelEncryptionId']);
        }

        return true;
    }


}

CacheBehavior.RequiredProperties = ["PathPattern", "TargetOriginId", "ForwardedValues", "TrustedSigners", "ViewerProtocolPolicy", "MinTTL"];

/**
 * @member {String} PathPattern
 */
CacheBehavior.prototype['PathPattern'] = undefined;

/**
 * @member {String} TargetOriginId
 */
CacheBehavior.prototype['TargetOriginId'] = undefined;

/**
 * @member {module:model/DefaultCacheBehaviorForwardedValues} ForwardedValues
 */
CacheBehavior.prototype['ForwardedValues'] = undefined;

/**
 * @member {module:model/CacheBehaviorTrustedSigners} TrustedSigners
 */
CacheBehavior.prototype['TrustedSigners'] = undefined;

/**
 * @member {module:model/ViewerProtocolPolicy} ViewerProtocolPolicy
 */
CacheBehavior.prototype['ViewerProtocolPolicy'] = undefined;

/**
 * @member {Number} MinTTL
 */
CacheBehavior.prototype['MinTTL'] = undefined;

/**
 * @member {module:model/AllowedMethods} AllowedMethods
 */
CacheBehavior.prototype['AllowedMethods'] = undefined;

/**
 * @member {Boolean} SmoothStreaming
 */
CacheBehavior.prototype['SmoothStreaming'] = undefined;

/**
 * @member {Number} DefaultTTL
 */
CacheBehavior.prototype['DefaultTTL'] = undefined;

/**
 * @member {Number} MaxTTL
 */
CacheBehavior.prototype['MaxTTL'] = undefined;

/**
 * @member {Boolean} Compress
 */
CacheBehavior.prototype['Compress'] = undefined;

/**
 * @member {module:model/DefaultCacheBehaviorLambdaFunctionAssociations} LambdaFunctionAssociations
 */
CacheBehavior.prototype['LambdaFunctionAssociations'] = undefined;

/**
 * @member {String} FieldLevelEncryptionId
 */
CacheBehavior.prototype['FieldLevelEncryptionId'] = undefined;






export default CacheBehavior;

