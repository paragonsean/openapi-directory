/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-03-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CertificateSource from './CertificateSource';
import MinimumProtocolVersion from './MinimumProtocolVersion';
import SSLSupportMethod from './SSLSupportMethod';
import ViewerCertificate from './ViewerCertificate';

/**
 * The CreateDistribution20190326RequestDistributionConfigViewerCertificate model module.
 * @module model/CreateDistribution20190326RequestDistributionConfigViewerCertificate
 * @version 2019-03-26
 */
class CreateDistribution20190326RequestDistributionConfigViewerCertificate {
    /**
     * Constructs a new <code>CreateDistribution20190326RequestDistributionConfigViewerCertificate</code>.
     * @alias module:model/CreateDistribution20190326RequestDistributionConfigViewerCertificate
     * @implements module:model/ViewerCertificate
     */
    constructor() { 
        ViewerCertificate.initialize(this);
        CreateDistribution20190326RequestDistributionConfigViewerCertificate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateDistribution20190326RequestDistributionConfigViewerCertificate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDistribution20190326RequestDistributionConfigViewerCertificate} obj Optional instance to populate.
     * @return {module:model/CreateDistribution20190326RequestDistributionConfigViewerCertificate} The populated <code>CreateDistribution20190326RequestDistributionConfigViewerCertificate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDistribution20190326RequestDistributionConfigViewerCertificate();
            ViewerCertificate.constructFromObject(data, obj);

            if (data.hasOwnProperty('CloudFrontDefaultCertificate')) {
                obj['CloudFrontDefaultCertificate'] = ApiClient.convertToType(data['CloudFrontDefaultCertificate'], 'Boolean');
            }
            if (data.hasOwnProperty('IAMCertificateId')) {
                obj['IAMCertificateId'] = ApiClient.convertToType(data['IAMCertificateId'], 'String');
            }
            if (data.hasOwnProperty('ACMCertificateArn')) {
                obj['ACMCertificateArn'] = ApiClient.convertToType(data['ACMCertificateArn'], 'String');
            }
            if (data.hasOwnProperty('SSLSupportMethod')) {
                obj['SSLSupportMethod'] = ApiClient.convertToType(data['SSLSupportMethod'], SSLSupportMethod);
            }
            if (data.hasOwnProperty('MinimumProtocolVersion')) {
                obj['MinimumProtocolVersion'] = ApiClient.convertToType(data['MinimumProtocolVersion'], MinimumProtocolVersion);
            }
            if (data.hasOwnProperty('Certificate')) {
                obj['Certificate'] = ApiClient.convertToType(data['Certificate'], 'String');
            }
            if (data.hasOwnProperty('CertificateSource')) {
                obj['CertificateSource'] = ApiClient.convertToType(data['CertificateSource'], CertificateSource);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDistribution20190326RequestDistributionConfigViewerCertificate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDistribution20190326RequestDistributionConfigViewerCertificate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CloudFrontDefaultCertificate`
        if (data['CloudFrontDefaultCertificate']) { // data not null
          Boolean.validateJSON(data['CloudFrontDefaultCertificate']);
        }
        // validate the optional field `IAMCertificateId`
        if (data['IAMCertificateId']) { // data not null
          String.validateJSON(data['IAMCertificateId']);
        }
        // validate the optional field `ACMCertificateArn`
        if (data['ACMCertificateArn']) { // data not null
          String.validateJSON(data['ACMCertificateArn']);
        }
        // validate the optional field `SSLSupportMethod`
        if (data['SSLSupportMethod']) { // data not null
          SSLSupportMethod.validateJSON(data['SSLSupportMethod']);
        }
        // validate the optional field `MinimumProtocolVersion`
        if (data['MinimumProtocolVersion']) { // data not null
          MinimumProtocolVersion.validateJSON(data['MinimumProtocolVersion']);
        }
        // validate the optional field `Certificate`
        if (data['Certificate']) { // data not null
          String.validateJSON(data['Certificate']);
        }
        // validate the optional field `CertificateSource`
        if (data['CertificateSource']) { // data not null
          CertificateSource.validateJSON(data['CertificateSource']);
        }

        return true;
    }


}



/**
 * @member {Boolean} CloudFrontDefaultCertificate
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['CloudFrontDefaultCertificate'] = undefined;

/**
 * @member {String} IAMCertificateId
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['IAMCertificateId'] = undefined;

/**
 * @member {String} ACMCertificateArn
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['ACMCertificateArn'] = undefined;

/**
 * @member {module:model/SSLSupportMethod} SSLSupportMethod
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['SSLSupportMethod'] = undefined;

/**
 * @member {module:model/MinimumProtocolVersion} MinimumProtocolVersion
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['MinimumProtocolVersion'] = undefined;

/**
 * @member {String} Certificate
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['Certificate'] = undefined;

/**
 * @member {module:model/CertificateSource} CertificateSource
 */
CreateDistribution20190326RequestDistributionConfigViewerCertificate.prototype['CertificateSource'] = undefined;


// Implement ViewerCertificate interface:
/**
 * @member {Boolean} CloudFrontDefaultCertificate
 */
ViewerCertificate.prototype['CloudFrontDefaultCertificate'] = undefined;
/**
 * @member {String} IAMCertificateId
 */
ViewerCertificate.prototype['IAMCertificateId'] = undefined;
/**
 * @member {String} ACMCertificateArn
 */
ViewerCertificate.prototype['ACMCertificateArn'] = undefined;
/**
 * @member {module:model/SSLSupportMethod} SSLSupportMethod
 */
ViewerCertificate.prototype['SSLSupportMethod'] = undefined;
/**
 * @member {module:model/MinimumProtocolVersion} MinimumProtocolVersion
 */
ViewerCertificate.prototype['MinimumProtocolVersion'] = undefined;
/**
 * @member {String} Certificate
 */
ViewerCertificate.prototype['Certificate'] = undefined;
/**
 * @member {module:model/CertificateSource} CertificateSource
 */
ViewerCertificate.prototype['CertificateSource'] = undefined;




export default CreateDistribution20190326RequestDistributionConfigViewerCertificate;

