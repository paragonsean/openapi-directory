# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_type_profile_config_content_type_profiles import ContentTypeProfileConfigContentTypeProfiles
from openapi_server import util


class FieldLevelEncryptionSummaryContentTypeProfileConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forward_when_content_type_is_unknown: bool=None, content_type_profiles: ContentTypeProfileConfigContentTypeProfiles=None):
        """FieldLevelEncryptionSummaryContentTypeProfileConfig - a model defined in OpenAPI

        :param forward_when_content_type_is_unknown: The forward_when_content_type_is_unknown of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        :param content_type_profiles: The content_type_profiles of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        """
        self.openapi_types = {
            'forward_when_content_type_is_unknown': bool,
            'content_type_profiles': ContentTypeProfileConfigContentTypeProfiles
        }

        self.attribute_map = {
            'forward_when_content_type_is_unknown': 'ForwardWhenContentTypeIsUnknown',
            'content_type_profiles': 'ContentTypeProfiles'
        }

        self._forward_when_content_type_is_unknown = forward_when_content_type_is_unknown
        self._content_type_profiles = content_type_profiles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldLevelEncryptionSummaryContentTypeProfileConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldLevelEncryptionSummary_ContentTypeProfileConfig of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forward_when_content_type_is_unknown(self):
        """Gets the forward_when_content_type_is_unknown of this FieldLevelEncryptionSummaryContentTypeProfileConfig.


        :return: The forward_when_content_type_is_unknown of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        :rtype: bool
        """
        return self._forward_when_content_type_is_unknown

    @forward_when_content_type_is_unknown.setter
    def forward_when_content_type_is_unknown(self, forward_when_content_type_is_unknown):
        """Sets the forward_when_content_type_is_unknown of this FieldLevelEncryptionSummaryContentTypeProfileConfig.


        :param forward_when_content_type_is_unknown: The forward_when_content_type_is_unknown of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        :type forward_when_content_type_is_unknown: bool
        """
        if forward_when_content_type_is_unknown is None:
            raise ValueError("Invalid value for `forward_when_content_type_is_unknown`, must not be `None`")

        self._forward_when_content_type_is_unknown = forward_when_content_type_is_unknown

    @property
    def content_type_profiles(self):
        """Gets the content_type_profiles of this FieldLevelEncryptionSummaryContentTypeProfileConfig.


        :return: The content_type_profiles of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        :rtype: ContentTypeProfileConfigContentTypeProfiles
        """
        return self._content_type_profiles

    @content_type_profiles.setter
    def content_type_profiles(self, content_type_profiles):
        """Sets the content_type_profiles of this FieldLevelEncryptionSummaryContentTypeProfileConfig.


        :param content_type_profiles: The content_type_profiles of this FieldLevelEncryptionSummaryContentTypeProfileConfig.
        :type content_type_profiles: ContentTypeProfileConfigContentTypeProfiles
        """

        self._content_type_profiles = content_type_profiles
