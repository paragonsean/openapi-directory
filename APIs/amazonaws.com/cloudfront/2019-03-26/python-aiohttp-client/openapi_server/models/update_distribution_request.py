# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_distribution_config_result_distribution_config import GetDistributionConfigResultDistributionConfig
from openapi_server import util


class UpdateDistributionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distribution_config: GetDistributionConfigResultDistributionConfig=None):
        """UpdateDistributionRequest - a model defined in OpenAPI

        :param distribution_config: The distribution_config of this UpdateDistributionRequest.
        """
        self.openapi_types = {
            'distribution_config': GetDistributionConfigResultDistributionConfig
        }

        self.attribute_map = {
            'distribution_config': 'DistributionConfig'
        }

        self._distribution_config = distribution_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDistributionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDistributionRequest of this UpdateDistributionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distribution_config(self):
        """Gets the distribution_config of this UpdateDistributionRequest.


        :return: The distribution_config of this UpdateDistributionRequest.
        :rtype: GetDistributionConfigResultDistributionConfig
        """
        return self._distribution_config

    @distribution_config.setter
    def distribution_config(self, distribution_config):
        """Sets the distribution_config of this UpdateDistributionRequest.


        :param distribution_config: The distribution_config of this UpdateDistributionRequest.
        :type distribution_config: GetDistributionConfigResultDistributionConfig
        """
        if distribution_config is None:
            raise ValueError("Invalid value for `distribution_config`, must not be `None`")

        self._distribution_config = distribution_config
