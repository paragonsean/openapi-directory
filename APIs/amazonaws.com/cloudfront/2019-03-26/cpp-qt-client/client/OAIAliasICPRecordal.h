/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-03-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAliasICPRecordal.h
 *
 * &lt;p&gt;AWS services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they&#39;ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can&#39;t configure it yourself.&lt;/p&gt; &lt;p&gt;For more information about ICP recordals, see &lt;a href&#x3D;\&quot;https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html\&quot;&gt; Signup, Accounts, and Credentials&lt;/a&gt; in &lt;i&gt;Getting Started with AWS services in China&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIAliasICPRecordal_H
#define OAIAliasICPRecordal_H

#include <QJsonObject>

#include "OAIICPRecordalStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAliasICPRecordal : public OAIObject {
public:
    OAIAliasICPRecordal();
    OAIAliasICPRecordal(QString json);
    ~OAIAliasICPRecordal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCname() const;
    void setCname(const QString &cname);
    bool is_cname_Set() const;
    bool is_cname_Valid() const;

    OAIICPRecordalStatus getIcpRecordalStatus() const;
    void setIcpRecordalStatus(const OAIICPRecordalStatus &icp_recordal_status);
    bool is_icp_recordal_status_Set() const;
    bool is_icp_recordal_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cname;
    bool m_cname_isSet;
    bool m_cname_isValid;

    OAIICPRecordalStatus m_icp_recordal_status;
    bool m_icp_recordal_status_isSet;
    bool m_icp_recordal_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAliasICPRecordal)

#endif // OAIAliasICPRecordal_H
