/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-03-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStreamingDistributionSummaryList_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStreamingDistributionSummaryList_inner::OAIStreamingDistributionSummaryList_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStreamingDistributionSummaryList_inner::OAIStreamingDistributionSummaryList_inner() {
    this->initializeModel();
}

OAIStreamingDistributionSummaryList_inner::~OAIStreamingDistributionSummaryList_inner() {}

void OAIStreamingDistributionSummaryList_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_s3_origin_isSet = false;
    m_s3_origin_isValid = false;

    m_aliases_isSet = false;
    m_aliases_isValid = false;

    m_trusted_signers_isSet = false;
    m_trusted_signers_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_price_class_isSet = false;
    m_price_class_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;
}

void OAIStreamingDistributionSummaryList_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStreamingDistributionSummaryList_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("ARN")]);
    m_arn_isSet = !json[QString("ARN")].isNull() && m_arn_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_s3_origin_isValid = ::OpenAPI::fromJsonValue(m_s3_origin, json[QString("S3Origin")]);
    m_s3_origin_isSet = !json[QString("S3Origin")].isNull() && m_s3_origin_isValid;

    m_aliases_isValid = ::OpenAPI::fromJsonValue(m_aliases, json[QString("Aliases")]);
    m_aliases_isSet = !json[QString("Aliases")].isNull() && m_aliases_isValid;

    m_trusted_signers_isValid = ::OpenAPI::fromJsonValue(m_trusted_signers, json[QString("TrustedSigners")]);
    m_trusted_signers_isSet = !json[QString("TrustedSigners")].isNull() && m_trusted_signers_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("Comment")]);
    m_comment_isSet = !json[QString("Comment")].isNull() && m_comment_isValid;

    m_price_class_isValid = ::OpenAPI::fromJsonValue(m_price_class, json[QString("PriceClass")]);
    m_price_class_isSet = !json[QString("PriceClass")].isNull() && m_price_class_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;
}

QString OAIStreamingDistributionSummaryList_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStreamingDistributionSummaryList_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("ARN"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_s3_origin.isSet()) {
        obj.insert(QString("S3Origin"), ::OpenAPI::toJsonValue(m_s3_origin));
    }
    if (m_aliases.isSet()) {
        obj.insert(QString("Aliases"), ::OpenAPI::toJsonValue(m_aliases));
    }
    if (m_trusted_signers.isSet()) {
        obj.insert(QString("TrustedSigners"), ::OpenAPI::toJsonValue(m_trusted_signers));
    }
    if (m_comment_isSet) {
        obj.insert(QString("Comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_price_class.isSet()) {
        obj.insert(QString("PriceClass"), ::OpenAPI::toJsonValue(m_price_class));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    return obj;
}

QString OAIStreamingDistributionSummaryList_inner::getId() const {
    return m_id;
}
void OAIStreamingDistributionSummaryList_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIStreamingDistributionSummaryList_inner::getArn() const {
    return m_arn;
}
void OAIStreamingDistributionSummaryList_inner::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIStreamingDistributionSummaryList_inner::getStatus() const {
    return m_status;
}
void OAIStreamingDistributionSummaryList_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIStreamingDistributionSummaryList_inner::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIStreamingDistributionSummaryList_inner::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIStreamingDistributionSummaryList_inner::getDomainName() const {
    return m_domain_name;
}
void OAIStreamingDistributionSummaryList_inner::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

OAIStreamingDistributionSummary_S3Origin OAIStreamingDistributionSummaryList_inner::getS3Origin() const {
    return m_s3_origin;
}
void OAIStreamingDistributionSummaryList_inner::setS3Origin(const OAIStreamingDistributionSummary_S3Origin &s3_origin) {
    m_s3_origin = s3_origin;
    m_s3_origin_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_s3_origin_Set() const{
    return m_s3_origin_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_s3_origin_Valid() const{
    return m_s3_origin_isValid;
}

OAIStreamingDistributionSummary_Aliases OAIStreamingDistributionSummaryList_inner::getAliases() const {
    return m_aliases;
}
void OAIStreamingDistributionSummaryList_inner::setAliases(const OAIStreamingDistributionSummary_Aliases &aliases) {
    m_aliases = aliases;
    m_aliases_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_aliases_Set() const{
    return m_aliases_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_aliases_Valid() const{
    return m_aliases_isValid;
}

OAIStreamingDistributionSummary_TrustedSigners OAIStreamingDistributionSummaryList_inner::getTrustedSigners() const {
    return m_trusted_signers;
}
void OAIStreamingDistributionSummaryList_inner::setTrustedSigners(const OAIStreamingDistributionSummary_TrustedSigners &trusted_signers) {
    m_trusted_signers = trusted_signers;
    m_trusted_signers_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_trusted_signers_Set() const{
    return m_trusted_signers_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_trusted_signers_Valid() const{
    return m_trusted_signers_isValid;
}

QString OAIStreamingDistributionSummaryList_inner::getComment() const {
    return m_comment;
}
void OAIStreamingDistributionSummaryList_inner::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_comment_Valid() const{
    return m_comment_isValid;
}

OAIPriceClass OAIStreamingDistributionSummaryList_inner::getPriceClass() const {
    return m_price_class;
}
void OAIStreamingDistributionSummaryList_inner::setPriceClass(const OAIPriceClass &price_class) {
    m_price_class = price_class;
    m_price_class_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_price_class_Set() const{
    return m_price_class_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_price_class_Valid() const{
    return m_price_class_isValid;
}

bool OAIStreamingDistributionSummaryList_inner::getEnabled() const {
    return m_enabled;
}
void OAIStreamingDistributionSummaryList_inner::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIStreamingDistributionSummaryList_inner::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIStreamingDistributionSummaryList_inner::is_enabled_Valid() const{
    return m_enabled_isValid;
}

bool OAIStreamingDistributionSummaryList_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_origin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aliases.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trusted_signers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_class.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStreamingDistributionSummaryList_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_arn_isValid && m_status_isValid && m_last_modified_time_isValid && m_domain_name_isValid && m_s3_origin_isValid && m_aliases_isValid && m_trusted_signers_isValid && m_comment_isValid && m_price_class_isValid && m_enabled_isValid && true;
}

} // namespace OpenAPI
