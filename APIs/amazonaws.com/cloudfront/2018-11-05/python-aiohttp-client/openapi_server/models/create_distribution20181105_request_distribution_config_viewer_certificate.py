# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_source import CertificateSource
from openapi_server.models.minimum_protocol_version import MinimumProtocolVersion
from openapi_server.models.ssl_support_method import SSLSupportMethod
from openapi_server import util


class CreateDistribution20181105RequestDistributionConfigViewerCertificate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_front_default_certificate: bool=None, iam_certificate_id: str=None, acm_certificate_arn: str=None, ssl_support_method: SSLSupportMethod=None, minimum_protocol_version: MinimumProtocolVersion=None, certificate: str=None, certificate_source: CertificateSource=None):
        """CreateDistribution20181105RequestDistributionConfigViewerCertificate - a model defined in OpenAPI

        :param cloud_front_default_certificate: The cloud_front_default_certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :param iam_certificate_id: The iam_certificate_id of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :param acm_certificate_arn: The acm_certificate_arn of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :param ssl_support_method: The ssl_support_method of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :param minimum_protocol_version: The minimum_protocol_version of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :param certificate: The certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :param certificate_source: The certificate_source of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        """
        self.openapi_types = {
            'cloud_front_default_certificate': bool,
            'iam_certificate_id': str,
            'acm_certificate_arn': str,
            'ssl_support_method': SSLSupportMethod,
            'minimum_protocol_version': MinimumProtocolVersion,
            'certificate': str,
            'certificate_source': CertificateSource
        }

        self.attribute_map = {
            'cloud_front_default_certificate': 'CloudFrontDefaultCertificate',
            'iam_certificate_id': 'IAMCertificateId',
            'acm_certificate_arn': 'ACMCertificateArn',
            'ssl_support_method': 'SSLSupportMethod',
            'minimum_protocol_version': 'MinimumProtocolVersion',
            'certificate': 'Certificate',
            'certificate_source': 'CertificateSource'
        }

        self._cloud_front_default_certificate = cloud_front_default_certificate
        self._iam_certificate_id = iam_certificate_id
        self._acm_certificate_arn = acm_certificate_arn
        self._ssl_support_method = ssl_support_method
        self._minimum_protocol_version = minimum_protocol_version
        self._certificate = certificate
        self._certificate_source = certificate_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDistribution20181105RequestDistributionConfigViewerCertificate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDistribution2018_11_05_request_DistributionConfig_ViewerCertificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_front_default_certificate(self):
        """Gets the cloud_front_default_certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The cloud_front_default_certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: bool
        """
        return self._cloud_front_default_certificate

    @cloud_front_default_certificate.setter
    def cloud_front_default_certificate(self, cloud_front_default_certificate):
        """Sets the cloud_front_default_certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param cloud_front_default_certificate: The cloud_front_default_certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type cloud_front_default_certificate: bool
        """

        self._cloud_front_default_certificate = cloud_front_default_certificate

    @property
    def iam_certificate_id(self):
        """Gets the iam_certificate_id of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The iam_certificate_id of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: str
        """
        return self._iam_certificate_id

    @iam_certificate_id.setter
    def iam_certificate_id(self, iam_certificate_id):
        """Sets the iam_certificate_id of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param iam_certificate_id: The iam_certificate_id of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type iam_certificate_id: str
        """

        self._iam_certificate_id = iam_certificate_id

    @property
    def acm_certificate_arn(self):
        """Gets the acm_certificate_arn of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The acm_certificate_arn of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: str
        """
        return self._acm_certificate_arn

    @acm_certificate_arn.setter
    def acm_certificate_arn(self, acm_certificate_arn):
        """Sets the acm_certificate_arn of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param acm_certificate_arn: The acm_certificate_arn of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type acm_certificate_arn: str
        """

        self._acm_certificate_arn = acm_certificate_arn

    @property
    def ssl_support_method(self):
        """Gets the ssl_support_method of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The ssl_support_method of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: SSLSupportMethod
        """
        return self._ssl_support_method

    @ssl_support_method.setter
    def ssl_support_method(self, ssl_support_method):
        """Sets the ssl_support_method of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param ssl_support_method: The ssl_support_method of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type ssl_support_method: SSLSupportMethod
        """

        self._ssl_support_method = ssl_support_method

    @property
    def minimum_protocol_version(self):
        """Gets the minimum_protocol_version of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The minimum_protocol_version of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: MinimumProtocolVersion
        """
        return self._minimum_protocol_version

    @minimum_protocol_version.setter
    def minimum_protocol_version(self, minimum_protocol_version):
        """Sets the minimum_protocol_version of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param minimum_protocol_version: The minimum_protocol_version of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type minimum_protocol_version: MinimumProtocolVersion
        """

        self._minimum_protocol_version = minimum_protocol_version

    @property
    def certificate(self):
        """Gets the certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: str
        """
        return self._certificate

    @certificate.setter
    def certificate(self, certificate):
        """Sets the certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param certificate: The certificate of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type certificate: str
        """

        self._certificate = certificate

    @property
    def certificate_source(self):
        """Gets the certificate_source of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :return: The certificate_source of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :rtype: CertificateSource
        """
        return self._certificate_source

    @certificate_source.setter
    def certificate_source(self, certificate_source):
        """Sets the certificate_source of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.


        :param certificate_source: The certificate_source of this CreateDistribution20181105RequestDistributionConfigViewerCertificate.
        :type certificate_source: CertificateSource
        """

        self._certificate_source = certificate_source
