# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_invalidation_result_invalidation import CreateInvalidationResultInvalidation
from openapi_server import util


class CreateInvalidationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invalidation: CreateInvalidationResultInvalidation=None):
        """CreateInvalidationResult - a model defined in OpenAPI

        :param invalidation: The invalidation of this CreateInvalidationResult.
        """
        self.openapi_types = {
            'invalidation': CreateInvalidationResultInvalidation
        }

        self.attribute_map = {
            'invalidation': 'Invalidation'
        }

        self._invalidation = invalidation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateInvalidationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateInvalidationResult of this CreateInvalidationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invalidation(self):
        """Gets the invalidation of this CreateInvalidationResult.


        :return: The invalidation of this CreateInvalidationResult.
        :rtype: CreateInvalidationResultInvalidation
        """
        return self._invalidation

    @invalidation.setter
    def invalidation(self, invalidation):
        """Sets the invalidation of this CreateInvalidationResult.


        :param invalidation: The invalidation of this CreateInvalidationResult.
        :type invalidation: CreateInvalidationResultInvalidation
        """

        self._invalidation = invalidation
