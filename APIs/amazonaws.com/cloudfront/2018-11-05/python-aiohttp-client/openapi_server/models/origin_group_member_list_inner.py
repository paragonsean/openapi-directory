# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OriginGroupMemberListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origin_id: str=None):
        """OriginGroupMemberListInner - a model defined in OpenAPI

        :param origin_id: The origin_id of this OriginGroupMemberListInner.
        """
        self.openapi_types = {
            'origin_id': str
        }

        self.attribute_map = {
            'origin_id': 'OriginId'
        }

        self._origin_id = origin_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OriginGroupMemberListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OriginGroupMemberList_inner of this OriginGroupMemberListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origin_id(self):
        """Gets the origin_id of this OriginGroupMemberListInner.


        :return: The origin_id of this OriginGroupMemberListInner.
        :rtype: str
        """
        return self._origin_id

    @origin_id.setter
    def origin_id(self, origin_id):
        """Sets the origin_id of this OriginGroupMemberListInner.


        :param origin_id: The origin_id of this OriginGroupMemberListInner.
        :type origin_id: str
        """
        if origin_id is None:
            raise ValueError("Invalid value for `origin_id`, must not be `None`")

        self._origin_id = origin_id
