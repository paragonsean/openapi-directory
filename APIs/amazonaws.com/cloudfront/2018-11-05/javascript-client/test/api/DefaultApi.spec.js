/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudFront);
  }
}(this, function(expect, AmazonCloudFront) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudFront.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createCloudFrontOriginAccessIdentity20181105', function() {
      it('should call createCloudFrontOriginAccessIdentity20181105 successfully', function(done) {
        //uncomment below and update the code to test createCloudFrontOriginAccessIdentity20181105
        //instance.createCloudFrontOriginAccessIdentity20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDistribution20181105', function() {
      it('should call createDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test createDistribution20181105
        //instance.createDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDistributionWithTags20181105', function() {
      it('should call createDistributionWithTags20181105 successfully', function(done) {
        //uncomment below and update the code to test createDistributionWithTags20181105
        //instance.createDistributionWithTags20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFieldLevelEncryptionConfig20181105', function() {
      it('should call createFieldLevelEncryptionConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test createFieldLevelEncryptionConfig20181105
        //instance.createFieldLevelEncryptionConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFieldLevelEncryptionProfile20181105', function() {
      it('should call createFieldLevelEncryptionProfile20181105 successfully', function(done) {
        //uncomment below and update the code to test createFieldLevelEncryptionProfile20181105
        //instance.createFieldLevelEncryptionProfile20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInvalidation20181105', function() {
      it('should call createInvalidation20181105 successfully', function(done) {
        //uncomment below and update the code to test createInvalidation20181105
        //instance.createInvalidation20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPublicKey20181105', function() {
      it('should call createPublicKey20181105 successfully', function(done) {
        //uncomment below and update the code to test createPublicKey20181105
        //instance.createPublicKey20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStreamingDistribution20181105', function() {
      it('should call createStreamingDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test createStreamingDistribution20181105
        //instance.createStreamingDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStreamingDistributionWithTags20181105', function() {
      it('should call createStreamingDistributionWithTags20181105 successfully', function(done) {
        //uncomment below and update the code to test createStreamingDistributionWithTags20181105
        //instance.createStreamingDistributionWithTags20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCloudFrontOriginAccessIdentity20181105', function() {
      it('should call deleteCloudFrontOriginAccessIdentity20181105 successfully', function(done) {
        //uncomment below and update the code to test deleteCloudFrontOriginAccessIdentity20181105
        //instance.deleteCloudFrontOriginAccessIdentity20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDistribution20181105', function() {
      it('should call deleteDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test deleteDistribution20181105
        //instance.deleteDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldLevelEncryptionConfig20181105', function() {
      it('should call deleteFieldLevelEncryptionConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test deleteFieldLevelEncryptionConfig20181105
        //instance.deleteFieldLevelEncryptionConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldLevelEncryptionProfile20181105', function() {
      it('should call deleteFieldLevelEncryptionProfile20181105 successfully', function(done) {
        //uncomment below and update the code to test deleteFieldLevelEncryptionProfile20181105
        //instance.deleteFieldLevelEncryptionProfile20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePublicKey20181105', function() {
      it('should call deletePublicKey20181105 successfully', function(done) {
        //uncomment below and update the code to test deletePublicKey20181105
        //instance.deletePublicKey20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStreamingDistribution20181105', function() {
      it('should call deleteStreamingDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test deleteStreamingDistribution20181105
        //instance.deleteStreamingDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCloudFrontOriginAccessIdentity20181105', function() {
      it('should call getCloudFrontOriginAccessIdentity20181105 successfully', function(done) {
        //uncomment below and update the code to test getCloudFrontOriginAccessIdentity20181105
        //instance.getCloudFrontOriginAccessIdentity20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCloudFrontOriginAccessIdentityConfig20181105', function() {
      it('should call getCloudFrontOriginAccessIdentityConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test getCloudFrontOriginAccessIdentityConfig20181105
        //instance.getCloudFrontOriginAccessIdentityConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistribution20181105', function() {
      it('should call getDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test getDistribution20181105
        //instance.getDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistributionConfig20181105', function() {
      it('should call getDistributionConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test getDistributionConfig20181105
        //instance.getDistributionConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryption20181105', function() {
      it('should call getFieldLevelEncryption20181105 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryption20181105
        //instance.getFieldLevelEncryption20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryptionConfig20181105', function() {
      it('should call getFieldLevelEncryptionConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryptionConfig20181105
        //instance.getFieldLevelEncryptionConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryptionProfile20181105', function() {
      it('should call getFieldLevelEncryptionProfile20181105 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryptionProfile20181105
        //instance.getFieldLevelEncryptionProfile20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryptionProfileConfig20181105', function() {
      it('should call getFieldLevelEncryptionProfileConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryptionProfileConfig20181105
        //instance.getFieldLevelEncryptionProfileConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvalidation20181105', function() {
      it('should call getInvalidation20181105 successfully', function(done) {
        //uncomment below and update the code to test getInvalidation20181105
        //instance.getInvalidation20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicKey20181105', function() {
      it('should call getPublicKey20181105 successfully', function(done) {
        //uncomment below and update the code to test getPublicKey20181105
        //instance.getPublicKey20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicKeyConfig20181105', function() {
      it('should call getPublicKeyConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test getPublicKeyConfig20181105
        //instance.getPublicKeyConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStreamingDistribution20181105', function() {
      it('should call getStreamingDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test getStreamingDistribution20181105
        //instance.getStreamingDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStreamingDistributionConfig20181105', function() {
      it('should call getStreamingDistributionConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test getStreamingDistributionConfig20181105
        //instance.getStreamingDistributionConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCloudFrontOriginAccessIdentities20181105', function() {
      it('should call listCloudFrontOriginAccessIdentities20181105 successfully', function(done) {
        //uncomment below and update the code to test listCloudFrontOriginAccessIdentities20181105
        //instance.listCloudFrontOriginAccessIdentities20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributions20181105', function() {
      it('should call listDistributions20181105 successfully', function(done) {
        //uncomment below and update the code to test listDistributions20181105
        //instance.listDistributions20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByWebACLId20181105', function() {
      it('should call listDistributionsByWebACLId20181105 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByWebACLId20181105
        //instance.listDistributionsByWebACLId20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFieldLevelEncryptionConfigs20181105', function() {
      it('should call listFieldLevelEncryptionConfigs20181105 successfully', function(done) {
        //uncomment below and update the code to test listFieldLevelEncryptionConfigs20181105
        //instance.listFieldLevelEncryptionConfigs20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFieldLevelEncryptionProfiles20181105', function() {
      it('should call listFieldLevelEncryptionProfiles20181105 successfully', function(done) {
        //uncomment below and update the code to test listFieldLevelEncryptionProfiles20181105
        //instance.listFieldLevelEncryptionProfiles20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInvalidations20181105', function() {
      it('should call listInvalidations20181105 successfully', function(done) {
        //uncomment below and update the code to test listInvalidations20181105
        //instance.listInvalidations20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPublicKeys20181105', function() {
      it('should call listPublicKeys20181105 successfully', function(done) {
        //uncomment below and update the code to test listPublicKeys20181105
        //instance.listPublicKeys20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStreamingDistributions20181105', function() {
      it('should call listStreamingDistributions20181105 successfully', function(done) {
        //uncomment below and update the code to test listStreamingDistributions20181105
        //instance.listStreamingDistributions20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource20181105', function() {
      it('should call listTagsForResource20181105 successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource20181105
        //instance.listTagsForResource20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource20181105', function() {
      it('should call tagResource20181105 successfully', function(done) {
        //uncomment below and update the code to test tagResource20181105
        //instance.tagResource20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource20181105', function() {
      it('should call untagResource20181105 successfully', function(done) {
        //uncomment below and update the code to test untagResource20181105
        //instance.untagResource20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCloudFrontOriginAccessIdentity20181105', function() {
      it('should call updateCloudFrontOriginAccessIdentity20181105 successfully', function(done) {
        //uncomment below and update the code to test updateCloudFrontOriginAccessIdentity20181105
        //instance.updateCloudFrontOriginAccessIdentity20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDistribution20181105', function() {
      it('should call updateDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test updateDistribution20181105
        //instance.updateDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldLevelEncryptionConfig20181105', function() {
      it('should call updateFieldLevelEncryptionConfig20181105 successfully', function(done) {
        //uncomment below and update the code to test updateFieldLevelEncryptionConfig20181105
        //instance.updateFieldLevelEncryptionConfig20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldLevelEncryptionProfile20181105', function() {
      it('should call updateFieldLevelEncryptionProfile20181105 successfully', function(done) {
        //uncomment below and update the code to test updateFieldLevelEncryptionProfile20181105
        //instance.updateFieldLevelEncryptionProfile20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePublicKey20181105', function() {
      it('should call updatePublicKey20181105 successfully', function(done) {
        //uncomment below and update the code to test updatePublicKey20181105
        //instance.updatePublicKey20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStreamingDistribution20181105', function() {
      it('should call updateStreamingDistribution20181105 successfully', function(done) {
        //uncomment below and update the code to test updateStreamingDistribution20181105
        //instance.updateStreamingDistribution20181105(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
