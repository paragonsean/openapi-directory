/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvalidationInvalidationBatch from './InvalidationInvalidationBatch';

/**
 * The Invalidation model module.
 * @module model/Invalidation
 * @version 2018-11-05
 */
class Invalidation {
    /**
     * Constructs a new <code>Invalidation</code>.
     * An invalidation. 
     * @alias module:model/Invalidation
     * @param id {String} 
     * @param status {String} 
     * @param createTime {Date} 
     * @param invalidationBatch {module:model/InvalidationInvalidationBatch} 
     */
    constructor(id, status, createTime, invalidationBatch) { 
        
        Invalidation.initialize(this, id, status, createTime, invalidationBatch);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, status, createTime, invalidationBatch) { 
        obj['Id'] = id;
        obj['Status'] = status;
        obj['CreateTime'] = createTime;
        obj['InvalidationBatch'] = invalidationBatch;
    }

    /**
     * Constructs a <code>Invalidation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Invalidation} obj Optional instance to populate.
     * @return {module:model/Invalidation} The populated <code>Invalidation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Invalidation();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('CreateTime')) {
                obj['CreateTime'] = ApiClient.convertToType(data['CreateTime'], 'Date');
            }
            if (data.hasOwnProperty('InvalidationBatch')) {
                obj['InvalidationBatch'] = InvalidationInvalidationBatch.constructFromObject(data['InvalidationBatch']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Invalidation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Invalidation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Invalidation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `CreateTime`
        if (data['CreateTime']) { // data not null
          Date.validateJSON(data['CreateTime']);
        }
        // validate the optional field `InvalidationBatch`
        if (data['InvalidationBatch']) { // data not null
          InvalidationInvalidationBatch.validateJSON(data['InvalidationBatch']);
        }

        return true;
    }


}

Invalidation.RequiredProperties = ["Id", "Status", "CreateTime", "InvalidationBatch"];

/**
 * @member {String} Id
 */
Invalidation.prototype['Id'] = undefined;

/**
 * @member {String} Status
 */
Invalidation.prototype['Status'] = undefined;

/**
 * @member {Date} CreateTime
 */
Invalidation.prototype['CreateTime'] = undefined;

/**
 * @member {module:model/InvalidationInvalidationBatch} InvalidationBatch
 */
Invalidation.prototype['InvalidationBatch'] = undefined;






export default Invalidation;

