/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentTypeProfile from './ContentTypeProfile';
import Format from './Format';

/**
 * The ContentTypeProfileListInner model module.
 * @module model/ContentTypeProfileListInner
 * @version 2018-11-05
 */
class ContentTypeProfileListInner {
    /**
     * Constructs a new <code>ContentTypeProfileListInner</code>.
     * @alias module:model/ContentTypeProfileListInner
     * @implements module:model/ContentTypeProfile
     * @param format {module:model/Format} 
     * @param contentType {String} 
     */
    constructor(format, contentType) { 
        ContentTypeProfile.initialize(this, format, contentType);
        ContentTypeProfileListInner.initialize(this, format, contentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, format, contentType) { 
        obj['Format'] = format;
        obj['ContentType'] = contentType;
    }

    /**
     * Constructs a <code>ContentTypeProfileListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentTypeProfileListInner} obj Optional instance to populate.
     * @return {module:model/ContentTypeProfileListInner} The populated <code>ContentTypeProfileListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentTypeProfileListInner();
            ContentTypeProfile.constructFromObject(data, obj);

            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], Format);
            }
            if (data.hasOwnProperty('ProfileId')) {
                obj['ProfileId'] = ApiClient.convertToType(data['ProfileId'], 'String');
            }
            if (data.hasOwnProperty('ContentType')) {
                obj['ContentType'] = ApiClient.convertToType(data['ContentType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentTypeProfileListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentTypeProfileListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentTypeProfileListInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Format`
        if (data['Format']) { // data not null
          Format.validateJSON(data['Format']);
        }
        // validate the optional field `ProfileId`
        if (data['ProfileId']) { // data not null
          String.validateJSON(data['ProfileId']);
        }
        // validate the optional field `ContentType`
        if (data['ContentType']) { // data not null
          String.validateJSON(data['ContentType']);
        }

        return true;
    }


}

ContentTypeProfileListInner.RequiredProperties = ["Format", "ContentType"];

/**
 * @member {module:model/Format} Format
 */
ContentTypeProfileListInner.prototype['Format'] = undefined;

/**
 * @member {String} ProfileId
 */
ContentTypeProfileListInner.prototype['ProfileId'] = undefined;

/**
 * @member {String} ContentType
 */
ContentTypeProfileListInner.prototype['ContentType'] = undefined;


// Implement ContentTypeProfile interface:
/**
 * @member {module:model/Format} Format
 */
ContentTypeProfile.prototype['Format'] = undefined;
/**
 * @member {String} ProfileId
 */
ContentTypeProfile.prototype['ProfileId'] = undefined;
/**
 * @member {String} ContentType
 */
ContentTypeProfile.prototype['ContentType'] = undefined;




export default ContentTypeProfileListInner;

