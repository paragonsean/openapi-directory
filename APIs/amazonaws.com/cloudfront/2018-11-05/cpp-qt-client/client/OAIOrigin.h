/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrigin.h
 *
 * &lt;p&gt;A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web server), Amazon MediaStore, or other server from which CloudFront gets your files. This can also be an origin group, if you&#39;ve created an origin group. You must specify at least one origin or origin group.&lt;/p&gt; &lt;p&gt;For the current limit on the number of origins or origin groups that you can specify for a distribution, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront\&quot;&gt;Amazon CloudFront Limits&lt;/a&gt; in the &lt;i&gt;AWS General Reference&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIOrigin_H
#define OAIOrigin_H

#include <QJsonObject>

#include "OAIOrigin_CustomHeaders.h"
#include "OAIOrigin_CustomOriginConfig.h"
#include "OAIOrigin_S3OriginConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrigin_CustomHeaders;
class OAIOrigin_S3OriginConfig;
class OAIOrigin_CustomOriginConfig;

class OAIOrigin : public OAIObject {
public:
    OAIOrigin();
    OAIOrigin(QString json);
    ~OAIOrigin() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getOriginPath() const;
    void setOriginPath(const QString &origin_path);
    bool is_origin_path_Set() const;
    bool is_origin_path_Valid() const;

    OAIOrigin_CustomHeaders getCustomHeaders() const;
    void setCustomHeaders(const OAIOrigin_CustomHeaders &custom_headers);
    bool is_custom_headers_Set() const;
    bool is_custom_headers_Valid() const;

    OAIOrigin_S3OriginConfig getS3OriginConfig() const;
    void setS3OriginConfig(const OAIOrigin_S3OriginConfig &s3_origin_config);
    bool is_s3_origin_config_Set() const;
    bool is_s3_origin_config_Valid() const;

    OAIOrigin_CustomOriginConfig getCustomOriginConfig() const;
    void setCustomOriginConfig(const OAIOrigin_CustomOriginConfig &custom_origin_config);
    bool is_custom_origin_config_Set() const;
    bool is_custom_origin_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_origin_path;
    bool m_origin_path_isSet;
    bool m_origin_path_isValid;

    OAIOrigin_CustomHeaders m_custom_headers;
    bool m_custom_headers_isSet;
    bool m_custom_headers_isValid;

    OAIOrigin_S3OriginConfig m_s3_origin_config;
    bool m_s3_origin_config_isSet;
    bool m_s3_origin_config_isValid;

    OAIOrigin_CustomOriginConfig m_custom_origin_config;
    bool m_custom_origin_config_isSet;
    bool m_custom_origin_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrigin)

#endif // OAIOrigin_H
