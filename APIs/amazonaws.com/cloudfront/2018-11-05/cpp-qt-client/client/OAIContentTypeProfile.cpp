/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentTypeProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentTypeProfile::OAIContentTypeProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentTypeProfile::OAIContentTypeProfile() {
    this->initializeModel();
}

OAIContentTypeProfile::~OAIContentTypeProfile() {}

void OAIContentTypeProfile::initializeModel() {

    m_format_isSet = false;
    m_format_isValid = false;

    m_profile_id_isSet = false;
    m_profile_id_isValid = false;

    m_content_type_isSet = false;
    m_content_type_isValid = false;
}

void OAIContentTypeProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContentTypeProfile::fromJsonObject(QJsonObject json) {

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("Format")]);
    m_format_isSet = !json[QString("Format")].isNull() && m_format_isValid;

    m_profile_id_isValid = ::OpenAPI::fromJsonValue(m_profile_id, json[QString("ProfileId")]);
    m_profile_id_isSet = !json[QString("ProfileId")].isNull() && m_profile_id_isValid;

    m_content_type_isValid = ::OpenAPI::fromJsonValue(m_content_type, json[QString("ContentType")]);
    m_content_type_isSet = !json[QString("ContentType")].isNull() && m_content_type_isValid;
}

QString OAIContentTypeProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContentTypeProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_format.isSet()) {
        obj.insert(QString("Format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_profile_id_isSet) {
        obj.insert(QString("ProfileId"), ::OpenAPI::toJsonValue(m_profile_id));
    }
    if (m_content_type_isSet) {
        obj.insert(QString("ContentType"), ::OpenAPI::toJsonValue(m_content_type));
    }
    return obj;
}

OAIFormat OAIContentTypeProfile::getFormat() const {
    return m_format;
}
void OAIContentTypeProfile::setFormat(const OAIFormat &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIContentTypeProfile::is_format_Set() const{
    return m_format_isSet;
}

bool OAIContentTypeProfile::is_format_Valid() const{
    return m_format_isValid;
}

QString OAIContentTypeProfile::getProfileId() const {
    return m_profile_id;
}
void OAIContentTypeProfile::setProfileId(const QString &profile_id) {
    m_profile_id = profile_id;
    m_profile_id_isSet = true;
}

bool OAIContentTypeProfile::is_profile_id_Set() const{
    return m_profile_id_isSet;
}

bool OAIContentTypeProfile::is_profile_id_Valid() const{
    return m_profile_id_isValid;
}

QString OAIContentTypeProfile::getContentType() const {
    return m_content_type;
}
void OAIContentTypeProfile::setContentType(const QString &content_type) {
    m_content_type = content_type;
    m_content_type_isSet = true;
}

bool OAIContentTypeProfile::is_content_type_Set() const{
    return m_content_type_isSet;
}

bool OAIContentTypeProfile::is_content_type_Valid() const{
    return m_content_type_isValid;
}

bool OAIContentTypeProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContentTypeProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_format_isValid && m_content_type_isValid && true;
}

} // namespace OpenAPI
