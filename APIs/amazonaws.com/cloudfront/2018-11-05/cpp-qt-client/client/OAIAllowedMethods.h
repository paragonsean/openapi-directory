/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllowedMethods.h
 *
 * &lt;p&gt;A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;CloudFront forwards only &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudFront forwards only &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, and &lt;code&gt;OPTIONS&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudFront forwards &lt;code&gt;GET, HEAD, OPTIONS, PUT, PATCH, POST&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can&#39;t perform operations that you don&#39;t want them to. For example, you might not want users to have permissions to delete objects from your origin.&lt;/p&gt;
 */

#ifndef OAIAllowedMethods_H
#define OAIAllowedMethods_H

#include <QJsonObject>

#include "OAICachedMethods.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICachedMethods;

class OAIAllowedMethods : public OAIObject {
public:
    OAIAllowedMethods();
    OAIAllowedMethods(QString json);
    ~OAIAllowedMethods() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QList getItems() const;
    void setItems(const QList &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAICachedMethods getCachedMethods() const;
    void setCachedMethods(const OAICachedMethods &cached_methods);
    bool is_cached_methods_Set() const;
    bool is_cached_methods_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QList m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAICachedMethods m_cached_methods;
    bool m_cached_methods_isSet;
    bool m_cached_methods_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllowedMethods)

#endif // OAIAllowedMethods_H
