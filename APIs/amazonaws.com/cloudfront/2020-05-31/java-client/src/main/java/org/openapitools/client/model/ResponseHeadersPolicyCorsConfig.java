/*
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders;
import org.openapitools.client.model.ResponseHeadersPolicyCorsConfigAccessControlAllowMethods;
import org.openapitools.client.model.ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins;
import org.openapitools.client.model.ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS). CloudFront adds these headers to HTTP responses that it sends for CORS requests that match a cache behavior associated with this response headers policy.&lt;/p&gt; &lt;p&gt;For more information about CORS, see &lt;a href&#x3D;\&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt; in the MDN Web Docs.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:51.562194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResponseHeadersPolicyCorsConfig {
  public static final String SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_ORIGINS = "AccessControlAllowOrigins";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_ORIGINS)
  private ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins accessControlAllowOrigins;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_HEADERS = "AccessControlAllowHeaders";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_HEADERS)
  private ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders accessControlAllowHeaders;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_METHODS = "AccessControlAllowMethods";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_METHODS)
  private ResponseHeadersPolicyCorsConfigAccessControlAllowMethods accessControlAllowMethods;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_CREDENTIALS = "AccessControlAllowCredentials";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_ALLOW_CREDENTIALS)
  private Boolean accessControlAllowCredentials;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_EXPOSE_HEADERS = "AccessControlExposeHeaders";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_EXPOSE_HEADERS)
  private ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders accessControlExposeHeaders;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_MAX_AGE_SEC = "AccessControlMaxAgeSec";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_MAX_AGE_SEC)
  private Integer accessControlMaxAgeSec;

  public static final String SERIALIZED_NAME_ORIGIN_OVERRIDE = "OriginOverride";
  @SerializedName(SERIALIZED_NAME_ORIGIN_OVERRIDE)
  private Boolean originOverride;

  public ResponseHeadersPolicyCorsConfig() {
  }

  public ResponseHeadersPolicyCorsConfig accessControlAllowOrigins(ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins accessControlAllowOrigins) {
    this.accessControlAllowOrigins = accessControlAllowOrigins;
    return this;
  }

  /**
   * Get accessControlAllowOrigins
   * @return accessControlAllowOrigins
   */
  @javax.annotation.Nonnull
  public ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins getAccessControlAllowOrigins() {
    return accessControlAllowOrigins;
  }

  public void setAccessControlAllowOrigins(ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins accessControlAllowOrigins) {
    this.accessControlAllowOrigins = accessControlAllowOrigins;
  }


  public ResponseHeadersPolicyCorsConfig accessControlAllowHeaders(ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders accessControlAllowHeaders) {
    this.accessControlAllowHeaders = accessControlAllowHeaders;
    return this;
  }

  /**
   * Get accessControlAllowHeaders
   * @return accessControlAllowHeaders
   */
  @javax.annotation.Nonnull
  public ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders getAccessControlAllowHeaders() {
    return accessControlAllowHeaders;
  }

  public void setAccessControlAllowHeaders(ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders accessControlAllowHeaders) {
    this.accessControlAllowHeaders = accessControlAllowHeaders;
  }


  public ResponseHeadersPolicyCorsConfig accessControlAllowMethods(ResponseHeadersPolicyCorsConfigAccessControlAllowMethods accessControlAllowMethods) {
    this.accessControlAllowMethods = accessControlAllowMethods;
    return this;
  }

  /**
   * Get accessControlAllowMethods
   * @return accessControlAllowMethods
   */
  @javax.annotation.Nonnull
  public ResponseHeadersPolicyCorsConfigAccessControlAllowMethods getAccessControlAllowMethods() {
    return accessControlAllowMethods;
  }

  public void setAccessControlAllowMethods(ResponseHeadersPolicyCorsConfigAccessControlAllowMethods accessControlAllowMethods) {
    this.accessControlAllowMethods = accessControlAllowMethods;
  }


  public ResponseHeadersPolicyCorsConfig accessControlAllowCredentials(Boolean accessControlAllowCredentials) {
    this.accessControlAllowCredentials = accessControlAllowCredentials;
    return this;
  }

  /**
   * Get accessControlAllowCredentials
   * @return accessControlAllowCredentials
   */
  @javax.annotation.Nonnull
  public Boolean getAccessControlAllowCredentials() {
    return accessControlAllowCredentials;
  }

  public void setAccessControlAllowCredentials(Boolean accessControlAllowCredentials) {
    this.accessControlAllowCredentials = accessControlAllowCredentials;
  }


  public ResponseHeadersPolicyCorsConfig accessControlExposeHeaders(ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders accessControlExposeHeaders) {
    this.accessControlExposeHeaders = accessControlExposeHeaders;
    return this;
  }

  /**
   * Get accessControlExposeHeaders
   * @return accessControlExposeHeaders
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders getAccessControlExposeHeaders() {
    return accessControlExposeHeaders;
  }

  public void setAccessControlExposeHeaders(ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders accessControlExposeHeaders) {
    this.accessControlExposeHeaders = accessControlExposeHeaders;
  }


  public ResponseHeadersPolicyCorsConfig accessControlMaxAgeSec(Integer accessControlMaxAgeSec) {
    this.accessControlMaxAgeSec = accessControlMaxAgeSec;
    return this;
  }

  /**
   * Get accessControlMaxAgeSec
   * @return accessControlMaxAgeSec
   */
  @javax.annotation.Nullable
  public Integer getAccessControlMaxAgeSec() {
    return accessControlMaxAgeSec;
  }

  public void setAccessControlMaxAgeSec(Integer accessControlMaxAgeSec) {
    this.accessControlMaxAgeSec = accessControlMaxAgeSec;
  }


  public ResponseHeadersPolicyCorsConfig originOverride(Boolean originOverride) {
    this.originOverride = originOverride;
    return this;
  }

  /**
   * Get originOverride
   * @return originOverride
   */
  @javax.annotation.Nonnull
  public Boolean getOriginOverride() {
    return originOverride;
  }

  public void setOriginOverride(Boolean originOverride) {
    this.originOverride = originOverride;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseHeadersPolicyCorsConfig responseHeadersPolicyCorsConfig = (ResponseHeadersPolicyCorsConfig) o;
    return Objects.equals(this.accessControlAllowOrigins, responseHeadersPolicyCorsConfig.accessControlAllowOrigins) &&
        Objects.equals(this.accessControlAllowHeaders, responseHeadersPolicyCorsConfig.accessControlAllowHeaders) &&
        Objects.equals(this.accessControlAllowMethods, responseHeadersPolicyCorsConfig.accessControlAllowMethods) &&
        Objects.equals(this.accessControlAllowCredentials, responseHeadersPolicyCorsConfig.accessControlAllowCredentials) &&
        Objects.equals(this.accessControlExposeHeaders, responseHeadersPolicyCorsConfig.accessControlExposeHeaders) &&
        Objects.equals(this.accessControlMaxAgeSec, responseHeadersPolicyCorsConfig.accessControlMaxAgeSec) &&
        Objects.equals(this.originOverride, responseHeadersPolicyCorsConfig.originOverride);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessControlAllowOrigins, accessControlAllowHeaders, accessControlAllowMethods, accessControlAllowCredentials, accessControlExposeHeaders, accessControlMaxAgeSec, originOverride);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseHeadersPolicyCorsConfig {\n");
    sb.append("    accessControlAllowOrigins: ").append(toIndentedString(accessControlAllowOrigins)).append("\n");
    sb.append("    accessControlAllowHeaders: ").append(toIndentedString(accessControlAllowHeaders)).append("\n");
    sb.append("    accessControlAllowMethods: ").append(toIndentedString(accessControlAllowMethods)).append("\n");
    sb.append("    accessControlAllowCredentials: ").append(toIndentedString(accessControlAllowCredentials)).append("\n");
    sb.append("    accessControlExposeHeaders: ").append(toIndentedString(accessControlExposeHeaders)).append("\n");
    sb.append("    accessControlMaxAgeSec: ").append(toIndentedString(accessControlMaxAgeSec)).append("\n");
    sb.append("    originOverride: ").append(toIndentedString(originOverride)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccessControlAllowOrigins");
    openapiFields.add("AccessControlAllowHeaders");
    openapiFields.add("AccessControlAllowMethods");
    openapiFields.add("AccessControlAllowCredentials");
    openapiFields.add("AccessControlExposeHeaders");
    openapiFields.add("AccessControlMaxAgeSec");
    openapiFields.add("OriginOverride");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AccessControlAllowOrigins");
    openapiRequiredFields.add("AccessControlAllowHeaders");
    openapiRequiredFields.add("AccessControlAllowMethods");
    openapiRequiredFields.add("AccessControlAllowCredentials");
    openapiRequiredFields.add("OriginOverride");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResponseHeadersPolicyCorsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResponseHeadersPolicyCorsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResponseHeadersPolicyCorsConfig is not found in the empty JSON string", ResponseHeadersPolicyCorsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResponseHeadersPolicyCorsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResponseHeadersPolicyCorsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResponseHeadersPolicyCorsConfig.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `AccessControlAllowOrigins`
      ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins.validateJsonElement(jsonObj.get("AccessControlAllowOrigins"));
      // validate the required field `AccessControlAllowHeaders`
      ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders.validateJsonElement(jsonObj.get("AccessControlAllowHeaders"));
      // validate the required field `AccessControlAllowMethods`
      ResponseHeadersPolicyCorsConfigAccessControlAllowMethods.validateJsonElement(jsonObj.get("AccessControlAllowMethods"));
      // validate the required field `AccessControlAllowCredentials`
      Boolean.validateJsonElement(jsonObj.get("AccessControlAllowCredentials"));
      // validate the optional field `AccessControlExposeHeaders`
      if (jsonObj.get("AccessControlExposeHeaders") != null && !jsonObj.get("AccessControlExposeHeaders").isJsonNull()) {
        ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders.validateJsonElement(jsonObj.get("AccessControlExposeHeaders"));
      }
      // validate the optional field `AccessControlMaxAgeSec`
      if (jsonObj.get("AccessControlMaxAgeSec") != null && !jsonObj.get("AccessControlMaxAgeSec").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AccessControlMaxAgeSec"));
      }
      // validate the required field `OriginOverride`
      Boolean.validateJsonElement(jsonObj.get("OriginOverride"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResponseHeadersPolicyCorsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResponseHeadersPolicyCorsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResponseHeadersPolicyCorsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResponseHeadersPolicyCorsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<ResponseHeadersPolicyCorsConfig>() {
           @Override
           public void write(JsonWriter out, ResponseHeadersPolicyCorsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResponseHeadersPolicyCorsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResponseHeadersPolicyCorsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResponseHeadersPolicyCorsConfig
   * @throws IOException if the JSON string is invalid with respect to ResponseHeadersPolicyCorsConfig
   */
  public static ResponseHeadersPolicyCorsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResponseHeadersPolicyCorsConfig.class);
  }

  /**
   * Convert an instance of ResponseHeadersPolicyCorsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

