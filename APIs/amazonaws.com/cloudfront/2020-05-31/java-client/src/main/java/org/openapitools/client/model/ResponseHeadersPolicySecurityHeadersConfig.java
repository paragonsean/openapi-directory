/*
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy;
import org.openapitools.client.model.ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions;
import org.openapitools.client.model.ResponseHeadersPolicySecurityHeadersConfigFrameOptions;
import org.openapitools.client.model.ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy;
import org.openapitools.client.model.ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity;
import org.openapitools.client.model.ResponseHeadersPolicySecurityHeadersConfigXSSProtection;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A configuration for a set of security-related HTTP response headers. CloudFront adds these headers to HTTP responses that it sends for requests that match a cache behavior associated with this response headers policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:51.562194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResponseHeadersPolicySecurityHeadersConfig {
  public static final String SERIALIZED_NAME_XS_S_PROTECTION = "XSSProtection";
  @SerializedName(SERIALIZED_NAME_XS_S_PROTECTION)
  private ResponseHeadersPolicySecurityHeadersConfigXSSProtection xsSProtection;

  public static final String SERIALIZED_NAME_FRAME_OPTIONS = "FrameOptions";
  @SerializedName(SERIALIZED_NAME_FRAME_OPTIONS)
  private ResponseHeadersPolicySecurityHeadersConfigFrameOptions frameOptions;

  public static final String SERIALIZED_NAME_REFERRER_POLICY = "ReferrerPolicy";
  @SerializedName(SERIALIZED_NAME_REFERRER_POLICY)
  private ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy referrerPolicy;

  public static final String SERIALIZED_NAME_CONTENT_SECURITY_POLICY = "ContentSecurityPolicy";
  @SerializedName(SERIALIZED_NAME_CONTENT_SECURITY_POLICY)
  private ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy contentSecurityPolicy;

  public static final String SERIALIZED_NAME_CONTENT_TYPE_OPTIONS = "ContentTypeOptions";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE_OPTIONS)
  private ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions contentTypeOptions;

  public static final String SERIALIZED_NAME_STRICT_TRANSPORT_SECURITY = "StrictTransportSecurity";
  @SerializedName(SERIALIZED_NAME_STRICT_TRANSPORT_SECURITY)
  private ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity strictTransportSecurity;

  public ResponseHeadersPolicySecurityHeadersConfig() {
  }

  public ResponseHeadersPolicySecurityHeadersConfig xsSProtection(ResponseHeadersPolicySecurityHeadersConfigXSSProtection xsSProtection) {
    this.xsSProtection = xsSProtection;
    return this;
  }

  /**
   * Get xsSProtection
   * @return xsSProtection
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicySecurityHeadersConfigXSSProtection getXsSProtection() {
    return xsSProtection;
  }

  public void setXsSProtection(ResponseHeadersPolicySecurityHeadersConfigXSSProtection xsSProtection) {
    this.xsSProtection = xsSProtection;
  }


  public ResponseHeadersPolicySecurityHeadersConfig frameOptions(ResponseHeadersPolicySecurityHeadersConfigFrameOptions frameOptions) {
    this.frameOptions = frameOptions;
    return this;
  }

  /**
   * Get frameOptions
   * @return frameOptions
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicySecurityHeadersConfigFrameOptions getFrameOptions() {
    return frameOptions;
  }

  public void setFrameOptions(ResponseHeadersPolicySecurityHeadersConfigFrameOptions frameOptions) {
    this.frameOptions = frameOptions;
  }


  public ResponseHeadersPolicySecurityHeadersConfig referrerPolicy(ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy referrerPolicy) {
    this.referrerPolicy = referrerPolicy;
    return this;
  }

  /**
   * Get referrerPolicy
   * @return referrerPolicy
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy getReferrerPolicy() {
    return referrerPolicy;
  }

  public void setReferrerPolicy(ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy referrerPolicy) {
    this.referrerPolicy = referrerPolicy;
  }


  public ResponseHeadersPolicySecurityHeadersConfig contentSecurityPolicy(ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy contentSecurityPolicy) {
    this.contentSecurityPolicy = contentSecurityPolicy;
    return this;
  }

  /**
   * Get contentSecurityPolicy
   * @return contentSecurityPolicy
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy getContentSecurityPolicy() {
    return contentSecurityPolicy;
  }

  public void setContentSecurityPolicy(ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy contentSecurityPolicy) {
    this.contentSecurityPolicy = contentSecurityPolicy;
  }


  public ResponseHeadersPolicySecurityHeadersConfig contentTypeOptions(ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions contentTypeOptions) {
    this.contentTypeOptions = contentTypeOptions;
    return this;
  }

  /**
   * Get contentTypeOptions
   * @return contentTypeOptions
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions getContentTypeOptions() {
    return contentTypeOptions;
  }

  public void setContentTypeOptions(ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions contentTypeOptions) {
    this.contentTypeOptions = contentTypeOptions;
  }


  public ResponseHeadersPolicySecurityHeadersConfig strictTransportSecurity(ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity strictTransportSecurity) {
    this.strictTransportSecurity = strictTransportSecurity;
    return this;
  }

  /**
   * Get strictTransportSecurity
   * @return strictTransportSecurity
   */
  @javax.annotation.Nullable
  public ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity getStrictTransportSecurity() {
    return strictTransportSecurity;
  }

  public void setStrictTransportSecurity(ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity strictTransportSecurity) {
    this.strictTransportSecurity = strictTransportSecurity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseHeadersPolicySecurityHeadersConfig responseHeadersPolicySecurityHeadersConfig = (ResponseHeadersPolicySecurityHeadersConfig) o;
    return Objects.equals(this.xsSProtection, responseHeadersPolicySecurityHeadersConfig.xsSProtection) &&
        Objects.equals(this.frameOptions, responseHeadersPolicySecurityHeadersConfig.frameOptions) &&
        Objects.equals(this.referrerPolicy, responseHeadersPolicySecurityHeadersConfig.referrerPolicy) &&
        Objects.equals(this.contentSecurityPolicy, responseHeadersPolicySecurityHeadersConfig.contentSecurityPolicy) &&
        Objects.equals(this.contentTypeOptions, responseHeadersPolicySecurityHeadersConfig.contentTypeOptions) &&
        Objects.equals(this.strictTransportSecurity, responseHeadersPolicySecurityHeadersConfig.strictTransportSecurity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(xsSProtection, frameOptions, referrerPolicy, contentSecurityPolicy, contentTypeOptions, strictTransportSecurity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseHeadersPolicySecurityHeadersConfig {\n");
    sb.append("    xsSProtection: ").append(toIndentedString(xsSProtection)).append("\n");
    sb.append("    frameOptions: ").append(toIndentedString(frameOptions)).append("\n");
    sb.append("    referrerPolicy: ").append(toIndentedString(referrerPolicy)).append("\n");
    sb.append("    contentSecurityPolicy: ").append(toIndentedString(contentSecurityPolicy)).append("\n");
    sb.append("    contentTypeOptions: ").append(toIndentedString(contentTypeOptions)).append("\n");
    sb.append("    strictTransportSecurity: ").append(toIndentedString(strictTransportSecurity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("XSSProtection");
    openapiFields.add("FrameOptions");
    openapiFields.add("ReferrerPolicy");
    openapiFields.add("ContentSecurityPolicy");
    openapiFields.add("ContentTypeOptions");
    openapiFields.add("StrictTransportSecurity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResponseHeadersPolicySecurityHeadersConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResponseHeadersPolicySecurityHeadersConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResponseHeadersPolicySecurityHeadersConfig is not found in the empty JSON string", ResponseHeadersPolicySecurityHeadersConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResponseHeadersPolicySecurityHeadersConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResponseHeadersPolicySecurityHeadersConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `XSSProtection`
      if (jsonObj.get("XSSProtection") != null && !jsonObj.get("XSSProtection").isJsonNull()) {
        ResponseHeadersPolicySecurityHeadersConfigXSSProtection.validateJsonElement(jsonObj.get("XSSProtection"));
      }
      // validate the optional field `FrameOptions`
      if (jsonObj.get("FrameOptions") != null && !jsonObj.get("FrameOptions").isJsonNull()) {
        ResponseHeadersPolicySecurityHeadersConfigFrameOptions.validateJsonElement(jsonObj.get("FrameOptions"));
      }
      // validate the optional field `ReferrerPolicy`
      if (jsonObj.get("ReferrerPolicy") != null && !jsonObj.get("ReferrerPolicy").isJsonNull()) {
        ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy.validateJsonElement(jsonObj.get("ReferrerPolicy"));
      }
      // validate the optional field `ContentSecurityPolicy`
      if (jsonObj.get("ContentSecurityPolicy") != null && !jsonObj.get("ContentSecurityPolicy").isJsonNull()) {
        ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.validateJsonElement(jsonObj.get("ContentSecurityPolicy"));
      }
      // validate the optional field `ContentTypeOptions`
      if (jsonObj.get("ContentTypeOptions") != null && !jsonObj.get("ContentTypeOptions").isJsonNull()) {
        ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions.validateJsonElement(jsonObj.get("ContentTypeOptions"));
      }
      // validate the optional field `StrictTransportSecurity`
      if (jsonObj.get("StrictTransportSecurity") != null && !jsonObj.get("StrictTransportSecurity").isJsonNull()) {
        ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity.validateJsonElement(jsonObj.get("StrictTransportSecurity"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResponseHeadersPolicySecurityHeadersConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResponseHeadersPolicySecurityHeadersConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResponseHeadersPolicySecurityHeadersConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResponseHeadersPolicySecurityHeadersConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<ResponseHeadersPolicySecurityHeadersConfig>() {
           @Override
           public void write(JsonWriter out, ResponseHeadersPolicySecurityHeadersConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResponseHeadersPolicySecurityHeadersConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResponseHeadersPolicySecurityHeadersConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResponseHeadersPolicySecurityHeadersConfig
   * @throws IOException if the JSON string is invalid with respect to ResponseHeadersPolicySecurityHeadersConfig
   */
  public static ResponseHeadersPolicySecurityHeadersConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResponseHeadersPolicySecurityHeadersConfig.class);
  }

  /**
   * Convert an instance of ResponseHeadersPolicySecurityHeadersConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

