# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, override: bool=None, content_security_policy: str=None):
        """ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy - a model defined in OpenAPI

        :param override: The override of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        :param content_security_policy: The content_security_policy of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        """
        self.openapi_types = {
            'override': bool,
            'content_security_policy': str
        }

        self.attribute_map = {
            'override': 'Override',
            'content_security_policy': 'ContentSecurityPolicy'
        }

        self._override = override
        self._content_security_policy = content_security_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseHeadersPolicySecurityHeadersConfig_ContentSecurityPolicy of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def override(self):
        """Gets the override of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.


        :return: The override of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        :rtype: bool
        """
        return self._override

    @override.setter
    def override(self, override):
        """Sets the override of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.


        :param override: The override of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        :type override: bool
        """
        if override is None:
            raise ValueError("Invalid value for `override`, must not be `None`")

        self._override = override

    @property
    def content_security_policy(self):
        """Gets the content_security_policy of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.


        :return: The content_security_policy of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        :rtype: str
        """
        return self._content_security_policy

    @content_security_policy.setter
    def content_security_policy(self, content_security_policy):
        """Sets the content_security_policy of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.


        :param content_security_policy: The content_security_policy of this ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy.
        :type content_security_policy: str
        """
        if content_security_policy is None:
            raise ValueError("Invalid value for `content_security_policy`, must not be `None`")

        self._content_security_policy = content_security_policy
