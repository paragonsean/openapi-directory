# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_field_level_encryption_config20200531_request_field_level_encryption_config import CreateFieldLevelEncryptionConfig20200531RequestFieldLevelEncryptionConfig
from openapi_server import util


class CreateFieldLevelEncryptionConfig20200531Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_level_encryption_config: CreateFieldLevelEncryptionConfig20200531RequestFieldLevelEncryptionConfig=None):
        """CreateFieldLevelEncryptionConfig20200531Request - a model defined in OpenAPI

        :param field_level_encryption_config: The field_level_encryption_config of this CreateFieldLevelEncryptionConfig20200531Request.
        """
        self.openapi_types = {
            'field_level_encryption_config': CreateFieldLevelEncryptionConfig20200531RequestFieldLevelEncryptionConfig
        }

        self.attribute_map = {
            'field_level_encryption_config': 'FieldLevelEncryptionConfig'
        }

        self._field_level_encryption_config = field_level_encryption_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFieldLevelEncryptionConfig20200531Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFieldLevelEncryptionConfig2020_05_31_request of this CreateFieldLevelEncryptionConfig20200531Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_level_encryption_config(self):
        """Gets the field_level_encryption_config of this CreateFieldLevelEncryptionConfig20200531Request.


        :return: The field_level_encryption_config of this CreateFieldLevelEncryptionConfig20200531Request.
        :rtype: CreateFieldLevelEncryptionConfig20200531RequestFieldLevelEncryptionConfig
        """
        return self._field_level_encryption_config

    @field_level_encryption_config.setter
    def field_level_encryption_config(self, field_level_encryption_config):
        """Sets the field_level_encryption_config of this CreateFieldLevelEncryptionConfig20200531Request.


        :param field_level_encryption_config: The field_level_encryption_config of this CreateFieldLevelEncryptionConfig20200531Request.
        :type field_level_encryption_config: CreateFieldLevelEncryptionConfig20200531RequestFieldLevelEncryptionConfig
        """
        if field_level_encryption_config is None:
            raise ValueError("Invalid value for `field_level_encryption_config`, must not be `None`")

        self._field_level_encryption_config = field_level_encryption_config
