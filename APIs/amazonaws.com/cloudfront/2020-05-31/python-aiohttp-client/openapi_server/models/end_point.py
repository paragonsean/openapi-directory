# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.end_point_kinesis_stream_config import EndPointKinesisStreamConfig
from openapi_server import util


class EndPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_type: str=None, kinesis_stream_config: EndPointKinesisStreamConfig=None):
        """EndPoint - a model defined in OpenAPI

        :param stream_type: The stream_type of this EndPoint.
        :param kinesis_stream_config: The kinesis_stream_config of this EndPoint.
        """
        self.openapi_types = {
            'stream_type': str,
            'kinesis_stream_config': EndPointKinesisStreamConfig
        }

        self.attribute_map = {
            'stream_type': 'StreamType',
            'kinesis_stream_config': 'KinesisStreamConfig'
        }

        self._stream_type = stream_type
        self._kinesis_stream_config = kinesis_stream_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndPoint of this EndPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_type(self):
        """Gets the stream_type of this EndPoint.


        :return: The stream_type of this EndPoint.
        :rtype: str
        """
        return self._stream_type

    @stream_type.setter
    def stream_type(self, stream_type):
        """Sets the stream_type of this EndPoint.


        :param stream_type: The stream_type of this EndPoint.
        :type stream_type: str
        """
        if stream_type is None:
            raise ValueError("Invalid value for `stream_type`, must not be `None`")

        self._stream_type = stream_type

    @property
    def kinesis_stream_config(self):
        """Gets the kinesis_stream_config of this EndPoint.


        :return: The kinesis_stream_config of this EndPoint.
        :rtype: EndPointKinesisStreamConfig
        """
        return self._kinesis_stream_config

    @kinesis_stream_config.setter
    def kinesis_stream_config(self, kinesis_stream_config):
        """Sets the kinesis_stream_config of this EndPoint.


        :param kinesis_stream_config: The kinesis_stream_config of this EndPoint.
        :type kinesis_stream_config: EndPointKinesisStreamConfig
        """

        self._kinesis_stream_config = kinesis_stream_config
