# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session_stickiness_config import SessionStickinessConfig
from openapi_server import util


class ContinuousDeploymentSingleWeightConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, weight: float=None, session_stickiness_config: SessionStickinessConfig=None):
        """ContinuousDeploymentSingleWeightConfig - a model defined in OpenAPI

        :param weight: The weight of this ContinuousDeploymentSingleWeightConfig.
        :param session_stickiness_config: The session_stickiness_config of this ContinuousDeploymentSingleWeightConfig.
        """
        self.openapi_types = {
            'weight': float,
            'session_stickiness_config': SessionStickinessConfig
        }

        self.attribute_map = {
            'weight': 'Weight',
            'session_stickiness_config': 'SessionStickinessConfig'
        }

        self._weight = weight
        self._session_stickiness_config = session_stickiness_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousDeploymentSingleWeightConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousDeploymentSingleWeightConfig of this ContinuousDeploymentSingleWeightConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def weight(self):
        """Gets the weight of this ContinuousDeploymentSingleWeightConfig.


        :return: The weight of this ContinuousDeploymentSingleWeightConfig.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this ContinuousDeploymentSingleWeightConfig.


        :param weight: The weight of this ContinuousDeploymentSingleWeightConfig.
        :type weight: float
        """
        if weight is None:
            raise ValueError("Invalid value for `weight`, must not be `None`")

        self._weight = weight

    @property
    def session_stickiness_config(self):
        """Gets the session_stickiness_config of this ContinuousDeploymentSingleWeightConfig.


        :return: The session_stickiness_config of this ContinuousDeploymentSingleWeightConfig.
        :rtype: SessionStickinessConfig
        """
        return self._session_stickiness_config

    @session_stickiness_config.setter
    def session_stickiness_config(self, session_stickiness_config):
        """Sets the session_stickiness_config of this ContinuousDeploymentSingleWeightConfig.


        :param session_stickiness_config: The session_stickiness_config of this ContinuousDeploymentSingleWeightConfig.
        :type session_stickiness_config: SessionStickinessConfig
        """

        self._session_stickiness_config = session_stickiness_config
