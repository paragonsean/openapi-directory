# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_continuous_deployment_policy_request_continuous_deployment_policy_config import UpdateContinuousDeploymentPolicyRequestContinuousDeploymentPolicyConfig
from openapi_server import util


class UpdateContinuousDeploymentPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continuous_deployment_policy_config: UpdateContinuousDeploymentPolicyRequestContinuousDeploymentPolicyConfig=None):
        """UpdateContinuousDeploymentPolicyRequest - a model defined in OpenAPI

        :param continuous_deployment_policy_config: The continuous_deployment_policy_config of this UpdateContinuousDeploymentPolicyRequest.
        """
        self.openapi_types = {
            'continuous_deployment_policy_config': UpdateContinuousDeploymentPolicyRequestContinuousDeploymentPolicyConfig
        }

        self.attribute_map = {
            'continuous_deployment_policy_config': 'ContinuousDeploymentPolicyConfig'
        }

        self._continuous_deployment_policy_config = continuous_deployment_policy_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateContinuousDeploymentPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateContinuousDeploymentPolicyRequest of this UpdateContinuousDeploymentPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continuous_deployment_policy_config(self):
        """Gets the continuous_deployment_policy_config of this UpdateContinuousDeploymentPolicyRequest.


        :return: The continuous_deployment_policy_config of this UpdateContinuousDeploymentPolicyRequest.
        :rtype: UpdateContinuousDeploymentPolicyRequestContinuousDeploymentPolicyConfig
        """
        return self._continuous_deployment_policy_config

    @continuous_deployment_policy_config.setter
    def continuous_deployment_policy_config(self, continuous_deployment_policy_config):
        """Sets the continuous_deployment_policy_config of this UpdateContinuousDeploymentPolicyRequest.


        :param continuous_deployment_policy_config: The continuous_deployment_policy_config of this UpdateContinuousDeploymentPolicyRequest.
        :type continuous_deployment_policy_config: UpdateContinuousDeploymentPolicyRequestContinuousDeploymentPolicyConfig
        """
        if continuous_deployment_policy_config is None:
            raise ValueError("Invalid value for `continuous_deployment_policy_config`, must not be `None`")

        self._continuous_deployment_policy_config = continuous_deployment_policy_config
