# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_function20200531_request_function_config import CreateFunction20200531RequestFunctionConfig
from openapi_server import util


class UpdateFunction20200531Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, function_config: CreateFunction20200531RequestFunctionConfig=None, function_code: str=None):
        """UpdateFunction20200531Request - a model defined in OpenAPI

        :param function_config: The function_config of this UpdateFunction20200531Request.
        :param function_code: The function_code of this UpdateFunction20200531Request.
        """
        self.openapi_types = {
            'function_config': CreateFunction20200531RequestFunctionConfig,
            'function_code': str
        }

        self.attribute_map = {
            'function_config': 'FunctionConfig',
            'function_code': 'FunctionCode'
        }

        self._function_config = function_config
        self._function_code = function_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFunction20200531Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFunction2020_05_31_request of this UpdateFunction20200531Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def function_config(self):
        """Gets the function_config of this UpdateFunction20200531Request.


        :return: The function_config of this UpdateFunction20200531Request.
        :rtype: CreateFunction20200531RequestFunctionConfig
        """
        return self._function_config

    @function_config.setter
    def function_config(self, function_config):
        """Sets the function_config of this UpdateFunction20200531Request.


        :param function_config: The function_config of this UpdateFunction20200531Request.
        :type function_config: CreateFunction20200531RequestFunctionConfig
        """
        if function_config is None:
            raise ValueError("Invalid value for `function_config`, must not be `None`")

        self._function_config = function_config

    @property
    def function_code(self):
        """Gets the function_code of this UpdateFunction20200531Request.

        The function code. For more information about writing a CloudFront function, see <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html\">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.

        :return: The function_code of this UpdateFunction20200531Request.
        :rtype: str
        """
        return self._function_code

    @function_code.setter
    def function_code(self, function_code):
        """Sets the function_code of this UpdateFunction20200531Request.

        The function code. For more information about writing a CloudFront function, see <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html\">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.

        :param function_code: The function_code of this UpdateFunction20200531Request.
        :type function_code: str
        """
        if function_code is None:
            raise ValueError("Invalid value for `function_code`, must not be `None`")
        if function_code is not None and len(function_code) > 40960:
            raise ValueError("Invalid value for `function_code`, length must be less than or equal to `40960`")
        if function_code is not None and len(function_code) < 1:
            raise ValueError("Invalid value for `function_code`, length must be greater than or equal to `1`")

        self._function_code = function_code
