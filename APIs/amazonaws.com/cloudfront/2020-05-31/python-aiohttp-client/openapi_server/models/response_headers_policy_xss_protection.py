# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseHeadersPolicyXSSProtection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, override: bool=None, protection: bool=None, mode_block: bool=None, report_uri: str=None):
        """ResponseHeadersPolicyXSSProtection - a model defined in OpenAPI

        :param override: The override of this ResponseHeadersPolicyXSSProtection.
        :param protection: The protection of this ResponseHeadersPolicyXSSProtection.
        :param mode_block: The mode_block of this ResponseHeadersPolicyXSSProtection.
        :param report_uri: The report_uri of this ResponseHeadersPolicyXSSProtection.
        """
        self.openapi_types = {
            'override': bool,
            'protection': bool,
            'mode_block': bool,
            'report_uri': str
        }

        self.attribute_map = {
            'override': 'Override',
            'protection': 'Protection',
            'mode_block': 'ModeBlock',
            'report_uri': 'ReportUri'
        }

        self._override = override
        self._protection = protection
        self._mode_block = mode_block
        self._report_uri = report_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseHeadersPolicyXSSProtection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseHeadersPolicyXSSProtection of this ResponseHeadersPolicyXSSProtection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def override(self):
        """Gets the override of this ResponseHeadersPolicyXSSProtection.


        :return: The override of this ResponseHeadersPolicyXSSProtection.
        :rtype: bool
        """
        return self._override

    @override.setter
    def override(self, override):
        """Sets the override of this ResponseHeadersPolicyXSSProtection.


        :param override: The override of this ResponseHeadersPolicyXSSProtection.
        :type override: bool
        """
        if override is None:
            raise ValueError("Invalid value for `override`, must not be `None`")

        self._override = override

    @property
    def protection(self):
        """Gets the protection of this ResponseHeadersPolicyXSSProtection.


        :return: The protection of this ResponseHeadersPolicyXSSProtection.
        :rtype: bool
        """
        return self._protection

    @protection.setter
    def protection(self, protection):
        """Sets the protection of this ResponseHeadersPolicyXSSProtection.


        :param protection: The protection of this ResponseHeadersPolicyXSSProtection.
        :type protection: bool
        """
        if protection is None:
            raise ValueError("Invalid value for `protection`, must not be `None`")

        self._protection = protection

    @property
    def mode_block(self):
        """Gets the mode_block of this ResponseHeadersPolicyXSSProtection.


        :return: The mode_block of this ResponseHeadersPolicyXSSProtection.
        :rtype: bool
        """
        return self._mode_block

    @mode_block.setter
    def mode_block(self, mode_block):
        """Sets the mode_block of this ResponseHeadersPolicyXSSProtection.


        :param mode_block: The mode_block of this ResponseHeadersPolicyXSSProtection.
        :type mode_block: bool
        """

        self._mode_block = mode_block

    @property
    def report_uri(self):
        """Gets the report_uri of this ResponseHeadersPolicyXSSProtection.


        :return: The report_uri of this ResponseHeadersPolicyXSSProtection.
        :rtype: str
        """
        return self._report_uri

    @report_uri.setter
    def report_uri(self, report_uri):
        """Sets the report_uri of this ResponseHeadersPolicyXSSProtection.


        :param report_uri: The report_uri of this ResponseHeadersPolicyXSSProtection.
        :type report_uri: str
        """

        self._report_uri = report_uri
