# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_public_key_config_result_public_key_config import GetPublicKeyConfigResultPublicKeyConfig
from openapi_server import util


class UpdatePublicKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public_key_config: GetPublicKeyConfigResultPublicKeyConfig=None):
        """UpdatePublicKeyRequest - a model defined in OpenAPI

        :param public_key_config: The public_key_config of this UpdatePublicKeyRequest.
        """
        self.openapi_types = {
            'public_key_config': GetPublicKeyConfigResultPublicKeyConfig
        }

        self.attribute_map = {
            'public_key_config': 'PublicKeyConfig'
        }

        self._public_key_config = public_key_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePublicKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePublicKeyRequest of this UpdatePublicKeyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_key_config(self):
        """Gets the public_key_config of this UpdatePublicKeyRequest.


        :return: The public_key_config of this UpdatePublicKeyRequest.
        :rtype: GetPublicKeyConfigResultPublicKeyConfig
        """
        return self._public_key_config

    @public_key_config.setter
    def public_key_config(self, public_key_config):
        """Sets the public_key_config of this UpdatePublicKeyRequest.


        :param public_key_config: The public_key_config of this UpdatePublicKeyRequest.
        :type public_key_config: GetPublicKeyConfigResultPublicKeyConfig
        """
        if public_key_config is None:
            raise ValueError("Invalid value for `public_key_config`, must not be `None`")

        self._public_key_config = public_key_config
