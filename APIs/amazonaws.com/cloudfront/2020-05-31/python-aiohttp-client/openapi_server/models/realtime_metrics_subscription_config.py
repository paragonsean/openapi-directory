# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.realtime_metrics_subscription_status import RealtimeMetricsSubscriptionStatus
from openapi_server import util


class RealtimeMetricsSubscriptionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, realtime_metrics_subscription_status: RealtimeMetricsSubscriptionStatus=None):
        """RealtimeMetricsSubscriptionConfig - a model defined in OpenAPI

        :param realtime_metrics_subscription_status: The realtime_metrics_subscription_status of this RealtimeMetricsSubscriptionConfig.
        """
        self.openapi_types = {
            'realtime_metrics_subscription_status': RealtimeMetricsSubscriptionStatus
        }

        self.attribute_map = {
            'realtime_metrics_subscription_status': 'RealtimeMetricsSubscriptionStatus'
        }

        self._realtime_metrics_subscription_status = realtime_metrics_subscription_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RealtimeMetricsSubscriptionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RealtimeMetricsSubscriptionConfig of this RealtimeMetricsSubscriptionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def realtime_metrics_subscription_status(self):
        """Gets the realtime_metrics_subscription_status of this RealtimeMetricsSubscriptionConfig.


        :return: The realtime_metrics_subscription_status of this RealtimeMetricsSubscriptionConfig.
        :rtype: RealtimeMetricsSubscriptionStatus
        """
        return self._realtime_metrics_subscription_status

    @realtime_metrics_subscription_status.setter
    def realtime_metrics_subscription_status(self, realtime_metrics_subscription_status):
        """Sets the realtime_metrics_subscription_status of this RealtimeMetricsSubscriptionConfig.


        :param realtime_metrics_subscription_status: The realtime_metrics_subscription_status of this RealtimeMetricsSubscriptionConfig.
        :type realtime_metrics_subscription_status: RealtimeMetricsSubscriptionStatus
        """
        if realtime_metrics_subscription_status is None:
            raise ValueError("Invalid value for `realtime_metrics_subscription_status`, must not be `None`")

        self._realtime_metrics_subscription_status = realtime_metrics_subscription_status
