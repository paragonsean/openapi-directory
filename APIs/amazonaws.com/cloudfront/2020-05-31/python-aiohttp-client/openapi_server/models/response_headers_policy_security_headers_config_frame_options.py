# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.frame_options_list import FrameOptionsList
from openapi_server import util


class ResponseHeadersPolicySecurityHeadersConfigFrameOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, override: bool=None, frame_option: FrameOptionsList=None):
        """ResponseHeadersPolicySecurityHeadersConfigFrameOptions - a model defined in OpenAPI

        :param override: The override of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        :param frame_option: The frame_option of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        """
        self.openapi_types = {
            'override': bool,
            'frame_option': FrameOptionsList
        }

        self.attribute_map = {
            'override': 'Override',
            'frame_option': 'FrameOption'
        }

        self._override = override
        self._frame_option = frame_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseHeadersPolicySecurityHeadersConfigFrameOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseHeadersPolicySecurityHeadersConfig_FrameOptions of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def override(self):
        """Gets the override of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.


        :return: The override of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        :rtype: bool
        """
        return self._override

    @override.setter
    def override(self, override):
        """Sets the override of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.


        :param override: The override of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        :type override: bool
        """
        if override is None:
            raise ValueError("Invalid value for `override`, must not be `None`")

        self._override = override

    @property
    def frame_option(self):
        """Gets the frame_option of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.


        :return: The frame_option of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        :rtype: FrameOptionsList
        """
        return self._frame_option

    @frame_option.setter
    def frame_option(self, frame_option):
        """Sets the frame_option of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.


        :param frame_option: The frame_option of this ResponseHeadersPolicySecurityHeadersConfigFrameOptions.
        :type frame_option: FrameOptionsList
        """
        if frame_option is None:
            raise ValueError("Invalid value for `frame_option`, must not be `None`")

        self._frame_option = frame_option
