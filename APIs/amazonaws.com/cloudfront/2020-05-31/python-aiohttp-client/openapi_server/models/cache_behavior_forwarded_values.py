# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forwarded_values_cookies import ForwardedValuesCookies
from openapi_server.models.forwarded_values_headers import ForwardedValuesHeaders
from openapi_server.models.forwarded_values_query_string_cache_keys import ForwardedValuesQueryStringCacheKeys
from openapi_server import util


class CacheBehaviorForwardedValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_string: bool=None, cookies: ForwardedValuesCookies=None, headers: ForwardedValuesHeaders=None, query_string_cache_keys: ForwardedValuesQueryStringCacheKeys=None):
        """CacheBehaviorForwardedValues - a model defined in OpenAPI

        :param query_string: The query_string of this CacheBehaviorForwardedValues.
        :param cookies: The cookies of this CacheBehaviorForwardedValues.
        :param headers: The headers of this CacheBehaviorForwardedValues.
        :param query_string_cache_keys: The query_string_cache_keys of this CacheBehaviorForwardedValues.
        """
        self.openapi_types = {
            'query_string': bool,
            'cookies': ForwardedValuesCookies,
            'headers': ForwardedValuesHeaders,
            'query_string_cache_keys': ForwardedValuesQueryStringCacheKeys
        }

        self.attribute_map = {
            'query_string': 'QueryString',
            'cookies': 'Cookies',
            'headers': 'Headers',
            'query_string_cache_keys': 'QueryStringCacheKeys'
        }

        self._query_string = query_string
        self._cookies = cookies
        self._headers = headers
        self._query_string_cache_keys = query_string_cache_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CacheBehaviorForwardedValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CacheBehavior_ForwardedValues of this CacheBehaviorForwardedValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_string(self):
        """Gets the query_string of this CacheBehaviorForwardedValues.


        :return: The query_string of this CacheBehaviorForwardedValues.
        :rtype: bool
        """
        return self._query_string

    @query_string.setter
    def query_string(self, query_string):
        """Sets the query_string of this CacheBehaviorForwardedValues.


        :param query_string: The query_string of this CacheBehaviorForwardedValues.
        :type query_string: bool
        """
        if query_string is None:
            raise ValueError("Invalid value for `query_string`, must not be `None`")

        self._query_string = query_string

    @property
    def cookies(self):
        """Gets the cookies of this CacheBehaviorForwardedValues.


        :return: The cookies of this CacheBehaviorForwardedValues.
        :rtype: ForwardedValuesCookies
        """
        return self._cookies

    @cookies.setter
    def cookies(self, cookies):
        """Sets the cookies of this CacheBehaviorForwardedValues.


        :param cookies: The cookies of this CacheBehaviorForwardedValues.
        :type cookies: ForwardedValuesCookies
        """
        if cookies is None:
            raise ValueError("Invalid value for `cookies`, must not be `None`")

        self._cookies = cookies

    @property
    def headers(self):
        """Gets the headers of this CacheBehaviorForwardedValues.


        :return: The headers of this CacheBehaviorForwardedValues.
        :rtype: ForwardedValuesHeaders
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this CacheBehaviorForwardedValues.


        :param headers: The headers of this CacheBehaviorForwardedValues.
        :type headers: ForwardedValuesHeaders
        """

        self._headers = headers

    @property
    def query_string_cache_keys(self):
        """Gets the query_string_cache_keys of this CacheBehaviorForwardedValues.


        :return: The query_string_cache_keys of this CacheBehaviorForwardedValues.
        :rtype: ForwardedValuesQueryStringCacheKeys
        """
        return self._query_string_cache_keys

    @query_string_cache_keys.setter
    def query_string_cache_keys(self, query_string_cache_keys):
        """Sets the query_string_cache_keys of this CacheBehaviorForwardedValues.


        :param query_string_cache_keys: The query_string_cache_keys of this CacheBehaviorForwardedValues.
        :type query_string_cache_keys: ForwardedValuesQueryStringCacheKeys
        """

        self._query_string_cache_keys = query_string_cache_keys
