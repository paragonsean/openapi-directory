# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_origin_request_policy20200531_request_origin_request_policy_config_cookies_config import CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigCookiesConfig
from openapi_server.models.create_origin_request_policy20200531_request_origin_request_policy_config_headers_config import CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigHeadersConfig
from openapi_server.models.create_origin_request_policy20200531_request_origin_request_policy_config_query_strings_config import CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigQueryStringsConfig
from openapi_server import util


class GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, name: str=None, headers_config: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigHeadersConfig=None, cookies_config: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigCookiesConfig=None, query_strings_config: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigQueryStringsConfig=None):
        """GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig - a model defined in OpenAPI

        :param comment: The comment of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :param name: The name of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :param headers_config: The headers_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :param cookies_config: The cookies_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :param query_strings_config: The query_strings_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        """
        self.openapi_types = {
            'comment': str,
            'name': str,
            'headers_config': CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigHeadersConfig,
            'cookies_config': CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigCookiesConfig,
            'query_strings_config': CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigQueryStringsConfig
        }

        self.attribute_map = {
            'comment': 'Comment',
            'name': 'Name',
            'headers_config': 'HeadersConfig',
            'cookies_config': 'CookiesConfig',
            'query_strings_config': 'QueryStringsConfig'
        }

        self._comment = comment
        self._name = name
        self._headers_config = headers_config
        self._cookies_config = cookies_config
        self._query_strings_config = query_strings_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetOriginRequestPolicyConfigResult_OriginRequestPolicyConfig of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :return: The comment of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :param comment: The comment of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :type comment: str
        """

        self._comment = comment

    @property
    def name(self):
        """Gets the name of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :return: The name of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :param name: The name of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def headers_config(self):
        """Gets the headers_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :return: The headers_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :rtype: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigHeadersConfig
        """
        return self._headers_config

    @headers_config.setter
    def headers_config(self, headers_config):
        """Sets the headers_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :param headers_config: The headers_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :type headers_config: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigHeadersConfig
        """
        if headers_config is None:
            raise ValueError("Invalid value for `headers_config`, must not be `None`")

        self._headers_config = headers_config

    @property
    def cookies_config(self):
        """Gets the cookies_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :return: The cookies_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :rtype: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigCookiesConfig
        """
        return self._cookies_config

    @cookies_config.setter
    def cookies_config(self, cookies_config):
        """Sets the cookies_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :param cookies_config: The cookies_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :type cookies_config: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigCookiesConfig
        """
        if cookies_config is None:
            raise ValueError("Invalid value for `cookies_config`, must not be `None`")

        self._cookies_config = cookies_config

    @property
    def query_strings_config(self):
        """Gets the query_strings_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :return: The query_strings_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :rtype: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigQueryStringsConfig
        """
        return self._query_strings_config

    @query_strings_config.setter
    def query_strings_config(self, query_strings_config):
        """Sets the query_strings_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.


        :param query_strings_config: The query_strings_config of this GetOriginRequestPolicyConfigResultOriginRequestPolicyConfig.
        :type query_strings_config: CreateOriginRequestPolicy20200531RequestOriginRequestPolicyConfigQueryStringsConfig
        """
        if query_strings_config is None:
            raise ValueError("Invalid value for `query_strings_config`, must not be `None`")

        self._query_strings_config = query_strings_config
