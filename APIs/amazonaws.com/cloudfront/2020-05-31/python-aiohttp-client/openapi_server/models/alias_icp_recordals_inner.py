# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.icp_recordal_status import ICPRecordalStatus
from openapi_server import util


class AliasICPRecordalsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cname: str=None, icp_recordal_status: ICPRecordalStatus=None):
        """AliasICPRecordalsInner - a model defined in OpenAPI

        :param cname: The cname of this AliasICPRecordalsInner.
        :param icp_recordal_status: The icp_recordal_status of this AliasICPRecordalsInner.
        """
        self.openapi_types = {
            'cname': str,
            'icp_recordal_status': ICPRecordalStatus
        }

        self.attribute_map = {
            'cname': 'CNAME',
            'icp_recordal_status': 'ICPRecordalStatus'
        }

        self._cname = cname
        self._icp_recordal_status = icp_recordal_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AliasICPRecordalsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AliasICPRecordals_inner of this AliasICPRecordalsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cname(self):
        """Gets the cname of this AliasICPRecordalsInner.


        :return: The cname of this AliasICPRecordalsInner.
        :rtype: str
        """
        return self._cname

    @cname.setter
    def cname(self, cname):
        """Sets the cname of this AliasICPRecordalsInner.


        :param cname: The cname of this AliasICPRecordalsInner.
        :type cname: str
        """

        self._cname = cname

    @property
    def icp_recordal_status(self):
        """Gets the icp_recordal_status of this AliasICPRecordalsInner.


        :return: The icp_recordal_status of this AliasICPRecordalsInner.
        :rtype: ICPRecordalStatus
        """
        return self._icp_recordal_status

    @icp_recordal_status.setter
    def icp_recordal_status(self, icp_recordal_status):
        """Sets the icp_recordal_status of this AliasICPRecordalsInner.


        :param icp_recordal_status: The icp_recordal_status of this AliasICPRecordalsInner.
        :type icp_recordal_status: ICPRecordalStatus
        """

        self._icp_recordal_status = icp_recordal_status
