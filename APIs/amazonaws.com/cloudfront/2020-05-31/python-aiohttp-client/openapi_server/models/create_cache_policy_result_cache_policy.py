# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_cache_policy_config_result_cache_policy_config import GetCachePolicyConfigResultCachePolicyConfig
from openapi_server import util


class CreateCachePolicyResultCachePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, last_modified_time: datetime=None, cache_policy_config: GetCachePolicyConfigResultCachePolicyConfig=None):
        """CreateCachePolicyResultCachePolicy - a model defined in OpenAPI

        :param id: The id of this CreateCachePolicyResultCachePolicy.
        :param last_modified_time: The last_modified_time of this CreateCachePolicyResultCachePolicy.
        :param cache_policy_config: The cache_policy_config of this CreateCachePolicyResultCachePolicy.
        """
        self.openapi_types = {
            'id': str,
            'last_modified_time': datetime,
            'cache_policy_config': GetCachePolicyConfigResultCachePolicyConfig
        }

        self.attribute_map = {
            'id': 'Id',
            'last_modified_time': 'LastModifiedTime',
            'cache_policy_config': 'CachePolicyConfig'
        }

        self._id = id
        self._last_modified_time = last_modified_time
        self._cache_policy_config = cache_policy_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCachePolicyResultCachePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCachePolicyResult_CachePolicy of this CreateCachePolicyResultCachePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreateCachePolicyResultCachePolicy.


        :return: The id of this CreateCachePolicyResultCachePolicy.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateCachePolicyResultCachePolicy.


        :param id: The id of this CreateCachePolicyResultCachePolicy.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this CreateCachePolicyResultCachePolicy.


        :return: The last_modified_time of this CreateCachePolicyResultCachePolicy.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this CreateCachePolicyResultCachePolicy.


        :param last_modified_time: The last_modified_time of this CreateCachePolicyResultCachePolicy.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def cache_policy_config(self):
        """Gets the cache_policy_config of this CreateCachePolicyResultCachePolicy.


        :return: The cache_policy_config of this CreateCachePolicyResultCachePolicy.
        :rtype: GetCachePolicyConfigResultCachePolicyConfig
        """
        return self._cache_policy_config

    @cache_policy_config.setter
    def cache_policy_config(self, cache_policy_config):
        """Sets the cache_policy_config of this CreateCachePolicyResultCachePolicy.


        :param cache_policy_config: The cache_policy_config of this CreateCachePolicyResultCachePolicy.
        :type cache_policy_config: GetCachePolicyConfigResultCachePolicyConfig
        """
        if cache_policy_config is None:
            raise ValueError("Invalid value for `cache_policy_config`, must not be `None`")

        self._cache_policy_config = cache_policy_config
