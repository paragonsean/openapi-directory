# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_result_function_summary import TestResultFunctionSummary
from openapi_server import util


class TestResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, function_summary: TestResultFunctionSummary=None, compute_utilization: str=None, function_execution_logs: List=None, function_error_message: str=None, function_output: str=None):
        """TestResult - a model defined in OpenAPI

        :param function_summary: The function_summary of this TestResult.
        :param compute_utilization: The compute_utilization of this TestResult.
        :param function_execution_logs: The function_execution_logs of this TestResult.
        :param function_error_message: The function_error_message of this TestResult.
        :param function_output: The function_output of this TestResult.
        """
        self.openapi_types = {
            'function_summary': TestResultFunctionSummary,
            'compute_utilization': str,
            'function_execution_logs': List,
            'function_error_message': str,
            'function_output': str
        }

        self.attribute_map = {
            'function_summary': 'FunctionSummary',
            'compute_utilization': 'ComputeUtilization',
            'function_execution_logs': 'FunctionExecutionLogs',
            'function_error_message': 'FunctionErrorMessage',
            'function_output': 'FunctionOutput'
        }

        self._function_summary = function_summary
        self._compute_utilization = compute_utilization
        self._function_execution_logs = function_execution_logs
        self._function_error_message = function_error_message
        self._function_output = function_output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestResult of this TestResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def function_summary(self):
        """Gets the function_summary of this TestResult.


        :return: The function_summary of this TestResult.
        :rtype: TestResultFunctionSummary
        """
        return self._function_summary

    @function_summary.setter
    def function_summary(self, function_summary):
        """Sets the function_summary of this TestResult.


        :param function_summary: The function_summary of this TestResult.
        :type function_summary: TestResultFunctionSummary
        """

        self._function_summary = function_summary

    @property
    def compute_utilization(self):
        """Gets the compute_utilization of this TestResult.


        :return: The compute_utilization of this TestResult.
        :rtype: str
        """
        return self._compute_utilization

    @compute_utilization.setter
    def compute_utilization(self, compute_utilization):
        """Sets the compute_utilization of this TestResult.


        :param compute_utilization: The compute_utilization of this TestResult.
        :type compute_utilization: str
        """

        self._compute_utilization = compute_utilization

    @property
    def function_execution_logs(self):
        """Gets the function_execution_logs of this TestResult.


        :return: The function_execution_logs of this TestResult.
        :rtype: List
        """
        return self._function_execution_logs

    @function_execution_logs.setter
    def function_execution_logs(self, function_execution_logs):
        """Sets the function_execution_logs of this TestResult.


        :param function_execution_logs: The function_execution_logs of this TestResult.
        :type function_execution_logs: List
        """

        self._function_execution_logs = function_execution_logs

    @property
    def function_error_message(self):
        """Gets the function_error_message of this TestResult.


        :return: The function_error_message of this TestResult.
        :rtype: str
        """
        return self._function_error_message

    @function_error_message.setter
    def function_error_message(self, function_error_message):
        """Sets the function_error_message of this TestResult.


        :param function_error_message: The function_error_message of this TestResult.
        :type function_error_message: str
        """

        self._function_error_message = function_error_message

    @property
    def function_output(self):
        """Gets the function_output of this TestResult.


        :return: The function_output of this TestResult.
        :rtype: str
        """
        return self._function_output

    @function_output.setter
    def function_output(self, function_output):
        """Sets the function_output of this TestResult.


        :param function_output: The function_output of this TestResult.
        :type function_output: str
        """

        self._function_output = function_output
