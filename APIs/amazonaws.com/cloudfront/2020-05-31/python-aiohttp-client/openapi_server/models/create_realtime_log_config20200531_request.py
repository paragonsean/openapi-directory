# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.end_point import EndPoint
from openapi_server import util


class CreateRealtimeLogConfig20200531Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_points: List[EndPoint]=None, fields: List[str]=None, name: str=None, sampling_rate: int=None):
        """CreateRealtimeLogConfig20200531Request - a model defined in OpenAPI

        :param end_points: The end_points of this CreateRealtimeLogConfig20200531Request.
        :param fields: The fields of this CreateRealtimeLogConfig20200531Request.
        :param name: The name of this CreateRealtimeLogConfig20200531Request.
        :param sampling_rate: The sampling_rate of this CreateRealtimeLogConfig20200531Request.
        """
        self.openapi_types = {
            'end_points': List[EndPoint],
            'fields': List[str],
            'name': str,
            'sampling_rate': int
        }

        self.attribute_map = {
            'end_points': 'EndPoints',
            'fields': 'Fields',
            'name': 'Name',
            'sampling_rate': 'SamplingRate'
        }

        self._end_points = end_points
        self._fields = fields
        self._name = name
        self._sampling_rate = sampling_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRealtimeLogConfig20200531Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRealtimeLogConfig2020_05_31_request of this CreateRealtimeLogConfig20200531Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_points(self):
        """Gets the end_points of this CreateRealtimeLogConfig20200531Request.

        Contains information about the Amazon Kinesis data stream where you are sending real-time log data.

        :return: The end_points of this CreateRealtimeLogConfig20200531Request.
        :rtype: List[EndPoint]
        """
        return self._end_points

    @end_points.setter
    def end_points(self, end_points):
        """Sets the end_points of this CreateRealtimeLogConfig20200531Request.

        Contains information about the Amazon Kinesis data stream where you are sending real-time log data.

        :param end_points: The end_points of this CreateRealtimeLogConfig20200531Request.
        :type end_points: List[EndPoint]
        """
        if end_points is None:
            raise ValueError("Invalid value for `end_points`, must not be `None`")

        self._end_points = end_points

    @property
    def fields(self):
        """Gets the fields of this CreateRealtimeLogConfig20200531Request.

        <p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields\">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>

        :return: The fields of this CreateRealtimeLogConfig20200531Request.
        :rtype: List[str]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this CreateRealtimeLogConfig20200531Request.

        <p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields\">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>

        :param fields: The fields of this CreateRealtimeLogConfig20200531Request.
        :type fields: List[str]
        """
        if fields is None:
            raise ValueError("Invalid value for `fields`, must not be `None`")

        self._fields = fields

    @property
    def name(self):
        """Gets the name of this CreateRealtimeLogConfig20200531Request.

        A unique name to identify this real-time log configuration.

        :return: The name of this CreateRealtimeLogConfig20200531Request.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateRealtimeLogConfig20200531Request.

        A unique name to identify this real-time log configuration.

        :param name: The name of this CreateRealtimeLogConfig20200531Request.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def sampling_rate(self):
        """Gets the sampling_rate of this CreateRealtimeLogConfig20200531Request.

        The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.

        :return: The sampling_rate of this CreateRealtimeLogConfig20200531Request.
        :rtype: int
        """
        return self._sampling_rate

    @sampling_rate.setter
    def sampling_rate(self, sampling_rate):
        """Sets the sampling_rate of this CreateRealtimeLogConfig20200531Request.

        The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.

        :param sampling_rate: The sampling_rate of this CreateRealtimeLogConfig20200531Request.
        :type sampling_rate: int
        """
        if sampling_rate is None:
            raise ValueError("Invalid value for `sampling_rate`, must not be `None`")

        self._sampling_rate = sampling_rate
