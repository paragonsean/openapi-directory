# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cache_policy_result_cache_policy import CreateCachePolicyResultCachePolicy
from openapi_server import util


class UpdateCachePolicyResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_policy: CreateCachePolicyResultCachePolicy=None):
        """UpdateCachePolicyResult - a model defined in OpenAPI

        :param cache_policy: The cache_policy of this UpdateCachePolicyResult.
        """
        self.openapi_types = {
            'cache_policy': CreateCachePolicyResultCachePolicy
        }

        self.attribute_map = {
            'cache_policy': 'CachePolicy'
        }

        self._cache_policy = cache_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCachePolicyResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCachePolicyResult of this UpdateCachePolicyResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_policy(self):
        """Gets the cache_policy of this UpdateCachePolicyResult.


        :return: The cache_policy of this UpdateCachePolicyResult.
        :rtype: CreateCachePolicyResultCachePolicy
        """
        return self._cache_policy

    @cache_policy.setter
    def cache_policy(self, cache_policy):
        """Sets the cache_policy of this UpdateCachePolicyResult.


        :param cache_policy: The cache_policy of this UpdateCachePolicyResult.
        :type cache_policy: CreateCachePolicyResultCachePolicy
        """

        self._cache_policy = cache_policy
