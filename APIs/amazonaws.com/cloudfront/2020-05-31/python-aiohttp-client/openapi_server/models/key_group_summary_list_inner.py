# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.key_group_summary_key_group import KeyGroupSummaryKeyGroup
from openapi_server import util


class KeyGroupSummaryListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_group: KeyGroupSummaryKeyGroup=None):
        """KeyGroupSummaryListInner - a model defined in OpenAPI

        :param key_group: The key_group of this KeyGroupSummaryListInner.
        """
        self.openapi_types = {
            'key_group': KeyGroupSummaryKeyGroup
        }

        self.attribute_map = {
            'key_group': 'KeyGroup'
        }

        self._key_group = key_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyGroupSummaryListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyGroupSummaryList_inner of this KeyGroupSummaryListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_group(self):
        """Gets the key_group of this KeyGroupSummaryListInner.


        :return: The key_group of this KeyGroupSummaryListInner.
        :rtype: KeyGroupSummaryKeyGroup
        """
        return self._key_group

    @key_group.setter
    def key_group(self, key_group):
        """Sets the key_group of this KeyGroupSummaryListInner.


        :param key_group: The key_group of this KeyGroupSummaryListInner.
        :type key_group: KeyGroupSummaryKeyGroup
        """
        if key_group is None:
            raise ValueError("Invalid value for `key_group`, must not be `None`")

        self._key_group = key_group
