# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response_headers_policy_cors_config_access_control_allow_headers import ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders
from openapi_server.models.response_headers_policy_cors_config_access_control_allow_methods import ResponseHeadersPolicyCorsConfigAccessControlAllowMethods
from openapi_server.models.response_headers_policy_cors_config_access_control_allow_origins import ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins
from openapi_server.models.response_headers_policy_cors_config_access_control_expose_headers import ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders
from openapi_server import util


class CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_control_allow_origins: ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins=None, access_control_allow_headers: ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders=None, access_control_allow_methods: ResponseHeadersPolicyCorsConfigAccessControlAllowMethods=None, access_control_allow_credentials: bool=None, access_control_expose_headers: ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders=None, access_control_max_age_sec: int=None, origin_override: bool=None):
        """CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig - a model defined in OpenAPI

        :param access_control_allow_origins: The access_control_allow_origins of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :param access_control_allow_headers: The access_control_allow_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :param access_control_allow_methods: The access_control_allow_methods of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :param access_control_allow_credentials: The access_control_allow_credentials of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :param access_control_expose_headers: The access_control_expose_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :param access_control_max_age_sec: The access_control_max_age_sec of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :param origin_override: The origin_override of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        """
        self.openapi_types = {
            'access_control_allow_origins': ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins,
            'access_control_allow_headers': ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders,
            'access_control_allow_methods': ResponseHeadersPolicyCorsConfigAccessControlAllowMethods,
            'access_control_allow_credentials': bool,
            'access_control_expose_headers': ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders,
            'access_control_max_age_sec': int,
            'origin_override': bool
        }

        self.attribute_map = {
            'access_control_allow_origins': 'AccessControlAllowOrigins',
            'access_control_allow_headers': 'AccessControlAllowHeaders',
            'access_control_allow_methods': 'AccessControlAllowMethods',
            'access_control_allow_credentials': 'AccessControlAllowCredentials',
            'access_control_expose_headers': 'AccessControlExposeHeaders',
            'access_control_max_age_sec': 'AccessControlMaxAgeSec',
            'origin_override': 'OriginOverride'
        }

        self._access_control_allow_origins = access_control_allow_origins
        self._access_control_allow_headers = access_control_allow_headers
        self._access_control_allow_methods = access_control_allow_methods
        self._access_control_allow_credentials = access_control_allow_credentials
        self._access_control_expose_headers = access_control_expose_headers
        self._access_control_max_age_sec = access_control_max_age_sec
        self._origin_override = origin_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_CorsConfig of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_control_allow_origins(self):
        """Gets the access_control_allow_origins of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The access_control_allow_origins of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins
        """
        return self._access_control_allow_origins

    @access_control_allow_origins.setter
    def access_control_allow_origins(self, access_control_allow_origins):
        """Sets the access_control_allow_origins of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param access_control_allow_origins: The access_control_allow_origins of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type access_control_allow_origins: ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins
        """
        if access_control_allow_origins is None:
            raise ValueError("Invalid value for `access_control_allow_origins`, must not be `None`")

        self._access_control_allow_origins = access_control_allow_origins

    @property
    def access_control_allow_headers(self):
        """Gets the access_control_allow_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The access_control_allow_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders
        """
        return self._access_control_allow_headers

    @access_control_allow_headers.setter
    def access_control_allow_headers(self, access_control_allow_headers):
        """Sets the access_control_allow_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param access_control_allow_headers: The access_control_allow_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type access_control_allow_headers: ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders
        """
        if access_control_allow_headers is None:
            raise ValueError("Invalid value for `access_control_allow_headers`, must not be `None`")

        self._access_control_allow_headers = access_control_allow_headers

    @property
    def access_control_allow_methods(self):
        """Gets the access_control_allow_methods of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The access_control_allow_methods of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: ResponseHeadersPolicyCorsConfigAccessControlAllowMethods
        """
        return self._access_control_allow_methods

    @access_control_allow_methods.setter
    def access_control_allow_methods(self, access_control_allow_methods):
        """Sets the access_control_allow_methods of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param access_control_allow_methods: The access_control_allow_methods of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type access_control_allow_methods: ResponseHeadersPolicyCorsConfigAccessControlAllowMethods
        """
        if access_control_allow_methods is None:
            raise ValueError("Invalid value for `access_control_allow_methods`, must not be `None`")

        self._access_control_allow_methods = access_control_allow_methods

    @property
    def access_control_allow_credentials(self):
        """Gets the access_control_allow_credentials of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The access_control_allow_credentials of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: bool
        """
        return self._access_control_allow_credentials

    @access_control_allow_credentials.setter
    def access_control_allow_credentials(self, access_control_allow_credentials):
        """Sets the access_control_allow_credentials of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param access_control_allow_credentials: The access_control_allow_credentials of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type access_control_allow_credentials: bool
        """
        if access_control_allow_credentials is None:
            raise ValueError("Invalid value for `access_control_allow_credentials`, must not be `None`")

        self._access_control_allow_credentials = access_control_allow_credentials

    @property
    def access_control_expose_headers(self):
        """Gets the access_control_expose_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The access_control_expose_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders
        """
        return self._access_control_expose_headers

    @access_control_expose_headers.setter
    def access_control_expose_headers(self, access_control_expose_headers):
        """Sets the access_control_expose_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param access_control_expose_headers: The access_control_expose_headers of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type access_control_expose_headers: ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders
        """

        self._access_control_expose_headers = access_control_expose_headers

    @property
    def access_control_max_age_sec(self):
        """Gets the access_control_max_age_sec of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The access_control_max_age_sec of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: int
        """
        return self._access_control_max_age_sec

    @access_control_max_age_sec.setter
    def access_control_max_age_sec(self, access_control_max_age_sec):
        """Sets the access_control_max_age_sec of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param access_control_max_age_sec: The access_control_max_age_sec of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type access_control_max_age_sec: int
        """

        self._access_control_max_age_sec = access_control_max_age_sec

    @property
    def origin_override(self):
        """Gets the origin_override of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :return: The origin_override of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :rtype: bool
        """
        return self._origin_override

    @origin_override.setter
    def origin_override(self, origin_override):
        """Sets the origin_override of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.


        :param origin_override: The origin_override of this CreateResponseHeadersPolicy20200531RequestResponseHeadersPolicyConfigCorsConfig.
        :type origin_override: bool
        """
        if origin_override is None:
            raise ValueError("Invalid value for `origin_override`, must not be `None`")

        self._origin_override = origin_override
