/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListDistributionsByRealtimeLogConfig20200531Request model module.
 * @module model/ListDistributionsByRealtimeLogConfig20200531Request
 * @version 2020-05-31
 */
class ListDistributionsByRealtimeLogConfig20200531Request {
    /**
     * Constructs a new <code>ListDistributionsByRealtimeLogConfig20200531Request</code>.
     * @alias module:model/ListDistributionsByRealtimeLogConfig20200531Request
     */
    constructor() { 
        
        ListDistributionsByRealtimeLogConfig20200531Request.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListDistributionsByRealtimeLogConfig20200531Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListDistributionsByRealtimeLogConfig20200531Request} obj Optional instance to populate.
     * @return {module:model/ListDistributionsByRealtimeLogConfig20200531Request} The populated <code>ListDistributionsByRealtimeLogConfig20200531Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListDistributionsByRealtimeLogConfig20200531Request();

            if (data.hasOwnProperty('Marker')) {
                obj['Marker'] = ApiClient.convertToType(data['Marker'], 'String');
            }
            if (data.hasOwnProperty('MaxItems')) {
                obj['MaxItems'] = ApiClient.convertToType(data['MaxItems'], 'String');
            }
            if (data.hasOwnProperty('RealtimeLogConfigName')) {
                obj['RealtimeLogConfigName'] = ApiClient.convertToType(data['RealtimeLogConfigName'], 'String');
            }
            if (data.hasOwnProperty('RealtimeLogConfigArn')) {
                obj['RealtimeLogConfigArn'] = ApiClient.convertToType(data['RealtimeLogConfigArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListDistributionsByRealtimeLogConfig20200531Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListDistributionsByRealtimeLogConfig20200531Request</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Marker'] && !(typeof data['Marker'] === 'string' || data['Marker'] instanceof String)) {
            throw new Error("Expected the field `Marker` to be a primitive type in the JSON string but got " + data['Marker']);
        }
        // ensure the json data is a string
        if (data['MaxItems'] && !(typeof data['MaxItems'] === 'string' || data['MaxItems'] instanceof String)) {
            throw new Error("Expected the field `MaxItems` to be a primitive type in the JSON string but got " + data['MaxItems']);
        }
        // ensure the json data is a string
        if (data['RealtimeLogConfigName'] && !(typeof data['RealtimeLogConfigName'] === 'string' || data['RealtimeLogConfigName'] instanceof String)) {
            throw new Error("Expected the field `RealtimeLogConfigName` to be a primitive type in the JSON string but got " + data['RealtimeLogConfigName']);
        }
        // ensure the json data is a string
        if (data['RealtimeLogConfigArn'] && !(typeof data['RealtimeLogConfigArn'] === 'string' || data['RealtimeLogConfigArn'] instanceof String)) {
            throw new Error("Expected the field `RealtimeLogConfigArn` to be a primitive type in the JSON string but got " + data['RealtimeLogConfigArn']);
        }

        return true;
    }


}



/**
 * Use this field when paginating results to indicate where to begin in your list of distributions. The response includes distributions in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.
 * @member {String} Marker
 */
ListDistributionsByRealtimeLogConfig20200531Request.prototype['Marker'] = undefined;

/**
 * The maximum number of distributions that you want in the response.
 * @member {String} MaxItems
 */
ListDistributionsByRealtimeLogConfig20200531Request.prototype['MaxItems'] = undefined;

/**
 * The name of the real-time log configuration whose associated distributions you want to list.
 * @member {String} RealtimeLogConfigName
 */
ListDistributionsByRealtimeLogConfig20200531Request.prototype['RealtimeLogConfigName'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the real-time log configuration whose associated distributions you want to list.
 * @member {String} RealtimeLogConfigArn
 */
ListDistributionsByRealtimeLogConfig20200531Request.prototype['RealtimeLogConfigArn'] = undefined;






export default ListDistributionsByRealtimeLogConfig20200531Request;

