/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResponseHeadersPolicyResponseHeadersPolicyConfig from './ResponseHeadersPolicyResponseHeadersPolicyConfig';

/**
 * The ResponseHeadersPolicy model module.
 * @module model/ResponseHeadersPolicy
 * @version 2020-05-31
 */
class ResponseHeadersPolicy {
    /**
     * Constructs a new <code>ResponseHeadersPolicy</code>.
     * &lt;p&gt;A response headers policy.&lt;/p&gt; &lt;p&gt;A response headers policy contains information about a set of HTTP response headers.&lt;/p&gt; &lt;p&gt;After you create a response headers policy, you can use its ID to attach it to one or more cache behaviors in a CloudFront distribution. When it&#39;s attached to a cache behavior, the response headers policy affects the HTTP headers that CloudFront includes in HTTP responses to requests that match the cache behavior. CloudFront adds or removes response headers according to the configuration of the response headers policy.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html\&quot;&gt;Adding or removing HTTP headers in CloudFront responses&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
     * @alias module:model/ResponseHeadersPolicy
     * @param id {String} 
     * @param lastModifiedTime {Date} 
     * @param responseHeadersPolicyConfig {module:model/ResponseHeadersPolicyResponseHeadersPolicyConfig} 
     */
    constructor(id, lastModifiedTime, responseHeadersPolicyConfig) { 
        
        ResponseHeadersPolicy.initialize(this, id, lastModifiedTime, responseHeadersPolicyConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, lastModifiedTime, responseHeadersPolicyConfig) { 
        obj['Id'] = id;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['ResponseHeadersPolicyConfig'] = responseHeadersPolicyConfig;
    }

    /**
     * Constructs a <code>ResponseHeadersPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseHeadersPolicy} obj Optional instance to populate.
     * @return {module:model/ResponseHeadersPolicy} The populated <code>ResponseHeadersPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseHeadersPolicy();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('ResponseHeadersPolicyConfig')) {
                obj['ResponseHeadersPolicyConfig'] = ResponseHeadersPolicyResponseHeadersPolicyConfig.constructFromObject(data['ResponseHeadersPolicyConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseHeadersPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseHeadersPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResponseHeadersPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `ResponseHeadersPolicyConfig`
        if (data['ResponseHeadersPolicyConfig']) { // data not null
          ResponseHeadersPolicyResponseHeadersPolicyConfig.validateJSON(data['ResponseHeadersPolicyConfig']);
        }

        return true;
    }


}

ResponseHeadersPolicy.RequiredProperties = ["Id", "LastModifiedTime", "ResponseHeadersPolicyConfig"];

/**
 * @member {String} Id
 */
ResponseHeadersPolicy.prototype['Id'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
ResponseHeadersPolicy.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/ResponseHeadersPolicyResponseHeadersPolicyConfig} ResponseHeadersPolicyConfig
 */
ResponseHeadersPolicy.prototype['ResponseHeadersPolicyConfig'] = undefined;






export default ResponseHeadersPolicy;

