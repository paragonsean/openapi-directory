/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndPoint from './EndPoint';

/**
 * The UpdateRealtimeLogConfig20200531Request model module.
 * @module model/UpdateRealtimeLogConfig20200531Request
 * @version 2020-05-31
 */
class UpdateRealtimeLogConfig20200531Request {
    /**
     * Constructs a new <code>UpdateRealtimeLogConfig20200531Request</code>.
     * @alias module:model/UpdateRealtimeLogConfig20200531Request
     */
    constructor() { 
        
        UpdateRealtimeLogConfig20200531Request.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateRealtimeLogConfig20200531Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateRealtimeLogConfig20200531Request} obj Optional instance to populate.
     * @return {module:model/UpdateRealtimeLogConfig20200531Request} The populated <code>UpdateRealtimeLogConfig20200531Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateRealtimeLogConfig20200531Request();

            if (data.hasOwnProperty('EndPoints')) {
                obj['EndPoints'] = ApiClient.convertToType(data['EndPoints'], [EndPoint]);
            }
            if (data.hasOwnProperty('Fields')) {
                obj['Fields'] = ApiClient.convertToType(data['Fields'], ['String']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ARN')) {
                obj['ARN'] = ApiClient.convertToType(data['ARN'], 'String');
            }
            if (data.hasOwnProperty('SamplingRate')) {
                obj['SamplingRate'] = ApiClient.convertToType(data['SamplingRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateRealtimeLogConfig20200531Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateRealtimeLogConfig20200531Request</code>.
     */
    static validateJSON(data) {
        if (data['EndPoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['EndPoints'])) {
                throw new Error("Expected the field `EndPoints` to be an array in the JSON data but got " + data['EndPoints']);
            }
            // validate the optional field `EndPoints` (array)
            for (const item of data['EndPoints']) {
                EndPoint.validateJSON(item);
            };
        }
        if (data['Fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Fields'])) {
                throw new Error("Expected the field `Fields` to be an array in the JSON data but got " + data['Fields']);
            }
            // validate the optional field `Fields` (array)
            for (const item of data['Fields']) {
                String.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['ARN'] && !(typeof data['ARN'] === 'string' || data['ARN'] instanceof String)) {
            throw new Error("Expected the field `ARN` to be a primitive type in the JSON string but got " + data['ARN']);
        }

        return true;
    }


}



/**
 * Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
 * @member {Array.<module:model/EndPoint>} EndPoints
 */
UpdateRealtimeLogConfig20200531Request.prototype['EndPoints'] = undefined;

/**
 * <p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields\">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
 * @member {Array.<String>} Fields
 */
UpdateRealtimeLogConfig20200531Request.prototype['Fields'] = undefined;

/**
 * The name for this real-time log configuration.
 * @member {String} Name
 */
UpdateRealtimeLogConfig20200531Request.prototype['Name'] = undefined;

/**
 * The Amazon Resource Name (ARN) for this real-time log configuration.
 * @member {String} ARN
 */
UpdateRealtimeLogConfig20200531Request.prototype['ARN'] = undefined;

/**
 * The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.
 * @member {Number} SamplingRate
 */
UpdateRealtimeLogConfig20200531Request.prototype['SamplingRate'] = undefined;






export default UpdateRealtimeLogConfig20200531Request;

