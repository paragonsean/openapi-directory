/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvalidationList from './InvalidationList';

/**
 * The ListInvalidationsResultInvalidationList model module.
 * @module model/ListInvalidationsResultInvalidationList
 * @version 2020-05-31
 */
class ListInvalidationsResultInvalidationList {
    /**
     * Constructs a new <code>ListInvalidationsResultInvalidationList</code>.
     * @alias module:model/ListInvalidationsResultInvalidationList
     * @implements module:model/InvalidationList
     * @param marker {String} 
     * @param maxItems {Number} 
     * @param isTruncated {Boolean} 
     * @param quantity {Number} 
     */
    constructor(marker, maxItems, isTruncated, quantity) { 
        InvalidationList.initialize(this, marker, maxItems, isTruncated, quantity);
        ListInvalidationsResultInvalidationList.initialize(this, marker, maxItems, isTruncated, quantity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, marker, maxItems, isTruncated, quantity) { 
        obj['Marker'] = marker;
        obj['MaxItems'] = maxItems;
        obj['IsTruncated'] = isTruncated;
        obj['Quantity'] = quantity;
    }

    /**
     * Constructs a <code>ListInvalidationsResultInvalidationList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListInvalidationsResultInvalidationList} obj Optional instance to populate.
     * @return {module:model/ListInvalidationsResultInvalidationList} The populated <code>ListInvalidationsResultInvalidationList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListInvalidationsResultInvalidationList();
            InvalidationList.constructFromObject(data, obj);

            if (data.hasOwnProperty('Marker')) {
                obj['Marker'] = ApiClient.convertToType(data['Marker'], 'String');
            }
            if (data.hasOwnProperty('NextMarker')) {
                obj['NextMarker'] = ApiClient.convertToType(data['NextMarker'], 'String');
            }
            if (data.hasOwnProperty('MaxItems')) {
                obj['MaxItems'] = ApiClient.convertToType(data['MaxItems'], 'Number');
            }
            if (data.hasOwnProperty('IsTruncated')) {
                obj['IsTruncated'] = ApiClient.convertToType(data['IsTruncated'], 'Boolean');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListInvalidationsResultInvalidationList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListInvalidationsResultInvalidationList</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListInvalidationsResultInvalidationList.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Marker`
        if (data['Marker']) { // data not null
          String.validateJSON(data['Marker']);
        }
        // validate the optional field `NextMarker`
        if (data['NextMarker']) { // data not null
          String.validateJSON(data['NextMarker']);
        }
        // validate the optional field `MaxItems`
        if (data['MaxItems']) { // data not null
          Number.validateJSON(data['MaxItems']);
        }
        // validate the optional field `IsTruncated`
        if (data['IsTruncated']) { // data not null
          Boolean.validateJSON(data['IsTruncated']);
        }
        // validate the optional field `Quantity`
        if (data['Quantity']) { // data not null
          Number.validateJSON(data['Quantity']);
        }
        // validate the optional field `Items`
        if (data['Items']) { // data not null
          Array.validateJSON(data['Items']);
        }

        return true;
    }


}

ListInvalidationsResultInvalidationList.RequiredProperties = ["Marker", "MaxItems", "IsTruncated", "Quantity"];

/**
 * @member {String} Marker
 */
ListInvalidationsResultInvalidationList.prototype['Marker'] = undefined;

/**
 * @member {String} NextMarker
 */
ListInvalidationsResultInvalidationList.prototype['NextMarker'] = undefined;

/**
 * @member {Number} MaxItems
 */
ListInvalidationsResultInvalidationList.prototype['MaxItems'] = undefined;

/**
 * @member {Boolean} IsTruncated
 */
ListInvalidationsResultInvalidationList.prototype['IsTruncated'] = undefined;

/**
 * @member {Number} Quantity
 */
ListInvalidationsResultInvalidationList.prototype['Quantity'] = undefined;

/**
 * @member {Array} Items
 */
ListInvalidationsResultInvalidationList.prototype['Items'] = undefined;


// Implement InvalidationList interface:
/**
 * @member {String} Marker
 */
InvalidationList.prototype['Marker'] = undefined;
/**
 * @member {String} NextMarker
 */
InvalidationList.prototype['NextMarker'] = undefined;
/**
 * @member {Number} MaxItems
 */
InvalidationList.prototype['MaxItems'] = undefined;
/**
 * @member {Boolean} IsTruncated
 */
InvalidationList.prototype['IsTruncated'] = undefined;
/**
 * @member {Number} Quantity
 */
InvalidationList.prototype['Quantity'] = undefined;
/**
 * @member {Array} Items
 */
InvalidationList.prototype['Items'] = undefined;




export default ListInvalidationsResultInvalidationList;

