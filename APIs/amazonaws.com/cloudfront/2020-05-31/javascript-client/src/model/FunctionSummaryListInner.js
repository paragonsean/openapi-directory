/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FunctionSummary from './FunctionSummary';
import FunctionSummaryFunctionConfig from './FunctionSummaryFunctionConfig';
import FunctionSummaryFunctionMetadata from './FunctionSummaryFunctionMetadata';

/**
 * The FunctionSummaryListInner model module.
 * @module model/FunctionSummaryListInner
 * @version 2020-05-31
 */
class FunctionSummaryListInner {
    /**
     * Constructs a new <code>FunctionSummaryListInner</code>.
     * @alias module:model/FunctionSummaryListInner
     * @implements module:model/FunctionSummary
     * @param name {String} 
     * @param functionConfig {module:model/FunctionSummaryFunctionConfig} 
     * @param functionMetadata {module:model/FunctionSummaryFunctionMetadata} 
     */
    constructor(name, functionConfig, functionMetadata) { 
        FunctionSummary.initialize(this, name, functionConfig, functionMetadata);
        FunctionSummaryListInner.initialize(this, name, functionConfig, functionMetadata);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, functionConfig, functionMetadata) { 
        obj['Name'] = name;
        obj['FunctionConfig'] = functionConfig;
        obj['FunctionMetadata'] = functionMetadata;
    }

    /**
     * Constructs a <code>FunctionSummaryListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FunctionSummaryListInner} obj Optional instance to populate.
     * @return {module:model/FunctionSummaryListInner} The populated <code>FunctionSummaryListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FunctionSummaryListInner();
            FunctionSummary.constructFromObject(data, obj);

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('FunctionConfig')) {
                obj['FunctionConfig'] = FunctionSummaryFunctionConfig.constructFromObject(data['FunctionConfig']);
            }
            if (data.hasOwnProperty('FunctionMetadata')) {
                obj['FunctionMetadata'] = FunctionSummaryFunctionMetadata.constructFromObject(data['FunctionMetadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FunctionSummaryListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FunctionSummaryListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FunctionSummaryListInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `FunctionConfig`
        if (data['FunctionConfig']) { // data not null
          FunctionSummaryFunctionConfig.validateJSON(data['FunctionConfig']);
        }
        // validate the optional field `FunctionMetadata`
        if (data['FunctionMetadata']) { // data not null
          FunctionSummaryFunctionMetadata.validateJSON(data['FunctionMetadata']);
        }

        return true;
    }


}

FunctionSummaryListInner.RequiredProperties = ["Name", "FunctionConfig", "FunctionMetadata"];

/**
 * @member {String} Name
 */
FunctionSummaryListInner.prototype['Name'] = undefined;

/**
 * @member {String} Status
 */
FunctionSummaryListInner.prototype['Status'] = undefined;

/**
 * @member {module:model/FunctionSummaryFunctionConfig} FunctionConfig
 */
FunctionSummaryListInner.prototype['FunctionConfig'] = undefined;

/**
 * @member {module:model/FunctionSummaryFunctionMetadata} FunctionMetadata
 */
FunctionSummaryListInner.prototype['FunctionMetadata'] = undefined;


// Implement FunctionSummary interface:
/**
 * @member {String} Name
 */
FunctionSummary.prototype['Name'] = undefined;
/**
 * @member {String} Status
 */
FunctionSummary.prototype['Status'] = undefined;
/**
 * @member {module:model/FunctionSummaryFunctionConfig} FunctionConfig
 */
FunctionSummary.prototype['FunctionConfig'] = undefined;
/**
 * @member {module:model/FunctionSummaryFunctionMetadata} FunctionMetadata
 */
FunctionSummary.prototype['FunctionMetadata'] = undefined;




export default FunctionSummaryListInner;

