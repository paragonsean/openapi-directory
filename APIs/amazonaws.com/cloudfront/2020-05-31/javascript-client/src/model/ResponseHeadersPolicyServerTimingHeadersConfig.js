/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResponseHeadersPolicyServerTimingHeadersConfig model module.
 * @module model/ResponseHeadersPolicyServerTimingHeadersConfig
 * @version 2020-05-31
 */
class ResponseHeadersPolicyServerTimingHeadersConfig {
    /**
     * Constructs a new <code>ResponseHeadersPolicyServerTimingHeadersConfig</code>.
     * &lt;p&gt;A configuration for enabling the &lt;code&gt;Server-Timing&lt;/code&gt; header in HTTP responses sent from CloudFront. CloudFront adds this header to HTTP responses that it sends in response to requests that match a cache behavior that&#39;s associated with this response headers policy.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;Server-Timing&lt;/code&gt; header to view metrics that can help you gain insights about the behavior and performance of CloudFront. For example, you can see which cache layer served a cache hit, or the first byte latency from the origin when there was a cache miss. You can use the metrics in the &lt;code&gt;Server-Timing&lt;/code&gt; header to troubleshoot issues or test the efficiency of your CloudFront configuration. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/understanding-response-headers-policies.html#server-timing-header\&quot;&gt;Server-Timing header&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
     * @alias module:model/ResponseHeadersPolicyServerTimingHeadersConfig
     * @param enabled {Boolean} 
     */
    constructor(enabled) { 
        
        ResponseHeadersPolicyServerTimingHeadersConfig.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['Enabled'] = enabled;
    }

    /**
     * Constructs a <code>ResponseHeadersPolicyServerTimingHeadersConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseHeadersPolicyServerTimingHeadersConfig} obj Optional instance to populate.
     * @return {module:model/ResponseHeadersPolicyServerTimingHeadersConfig} The populated <code>ResponseHeadersPolicyServerTimingHeadersConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseHeadersPolicyServerTimingHeadersConfig();

            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('SamplingRate')) {
                obj['SamplingRate'] = ApiClient.convertToType(data['SamplingRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResponseHeadersPolicyServerTimingHeadersConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResponseHeadersPolicyServerTimingHeadersConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResponseHeadersPolicyServerTimingHeadersConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }
        // validate the optional field `SamplingRate`
        if (data['SamplingRate']) { // data not null
          Number.validateJSON(data['SamplingRate']);
        }

        return true;
    }


}

ResponseHeadersPolicyServerTimingHeadersConfig.RequiredProperties = ["Enabled"];

/**
 * @member {Boolean} Enabled
 */
ResponseHeadersPolicyServerTimingHeadersConfig.prototype['Enabled'] = undefined;

/**
 * @member {Number} SamplingRate
 */
ResponseHeadersPolicyServerTimingHeadersConfig.prototype['SamplingRate'] = undefined;






export default ResponseHeadersPolicyServerTimingHeadersConfig;

