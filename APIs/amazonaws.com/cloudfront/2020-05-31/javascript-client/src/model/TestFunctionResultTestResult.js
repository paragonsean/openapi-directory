/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TestResult from './TestResult';
import TestResultFunctionSummary from './TestResultFunctionSummary';

/**
 * The TestFunctionResultTestResult model module.
 * @module model/TestFunctionResultTestResult
 * @version 2020-05-31
 */
class TestFunctionResultTestResult {
    /**
     * Constructs a new <code>TestFunctionResultTestResult</code>.
     * @alias module:model/TestFunctionResultTestResult
     * @implements module:model/TestResult
     */
    constructor() { 
        TestResult.initialize(this);
        TestFunctionResultTestResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestFunctionResultTestResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestFunctionResultTestResult} obj Optional instance to populate.
     * @return {module:model/TestFunctionResultTestResult} The populated <code>TestFunctionResultTestResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestFunctionResultTestResult();
            TestResult.constructFromObject(data, obj);

            if (data.hasOwnProperty('FunctionSummary')) {
                obj['FunctionSummary'] = TestResultFunctionSummary.constructFromObject(data['FunctionSummary']);
            }
            if (data.hasOwnProperty('ComputeUtilization')) {
                obj['ComputeUtilization'] = ApiClient.convertToType(data['ComputeUtilization'], 'String');
            }
            if (data.hasOwnProperty('FunctionExecutionLogs')) {
                obj['FunctionExecutionLogs'] = ApiClient.convertToType(data['FunctionExecutionLogs'], Array);
            }
            if (data.hasOwnProperty('FunctionErrorMessage')) {
                obj['FunctionErrorMessage'] = ApiClient.convertToType(data['FunctionErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('FunctionOutput')) {
                obj['FunctionOutput'] = ApiClient.convertToType(data['FunctionOutput'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestFunctionResultTestResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestFunctionResultTestResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FunctionSummary`
        if (data['FunctionSummary']) { // data not null
          TestResultFunctionSummary.validateJSON(data['FunctionSummary']);
        }
        // validate the optional field `ComputeUtilization`
        if (data['ComputeUtilization']) { // data not null
          String.validateJSON(data['ComputeUtilization']);
        }
        // validate the optional field `FunctionExecutionLogs`
        if (data['FunctionExecutionLogs']) { // data not null
          Array.validateJSON(data['FunctionExecutionLogs']);
        }
        // validate the optional field `FunctionErrorMessage`
        if (data['FunctionErrorMessage']) { // data not null
          String.validateJSON(data['FunctionErrorMessage']);
        }
        // validate the optional field `FunctionOutput`
        if (data['FunctionOutput']) { // data not null
          String.validateJSON(data['FunctionOutput']);
        }

        return true;
    }


}



/**
 * @member {module:model/TestResultFunctionSummary} FunctionSummary
 */
TestFunctionResultTestResult.prototype['FunctionSummary'] = undefined;

/**
 * @member {String} ComputeUtilization
 */
TestFunctionResultTestResult.prototype['ComputeUtilization'] = undefined;

/**
 * @member {Array} FunctionExecutionLogs
 */
TestFunctionResultTestResult.prototype['FunctionExecutionLogs'] = undefined;

/**
 * @member {String} FunctionErrorMessage
 */
TestFunctionResultTestResult.prototype['FunctionErrorMessage'] = undefined;

/**
 * @member {String} FunctionOutput
 */
TestFunctionResultTestResult.prototype['FunctionOutput'] = undefined;


// Implement TestResult interface:
/**
 * @member {module:model/TestResultFunctionSummary} FunctionSummary
 */
TestResult.prototype['FunctionSummary'] = undefined;
/**
 * @member {String} ComputeUtilization
 */
TestResult.prototype['ComputeUtilization'] = undefined;
/**
 * @member {Array} FunctionExecutionLogs
 */
TestResult.prototype['FunctionExecutionLogs'] = undefined;
/**
 * @member {String} FunctionErrorMessage
 */
TestResult.prototype['FunctionErrorMessage'] = undefined;
/**
 * @member {String} FunctionOutput
 */
TestResult.prototype['FunctionOutput'] = undefined;




export default TestFunctionResultTestResult;

