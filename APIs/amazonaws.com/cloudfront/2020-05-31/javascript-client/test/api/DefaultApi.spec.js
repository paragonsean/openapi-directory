/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudFront);
  }
}(this, function(expect, AmazonCloudFront) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudFront.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateAlias20200531', function() {
      it('should call associateAlias20200531 successfully', function(done) {
        //uncomment below and update the code to test associateAlias20200531
        //instance.associateAlias20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyDistribution20200531', function() {
      it('should call copyDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test copyDistribution20200531
        //instance.copyDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCachePolicy20200531', function() {
      it('should call createCachePolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test createCachePolicy20200531
        //instance.createCachePolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCloudFrontOriginAccessIdentity20200531', function() {
      it('should call createCloudFrontOriginAccessIdentity20200531 successfully', function(done) {
        //uncomment below and update the code to test createCloudFrontOriginAccessIdentity20200531
        //instance.createCloudFrontOriginAccessIdentity20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContinuousDeploymentPolicy20200531', function() {
      it('should call createContinuousDeploymentPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test createContinuousDeploymentPolicy20200531
        //instance.createContinuousDeploymentPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDistribution20200531', function() {
      it('should call createDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test createDistribution20200531
        //instance.createDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDistributionWithTags20200531', function() {
      it('should call createDistributionWithTags20200531 successfully', function(done) {
        //uncomment below and update the code to test createDistributionWithTags20200531
        //instance.createDistributionWithTags20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFieldLevelEncryptionConfig20200531', function() {
      it('should call createFieldLevelEncryptionConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test createFieldLevelEncryptionConfig20200531
        //instance.createFieldLevelEncryptionConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFieldLevelEncryptionProfile20200531', function() {
      it('should call createFieldLevelEncryptionProfile20200531 successfully', function(done) {
        //uncomment below and update the code to test createFieldLevelEncryptionProfile20200531
        //instance.createFieldLevelEncryptionProfile20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFunction20200531', function() {
      it('should call createFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test createFunction20200531
        //instance.createFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInvalidation20200531', function() {
      it('should call createInvalidation20200531 successfully', function(done) {
        //uncomment below and update the code to test createInvalidation20200531
        //instance.createInvalidation20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createKeyGroup20200531', function() {
      it('should call createKeyGroup20200531 successfully', function(done) {
        //uncomment below and update the code to test createKeyGroup20200531
        //instance.createKeyGroup20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMonitoringSubscription20200531', function() {
      it('should call createMonitoringSubscription20200531 successfully', function(done) {
        //uncomment below and update the code to test createMonitoringSubscription20200531
        //instance.createMonitoringSubscription20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOriginAccessControl20200531', function() {
      it('should call createOriginAccessControl20200531 successfully', function(done) {
        //uncomment below and update the code to test createOriginAccessControl20200531
        //instance.createOriginAccessControl20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOriginRequestPolicy20200531', function() {
      it('should call createOriginRequestPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test createOriginRequestPolicy20200531
        //instance.createOriginRequestPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPublicKey20200531', function() {
      it('should call createPublicKey20200531 successfully', function(done) {
        //uncomment below and update the code to test createPublicKey20200531
        //instance.createPublicKey20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRealtimeLogConfig20200531', function() {
      it('should call createRealtimeLogConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test createRealtimeLogConfig20200531
        //instance.createRealtimeLogConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createResponseHeadersPolicy20200531', function() {
      it('should call createResponseHeadersPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test createResponseHeadersPolicy20200531
        //instance.createResponseHeadersPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStreamingDistribution20200531', function() {
      it('should call createStreamingDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test createStreamingDistribution20200531
        //instance.createStreamingDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStreamingDistributionWithTags20200531', function() {
      it('should call createStreamingDistributionWithTags20200531 successfully', function(done) {
        //uncomment below and update the code to test createStreamingDistributionWithTags20200531
        //instance.createStreamingDistributionWithTags20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCachePolicy20200531', function() {
      it('should call deleteCachePolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteCachePolicy20200531
        //instance.deleteCachePolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCloudFrontOriginAccessIdentity20200531', function() {
      it('should call deleteCloudFrontOriginAccessIdentity20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteCloudFrontOriginAccessIdentity20200531
        //instance.deleteCloudFrontOriginAccessIdentity20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContinuousDeploymentPolicy20200531', function() {
      it('should call deleteContinuousDeploymentPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteContinuousDeploymentPolicy20200531
        //instance.deleteContinuousDeploymentPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDistribution20200531', function() {
      it('should call deleteDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteDistribution20200531
        //instance.deleteDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldLevelEncryptionConfig20200531', function() {
      it('should call deleteFieldLevelEncryptionConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteFieldLevelEncryptionConfig20200531
        //instance.deleteFieldLevelEncryptionConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldLevelEncryptionProfile20200531', function() {
      it('should call deleteFieldLevelEncryptionProfile20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteFieldLevelEncryptionProfile20200531
        //instance.deleteFieldLevelEncryptionProfile20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFunction20200531', function() {
      it('should call deleteFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteFunction20200531
        //instance.deleteFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteKeyGroup20200531', function() {
      it('should call deleteKeyGroup20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteKeyGroup20200531
        //instance.deleteKeyGroup20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMonitoringSubscription20200531', function() {
      it('should call deleteMonitoringSubscription20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteMonitoringSubscription20200531
        //instance.deleteMonitoringSubscription20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOriginAccessControl20200531', function() {
      it('should call deleteOriginAccessControl20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteOriginAccessControl20200531
        //instance.deleteOriginAccessControl20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOriginRequestPolicy20200531', function() {
      it('should call deleteOriginRequestPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteOriginRequestPolicy20200531
        //instance.deleteOriginRequestPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePublicKey20200531', function() {
      it('should call deletePublicKey20200531 successfully', function(done) {
        //uncomment below and update the code to test deletePublicKey20200531
        //instance.deletePublicKey20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRealtimeLogConfig20200531', function() {
      it('should call deleteRealtimeLogConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteRealtimeLogConfig20200531
        //instance.deleteRealtimeLogConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResponseHeadersPolicy20200531', function() {
      it('should call deleteResponseHeadersPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteResponseHeadersPolicy20200531
        //instance.deleteResponseHeadersPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStreamingDistribution20200531', function() {
      it('should call deleteStreamingDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test deleteStreamingDistribution20200531
        //instance.deleteStreamingDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFunction20200531', function() {
      it('should call describeFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test describeFunction20200531
        //instance.describeFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCachePolicy20200531', function() {
      it('should call getCachePolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test getCachePolicy20200531
        //instance.getCachePolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCachePolicyConfig20200531', function() {
      it('should call getCachePolicyConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getCachePolicyConfig20200531
        //instance.getCachePolicyConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCloudFrontOriginAccessIdentity20200531', function() {
      it('should call getCloudFrontOriginAccessIdentity20200531 successfully', function(done) {
        //uncomment below and update the code to test getCloudFrontOriginAccessIdentity20200531
        //instance.getCloudFrontOriginAccessIdentity20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCloudFrontOriginAccessIdentityConfig20200531', function() {
      it('should call getCloudFrontOriginAccessIdentityConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getCloudFrontOriginAccessIdentityConfig20200531
        //instance.getCloudFrontOriginAccessIdentityConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContinuousDeploymentPolicy20200531', function() {
      it('should call getContinuousDeploymentPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test getContinuousDeploymentPolicy20200531
        //instance.getContinuousDeploymentPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContinuousDeploymentPolicyConfig20200531', function() {
      it('should call getContinuousDeploymentPolicyConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getContinuousDeploymentPolicyConfig20200531
        //instance.getContinuousDeploymentPolicyConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistribution20200531', function() {
      it('should call getDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test getDistribution20200531
        //instance.getDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistributionConfig20200531', function() {
      it('should call getDistributionConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getDistributionConfig20200531
        //instance.getDistributionConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryption20200531', function() {
      it('should call getFieldLevelEncryption20200531 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryption20200531
        //instance.getFieldLevelEncryption20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryptionConfig20200531', function() {
      it('should call getFieldLevelEncryptionConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryptionConfig20200531
        //instance.getFieldLevelEncryptionConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryptionProfile20200531', function() {
      it('should call getFieldLevelEncryptionProfile20200531 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryptionProfile20200531
        //instance.getFieldLevelEncryptionProfile20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldLevelEncryptionProfileConfig20200531', function() {
      it('should call getFieldLevelEncryptionProfileConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getFieldLevelEncryptionProfileConfig20200531
        //instance.getFieldLevelEncryptionProfileConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFunction20200531', function() {
      it('should call getFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test getFunction20200531
        //instance.getFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvalidation20200531', function() {
      it('should call getInvalidation20200531 successfully', function(done) {
        //uncomment below and update the code to test getInvalidation20200531
        //instance.getInvalidation20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getKeyGroup20200531', function() {
      it('should call getKeyGroup20200531 successfully', function(done) {
        //uncomment below and update the code to test getKeyGroup20200531
        //instance.getKeyGroup20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getKeyGroupConfig20200531', function() {
      it('should call getKeyGroupConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getKeyGroupConfig20200531
        //instance.getKeyGroupConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMonitoringSubscription20200531', function() {
      it('should call getMonitoringSubscription20200531 successfully', function(done) {
        //uncomment below and update the code to test getMonitoringSubscription20200531
        //instance.getMonitoringSubscription20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOriginAccessControl20200531', function() {
      it('should call getOriginAccessControl20200531 successfully', function(done) {
        //uncomment below and update the code to test getOriginAccessControl20200531
        //instance.getOriginAccessControl20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOriginAccessControlConfig20200531', function() {
      it('should call getOriginAccessControlConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getOriginAccessControlConfig20200531
        //instance.getOriginAccessControlConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOriginRequestPolicy20200531', function() {
      it('should call getOriginRequestPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test getOriginRequestPolicy20200531
        //instance.getOriginRequestPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOriginRequestPolicyConfig20200531', function() {
      it('should call getOriginRequestPolicyConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getOriginRequestPolicyConfig20200531
        //instance.getOriginRequestPolicyConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicKey20200531', function() {
      it('should call getPublicKey20200531 successfully', function(done) {
        //uncomment below and update the code to test getPublicKey20200531
        //instance.getPublicKey20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPublicKeyConfig20200531', function() {
      it('should call getPublicKeyConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getPublicKeyConfig20200531
        //instance.getPublicKeyConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRealtimeLogConfig20200531', function() {
      it('should call getRealtimeLogConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getRealtimeLogConfig20200531
        //instance.getRealtimeLogConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResponseHeadersPolicy20200531', function() {
      it('should call getResponseHeadersPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test getResponseHeadersPolicy20200531
        //instance.getResponseHeadersPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResponseHeadersPolicyConfig20200531', function() {
      it('should call getResponseHeadersPolicyConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getResponseHeadersPolicyConfig20200531
        //instance.getResponseHeadersPolicyConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStreamingDistribution20200531', function() {
      it('should call getStreamingDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test getStreamingDistribution20200531
        //instance.getStreamingDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStreamingDistributionConfig20200531', function() {
      it('should call getStreamingDistributionConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test getStreamingDistributionConfig20200531
        //instance.getStreamingDistributionConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCachePolicies20200531', function() {
      it('should call listCachePolicies20200531 successfully', function(done) {
        //uncomment below and update the code to test listCachePolicies20200531
        //instance.listCachePolicies20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCloudFrontOriginAccessIdentities20200531', function() {
      it('should call listCloudFrontOriginAccessIdentities20200531 successfully', function(done) {
        //uncomment below and update the code to test listCloudFrontOriginAccessIdentities20200531
        //instance.listCloudFrontOriginAccessIdentities20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConflictingAliases20200531', function() {
      it('should call listConflictingAliases20200531 successfully', function(done) {
        //uncomment below and update the code to test listConflictingAliases20200531
        //instance.listConflictingAliases20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listContinuousDeploymentPolicies20200531', function() {
      it('should call listContinuousDeploymentPolicies20200531 successfully', function(done) {
        //uncomment below and update the code to test listContinuousDeploymentPolicies20200531
        //instance.listContinuousDeploymentPolicies20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributions20200531', function() {
      it('should call listDistributions20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributions20200531
        //instance.listDistributions20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByCachePolicyId20200531', function() {
      it('should call listDistributionsByCachePolicyId20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByCachePolicyId20200531
        //instance.listDistributionsByCachePolicyId20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByKeyGroup20200531', function() {
      it('should call listDistributionsByKeyGroup20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByKeyGroup20200531
        //instance.listDistributionsByKeyGroup20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByOriginRequestPolicyId20200531', function() {
      it('should call listDistributionsByOriginRequestPolicyId20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByOriginRequestPolicyId20200531
        //instance.listDistributionsByOriginRequestPolicyId20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByRealtimeLogConfig20200531', function() {
      it('should call listDistributionsByRealtimeLogConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByRealtimeLogConfig20200531
        //instance.listDistributionsByRealtimeLogConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByResponseHeadersPolicyId20200531', function() {
      it('should call listDistributionsByResponseHeadersPolicyId20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByResponseHeadersPolicyId20200531
        //instance.listDistributionsByResponseHeadersPolicyId20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDistributionsByWebACLId20200531', function() {
      it('should call listDistributionsByWebACLId20200531 successfully', function(done) {
        //uncomment below and update the code to test listDistributionsByWebACLId20200531
        //instance.listDistributionsByWebACLId20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFieldLevelEncryptionConfigs20200531', function() {
      it('should call listFieldLevelEncryptionConfigs20200531 successfully', function(done) {
        //uncomment below and update the code to test listFieldLevelEncryptionConfigs20200531
        //instance.listFieldLevelEncryptionConfigs20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFieldLevelEncryptionProfiles20200531', function() {
      it('should call listFieldLevelEncryptionProfiles20200531 successfully', function(done) {
        //uncomment below and update the code to test listFieldLevelEncryptionProfiles20200531
        //instance.listFieldLevelEncryptionProfiles20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFunctions20200531', function() {
      it('should call listFunctions20200531 successfully', function(done) {
        //uncomment below and update the code to test listFunctions20200531
        //instance.listFunctions20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInvalidations20200531', function() {
      it('should call listInvalidations20200531 successfully', function(done) {
        //uncomment below and update the code to test listInvalidations20200531
        //instance.listInvalidations20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listKeyGroups20200531', function() {
      it('should call listKeyGroups20200531 successfully', function(done) {
        //uncomment below and update the code to test listKeyGroups20200531
        //instance.listKeyGroups20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOriginAccessControls20200531', function() {
      it('should call listOriginAccessControls20200531 successfully', function(done) {
        //uncomment below and update the code to test listOriginAccessControls20200531
        //instance.listOriginAccessControls20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listOriginRequestPolicies20200531', function() {
      it('should call listOriginRequestPolicies20200531 successfully', function(done) {
        //uncomment below and update the code to test listOriginRequestPolicies20200531
        //instance.listOriginRequestPolicies20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPublicKeys20200531', function() {
      it('should call listPublicKeys20200531 successfully', function(done) {
        //uncomment below and update the code to test listPublicKeys20200531
        //instance.listPublicKeys20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRealtimeLogConfigs20200531', function() {
      it('should call listRealtimeLogConfigs20200531 successfully', function(done) {
        //uncomment below and update the code to test listRealtimeLogConfigs20200531
        //instance.listRealtimeLogConfigs20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResponseHeadersPolicies20200531', function() {
      it('should call listResponseHeadersPolicies20200531 successfully', function(done) {
        //uncomment below and update the code to test listResponseHeadersPolicies20200531
        //instance.listResponseHeadersPolicies20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStreamingDistributions20200531', function() {
      it('should call listStreamingDistributions20200531 successfully', function(done) {
        //uncomment below and update the code to test listStreamingDistributions20200531
        //instance.listStreamingDistributions20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource20200531', function() {
      it('should call listTagsForResource20200531 successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource20200531
        //instance.listTagsForResource20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishFunction20200531', function() {
      it('should call publishFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test publishFunction20200531
        //instance.publishFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource20200531', function() {
      it('should call tagResource20200531 successfully', function(done) {
        //uncomment below and update the code to test tagResource20200531
        //instance.tagResource20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testFunction20200531', function() {
      it('should call testFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test testFunction20200531
        //instance.testFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource20200531', function() {
      it('should call untagResource20200531 successfully', function(done) {
        //uncomment below and update the code to test untagResource20200531
        //instance.untagResource20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCachePolicy20200531', function() {
      it('should call updateCachePolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test updateCachePolicy20200531
        //instance.updateCachePolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCloudFrontOriginAccessIdentity20200531', function() {
      it('should call updateCloudFrontOriginAccessIdentity20200531 successfully', function(done) {
        //uncomment below and update the code to test updateCloudFrontOriginAccessIdentity20200531
        //instance.updateCloudFrontOriginAccessIdentity20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContinuousDeploymentPolicy20200531', function() {
      it('should call updateContinuousDeploymentPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test updateContinuousDeploymentPolicy20200531
        //instance.updateContinuousDeploymentPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDistribution20200531', function() {
      it('should call updateDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test updateDistribution20200531
        //instance.updateDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDistributionWithStagingConfig20200531', function() {
      it('should call updateDistributionWithStagingConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test updateDistributionWithStagingConfig20200531
        //instance.updateDistributionWithStagingConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldLevelEncryptionConfig20200531', function() {
      it('should call updateFieldLevelEncryptionConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test updateFieldLevelEncryptionConfig20200531
        //instance.updateFieldLevelEncryptionConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldLevelEncryptionProfile20200531', function() {
      it('should call updateFieldLevelEncryptionProfile20200531 successfully', function(done) {
        //uncomment below and update the code to test updateFieldLevelEncryptionProfile20200531
        //instance.updateFieldLevelEncryptionProfile20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFunction20200531', function() {
      it('should call updateFunction20200531 successfully', function(done) {
        //uncomment below and update the code to test updateFunction20200531
        //instance.updateFunction20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateKeyGroup20200531', function() {
      it('should call updateKeyGroup20200531 successfully', function(done) {
        //uncomment below and update the code to test updateKeyGroup20200531
        //instance.updateKeyGroup20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOriginAccessControl20200531', function() {
      it('should call updateOriginAccessControl20200531 successfully', function(done) {
        //uncomment below and update the code to test updateOriginAccessControl20200531
        //instance.updateOriginAccessControl20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOriginRequestPolicy20200531', function() {
      it('should call updateOriginRequestPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test updateOriginRequestPolicy20200531
        //instance.updateOriginRequestPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePublicKey20200531', function() {
      it('should call updatePublicKey20200531 successfully', function(done) {
        //uncomment below and update the code to test updatePublicKey20200531
        //instance.updatePublicKey20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRealtimeLogConfig20200531', function() {
      it('should call updateRealtimeLogConfig20200531 successfully', function(done) {
        //uncomment below and update the code to test updateRealtimeLogConfig20200531
        //instance.updateRealtimeLogConfig20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateResponseHeadersPolicy20200531', function() {
      it('should call updateResponseHeadersPolicy20200531 successfully', function(done) {
        //uncomment below and update the code to test updateResponseHeadersPolicy20200531
        //instance.updateResponseHeadersPolicy20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStreamingDistribution20200531', function() {
      it('should call updateStreamingDistribution20200531 successfully', function(done) {
        //uncomment below and update the code to test updateStreamingDistribution20200531
        //instance.updateStreamingDistribution20200531(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
