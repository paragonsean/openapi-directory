/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKGKeyPairIds.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKGKeyPairIds::OAIKGKeyPairIds(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKGKeyPairIds::OAIKGKeyPairIds() {
    this->initializeModel();
}

OAIKGKeyPairIds::~OAIKGKeyPairIds() {}

void OAIKGKeyPairIds::initializeModel() {

    m_key_group_id_isSet = false;
    m_key_group_id_isValid = false;

    m_key_pair_ids_isSet = false;
    m_key_pair_ids_isValid = false;
}

void OAIKGKeyPairIds::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKGKeyPairIds::fromJsonObject(QJsonObject json) {

    m_key_group_id_isValid = ::OpenAPI::fromJsonValue(m_key_group_id, json[QString("KeyGroupId")]);
    m_key_group_id_isSet = !json[QString("KeyGroupId")].isNull() && m_key_group_id_isValid;

    m_key_pair_ids_isValid = ::OpenAPI::fromJsonValue(m_key_pair_ids, json[QString("KeyPairIds")]);
    m_key_pair_ids_isSet = !json[QString("KeyPairIds")].isNull() && m_key_pair_ids_isValid;
}

QString OAIKGKeyPairIds::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKGKeyPairIds::asJsonObject() const {
    QJsonObject obj;
    if (m_key_group_id_isSet) {
        obj.insert(QString("KeyGroupId"), ::OpenAPI::toJsonValue(m_key_group_id));
    }
    if (m_key_pair_ids.isSet()) {
        obj.insert(QString("KeyPairIds"), ::OpenAPI::toJsonValue(m_key_pair_ids));
    }
    return obj;
}

QString OAIKGKeyPairIds::getKeyGroupId() const {
    return m_key_group_id;
}
void OAIKGKeyPairIds::setKeyGroupId(const QString &key_group_id) {
    m_key_group_id = key_group_id;
    m_key_group_id_isSet = true;
}

bool OAIKGKeyPairIds::is_key_group_id_Set() const{
    return m_key_group_id_isSet;
}

bool OAIKGKeyPairIds::is_key_group_id_Valid() const{
    return m_key_group_id_isValid;
}

OAIKeyPairIds OAIKGKeyPairIds::getKeyPairIds() const {
    return m_key_pair_ids;
}
void OAIKGKeyPairIds::setKeyPairIds(const OAIKeyPairIds &key_pair_ids) {
    m_key_pair_ids = key_pair_ids;
    m_key_pair_ids_isSet = true;
}

bool OAIKGKeyPairIds::is_key_pair_ids_Set() const{
    return m_key_pair_ids_isSet;
}

bool OAIKGKeyPairIds::is_key_pair_ids_Valid() const{
    return m_key_pair_ids_isValid;
}

bool OAIKGKeyPairIds::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_pair_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKGKeyPairIds::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
