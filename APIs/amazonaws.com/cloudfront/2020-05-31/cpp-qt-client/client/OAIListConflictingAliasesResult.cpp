/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListConflictingAliasesResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListConflictingAliasesResult::OAIListConflictingAliasesResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListConflictingAliasesResult::OAIListConflictingAliasesResult() {
    this->initializeModel();
}

OAIListConflictingAliasesResult::~OAIListConflictingAliasesResult() {}

void OAIListConflictingAliasesResult::initializeModel() {

    m_conflicting_aliases_list_isSet = false;
    m_conflicting_aliases_list_isValid = false;
}

void OAIListConflictingAliasesResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListConflictingAliasesResult::fromJsonObject(QJsonObject json) {

    m_conflicting_aliases_list_isValid = ::OpenAPI::fromJsonValue(m_conflicting_aliases_list, json[QString("ConflictingAliasesList")]);
    m_conflicting_aliases_list_isSet = !json[QString("ConflictingAliasesList")].isNull() && m_conflicting_aliases_list_isValid;
}

QString OAIListConflictingAliasesResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListConflictingAliasesResult::asJsonObject() const {
    QJsonObject obj;
    if (m_conflicting_aliases_list.isSet()) {
        obj.insert(QString("ConflictingAliasesList"), ::OpenAPI::toJsonValue(m_conflicting_aliases_list));
    }
    return obj;
}

OAIListConflictingAliasesResult_ConflictingAliasesList OAIListConflictingAliasesResult::getConflictingAliasesList() const {
    return m_conflicting_aliases_list;
}
void OAIListConflictingAliasesResult::setConflictingAliasesList(const OAIListConflictingAliasesResult_ConflictingAliasesList &conflicting_aliases_list) {
    m_conflicting_aliases_list = conflicting_aliases_list;
    m_conflicting_aliases_list_isSet = true;
}

bool OAIListConflictingAliasesResult::is_conflicting_aliases_list_Set() const{
    return m_conflicting_aliases_list_isSet;
}

bool OAIListConflictingAliasesResult::is_conflicting_aliases_list_Valid() const{
    return m_conflicting_aliases_list_isValid;
}

bool OAIListConflictingAliasesResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conflicting_aliases_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListConflictingAliasesResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
