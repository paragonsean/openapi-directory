/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseHeadersPolicyServerTimingHeadersConfig.h
 *
 * &lt;p&gt;A configuration for enabling the &lt;code&gt;Server-Timing&lt;/code&gt; header in HTTP responses sent from CloudFront. CloudFront adds this header to HTTP responses that it sends in response to requests that match a cache behavior that&#39;s associated with this response headers policy.&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;Server-Timing&lt;/code&gt; header to view metrics that can help you gain insights about the behavior and performance of CloudFront. For example, you can see which cache layer served a cache hit, or the first byte latency from the origin when there was a cache miss. You can use the metrics in the &lt;code&gt;Server-Timing&lt;/code&gt; header to troubleshoot issues or test the efficiency of your CloudFront configuration. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/understanding-response-headers-policies.html#server-timing-header\&quot;&gt;Server-Timing header&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIResponseHeadersPolicyServerTimingHeadersConfig_H
#define OAIResponseHeadersPolicyServerTimingHeadersConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseHeadersPolicyServerTimingHeadersConfig : public OAIObject {
public:
    OAIResponseHeadersPolicyServerTimingHeadersConfig();
    OAIResponseHeadersPolicyServerTimingHeadersConfig(QString json);
    ~OAIResponseHeadersPolicyServerTimingHeadersConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    double getSamplingRate() const;
    void setSamplingRate(const double &sampling_rate);
    bool is_sampling_rate_Set() const;
    bool is_sampling_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    double m_sampling_rate;
    bool m_sampling_rate_isSet;
    bool m_sampling_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseHeadersPolicyServerTimingHeadersConfig)

#endif // OAIResponseHeadersPolicyServerTimingHeadersConfig_H
