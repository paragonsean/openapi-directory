/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOriginAccessControlOriginTypes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOriginAccessControlOriginTypes::OAIOriginAccessControlOriginTypes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOriginAccessControlOriginTypes::OAIOriginAccessControlOriginTypes() {
    this->initializeModel();
}

OAIOriginAccessControlOriginTypes::~OAIOriginAccessControlOriginTypes() {}

void OAIOriginAccessControlOriginTypes::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOriginAccessControlOriginTypes::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOriginAccessControlOriginTypes::fromJson(QString jsonString) {
    
    if ( jsonString.compare("s3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOriginAccessControlOriginTypes::S3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mediastore", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOriginAccessControlOriginTypes::MEDIASTORE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOriginAccessControlOriginTypes::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOriginAccessControlOriginTypes::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOriginAccessControlOriginTypes::S3:
            val = "s3";
            break;
        case eOAIOriginAccessControlOriginTypes::MEDIASTORE:
            val = "mediastore";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOriginAccessControlOriginTypes::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOriginAccessControlOriginTypes::eOAIOriginAccessControlOriginTypes OAIOriginAccessControlOriginTypes::getValue() const {
    return m_value;
}

void OAIOriginAccessControlOriginTypes::setValue(const OAIOriginAccessControlOriginTypes::eOAIOriginAccessControlOriginTypes& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOriginAccessControlOriginTypes::isSet() const {
    
    return m_value_isSet;
}

bool OAIOriginAccessControlOriginTypes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
