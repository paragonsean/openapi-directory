/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions() {
    this->initializeModel();
}

OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::~OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions() {}

void OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::initializeModel() {

    m_geo_restriction_isSet = false;
    m_geo_restriction_isValid = false;
}

void OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::fromJsonObject(QJsonObject json) {

    m_geo_restriction_isValid = ::OpenAPI::fromJsonValue(m_geo_restriction, json[QString("GeoRestriction")]);
    m_geo_restriction_isSet = !json[QString("GeoRestriction")].isNull() && m_geo_restriction_isValid;
}

QString OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::asJsonObject() const {
    QJsonObject obj;
    if (m_geo_restriction.isSet()) {
        obj.insert(QString("GeoRestriction"), ::OpenAPI::toJsonValue(m_geo_restriction));
    }
    return obj;
}

OAIRestrictions_GeoRestriction OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::getGeoRestriction() const {
    return m_geo_restriction;
}
void OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::setGeoRestriction(const OAIRestrictions_GeoRestriction &geo_restriction) {
    m_geo_restriction = geo_restriction;
    m_geo_restriction_isSet = true;
}

bool OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::is_geo_restriction_Set() const{
    return m_geo_restriction_isSet;
}

bool OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::is_geo_restriction_Valid() const{
    return m_geo_restriction_isValid;
}

bool OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_geo_restriction.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDistribution2020_05_31_request_DistributionConfig_Restrictions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_geo_restriction_isValid && true;
}

} // namespace OpenAPI
