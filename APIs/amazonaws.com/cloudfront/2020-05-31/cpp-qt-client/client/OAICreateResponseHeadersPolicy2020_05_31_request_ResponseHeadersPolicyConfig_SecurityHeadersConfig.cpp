/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig() {
    this->initializeModel();
}

OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::~OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig() {}

void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::initializeModel() {

    m_xss_protection_isSet = false;
    m_xss_protection_isValid = false;

    m_frame_options_isSet = false;
    m_frame_options_isValid = false;

    m_referrer_policy_isSet = false;
    m_referrer_policy_isValid = false;

    m_content_security_policy_isSet = false;
    m_content_security_policy_isValid = false;

    m_content_type_options_isSet = false;
    m_content_type_options_isValid = false;

    m_strict_transport_security_isSet = false;
    m_strict_transport_security_isValid = false;
}

void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::fromJsonObject(QJsonObject json) {

    m_xss_protection_isValid = ::OpenAPI::fromJsonValue(m_xss_protection, json[QString("XSSProtection")]);
    m_xss_protection_isSet = !json[QString("XSSProtection")].isNull() && m_xss_protection_isValid;

    m_frame_options_isValid = ::OpenAPI::fromJsonValue(m_frame_options, json[QString("FrameOptions")]);
    m_frame_options_isSet = !json[QString("FrameOptions")].isNull() && m_frame_options_isValid;

    m_referrer_policy_isValid = ::OpenAPI::fromJsonValue(m_referrer_policy, json[QString("ReferrerPolicy")]);
    m_referrer_policy_isSet = !json[QString("ReferrerPolicy")].isNull() && m_referrer_policy_isValid;

    m_content_security_policy_isValid = ::OpenAPI::fromJsonValue(m_content_security_policy, json[QString("ContentSecurityPolicy")]);
    m_content_security_policy_isSet = !json[QString("ContentSecurityPolicy")].isNull() && m_content_security_policy_isValid;

    m_content_type_options_isValid = ::OpenAPI::fromJsonValue(m_content_type_options, json[QString("ContentTypeOptions")]);
    m_content_type_options_isSet = !json[QString("ContentTypeOptions")].isNull() && m_content_type_options_isValid;

    m_strict_transport_security_isValid = ::OpenAPI::fromJsonValue(m_strict_transport_security, json[QString("StrictTransportSecurity")]);
    m_strict_transport_security_isSet = !json[QString("StrictTransportSecurity")].isNull() && m_strict_transport_security_isValid;
}

QString OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_xss_protection.isSet()) {
        obj.insert(QString("XSSProtection"), ::OpenAPI::toJsonValue(m_xss_protection));
    }
    if (m_frame_options.isSet()) {
        obj.insert(QString("FrameOptions"), ::OpenAPI::toJsonValue(m_frame_options));
    }
    if (m_referrer_policy.isSet()) {
        obj.insert(QString("ReferrerPolicy"), ::OpenAPI::toJsonValue(m_referrer_policy));
    }
    if (m_content_security_policy.isSet()) {
        obj.insert(QString("ContentSecurityPolicy"), ::OpenAPI::toJsonValue(m_content_security_policy));
    }
    if (m_content_type_options.isSet()) {
        obj.insert(QString("ContentTypeOptions"), ::OpenAPI::toJsonValue(m_content_type_options));
    }
    if (m_strict_transport_security.isSet()) {
        obj.insert(QString("StrictTransportSecurity"), ::OpenAPI::toJsonValue(m_strict_transport_security));
    }
    return obj;
}

OAIResponseHeadersPolicySecurityHeadersConfig_XSSProtection OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::getXssProtection() const {
    return m_xss_protection;
}
void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::setXssProtection(const OAIResponseHeadersPolicySecurityHeadersConfig_XSSProtection &xss_protection) {
    m_xss_protection = xss_protection;
    m_xss_protection_isSet = true;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_xss_protection_Set() const{
    return m_xss_protection_isSet;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_xss_protection_Valid() const{
    return m_xss_protection_isValid;
}

OAIResponseHeadersPolicySecurityHeadersConfig_FrameOptions OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::getFrameOptions() const {
    return m_frame_options;
}
void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::setFrameOptions(const OAIResponseHeadersPolicySecurityHeadersConfig_FrameOptions &frame_options) {
    m_frame_options = frame_options;
    m_frame_options_isSet = true;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_frame_options_Set() const{
    return m_frame_options_isSet;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_frame_options_Valid() const{
    return m_frame_options_isValid;
}

OAIResponseHeadersPolicySecurityHeadersConfig_ReferrerPolicy OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::getReferrerPolicy() const {
    return m_referrer_policy;
}
void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::setReferrerPolicy(const OAIResponseHeadersPolicySecurityHeadersConfig_ReferrerPolicy &referrer_policy) {
    m_referrer_policy = referrer_policy;
    m_referrer_policy_isSet = true;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_referrer_policy_Set() const{
    return m_referrer_policy_isSet;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_referrer_policy_Valid() const{
    return m_referrer_policy_isValid;
}

OAIResponseHeadersPolicySecurityHeadersConfig_ContentSecurityPolicy OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::getContentSecurityPolicy() const {
    return m_content_security_policy;
}
void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::setContentSecurityPolicy(const OAIResponseHeadersPolicySecurityHeadersConfig_ContentSecurityPolicy &content_security_policy) {
    m_content_security_policy = content_security_policy;
    m_content_security_policy_isSet = true;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_content_security_policy_Set() const{
    return m_content_security_policy_isSet;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_content_security_policy_Valid() const{
    return m_content_security_policy_isValid;
}

OAIResponseHeadersPolicySecurityHeadersConfig_ContentTypeOptions OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::getContentTypeOptions() const {
    return m_content_type_options;
}
void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::setContentTypeOptions(const OAIResponseHeadersPolicySecurityHeadersConfig_ContentTypeOptions &content_type_options) {
    m_content_type_options = content_type_options;
    m_content_type_options_isSet = true;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_content_type_options_Set() const{
    return m_content_type_options_isSet;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_content_type_options_Valid() const{
    return m_content_type_options_isValid;
}

OAIResponseHeadersPolicySecurityHeadersConfig_StrictTransportSecurity OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::getStrictTransportSecurity() const {
    return m_strict_transport_security;
}
void OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::setStrictTransportSecurity(const OAIResponseHeadersPolicySecurityHeadersConfig_StrictTransportSecurity &strict_transport_security) {
    m_strict_transport_security = strict_transport_security;
    m_strict_transport_security_isSet = true;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_strict_transport_security_Set() const{
    return m_strict_transport_security_isSet;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::is_strict_transport_security_Valid() const{
    return m_strict_transport_security_isValid;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_xss_protection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_frame_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_referrer_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_security_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_type_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_strict_transport_security.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateResponseHeadersPolicy2020_05_31_request_ResponseHeadersPolicyConfig_SecurityHeadersConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
