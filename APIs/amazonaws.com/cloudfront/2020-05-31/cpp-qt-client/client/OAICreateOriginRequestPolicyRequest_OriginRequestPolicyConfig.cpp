/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig() {
    this->initializeModel();
}

OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::~OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig() {}

void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_headers_config_isSet = false;
    m_headers_config_isValid = false;

    m_cookies_config_isSet = false;
    m_cookies_config_isValid = false;

    m_query_strings_config_isSet = false;
    m_query_strings_config_isValid = false;
}

void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("Comment")]);
    m_comment_isSet = !json[QString("Comment")].isNull() && m_comment_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_headers_config_isValid = ::OpenAPI::fromJsonValue(m_headers_config, json[QString("HeadersConfig")]);
    m_headers_config_isSet = !json[QString("HeadersConfig")].isNull() && m_headers_config_isValid;

    m_cookies_config_isValid = ::OpenAPI::fromJsonValue(m_cookies_config, json[QString("CookiesConfig")]);
    m_cookies_config_isSet = !json[QString("CookiesConfig")].isNull() && m_cookies_config_isValid;

    m_query_strings_config_isValid = ::OpenAPI::fromJsonValue(m_query_strings_config, json[QString("QueryStringsConfig")]);
    m_query_strings_config_isSet = !json[QString("QueryStringsConfig")].isNull() && m_query_strings_config_isValid;
}

QString OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("Comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_headers_config.isSet()) {
        obj.insert(QString("HeadersConfig"), ::OpenAPI::toJsonValue(m_headers_config));
    }
    if (m_cookies_config.isSet()) {
        obj.insert(QString("CookiesConfig"), ::OpenAPI::toJsonValue(m_cookies_config));
    }
    if (m_query_strings_config.isSet()) {
        obj.insert(QString("QueryStringsConfig"), ::OpenAPI::toJsonValue(m_query_strings_config));
    }
    return obj;
}

QString OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::getComment() const {
    return m_comment;
}
void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::getName() const {
    return m_name;
}
void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_name_Valid() const{
    return m_name_isValid;
}

OAICreateOriginRequestPolicy2020_05_31_request_OriginRequestPolicyConfig_HeadersConfig OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::getHeadersConfig() const {
    return m_headers_config;
}
void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::setHeadersConfig(const OAICreateOriginRequestPolicy2020_05_31_request_OriginRequestPolicyConfig_HeadersConfig &headers_config) {
    m_headers_config = headers_config;
    m_headers_config_isSet = true;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_headers_config_Set() const{
    return m_headers_config_isSet;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_headers_config_Valid() const{
    return m_headers_config_isValid;
}

OAICreateOriginRequestPolicy2020_05_31_request_OriginRequestPolicyConfig_CookiesConfig OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::getCookiesConfig() const {
    return m_cookies_config;
}
void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::setCookiesConfig(const OAICreateOriginRequestPolicy2020_05_31_request_OriginRequestPolicyConfig_CookiesConfig &cookies_config) {
    m_cookies_config = cookies_config;
    m_cookies_config_isSet = true;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_cookies_config_Set() const{
    return m_cookies_config_isSet;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_cookies_config_Valid() const{
    return m_cookies_config_isValid;
}

OAICreateOriginRequestPolicy2020_05_31_request_OriginRequestPolicyConfig_QueryStringsConfig OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::getQueryStringsConfig() const {
    return m_query_strings_config;
}
void OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::setQueryStringsConfig(const OAICreateOriginRequestPolicy2020_05_31_request_OriginRequestPolicyConfig_QueryStringsConfig &query_strings_config) {
    m_query_strings_config = query_strings_config;
    m_query_strings_config_isSet = true;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_query_strings_config_Set() const{
    return m_query_strings_config_isSet;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::is_query_strings_config_Valid() const{
    return m_query_strings_config_isValid;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headers_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cookies_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_query_strings_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOriginRequestPolicyRequest_OriginRequestPolicyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_headers_config_isValid && m_cookies_config_isValid && m_query_strings_config_isValid && true;
}

} // namespace OpenAPI
