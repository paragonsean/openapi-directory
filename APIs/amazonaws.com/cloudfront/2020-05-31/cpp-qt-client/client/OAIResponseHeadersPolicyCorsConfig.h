/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseHeadersPolicyCorsConfig.h
 *
 * &lt;p&gt;A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS). CloudFront adds these headers to HTTP responses that it sends for CORS requests that match a cache behavior associated with this response headers policy.&lt;/p&gt; &lt;p&gt;For more information about CORS, see &lt;a href&#x3D;\&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt; in the MDN Web Docs.&lt;/p&gt;
 */

#ifndef OAIResponseHeadersPolicyCorsConfig_H
#define OAIResponseHeadersPolicyCorsConfig_H

#include <QJsonObject>

#include "OAIResponseHeadersPolicyCorsConfig_AccessControlAllowHeaders.h"
#include "OAIResponseHeadersPolicyCorsConfig_AccessControlAllowMethods.h"
#include "OAIResponseHeadersPolicyCorsConfig_AccessControlAllowOrigins.h"
#include "OAIResponseHeadersPolicyCorsConfig_AccessControlExposeHeaders.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResponseHeadersPolicyCorsConfig_AccessControlAllowOrigins;
class OAIResponseHeadersPolicyCorsConfig_AccessControlAllowHeaders;
class OAIResponseHeadersPolicyCorsConfig_AccessControlAllowMethods;
class OAIResponseHeadersPolicyCorsConfig_AccessControlExposeHeaders;

class OAIResponseHeadersPolicyCorsConfig : public OAIObject {
public:
    OAIResponseHeadersPolicyCorsConfig();
    OAIResponseHeadersPolicyCorsConfig(QString json);
    ~OAIResponseHeadersPolicyCorsConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResponseHeadersPolicyCorsConfig_AccessControlAllowOrigins getAccessControlAllowOrigins() const;
    void setAccessControlAllowOrigins(const OAIResponseHeadersPolicyCorsConfig_AccessControlAllowOrigins &access_control_allow_origins);
    bool is_access_control_allow_origins_Set() const;
    bool is_access_control_allow_origins_Valid() const;

    OAIResponseHeadersPolicyCorsConfig_AccessControlAllowHeaders getAccessControlAllowHeaders() const;
    void setAccessControlAllowHeaders(const OAIResponseHeadersPolicyCorsConfig_AccessControlAllowHeaders &access_control_allow_headers);
    bool is_access_control_allow_headers_Set() const;
    bool is_access_control_allow_headers_Valid() const;

    OAIResponseHeadersPolicyCorsConfig_AccessControlAllowMethods getAccessControlAllowMethods() const;
    void setAccessControlAllowMethods(const OAIResponseHeadersPolicyCorsConfig_AccessControlAllowMethods &access_control_allow_methods);
    bool is_access_control_allow_methods_Set() const;
    bool is_access_control_allow_methods_Valid() const;

    bool getAccessControlAllowCredentials() const;
    void setAccessControlAllowCredentials(const bool &access_control_allow_credentials);
    bool is_access_control_allow_credentials_Set() const;
    bool is_access_control_allow_credentials_Valid() const;

    OAIResponseHeadersPolicyCorsConfig_AccessControlExposeHeaders getAccessControlExposeHeaders() const;
    void setAccessControlExposeHeaders(const OAIResponseHeadersPolicyCorsConfig_AccessControlExposeHeaders &access_control_expose_headers);
    bool is_access_control_expose_headers_Set() const;
    bool is_access_control_expose_headers_Valid() const;

    qint32 getAccessControlMaxAgeSec() const;
    void setAccessControlMaxAgeSec(const qint32 &access_control_max_age_sec);
    bool is_access_control_max_age_sec_Set() const;
    bool is_access_control_max_age_sec_Valid() const;

    bool getOriginOverride() const;
    void setOriginOverride(const bool &origin_override);
    bool is_origin_override_Set() const;
    bool is_origin_override_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResponseHeadersPolicyCorsConfig_AccessControlAllowOrigins m_access_control_allow_origins;
    bool m_access_control_allow_origins_isSet;
    bool m_access_control_allow_origins_isValid;

    OAIResponseHeadersPolicyCorsConfig_AccessControlAllowHeaders m_access_control_allow_headers;
    bool m_access_control_allow_headers_isSet;
    bool m_access_control_allow_headers_isValid;

    OAIResponseHeadersPolicyCorsConfig_AccessControlAllowMethods m_access_control_allow_methods;
    bool m_access_control_allow_methods_isSet;
    bool m_access_control_allow_methods_isValid;

    bool m_access_control_allow_credentials;
    bool m_access_control_allow_credentials_isSet;
    bool m_access_control_allow_credentials_isValid;

    OAIResponseHeadersPolicyCorsConfig_AccessControlExposeHeaders m_access_control_expose_headers;
    bool m_access_control_expose_headers_isSet;
    bool m_access_control_expose_headers_isValid;

    qint32 m_access_control_max_age_sec;
    bool m_access_control_max_age_sec_isSet;
    bool m_access_control_max_age_sec_isValid;

    bool m_origin_override;
    bool m_origin_override_isSet;
    bool m_origin_override_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseHeadersPolicyCorsConfig)

#endif // OAIResponseHeadersPolicyCorsConfig_H
