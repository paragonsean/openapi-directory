/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDistribution.h
 *
 * A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
 */

#ifndef OAIDistribution_H
#define OAIDistribution_H

#include <QJsonObject>

#include "OAIDistribution_ActiveTrustedKeyGroups.h"
#include "OAIDistribution_ActiveTrustedSigners.h"
#include "OAIDistribution_DistributionConfig.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDistribution_ActiveTrustedSigners;
class OAIDistribution_ActiveTrustedKeyGroups;
class OAIDistribution_DistributionConfig;

class OAIDistribution : public OAIObject {
public:
    OAIDistribution();
    OAIDistribution(QString json);
    ~OAIDistribution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    qint32 getInProgressInvalidationBatches() const;
    void setInProgressInvalidationBatches(const qint32 &in_progress_invalidation_batches);
    bool is_in_progress_invalidation_batches_Set() const;
    bool is_in_progress_invalidation_batches_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    OAIDistribution_ActiveTrustedSigners getActiveTrustedSigners() const;
    void setActiveTrustedSigners(const OAIDistribution_ActiveTrustedSigners &active_trusted_signers);
    bool is_active_trusted_signers_Set() const;
    bool is_active_trusted_signers_Valid() const;

    OAIDistribution_ActiveTrustedKeyGroups getActiveTrustedKeyGroups() const;
    void setActiveTrustedKeyGroups(const OAIDistribution_ActiveTrustedKeyGroups &active_trusted_key_groups);
    bool is_active_trusted_key_groups_Set() const;
    bool is_active_trusted_key_groups_Valid() const;

    OAIDistribution_DistributionConfig getDistributionConfig() const;
    void setDistributionConfig(const OAIDistribution_DistributionConfig &distribution_config);
    bool is_distribution_config_Set() const;
    bool is_distribution_config_Valid() const;

    QList getAliasIcpRecordals() const;
    void setAliasIcpRecordals(const QList &alias_icp_recordals);
    bool is_alias_icp_recordals_Set() const;
    bool is_alias_icp_recordals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    qint32 m_in_progress_invalidation_batches;
    bool m_in_progress_invalidation_batches_isSet;
    bool m_in_progress_invalidation_batches_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    OAIDistribution_ActiveTrustedSigners m_active_trusted_signers;
    bool m_active_trusted_signers_isSet;
    bool m_active_trusted_signers_isValid;

    OAIDistribution_ActiveTrustedKeyGroups m_active_trusted_key_groups;
    bool m_active_trusted_key_groups_isSet;
    bool m_active_trusted_key_groups_isValid;

    OAIDistribution_DistributionConfig m_distribution_config;
    bool m_distribution_config_isSet;
    bool m_distribution_config_isValid;

    QList m_alias_icp_recordals;
    bool m_alias_icp_recordals_isSet;
    bool m_alias_icp_recordals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDistribution)

#endif // OAIDistribution_H
