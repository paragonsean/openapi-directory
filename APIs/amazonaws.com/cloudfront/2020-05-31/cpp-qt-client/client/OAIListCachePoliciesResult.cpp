/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListCachePoliciesResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListCachePoliciesResult::OAIListCachePoliciesResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListCachePoliciesResult::OAIListCachePoliciesResult() {
    this->initializeModel();
}

OAIListCachePoliciesResult::~OAIListCachePoliciesResult() {}

void OAIListCachePoliciesResult::initializeModel() {

    m_cache_policy_list_isSet = false;
    m_cache_policy_list_isValid = false;
}

void OAIListCachePoliciesResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListCachePoliciesResult::fromJsonObject(QJsonObject json) {

    m_cache_policy_list_isValid = ::OpenAPI::fromJsonValue(m_cache_policy_list, json[QString("CachePolicyList")]);
    m_cache_policy_list_isSet = !json[QString("CachePolicyList")].isNull() && m_cache_policy_list_isValid;
}

QString OAIListCachePoliciesResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListCachePoliciesResult::asJsonObject() const {
    QJsonObject obj;
    if (m_cache_policy_list.isSet()) {
        obj.insert(QString("CachePolicyList"), ::OpenAPI::toJsonValue(m_cache_policy_list));
    }
    return obj;
}

OAIListCachePoliciesResult_CachePolicyList OAIListCachePoliciesResult::getCachePolicyList() const {
    return m_cache_policy_list;
}
void OAIListCachePoliciesResult::setCachePolicyList(const OAIListCachePoliciesResult_CachePolicyList &cache_policy_list) {
    m_cache_policy_list = cache_policy_list;
    m_cache_policy_list_isSet = true;
}

bool OAIListCachePoliciesResult::is_cache_policy_list_Set() const{
    return m_cache_policy_list_isSet;
}

bool OAIListCachePoliciesResult::is_cache_policy_list_Valid() const{
    return m_cache_policy_list_isValid;
}

bool OAIListCachePoliciesResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cache_policy_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListCachePoliciesResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
