/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrigin_OriginShield.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrigin_OriginShield::OAIOrigin_OriginShield(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrigin_OriginShield::OAIOrigin_OriginShield() {
    this->initializeModel();
}

OAIOrigin_OriginShield::~OAIOrigin_OriginShield() {}

void OAIOrigin_OriginShield::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_origin_shield_region_isSet = false;
    m_origin_shield_region_isValid = false;
}

void OAIOrigin_OriginShield::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrigin_OriginShield::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_origin_shield_region_isValid = ::OpenAPI::fromJsonValue(m_origin_shield_region, json[QString("OriginShieldRegion")]);
    m_origin_shield_region_isSet = !json[QString("OriginShieldRegion")].isNull() && m_origin_shield_region_isValid;
}

QString OAIOrigin_OriginShield::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrigin_OriginShield::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_origin_shield_region_isSet) {
        obj.insert(QString("OriginShieldRegion"), ::OpenAPI::toJsonValue(m_origin_shield_region));
    }
    return obj;
}

bool OAIOrigin_OriginShield::getEnabled() const {
    return m_enabled;
}
void OAIOrigin_OriginShield::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIOrigin_OriginShield::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIOrigin_OriginShield::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIOrigin_OriginShield::getOriginShieldRegion() const {
    return m_origin_shield_region;
}
void OAIOrigin_OriginShield::setOriginShieldRegion(const QString &origin_shield_region) {
    m_origin_shield_region = origin_shield_region;
    m_origin_shield_region_isSet = true;
}

bool OAIOrigin_OriginShield::is_origin_shield_region_Set() const{
    return m_origin_shield_region_isSet;
}

bool OAIOrigin_OriginShield::is_origin_shield_region_Valid() const{
    return m_origin_shield_region_isValid;
}

bool OAIOrigin_OriginShield::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_shield_region_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrigin_OriginShield::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
