/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferrerPolicyList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferrerPolicyList::OAIReferrerPolicyList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferrerPolicyList::OAIReferrerPolicyList() {
    this->initializeModel();
}

OAIReferrerPolicyList::~OAIReferrerPolicyList() {}

void OAIReferrerPolicyList::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReferrerPolicyList::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReferrerPolicyList::fromJson(QString jsonString) {
    
    if ( jsonString.compare("no-referrer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::NO_REFERRER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("no-referrer-when-downgrade", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::NO_REFERRER_WHEN_DOWNGRADE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("origin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::ORIGIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("origin-when-cross-origin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::ORIGIN_WHEN_CROSS_ORIGIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("same-origin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::SAME_ORIGIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("strict-origin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::STRICT_ORIGIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("strict-origin-when-cross-origin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::STRICT_ORIGIN_WHEN_CROSS_ORIGIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("unsafe-url", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReferrerPolicyList::UNSAFE_URL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReferrerPolicyList::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReferrerPolicyList::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReferrerPolicyList::NO_REFERRER:
            val = "no-referrer";
            break;
        case eOAIReferrerPolicyList::NO_REFERRER_WHEN_DOWNGRADE:
            val = "no-referrer-when-downgrade";
            break;
        case eOAIReferrerPolicyList::ORIGIN:
            val = "origin";
            break;
        case eOAIReferrerPolicyList::ORIGIN_WHEN_CROSS_ORIGIN:
            val = "origin-when-cross-origin";
            break;
        case eOAIReferrerPolicyList::SAME_ORIGIN:
            val = "same-origin";
            break;
        case eOAIReferrerPolicyList::STRICT_ORIGIN:
            val = "strict-origin";
            break;
        case eOAIReferrerPolicyList::STRICT_ORIGIN_WHEN_CROSS_ORIGIN:
            val = "strict-origin-when-cross-origin";
            break;
        case eOAIReferrerPolicyList::UNSAFE_URL:
            val = "unsafe-url";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReferrerPolicyList::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReferrerPolicyList::eOAIReferrerPolicyList OAIReferrerPolicyList::getValue() const {
    return m_value;
}

void OAIReferrerPolicyList::setValue(const OAIReferrerPolicyList::eOAIReferrerPolicyList& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReferrerPolicyList::isSet() const {
    
    return m_value_isSet;
}

bool OAIReferrerPolicyList::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
