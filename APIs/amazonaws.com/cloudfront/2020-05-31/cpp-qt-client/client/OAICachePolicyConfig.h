/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICachePolicyConfig.h
 *
 * &lt;p&gt;A cache policy configuration.&lt;/p&gt; &lt;p&gt;This configuration determines the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can&#39;t find a valid object in its cache that matches the request&#39;s cache key. If you want to send values to the origin but &lt;i&gt;not&lt;/i&gt; include them in the cache key, use &lt;code&gt;OriginRequestPolicy&lt;/code&gt;.&lt;/p&gt;
 */

#ifndef OAICachePolicyConfig_H
#define OAICachePolicyConfig_H

#include <QJsonObject>

#include "OAICreateCachePolicy2020_05_31_request_CachePolicyConfig_ParametersInCacheKeyAndForwardedToOrigin.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateCachePolicy2020_05_31_request_CachePolicyConfig_ParametersInCacheKeyAndForwardedToOrigin;

class OAICachePolicyConfig : public OAIObject {
public:
    OAICachePolicyConfig();
    OAICachePolicyConfig(QString json);
    ~OAICachePolicyConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getDefaultTtl() const;
    void setDefaultTtl(const qint32 &default_ttl);
    bool is_default_ttl_Set() const;
    bool is_default_ttl_Valid() const;

    qint32 getMaxTtl() const;
    void setMaxTtl(const qint32 &max_ttl);
    bool is_max_ttl_Set() const;
    bool is_max_ttl_Valid() const;

    qint32 getMinTtl() const;
    void setMinTtl(const qint32 &min_ttl);
    bool is_min_ttl_Set() const;
    bool is_min_ttl_Valid() const;

    OAICreateCachePolicy2020_05_31_request_CachePolicyConfig_ParametersInCacheKeyAndForwardedToOrigin getParametersInCacheKeyAndForwardedToOrigin() const;
    void setParametersInCacheKeyAndForwardedToOrigin(const OAICreateCachePolicy2020_05_31_request_CachePolicyConfig_ParametersInCacheKeyAndForwardedToOrigin &parameters_in_cache_key_and_forwarded_to_origin);
    bool is_parameters_in_cache_key_and_forwarded_to_origin_Set() const;
    bool is_parameters_in_cache_key_and_forwarded_to_origin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_default_ttl;
    bool m_default_ttl_isSet;
    bool m_default_ttl_isValid;

    qint32 m_max_ttl;
    bool m_max_ttl_isSet;
    bool m_max_ttl_isValid;

    qint32 m_min_ttl;
    bool m_min_ttl_isSet;
    bool m_min_ttl_isValid;

    OAICreateCachePolicy2020_05_31_request_CachePolicyConfig_ParametersInCacheKeyAndForwardedToOrigin m_parameters_in_cache_key_and_forwarded_to_origin;
    bool m_parameters_in_cache_key_and_forwarded_to_origin_isSet;
    bool m_parameters_in_cache_key_and_forwarded_to_origin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICachePolicyConfig)

#endif // OAICachePolicyConfig_H
