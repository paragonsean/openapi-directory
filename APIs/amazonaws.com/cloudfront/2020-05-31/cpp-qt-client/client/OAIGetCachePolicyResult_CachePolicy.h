/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCachePolicyResult_CachePolicy.h
 *
 * 
 */

#ifndef OAIGetCachePolicyResult_CachePolicy_H
#define OAIGetCachePolicyResult_CachePolicy_H

#include <QJsonObject>

#include "OAIGetCachePolicyConfigResult_CachePolicyConfig.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetCachePolicyConfigResult_CachePolicyConfig;

class OAIGetCachePolicyResult_CachePolicy : public OAIObject {
public:
    OAIGetCachePolicyResult_CachePolicy();
    OAIGetCachePolicyResult_CachePolicy(QString json);
    ~OAIGetCachePolicyResult_CachePolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    OAIGetCachePolicyConfigResult_CachePolicyConfig getCachePolicyConfig() const;
    void setCachePolicyConfig(const OAIGetCachePolicyConfigResult_CachePolicyConfig &cache_policy_config);
    bool is_cache_policy_config_Set() const;
    bool is_cache_policy_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    OAIGetCachePolicyConfigResult_CachePolicyConfig m_cache_policy_config;
    bool m_cache_policy_config_isSet;
    bool m_cache_policy_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCachePolicyResult_CachePolicy)

#endif // OAIGetCachePolicyResult_CachePolicy_H
