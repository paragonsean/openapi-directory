/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISignerList_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISignerList_inner::OAISignerList_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISignerList_inner::OAISignerList_inner() {
    this->initializeModel();
}

OAISignerList_inner::~OAISignerList_inner() {}

void OAISignerList_inner::initializeModel() {

    m_aws_account_number_isSet = false;
    m_aws_account_number_isValid = false;

    m_key_pair_ids_isSet = false;
    m_key_pair_ids_isValid = false;
}

void OAISignerList_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISignerList_inner::fromJsonObject(QJsonObject json) {

    m_aws_account_number_isValid = ::OpenAPI::fromJsonValue(m_aws_account_number, json[QString("AwsAccountNumber")]);
    m_aws_account_number_isSet = !json[QString("AwsAccountNumber")].isNull() && m_aws_account_number_isValid;

    m_key_pair_ids_isValid = ::OpenAPI::fromJsonValue(m_key_pair_ids, json[QString("KeyPairIds")]);
    m_key_pair_ids_isSet = !json[QString("KeyPairIds")].isNull() && m_key_pair_ids_isValid;
}

QString OAISignerList_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISignerList_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_account_number_isSet) {
        obj.insert(QString("AwsAccountNumber"), ::OpenAPI::toJsonValue(m_aws_account_number));
    }
    if (m_key_pair_ids.isSet()) {
        obj.insert(QString("KeyPairIds"), ::OpenAPI::toJsonValue(m_key_pair_ids));
    }
    return obj;
}

QString OAISignerList_inner::getAwsAccountNumber() const {
    return m_aws_account_number;
}
void OAISignerList_inner::setAwsAccountNumber(const QString &aws_account_number) {
    m_aws_account_number = aws_account_number;
    m_aws_account_number_isSet = true;
}

bool OAISignerList_inner::is_aws_account_number_Set() const{
    return m_aws_account_number_isSet;
}

bool OAISignerList_inner::is_aws_account_number_Valid() const{
    return m_aws_account_number_isValid;
}

OAISigner_KeyPairIds OAISignerList_inner::getKeyPairIds() const {
    return m_key_pair_ids;
}
void OAISignerList_inner::setKeyPairIds(const OAISigner_KeyPairIds &key_pair_ids) {
    m_key_pair_ids = key_pair_ids;
    m_key_pair_ids_isSet = true;
}

bool OAISignerList_inner::is_key_pair_ids_Set() const{
    return m_key_pair_ids_isSet;
}

bool OAISignerList_inner::is_key_pair_ids_Valid() const{
    return m_key_pair_ids_isValid;
}

bool OAISignerList_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_pair_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISignerList_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
