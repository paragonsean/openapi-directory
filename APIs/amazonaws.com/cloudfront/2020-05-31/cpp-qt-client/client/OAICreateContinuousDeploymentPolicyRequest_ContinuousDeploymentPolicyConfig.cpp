/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig() {
    this->initializeModel();
}

OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::~OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig() {}

void OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::initializeModel() {

    m_staging_distribution_dns_names_isSet = false;
    m_staging_distribution_dns_names_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_traffic_config_isSet = false;
    m_traffic_config_isValid = false;
}

void OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::fromJsonObject(QJsonObject json) {

    m_staging_distribution_dns_names_isValid = ::OpenAPI::fromJsonValue(m_staging_distribution_dns_names, json[QString("StagingDistributionDnsNames")]);
    m_staging_distribution_dns_names_isSet = !json[QString("StagingDistributionDnsNames")].isNull() && m_staging_distribution_dns_names_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_traffic_config_isValid = ::OpenAPI::fromJsonValue(m_traffic_config, json[QString("TrafficConfig")]);
    m_traffic_config_isSet = !json[QString("TrafficConfig")].isNull() && m_traffic_config_isValid;
}

QString OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_staging_distribution_dns_names.isSet()) {
        obj.insert(QString("StagingDistributionDnsNames"), ::OpenAPI::toJsonValue(m_staging_distribution_dns_names));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_traffic_config.isSet()) {
        obj.insert(QString("TrafficConfig"), ::OpenAPI::toJsonValue(m_traffic_config));
    }
    return obj;
}

OAICreateContinuousDeploymentPolicy2020_05_31_request_ContinuousDeploymentPolicyConfig_StagingDistributionDnsNames OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::getStagingDistributionDnsNames() const {
    return m_staging_distribution_dns_names;
}
void OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::setStagingDistributionDnsNames(const OAICreateContinuousDeploymentPolicy2020_05_31_request_ContinuousDeploymentPolicyConfig_StagingDistributionDnsNames &staging_distribution_dns_names) {
    m_staging_distribution_dns_names = staging_distribution_dns_names;
    m_staging_distribution_dns_names_isSet = true;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::is_staging_distribution_dns_names_Set() const{
    return m_staging_distribution_dns_names_isSet;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::is_staging_distribution_dns_names_Valid() const{
    return m_staging_distribution_dns_names_isValid;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::getEnabled() const {
    return m_enabled;
}
void OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAICreateContinuousDeploymentPolicy2020_05_31_request_ContinuousDeploymentPolicyConfig_TrafficConfig OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::getTrafficConfig() const {
    return m_traffic_config;
}
void OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::setTrafficConfig(const OAICreateContinuousDeploymentPolicy2020_05_31_request_ContinuousDeploymentPolicyConfig_TrafficConfig &traffic_config) {
    m_traffic_config = traffic_config;
    m_traffic_config_isSet = true;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::is_traffic_config_Set() const{
    return m_traffic_config_isSet;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::is_traffic_config_Valid() const{
    return m_traffic_config_isValid;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_staging_distribution_dns_names.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_traffic_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateContinuousDeploymentPolicyRequest_ContinuousDeploymentPolicyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_staging_distribution_dns_names_isValid && m_enabled_isValid && true;
}

} // namespace OpenAPI
