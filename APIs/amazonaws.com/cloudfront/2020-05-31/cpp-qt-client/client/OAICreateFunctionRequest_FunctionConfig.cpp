/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFunctionRequest_FunctionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFunctionRequest_FunctionConfig::OAICreateFunctionRequest_FunctionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFunctionRequest_FunctionConfig::OAICreateFunctionRequest_FunctionConfig() {
    this->initializeModel();
}

OAICreateFunctionRequest_FunctionConfig::~OAICreateFunctionRequest_FunctionConfig() {}

void OAICreateFunctionRequest_FunctionConfig::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_runtime_isSet = false;
    m_runtime_isValid = false;
}

void OAICreateFunctionRequest_FunctionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFunctionRequest_FunctionConfig::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("Comment")]);
    m_comment_isSet = !json[QString("Comment")].isNull() && m_comment_isValid;

    m_runtime_isValid = ::OpenAPI::fromJsonValue(m_runtime, json[QString("Runtime")]);
    m_runtime_isSet = !json[QString("Runtime")].isNull() && m_runtime_isValid;
}

QString OAICreateFunctionRequest_FunctionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFunctionRequest_FunctionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("Comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_runtime.isSet()) {
        obj.insert(QString("Runtime"), ::OpenAPI::toJsonValue(m_runtime));
    }
    return obj;
}

QString OAICreateFunctionRequest_FunctionConfig::getComment() const {
    return m_comment;
}
void OAICreateFunctionRequest_FunctionConfig::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAICreateFunctionRequest_FunctionConfig::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAICreateFunctionRequest_FunctionConfig::is_comment_Valid() const{
    return m_comment_isValid;
}

OAIFunctionRuntime OAICreateFunctionRequest_FunctionConfig::getRuntime() const {
    return m_runtime;
}
void OAICreateFunctionRequest_FunctionConfig::setRuntime(const OAIFunctionRuntime &runtime) {
    m_runtime = runtime;
    m_runtime_isSet = true;
}

bool OAICreateFunctionRequest_FunctionConfig::is_runtime_Set() const{
    return m_runtime_isSet;
}

bool OAICreateFunctionRequest_FunctionConfig::is_runtime_Valid() const{
    return m_runtime_isValid;
}

bool OAICreateFunctionRequest_FunctionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFunctionRequest_FunctionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_comment_isValid && m_runtime_isValid && true;
}

} // namespace OpenAPI
