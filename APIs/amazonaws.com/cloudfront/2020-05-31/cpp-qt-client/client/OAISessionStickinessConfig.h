/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISessionStickinessConfig.h
 *
 * Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user&#39;s requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values.
 */

#ifndef OAISessionStickinessConfig_H
#define OAISessionStickinessConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISessionStickinessConfig : public OAIObject {
public:
    OAISessionStickinessConfig();
    OAISessionStickinessConfig(QString json);
    ~OAISessionStickinessConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIdleTtl() const;
    void setIdleTtl(const qint32 &idle_ttl);
    bool is_idle_ttl_Set() const;
    bool is_idle_ttl_Valid() const;

    qint32 getMaximumTtl() const;
    void setMaximumTtl(const qint32 &maximum_ttl);
    bool is_maximum_ttl_Set() const;
    bool is_maximum_ttl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_idle_ttl;
    bool m_idle_ttl_isSet;
    bool m_idle_ttl_isValid;

    qint32 m_maximum_ttl;
    bool m_maximum_ttl_isSet;
    bool m_maximum_ttl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISessionStickinessConfig)

#endif // OAISessionStickinessConfig_H
