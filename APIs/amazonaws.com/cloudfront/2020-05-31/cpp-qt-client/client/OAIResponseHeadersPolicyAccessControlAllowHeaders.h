/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-05-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseHeadersPolicyAccessControlAllowHeaders.h
 *
 * &lt;p&gt;A list of HTTP header names that CloudFront includes as values for the &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; HTTP response header.&lt;/p&gt; &lt;p&gt;For more information about the &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; HTTP response header, see &lt;a href&#x3D;\&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers\&quot;&gt;Access-Control-Allow-Headers&lt;/a&gt; in the MDN Web Docs.&lt;/p&gt;
 */

#ifndef OAIResponseHeadersPolicyAccessControlAllowHeaders_H
#define OAIResponseHeadersPolicyAccessControlAllowHeaders_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseHeadersPolicyAccessControlAllowHeaders : public OAIObject {
public:
    OAIResponseHeadersPolicyAccessControlAllowHeaders();
    OAIResponseHeadersPolicyAccessControlAllowHeaders(QString json);
    ~OAIResponseHeadersPolicyAccessControlAllowHeaders() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QList getItems() const;
    void setItems(const QList &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QList m_items;
    bool m_items_isSet;
    bool m_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseHeadersPolicyAccessControlAllowHeaders)

#endif // OAIResponseHeadersPolicyAccessControlAllowHeaders_H
