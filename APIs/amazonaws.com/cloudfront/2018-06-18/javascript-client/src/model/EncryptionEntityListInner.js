/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-06-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionEntity from './EncryptionEntity';
import EncryptionEntityFieldPatterns from './EncryptionEntityFieldPatterns';

/**
 * The EncryptionEntityListInner model module.
 * @module model/EncryptionEntityListInner
 * @version 2018-06-18
 */
class EncryptionEntityListInner {
    /**
     * Constructs a new <code>EncryptionEntityListInner</code>.
     * @alias module:model/EncryptionEntityListInner
     * @implements module:model/EncryptionEntity
     * @param publicKeyId {String} 
     * @param providerId {String} 
     * @param fieldPatterns {module:model/EncryptionEntityFieldPatterns} 
     */
    constructor(publicKeyId, providerId, fieldPatterns) { 
        EncryptionEntity.initialize(this, publicKeyId, providerId, fieldPatterns);
        EncryptionEntityListInner.initialize(this, publicKeyId, providerId, fieldPatterns);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, publicKeyId, providerId, fieldPatterns) { 
        obj['PublicKeyId'] = publicKeyId;
        obj['ProviderId'] = providerId;
        obj['FieldPatterns'] = fieldPatterns;
    }

    /**
     * Constructs a <code>EncryptionEntityListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EncryptionEntityListInner} obj Optional instance to populate.
     * @return {module:model/EncryptionEntityListInner} The populated <code>EncryptionEntityListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EncryptionEntityListInner();
            EncryptionEntity.constructFromObject(data, obj);

            if (data.hasOwnProperty('PublicKeyId')) {
                obj['PublicKeyId'] = ApiClient.convertToType(data['PublicKeyId'], 'String');
            }
            if (data.hasOwnProperty('ProviderId')) {
                obj['ProviderId'] = ApiClient.convertToType(data['ProviderId'], 'String');
            }
            if (data.hasOwnProperty('FieldPatterns')) {
                obj['FieldPatterns'] = EncryptionEntityFieldPatterns.constructFromObject(data['FieldPatterns']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EncryptionEntityListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EncryptionEntityListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EncryptionEntityListInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PublicKeyId`
        if (data['PublicKeyId']) { // data not null
          String.validateJSON(data['PublicKeyId']);
        }
        // validate the optional field `ProviderId`
        if (data['ProviderId']) { // data not null
          String.validateJSON(data['ProviderId']);
        }
        // validate the optional field `FieldPatterns`
        if (data['FieldPatterns']) { // data not null
          EncryptionEntityFieldPatterns.validateJSON(data['FieldPatterns']);
        }

        return true;
    }


}

EncryptionEntityListInner.RequiredProperties = ["PublicKeyId", "ProviderId", "FieldPatterns"];

/**
 * @member {String} PublicKeyId
 */
EncryptionEntityListInner.prototype['PublicKeyId'] = undefined;

/**
 * @member {String} ProviderId
 */
EncryptionEntityListInner.prototype['ProviderId'] = undefined;

/**
 * @member {module:model/EncryptionEntityFieldPatterns} FieldPatterns
 */
EncryptionEntityListInner.prototype['FieldPatterns'] = undefined;


// Implement EncryptionEntity interface:
/**
 * @member {String} PublicKeyId
 */
EncryptionEntity.prototype['PublicKeyId'] = undefined;
/**
 * @member {String} ProviderId
 */
EncryptionEntity.prototype['ProviderId'] = undefined;
/**
 * @member {module:model/EncryptionEntityFieldPatterns} FieldPatterns
 */
EncryptionEntity.prototype['FieldPatterns'] = undefined;




export default EncryptionEntityListInner;

