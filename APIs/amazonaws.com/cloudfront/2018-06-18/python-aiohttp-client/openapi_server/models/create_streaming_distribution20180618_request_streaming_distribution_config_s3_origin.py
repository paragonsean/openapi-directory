# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, origin_access_identity: str=None):
        """CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin - a model defined in OpenAPI

        :param domain_name: The domain_name of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        :param origin_access_identity: The origin_access_identity of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        """
        self.openapi_types = {
            'domain_name': str,
            'origin_access_identity': str
        }

        self.attribute_map = {
            'domain_name': 'DomainName',
            'origin_access_identity': 'OriginAccessIdentity'
        }

        self._domain_name = domain_name
        self._origin_access_identity = origin_access_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStreamingDistribution2018_06_18_request_StreamingDistributionConfig_S3Origin of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.


        :return: The domain_name of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.


        :param domain_name: The domain_name of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        :type domain_name: str
        """
        if domain_name is None:
            raise ValueError("Invalid value for `domain_name`, must not be `None`")

        self._domain_name = domain_name

    @property
    def origin_access_identity(self):
        """Gets the origin_access_identity of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.


        :return: The origin_access_identity of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        :rtype: str
        """
        return self._origin_access_identity

    @origin_access_identity.setter
    def origin_access_identity(self, origin_access_identity):
        """Sets the origin_access_identity of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.


        :param origin_access_identity: The origin_access_identity of this CreateStreamingDistribution20180618RequestStreamingDistributionConfigS3Origin.
        :type origin_access_identity: str
        """
        if origin_access_identity is None:
            raise ValueError("Invalid value for `origin_access_identity`, must not be `None`")

        self._origin_access_identity = origin_access_identity
