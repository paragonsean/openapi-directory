# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.untag_resource20180618_request_tag_keys import UntagResource20180618RequestTagKeys
from openapi_server import util


class UntagResource20180618Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_keys: UntagResource20180618RequestTagKeys=None):
        """UntagResource20180618Request - a model defined in OpenAPI

        :param tag_keys: The tag_keys of this UntagResource20180618Request.
        """
        self.openapi_types = {
            'tag_keys': UntagResource20180618RequestTagKeys
        }

        self.attribute_map = {
            'tag_keys': 'TagKeys'
        }

        self._tag_keys = tag_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UntagResource20180618Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UntagResource2018_06_18_request of this UntagResource20180618Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_keys(self):
        """Gets the tag_keys of this UntagResource20180618Request.


        :return: The tag_keys of this UntagResource20180618Request.
        :rtype: UntagResource20180618RequestTagKeys
        """
        return self._tag_keys

    @tag_keys.setter
    def tag_keys(self, tag_keys):
        """Sets the tag_keys of this UntagResource20180618Request.


        :param tag_keys: The tag_keys of this UntagResource20180618Request.
        :type tag_keys: UntagResource20180618RequestTagKeys
        """
        if tag_keys is None:
            raise ValueError("Invalid value for `tag_keys`, must not be `None`")

        self._tag_keys = tag_keys
