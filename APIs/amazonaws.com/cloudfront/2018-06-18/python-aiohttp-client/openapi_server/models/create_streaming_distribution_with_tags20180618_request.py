# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_streaming_distribution_with_tags20180618_request_streaming_distribution_config_with_tags import CreateStreamingDistributionWithTags20180618RequestStreamingDistributionConfigWithTags
from openapi_server import util


class CreateStreamingDistributionWithTags20180618Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_distribution_config_with_tags: CreateStreamingDistributionWithTags20180618RequestStreamingDistributionConfigWithTags=None):
        """CreateStreamingDistributionWithTags20180618Request - a model defined in OpenAPI

        :param streaming_distribution_config_with_tags: The streaming_distribution_config_with_tags of this CreateStreamingDistributionWithTags20180618Request.
        """
        self.openapi_types = {
            'streaming_distribution_config_with_tags': CreateStreamingDistributionWithTags20180618RequestStreamingDistributionConfigWithTags
        }

        self.attribute_map = {
            'streaming_distribution_config_with_tags': 'StreamingDistributionConfigWithTags'
        }

        self._streaming_distribution_config_with_tags = streaming_distribution_config_with_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStreamingDistributionWithTags20180618Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStreamingDistributionWithTags2018_06_18_request of this CreateStreamingDistributionWithTags20180618Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_distribution_config_with_tags(self):
        """Gets the streaming_distribution_config_with_tags of this CreateStreamingDistributionWithTags20180618Request.


        :return: The streaming_distribution_config_with_tags of this CreateStreamingDistributionWithTags20180618Request.
        :rtype: CreateStreamingDistributionWithTags20180618RequestStreamingDistributionConfigWithTags
        """
        return self._streaming_distribution_config_with_tags

    @streaming_distribution_config_with_tags.setter
    def streaming_distribution_config_with_tags(self, streaming_distribution_config_with_tags):
        """Sets the streaming_distribution_config_with_tags of this CreateStreamingDistributionWithTags20180618Request.


        :param streaming_distribution_config_with_tags: The streaming_distribution_config_with_tags of this CreateStreamingDistributionWithTags20180618Request.
        :type streaming_distribution_config_with_tags: CreateStreamingDistributionWithTags20180618RequestStreamingDistributionConfigWithTags
        """
        if streaming_distribution_config_with_tags is None:
            raise ValueError("Invalid value for `streaming_distribution_config_with_tags`, must not be `None`")

        self._streaming_distribution_config_with_tags = streaming_distribution_config_with_tags
