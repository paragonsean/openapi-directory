# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_public_key20180618_request_public_key_config import CreatePublicKey20180618RequestPublicKeyConfig
from openapi_server import util


class CreatePublicKey20180618Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public_key_config: CreatePublicKey20180618RequestPublicKeyConfig=None):
        """CreatePublicKey20180618Request - a model defined in OpenAPI

        :param public_key_config: The public_key_config of this CreatePublicKey20180618Request.
        """
        self.openapi_types = {
            'public_key_config': CreatePublicKey20180618RequestPublicKeyConfig
        }

        self.attribute_map = {
            'public_key_config': 'PublicKeyConfig'
        }

        self._public_key_config = public_key_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePublicKey20180618Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePublicKey2018_06_18_request of this CreatePublicKey20180618Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_key_config(self):
        """Gets the public_key_config of this CreatePublicKey20180618Request.


        :return: The public_key_config of this CreatePublicKey20180618Request.
        :rtype: CreatePublicKey20180618RequestPublicKeyConfig
        """
        return self._public_key_config

    @public_key_config.setter
    def public_key_config(self, public_key_config):
        """Sets the public_key_config of this CreatePublicKey20180618Request.


        :param public_key_config: The public_key_config of this CreatePublicKey20180618Request.
        :type public_key_config: CreatePublicKey20180618RequestPublicKeyConfig
        """
        if public_key_config is None:
            raise ValueError("Invalid value for `public_key_config`, must not be `None`")

        self._public_key_config = public_key_config
