/*
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-06-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateDistribution20180618RequestDistributionConfigAliases;
import org.openapitools.client.model.CreateDistribution20180618RequestDistributionConfigCacheBehaviors;
import org.openapitools.client.model.CreateDistribution20180618RequestDistributionConfigCustomErrorResponses;
import org.openapitools.client.model.CreateDistribution20180618RequestDistributionConfigDefaultCacheBehavior;
import org.openapitools.client.model.CreateDistribution20180618RequestDistributionConfigLogging;
import org.openapitools.client.model.CreateDistribution20180618RequestDistributionConfigOrigins;
import org.openapitools.client.model.HttpVersion;
import org.openapitools.client.model.PriceClass;
import org.openapitools.client.model.Restrictions;
import org.openapitools.client.model.ViewerCertificate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A distribution configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:40.036732-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DistributionConfig {
  public static final String SERIALIZED_NAME_CALLER_REFERENCE = "CallerReference";
  @SerializedName(SERIALIZED_NAME_CALLER_REFERENCE)
  private String callerReference;

  public static final String SERIALIZED_NAME_ALIASES = "Aliases";
  @SerializedName(SERIALIZED_NAME_ALIASES)
  private CreateDistribution20180618RequestDistributionConfigAliases aliases;

  public static final String SERIALIZED_NAME_DEFAULT_ROOT_OBJECT = "DefaultRootObject";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROOT_OBJECT)
  private String defaultRootObject;

  public static final String SERIALIZED_NAME_ORIGINS = "Origins";
  @SerializedName(SERIALIZED_NAME_ORIGINS)
  private CreateDistribution20180618RequestDistributionConfigOrigins origins;

  public static final String SERIALIZED_NAME_DEFAULT_CACHE_BEHAVIOR = "DefaultCacheBehavior";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CACHE_BEHAVIOR)
  private CreateDistribution20180618RequestDistributionConfigDefaultCacheBehavior defaultCacheBehavior;

  public static final String SERIALIZED_NAME_CACHE_BEHAVIORS = "CacheBehaviors";
  @SerializedName(SERIALIZED_NAME_CACHE_BEHAVIORS)
  private CreateDistribution20180618RequestDistributionConfigCacheBehaviors cacheBehaviors;

  public static final String SERIALIZED_NAME_CUSTOM_ERROR_RESPONSES = "CustomErrorResponses";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ERROR_RESPONSES)
  private CreateDistribution20180618RequestDistributionConfigCustomErrorResponses customErrorResponses;

  public static final String SERIALIZED_NAME_COMMENT = "Comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_LOGGING = "Logging";
  @SerializedName(SERIALIZED_NAME_LOGGING)
  private CreateDistribution20180618RequestDistributionConfigLogging logging;

  public static final String SERIALIZED_NAME_PRICE_CLASS = "PriceClass";
  @SerializedName(SERIALIZED_NAME_PRICE_CLASS)
  private PriceClass priceClass;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_VIEWER_CERTIFICATE = "ViewerCertificate";
  @SerializedName(SERIALIZED_NAME_VIEWER_CERTIFICATE)
  private ViewerCertificate viewerCertificate;

  public static final String SERIALIZED_NAME_RESTRICTIONS = "Restrictions";
  @SerializedName(SERIALIZED_NAME_RESTRICTIONS)
  private Restrictions restrictions;

  public static final String SERIALIZED_NAME_WEB_A_C_L_ID = "WebACLId";
  @SerializedName(SERIALIZED_NAME_WEB_A_C_L_ID)
  private String webACLId;

  public static final String SERIALIZED_NAME_HTTP_VERSION = "HttpVersion";
  @SerializedName(SERIALIZED_NAME_HTTP_VERSION)
  private HttpVersion httpVersion;

  public static final String SERIALIZED_NAME_IS_I_P_V6_ENABLED = "IsIPV6Enabled";
  @SerializedName(SERIALIZED_NAME_IS_I_P_V6_ENABLED)
  private Boolean isIPV6Enabled;

  public DistributionConfig() {
  }

  public DistributionConfig callerReference(String callerReference) {
    this.callerReference = callerReference;
    return this;
  }

  /**
   * Get callerReference
   * @return callerReference
   */
  @javax.annotation.Nonnull
  public String getCallerReference() {
    return callerReference;
  }

  public void setCallerReference(String callerReference) {
    this.callerReference = callerReference;
  }


  public DistributionConfig aliases(CreateDistribution20180618RequestDistributionConfigAliases aliases) {
    this.aliases = aliases;
    return this;
  }

  /**
   * Get aliases
   * @return aliases
   */
  @javax.annotation.Nullable
  public CreateDistribution20180618RequestDistributionConfigAliases getAliases() {
    return aliases;
  }

  public void setAliases(CreateDistribution20180618RequestDistributionConfigAliases aliases) {
    this.aliases = aliases;
  }


  public DistributionConfig defaultRootObject(String defaultRootObject) {
    this.defaultRootObject = defaultRootObject;
    return this;
  }

  /**
   * Get defaultRootObject
   * @return defaultRootObject
   */
  @javax.annotation.Nullable
  public String getDefaultRootObject() {
    return defaultRootObject;
  }

  public void setDefaultRootObject(String defaultRootObject) {
    this.defaultRootObject = defaultRootObject;
  }


  public DistributionConfig origins(CreateDistribution20180618RequestDistributionConfigOrigins origins) {
    this.origins = origins;
    return this;
  }

  /**
   * Get origins
   * @return origins
   */
  @javax.annotation.Nonnull
  public CreateDistribution20180618RequestDistributionConfigOrigins getOrigins() {
    return origins;
  }

  public void setOrigins(CreateDistribution20180618RequestDistributionConfigOrigins origins) {
    this.origins = origins;
  }


  public DistributionConfig defaultCacheBehavior(CreateDistribution20180618RequestDistributionConfigDefaultCacheBehavior defaultCacheBehavior) {
    this.defaultCacheBehavior = defaultCacheBehavior;
    return this;
  }

  /**
   * Get defaultCacheBehavior
   * @return defaultCacheBehavior
   */
  @javax.annotation.Nonnull
  public CreateDistribution20180618RequestDistributionConfigDefaultCacheBehavior getDefaultCacheBehavior() {
    return defaultCacheBehavior;
  }

  public void setDefaultCacheBehavior(CreateDistribution20180618RequestDistributionConfigDefaultCacheBehavior defaultCacheBehavior) {
    this.defaultCacheBehavior = defaultCacheBehavior;
  }


  public DistributionConfig cacheBehaviors(CreateDistribution20180618RequestDistributionConfigCacheBehaviors cacheBehaviors) {
    this.cacheBehaviors = cacheBehaviors;
    return this;
  }

  /**
   * Get cacheBehaviors
   * @return cacheBehaviors
   */
  @javax.annotation.Nullable
  public CreateDistribution20180618RequestDistributionConfigCacheBehaviors getCacheBehaviors() {
    return cacheBehaviors;
  }

  public void setCacheBehaviors(CreateDistribution20180618RequestDistributionConfigCacheBehaviors cacheBehaviors) {
    this.cacheBehaviors = cacheBehaviors;
  }


  public DistributionConfig customErrorResponses(CreateDistribution20180618RequestDistributionConfigCustomErrorResponses customErrorResponses) {
    this.customErrorResponses = customErrorResponses;
    return this;
  }

  /**
   * Get customErrorResponses
   * @return customErrorResponses
   */
  @javax.annotation.Nullable
  public CreateDistribution20180618RequestDistributionConfigCustomErrorResponses getCustomErrorResponses() {
    return customErrorResponses;
  }

  public void setCustomErrorResponses(CreateDistribution20180618RequestDistributionConfigCustomErrorResponses customErrorResponses) {
    this.customErrorResponses = customErrorResponses;
  }


  public DistributionConfig comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nonnull
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public DistributionConfig logging(CreateDistribution20180618RequestDistributionConfigLogging logging) {
    this.logging = logging;
    return this;
  }

  /**
   * Get logging
   * @return logging
   */
  @javax.annotation.Nullable
  public CreateDistribution20180618RequestDistributionConfigLogging getLogging() {
    return logging;
  }

  public void setLogging(CreateDistribution20180618RequestDistributionConfigLogging logging) {
    this.logging = logging;
  }


  public DistributionConfig priceClass(PriceClass priceClass) {
    this.priceClass = priceClass;
    return this;
  }

  /**
   * Get priceClass
   * @return priceClass
   */
  @javax.annotation.Nullable
  public PriceClass getPriceClass() {
    return priceClass;
  }

  public void setPriceClass(PriceClass priceClass) {
    this.priceClass = priceClass;
  }


  public DistributionConfig enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public DistributionConfig viewerCertificate(ViewerCertificate viewerCertificate) {
    this.viewerCertificate = viewerCertificate;
    return this;
  }

  /**
   * Get viewerCertificate
   * @return viewerCertificate
   */
  @javax.annotation.Nullable
  public ViewerCertificate getViewerCertificate() {
    return viewerCertificate;
  }

  public void setViewerCertificate(ViewerCertificate viewerCertificate) {
    this.viewerCertificate = viewerCertificate;
  }


  public DistributionConfig restrictions(Restrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  /**
   * Get restrictions
   * @return restrictions
   */
  @javax.annotation.Nullable
  public Restrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(Restrictions restrictions) {
    this.restrictions = restrictions;
  }


  public DistributionConfig webACLId(String webACLId) {
    this.webACLId = webACLId;
    return this;
  }

  /**
   * Get webACLId
   * @return webACLId
   */
  @javax.annotation.Nullable
  public String getWebACLId() {
    return webACLId;
  }

  public void setWebACLId(String webACLId) {
    this.webACLId = webACLId;
  }


  public DistributionConfig httpVersion(HttpVersion httpVersion) {
    this.httpVersion = httpVersion;
    return this;
  }

  /**
   * Get httpVersion
   * @return httpVersion
   */
  @javax.annotation.Nullable
  public HttpVersion getHttpVersion() {
    return httpVersion;
  }

  public void setHttpVersion(HttpVersion httpVersion) {
    this.httpVersion = httpVersion;
  }


  public DistributionConfig isIPV6Enabled(Boolean isIPV6Enabled) {
    this.isIPV6Enabled = isIPV6Enabled;
    return this;
  }

  /**
   * Get isIPV6Enabled
   * @return isIPV6Enabled
   */
  @javax.annotation.Nullable
  public Boolean getIsIPV6Enabled() {
    return isIPV6Enabled;
  }

  public void setIsIPV6Enabled(Boolean isIPV6Enabled) {
    this.isIPV6Enabled = isIPV6Enabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DistributionConfig distributionConfig = (DistributionConfig) o;
    return Objects.equals(this.callerReference, distributionConfig.callerReference) &&
        Objects.equals(this.aliases, distributionConfig.aliases) &&
        Objects.equals(this.defaultRootObject, distributionConfig.defaultRootObject) &&
        Objects.equals(this.origins, distributionConfig.origins) &&
        Objects.equals(this.defaultCacheBehavior, distributionConfig.defaultCacheBehavior) &&
        Objects.equals(this.cacheBehaviors, distributionConfig.cacheBehaviors) &&
        Objects.equals(this.customErrorResponses, distributionConfig.customErrorResponses) &&
        Objects.equals(this.comment, distributionConfig.comment) &&
        Objects.equals(this.logging, distributionConfig.logging) &&
        Objects.equals(this.priceClass, distributionConfig.priceClass) &&
        Objects.equals(this.enabled, distributionConfig.enabled) &&
        Objects.equals(this.viewerCertificate, distributionConfig.viewerCertificate) &&
        Objects.equals(this.restrictions, distributionConfig.restrictions) &&
        Objects.equals(this.webACLId, distributionConfig.webACLId) &&
        Objects.equals(this.httpVersion, distributionConfig.httpVersion) &&
        Objects.equals(this.isIPV6Enabled, distributionConfig.isIPV6Enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callerReference, aliases, defaultRootObject, origins, defaultCacheBehavior, cacheBehaviors, customErrorResponses, comment, logging, priceClass, enabled, viewerCertificate, restrictions, webACLId, httpVersion, isIPV6Enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DistributionConfig {\n");
    sb.append("    callerReference: ").append(toIndentedString(callerReference)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    defaultRootObject: ").append(toIndentedString(defaultRootObject)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    defaultCacheBehavior: ").append(toIndentedString(defaultCacheBehavior)).append("\n");
    sb.append("    cacheBehaviors: ").append(toIndentedString(cacheBehaviors)).append("\n");
    sb.append("    customErrorResponses: ").append(toIndentedString(customErrorResponses)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    logging: ").append(toIndentedString(logging)).append("\n");
    sb.append("    priceClass: ").append(toIndentedString(priceClass)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    viewerCertificate: ").append(toIndentedString(viewerCertificate)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    webACLId: ").append(toIndentedString(webACLId)).append("\n");
    sb.append("    httpVersion: ").append(toIndentedString(httpVersion)).append("\n");
    sb.append("    isIPV6Enabled: ").append(toIndentedString(isIPV6Enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CallerReference");
    openapiFields.add("Aliases");
    openapiFields.add("DefaultRootObject");
    openapiFields.add("Origins");
    openapiFields.add("DefaultCacheBehavior");
    openapiFields.add("CacheBehaviors");
    openapiFields.add("CustomErrorResponses");
    openapiFields.add("Comment");
    openapiFields.add("Logging");
    openapiFields.add("PriceClass");
    openapiFields.add("Enabled");
    openapiFields.add("ViewerCertificate");
    openapiFields.add("Restrictions");
    openapiFields.add("WebACLId");
    openapiFields.add("HttpVersion");
    openapiFields.add("IsIPV6Enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CallerReference");
    openapiRequiredFields.add("Origins");
    openapiRequiredFields.add("DefaultCacheBehavior");
    openapiRequiredFields.add("Comment");
    openapiRequiredFields.add("Enabled");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DistributionConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DistributionConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DistributionConfig is not found in the empty JSON string", DistributionConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DistributionConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DistributionConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DistributionConfig.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `CallerReference`
      String.validateJsonElement(jsonObj.get("CallerReference"));
      // validate the optional field `Aliases`
      if (jsonObj.get("Aliases") != null && !jsonObj.get("Aliases").isJsonNull()) {
        CreateDistribution20180618RequestDistributionConfigAliases.validateJsonElement(jsonObj.get("Aliases"));
      }
      // validate the optional field `DefaultRootObject`
      if (jsonObj.get("DefaultRootObject") != null && !jsonObj.get("DefaultRootObject").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultRootObject"));
      }
      // validate the required field `Origins`
      CreateDistribution20180618RequestDistributionConfigOrigins.validateJsonElement(jsonObj.get("Origins"));
      // validate the required field `DefaultCacheBehavior`
      CreateDistribution20180618RequestDistributionConfigDefaultCacheBehavior.validateJsonElement(jsonObj.get("DefaultCacheBehavior"));
      // validate the optional field `CacheBehaviors`
      if (jsonObj.get("CacheBehaviors") != null && !jsonObj.get("CacheBehaviors").isJsonNull()) {
        CreateDistribution20180618RequestDistributionConfigCacheBehaviors.validateJsonElement(jsonObj.get("CacheBehaviors"));
      }
      // validate the optional field `CustomErrorResponses`
      if (jsonObj.get("CustomErrorResponses") != null && !jsonObj.get("CustomErrorResponses").isJsonNull()) {
        CreateDistribution20180618RequestDistributionConfigCustomErrorResponses.validateJsonElement(jsonObj.get("CustomErrorResponses"));
      }
      // validate the required field `Comment`
      String.validateJsonElement(jsonObj.get("Comment"));
      // validate the optional field `Logging`
      if (jsonObj.get("Logging") != null && !jsonObj.get("Logging").isJsonNull()) {
        CreateDistribution20180618RequestDistributionConfigLogging.validateJsonElement(jsonObj.get("Logging"));
      }
      // validate the optional field `PriceClass`
      if (jsonObj.get("PriceClass") != null && !jsonObj.get("PriceClass").isJsonNull()) {
        PriceClass.validateJsonElement(jsonObj.get("PriceClass"));
      }
      // validate the required field `Enabled`
      Boolean.validateJsonElement(jsonObj.get("Enabled"));
      // validate the optional field `ViewerCertificate`
      if (jsonObj.get("ViewerCertificate") != null && !jsonObj.get("ViewerCertificate").isJsonNull()) {
        ViewerCertificate.validateJsonElement(jsonObj.get("ViewerCertificate"));
      }
      // validate the optional field `Restrictions`
      if (jsonObj.get("Restrictions") != null && !jsonObj.get("Restrictions").isJsonNull()) {
        Restrictions.validateJsonElement(jsonObj.get("Restrictions"));
      }
      // validate the optional field `WebACLId`
      if (jsonObj.get("WebACLId") != null && !jsonObj.get("WebACLId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WebACLId"));
      }
      // validate the optional field `HttpVersion`
      if (jsonObj.get("HttpVersion") != null && !jsonObj.get("HttpVersion").isJsonNull()) {
        HttpVersion.validateJsonElement(jsonObj.get("HttpVersion"));
      }
      // validate the optional field `IsIPV6Enabled`
      if (jsonObj.get("IsIPV6Enabled") != null && !jsonObj.get("IsIPV6Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsIPV6Enabled"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DistributionConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DistributionConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DistributionConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DistributionConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<DistributionConfig>() {
           @Override
           public void write(JsonWriter out, DistributionConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DistributionConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DistributionConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DistributionConfig
   * @throws IOException if the JSON string is invalid with respect to DistributionConfig
   */
  public static DistributionConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DistributionConfig.class);
  }

  /**
   * Convert an instance of DistributionConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

