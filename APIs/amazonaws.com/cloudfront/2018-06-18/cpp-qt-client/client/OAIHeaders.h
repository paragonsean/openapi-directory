/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-06-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeaders.h
 *
 * &lt;p&gt;A complex type that specifies the request headers, if any, that you want CloudFront to base caching on for this cache behavior. &lt;/p&gt; &lt;p&gt;For the headers that you specify, CloudFront caches separate versions of a specified object based on the header values in viewer requests. For example, suppose viewer requests for &lt;code&gt;logo.jpg&lt;/code&gt; contain a custom &lt;code&gt;product&lt;/code&gt; header that has a value of either &lt;code&gt;acme&lt;/code&gt; or &lt;code&gt;apex&lt;/code&gt;, and you configure CloudFront to cache your content based on values in the &lt;code&gt;product&lt;/code&gt; header. CloudFront forwards the &lt;code&gt;product&lt;/code&gt; header to the origin and caches the response from the origin once for each header value. For more information about caching based on header values, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html\&quot;&gt;How CloudFront Forwards and Caches Headers&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIHeaders_H
#define OAIHeaders_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHeaders : public OAIObject {
public:
    OAIHeaders();
    OAIHeaders(QString json);
    ~OAIHeaders() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QList getItems() const;
    void setItems(const QList &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QList m_items;
    bool m_items_isSet;
    bool m_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHeaders)

#endif // OAIHeaders_H
