/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-06-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig() {
    this->initializeModel();
}

OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::~OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig() {}

void OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::initializeModel() {

    m_forward_when_content_type_is_unknown_isSet = false;
    m_forward_when_content_type_is_unknown_isValid = false;

    m_content_type_profiles_isSet = false;
    m_content_type_profiles_isValid = false;
}

void OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::fromJsonObject(QJsonObject json) {

    m_forward_when_content_type_is_unknown_isValid = ::OpenAPI::fromJsonValue(m_forward_when_content_type_is_unknown, json[QString("ForwardWhenContentTypeIsUnknown")]);
    m_forward_when_content_type_is_unknown_isSet = !json[QString("ForwardWhenContentTypeIsUnknown")].isNull() && m_forward_when_content_type_is_unknown_isValid;

    m_content_type_profiles_isValid = ::OpenAPI::fromJsonValue(m_content_type_profiles, json[QString("ContentTypeProfiles")]);
    m_content_type_profiles_isSet = !json[QString("ContentTypeProfiles")].isNull() && m_content_type_profiles_isValid;
}

QString OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_forward_when_content_type_is_unknown_isSet) {
        obj.insert(QString("ForwardWhenContentTypeIsUnknown"), ::OpenAPI::toJsonValue(m_forward_when_content_type_is_unknown));
    }
    if (m_content_type_profiles.isSet()) {
        obj.insert(QString("ContentTypeProfiles"), ::OpenAPI::toJsonValue(m_content_type_profiles));
    }
    return obj;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::getForwardWhenContentTypeIsUnknown() const {
    return m_forward_when_content_type_is_unknown;
}
void OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::setForwardWhenContentTypeIsUnknown(const bool &forward_when_content_type_is_unknown) {
    m_forward_when_content_type_is_unknown = forward_when_content_type_is_unknown;
    m_forward_when_content_type_is_unknown_isSet = true;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::is_forward_when_content_type_is_unknown_Set() const{
    return m_forward_when_content_type_is_unknown_isSet;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::is_forward_when_content_type_is_unknown_Valid() const{
    return m_forward_when_content_type_is_unknown_isValid;
}

OAIContentTypeProfileConfig_ContentTypeProfiles OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::getContentTypeProfiles() const {
    return m_content_type_profiles;
}
void OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::setContentTypeProfiles(const OAIContentTypeProfileConfig_ContentTypeProfiles &content_type_profiles) {
    m_content_type_profiles = content_type_profiles;
    m_content_type_profiles_isSet = true;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::is_content_type_profiles_Set() const{
    return m_content_type_profiles_isSet;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::is_content_type_profiles_Valid() const{
    return m_content_type_profiles_isValid;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_forward_when_content_type_is_unknown_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_type_profiles.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFieldLevelEncryptionSummary_ContentTypeProfileConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_forward_when_content_type_is_unknown_isValid && true;
}

} // namespace OpenAPI
