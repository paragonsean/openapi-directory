/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-06-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICookiePreference.h
 *
 * A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html\&quot;&gt;How CloudFront Forwards, Caches, and Logs Cookies&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.
 */

#ifndef OAICookiePreference_H
#define OAICookiePreference_H

#include <QJsonObject>

#include "OAICookiePreference_WhitelistedNames.h"
#include "OAIItemSelection.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICookiePreference_WhitelistedNames;

class OAICookiePreference : public OAIObject {
public:
    OAICookiePreference();
    OAICookiePreference(QString json);
    ~OAICookiePreference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIItemSelection getForward() const;
    void setForward(const OAIItemSelection &forward);
    bool is_forward_Set() const;
    bool is_forward_Valid() const;

    OAICookiePreference_WhitelistedNames getWhitelistedNames() const;
    void setWhitelistedNames(const OAICookiePreference_WhitelistedNames &whitelisted_names);
    bool is_whitelisted_names_Set() const;
    bool is_whitelisted_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIItemSelection m_forward;
    bool m_forward_isSet;
    bool m_forward_isValid;

    OAICookiePreference_WhitelistedNames m_whitelisted_names;
    bool m_whitelisted_names_isSet;
    bool m_whitelisted_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICookiePreference)

#endif // OAICookiePreference_H
