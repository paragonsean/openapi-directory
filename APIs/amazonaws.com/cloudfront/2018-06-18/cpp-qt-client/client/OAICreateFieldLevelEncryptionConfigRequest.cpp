/**
 * Amazon CloudFront
 * <fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-06-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFieldLevelEncryptionConfigRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFieldLevelEncryptionConfigRequest::OAICreateFieldLevelEncryptionConfigRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFieldLevelEncryptionConfigRequest::OAICreateFieldLevelEncryptionConfigRequest() {
    this->initializeModel();
}

OAICreateFieldLevelEncryptionConfigRequest::~OAICreateFieldLevelEncryptionConfigRequest() {}

void OAICreateFieldLevelEncryptionConfigRequest::initializeModel() {

    m_field_level_encryption_config_isSet = false;
    m_field_level_encryption_config_isValid = false;
}

void OAICreateFieldLevelEncryptionConfigRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFieldLevelEncryptionConfigRequest::fromJsonObject(QJsonObject json) {

    m_field_level_encryption_config_isValid = ::OpenAPI::fromJsonValue(m_field_level_encryption_config, json[QString("FieldLevelEncryptionConfig")]);
    m_field_level_encryption_config_isSet = !json[QString("FieldLevelEncryptionConfig")].isNull() && m_field_level_encryption_config_isValid;
}

QString OAICreateFieldLevelEncryptionConfigRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFieldLevelEncryptionConfigRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_field_level_encryption_config.isSet()) {
        obj.insert(QString("FieldLevelEncryptionConfig"), ::OpenAPI::toJsonValue(m_field_level_encryption_config));
    }
    return obj;
}

OAICreateFieldLevelEncryptionConfigRequest_FieldLevelEncryptionConfig OAICreateFieldLevelEncryptionConfigRequest::getFieldLevelEncryptionConfig() const {
    return m_field_level_encryption_config;
}
void OAICreateFieldLevelEncryptionConfigRequest::setFieldLevelEncryptionConfig(const OAICreateFieldLevelEncryptionConfigRequest_FieldLevelEncryptionConfig &field_level_encryption_config) {
    m_field_level_encryption_config = field_level_encryption_config;
    m_field_level_encryption_config_isSet = true;
}

bool OAICreateFieldLevelEncryptionConfigRequest::is_field_level_encryption_config_Set() const{
    return m_field_level_encryption_config_isSet;
}

bool OAICreateFieldLevelEncryptionConfigRequest::is_field_level_encryption_config_Valid() const{
    return m_field_level_encryption_config_isValid;
}

bool OAICreateFieldLevelEncryptionConfigRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_level_encryption_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFieldLevelEncryptionConfigRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_field_level_encryption_config_isValid && true;
}

} // namespace OpenAPI
