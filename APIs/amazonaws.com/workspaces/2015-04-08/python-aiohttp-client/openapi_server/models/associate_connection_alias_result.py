# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociateConnectionAliasResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_identifier: str=None):
        """AssociateConnectionAliasResult - a model defined in OpenAPI

        :param connection_identifier: The connection_identifier of this AssociateConnectionAliasResult.
        """
        self.openapi_types = {
            'connection_identifier': str
        }

        self.attribute_map = {
            'connection_identifier': 'ConnectionIdentifier'
        }

        self._connection_identifier = connection_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateConnectionAliasResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateConnectionAliasResult of this AssociateConnectionAliasResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_identifier(self):
        """Gets the connection_identifier of this AssociateConnectionAliasResult.


        :return: The connection_identifier of this AssociateConnectionAliasResult.
        :rtype: str
        """
        return self._connection_identifier

    @connection_identifier.setter
    def connection_identifier(self, connection_identifier):
        """Sets the connection_identifier of this AssociateConnectionAliasResult.


        :param connection_identifier: The connection_identifier of this AssociateConnectionAliasResult.
        :type connection_identifier: str
        """

        self._connection_identifier = connection_identifier
