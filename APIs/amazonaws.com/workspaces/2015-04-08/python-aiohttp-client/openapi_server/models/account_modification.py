# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dedicated_tenancy_modification_state_enum import DedicatedTenancyModificationStateEnum
from openapi_server.models.dedicated_tenancy_support_result_enum import DedicatedTenancySupportResultEnum
from openapi_server import util


class AccountModification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, modification_state: DedicatedTenancyModificationStateEnum=None, dedicated_tenancy_support: DedicatedTenancySupportResultEnum=None, dedicated_tenancy_management_cidr_range: str=None, start_time: datetime=None, error_code: str=None, error_message: str=None):
        """AccountModification - a model defined in OpenAPI

        :param modification_state: The modification_state of this AccountModification.
        :param dedicated_tenancy_support: The dedicated_tenancy_support of this AccountModification.
        :param dedicated_tenancy_management_cidr_range: The dedicated_tenancy_management_cidr_range of this AccountModification.
        :param start_time: The start_time of this AccountModification.
        :param error_code: The error_code of this AccountModification.
        :param error_message: The error_message of this AccountModification.
        """
        self.openapi_types = {
            'modification_state': DedicatedTenancyModificationStateEnum,
            'dedicated_tenancy_support': DedicatedTenancySupportResultEnum,
            'dedicated_tenancy_management_cidr_range': str,
            'start_time': datetime,
            'error_code': str,
            'error_message': str
        }

        self.attribute_map = {
            'modification_state': 'ModificationState',
            'dedicated_tenancy_support': 'DedicatedTenancySupport',
            'dedicated_tenancy_management_cidr_range': 'DedicatedTenancyManagementCidrRange',
            'start_time': 'StartTime',
            'error_code': 'ErrorCode',
            'error_message': 'ErrorMessage'
        }

        self._modification_state = modification_state
        self._dedicated_tenancy_support = dedicated_tenancy_support
        self._dedicated_tenancy_management_cidr_range = dedicated_tenancy_management_cidr_range
        self._start_time = start_time
        self._error_code = error_code
        self._error_message = error_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountModification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountModification of this AccountModification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def modification_state(self):
        """Gets the modification_state of this AccountModification.


        :return: The modification_state of this AccountModification.
        :rtype: DedicatedTenancyModificationStateEnum
        """
        return self._modification_state

    @modification_state.setter
    def modification_state(self, modification_state):
        """Sets the modification_state of this AccountModification.


        :param modification_state: The modification_state of this AccountModification.
        :type modification_state: DedicatedTenancyModificationStateEnum
        """

        self._modification_state = modification_state

    @property
    def dedicated_tenancy_support(self):
        """Gets the dedicated_tenancy_support of this AccountModification.


        :return: The dedicated_tenancy_support of this AccountModification.
        :rtype: DedicatedTenancySupportResultEnum
        """
        return self._dedicated_tenancy_support

    @dedicated_tenancy_support.setter
    def dedicated_tenancy_support(self, dedicated_tenancy_support):
        """Sets the dedicated_tenancy_support of this AccountModification.


        :param dedicated_tenancy_support: The dedicated_tenancy_support of this AccountModification.
        :type dedicated_tenancy_support: DedicatedTenancySupportResultEnum
        """

        self._dedicated_tenancy_support = dedicated_tenancy_support

    @property
    def dedicated_tenancy_management_cidr_range(self):
        """Gets the dedicated_tenancy_management_cidr_range of this AccountModification.


        :return: The dedicated_tenancy_management_cidr_range of this AccountModification.
        :rtype: str
        """
        return self._dedicated_tenancy_management_cidr_range

    @dedicated_tenancy_management_cidr_range.setter
    def dedicated_tenancy_management_cidr_range(self, dedicated_tenancy_management_cidr_range):
        """Sets the dedicated_tenancy_management_cidr_range of this AccountModification.


        :param dedicated_tenancy_management_cidr_range: The dedicated_tenancy_management_cidr_range of this AccountModification.
        :type dedicated_tenancy_management_cidr_range: str
        """

        self._dedicated_tenancy_management_cidr_range = dedicated_tenancy_management_cidr_range

    @property
    def start_time(self):
        """Gets the start_time of this AccountModification.


        :return: The start_time of this AccountModification.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this AccountModification.


        :param start_time: The start_time of this AccountModification.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def error_code(self):
        """Gets the error_code of this AccountModification.


        :return: The error_code of this AccountModification.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this AccountModification.


        :param error_code: The error_code of this AccountModification.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this AccountModification.


        :return: The error_message of this AccountModification.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this AccountModification.


        :param error_message: The error_message of this AccountModification.
        :type error_message: str
        """

        self._error_message = error_message
