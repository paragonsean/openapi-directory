# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_type import ImageType
from openapi_server import util


class DescribeWorkspaceImagesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_ids: List=None, image_type: ImageType=None, next_token: str=None, max_results: int=None):
        """DescribeWorkspaceImagesRequest - a model defined in OpenAPI

        :param image_ids: The image_ids of this DescribeWorkspaceImagesRequest.
        :param image_type: The image_type of this DescribeWorkspaceImagesRequest.
        :param next_token: The next_token of this DescribeWorkspaceImagesRequest.
        :param max_results: The max_results of this DescribeWorkspaceImagesRequest.
        """
        self.openapi_types = {
            'image_ids': List,
            'image_type': ImageType,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'image_ids': 'ImageIds',
            'image_type': 'ImageType',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._image_ids = image_ids
        self._image_type = image_type
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkspaceImagesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkspaceImagesRequest of this DescribeWorkspaceImagesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_ids(self):
        """Gets the image_ids of this DescribeWorkspaceImagesRequest.


        :return: The image_ids of this DescribeWorkspaceImagesRequest.
        :rtype: List
        """
        return self._image_ids

    @image_ids.setter
    def image_ids(self, image_ids):
        """Sets the image_ids of this DescribeWorkspaceImagesRequest.


        :param image_ids: The image_ids of this DescribeWorkspaceImagesRequest.
        :type image_ids: List
        """

        self._image_ids = image_ids

    @property
    def image_type(self):
        """Gets the image_type of this DescribeWorkspaceImagesRequest.


        :return: The image_type of this DescribeWorkspaceImagesRequest.
        :rtype: ImageType
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        """Sets the image_type of this DescribeWorkspaceImagesRequest.


        :param image_type: The image_type of this DescribeWorkspaceImagesRequest.
        :type image_type: ImageType
        """

        self._image_type = image_type

    @property
    def next_token(self):
        """Gets the next_token of this DescribeWorkspaceImagesRequest.


        :return: The next_token of this DescribeWorkspaceImagesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeWorkspaceImagesRequest.


        :param next_token: The next_token of this DescribeWorkspaceImagesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this DescribeWorkspaceImagesRequest.


        :return: The max_results of this DescribeWorkspaceImagesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeWorkspaceImagesRequest.


        :param max_results: The max_results of this DescribeWorkspaceImagesRequest.
        :type max_results: int
        """

        self._max_results = max_results
