# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_state import ConnectionState
from openapi_server import util


class WorkspaceConnectionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_id: str=None, connection_state: ConnectionState=None, connection_state_check_timestamp: datetime=None, last_known_user_connection_timestamp: datetime=None):
        """WorkspaceConnectionStatus - a model defined in OpenAPI

        :param workspace_id: The workspace_id of this WorkspaceConnectionStatus.
        :param connection_state: The connection_state of this WorkspaceConnectionStatus.
        :param connection_state_check_timestamp: The connection_state_check_timestamp of this WorkspaceConnectionStatus.
        :param last_known_user_connection_timestamp: The last_known_user_connection_timestamp of this WorkspaceConnectionStatus.
        """
        self.openapi_types = {
            'workspace_id': str,
            'connection_state': ConnectionState,
            'connection_state_check_timestamp': datetime,
            'last_known_user_connection_timestamp': datetime
        }

        self.attribute_map = {
            'workspace_id': 'WorkspaceId',
            'connection_state': 'ConnectionState',
            'connection_state_check_timestamp': 'ConnectionStateCheckTimestamp',
            'last_known_user_connection_timestamp': 'LastKnownUserConnectionTimestamp'
        }

        self._workspace_id = workspace_id
        self._connection_state = connection_state
        self._connection_state_check_timestamp = connection_state_check_timestamp
        self._last_known_user_connection_timestamp = last_known_user_connection_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspaceConnectionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspaceConnectionStatus of this WorkspaceConnectionStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_id(self):
        """Gets the workspace_id of this WorkspaceConnectionStatus.


        :return: The workspace_id of this WorkspaceConnectionStatus.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this WorkspaceConnectionStatus.


        :param workspace_id: The workspace_id of this WorkspaceConnectionStatus.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def connection_state(self):
        """Gets the connection_state of this WorkspaceConnectionStatus.


        :return: The connection_state of this WorkspaceConnectionStatus.
        :rtype: ConnectionState
        """
        return self._connection_state

    @connection_state.setter
    def connection_state(self, connection_state):
        """Sets the connection_state of this WorkspaceConnectionStatus.


        :param connection_state: The connection_state of this WorkspaceConnectionStatus.
        :type connection_state: ConnectionState
        """

        self._connection_state = connection_state

    @property
    def connection_state_check_timestamp(self):
        """Gets the connection_state_check_timestamp of this WorkspaceConnectionStatus.


        :return: The connection_state_check_timestamp of this WorkspaceConnectionStatus.
        :rtype: datetime
        """
        return self._connection_state_check_timestamp

    @connection_state_check_timestamp.setter
    def connection_state_check_timestamp(self, connection_state_check_timestamp):
        """Sets the connection_state_check_timestamp of this WorkspaceConnectionStatus.


        :param connection_state_check_timestamp: The connection_state_check_timestamp of this WorkspaceConnectionStatus.
        :type connection_state_check_timestamp: datetime
        """

        self._connection_state_check_timestamp = connection_state_check_timestamp

    @property
    def last_known_user_connection_timestamp(self):
        """Gets the last_known_user_connection_timestamp of this WorkspaceConnectionStatus.


        :return: The last_known_user_connection_timestamp of this WorkspaceConnectionStatus.
        :rtype: datetime
        """
        return self._last_known_user_connection_timestamp

    @last_known_user_connection_timestamp.setter
    def last_known_user_connection_timestamp(self, last_known_user_connection_timestamp):
        """Sets the last_known_user_connection_timestamp of this WorkspaceConnectionStatus.


        :param last_known_user_connection_timestamp: The last_known_user_connection_timestamp of this WorkspaceConnectionStatus.
        :type last_known_user_connection_timestamp: datetime
        """

        self._last_known_user_connection_timestamp = last_known_user_connection_timestamp
