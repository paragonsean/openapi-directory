# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RebootWorkspacesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reboot_workspace_requests: List=None):
        """RebootWorkspacesRequest - a model defined in OpenAPI

        :param reboot_workspace_requests: The reboot_workspace_requests of this RebootWorkspacesRequest.
        """
        self.openapi_types = {
            'reboot_workspace_requests': List
        }

        self.attribute_map = {
            'reboot_workspace_requests': 'RebootWorkspaceRequests'
        }

        self._reboot_workspace_requests = reboot_workspace_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RebootWorkspacesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RebootWorkspacesRequest of this RebootWorkspacesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reboot_workspace_requests(self):
        """Gets the reboot_workspace_requests of this RebootWorkspacesRequest.


        :return: The reboot_workspace_requests of this RebootWorkspacesRequest.
        :rtype: List
        """
        return self._reboot_workspace_requests

    @reboot_workspace_requests.setter
    def reboot_workspace_requests(self, reboot_workspace_requests):
        """Sets the reboot_workspace_requests of this RebootWorkspacesRequest.


        :param reboot_workspace_requests: The reboot_workspace_requests of this RebootWorkspacesRequest.
        :type reboot_workspace_requests: List
        """
        if reboot_workspace_requests is None:
            raise ValueError("Invalid value for `reboot_workspace_requests`, must not be `None`")

        self._reboot_workspace_requests = reboot_workspace_requests
