# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.modify_certificate_based_auth_properties_request_certificate_based_auth_properties import ModifyCertificateBasedAuthPropertiesRequestCertificateBasedAuthProperties
from openapi_server import util


class ModifyCertificateBasedAuthPropertiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_id: str=None, certificate_based_auth_properties: ModifyCertificateBasedAuthPropertiesRequestCertificateBasedAuthProperties=None, properties_to_delete: List=None):
        """ModifyCertificateBasedAuthPropertiesRequest - a model defined in OpenAPI

        :param resource_id: The resource_id of this ModifyCertificateBasedAuthPropertiesRequest.
        :param certificate_based_auth_properties: The certificate_based_auth_properties of this ModifyCertificateBasedAuthPropertiesRequest.
        :param properties_to_delete: The properties_to_delete of this ModifyCertificateBasedAuthPropertiesRequest.
        """
        self.openapi_types = {
            'resource_id': str,
            'certificate_based_auth_properties': ModifyCertificateBasedAuthPropertiesRequestCertificateBasedAuthProperties,
            'properties_to_delete': List
        }

        self.attribute_map = {
            'resource_id': 'ResourceId',
            'certificate_based_auth_properties': 'CertificateBasedAuthProperties',
            'properties_to_delete': 'PropertiesToDelete'
        }

        self._resource_id = resource_id
        self._certificate_based_auth_properties = certificate_based_auth_properties
        self._properties_to_delete = properties_to_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyCertificateBasedAuthPropertiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyCertificateBasedAuthPropertiesRequest of this ModifyCertificateBasedAuthPropertiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id(self):
        """Gets the resource_id of this ModifyCertificateBasedAuthPropertiesRequest.


        :return: The resource_id of this ModifyCertificateBasedAuthPropertiesRequest.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ModifyCertificateBasedAuthPropertiesRequest.


        :param resource_id: The resource_id of this ModifyCertificateBasedAuthPropertiesRequest.
        :type resource_id: str
        """
        if resource_id is None:
            raise ValueError("Invalid value for `resource_id`, must not be `None`")

        self._resource_id = resource_id

    @property
    def certificate_based_auth_properties(self):
        """Gets the certificate_based_auth_properties of this ModifyCertificateBasedAuthPropertiesRequest.


        :return: The certificate_based_auth_properties of this ModifyCertificateBasedAuthPropertiesRequest.
        :rtype: ModifyCertificateBasedAuthPropertiesRequestCertificateBasedAuthProperties
        """
        return self._certificate_based_auth_properties

    @certificate_based_auth_properties.setter
    def certificate_based_auth_properties(self, certificate_based_auth_properties):
        """Sets the certificate_based_auth_properties of this ModifyCertificateBasedAuthPropertiesRequest.


        :param certificate_based_auth_properties: The certificate_based_auth_properties of this ModifyCertificateBasedAuthPropertiesRequest.
        :type certificate_based_auth_properties: ModifyCertificateBasedAuthPropertiesRequestCertificateBasedAuthProperties
        """

        self._certificate_based_auth_properties = certificate_based_auth_properties

    @property
    def properties_to_delete(self):
        """Gets the properties_to_delete of this ModifyCertificateBasedAuthPropertiesRequest.


        :return: The properties_to_delete of this ModifyCertificateBasedAuthPropertiesRequest.
        :rtype: List
        """
        return self._properties_to_delete

    @properties_to_delete.setter
    def properties_to_delete(self, properties_to_delete):
        """Sets the properties_to_delete of this ModifyCertificateBasedAuthPropertiesRequest.


        :param properties_to_delete: The properties_to_delete of this ModifyCertificateBasedAuthPropertiesRequest.
        :type properties_to_delete: List
        """

        self._properties_to_delete = properties_to_delete
