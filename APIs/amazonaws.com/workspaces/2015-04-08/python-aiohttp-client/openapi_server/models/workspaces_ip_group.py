# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkspacesIpGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_id: str=None, group_name: str=None, group_desc: str=None, user_rules: List=None):
        """WorkspacesIpGroup - a model defined in OpenAPI

        :param group_id: The group_id of this WorkspacesIpGroup.
        :param group_name: The group_name of this WorkspacesIpGroup.
        :param group_desc: The group_desc of this WorkspacesIpGroup.
        :param user_rules: The user_rules of this WorkspacesIpGroup.
        """
        self.openapi_types = {
            'group_id': str,
            'group_name': str,
            'group_desc': str,
            'user_rules': List
        }

        self.attribute_map = {
            'group_id': 'groupId',
            'group_name': 'groupName',
            'group_desc': 'groupDesc',
            'user_rules': 'userRules'
        }

        self._group_id = group_id
        self._group_name = group_name
        self._group_desc = group_desc
        self._user_rules = user_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkspacesIpGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkspacesIpGroup of this WorkspacesIpGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_id(self):
        """Gets the group_id of this WorkspacesIpGroup.


        :return: The group_id of this WorkspacesIpGroup.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this WorkspacesIpGroup.


        :param group_id: The group_id of this WorkspacesIpGroup.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def group_name(self):
        """Gets the group_name of this WorkspacesIpGroup.


        :return: The group_name of this WorkspacesIpGroup.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this WorkspacesIpGroup.


        :param group_name: The group_name of this WorkspacesIpGroup.
        :type group_name: str
        """

        self._group_name = group_name

    @property
    def group_desc(self):
        """Gets the group_desc of this WorkspacesIpGroup.


        :return: The group_desc of this WorkspacesIpGroup.
        :rtype: str
        """
        return self._group_desc

    @group_desc.setter
    def group_desc(self, group_desc):
        """Sets the group_desc of this WorkspacesIpGroup.


        :param group_desc: The group_desc of this WorkspacesIpGroup.
        :type group_desc: str
        """

        self._group_desc = group_desc

    @property
    def user_rules(self):
        """Gets the user_rules of this WorkspacesIpGroup.


        :return: The user_rules of this WorkspacesIpGroup.
        :rtype: List
        """
        return self._user_rules

    @user_rules.setter
    def user_rules(self, user_rules):
        """Sets the user_rules of this WorkspacesIpGroup.


        :param user_rules: The user_rules of this WorkspacesIpGroup.
        :type user_rules: List
        """

        self._user_rules = user_rules
