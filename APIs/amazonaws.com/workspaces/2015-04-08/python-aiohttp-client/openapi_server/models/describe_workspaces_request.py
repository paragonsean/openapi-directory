# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeWorkspacesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_ids: List=None, directory_id: str=None, user_name: str=None, bundle_id: str=None, limit: int=None, next_token: str=None):
        """DescribeWorkspacesRequest - a model defined in OpenAPI

        :param workspace_ids: The workspace_ids of this DescribeWorkspacesRequest.
        :param directory_id: The directory_id of this DescribeWorkspacesRequest.
        :param user_name: The user_name of this DescribeWorkspacesRequest.
        :param bundle_id: The bundle_id of this DescribeWorkspacesRequest.
        :param limit: The limit of this DescribeWorkspacesRequest.
        :param next_token: The next_token of this DescribeWorkspacesRequest.
        """
        self.openapi_types = {
            'workspace_ids': List,
            'directory_id': str,
            'user_name': str,
            'bundle_id': str,
            'limit': int,
            'next_token': str
        }

        self.attribute_map = {
            'workspace_ids': 'WorkspaceIds',
            'directory_id': 'DirectoryId',
            'user_name': 'UserName',
            'bundle_id': 'BundleId',
            'limit': 'Limit',
            'next_token': 'NextToken'
        }

        self._workspace_ids = workspace_ids
        self._directory_id = directory_id
        self._user_name = user_name
        self._bundle_id = bundle_id
        self._limit = limit
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkspacesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkspacesRequest of this DescribeWorkspacesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_ids(self):
        """Gets the workspace_ids of this DescribeWorkspacesRequest.


        :return: The workspace_ids of this DescribeWorkspacesRequest.
        :rtype: List
        """
        return self._workspace_ids

    @workspace_ids.setter
    def workspace_ids(self, workspace_ids):
        """Sets the workspace_ids of this DescribeWorkspacesRequest.


        :param workspace_ids: The workspace_ids of this DescribeWorkspacesRequest.
        :type workspace_ids: List
        """

        self._workspace_ids = workspace_ids

    @property
    def directory_id(self):
        """Gets the directory_id of this DescribeWorkspacesRequest.


        :return: The directory_id of this DescribeWorkspacesRequest.
        :rtype: str
        """
        return self._directory_id

    @directory_id.setter
    def directory_id(self, directory_id):
        """Sets the directory_id of this DescribeWorkspacesRequest.


        :param directory_id: The directory_id of this DescribeWorkspacesRequest.
        :type directory_id: str
        """

        self._directory_id = directory_id

    @property
    def user_name(self):
        """Gets the user_name of this DescribeWorkspacesRequest.


        :return: The user_name of this DescribeWorkspacesRequest.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this DescribeWorkspacesRequest.


        :param user_name: The user_name of this DescribeWorkspacesRequest.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def bundle_id(self):
        """Gets the bundle_id of this DescribeWorkspacesRequest.


        :return: The bundle_id of this DescribeWorkspacesRequest.
        :rtype: str
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this DescribeWorkspacesRequest.


        :param bundle_id: The bundle_id of this DescribeWorkspacesRequest.
        :type bundle_id: str
        """

        self._bundle_id = bundle_id

    @property
    def limit(self):
        """Gets the limit of this DescribeWorkspacesRequest.


        :return: The limit of this DescribeWorkspacesRequest.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this DescribeWorkspacesRequest.


        :param limit: The limit of this DescribeWorkspacesRequest.
        :type limit: int
        """

        self._limit = limit

    @property
    def next_token(self):
        """Gets the next_token of this DescribeWorkspacesRequest.


        :return: The next_token of this DescribeWorkspacesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeWorkspacesRequest.


        :param next_token: The next_token of this DescribeWorkspacesRequest.
        :type next_token: str
        """

        self._next_token = next_token
