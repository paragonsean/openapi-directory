# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_based_auth_status_enum import CertificateBasedAuthStatusEnum
from openapi_server import util


class CertificateBasedAuthProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: CertificateBasedAuthStatusEnum=None, certificate_authority_arn: str=None):
        """CertificateBasedAuthProperties - a model defined in OpenAPI

        :param status: The status of this CertificateBasedAuthProperties.
        :param certificate_authority_arn: The certificate_authority_arn of this CertificateBasedAuthProperties.
        """
        self.openapi_types = {
            'status': CertificateBasedAuthStatusEnum,
            'certificate_authority_arn': str
        }

        self.attribute_map = {
            'status': 'Status',
            'certificate_authority_arn': 'CertificateAuthorityArn'
        }

        self._status = status
        self._certificate_authority_arn = certificate_authority_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateBasedAuthProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateBasedAuthProperties of this CertificateBasedAuthProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this CertificateBasedAuthProperties.


        :return: The status of this CertificateBasedAuthProperties.
        :rtype: CertificateBasedAuthStatusEnum
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CertificateBasedAuthProperties.


        :param status: The status of this CertificateBasedAuthProperties.
        :type status: CertificateBasedAuthStatusEnum
        """

        self._status = status

    @property
    def certificate_authority_arn(self):
        """Gets the certificate_authority_arn of this CertificateBasedAuthProperties.


        :return: The certificate_authority_arn of this CertificateBasedAuthProperties.
        :rtype: str
        """
        return self._certificate_authority_arn

    @certificate_authority_arn.setter
    def certificate_authority_arn(self, certificate_authority_arn):
        """Sets the certificate_authority_arn of this CertificateBasedAuthProperties.


        :param certificate_authority_arn: The certificate_authority_arn of this CertificateBasedAuthProperties.
        :type certificate_authority_arn: str
        """

        self._certificate_authority_arn = certificate_authority_arn
