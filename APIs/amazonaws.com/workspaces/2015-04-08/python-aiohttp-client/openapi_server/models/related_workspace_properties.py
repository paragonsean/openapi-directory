# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.standby_workspace_relationship_type import StandbyWorkspaceRelationshipType
from openapi_server.models.workspace_state import WorkspaceState
from openapi_server import util


class RelatedWorkspaceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_id: str=None, region: str=None, state: WorkspaceState=None, type: StandbyWorkspaceRelationshipType=None):
        """RelatedWorkspaceProperties - a model defined in OpenAPI

        :param workspace_id: The workspace_id of this RelatedWorkspaceProperties.
        :param region: The region of this RelatedWorkspaceProperties.
        :param state: The state of this RelatedWorkspaceProperties.
        :param type: The type of this RelatedWorkspaceProperties.
        """
        self.openapi_types = {
            'workspace_id': str,
            'region': str,
            'state': WorkspaceState,
            'type': StandbyWorkspaceRelationshipType
        }

        self.attribute_map = {
            'workspace_id': 'WorkspaceId',
            'region': 'Region',
            'state': 'State',
            'type': 'Type'
        }

        self._workspace_id = workspace_id
        self._region = region
        self._state = state
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelatedWorkspaceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelatedWorkspaceProperties of this RelatedWorkspaceProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_id(self):
        """Gets the workspace_id of this RelatedWorkspaceProperties.


        :return: The workspace_id of this RelatedWorkspaceProperties.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this RelatedWorkspaceProperties.


        :param workspace_id: The workspace_id of this RelatedWorkspaceProperties.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def region(self):
        """Gets the region of this RelatedWorkspaceProperties.


        :return: The region of this RelatedWorkspaceProperties.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this RelatedWorkspaceProperties.


        :param region: The region of this RelatedWorkspaceProperties.
        :type region: str
        """

        self._region = region

    @property
    def state(self):
        """Gets the state of this RelatedWorkspaceProperties.


        :return: The state of this RelatedWorkspaceProperties.
        :rtype: WorkspaceState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this RelatedWorkspaceProperties.


        :param state: The state of this RelatedWorkspaceProperties.
        :type state: WorkspaceState
        """

        self._state = state

    @property
    def type(self):
        """Gets the type of this RelatedWorkspaceProperties.


        :return: The type of this RelatedWorkspaceProperties.
        :rtype: StandbyWorkspaceRelationshipType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RelatedWorkspaceProperties.


        :param type: The type of this RelatedWorkspaceProperties.
        :type type: StandbyWorkspaceRelationshipType
        """

        self._type = type
