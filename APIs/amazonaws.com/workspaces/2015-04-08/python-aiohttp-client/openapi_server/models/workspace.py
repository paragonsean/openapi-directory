# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.modify_workspace_properties_request_workspace_properties import ModifyWorkspacePropertiesRequestWorkspaceProperties
from openapi_server.models.workspace_state import WorkspaceState
from openapi_server import util


class Workspace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_id: str=None, directory_id: str=None, user_name: str=None, ip_address: str=None, state: WorkspaceState=None, bundle_id: str=None, subnet_id: str=None, error_message: str=None, error_code: str=None, computer_name: str=None, volume_encryption_key: str=None, user_volume_encryption_enabled: bool=None, root_volume_encryption_enabled: bool=None, workspace_properties: ModifyWorkspacePropertiesRequestWorkspaceProperties=None, modification_states: List=None, related_workspaces: List=None):
        """Workspace - a model defined in OpenAPI

        :param workspace_id: The workspace_id of this Workspace.
        :param directory_id: The directory_id of this Workspace.
        :param user_name: The user_name of this Workspace.
        :param ip_address: The ip_address of this Workspace.
        :param state: The state of this Workspace.
        :param bundle_id: The bundle_id of this Workspace.
        :param subnet_id: The subnet_id of this Workspace.
        :param error_message: The error_message of this Workspace.
        :param error_code: The error_code of this Workspace.
        :param computer_name: The computer_name of this Workspace.
        :param volume_encryption_key: The volume_encryption_key of this Workspace.
        :param user_volume_encryption_enabled: The user_volume_encryption_enabled of this Workspace.
        :param root_volume_encryption_enabled: The root_volume_encryption_enabled of this Workspace.
        :param workspace_properties: The workspace_properties of this Workspace.
        :param modification_states: The modification_states of this Workspace.
        :param related_workspaces: The related_workspaces of this Workspace.
        """
        self.openapi_types = {
            'workspace_id': str,
            'directory_id': str,
            'user_name': str,
            'ip_address': str,
            'state': WorkspaceState,
            'bundle_id': str,
            'subnet_id': str,
            'error_message': str,
            'error_code': str,
            'computer_name': str,
            'volume_encryption_key': str,
            'user_volume_encryption_enabled': bool,
            'root_volume_encryption_enabled': bool,
            'workspace_properties': ModifyWorkspacePropertiesRequestWorkspaceProperties,
            'modification_states': List,
            'related_workspaces': List
        }

        self.attribute_map = {
            'workspace_id': 'WorkspaceId',
            'directory_id': 'DirectoryId',
            'user_name': 'UserName',
            'ip_address': 'IpAddress',
            'state': 'State',
            'bundle_id': 'BundleId',
            'subnet_id': 'SubnetId',
            'error_message': 'ErrorMessage',
            'error_code': 'ErrorCode',
            'computer_name': 'ComputerName',
            'volume_encryption_key': 'VolumeEncryptionKey',
            'user_volume_encryption_enabled': 'UserVolumeEncryptionEnabled',
            'root_volume_encryption_enabled': 'RootVolumeEncryptionEnabled',
            'workspace_properties': 'WorkspaceProperties',
            'modification_states': 'ModificationStates',
            'related_workspaces': 'RelatedWorkspaces'
        }

        self._workspace_id = workspace_id
        self._directory_id = directory_id
        self._user_name = user_name
        self._ip_address = ip_address
        self._state = state
        self._bundle_id = bundle_id
        self._subnet_id = subnet_id
        self._error_message = error_message
        self._error_code = error_code
        self._computer_name = computer_name
        self._volume_encryption_key = volume_encryption_key
        self._user_volume_encryption_enabled = user_volume_encryption_enabled
        self._root_volume_encryption_enabled = root_volume_encryption_enabled
        self._workspace_properties = workspace_properties
        self._modification_states = modification_states
        self._related_workspaces = related_workspaces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Workspace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Workspace of this Workspace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_id(self):
        """Gets the workspace_id of this Workspace.


        :return: The workspace_id of this Workspace.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this Workspace.


        :param workspace_id: The workspace_id of this Workspace.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def directory_id(self):
        """Gets the directory_id of this Workspace.


        :return: The directory_id of this Workspace.
        :rtype: str
        """
        return self._directory_id

    @directory_id.setter
    def directory_id(self, directory_id):
        """Sets the directory_id of this Workspace.


        :param directory_id: The directory_id of this Workspace.
        :type directory_id: str
        """

        self._directory_id = directory_id

    @property
    def user_name(self):
        """Gets the user_name of this Workspace.


        :return: The user_name of this Workspace.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this Workspace.


        :param user_name: The user_name of this Workspace.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def ip_address(self):
        """Gets the ip_address of this Workspace.


        :return: The ip_address of this Workspace.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Workspace.


        :param ip_address: The ip_address of this Workspace.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def state(self):
        """Gets the state of this Workspace.


        :return: The state of this Workspace.
        :rtype: WorkspaceState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Workspace.


        :param state: The state of this Workspace.
        :type state: WorkspaceState
        """

        self._state = state

    @property
    def bundle_id(self):
        """Gets the bundle_id of this Workspace.


        :return: The bundle_id of this Workspace.
        :rtype: str
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this Workspace.


        :param bundle_id: The bundle_id of this Workspace.
        :type bundle_id: str
        """

        self._bundle_id = bundle_id

    @property
    def subnet_id(self):
        """Gets the subnet_id of this Workspace.


        :return: The subnet_id of this Workspace.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this Workspace.


        :param subnet_id: The subnet_id of this Workspace.
        :type subnet_id: str
        """

        self._subnet_id = subnet_id

    @property
    def error_message(self):
        """Gets the error_message of this Workspace.


        :return: The error_message of this Workspace.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this Workspace.


        :param error_message: The error_message of this Workspace.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_code(self):
        """Gets the error_code of this Workspace.


        :return: The error_code of this Workspace.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this Workspace.


        :param error_code: The error_code of this Workspace.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def computer_name(self):
        """Gets the computer_name of this Workspace.


        :return: The computer_name of this Workspace.
        :rtype: str
        """
        return self._computer_name

    @computer_name.setter
    def computer_name(self, computer_name):
        """Sets the computer_name of this Workspace.


        :param computer_name: The computer_name of this Workspace.
        :type computer_name: str
        """

        self._computer_name = computer_name

    @property
    def volume_encryption_key(self):
        """Gets the volume_encryption_key of this Workspace.


        :return: The volume_encryption_key of this Workspace.
        :rtype: str
        """
        return self._volume_encryption_key

    @volume_encryption_key.setter
    def volume_encryption_key(self, volume_encryption_key):
        """Sets the volume_encryption_key of this Workspace.


        :param volume_encryption_key: The volume_encryption_key of this Workspace.
        :type volume_encryption_key: str
        """

        self._volume_encryption_key = volume_encryption_key

    @property
    def user_volume_encryption_enabled(self):
        """Gets the user_volume_encryption_enabled of this Workspace.


        :return: The user_volume_encryption_enabled of this Workspace.
        :rtype: bool
        """
        return self._user_volume_encryption_enabled

    @user_volume_encryption_enabled.setter
    def user_volume_encryption_enabled(self, user_volume_encryption_enabled):
        """Sets the user_volume_encryption_enabled of this Workspace.


        :param user_volume_encryption_enabled: The user_volume_encryption_enabled of this Workspace.
        :type user_volume_encryption_enabled: bool
        """

        self._user_volume_encryption_enabled = user_volume_encryption_enabled

    @property
    def root_volume_encryption_enabled(self):
        """Gets the root_volume_encryption_enabled of this Workspace.


        :return: The root_volume_encryption_enabled of this Workspace.
        :rtype: bool
        """
        return self._root_volume_encryption_enabled

    @root_volume_encryption_enabled.setter
    def root_volume_encryption_enabled(self, root_volume_encryption_enabled):
        """Sets the root_volume_encryption_enabled of this Workspace.


        :param root_volume_encryption_enabled: The root_volume_encryption_enabled of this Workspace.
        :type root_volume_encryption_enabled: bool
        """

        self._root_volume_encryption_enabled = root_volume_encryption_enabled

    @property
    def workspace_properties(self):
        """Gets the workspace_properties of this Workspace.


        :return: The workspace_properties of this Workspace.
        :rtype: ModifyWorkspacePropertiesRequestWorkspaceProperties
        """
        return self._workspace_properties

    @workspace_properties.setter
    def workspace_properties(self, workspace_properties):
        """Sets the workspace_properties of this Workspace.


        :param workspace_properties: The workspace_properties of this Workspace.
        :type workspace_properties: ModifyWorkspacePropertiesRequestWorkspaceProperties
        """

        self._workspace_properties = workspace_properties

    @property
    def modification_states(self):
        """Gets the modification_states of this Workspace.


        :return: The modification_states of this Workspace.
        :rtype: List
        """
        return self._modification_states

    @modification_states.setter
    def modification_states(self, modification_states):
        """Sets the modification_states of this Workspace.


        :param modification_states: The modification_states of this Workspace.
        :type modification_states: List
        """

        self._modification_states = modification_states

    @property
    def related_workspaces(self):
        """Gets the related_workspaces of this Workspace.


        :return: The related_workspaces of this Workspace.
        :rtype: List
        """
        return self._related_workspaces

    @related_workspaces.setter
    def related_workspaces(self, related_workspaces):
        """Sets the related_workspaces of this Workspace.


        :param related_workspaces: The related_workspaces of this Workspace.
        :type related_workspaces: List
        """

        self._related_workspaces = related_workspaces
