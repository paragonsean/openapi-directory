# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_workspace_image_result_operating_system import CreateWorkspaceImageResultOperatingSystem
from openapi_server.models.workspace_image_required_tenancy import WorkspaceImageRequiredTenancy
from openapi_server.models.workspace_image_state import WorkspaceImageState
from openapi_server import util


class CreateWorkspaceImageResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_id: str=None, name: str=None, description: str=None, operating_system: CreateWorkspaceImageResultOperatingSystem=None, state: WorkspaceImageState=None, required_tenancy: WorkspaceImageRequiredTenancy=None, created: datetime=None, owner_account_id: str=None):
        """CreateWorkspaceImageResult - a model defined in OpenAPI

        :param image_id: The image_id of this CreateWorkspaceImageResult.
        :param name: The name of this CreateWorkspaceImageResult.
        :param description: The description of this CreateWorkspaceImageResult.
        :param operating_system: The operating_system of this CreateWorkspaceImageResult.
        :param state: The state of this CreateWorkspaceImageResult.
        :param required_tenancy: The required_tenancy of this CreateWorkspaceImageResult.
        :param created: The created of this CreateWorkspaceImageResult.
        :param owner_account_id: The owner_account_id of this CreateWorkspaceImageResult.
        """
        self.openapi_types = {
            'image_id': str,
            'name': str,
            'description': str,
            'operating_system': CreateWorkspaceImageResultOperatingSystem,
            'state': WorkspaceImageState,
            'required_tenancy': WorkspaceImageRequiredTenancy,
            'created': datetime,
            'owner_account_id': str
        }

        self.attribute_map = {
            'image_id': 'ImageId',
            'name': 'Name',
            'description': 'Description',
            'operating_system': 'OperatingSystem',
            'state': 'State',
            'required_tenancy': 'RequiredTenancy',
            'created': 'Created',
            'owner_account_id': 'OwnerAccountId'
        }

        self._image_id = image_id
        self._name = name
        self._description = description
        self._operating_system = operating_system
        self._state = state
        self._required_tenancy = required_tenancy
        self._created = created
        self._owner_account_id = owner_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWorkspaceImageResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWorkspaceImageResult of this CreateWorkspaceImageResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_id(self):
        """Gets the image_id of this CreateWorkspaceImageResult.


        :return: The image_id of this CreateWorkspaceImageResult.
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this CreateWorkspaceImageResult.


        :param image_id: The image_id of this CreateWorkspaceImageResult.
        :type image_id: str
        """

        self._image_id = image_id

    @property
    def name(self):
        """Gets the name of this CreateWorkspaceImageResult.


        :return: The name of this CreateWorkspaceImageResult.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateWorkspaceImageResult.


        :param name: The name of this CreateWorkspaceImageResult.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this CreateWorkspaceImageResult.


        :return: The description of this CreateWorkspaceImageResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateWorkspaceImageResult.


        :param description: The description of this CreateWorkspaceImageResult.
        :type description: str
        """

        self._description = description

    @property
    def operating_system(self):
        """Gets the operating_system of this CreateWorkspaceImageResult.


        :return: The operating_system of this CreateWorkspaceImageResult.
        :rtype: CreateWorkspaceImageResultOperatingSystem
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this CreateWorkspaceImageResult.


        :param operating_system: The operating_system of this CreateWorkspaceImageResult.
        :type operating_system: CreateWorkspaceImageResultOperatingSystem
        """

        self._operating_system = operating_system

    @property
    def state(self):
        """Gets the state of this CreateWorkspaceImageResult.


        :return: The state of this CreateWorkspaceImageResult.
        :rtype: WorkspaceImageState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreateWorkspaceImageResult.


        :param state: The state of this CreateWorkspaceImageResult.
        :type state: WorkspaceImageState
        """

        self._state = state

    @property
    def required_tenancy(self):
        """Gets the required_tenancy of this CreateWorkspaceImageResult.


        :return: The required_tenancy of this CreateWorkspaceImageResult.
        :rtype: WorkspaceImageRequiredTenancy
        """
        return self._required_tenancy

    @required_tenancy.setter
    def required_tenancy(self, required_tenancy):
        """Sets the required_tenancy of this CreateWorkspaceImageResult.


        :param required_tenancy: The required_tenancy of this CreateWorkspaceImageResult.
        :type required_tenancy: WorkspaceImageRequiredTenancy
        """

        self._required_tenancy = required_tenancy

    @property
    def created(self):
        """Gets the created of this CreateWorkspaceImageResult.


        :return: The created of this CreateWorkspaceImageResult.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this CreateWorkspaceImageResult.


        :param created: The created of this CreateWorkspaceImageResult.
        :type created: datetime
        """

        self._created = created

    @property
    def owner_account_id(self):
        """Gets the owner_account_id of this CreateWorkspaceImageResult.


        :return: The owner_account_id of this CreateWorkspaceImageResult.
        :rtype: str
        """
        return self._owner_account_id

    @owner_account_id.setter
    def owner_account_id(self, owner_account_id):
        """Sets the owner_account_id of this CreateWorkspaceImageResult.


        :param owner_account_id: The owner_account_id of this CreateWorkspaceImageResult.
        :type owner_account_id: str
        """

        self._owner_account_id = owner_account_id
