# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpRuleItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_rule: str=None, rule_desc: str=None):
        """IpRuleItem - a model defined in OpenAPI

        :param ip_rule: The ip_rule of this IpRuleItem.
        :param rule_desc: The rule_desc of this IpRuleItem.
        """
        self.openapi_types = {
            'ip_rule': str,
            'rule_desc': str
        }

        self.attribute_map = {
            'ip_rule': 'ipRule',
            'rule_desc': 'ruleDesc'
        }

        self._ip_rule = ip_rule
        self._rule_desc = rule_desc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpRuleItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpRuleItem of this IpRuleItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_rule(self):
        """Gets the ip_rule of this IpRuleItem.


        :return: The ip_rule of this IpRuleItem.
        :rtype: str
        """
        return self._ip_rule

    @ip_rule.setter
    def ip_rule(self, ip_rule):
        """Sets the ip_rule of this IpRuleItem.


        :param ip_rule: The ip_rule of this IpRuleItem.
        :type ip_rule: str
        """

        self._ip_rule = ip_rule

    @property
    def rule_desc(self):
        """Gets the rule_desc of this IpRuleItem.


        :return: The rule_desc of this IpRuleItem.
        :rtype: str
        """
        return self._rule_desc

    @rule_desc.setter
    def rule_desc(self, rule_desc):
        """Sets the rule_desc of this IpRuleItem.


        :param rule_desc: The rule_desc of this IpRuleItem.
        :type rule_desc: str
        """

        self._rule_desc = rule_desc
