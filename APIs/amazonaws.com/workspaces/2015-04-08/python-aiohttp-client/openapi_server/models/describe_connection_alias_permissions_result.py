# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeConnectionAliasPermissionsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias_id: str=None, connection_alias_permissions: List=None, next_token: str=None):
        """DescribeConnectionAliasPermissionsResult - a model defined in OpenAPI

        :param alias_id: The alias_id of this DescribeConnectionAliasPermissionsResult.
        :param connection_alias_permissions: The connection_alias_permissions of this DescribeConnectionAliasPermissionsResult.
        :param next_token: The next_token of this DescribeConnectionAliasPermissionsResult.
        """
        self.openapi_types = {
            'alias_id': str,
            'connection_alias_permissions': List,
            'next_token': str
        }

        self.attribute_map = {
            'alias_id': 'AliasId',
            'connection_alias_permissions': 'ConnectionAliasPermissions',
            'next_token': 'NextToken'
        }

        self._alias_id = alias_id
        self._connection_alias_permissions = connection_alias_permissions
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeConnectionAliasPermissionsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeConnectionAliasPermissionsResult of this DescribeConnectionAliasPermissionsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias_id(self):
        """Gets the alias_id of this DescribeConnectionAliasPermissionsResult.


        :return: The alias_id of this DescribeConnectionAliasPermissionsResult.
        :rtype: str
        """
        return self._alias_id

    @alias_id.setter
    def alias_id(self, alias_id):
        """Sets the alias_id of this DescribeConnectionAliasPermissionsResult.


        :param alias_id: The alias_id of this DescribeConnectionAliasPermissionsResult.
        :type alias_id: str
        """

        self._alias_id = alias_id

    @property
    def connection_alias_permissions(self):
        """Gets the connection_alias_permissions of this DescribeConnectionAliasPermissionsResult.


        :return: The connection_alias_permissions of this DescribeConnectionAliasPermissionsResult.
        :rtype: List
        """
        return self._connection_alias_permissions

    @connection_alias_permissions.setter
    def connection_alias_permissions(self, connection_alias_permissions):
        """Sets the connection_alias_permissions of this DescribeConnectionAliasPermissionsResult.


        :param connection_alias_permissions: The connection_alias_permissions of this DescribeConnectionAliasPermissionsResult.
        :type connection_alias_permissions: List
        """

        self._connection_alias_permissions = connection_alias_permissions

    @property
    def next_token(self):
        """Gets the next_token of this DescribeConnectionAliasPermissionsResult.


        :return: The next_token of this DescribeConnectionAliasPermissionsResult.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeConnectionAliasPermissionsResult.


        :param next_token: The next_token of this DescribeConnectionAliasPermissionsResult.
        :type next_token: str
        """

        self._next_token = next_token
