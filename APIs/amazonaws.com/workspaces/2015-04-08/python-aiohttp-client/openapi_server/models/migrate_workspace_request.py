# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MigrateWorkspaceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_workspace_id: str=None, bundle_id: str=None):
        """MigrateWorkspaceRequest - a model defined in OpenAPI

        :param source_workspace_id: The source_workspace_id of this MigrateWorkspaceRequest.
        :param bundle_id: The bundle_id of this MigrateWorkspaceRequest.
        """
        self.openapi_types = {
            'source_workspace_id': str,
            'bundle_id': str
        }

        self.attribute_map = {
            'source_workspace_id': 'SourceWorkspaceId',
            'bundle_id': 'BundleId'
        }

        self._source_workspace_id = source_workspace_id
        self._bundle_id = bundle_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MigrateWorkspaceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MigrateWorkspaceRequest of this MigrateWorkspaceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_workspace_id(self):
        """Gets the source_workspace_id of this MigrateWorkspaceRequest.


        :return: The source_workspace_id of this MigrateWorkspaceRequest.
        :rtype: str
        """
        return self._source_workspace_id

    @source_workspace_id.setter
    def source_workspace_id(self, source_workspace_id):
        """Sets the source_workspace_id of this MigrateWorkspaceRequest.


        :param source_workspace_id: The source_workspace_id of this MigrateWorkspaceRequest.
        :type source_workspace_id: str
        """
        if source_workspace_id is None:
            raise ValueError("Invalid value for `source_workspace_id`, must not be `None`")

        self._source_workspace_id = source_workspace_id

    @property
    def bundle_id(self):
        """Gets the bundle_id of this MigrateWorkspaceRequest.


        :return: The bundle_id of this MigrateWorkspaceRequest.
        :rtype: str
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this MigrateWorkspaceRequest.


        :param bundle_id: The bundle_id of this MigrateWorkspaceRequest.
        :type bundle_id: str
        """
        if bundle_id is None:
            raise ValueError("Invalid value for `bundle_id`, must not be `None`")

        self._bundle_id = bundle_id
