# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RebuildWorkspacesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rebuild_workspace_requests: List=None):
        """RebuildWorkspacesRequest - a model defined in OpenAPI

        :param rebuild_workspace_requests: The rebuild_workspace_requests of this RebuildWorkspacesRequest.
        """
        self.openapi_types = {
            'rebuild_workspace_requests': List
        }

        self.attribute_map = {
            'rebuild_workspace_requests': 'RebuildWorkspaceRequests'
        }

        self._rebuild_workspace_requests = rebuild_workspace_requests

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RebuildWorkspacesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RebuildWorkspacesRequest of this RebuildWorkspacesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rebuild_workspace_requests(self):
        """Gets the rebuild_workspace_requests of this RebuildWorkspacesRequest.


        :return: The rebuild_workspace_requests of this RebuildWorkspacesRequest.
        :rtype: List
        """
        return self._rebuild_workspace_requests

    @rebuild_workspace_requests.setter
    def rebuild_workspace_requests(self, rebuild_workspace_requests):
        """Sets the rebuild_workspace_requests of this RebuildWorkspacesRequest.


        :param rebuild_workspace_requests: The rebuild_workspace_requests of this RebuildWorkspacesRequest.
        :type rebuild_workspace_requests: List
        """
        if rebuild_workspace_requests is None:
            raise ValueError("Invalid value for `rebuild_workspace_requests`, must not be `None`")

        self._rebuild_workspace_requests = rebuild_workspace_requests
