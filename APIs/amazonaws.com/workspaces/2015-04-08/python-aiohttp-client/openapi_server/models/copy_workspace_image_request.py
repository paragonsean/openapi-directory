# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopyWorkspaceImageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, source_image_id: str=None, source_region: str=None, tags: List=None):
        """CopyWorkspaceImageRequest - a model defined in OpenAPI

        :param name: The name of this CopyWorkspaceImageRequest.
        :param description: The description of this CopyWorkspaceImageRequest.
        :param source_image_id: The source_image_id of this CopyWorkspaceImageRequest.
        :param source_region: The source_region of this CopyWorkspaceImageRequest.
        :param tags: The tags of this CopyWorkspaceImageRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'source_image_id': str,
            'source_region': str,
            'tags': List
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            'source_image_id': 'SourceImageId',
            'source_region': 'SourceRegion',
            'tags': 'Tags'
        }

        self._name = name
        self._description = description
        self._source_image_id = source_image_id
        self._source_region = source_region
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyWorkspaceImageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyWorkspaceImageRequest of this CopyWorkspaceImageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CopyWorkspaceImageRequest.


        :return: The name of this CopyWorkspaceImageRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CopyWorkspaceImageRequest.


        :param name: The name of this CopyWorkspaceImageRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this CopyWorkspaceImageRequest.


        :return: The description of this CopyWorkspaceImageRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CopyWorkspaceImageRequest.


        :param description: The description of this CopyWorkspaceImageRequest.
        :type description: str
        """

        self._description = description

    @property
    def source_image_id(self):
        """Gets the source_image_id of this CopyWorkspaceImageRequest.


        :return: The source_image_id of this CopyWorkspaceImageRequest.
        :rtype: str
        """
        return self._source_image_id

    @source_image_id.setter
    def source_image_id(self, source_image_id):
        """Sets the source_image_id of this CopyWorkspaceImageRequest.


        :param source_image_id: The source_image_id of this CopyWorkspaceImageRequest.
        :type source_image_id: str
        """
        if source_image_id is None:
            raise ValueError("Invalid value for `source_image_id`, must not be `None`")

        self._source_image_id = source_image_id

    @property
    def source_region(self):
        """Gets the source_region of this CopyWorkspaceImageRequest.


        :return: The source_region of this CopyWorkspaceImageRequest.
        :rtype: str
        """
        return self._source_region

    @source_region.setter
    def source_region(self, source_region):
        """Sets the source_region of this CopyWorkspaceImageRequest.


        :param source_region: The source_region of this CopyWorkspaceImageRequest.
        :type source_region: str
        """
        if source_region is None:
            raise ValueError("Invalid value for `source_region`, must not be `None`")

        self._source_region = source_region

    @property
    def tags(self):
        """Gets the tags of this CopyWorkspaceImageRequest.


        :return: The tags of this CopyWorkspaceImageRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CopyWorkspaceImageRequest.


        :param tags: The tags of this CopyWorkspaceImageRequest.
        :type tags: List
        """

        self._tags = tags
