# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_client_branding_request_device_type_android import ImportClientBrandingRequestDeviceTypeAndroid
from openapi_server.models.import_client_branding_request_device_type_ios import ImportClientBrandingRequestDeviceTypeIos
from openapi_server.models.import_client_branding_request_device_type_linux import ImportClientBrandingRequestDeviceTypeLinux
from openapi_server.models.import_client_branding_request_device_type_osx import ImportClientBrandingRequestDeviceTypeOsx
from openapi_server.models.import_client_branding_request_device_type_web import ImportClientBrandingRequestDeviceTypeWeb
from openapi_server.models.import_client_branding_request_device_type_windows import ImportClientBrandingRequestDeviceTypeWindows
from openapi_server import util


class ImportClientBrandingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_id: str=None, device_type_windows: ImportClientBrandingRequestDeviceTypeWindows=None, device_type_osx: ImportClientBrandingRequestDeviceTypeOsx=None, device_type_android: ImportClientBrandingRequestDeviceTypeAndroid=None, device_type_ios: ImportClientBrandingRequestDeviceTypeIos=None, device_type_linux: ImportClientBrandingRequestDeviceTypeLinux=None, device_type_web: ImportClientBrandingRequestDeviceTypeWeb=None):
        """ImportClientBrandingRequest - a model defined in OpenAPI

        :param resource_id: The resource_id of this ImportClientBrandingRequest.
        :param device_type_windows: The device_type_windows of this ImportClientBrandingRequest.
        :param device_type_osx: The device_type_osx of this ImportClientBrandingRequest.
        :param device_type_android: The device_type_android of this ImportClientBrandingRequest.
        :param device_type_ios: The device_type_ios of this ImportClientBrandingRequest.
        :param device_type_linux: The device_type_linux of this ImportClientBrandingRequest.
        :param device_type_web: The device_type_web of this ImportClientBrandingRequest.
        """
        self.openapi_types = {
            'resource_id': str,
            'device_type_windows': ImportClientBrandingRequestDeviceTypeWindows,
            'device_type_osx': ImportClientBrandingRequestDeviceTypeOsx,
            'device_type_android': ImportClientBrandingRequestDeviceTypeAndroid,
            'device_type_ios': ImportClientBrandingRequestDeviceTypeIos,
            'device_type_linux': ImportClientBrandingRequestDeviceTypeLinux,
            'device_type_web': ImportClientBrandingRequestDeviceTypeWeb
        }

        self.attribute_map = {
            'resource_id': 'ResourceId',
            'device_type_windows': 'DeviceTypeWindows',
            'device_type_osx': 'DeviceTypeOsx',
            'device_type_android': 'DeviceTypeAndroid',
            'device_type_ios': 'DeviceTypeIos',
            'device_type_linux': 'DeviceTypeLinux',
            'device_type_web': 'DeviceTypeWeb'
        }

        self._resource_id = resource_id
        self._device_type_windows = device_type_windows
        self._device_type_osx = device_type_osx
        self._device_type_android = device_type_android
        self._device_type_ios = device_type_ios
        self._device_type_linux = device_type_linux
        self._device_type_web = device_type_web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportClientBrandingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportClientBrandingRequest of this ImportClientBrandingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id(self):
        """Gets the resource_id of this ImportClientBrandingRequest.


        :return: The resource_id of this ImportClientBrandingRequest.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ImportClientBrandingRequest.


        :param resource_id: The resource_id of this ImportClientBrandingRequest.
        :type resource_id: str
        """
        if resource_id is None:
            raise ValueError("Invalid value for `resource_id`, must not be `None`")

        self._resource_id = resource_id

    @property
    def device_type_windows(self):
        """Gets the device_type_windows of this ImportClientBrandingRequest.


        :return: The device_type_windows of this ImportClientBrandingRequest.
        :rtype: ImportClientBrandingRequestDeviceTypeWindows
        """
        return self._device_type_windows

    @device_type_windows.setter
    def device_type_windows(self, device_type_windows):
        """Sets the device_type_windows of this ImportClientBrandingRequest.


        :param device_type_windows: The device_type_windows of this ImportClientBrandingRequest.
        :type device_type_windows: ImportClientBrandingRequestDeviceTypeWindows
        """

        self._device_type_windows = device_type_windows

    @property
    def device_type_osx(self):
        """Gets the device_type_osx of this ImportClientBrandingRequest.


        :return: The device_type_osx of this ImportClientBrandingRequest.
        :rtype: ImportClientBrandingRequestDeviceTypeOsx
        """
        return self._device_type_osx

    @device_type_osx.setter
    def device_type_osx(self, device_type_osx):
        """Sets the device_type_osx of this ImportClientBrandingRequest.


        :param device_type_osx: The device_type_osx of this ImportClientBrandingRequest.
        :type device_type_osx: ImportClientBrandingRequestDeviceTypeOsx
        """

        self._device_type_osx = device_type_osx

    @property
    def device_type_android(self):
        """Gets the device_type_android of this ImportClientBrandingRequest.


        :return: The device_type_android of this ImportClientBrandingRequest.
        :rtype: ImportClientBrandingRequestDeviceTypeAndroid
        """
        return self._device_type_android

    @device_type_android.setter
    def device_type_android(self, device_type_android):
        """Sets the device_type_android of this ImportClientBrandingRequest.


        :param device_type_android: The device_type_android of this ImportClientBrandingRequest.
        :type device_type_android: ImportClientBrandingRequestDeviceTypeAndroid
        """

        self._device_type_android = device_type_android

    @property
    def device_type_ios(self):
        """Gets the device_type_ios of this ImportClientBrandingRequest.


        :return: The device_type_ios of this ImportClientBrandingRequest.
        :rtype: ImportClientBrandingRequestDeviceTypeIos
        """
        return self._device_type_ios

    @device_type_ios.setter
    def device_type_ios(self, device_type_ios):
        """Sets the device_type_ios of this ImportClientBrandingRequest.


        :param device_type_ios: The device_type_ios of this ImportClientBrandingRequest.
        :type device_type_ios: ImportClientBrandingRequestDeviceTypeIos
        """

        self._device_type_ios = device_type_ios

    @property
    def device_type_linux(self):
        """Gets the device_type_linux of this ImportClientBrandingRequest.


        :return: The device_type_linux of this ImportClientBrandingRequest.
        :rtype: ImportClientBrandingRequestDeviceTypeLinux
        """
        return self._device_type_linux

    @device_type_linux.setter
    def device_type_linux(self, device_type_linux):
        """Sets the device_type_linux of this ImportClientBrandingRequest.


        :param device_type_linux: The device_type_linux of this ImportClientBrandingRequest.
        :type device_type_linux: ImportClientBrandingRequestDeviceTypeLinux
        """

        self._device_type_linux = device_type_linux

    @property
    def device_type_web(self):
        """Gets the device_type_web of this ImportClientBrandingRequest.


        :return: The device_type_web of this ImportClientBrandingRequest.
        :rtype: ImportClientBrandingRequestDeviceTypeWeb
        """
        return self._device_type_web

    @device_type_web.setter
    def device_type_web(self, device_type_web):
        """Sets the device_type_web of this ImportClientBrandingRequest.


        :param device_type_web: The device_type_web of this ImportClientBrandingRequest.
        :type device_type_web: ImportClientBrandingRequestDeviceTypeWeb
        """

        self._device_type_web = device_type_web
