# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeWorkspaceImagePermissionsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_id: str=None, image_permissions: List=None, next_token: str=None):
        """DescribeWorkspaceImagePermissionsResult - a model defined in OpenAPI

        :param image_id: The image_id of this DescribeWorkspaceImagePermissionsResult.
        :param image_permissions: The image_permissions of this DescribeWorkspaceImagePermissionsResult.
        :param next_token: The next_token of this DescribeWorkspaceImagePermissionsResult.
        """
        self.openapi_types = {
            'image_id': str,
            'image_permissions': List,
            'next_token': str
        }

        self.attribute_map = {
            'image_id': 'ImageId',
            'image_permissions': 'ImagePermissions',
            'next_token': 'NextToken'
        }

        self._image_id = image_id
        self._image_permissions = image_permissions
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkspaceImagePermissionsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkspaceImagePermissionsResult of this DescribeWorkspaceImagePermissionsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_id(self):
        """Gets the image_id of this DescribeWorkspaceImagePermissionsResult.


        :return: The image_id of this DescribeWorkspaceImagePermissionsResult.
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this DescribeWorkspaceImagePermissionsResult.


        :param image_id: The image_id of this DescribeWorkspaceImagePermissionsResult.
        :type image_id: str
        """

        self._image_id = image_id

    @property
    def image_permissions(self):
        """Gets the image_permissions of this DescribeWorkspaceImagePermissionsResult.


        :return: The image_permissions of this DescribeWorkspaceImagePermissionsResult.
        :rtype: List
        """
        return self._image_permissions

    @image_permissions.setter
    def image_permissions(self, image_permissions):
        """Sets the image_permissions of this DescribeWorkspaceImagePermissionsResult.


        :param image_permissions: The image_permissions of this DescribeWorkspaceImagePermissionsResult.
        :type image_permissions: List
        """

        self._image_permissions = image_permissions

    @property
    def next_token(self):
        """Gets the next_token of this DescribeWorkspaceImagePermissionsResult.


        :return: The next_token of this DescribeWorkspaceImagePermissionsResult.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeWorkspaceImagePermissionsResult.


        :param next_token: The next_token of this DescribeWorkspaceImagePermissionsResult.
        :type next_token: str
        """

        self._next_token = next_token
