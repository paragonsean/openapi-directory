# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace_id: str=None):
        """TerminateRequest - a model defined in OpenAPI

        :param workspace_id: The workspace_id of this TerminateRequest.
        """
        self.openapi_types = {
            'workspace_id': str
        }

        self.attribute_map = {
            'workspace_id': 'WorkspaceId'
        }

        self._workspace_id = workspace_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminateRequest of this TerminateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace_id(self):
        """Gets the workspace_id of this TerminateRequest.


        :return: The workspace_id of this TerminateRequest.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this TerminateRequest.


        :param workspace_id: The workspace_id of this TerminateRequest.
        :type workspace_id: str
        """
        if workspace_id is None:
            raise ValueError("Invalid value for `workspace_id`, must not be `None`")

        self._workspace_id = workspace_id
