# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeWorkspaceBundlesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle_ids: List=None, owner: str=None, next_token: str=None):
        """DescribeWorkspaceBundlesRequest - a model defined in OpenAPI

        :param bundle_ids: The bundle_ids of this DescribeWorkspaceBundlesRequest.
        :param owner: The owner of this DescribeWorkspaceBundlesRequest.
        :param next_token: The next_token of this DescribeWorkspaceBundlesRequest.
        """
        self.openapi_types = {
            'bundle_ids': List,
            'owner': str,
            'next_token': str
        }

        self.attribute_map = {
            'bundle_ids': 'BundleIds',
            'owner': 'Owner',
            'next_token': 'NextToken'
        }

        self._bundle_ids = bundle_ids
        self._owner = owner
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeWorkspaceBundlesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeWorkspaceBundlesRequest of this DescribeWorkspaceBundlesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_ids(self):
        """Gets the bundle_ids of this DescribeWorkspaceBundlesRequest.


        :return: The bundle_ids of this DescribeWorkspaceBundlesRequest.
        :rtype: List
        """
        return self._bundle_ids

    @bundle_ids.setter
    def bundle_ids(self, bundle_ids):
        """Sets the bundle_ids of this DescribeWorkspaceBundlesRequest.


        :param bundle_ids: The bundle_ids of this DescribeWorkspaceBundlesRequest.
        :type bundle_ids: List
        """

        self._bundle_ids = bundle_ids

    @property
    def owner(self):
        """Gets the owner of this DescribeWorkspaceBundlesRequest.


        :return: The owner of this DescribeWorkspaceBundlesRequest.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this DescribeWorkspaceBundlesRequest.


        :param owner: The owner of this DescribeWorkspaceBundlesRequest.
        :type owner: str
        """

        self._owner = owner

    @property
    def next_token(self):
        """Gets the next_token of this DescribeWorkspaceBundlesRequest.


        :return: The next_token of this DescribeWorkspaceBundlesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeWorkspaceBundlesRequest.


        :param next_token: The next_token of this DescribeWorkspaceBundlesRequest.
        :type next_token: str
        """

        self._next_token = next_token
