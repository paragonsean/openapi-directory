# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.log_upload_enum import LogUploadEnum
from openapi_server.models.reconnect_enum import ReconnectEnum
from openapi_server import util


class ClientProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reconnect_enabled: ReconnectEnum=None, log_upload_enabled: LogUploadEnum=None):
        """ClientProperties - a model defined in OpenAPI

        :param reconnect_enabled: The reconnect_enabled of this ClientProperties.
        :param log_upload_enabled: The log_upload_enabled of this ClientProperties.
        """
        self.openapi_types = {
            'reconnect_enabled': ReconnectEnum,
            'log_upload_enabled': LogUploadEnum
        }

        self.attribute_map = {
            'reconnect_enabled': 'ReconnectEnabled',
            'log_upload_enabled': 'LogUploadEnabled'
        }

        self._reconnect_enabled = reconnect_enabled
        self._log_upload_enabled = log_upload_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientProperties of this ClientProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reconnect_enabled(self):
        """Gets the reconnect_enabled of this ClientProperties.


        :return: The reconnect_enabled of this ClientProperties.
        :rtype: ReconnectEnum
        """
        return self._reconnect_enabled

    @reconnect_enabled.setter
    def reconnect_enabled(self, reconnect_enabled):
        """Sets the reconnect_enabled of this ClientProperties.


        :param reconnect_enabled: The reconnect_enabled of this ClientProperties.
        :type reconnect_enabled: ReconnectEnum
        """

        self._reconnect_enabled = reconnect_enabled

    @property
    def log_upload_enabled(self):
        """Gets the log_upload_enabled of this ClientProperties.


        :return: The log_upload_enabled of this ClientProperties.
        :rtype: LogUploadEnum
        """
        return self._log_upload_enabled

    @log_upload_enabled.setter
    def log_upload_enabled(self, log_upload_enabled):
        """Sets the log_upload_enabled of this ClientProperties.


        :param log_upload_enabled: The log_upload_enabled of this ClientProperties.
        :type log_upload_enabled: LogUploadEnum
        """

        self._log_upload_enabled = log_upload_enabled
