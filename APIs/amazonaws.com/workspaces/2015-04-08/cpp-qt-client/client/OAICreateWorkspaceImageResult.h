/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateWorkspaceImageResult.h
 *
 * 
 */

#ifndef OAICreateWorkspaceImageResult_H
#define OAICreateWorkspaceImageResult_H

#include <QJsonObject>

#include "OAICreateWorkspaceImageResult_OperatingSystem.h"
#include "OAIWorkspaceImageRequiredTenancy.h"
#include "OAIWorkspaceImageState.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateWorkspaceImageResult_OperatingSystem;

class OAICreateWorkspaceImageResult : public OAIObject {
public:
    OAICreateWorkspaceImageResult();
    OAICreateWorkspaceImageResult(QString json);
    ~OAICreateWorkspaceImageResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateWorkspaceImageResult_OperatingSystem getOperatingSystem() const;
    void setOperatingSystem(const OAICreateWorkspaceImageResult_OperatingSystem &operating_system);
    bool is_operating_system_Set() const;
    bool is_operating_system_Valid() const;

    OAIWorkspaceImageState getState() const;
    void setState(const OAIWorkspaceImageState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIWorkspaceImageRequiredTenancy getRequiredTenancy() const;
    void setRequiredTenancy(const OAIWorkspaceImageRequiredTenancy &required_tenancy);
    bool is_required_tenancy_Set() const;
    bool is_required_tenancy_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getOwnerAccountId() const;
    void setOwnerAccountId(const QString &owner_account_id);
    bool is_owner_account_id_Set() const;
    bool is_owner_account_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateWorkspaceImageResult_OperatingSystem m_operating_system;
    bool m_operating_system_isSet;
    bool m_operating_system_isValid;

    OAIWorkspaceImageState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIWorkspaceImageRequiredTenancy m_required_tenancy;
    bool m_required_tenancy_isSet;
    bool m_required_tenancy_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_owner_account_id;
    bool m_owner_account_id_isSet;
    bool m_owner_account_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateWorkspaceImageResult)

#endif // OAICreateWorkspaceImageResult_H
