/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountModification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountModification::OAIAccountModification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountModification::OAIAccountModification() {
    this->initializeModel();
}

OAIAccountModification::~OAIAccountModification() {}

void OAIAccountModification::initializeModel() {

    m_modification_state_isSet = false;
    m_modification_state_isValid = false;

    m_dedicated_tenancy_support_isSet = false;
    m_dedicated_tenancy_support_isValid = false;

    m_dedicated_tenancy_management_cidr_range_isSet = false;
    m_dedicated_tenancy_management_cidr_range_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;
}

void OAIAccountModification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountModification::fromJsonObject(QJsonObject json) {

    m_modification_state_isValid = ::OpenAPI::fromJsonValue(m_modification_state, json[QString("ModificationState")]);
    m_modification_state_isSet = !json[QString("ModificationState")].isNull() && m_modification_state_isValid;

    m_dedicated_tenancy_support_isValid = ::OpenAPI::fromJsonValue(m_dedicated_tenancy_support, json[QString("DedicatedTenancySupport")]);
    m_dedicated_tenancy_support_isSet = !json[QString("DedicatedTenancySupport")].isNull() && m_dedicated_tenancy_support_isValid;

    m_dedicated_tenancy_management_cidr_range_isValid = ::OpenAPI::fromJsonValue(m_dedicated_tenancy_management_cidr_range, json[QString("DedicatedTenancyManagementCidrRange")]);
    m_dedicated_tenancy_management_cidr_range_isSet = !json[QString("DedicatedTenancyManagementCidrRange")].isNull() && m_dedicated_tenancy_management_cidr_range_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("ErrorCode")]);
    m_error_code_isSet = !json[QString("ErrorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("ErrorMessage")]);
    m_error_message_isSet = !json[QString("ErrorMessage")].isNull() && m_error_message_isValid;
}

QString OAIAccountModification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountModification::asJsonObject() const {
    QJsonObject obj;
    if (m_modification_state.isSet()) {
        obj.insert(QString("ModificationState"), ::OpenAPI::toJsonValue(m_modification_state));
    }
    if (m_dedicated_tenancy_support.isSet()) {
        obj.insert(QString("DedicatedTenancySupport"), ::OpenAPI::toJsonValue(m_dedicated_tenancy_support));
    }
    if (m_dedicated_tenancy_management_cidr_range_isSet) {
        obj.insert(QString("DedicatedTenancyManagementCidrRange"), ::OpenAPI::toJsonValue(m_dedicated_tenancy_management_cidr_range));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("ErrorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("ErrorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    return obj;
}

OAIDedicatedTenancyModificationStateEnum OAIAccountModification::getModificationState() const {
    return m_modification_state;
}
void OAIAccountModification::setModificationState(const OAIDedicatedTenancyModificationStateEnum &modification_state) {
    m_modification_state = modification_state;
    m_modification_state_isSet = true;
}

bool OAIAccountModification::is_modification_state_Set() const{
    return m_modification_state_isSet;
}

bool OAIAccountModification::is_modification_state_Valid() const{
    return m_modification_state_isValid;
}

OAIDedicatedTenancySupportResultEnum OAIAccountModification::getDedicatedTenancySupport() const {
    return m_dedicated_tenancy_support;
}
void OAIAccountModification::setDedicatedTenancySupport(const OAIDedicatedTenancySupportResultEnum &dedicated_tenancy_support) {
    m_dedicated_tenancy_support = dedicated_tenancy_support;
    m_dedicated_tenancy_support_isSet = true;
}

bool OAIAccountModification::is_dedicated_tenancy_support_Set() const{
    return m_dedicated_tenancy_support_isSet;
}

bool OAIAccountModification::is_dedicated_tenancy_support_Valid() const{
    return m_dedicated_tenancy_support_isValid;
}

QString OAIAccountModification::getDedicatedTenancyManagementCidrRange() const {
    return m_dedicated_tenancy_management_cidr_range;
}
void OAIAccountModification::setDedicatedTenancyManagementCidrRange(const QString &dedicated_tenancy_management_cidr_range) {
    m_dedicated_tenancy_management_cidr_range = dedicated_tenancy_management_cidr_range;
    m_dedicated_tenancy_management_cidr_range_isSet = true;
}

bool OAIAccountModification::is_dedicated_tenancy_management_cidr_range_Set() const{
    return m_dedicated_tenancy_management_cidr_range_isSet;
}

bool OAIAccountModification::is_dedicated_tenancy_management_cidr_range_Valid() const{
    return m_dedicated_tenancy_management_cidr_range_isValid;
}

QDateTime OAIAccountModification::getStartTime() const {
    return m_start_time;
}
void OAIAccountModification::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIAccountModification::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIAccountModification::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIAccountModification::getErrorCode() const {
    return m_error_code;
}
void OAIAccountModification::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIAccountModification::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIAccountModification::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIAccountModification::getErrorMessage() const {
    return m_error_message;
}
void OAIAccountModification::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIAccountModification::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIAccountModification::is_error_message_Valid() const{
    return m_error_message_isValid;
}

bool OAIAccountModification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_modification_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dedicated_tenancy_support.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dedicated_tenancy_management_cidr_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountModification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
