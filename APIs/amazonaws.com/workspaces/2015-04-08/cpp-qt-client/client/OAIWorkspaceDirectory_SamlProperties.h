/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkspaceDirectory_SamlProperties.h
 *
 * 
 */

#ifndef OAIWorkspaceDirectory_SamlProperties_H
#define OAIWorkspaceDirectory_SamlProperties_H

#include <QJsonObject>

#include "OAISamlStatusEnum.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkspaceDirectory_SamlProperties : public OAIObject {
public:
    OAIWorkspaceDirectory_SamlProperties();
    OAIWorkspaceDirectory_SamlProperties(QString json);
    ~OAIWorkspaceDirectory_SamlProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISamlStatusEnum getStatus() const;
    void setStatus(const OAISamlStatusEnum &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUserAccessUrl() const;
    void setUserAccessUrl(const QString &user_access_url);
    bool is_user_access_url_Set() const;
    bool is_user_access_url_Valid() const;

    QString getRelayStateParameterName() const;
    void setRelayStateParameterName(const QString &relay_state_parameter_name);
    bool is_relay_state_parameter_name_Set() const;
    bool is_relay_state_parameter_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISamlStatusEnum m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_user_access_url;
    bool m_user_access_url_isSet;
    bool m_user_access_url_isValid;

    QString m_relay_state_parameter_name;
    bool m_relay_state_parameter_name_isSet;
    bool m_relay_state_parameter_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkspaceDirectory_SamlProperties)

#endif // OAIWorkspaceDirectory_SamlProperties_H
