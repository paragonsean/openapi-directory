/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelatedWorkspaceProperties.h
 *
 * Describes the related WorkSpace. The related WorkSpace could be a standby WorkSpace or primary WorkSpace related to the specified WorkSpace.
 */

#ifndef OAIRelatedWorkspaceProperties_H
#define OAIRelatedWorkspaceProperties_H

#include <QJsonObject>

#include "OAIStandbyWorkspaceRelationshipType.h"
#include "OAIWorkspaceState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRelatedWorkspaceProperties : public OAIObject {
public:
    OAIRelatedWorkspaceProperties();
    OAIRelatedWorkspaceProperties(QString json);
    ~OAIRelatedWorkspaceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    OAIWorkspaceState getState() const;
    void setState(const OAIWorkspaceState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStandbyWorkspaceRelationshipType getType() const;
    void setType(const OAIStandbyWorkspaceRelationshipType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    OAIWorkspaceState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStandbyWorkspaceRelationshipType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelatedWorkspaceProperties)

#endif // OAIRelatedWorkspaceProperties_H
