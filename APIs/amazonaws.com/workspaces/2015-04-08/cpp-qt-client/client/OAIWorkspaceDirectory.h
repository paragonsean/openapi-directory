/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkspaceDirectory.h
 *
 * Describes a directory that is used with Amazon WorkSpaces.
 */

#ifndef OAIWorkspaceDirectory_H
#define OAIWorkspaceDirectory_H

#include <QJsonObject>

#include "OAITenancy.h"
#include "OAIWorkspaceDirectoryState.h"
#include "OAIWorkspaceDirectoryType.h"
#include "OAIWorkspaceDirectory_CertificateBasedAuthProperties.h"
#include "OAIWorkspaceDirectory_SamlProperties.h"
#include "OAIWorkspaceDirectory_SelfservicePermissions.h"
#include "OAIWorkspaceDirectory_WorkspaceAccessProperties.h"
#include "OAIWorkspaceDirectory_WorkspaceCreationProperties.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkspaceDirectory_WorkspaceCreationProperties;
class OAIWorkspaceDirectory_WorkspaceAccessProperties;
class OAIWorkspaceDirectory_SelfservicePermissions;
class OAIWorkspaceDirectory_SamlProperties;
class OAIWorkspaceDirectory_CertificateBasedAuthProperties;

class OAIWorkspaceDirectory : public OAIObject {
public:
    OAIWorkspaceDirectory();
    OAIWorkspaceDirectory(QString json);
    ~OAIWorkspaceDirectory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDirectoryId() const;
    void setDirectoryId(const QString &directory_id);
    bool is_directory_id_Set() const;
    bool is_directory_id_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QString getDirectoryName() const;
    void setDirectoryName(const QString &directory_name);
    bool is_directory_name_Set() const;
    bool is_directory_name_Valid() const;

    QString getRegistrationCode() const;
    void setRegistrationCode(const QString &registration_code);
    bool is_registration_code_Set() const;
    bool is_registration_code_Valid() const;

    QList getSubnetIds() const;
    void setSubnetIds(const QList &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QList getDnsIpAddresses() const;
    void setDnsIpAddresses(const QList &dns_ip_addresses);
    bool is_dns_ip_addresses_Set() const;
    bool is_dns_ip_addresses_Valid() const;

    QString getCustomerUserName() const;
    void setCustomerUserName(const QString &customer_user_name);
    bool is_customer_user_name_Set() const;
    bool is_customer_user_name_Valid() const;

    QString getIamRoleId() const;
    void setIamRoleId(const QString &iam_role_id);
    bool is_iam_role_id_Set() const;
    bool is_iam_role_id_Valid() const;

    OAIWorkspaceDirectoryType getDirectoryType() const;
    void setDirectoryType(const OAIWorkspaceDirectoryType &directory_type);
    bool is_directory_type_Set() const;
    bool is_directory_type_Valid() const;

    QString getWorkspaceSecurityGroupId() const;
    void setWorkspaceSecurityGroupId(const QString &workspace_security_group_id);
    bool is_workspace_security_group_id_Set() const;
    bool is_workspace_security_group_id_Valid() const;

    OAIWorkspaceDirectoryState getState() const;
    void setState(const OAIWorkspaceDirectoryState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIWorkspaceDirectory_WorkspaceCreationProperties getWorkspaceCreationProperties() const;
    void setWorkspaceCreationProperties(const OAIWorkspaceDirectory_WorkspaceCreationProperties &workspace_creation_properties);
    bool is_workspace_creation_properties_Set() const;
    bool is_workspace_creation_properties_Valid() const;

    QList getIpGroupIds() const;
    void setIpGroupIds(const QList &ip_group_ids);
    bool is_ip_group_ids_Set() const;
    bool is_ip_group_ids_Valid() const;

    OAIWorkspaceDirectory_WorkspaceAccessProperties getWorkspaceAccessProperties() const;
    void setWorkspaceAccessProperties(const OAIWorkspaceDirectory_WorkspaceAccessProperties &workspace_access_properties);
    bool is_workspace_access_properties_Set() const;
    bool is_workspace_access_properties_Valid() const;

    OAITenancy getTenancy() const;
    void setTenancy(const OAITenancy &tenancy);
    bool is_tenancy_Set() const;
    bool is_tenancy_Valid() const;

    OAIWorkspaceDirectory_SelfservicePermissions getSelfservicePermissions() const;
    void setSelfservicePermissions(const OAIWorkspaceDirectory_SelfservicePermissions &selfservice_permissions);
    bool is_selfservice_permissions_Set() const;
    bool is_selfservice_permissions_Valid() const;

    OAIWorkspaceDirectory_SamlProperties getSamlProperties() const;
    void setSamlProperties(const OAIWorkspaceDirectory_SamlProperties &saml_properties);
    bool is_saml_properties_Set() const;
    bool is_saml_properties_Valid() const;

    OAIWorkspaceDirectory_CertificateBasedAuthProperties getCertificateBasedAuthProperties() const;
    void setCertificateBasedAuthProperties(const OAIWorkspaceDirectory_CertificateBasedAuthProperties &certificate_based_auth_properties);
    bool is_certificate_based_auth_properties_Set() const;
    bool is_certificate_based_auth_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_directory_id;
    bool m_directory_id_isSet;
    bool m_directory_id_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QString m_directory_name;
    bool m_directory_name_isSet;
    bool m_directory_name_isValid;

    QString m_registration_code;
    bool m_registration_code_isSet;
    bool m_registration_code_isValid;

    QList m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QList m_dns_ip_addresses;
    bool m_dns_ip_addresses_isSet;
    bool m_dns_ip_addresses_isValid;

    QString m_customer_user_name;
    bool m_customer_user_name_isSet;
    bool m_customer_user_name_isValid;

    QString m_iam_role_id;
    bool m_iam_role_id_isSet;
    bool m_iam_role_id_isValid;

    OAIWorkspaceDirectoryType m_directory_type;
    bool m_directory_type_isSet;
    bool m_directory_type_isValid;

    QString m_workspace_security_group_id;
    bool m_workspace_security_group_id_isSet;
    bool m_workspace_security_group_id_isValid;

    OAIWorkspaceDirectoryState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIWorkspaceDirectory_WorkspaceCreationProperties m_workspace_creation_properties;
    bool m_workspace_creation_properties_isSet;
    bool m_workspace_creation_properties_isValid;

    QList m_ip_group_ids;
    bool m_ip_group_ids_isSet;
    bool m_ip_group_ids_isValid;

    OAIWorkspaceDirectory_WorkspaceAccessProperties m_workspace_access_properties;
    bool m_workspace_access_properties_isSet;
    bool m_workspace_access_properties_isValid;

    OAITenancy m_tenancy;
    bool m_tenancy_isSet;
    bool m_tenancy_isValid;

    OAIWorkspaceDirectory_SelfservicePermissions m_selfservice_permissions;
    bool m_selfservice_permissions_isSet;
    bool m_selfservice_permissions_isValid;

    OAIWorkspaceDirectory_SamlProperties m_saml_properties;
    bool m_saml_properties_isSet;
    bool m_saml_properties_isValid;

    OAIWorkspaceDirectory_CertificateBasedAuthProperties m_certificate_based_auth_properties;
    bool m_certificate_based_auth_properties_isSet;
    bool m_certificate_based_auth_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkspaceDirectory)

#endif // OAIWorkspaceDirectory_H
