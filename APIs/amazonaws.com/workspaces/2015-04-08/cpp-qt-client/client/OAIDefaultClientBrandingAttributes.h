/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDefaultClientBrandingAttributes.h
 *
 * &lt;p&gt;Returns default client branding attributes that were imported. These attributes display on the client login screen.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Client branding attributes are public facing. Ensure that you don&#39;t include sensitive information.&lt;/p&gt; &lt;/important&gt;
 */

#ifndef OAIDefaultClientBrandingAttributes_H
#define OAIDefaultClientBrandingAttributes_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDefaultClientBrandingAttributes : public OAIObject {
public:
    OAIDefaultClientBrandingAttributes();
    OAIDefaultClientBrandingAttributes(QString json);
    ~OAIDefaultClientBrandingAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLogoUrl() const;
    void setLogoUrl(const QString &logo_url);
    bool is_logo_url_Set() const;
    bool is_logo_url_Valid() const;

    QString getSupportEmail() const;
    void setSupportEmail(const QString &support_email);
    bool is_support_email_Set() const;
    bool is_support_email_Valid() const;

    QString getSupportLink() const;
    void setSupportLink(const QString &support_link);
    bool is_support_link_Set() const;
    bool is_support_link_Valid() const;

    QString getForgotPasswordLink() const;
    void setForgotPasswordLink(const QString &forgot_password_link);
    bool is_forgot_password_link_Set() const;
    bool is_forgot_password_link_Valid() const;

    QMap getLoginMessage() const;
    void setLoginMessage(const QMap &login_message);
    bool is_login_message_Set() const;
    bool is_login_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_logo_url;
    bool m_logo_url_isSet;
    bool m_logo_url_isValid;

    QString m_support_email;
    bool m_support_email_isSet;
    bool m_support_email_isValid;

    QString m_support_link;
    bool m_support_link_isSet;
    bool m_support_link_isValid;

    QString m_forgot_password_link;
    bool m_forgot_password_link_isSet;
    bool m_forgot_password_link_isValid;

    QMap m_login_message;
    bool m_login_message_isSet;
    bool m_login_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDefaultClientBrandingAttributes)

#endif // OAIDefaultClientBrandingAttributes_H
