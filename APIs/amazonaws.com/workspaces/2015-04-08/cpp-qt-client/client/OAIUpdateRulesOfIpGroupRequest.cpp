/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRulesOfIpGroupRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRulesOfIpGroupRequest::OAIUpdateRulesOfIpGroupRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRulesOfIpGroupRequest::OAIUpdateRulesOfIpGroupRequest() {
    this->initializeModel();
}

OAIUpdateRulesOfIpGroupRequest::~OAIUpdateRulesOfIpGroupRequest() {}

void OAIUpdateRulesOfIpGroupRequest::initializeModel() {

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_user_rules_isSet = false;
    m_user_rules_isValid = false;
}

void OAIUpdateRulesOfIpGroupRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRulesOfIpGroupRequest::fromJsonObject(QJsonObject json) {

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("GroupId")]);
    m_group_id_isSet = !json[QString("GroupId")].isNull() && m_group_id_isValid;

    m_user_rules_isValid = ::OpenAPI::fromJsonValue(m_user_rules, json[QString("UserRules")]);
    m_user_rules_isSet = !json[QString("UserRules")].isNull() && m_user_rules_isValid;
}

QString OAIUpdateRulesOfIpGroupRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRulesOfIpGroupRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_group_id_isSet) {
        obj.insert(QString("GroupId"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_user_rules.isSet()) {
        obj.insert(QString("UserRules"), ::OpenAPI::toJsonValue(m_user_rules));
    }
    return obj;
}

QString OAIUpdateRulesOfIpGroupRequest::getGroupId() const {
    return m_group_id;
}
void OAIUpdateRulesOfIpGroupRequest::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIUpdateRulesOfIpGroupRequest::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIUpdateRulesOfIpGroupRequest::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QList OAIUpdateRulesOfIpGroupRequest::getUserRules() const {
    return m_user_rules;
}
void OAIUpdateRulesOfIpGroupRequest::setUserRules(const QList &user_rules) {
    m_user_rules = user_rules;
    m_user_rules_isSet = true;
}

bool OAIUpdateRulesOfIpGroupRequest::is_user_rules_Set() const{
    return m_user_rules_isSet;
}

bool OAIUpdateRulesOfIpGroupRequest::is_user_rules_Valid() const{
    return m_user_rules_isValid;
}

bool OAIUpdateRulesOfIpGroupRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_rules.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRulesOfIpGroupRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_id_isValid && m_user_rules_isValid && true;
}

} // namespace OpenAPI
