/*
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tenancy;
import org.openapitools.client.model.WorkspaceDirectoryCertificateBasedAuthProperties;
import org.openapitools.client.model.WorkspaceDirectorySamlProperties;
import org.openapitools.client.model.WorkspaceDirectorySelfservicePermissions;
import org.openapitools.client.model.WorkspaceDirectoryState;
import org.openapitools.client.model.WorkspaceDirectoryType;
import org.openapitools.client.model.WorkspaceDirectoryWorkspaceAccessProperties;
import org.openapitools.client.model.WorkspaceDirectoryWorkspaceCreationProperties;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WorkspaceDirectory
 */
public class WorkspaceDirectoryTest {
    private final WorkspaceDirectory model = new WorkspaceDirectory();

    /**
     * Model tests for WorkspaceDirectory
     */
    @Test
    public void testWorkspaceDirectory() {
        // TODO: test WorkspaceDirectory
    }

    /**
     * Test the property 'directoryId'
     */
    @Test
    public void directoryIdTest() {
        // TODO: test directoryId
    }

    /**
     * Test the property 'alias'
     */
    @Test
    public void aliasTest() {
        // TODO: test alias
    }

    /**
     * Test the property 'directoryName'
     */
    @Test
    public void directoryNameTest() {
        // TODO: test directoryName
    }

    /**
     * Test the property 'registrationCode'
     */
    @Test
    public void registrationCodeTest() {
        // TODO: test registrationCode
    }

    /**
     * Test the property 'subnetIds'
     */
    @Test
    public void subnetIdsTest() {
        // TODO: test subnetIds
    }

    /**
     * Test the property 'dnsIpAddresses'
     */
    @Test
    public void dnsIpAddressesTest() {
        // TODO: test dnsIpAddresses
    }

    /**
     * Test the property 'customerUserName'
     */
    @Test
    public void customerUserNameTest() {
        // TODO: test customerUserName
    }

    /**
     * Test the property 'iamRoleId'
     */
    @Test
    public void iamRoleIdTest() {
        // TODO: test iamRoleId
    }

    /**
     * Test the property 'directoryType'
     */
    @Test
    public void directoryTypeTest() {
        // TODO: test directoryType
    }

    /**
     * Test the property 'workspaceSecurityGroupId'
     */
    @Test
    public void workspaceSecurityGroupIdTest() {
        // TODO: test workspaceSecurityGroupId
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'workspaceCreationProperties'
     */
    @Test
    public void workspaceCreationPropertiesTest() {
        // TODO: test workspaceCreationProperties
    }

    /**
     * Test the property 'ipGroupIds'
     */
    @Test
    public void ipGroupIdsTest() {
        // TODO: test ipGroupIds
    }

    /**
     * Test the property 'workspaceAccessProperties'
     */
    @Test
    public void workspaceAccessPropertiesTest() {
        // TODO: test workspaceAccessProperties
    }

    /**
     * Test the property 'tenancy'
     */
    @Test
    public void tenancyTest() {
        // TODO: test tenancy
    }

    /**
     * Test the property 'selfservicePermissions'
     */
    @Test
    public void selfservicePermissionsTest() {
        // TODO: test selfservicePermissions
    }

    /**
     * Test the property 'samlProperties'
     */
    @Test
    public void samlPropertiesTest() {
        // TODO: test samlProperties
    }

    /**
     * Test the property 'certificateBasedAuthProperties'
     */
    @Test
    public void certificateBasedAuthPropertiesTest() {
        // TODO: test certificateBasedAuthProperties
    }

}
