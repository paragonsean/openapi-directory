/*
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.BundleType;
import org.openapitools.client.model.WorkspaceBundleComputeType;
import org.openapitools.client.model.WorkspaceBundleRootStorage;
import org.openapitools.client.model.WorkspaceBundleState;
import org.openapitools.client.model.WorkspaceBundleUserStorage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WorkspaceBundle
 */
public class WorkspaceBundleTest {
    private final WorkspaceBundle model = new WorkspaceBundle();

    /**
     * Model tests for WorkspaceBundle
     */
    @Test
    public void testWorkspaceBundle() {
        // TODO: test WorkspaceBundle
    }

    /**
     * Test the property 'bundleId'
     */
    @Test
    public void bundleIdTest() {
        // TODO: test bundleId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'imageId'
     */
    @Test
    public void imageIdTest() {
        // TODO: test imageId
    }

    /**
     * Test the property 'rootStorage'
     */
    @Test
    public void rootStorageTest() {
        // TODO: test rootStorage
    }

    /**
     * Test the property 'userStorage'
     */
    @Test
    public void userStorageTest() {
        // TODO: test userStorage
    }

    /**
     * Test the property 'computeType'
     */
    @Test
    public void computeTypeTest() {
        // TODO: test computeType
    }

    /**
     * Test the property 'lastUpdatedTime'
     */
    @Test
    public void lastUpdatedTimeTest() {
        // TODO: test lastUpdatedTime
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'bundleType'
     */
    @Test
    public void bundleTypeTest() {
        // TODO: test bundleType
    }

}
