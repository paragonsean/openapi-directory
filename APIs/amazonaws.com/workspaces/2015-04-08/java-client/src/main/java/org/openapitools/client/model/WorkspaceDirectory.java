/*
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tenancy;
import org.openapitools.client.model.WorkspaceDirectoryCertificateBasedAuthProperties;
import org.openapitools.client.model.WorkspaceDirectorySamlProperties;
import org.openapitools.client.model.WorkspaceDirectorySelfservicePermissions;
import org.openapitools.client.model.WorkspaceDirectoryState;
import org.openapitools.client.model.WorkspaceDirectoryType;
import org.openapitools.client.model.WorkspaceDirectoryWorkspaceAccessProperties;
import org.openapitools.client.model.WorkspaceDirectoryWorkspaceCreationProperties;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a directory that is used with Amazon WorkSpaces.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:52.076650-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WorkspaceDirectory {
  public static final String SERIALIZED_NAME_DIRECTORY_ID = "DirectoryId";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_ID)
  private String directoryId;

  public static final String SERIALIZED_NAME_ALIAS = "Alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_DIRECTORY_NAME = "DirectoryName";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_NAME)
  private String directoryName;

  public static final String SERIALIZED_NAME_REGISTRATION_CODE = "RegistrationCode";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_CODE)
  private String registrationCode;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "SubnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_DNS_IP_ADDRESSES = "DnsIpAddresses";
  @SerializedName(SERIALIZED_NAME_DNS_IP_ADDRESSES)
  private List dnsIpAddresses;

  public static final String SERIALIZED_NAME_CUSTOMER_USER_NAME = "CustomerUserName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_USER_NAME)
  private String customerUserName;

  public static final String SERIALIZED_NAME_IAM_ROLE_ID = "IamRoleId";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ID)
  private String iamRoleId;

  public static final String SERIALIZED_NAME_DIRECTORY_TYPE = "DirectoryType";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_TYPE)
  private WorkspaceDirectoryType directoryType;

  public static final String SERIALIZED_NAME_WORKSPACE_SECURITY_GROUP_ID = "WorkspaceSecurityGroupId";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_SECURITY_GROUP_ID)
  private String workspaceSecurityGroupId;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private WorkspaceDirectoryState state;

  public static final String SERIALIZED_NAME_WORKSPACE_CREATION_PROPERTIES = "WorkspaceCreationProperties";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_CREATION_PROPERTIES)
  private WorkspaceDirectoryWorkspaceCreationProperties workspaceCreationProperties;

  public static final String SERIALIZED_NAME_IP_GROUP_IDS = "ipGroupIds";
  @SerializedName(SERIALIZED_NAME_IP_GROUP_IDS)
  private List ipGroupIds;

  public static final String SERIALIZED_NAME_WORKSPACE_ACCESS_PROPERTIES = "WorkspaceAccessProperties";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_ACCESS_PROPERTIES)
  private WorkspaceDirectoryWorkspaceAccessProperties workspaceAccessProperties;

  public static final String SERIALIZED_NAME_TENANCY = "Tenancy";
  @SerializedName(SERIALIZED_NAME_TENANCY)
  private Tenancy tenancy;

  public static final String SERIALIZED_NAME_SELFSERVICE_PERMISSIONS = "SelfservicePermissions";
  @SerializedName(SERIALIZED_NAME_SELFSERVICE_PERMISSIONS)
  private WorkspaceDirectorySelfservicePermissions selfservicePermissions;

  public static final String SERIALIZED_NAME_SAML_PROPERTIES = "SamlProperties";
  @SerializedName(SERIALIZED_NAME_SAML_PROPERTIES)
  private WorkspaceDirectorySamlProperties samlProperties;

  public static final String SERIALIZED_NAME_CERTIFICATE_BASED_AUTH_PROPERTIES = "CertificateBasedAuthProperties";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_BASED_AUTH_PROPERTIES)
  private WorkspaceDirectoryCertificateBasedAuthProperties certificateBasedAuthProperties;

  public WorkspaceDirectory() {
  }

  public WorkspaceDirectory directoryId(String directoryId) {
    this.directoryId = directoryId;
    return this;
  }

  /**
   * Get directoryId
   * @return directoryId
   */
  @javax.annotation.Nullable
  public String getDirectoryId() {
    return directoryId;
  }

  public void setDirectoryId(String directoryId) {
    this.directoryId = directoryId;
  }


  public WorkspaceDirectory alias(String alias) {
    this.alias = alias;
    return this;
  }

  /**
   * Get alias
   * @return alias
   */
  @javax.annotation.Nullable
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }


  public WorkspaceDirectory directoryName(String directoryName) {
    this.directoryName = directoryName;
    return this;
  }

  /**
   * Get directoryName
   * @return directoryName
   */
  @javax.annotation.Nullable
  public String getDirectoryName() {
    return directoryName;
  }

  public void setDirectoryName(String directoryName) {
    this.directoryName = directoryName;
  }


  public WorkspaceDirectory registrationCode(String registrationCode) {
    this.registrationCode = registrationCode;
    return this;
  }

  /**
   * Get registrationCode
   * @return registrationCode
   */
  @javax.annotation.Nullable
  public String getRegistrationCode() {
    return registrationCode;
  }

  public void setRegistrationCode(String registrationCode) {
    this.registrationCode = registrationCode;
  }


  public WorkspaceDirectory subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public WorkspaceDirectory dnsIpAddresses(List dnsIpAddresses) {
    this.dnsIpAddresses = dnsIpAddresses;
    return this;
  }

  /**
   * Get dnsIpAddresses
   * @return dnsIpAddresses
   */
  @javax.annotation.Nullable
  public List getDnsIpAddresses() {
    return dnsIpAddresses;
  }

  public void setDnsIpAddresses(List dnsIpAddresses) {
    this.dnsIpAddresses = dnsIpAddresses;
  }


  public WorkspaceDirectory customerUserName(String customerUserName) {
    this.customerUserName = customerUserName;
    return this;
  }

  /**
   * Get customerUserName
   * @return customerUserName
   */
  @javax.annotation.Nullable
  public String getCustomerUserName() {
    return customerUserName;
  }

  public void setCustomerUserName(String customerUserName) {
    this.customerUserName = customerUserName;
  }


  public WorkspaceDirectory iamRoleId(String iamRoleId) {
    this.iamRoleId = iamRoleId;
    return this;
  }

  /**
   * Get iamRoleId
   * @return iamRoleId
   */
  @javax.annotation.Nullable
  public String getIamRoleId() {
    return iamRoleId;
  }

  public void setIamRoleId(String iamRoleId) {
    this.iamRoleId = iamRoleId;
  }


  public WorkspaceDirectory directoryType(WorkspaceDirectoryType directoryType) {
    this.directoryType = directoryType;
    return this;
  }

  /**
   * Get directoryType
   * @return directoryType
   */
  @javax.annotation.Nullable
  public WorkspaceDirectoryType getDirectoryType() {
    return directoryType;
  }

  public void setDirectoryType(WorkspaceDirectoryType directoryType) {
    this.directoryType = directoryType;
  }


  public WorkspaceDirectory workspaceSecurityGroupId(String workspaceSecurityGroupId) {
    this.workspaceSecurityGroupId = workspaceSecurityGroupId;
    return this;
  }

  /**
   * Get workspaceSecurityGroupId
   * @return workspaceSecurityGroupId
   */
  @javax.annotation.Nullable
  public String getWorkspaceSecurityGroupId() {
    return workspaceSecurityGroupId;
  }

  public void setWorkspaceSecurityGroupId(String workspaceSecurityGroupId) {
    this.workspaceSecurityGroupId = workspaceSecurityGroupId;
  }


  public WorkspaceDirectory state(WorkspaceDirectoryState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public WorkspaceDirectoryState getState() {
    return state;
  }

  public void setState(WorkspaceDirectoryState state) {
    this.state = state;
  }


  public WorkspaceDirectory workspaceCreationProperties(WorkspaceDirectoryWorkspaceCreationProperties workspaceCreationProperties) {
    this.workspaceCreationProperties = workspaceCreationProperties;
    return this;
  }

  /**
   * Get workspaceCreationProperties
   * @return workspaceCreationProperties
   */
  @javax.annotation.Nullable
  public WorkspaceDirectoryWorkspaceCreationProperties getWorkspaceCreationProperties() {
    return workspaceCreationProperties;
  }

  public void setWorkspaceCreationProperties(WorkspaceDirectoryWorkspaceCreationProperties workspaceCreationProperties) {
    this.workspaceCreationProperties = workspaceCreationProperties;
  }


  public WorkspaceDirectory ipGroupIds(List ipGroupIds) {
    this.ipGroupIds = ipGroupIds;
    return this;
  }

  /**
   * Get ipGroupIds
   * @return ipGroupIds
   */
  @javax.annotation.Nullable
  public List getIpGroupIds() {
    return ipGroupIds;
  }

  public void setIpGroupIds(List ipGroupIds) {
    this.ipGroupIds = ipGroupIds;
  }


  public WorkspaceDirectory workspaceAccessProperties(WorkspaceDirectoryWorkspaceAccessProperties workspaceAccessProperties) {
    this.workspaceAccessProperties = workspaceAccessProperties;
    return this;
  }

  /**
   * Get workspaceAccessProperties
   * @return workspaceAccessProperties
   */
  @javax.annotation.Nullable
  public WorkspaceDirectoryWorkspaceAccessProperties getWorkspaceAccessProperties() {
    return workspaceAccessProperties;
  }

  public void setWorkspaceAccessProperties(WorkspaceDirectoryWorkspaceAccessProperties workspaceAccessProperties) {
    this.workspaceAccessProperties = workspaceAccessProperties;
  }


  public WorkspaceDirectory tenancy(Tenancy tenancy) {
    this.tenancy = tenancy;
    return this;
  }

  /**
   * Get tenancy
   * @return tenancy
   */
  @javax.annotation.Nullable
  public Tenancy getTenancy() {
    return tenancy;
  }

  public void setTenancy(Tenancy tenancy) {
    this.tenancy = tenancy;
  }


  public WorkspaceDirectory selfservicePermissions(WorkspaceDirectorySelfservicePermissions selfservicePermissions) {
    this.selfservicePermissions = selfservicePermissions;
    return this;
  }

  /**
   * Get selfservicePermissions
   * @return selfservicePermissions
   */
  @javax.annotation.Nullable
  public WorkspaceDirectorySelfservicePermissions getSelfservicePermissions() {
    return selfservicePermissions;
  }

  public void setSelfservicePermissions(WorkspaceDirectorySelfservicePermissions selfservicePermissions) {
    this.selfservicePermissions = selfservicePermissions;
  }


  public WorkspaceDirectory samlProperties(WorkspaceDirectorySamlProperties samlProperties) {
    this.samlProperties = samlProperties;
    return this;
  }

  /**
   * Get samlProperties
   * @return samlProperties
   */
  @javax.annotation.Nullable
  public WorkspaceDirectorySamlProperties getSamlProperties() {
    return samlProperties;
  }

  public void setSamlProperties(WorkspaceDirectorySamlProperties samlProperties) {
    this.samlProperties = samlProperties;
  }


  public WorkspaceDirectory certificateBasedAuthProperties(WorkspaceDirectoryCertificateBasedAuthProperties certificateBasedAuthProperties) {
    this.certificateBasedAuthProperties = certificateBasedAuthProperties;
    return this;
  }

  /**
   * Get certificateBasedAuthProperties
   * @return certificateBasedAuthProperties
   */
  @javax.annotation.Nullable
  public WorkspaceDirectoryCertificateBasedAuthProperties getCertificateBasedAuthProperties() {
    return certificateBasedAuthProperties;
  }

  public void setCertificateBasedAuthProperties(WorkspaceDirectoryCertificateBasedAuthProperties certificateBasedAuthProperties) {
    this.certificateBasedAuthProperties = certificateBasedAuthProperties;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkspaceDirectory workspaceDirectory = (WorkspaceDirectory) o;
    return Objects.equals(this.directoryId, workspaceDirectory.directoryId) &&
        Objects.equals(this.alias, workspaceDirectory.alias) &&
        Objects.equals(this.directoryName, workspaceDirectory.directoryName) &&
        Objects.equals(this.registrationCode, workspaceDirectory.registrationCode) &&
        Objects.equals(this.subnetIds, workspaceDirectory.subnetIds) &&
        Objects.equals(this.dnsIpAddresses, workspaceDirectory.dnsIpAddresses) &&
        Objects.equals(this.customerUserName, workspaceDirectory.customerUserName) &&
        Objects.equals(this.iamRoleId, workspaceDirectory.iamRoleId) &&
        Objects.equals(this.directoryType, workspaceDirectory.directoryType) &&
        Objects.equals(this.workspaceSecurityGroupId, workspaceDirectory.workspaceSecurityGroupId) &&
        Objects.equals(this.state, workspaceDirectory.state) &&
        Objects.equals(this.workspaceCreationProperties, workspaceDirectory.workspaceCreationProperties) &&
        Objects.equals(this.ipGroupIds, workspaceDirectory.ipGroupIds) &&
        Objects.equals(this.workspaceAccessProperties, workspaceDirectory.workspaceAccessProperties) &&
        Objects.equals(this.tenancy, workspaceDirectory.tenancy) &&
        Objects.equals(this.selfservicePermissions, workspaceDirectory.selfservicePermissions) &&
        Objects.equals(this.samlProperties, workspaceDirectory.samlProperties) &&
        Objects.equals(this.certificateBasedAuthProperties, workspaceDirectory.certificateBasedAuthProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directoryId, alias, directoryName, registrationCode, subnetIds, dnsIpAddresses, customerUserName, iamRoleId, directoryType, workspaceSecurityGroupId, state, workspaceCreationProperties, ipGroupIds, workspaceAccessProperties, tenancy, selfservicePermissions, samlProperties, certificateBasedAuthProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkspaceDirectory {\n");
    sb.append("    directoryId: ").append(toIndentedString(directoryId)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    directoryName: ").append(toIndentedString(directoryName)).append("\n");
    sb.append("    registrationCode: ").append(toIndentedString(registrationCode)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    dnsIpAddresses: ").append(toIndentedString(dnsIpAddresses)).append("\n");
    sb.append("    customerUserName: ").append(toIndentedString(customerUserName)).append("\n");
    sb.append("    iamRoleId: ").append(toIndentedString(iamRoleId)).append("\n");
    sb.append("    directoryType: ").append(toIndentedString(directoryType)).append("\n");
    sb.append("    workspaceSecurityGroupId: ").append(toIndentedString(workspaceSecurityGroupId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    workspaceCreationProperties: ").append(toIndentedString(workspaceCreationProperties)).append("\n");
    sb.append("    ipGroupIds: ").append(toIndentedString(ipGroupIds)).append("\n");
    sb.append("    workspaceAccessProperties: ").append(toIndentedString(workspaceAccessProperties)).append("\n");
    sb.append("    tenancy: ").append(toIndentedString(tenancy)).append("\n");
    sb.append("    selfservicePermissions: ").append(toIndentedString(selfservicePermissions)).append("\n");
    sb.append("    samlProperties: ").append(toIndentedString(samlProperties)).append("\n");
    sb.append("    certificateBasedAuthProperties: ").append(toIndentedString(certificateBasedAuthProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DirectoryId");
    openapiFields.add("Alias");
    openapiFields.add("DirectoryName");
    openapiFields.add("RegistrationCode");
    openapiFields.add("SubnetIds");
    openapiFields.add("DnsIpAddresses");
    openapiFields.add("CustomerUserName");
    openapiFields.add("IamRoleId");
    openapiFields.add("DirectoryType");
    openapiFields.add("WorkspaceSecurityGroupId");
    openapiFields.add("State");
    openapiFields.add("WorkspaceCreationProperties");
    openapiFields.add("ipGroupIds");
    openapiFields.add("WorkspaceAccessProperties");
    openapiFields.add("Tenancy");
    openapiFields.add("SelfservicePermissions");
    openapiFields.add("SamlProperties");
    openapiFields.add("CertificateBasedAuthProperties");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WorkspaceDirectory
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WorkspaceDirectory.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkspaceDirectory is not found in the empty JSON string", WorkspaceDirectory.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WorkspaceDirectory.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkspaceDirectory` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DirectoryId`
      if (jsonObj.get("DirectoryId") != null && !jsonObj.get("DirectoryId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DirectoryId"));
      }
      // validate the optional field `Alias`
      if (jsonObj.get("Alias") != null && !jsonObj.get("Alias").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Alias"));
      }
      // validate the optional field `DirectoryName`
      if (jsonObj.get("DirectoryName") != null && !jsonObj.get("DirectoryName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DirectoryName"));
      }
      // validate the optional field `RegistrationCode`
      if (jsonObj.get("RegistrationCode") != null && !jsonObj.get("RegistrationCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RegistrationCode"));
      }
      // validate the optional field `SubnetIds`
      if (jsonObj.get("SubnetIds") != null && !jsonObj.get("SubnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SubnetIds"));
      }
      // validate the optional field `DnsIpAddresses`
      if (jsonObj.get("DnsIpAddresses") != null && !jsonObj.get("DnsIpAddresses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DnsIpAddresses"));
      }
      // validate the optional field `CustomerUserName`
      if (jsonObj.get("CustomerUserName") != null && !jsonObj.get("CustomerUserName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomerUserName"));
      }
      // validate the optional field `IamRoleId`
      if (jsonObj.get("IamRoleId") != null && !jsonObj.get("IamRoleId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleId"));
      }
      // validate the optional field `DirectoryType`
      if (jsonObj.get("DirectoryType") != null && !jsonObj.get("DirectoryType").isJsonNull()) {
        WorkspaceDirectoryType.validateJsonElement(jsonObj.get("DirectoryType"));
      }
      // validate the optional field `WorkspaceSecurityGroupId`
      if (jsonObj.get("WorkspaceSecurityGroupId") != null && !jsonObj.get("WorkspaceSecurityGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WorkspaceSecurityGroupId"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        WorkspaceDirectoryState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `WorkspaceCreationProperties`
      if (jsonObj.get("WorkspaceCreationProperties") != null && !jsonObj.get("WorkspaceCreationProperties").isJsonNull()) {
        WorkspaceDirectoryWorkspaceCreationProperties.validateJsonElement(jsonObj.get("WorkspaceCreationProperties"));
      }
      // validate the optional field `ipGroupIds`
      if (jsonObj.get("ipGroupIds") != null && !jsonObj.get("ipGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ipGroupIds"));
      }
      // validate the optional field `WorkspaceAccessProperties`
      if (jsonObj.get("WorkspaceAccessProperties") != null && !jsonObj.get("WorkspaceAccessProperties").isJsonNull()) {
        WorkspaceDirectoryWorkspaceAccessProperties.validateJsonElement(jsonObj.get("WorkspaceAccessProperties"));
      }
      // validate the optional field `Tenancy`
      if (jsonObj.get("Tenancy") != null && !jsonObj.get("Tenancy").isJsonNull()) {
        Tenancy.validateJsonElement(jsonObj.get("Tenancy"));
      }
      // validate the optional field `SelfservicePermissions`
      if (jsonObj.get("SelfservicePermissions") != null && !jsonObj.get("SelfservicePermissions").isJsonNull()) {
        WorkspaceDirectorySelfservicePermissions.validateJsonElement(jsonObj.get("SelfservicePermissions"));
      }
      // validate the optional field `SamlProperties`
      if (jsonObj.get("SamlProperties") != null && !jsonObj.get("SamlProperties").isJsonNull()) {
        WorkspaceDirectorySamlProperties.validateJsonElement(jsonObj.get("SamlProperties"));
      }
      // validate the optional field `CertificateBasedAuthProperties`
      if (jsonObj.get("CertificateBasedAuthProperties") != null && !jsonObj.get("CertificateBasedAuthProperties").isJsonNull()) {
        WorkspaceDirectoryCertificateBasedAuthProperties.validateJsonElement(jsonObj.get("CertificateBasedAuthProperties"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkspaceDirectory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkspaceDirectory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkspaceDirectory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkspaceDirectory.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkspaceDirectory>() {
           @Override
           public void write(JsonWriter out, WorkspaceDirectory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkspaceDirectory read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WorkspaceDirectory given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WorkspaceDirectory
   * @throws IOException if the JSON string is invalid with respect to WorkspaceDirectory
   */
  public static WorkspaceDirectory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkspaceDirectory.class);
  }

  /**
   * Convert an instance of WorkspaceDirectory to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

