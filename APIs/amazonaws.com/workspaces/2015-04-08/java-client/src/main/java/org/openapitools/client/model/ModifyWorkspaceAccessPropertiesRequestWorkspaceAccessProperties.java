/*
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccessPropertyValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:52.076650-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties {
  public static final String SERIALIZED_NAME_DEVICE_TYPE_WINDOWS = "DeviceTypeWindows";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_WINDOWS)
  private AccessPropertyValue deviceTypeWindows;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_OSX = "DeviceTypeOsx";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_OSX)
  private AccessPropertyValue deviceTypeOsx;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_WEB = "DeviceTypeWeb";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_WEB)
  private AccessPropertyValue deviceTypeWeb;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_IOS = "DeviceTypeIos";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_IOS)
  private AccessPropertyValue deviceTypeIos;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_ANDROID = "DeviceTypeAndroid";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_ANDROID)
  private AccessPropertyValue deviceTypeAndroid;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_CHROME_OS = "DeviceTypeChromeOs";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_CHROME_OS)
  private AccessPropertyValue deviceTypeChromeOs;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_ZERO_CLIENT = "DeviceTypeZeroClient";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_ZERO_CLIENT)
  private AccessPropertyValue deviceTypeZeroClient;

  public static final String SERIALIZED_NAME_DEVICE_TYPE_LINUX = "DeviceTypeLinux";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE_LINUX)
  private AccessPropertyValue deviceTypeLinux;

  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties() {
  }

  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeWindows(AccessPropertyValue deviceTypeWindows) {
    this.deviceTypeWindows = deviceTypeWindows;
    return this;
  }

  /**
   * Get deviceTypeWindows
   * @return deviceTypeWindows
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeWindows() {
    return deviceTypeWindows;
  }

  public void setDeviceTypeWindows(AccessPropertyValue deviceTypeWindows) {
    this.deviceTypeWindows = deviceTypeWindows;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeOsx(AccessPropertyValue deviceTypeOsx) {
    this.deviceTypeOsx = deviceTypeOsx;
    return this;
  }

  /**
   * Get deviceTypeOsx
   * @return deviceTypeOsx
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeOsx() {
    return deviceTypeOsx;
  }

  public void setDeviceTypeOsx(AccessPropertyValue deviceTypeOsx) {
    this.deviceTypeOsx = deviceTypeOsx;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeWeb(AccessPropertyValue deviceTypeWeb) {
    this.deviceTypeWeb = deviceTypeWeb;
    return this;
  }

  /**
   * Get deviceTypeWeb
   * @return deviceTypeWeb
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeWeb() {
    return deviceTypeWeb;
  }

  public void setDeviceTypeWeb(AccessPropertyValue deviceTypeWeb) {
    this.deviceTypeWeb = deviceTypeWeb;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeIos(AccessPropertyValue deviceTypeIos) {
    this.deviceTypeIos = deviceTypeIos;
    return this;
  }

  /**
   * Get deviceTypeIos
   * @return deviceTypeIos
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeIos() {
    return deviceTypeIos;
  }

  public void setDeviceTypeIos(AccessPropertyValue deviceTypeIos) {
    this.deviceTypeIos = deviceTypeIos;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeAndroid(AccessPropertyValue deviceTypeAndroid) {
    this.deviceTypeAndroid = deviceTypeAndroid;
    return this;
  }

  /**
   * Get deviceTypeAndroid
   * @return deviceTypeAndroid
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeAndroid() {
    return deviceTypeAndroid;
  }

  public void setDeviceTypeAndroid(AccessPropertyValue deviceTypeAndroid) {
    this.deviceTypeAndroid = deviceTypeAndroid;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeChromeOs(AccessPropertyValue deviceTypeChromeOs) {
    this.deviceTypeChromeOs = deviceTypeChromeOs;
    return this;
  }

  /**
   * Get deviceTypeChromeOs
   * @return deviceTypeChromeOs
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeChromeOs() {
    return deviceTypeChromeOs;
  }

  public void setDeviceTypeChromeOs(AccessPropertyValue deviceTypeChromeOs) {
    this.deviceTypeChromeOs = deviceTypeChromeOs;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeZeroClient(AccessPropertyValue deviceTypeZeroClient) {
    this.deviceTypeZeroClient = deviceTypeZeroClient;
    return this;
  }

  /**
   * Get deviceTypeZeroClient
   * @return deviceTypeZeroClient
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeZeroClient() {
    return deviceTypeZeroClient;
  }

  public void setDeviceTypeZeroClient(AccessPropertyValue deviceTypeZeroClient) {
    this.deviceTypeZeroClient = deviceTypeZeroClient;
  }


  public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties deviceTypeLinux(AccessPropertyValue deviceTypeLinux) {
    this.deviceTypeLinux = deviceTypeLinux;
    return this;
  }

  /**
   * Get deviceTypeLinux
   * @return deviceTypeLinux
   */
  @javax.annotation.Nullable
  public AccessPropertyValue getDeviceTypeLinux() {
    return deviceTypeLinux;
  }

  public void setDeviceTypeLinux(AccessPropertyValue deviceTypeLinux) {
    this.deviceTypeLinux = deviceTypeLinux;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties = (ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties) o;
    return Objects.equals(this.deviceTypeWindows, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeWindows) &&
        Objects.equals(this.deviceTypeOsx, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeOsx) &&
        Objects.equals(this.deviceTypeWeb, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeWeb) &&
        Objects.equals(this.deviceTypeIos, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeIos) &&
        Objects.equals(this.deviceTypeAndroid, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeAndroid) &&
        Objects.equals(this.deviceTypeChromeOs, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeChromeOs) &&
        Objects.equals(this.deviceTypeZeroClient, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeZeroClient) &&
        Objects.equals(this.deviceTypeLinux, modifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.deviceTypeLinux);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceTypeWindows, deviceTypeOsx, deviceTypeWeb, deviceTypeIos, deviceTypeAndroid, deviceTypeChromeOs, deviceTypeZeroClient, deviceTypeLinux);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties {\n");
    sb.append("    deviceTypeWindows: ").append(toIndentedString(deviceTypeWindows)).append("\n");
    sb.append("    deviceTypeOsx: ").append(toIndentedString(deviceTypeOsx)).append("\n");
    sb.append("    deviceTypeWeb: ").append(toIndentedString(deviceTypeWeb)).append("\n");
    sb.append("    deviceTypeIos: ").append(toIndentedString(deviceTypeIos)).append("\n");
    sb.append("    deviceTypeAndroid: ").append(toIndentedString(deviceTypeAndroid)).append("\n");
    sb.append("    deviceTypeChromeOs: ").append(toIndentedString(deviceTypeChromeOs)).append("\n");
    sb.append("    deviceTypeZeroClient: ").append(toIndentedString(deviceTypeZeroClient)).append("\n");
    sb.append("    deviceTypeLinux: ").append(toIndentedString(deviceTypeLinux)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeviceTypeWindows");
    openapiFields.add("DeviceTypeOsx");
    openapiFields.add("DeviceTypeWeb");
    openapiFields.add("DeviceTypeIos");
    openapiFields.add("DeviceTypeAndroid");
    openapiFields.add("DeviceTypeChromeOs");
    openapiFields.add("DeviceTypeZeroClient");
    openapiFields.add("DeviceTypeLinux");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties is not found in the empty JSON string", ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DeviceTypeWindows`
      if (jsonObj.get("DeviceTypeWindows") != null && !jsonObj.get("DeviceTypeWindows").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeWindows"));
      }
      // validate the optional field `DeviceTypeOsx`
      if (jsonObj.get("DeviceTypeOsx") != null && !jsonObj.get("DeviceTypeOsx").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeOsx"));
      }
      // validate the optional field `DeviceTypeWeb`
      if (jsonObj.get("DeviceTypeWeb") != null && !jsonObj.get("DeviceTypeWeb").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeWeb"));
      }
      // validate the optional field `DeviceTypeIos`
      if (jsonObj.get("DeviceTypeIos") != null && !jsonObj.get("DeviceTypeIos").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeIos"));
      }
      // validate the optional field `DeviceTypeAndroid`
      if (jsonObj.get("DeviceTypeAndroid") != null && !jsonObj.get("DeviceTypeAndroid").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeAndroid"));
      }
      // validate the optional field `DeviceTypeChromeOs`
      if (jsonObj.get("DeviceTypeChromeOs") != null && !jsonObj.get("DeviceTypeChromeOs").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeChromeOs"));
      }
      // validate the optional field `DeviceTypeZeroClient`
      if (jsonObj.get("DeviceTypeZeroClient") != null && !jsonObj.get("DeviceTypeZeroClient").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeZeroClient"));
      }
      // validate the optional field `DeviceTypeLinux`
      if (jsonObj.get("DeviceTypeLinux") != null && !jsonObj.get("DeviceTypeLinux").isJsonNull()) {
        AccessPropertyValue.validateJsonElement(jsonObj.get("DeviceTypeLinux"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties>() {
           @Override
           public void write(JsonWriter out, ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties
   * @throws IOException if the JSON string is invalid with respect to ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties
   */
  public static ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties.class);
  }

  /**
   * Convert an instance of ModifyWorkspaceAccessPropertiesRequestWorkspaceAccessProperties to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

