/*
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DedicatedTenancyModificationStateEnum;
import org.openapitools.client.model.DedicatedTenancySupportResultEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a modification to the configuration of Bring Your Own License (BYOL) for the specified account. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:52.076650-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountModification {
  public static final String SERIALIZED_NAME_MODIFICATION_STATE = "ModificationState";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_STATE)
  private DedicatedTenancyModificationStateEnum modificationState;

  public static final String SERIALIZED_NAME_DEDICATED_TENANCY_SUPPORT = "DedicatedTenancySupport";
  @SerializedName(SERIALIZED_NAME_DEDICATED_TENANCY_SUPPORT)
  private DedicatedTenancySupportResultEnum dedicatedTenancySupport;

  public static final String SERIALIZED_NAME_DEDICATED_TENANCY_MANAGEMENT_CIDR_RANGE = "DedicatedTenancyManagementCidrRange";
  @SerializedName(SERIALIZED_NAME_DEDICATED_TENANCY_MANAGEMENT_CIDR_RANGE)
  private String dedicatedTenancyManagementCidrRange;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_ERROR_CODE = "ErrorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "ErrorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public AccountModification() {
  }

  public AccountModification modificationState(DedicatedTenancyModificationStateEnum modificationState) {
    this.modificationState = modificationState;
    return this;
  }

  /**
   * Get modificationState
   * @return modificationState
   */
  @javax.annotation.Nullable
  public DedicatedTenancyModificationStateEnum getModificationState() {
    return modificationState;
  }

  public void setModificationState(DedicatedTenancyModificationStateEnum modificationState) {
    this.modificationState = modificationState;
  }


  public AccountModification dedicatedTenancySupport(DedicatedTenancySupportResultEnum dedicatedTenancySupport) {
    this.dedicatedTenancySupport = dedicatedTenancySupport;
    return this;
  }

  /**
   * Get dedicatedTenancySupport
   * @return dedicatedTenancySupport
   */
  @javax.annotation.Nullable
  public DedicatedTenancySupportResultEnum getDedicatedTenancySupport() {
    return dedicatedTenancySupport;
  }

  public void setDedicatedTenancySupport(DedicatedTenancySupportResultEnum dedicatedTenancySupport) {
    this.dedicatedTenancySupport = dedicatedTenancySupport;
  }


  public AccountModification dedicatedTenancyManagementCidrRange(String dedicatedTenancyManagementCidrRange) {
    this.dedicatedTenancyManagementCidrRange = dedicatedTenancyManagementCidrRange;
    return this;
  }

  /**
   * Get dedicatedTenancyManagementCidrRange
   * @return dedicatedTenancyManagementCidrRange
   */
  @javax.annotation.Nullable
  public String getDedicatedTenancyManagementCidrRange() {
    return dedicatedTenancyManagementCidrRange;
  }

  public void setDedicatedTenancyManagementCidrRange(String dedicatedTenancyManagementCidrRange) {
    this.dedicatedTenancyManagementCidrRange = dedicatedTenancyManagementCidrRange;
  }


  public AccountModification startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public AccountModification errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Get errorCode
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public AccountModification errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Get errorMessage
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountModification accountModification = (AccountModification) o;
    return Objects.equals(this.modificationState, accountModification.modificationState) &&
        Objects.equals(this.dedicatedTenancySupport, accountModification.dedicatedTenancySupport) &&
        Objects.equals(this.dedicatedTenancyManagementCidrRange, accountModification.dedicatedTenancyManagementCidrRange) &&
        Objects.equals(this.startTime, accountModification.startTime) &&
        Objects.equals(this.errorCode, accountModification.errorCode) &&
        Objects.equals(this.errorMessage, accountModification.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modificationState, dedicatedTenancySupport, dedicatedTenancyManagementCidrRange, startTime, errorCode, errorMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountModification {\n");
    sb.append("    modificationState: ").append(toIndentedString(modificationState)).append("\n");
    sb.append("    dedicatedTenancySupport: ").append(toIndentedString(dedicatedTenancySupport)).append("\n");
    sb.append("    dedicatedTenancyManagementCidrRange: ").append(toIndentedString(dedicatedTenancyManagementCidrRange)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModificationState");
    openapiFields.add("DedicatedTenancySupport");
    openapiFields.add("DedicatedTenancyManagementCidrRange");
    openapiFields.add("StartTime");
    openapiFields.add("ErrorCode");
    openapiFields.add("ErrorMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountModification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountModification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountModification is not found in the empty JSON string", AccountModification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountModification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountModification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModificationState`
      if (jsonObj.get("ModificationState") != null && !jsonObj.get("ModificationState").isJsonNull()) {
        DedicatedTenancyModificationStateEnum.validateJsonElement(jsonObj.get("ModificationState"));
      }
      // validate the optional field `DedicatedTenancySupport`
      if (jsonObj.get("DedicatedTenancySupport") != null && !jsonObj.get("DedicatedTenancySupport").isJsonNull()) {
        DedicatedTenancySupportResultEnum.validateJsonElement(jsonObj.get("DedicatedTenancySupport"));
      }
      // validate the optional field `DedicatedTenancyManagementCidrRange`
      if (jsonObj.get("DedicatedTenancyManagementCidrRange") != null && !jsonObj.get("DedicatedTenancyManagementCidrRange").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DedicatedTenancyManagementCidrRange"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `ErrorCode`
      if (jsonObj.get("ErrorCode") != null && !jsonObj.get("ErrorCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorCode"));
      }
      // validate the optional field `ErrorMessage`
      if (jsonObj.get("ErrorMessage") != null && !jsonObj.get("ErrorMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorMessage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountModification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountModification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountModification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountModification.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountModification>() {
           @Override
           public void write(JsonWriter out, AccountModification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountModification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountModification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountModification
   * @throws IOException if the JSON string is invalid with respect to AccountModification
   */
  public static AccountModification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountModification.class);
  }

  /**
   * Convert an instance of AccountModification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

