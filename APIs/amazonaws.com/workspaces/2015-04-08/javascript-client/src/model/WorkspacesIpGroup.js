/**
 * Amazon WorkSpaces
 * <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows or Amazon Linux desktops for your users, known as <i>WorkSpaces</i>. WorkSpaces eliminates the need to procure and deploy hardware or install complex software. You can quickly add or remove users as your needs change. Users can access their virtual desktops from multiple devices or web browsers.</p> <p>This API Reference provides detailed information about the actions, data types, parameters, and errors of the WorkSpaces service. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas of the Amazon WorkSpaces service, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/wsp.html\">WorkSpaces endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>You can also manage your WorkSpaces resources using the WorkSpaces console, Command Line Interface (CLI), and SDKs. For more information about administering WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/\">Amazon WorkSpaces Administration Guide</a>. For more information about using the Amazon WorkSpaces client application or web browser to access provisioned WorkSpaces, see the <a href=\"https://docs.aws.amazon.com/workspaces/latest/userguide/\">Amazon WorkSpaces User Guide</a>. For more information about using the CLI to manage your WorkSpaces resources, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/workspaces/index.html\">WorkSpaces section of the CLI Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2015-04-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WorkspacesIpGroup model module.
 * @module model/WorkspacesIpGroup
 * @version 2015-04-08
 */
class WorkspacesIpGroup {
    /**
     * Constructs a new <code>WorkspacesIpGroup</code>.
     * Describes an IP access control group.
     * @alias module:model/WorkspacesIpGroup
     */
    constructor() { 
        
        WorkspacesIpGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkspacesIpGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkspacesIpGroup} obj Optional instance to populate.
     * @return {module:model/WorkspacesIpGroup} The populated <code>WorkspacesIpGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkspacesIpGroup();

            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('groupName')) {
                obj['groupName'] = ApiClient.convertToType(data['groupName'], 'String');
            }
            if (data.hasOwnProperty('groupDesc')) {
                obj['groupDesc'] = ApiClient.convertToType(data['groupDesc'], 'String');
            }
            if (data.hasOwnProperty('userRules')) {
                obj['userRules'] = ApiClient.convertToType(data['userRules'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkspacesIpGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkspacesIpGroup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `groupId`
        if (data['groupId']) { // data not null
          String.validateJSON(data['groupId']);
        }
        // validate the optional field `groupName`
        if (data['groupName']) { // data not null
          String.validateJSON(data['groupName']);
        }
        // validate the optional field `groupDesc`
        if (data['groupDesc']) { // data not null
          String.validateJSON(data['groupDesc']);
        }
        // validate the optional field `userRules`
        if (data['userRules']) { // data not null
          Array.validateJSON(data['userRules']);
        }

        return true;
    }


}



/**
 * @member {String} groupId
 */
WorkspacesIpGroup.prototype['groupId'] = undefined;

/**
 * @member {String} groupName
 */
WorkspacesIpGroup.prototype['groupName'] = undefined;

/**
 * @member {String} groupDesc
 */
WorkspacesIpGroup.prototype['groupDesc'] = undefined;

/**
 * @member {Array} userRules
 */
WorkspacesIpGroup.prototype['userRules'] = undefined;






export default WorkspacesIpGroup;

