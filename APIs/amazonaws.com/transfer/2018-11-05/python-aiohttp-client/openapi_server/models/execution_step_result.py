# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_step_result_error import ExecutionStepResultError
from openapi_server.models.workflow_step_type import WorkflowStepType
from openapi_server import util


class ExecutionStepResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, step_type: WorkflowStepType=None, outputs: str=None, error: ExecutionStepResultError=None):
        """ExecutionStepResult - a model defined in OpenAPI

        :param step_type: The step_type of this ExecutionStepResult.
        :param outputs: The outputs of this ExecutionStepResult.
        :param error: The error of this ExecutionStepResult.
        """
        self.openapi_types = {
            'step_type': WorkflowStepType,
            'outputs': str,
            'error': ExecutionStepResultError
        }

        self.attribute_map = {
            'step_type': 'StepType',
            'outputs': 'Outputs',
            'error': 'Error'
        }

        self._step_type = step_type
        self._outputs = outputs
        self._error = error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecutionStepResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecutionStepResult of this ExecutionStepResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def step_type(self):
        """Gets the step_type of this ExecutionStepResult.


        :return: The step_type of this ExecutionStepResult.
        :rtype: WorkflowStepType
        """
        return self._step_type

    @step_type.setter
    def step_type(self, step_type):
        """Sets the step_type of this ExecutionStepResult.


        :param step_type: The step_type of this ExecutionStepResult.
        :type step_type: WorkflowStepType
        """

        self._step_type = step_type

    @property
    def outputs(self):
        """Gets the outputs of this ExecutionStepResult.


        :return: The outputs of this ExecutionStepResult.
        :rtype: str
        """
        return self._outputs

    @outputs.setter
    def outputs(self, outputs):
        """Sets the outputs of this ExecutionStepResult.


        :param outputs: The outputs of this ExecutionStepResult.
        :type outputs: str
        """

        self._outputs = outputs

    @property
    def error(self):
        """Gets the error of this ExecutionStepResult.


        :return: The error of this ExecutionStepResult.
        :rtype: ExecutionStepResultError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ExecutionStepResult.


        :param error: The error of this ExecutionStepResult.
        :type error: ExecutionStepResultError
        """

        self._error = error
