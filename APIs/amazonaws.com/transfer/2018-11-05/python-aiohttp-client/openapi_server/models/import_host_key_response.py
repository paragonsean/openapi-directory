# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportHostKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_id: str=None, host_key_id: str=None):
        """ImportHostKeyResponse - a model defined in OpenAPI

        :param server_id: The server_id of this ImportHostKeyResponse.
        :param host_key_id: The host_key_id of this ImportHostKeyResponse.
        """
        self.openapi_types = {
            'server_id': str,
            'host_key_id': str
        }

        self.attribute_map = {
            'server_id': 'ServerId',
            'host_key_id': 'HostKeyId'
        }

        self._server_id = server_id
        self._host_key_id = host_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportHostKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportHostKeyResponse of this ImportHostKeyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_id(self):
        """Gets the server_id of this ImportHostKeyResponse.


        :return: The server_id of this ImportHostKeyResponse.
        :rtype: str
        """
        return self._server_id

    @server_id.setter
    def server_id(self, server_id):
        """Sets the server_id of this ImportHostKeyResponse.


        :param server_id: The server_id of this ImportHostKeyResponse.
        :type server_id: str
        """
        if server_id is None:
            raise ValueError("Invalid value for `server_id`, must not be `None`")

        self._server_id = server_id

    @property
    def host_key_id(self):
        """Gets the host_key_id of this ImportHostKeyResponse.


        :return: The host_key_id of this ImportHostKeyResponse.
        :rtype: str
        """
        return self._host_key_id

    @host_key_id.setter
    def host_key_id(self, host_key_id):
        """Sets the host_key_id of this ImportHostKeyResponse.


        :param host_key_id: The host_key_id of this ImportHostKeyResponse.
        :type host_key_id: str
        """
        if host_key_id is None:
            raise ValueError("Invalid value for `host_key_id`, must not be `None`")

        self._host_key_id = host_key_id
