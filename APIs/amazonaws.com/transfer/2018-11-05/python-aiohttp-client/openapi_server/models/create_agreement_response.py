# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAgreementResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agreement_id: str=None):
        """CreateAgreementResponse - a model defined in OpenAPI

        :param agreement_id: The agreement_id of this CreateAgreementResponse.
        """
        self.openapi_types = {
            'agreement_id': str
        }

        self.attribute_map = {
            'agreement_id': 'AgreementId'
        }

        self._agreement_id = agreement_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAgreementResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAgreementResponse of this CreateAgreementResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agreement_id(self):
        """Gets the agreement_id of this CreateAgreementResponse.


        :return: The agreement_id of this CreateAgreementResponse.
        :rtype: str
        """
        return self._agreement_id

    @agreement_id.setter
    def agreement_id(self, agreement_id):
        """Sets the agreement_id of this CreateAgreementResponse.


        :param agreement_id: The agreement_id of this CreateAgreementResponse.
        :type agreement_id: str
        """
        if agreement_id is None:
            raise ValueError("Invalid value for `agreement_id`, must not be `None`")

        self._agreement_id = agreement_id
