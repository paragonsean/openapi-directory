# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_security_policy_response_security_policy import DescribeSecurityPolicyResponseSecurityPolicy
from openapi_server import util


class DescribeSecurityPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, security_policy: DescribeSecurityPolicyResponseSecurityPolicy=None):
        """DescribeSecurityPolicyResponse - a model defined in OpenAPI

        :param security_policy: The security_policy of this DescribeSecurityPolicyResponse.
        """
        self.openapi_types = {
            'security_policy': DescribeSecurityPolicyResponseSecurityPolicy
        }

        self.attribute_map = {
            'security_policy': 'SecurityPolicy'
        }

        self._security_policy = security_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSecurityPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSecurityPolicyResponse of this DescribeSecurityPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def security_policy(self):
        """Gets the security_policy of this DescribeSecurityPolicyResponse.


        :return: The security_policy of this DescribeSecurityPolicyResponse.
        :rtype: DescribeSecurityPolicyResponseSecurityPolicy
        """
        return self._security_policy

    @security_policy.setter
    def security_policy(self, security_policy):
        """Sets the security_policy of this DescribeSecurityPolicyResponse.


        :param security_policy: The security_policy of this DescribeSecurityPolicyResponse.
        :type security_policy: DescribeSecurityPolicyResponseSecurityPolicy
        """
        if security_policy is None:
            raise ValueError("Invalid value for `security_policy`, must not be `None`")

        self._security_policy = security_policy
