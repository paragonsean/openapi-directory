# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_host_key_response_host_key import DescribeHostKeyResponseHostKey
from openapi_server import util


class DescribeHostKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host_key: DescribeHostKeyResponseHostKey=None):
        """DescribeHostKeyResponse - a model defined in OpenAPI

        :param host_key: The host_key of this DescribeHostKeyResponse.
        """
        self.openapi_types = {
            'host_key': DescribeHostKeyResponseHostKey
        }

        self.attribute_map = {
            'host_key': 'HostKey'
        }

        self._host_key = host_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeHostKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeHostKeyResponse of this DescribeHostKeyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_key(self):
        """Gets the host_key of this DescribeHostKeyResponse.


        :return: The host_key of this DescribeHostKeyResponse.
        :rtype: DescribeHostKeyResponseHostKey
        """
        return self._host_key

    @host_key.setter
    def host_key(self, host_key):
        """Sets the host_key of this DescribeHostKeyResponse.


        :param host_key: The host_key of this DescribeHostKeyResponse.
        :type host_key: DescribeHostKeyResponseHostKey
        """
        if host_key is None:
            raise ValueError("Invalid value for `host_key`, must not be `None`")

        self._host_key = host_key
