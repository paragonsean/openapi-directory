# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sftp_authentication_methods import SftpAuthenticationMethods
from openapi_server import util


class CreateServerRequestIdentityProviderDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url: str=None, invocation_role: str=None, directory_id: str=None, function: str=None, sftp_authentication_methods: SftpAuthenticationMethods=None):
        """CreateServerRequestIdentityProviderDetails - a model defined in OpenAPI

        :param url: The url of this CreateServerRequestIdentityProviderDetails.
        :param invocation_role: The invocation_role of this CreateServerRequestIdentityProviderDetails.
        :param directory_id: The directory_id of this CreateServerRequestIdentityProviderDetails.
        :param function: The function of this CreateServerRequestIdentityProviderDetails.
        :param sftp_authentication_methods: The sftp_authentication_methods of this CreateServerRequestIdentityProviderDetails.
        """
        self.openapi_types = {
            'url': str,
            'invocation_role': str,
            'directory_id': str,
            'function': str,
            'sftp_authentication_methods': SftpAuthenticationMethods
        }

        self.attribute_map = {
            'url': 'Url',
            'invocation_role': 'InvocationRole',
            'directory_id': 'DirectoryId',
            'function': 'Function',
            'sftp_authentication_methods': 'SftpAuthenticationMethods'
        }

        self._url = url
        self._invocation_role = invocation_role
        self._directory_id = directory_id
        self._function = function
        self._sftp_authentication_methods = sftp_authentication_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateServerRequestIdentityProviderDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateServerRequest_IdentityProviderDetails of this CreateServerRequestIdentityProviderDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self):
        """Gets the url of this CreateServerRequestIdentityProviderDetails.


        :return: The url of this CreateServerRequestIdentityProviderDetails.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CreateServerRequestIdentityProviderDetails.


        :param url: The url of this CreateServerRequestIdentityProviderDetails.
        :type url: str
        """

        self._url = url

    @property
    def invocation_role(self):
        """Gets the invocation_role of this CreateServerRequestIdentityProviderDetails.


        :return: The invocation_role of this CreateServerRequestIdentityProviderDetails.
        :rtype: str
        """
        return self._invocation_role

    @invocation_role.setter
    def invocation_role(self, invocation_role):
        """Sets the invocation_role of this CreateServerRequestIdentityProviderDetails.


        :param invocation_role: The invocation_role of this CreateServerRequestIdentityProviderDetails.
        :type invocation_role: str
        """

        self._invocation_role = invocation_role

    @property
    def directory_id(self):
        """Gets the directory_id of this CreateServerRequestIdentityProviderDetails.


        :return: The directory_id of this CreateServerRequestIdentityProviderDetails.
        :rtype: str
        """
        return self._directory_id

    @directory_id.setter
    def directory_id(self, directory_id):
        """Sets the directory_id of this CreateServerRequestIdentityProviderDetails.


        :param directory_id: The directory_id of this CreateServerRequestIdentityProviderDetails.
        :type directory_id: str
        """

        self._directory_id = directory_id

    @property
    def function(self):
        """Gets the function of this CreateServerRequestIdentityProviderDetails.


        :return: The function of this CreateServerRequestIdentityProviderDetails.
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this CreateServerRequestIdentityProviderDetails.


        :param function: The function of this CreateServerRequestIdentityProviderDetails.
        :type function: str
        """

        self._function = function

    @property
    def sftp_authentication_methods(self):
        """Gets the sftp_authentication_methods of this CreateServerRequestIdentityProviderDetails.


        :return: The sftp_authentication_methods of this CreateServerRequestIdentityProviderDetails.
        :rtype: SftpAuthenticationMethods
        """
        return self._sftp_authentication_methods

    @sftp_authentication_methods.setter
    def sftp_authentication_methods(self, sftp_authentication_methods):
        """Sets the sftp_authentication_methods of this CreateServerRequestIdentityProviderDetails.


        :param sftp_authentication_methods: The sftp_authentication_methods of this CreateServerRequestIdentityProviderDetails.
        :type sftp_authentication_methods: SftpAuthenticationMethods
        """

        self._sftp_authentication_methods = sftp_authentication_methods
