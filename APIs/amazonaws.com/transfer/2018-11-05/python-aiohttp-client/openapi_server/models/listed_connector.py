# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListedConnector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, connector_id: str=None, url: str=None):
        """ListedConnector - a model defined in OpenAPI

        :param arn: The arn of this ListedConnector.
        :param connector_id: The connector_id of this ListedConnector.
        :param url: The url of this ListedConnector.
        """
        self.openapi_types = {
            'arn': str,
            'connector_id': str,
            'url': str
        }

        self.attribute_map = {
            'arn': 'Arn',
            'connector_id': 'ConnectorId',
            'url': 'Url'
        }

        self._arn = arn
        self._connector_id = connector_id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListedConnector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListedConnector of this ListedConnector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this ListedConnector.


        :return: The arn of this ListedConnector.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ListedConnector.


        :param arn: The arn of this ListedConnector.
        :type arn: str
        """

        self._arn = arn

    @property
    def connector_id(self):
        """Gets the connector_id of this ListedConnector.


        :return: The connector_id of this ListedConnector.
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this ListedConnector.


        :param connector_id: The connector_id of this ListedConnector.
        :type connector_id: str
        """

        self._connector_id = connector_id

    @property
    def url(self):
        """Gets the url of this ListedConnector.


        :return: The url of this ListedConnector.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ListedConnector.


        :param url: The url of this ListedConnector.
        :type url: str
        """

        self._url = url
