# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSecurityPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, security_policy_name: str=None):
        """DescribeSecurityPolicyRequest - a model defined in OpenAPI

        :param security_policy_name: The security_policy_name of this DescribeSecurityPolicyRequest.
        """
        self.openapi_types = {
            'security_policy_name': str
        }

        self.attribute_map = {
            'security_policy_name': 'SecurityPolicyName'
        }

        self._security_policy_name = security_policy_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSecurityPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSecurityPolicyRequest of this DescribeSecurityPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def security_policy_name(self):
        """Gets the security_policy_name of this DescribeSecurityPolicyRequest.


        :return: The security_policy_name of this DescribeSecurityPolicyRequest.
        :rtype: str
        """
        return self._security_policy_name

    @security_policy_name.setter
    def security_policy_name(self, security_policy_name):
        """Sets the security_policy_name of this DescribeSecurityPolicyRequest.


        :param security_policy_name: The security_policy_name of this DescribeSecurityPolicyRequest.
        :type security_policy_name: str
        """
        if security_policy_name is None:
            raise ValueError("Invalid value for `security_policy_name`, must not be `None`")

        self._security_policy_name = security_policy_name
