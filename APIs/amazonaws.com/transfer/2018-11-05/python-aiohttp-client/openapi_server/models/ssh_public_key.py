# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SshPublicKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_imported: datetime=None, ssh_public_key_body: str=None, ssh_public_key_id: str=None):
        """SshPublicKey - a model defined in OpenAPI

        :param date_imported: The date_imported of this SshPublicKey.
        :param ssh_public_key_body: The ssh_public_key_body of this SshPublicKey.
        :param ssh_public_key_id: The ssh_public_key_id of this SshPublicKey.
        """
        self.openapi_types = {
            'date_imported': datetime,
            'ssh_public_key_body': str,
            'ssh_public_key_id': str
        }

        self.attribute_map = {
            'date_imported': 'DateImported',
            'ssh_public_key_body': 'SshPublicKeyBody',
            'ssh_public_key_id': 'SshPublicKeyId'
        }

        self._date_imported = date_imported
        self._ssh_public_key_body = ssh_public_key_body
        self._ssh_public_key_id = ssh_public_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshPublicKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SshPublicKey of this SshPublicKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_imported(self):
        """Gets the date_imported of this SshPublicKey.


        :return: The date_imported of this SshPublicKey.
        :rtype: datetime
        """
        return self._date_imported

    @date_imported.setter
    def date_imported(self, date_imported):
        """Sets the date_imported of this SshPublicKey.


        :param date_imported: The date_imported of this SshPublicKey.
        :type date_imported: datetime
        """
        if date_imported is None:
            raise ValueError("Invalid value for `date_imported`, must not be `None`")

        self._date_imported = date_imported

    @property
    def ssh_public_key_body(self):
        """Gets the ssh_public_key_body of this SshPublicKey.


        :return: The ssh_public_key_body of this SshPublicKey.
        :rtype: str
        """
        return self._ssh_public_key_body

    @ssh_public_key_body.setter
    def ssh_public_key_body(self, ssh_public_key_body):
        """Sets the ssh_public_key_body of this SshPublicKey.


        :param ssh_public_key_body: The ssh_public_key_body of this SshPublicKey.
        :type ssh_public_key_body: str
        """
        if ssh_public_key_body is None:
            raise ValueError("Invalid value for `ssh_public_key_body`, must not be `None`")

        self._ssh_public_key_body = ssh_public_key_body

    @property
    def ssh_public_key_id(self):
        """Gets the ssh_public_key_id of this SshPublicKey.


        :return: The ssh_public_key_id of this SshPublicKey.
        :rtype: str
        """
        return self._ssh_public_key_id

    @ssh_public_key_id.setter
    def ssh_public_key_id(self, ssh_public_key_id):
        """Sets the ssh_public_key_id of this SshPublicKey.


        :param ssh_public_key_id: The ssh_public_key_id of this SshPublicKey.
        :type ssh_public_key_id: str
        """
        if ssh_public_key_id is None:
            raise ValueError("Invalid value for `ssh_public_key_id`, must not be `None`")

        self._ssh_public_key_id = ssh_public_key_id
