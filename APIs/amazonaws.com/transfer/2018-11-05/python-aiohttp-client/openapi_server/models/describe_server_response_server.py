# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_server_request_endpoint_details import CreateServerRequestEndpointDetails
from openapi_server.models.create_server_request_protocol_details import CreateServerRequestProtocolDetails
from openapi_server.models.create_server_request_workflow_details import CreateServerRequestWorkflowDetails
from openapi_server.models.described_server_identity_provider_details import DescribedServerIdentityProviderDetails
from openapi_server.models.domain import Domain
from openapi_server.models.endpoint_type import EndpointType
from openapi_server.models.identity_provider_type import IdentityProviderType
from openapi_server.models.state import State
from openapi_server import util


class DescribeServerResponseServer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, certificate: str=None, protocol_details: CreateServerRequestProtocolDetails=None, domain: Domain=None, endpoint_details: CreateServerRequestEndpointDetails=None, endpoint_type: EndpointType=None, host_key_fingerprint: str=None, identity_provider_details: DescribedServerIdentityProviderDetails=None, identity_provider_type: IdentityProviderType=None, logging_role: str=None, post_authentication_login_banner: str=None, pre_authentication_login_banner: str=None, protocols: List=None, security_policy_name: str=None, server_id: str=None, state: State=None, tags: List=None, user_count: int=None, workflow_details: CreateServerRequestWorkflowDetails=None, structured_log_destinations: List=None):
        """DescribeServerResponseServer - a model defined in OpenAPI

        :param arn: The arn of this DescribeServerResponseServer.
        :param certificate: The certificate of this DescribeServerResponseServer.
        :param protocol_details: The protocol_details of this DescribeServerResponseServer.
        :param domain: The domain of this DescribeServerResponseServer.
        :param endpoint_details: The endpoint_details of this DescribeServerResponseServer.
        :param endpoint_type: The endpoint_type of this DescribeServerResponseServer.
        :param host_key_fingerprint: The host_key_fingerprint of this DescribeServerResponseServer.
        :param identity_provider_details: The identity_provider_details of this DescribeServerResponseServer.
        :param identity_provider_type: The identity_provider_type of this DescribeServerResponseServer.
        :param logging_role: The logging_role of this DescribeServerResponseServer.
        :param post_authentication_login_banner: The post_authentication_login_banner of this DescribeServerResponseServer.
        :param pre_authentication_login_banner: The pre_authentication_login_banner of this DescribeServerResponseServer.
        :param protocols: The protocols of this DescribeServerResponseServer.
        :param security_policy_name: The security_policy_name of this DescribeServerResponseServer.
        :param server_id: The server_id of this DescribeServerResponseServer.
        :param state: The state of this DescribeServerResponseServer.
        :param tags: The tags of this DescribeServerResponseServer.
        :param user_count: The user_count of this DescribeServerResponseServer.
        :param workflow_details: The workflow_details of this DescribeServerResponseServer.
        :param structured_log_destinations: The structured_log_destinations of this DescribeServerResponseServer.
        """
        self.openapi_types = {
            'arn': str,
            'certificate': str,
            'protocol_details': CreateServerRequestProtocolDetails,
            'domain': Domain,
            'endpoint_details': CreateServerRequestEndpointDetails,
            'endpoint_type': EndpointType,
            'host_key_fingerprint': str,
            'identity_provider_details': DescribedServerIdentityProviderDetails,
            'identity_provider_type': IdentityProviderType,
            'logging_role': str,
            'post_authentication_login_banner': str,
            'pre_authentication_login_banner': str,
            'protocols': List,
            'security_policy_name': str,
            'server_id': str,
            'state': State,
            'tags': List,
            'user_count': int,
            'workflow_details': CreateServerRequestWorkflowDetails,
            'structured_log_destinations': List
        }

        self.attribute_map = {
            'arn': 'Arn',
            'certificate': 'Certificate',
            'protocol_details': 'ProtocolDetails',
            'domain': 'Domain',
            'endpoint_details': 'EndpointDetails',
            'endpoint_type': 'EndpointType',
            'host_key_fingerprint': 'HostKeyFingerprint',
            'identity_provider_details': 'IdentityProviderDetails',
            'identity_provider_type': 'IdentityProviderType',
            'logging_role': 'LoggingRole',
            'post_authentication_login_banner': 'PostAuthenticationLoginBanner',
            'pre_authentication_login_banner': 'PreAuthenticationLoginBanner',
            'protocols': 'Protocols',
            'security_policy_name': 'SecurityPolicyName',
            'server_id': 'ServerId',
            'state': 'State',
            'tags': 'Tags',
            'user_count': 'UserCount',
            'workflow_details': 'WorkflowDetails',
            'structured_log_destinations': 'StructuredLogDestinations'
        }

        self._arn = arn
        self._certificate = certificate
        self._protocol_details = protocol_details
        self._domain = domain
        self._endpoint_details = endpoint_details
        self._endpoint_type = endpoint_type
        self._host_key_fingerprint = host_key_fingerprint
        self._identity_provider_details = identity_provider_details
        self._identity_provider_type = identity_provider_type
        self._logging_role = logging_role
        self._post_authentication_login_banner = post_authentication_login_banner
        self._pre_authentication_login_banner = pre_authentication_login_banner
        self._protocols = protocols
        self._security_policy_name = security_policy_name
        self._server_id = server_id
        self._state = state
        self._tags = tags
        self._user_count = user_count
        self._workflow_details = workflow_details
        self._structured_log_destinations = structured_log_destinations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeServerResponseServer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeServerResponse_Server of this DescribeServerResponseServer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DescribeServerResponseServer.


        :return: The arn of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DescribeServerResponseServer.


        :param arn: The arn of this DescribeServerResponseServer.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def certificate(self):
        """Gets the certificate of this DescribeServerResponseServer.


        :return: The certificate of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._certificate

    @certificate.setter
    def certificate(self, certificate):
        """Sets the certificate of this DescribeServerResponseServer.


        :param certificate: The certificate of this DescribeServerResponseServer.
        :type certificate: str
        """

        self._certificate = certificate

    @property
    def protocol_details(self):
        """Gets the protocol_details of this DescribeServerResponseServer.


        :return: The protocol_details of this DescribeServerResponseServer.
        :rtype: CreateServerRequestProtocolDetails
        """
        return self._protocol_details

    @protocol_details.setter
    def protocol_details(self, protocol_details):
        """Sets the protocol_details of this DescribeServerResponseServer.


        :param protocol_details: The protocol_details of this DescribeServerResponseServer.
        :type protocol_details: CreateServerRequestProtocolDetails
        """

        self._protocol_details = protocol_details

    @property
    def domain(self):
        """Gets the domain of this DescribeServerResponseServer.


        :return: The domain of this DescribeServerResponseServer.
        :rtype: Domain
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this DescribeServerResponseServer.


        :param domain: The domain of this DescribeServerResponseServer.
        :type domain: Domain
        """

        self._domain = domain

    @property
    def endpoint_details(self):
        """Gets the endpoint_details of this DescribeServerResponseServer.


        :return: The endpoint_details of this DescribeServerResponseServer.
        :rtype: CreateServerRequestEndpointDetails
        """
        return self._endpoint_details

    @endpoint_details.setter
    def endpoint_details(self, endpoint_details):
        """Sets the endpoint_details of this DescribeServerResponseServer.


        :param endpoint_details: The endpoint_details of this DescribeServerResponseServer.
        :type endpoint_details: CreateServerRequestEndpointDetails
        """

        self._endpoint_details = endpoint_details

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this DescribeServerResponseServer.


        :return: The endpoint_type of this DescribeServerResponseServer.
        :rtype: EndpointType
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this DescribeServerResponseServer.


        :param endpoint_type: The endpoint_type of this DescribeServerResponseServer.
        :type endpoint_type: EndpointType
        """

        self._endpoint_type = endpoint_type

    @property
    def host_key_fingerprint(self):
        """Gets the host_key_fingerprint of this DescribeServerResponseServer.


        :return: The host_key_fingerprint of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._host_key_fingerprint

    @host_key_fingerprint.setter
    def host_key_fingerprint(self, host_key_fingerprint):
        """Sets the host_key_fingerprint of this DescribeServerResponseServer.


        :param host_key_fingerprint: The host_key_fingerprint of this DescribeServerResponseServer.
        :type host_key_fingerprint: str
        """

        self._host_key_fingerprint = host_key_fingerprint

    @property
    def identity_provider_details(self):
        """Gets the identity_provider_details of this DescribeServerResponseServer.


        :return: The identity_provider_details of this DescribeServerResponseServer.
        :rtype: DescribedServerIdentityProviderDetails
        """
        return self._identity_provider_details

    @identity_provider_details.setter
    def identity_provider_details(self, identity_provider_details):
        """Sets the identity_provider_details of this DescribeServerResponseServer.


        :param identity_provider_details: The identity_provider_details of this DescribeServerResponseServer.
        :type identity_provider_details: DescribedServerIdentityProviderDetails
        """

        self._identity_provider_details = identity_provider_details

    @property
    def identity_provider_type(self):
        """Gets the identity_provider_type of this DescribeServerResponseServer.


        :return: The identity_provider_type of this DescribeServerResponseServer.
        :rtype: IdentityProviderType
        """
        return self._identity_provider_type

    @identity_provider_type.setter
    def identity_provider_type(self, identity_provider_type):
        """Sets the identity_provider_type of this DescribeServerResponseServer.


        :param identity_provider_type: The identity_provider_type of this DescribeServerResponseServer.
        :type identity_provider_type: IdentityProviderType
        """

        self._identity_provider_type = identity_provider_type

    @property
    def logging_role(self):
        """Gets the logging_role of this DescribeServerResponseServer.


        :return: The logging_role of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._logging_role

    @logging_role.setter
    def logging_role(self, logging_role):
        """Sets the logging_role of this DescribeServerResponseServer.


        :param logging_role: The logging_role of this DescribeServerResponseServer.
        :type logging_role: str
        """

        self._logging_role = logging_role

    @property
    def post_authentication_login_banner(self):
        """Gets the post_authentication_login_banner of this DescribeServerResponseServer.


        :return: The post_authentication_login_banner of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._post_authentication_login_banner

    @post_authentication_login_banner.setter
    def post_authentication_login_banner(self, post_authentication_login_banner):
        """Sets the post_authentication_login_banner of this DescribeServerResponseServer.


        :param post_authentication_login_banner: The post_authentication_login_banner of this DescribeServerResponseServer.
        :type post_authentication_login_banner: str
        """

        self._post_authentication_login_banner = post_authentication_login_banner

    @property
    def pre_authentication_login_banner(self):
        """Gets the pre_authentication_login_banner of this DescribeServerResponseServer.


        :return: The pre_authentication_login_banner of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._pre_authentication_login_banner

    @pre_authentication_login_banner.setter
    def pre_authentication_login_banner(self, pre_authentication_login_banner):
        """Sets the pre_authentication_login_banner of this DescribeServerResponseServer.


        :param pre_authentication_login_banner: The pre_authentication_login_banner of this DescribeServerResponseServer.
        :type pre_authentication_login_banner: str
        """

        self._pre_authentication_login_banner = pre_authentication_login_banner

    @property
    def protocols(self):
        """Gets the protocols of this DescribeServerResponseServer.


        :return: The protocols of this DescribeServerResponseServer.
        :rtype: List
        """
        return self._protocols

    @protocols.setter
    def protocols(self, protocols):
        """Sets the protocols of this DescribeServerResponseServer.


        :param protocols: The protocols of this DescribeServerResponseServer.
        :type protocols: List
        """

        self._protocols = protocols

    @property
    def security_policy_name(self):
        """Gets the security_policy_name of this DescribeServerResponseServer.


        :return: The security_policy_name of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._security_policy_name

    @security_policy_name.setter
    def security_policy_name(self, security_policy_name):
        """Sets the security_policy_name of this DescribeServerResponseServer.


        :param security_policy_name: The security_policy_name of this DescribeServerResponseServer.
        :type security_policy_name: str
        """

        self._security_policy_name = security_policy_name

    @property
    def server_id(self):
        """Gets the server_id of this DescribeServerResponseServer.


        :return: The server_id of this DescribeServerResponseServer.
        :rtype: str
        """
        return self._server_id

    @server_id.setter
    def server_id(self, server_id):
        """Sets the server_id of this DescribeServerResponseServer.


        :param server_id: The server_id of this DescribeServerResponseServer.
        :type server_id: str
        """

        self._server_id = server_id

    @property
    def state(self):
        """Gets the state of this DescribeServerResponseServer.


        :return: The state of this DescribeServerResponseServer.
        :rtype: State
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DescribeServerResponseServer.


        :param state: The state of this DescribeServerResponseServer.
        :type state: State
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this DescribeServerResponseServer.


        :return: The tags of this DescribeServerResponseServer.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeServerResponseServer.


        :param tags: The tags of this DescribeServerResponseServer.
        :type tags: List
        """

        self._tags = tags

    @property
    def user_count(self):
        """Gets the user_count of this DescribeServerResponseServer.


        :return: The user_count of this DescribeServerResponseServer.
        :rtype: int
        """
        return self._user_count

    @user_count.setter
    def user_count(self, user_count):
        """Sets the user_count of this DescribeServerResponseServer.


        :param user_count: The user_count of this DescribeServerResponseServer.
        :type user_count: int
        """

        self._user_count = user_count

    @property
    def workflow_details(self):
        """Gets the workflow_details of this DescribeServerResponseServer.


        :return: The workflow_details of this DescribeServerResponseServer.
        :rtype: CreateServerRequestWorkflowDetails
        """
        return self._workflow_details

    @workflow_details.setter
    def workflow_details(self, workflow_details):
        """Sets the workflow_details of this DescribeServerResponseServer.


        :param workflow_details: The workflow_details of this DescribeServerResponseServer.
        :type workflow_details: CreateServerRequestWorkflowDetails
        """

        self._workflow_details = workflow_details

    @property
    def structured_log_destinations(self):
        """Gets the structured_log_destinations of this DescribeServerResponseServer.


        :return: The structured_log_destinations of this DescribeServerResponseServer.
        :rtype: List
        """
        return self._structured_log_destinations

    @structured_log_destinations.setter
    def structured_log_destinations(self, structured_log_destinations):
        """Sets the structured_log_destinations of this DescribeServerResponseServer.


        :param structured_log_destinations: The structured_log_destinations of this DescribeServerResponseServer.
        :type structured_log_destinations: List
        """

        self._structured_log_destinations = structured_log_destinations
