/*
 * AWS Transfer Family
 * Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement 2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer workflows to Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics, machine learning, and archiving. Getting started with Transfer Family is easy since there is no infrastructure to buy and set up.
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateServerRequestEndpointDetails;
import org.openapitools.client.model.CreateServerRequestProtocolDetails;
import org.openapitools.client.model.EndpointType;
import org.openapitools.client.model.UpdateServerRequestIdentityProviderDetails;
import org.openapitools.client.model.UpdateServerRequestWorkflowDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateServerRequest
 */
public class UpdateServerRequestTest {
    private final UpdateServerRequest model = new UpdateServerRequest();

    /**
     * Model tests for UpdateServerRequest
     */
    @Test
    public void testUpdateServerRequest() {
        // TODO: test UpdateServerRequest
    }

    /**
     * Test the property 'certificate'
     */
    @Test
    public void certificateTest() {
        // TODO: test certificate
    }

    /**
     * Test the property 'protocolDetails'
     */
    @Test
    public void protocolDetailsTest() {
        // TODO: test protocolDetails
    }

    /**
     * Test the property 'endpointDetails'
     */
    @Test
    public void endpointDetailsTest() {
        // TODO: test endpointDetails
    }

    /**
     * Test the property 'endpointType'
     */
    @Test
    public void endpointTypeTest() {
        // TODO: test endpointType
    }

    /**
     * Test the property 'hostKey'
     */
    @Test
    public void hostKeyTest() {
        // TODO: test hostKey
    }

    /**
     * Test the property 'identityProviderDetails'
     */
    @Test
    public void identityProviderDetailsTest() {
        // TODO: test identityProviderDetails
    }

    /**
     * Test the property 'loggingRole'
     */
    @Test
    public void loggingRoleTest() {
        // TODO: test loggingRole
    }

    /**
     * Test the property 'postAuthenticationLoginBanner'
     */
    @Test
    public void postAuthenticationLoginBannerTest() {
        // TODO: test postAuthenticationLoginBanner
    }

    /**
     * Test the property 'preAuthenticationLoginBanner'
     */
    @Test
    public void preAuthenticationLoginBannerTest() {
        // TODO: test preAuthenticationLoginBanner
    }

    /**
     * Test the property 'protocols'
     */
    @Test
    public void protocolsTest() {
        // TODO: test protocols
    }

    /**
     * Test the property 'securityPolicyName'
     */
    @Test
    public void securityPolicyNameTest() {
        // TODO: test securityPolicyName
    }

    /**
     * Test the property 'serverId'
     */
    @Test
    public void serverIdTest() {
        // TODO: test serverId
    }

    /**
     * Test the property 'workflowDetails'
     */
    @Test
    public void workflowDetailsTest() {
        // TODO: test workflowDetails
    }

    /**
     * Test the property 'structuredLogDestinations'
     */
    @Test
    public void structuredLogDestinationsTest() {
        // TODO: test structuredLogDestinations
    }

}
