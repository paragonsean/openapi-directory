openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Transfer Family is a fully managed service that enables the transfer\
    \ of files over the File Transfer Protocol (FTP), File Transfer Protocol over\
    \ SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into\
    \ and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally,\
    \ you can use Applicability Statement 2 (AS2) to transfer files into and out of\
    \ Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer\
    \ workflows to Transfer Family by integrating with existing authentication systems,\
    \ and providing DNS routing with Amazon Route 53 so nothing changes for your customers\
    \ and partners, or their applications. With your data in Amazon S3, you can use\
    \ it with Amazon Web Services for processing, analytics, machine learning, and\
    \ archiving. Getting started with Transfer Family is easy since there is no infrastructure\
    \ to buy and set up."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Transfer Family
  version: 2018-11-05
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: transfer
  x-aws-signingName: transfer
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/transfer-2018-11-05.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/transfer/
servers:
- description: The AWS Transfer multi-region endpoint
  url: "http://transfer.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Transfer multi-region endpoint
  url: "https://transfer.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Transfer endpoint for China (Beijing) and China (Ningxia)
  url: "http://transfer.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Transfer endpoint for China (Beijing) and China (Ningxia)
  url: "https://transfer.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=TransferService.CreateAccess:
    post:
      description: "Used by administrators to choose which groups in the directory\
        \ should have access to upload and download files over the enabled protocols\
        \ using Transfer Family. For example, a Microsoft Active Directory might contain\
        \ 50,000 users, but only a small fraction might need the ability to transfer\
        \ files to the server. An administrator can use <code>CreateAccess</code>\
        \ to limit the access to the correct set of users who need this ability."
      operationId: CreateAccess
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.CreateAgreement:
    post:
      description: "<p>Creates an agreement. An agreement is a bilateral trading partner\
        \ agreement, or partnership, between an Transfer Family server and an AS2\
        \ process. The agreement defines the file and message transfer relationship\
        \ between the server and the AS2 process. To define an agreement, Transfer\
        \ Family combines a server, local profile, partner profile, certificate, and\
        \ other attributes.</p> <p>The partner is identified with the <code>PartnerProfileId</code>,\
        \ and the AS2 process is identified with the <code>LocalProfileId</code>.</p>"
      operationId: CreateAgreement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateAgreement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgreementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAgreementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.CreateConnector:
    post:
      description: "<p>Creates the connector, which captures the parameters for an\
        \ outbound connection for the AS2 or SFTP protocol. The connector is required\
        \ for sending files to an externally hosted AS2 or SFTP server. For more details\
        \ about AS2 connectors, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/create-b2b-server.html#configure-as2-connector\"\
        >Create AS2 connectors</a>.</p> <note> <p>You must specify exactly one configuration\
        \ object: either for AS2 (<code>As2Config</code>) or SFTP (<code>SftpConfig</code>).</p>\
        \ </note>"
      operationId: CreateConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateConnector
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.CreateProfile:
    post:
      description: Creates the local or partner profile to use for AS2 transfers.
      operationId: CreateProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.CreateServer:
    post:
      description: "Instantiates an auto-scaling virtual server based on the selected\
        \ file transfer protocol in Amazon Web Services. When you make updates to\
        \ your file transfer protocol-enabled server or when you work with users,\
        \ use the service-generated <code>ServerId</code> property that is assigned\
        \ to the newly created server."
      operationId: CreateServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.CreateUser:
    post:
      description: "Creates a user and associates them with an existing file transfer\
        \ protocol-enabled server. You can only create and associate users with servers\
        \ that have the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>.\
        \ Using parameters for <code>CreateUser</code>, you can specify the user name,\
        \ set the home directory, store the user's public key, and assign the user's\
        \ Identity and Access Management (IAM) role. You can also optionally add a\
        \ session policy, and assign metadata with tags that can be used to group\
        \ and search for users."
      operationId: CreateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.CreateWorkflow:
    post:
      description: " Allows you to create a workflow with specified steps and step\
        \ details the workflow invokes after file transfer completes. After creating\
        \ a workflow, you can associate the workflow created with any transfer servers\
        \ by specifying the <code>workflow-details</code> field in <code>CreateServer</code>\
        \ and <code>UpdateServer</code> operations. "
      operationId: CreateWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.CreateWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteAccess:
    post:
      description: Allows you to delete the access specified in the <code>ServerID</code>
        and <code>ExternalID</code> parameters.
      operationId: DeleteAccess
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccessRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteAgreement:
    post:
      description: Delete the agreement that's specified in the provided <code>AgreementId</code>.
      operationId: DeleteAgreement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteAgreement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAgreementRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteCertificate:
    post:
      description: Deletes the certificate that's specified in the <code>CertificateId</code>
        parameter.
      operationId: DeleteCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteCertificate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCertificateRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteConnector:
    post:
      description: Deletes the connector that's specified in the provided <code>ConnectorId</code>.
      operationId: DeleteConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteConnector
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectorRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteHostKey:
    post:
      description: Deletes the host key that's specified in the <code>HostKeyId</code>
        parameter.
      operationId: DeleteHostKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteHostKey
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHostKeyRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteProfile:
    post:
      description: Deletes the profile that's specified in the <code>ProfileId</code>
        parameter.
      operationId: DeleteProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProfileRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteServer:
    post:
      description: <p>Deletes the file transfer protocol-enabled server that you specify.</p>
        <p>No response returns from this operation.</p>
      operationId: DeleteServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteSshPublicKey:
    post:
      description: Deletes a user's Secure Shell (SSH) public key.
      operationId: DeleteSshPublicKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteSshPublicKey
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSshPublicKeyRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteUser:
    post:
      description: "<p>Deletes the user belonging to a file transfer protocol-enabled\
        \ server you specify.</p> <p>No response returns from this operation.</p>\
        \ <note> <p>When you delete a user from a server, the user's information is\
        \ lost.</p> </note>"
      operationId: DeleteUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DeleteWorkflow:
    post:
      description: Deletes the specified workflow.
      operationId: DeleteWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DeleteWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkflowRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeAccess:
    post:
      description: "<p>Describes the access that is assigned to the specific file\
        \ transfer protocol-enabled server, as identified by its <code>ServerId</code>\
        \ property and its <code>ExternalId</code>.</p> <p>The response from this\
        \ call returns the properties of the access that is associated with the <code>ServerId</code>\
        \ value that was specified.</p>"
      operationId: DescribeAccess
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccessResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeAgreement:
    post:
      description: Describes the agreement that's identified by the <code>AgreementId</code>.
      operationId: DescribeAgreement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeAgreement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAgreementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAgreementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeCertificate:
    post:
      description: Describes the certificate that's identified by the <code>CertificateId</code>.
      operationId: DescribeCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeCertificate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCertificateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeConnector:
    post:
      description: 'Describes the connector that''s identified by the <code>ConnectorId.</code> '
      operationId: DescribeConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeConnector
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConnectorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeExecution:
    post:
      description: "<p>You can use <code>DescribeExecution</code> to check the details\
        \ of the execution of the specified workflow.</p> <note> <p>This API call\
        \ only returns details for in-progress workflows.</p> <p> If you provide an\
        \ ID for an execution that is not in progress, or if the execution doesn't\
        \ match the specified workflow ID, you receive a <code>ResourceNotFound</code>\
        \ exception.</p> </note>"
      operationId: DescribeExecution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExecutionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExecutionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeHostKey:
    post:
      description: Returns the details of the host key that's specified by the <code>HostKeyId</code>
        and <code>ServerId</code>.
      operationId: DescribeHostKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeHostKey
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHostKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHostKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeProfile:
    post:
      description: Returns the details of the profile that's specified by the <code>ProfileId</code>.
      operationId: DescribeProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeSecurityPolicy:
    post:
      description: "Describes the security policy that is attached to your file transfer\
        \ protocol-enabled server. The response contains a description of the security\
        \ policy's properties. For more information about security policies, see <a\
        \ href=\"https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html\"\
        >Working with security policies</a>."
      operationId: DescribeSecurityPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeSecurityPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSecurityPolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSecurityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeServer:
    post:
      description: "<p>Describes a file transfer protocol-enabled server that you\
        \ specify by passing the <code>ServerId</code> parameter.</p> <p>The response\
        \ contains a description of a server's properties. When you set <code>EndpointType</code>\
        \ to VPC, the response will contain the <code>EndpointDetails</code>.</p>"
      operationId: DescribeServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeUser:
    post:
      description: "<p>Describes the user assigned to the specific file transfer protocol-enabled\
        \ server, as identified by its <code>ServerId</code> property.</p> <p>The\
        \ response from this call returns the properties of the user associated with\
        \ the <code>ServerId</code> value that was specified.</p>"
      operationId: DescribeUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.DescribeWorkflow:
    post:
      description: Describes the specified workflow.
      operationId: DescribeWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.DescribeWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ImportCertificate:
    post:
      description: Imports the signing and encryption certificates that you need to
        create local (AS2) profiles and partner profiles.
      operationId: ImportCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ImportCertificate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportCertificateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ImportHostKey:
    post:
      description: Adds a host key to the server that's specified by the <code>ServerId</code>
        parameter.
      operationId: ImportHostKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ImportHostKey
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportHostKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportHostKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ImportSshPublicKey:
    post:
      description: "<p>Adds a Secure Shell (SSH) public key to a Transfer Family user\
        \ identified by a <code>UserName</code> value assigned to the specific file\
        \ transfer protocol-enabled server, identified by <code>ServerId</code>.</p>\
        \ <p>The response returns the <code>UserName</code> value, the <code>ServerId</code>\
        \ value, and the name of the <code>SshPublicKeyId</code>.</p>"
      operationId: ImportSshPublicKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ImportSshPublicKey
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSshPublicKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSshPublicKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListAccesses:
    post:
      description: Lists the details for all the accesses you have on your server.
      operationId: ListAccesses
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListAccesses
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccessesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListAgreements:
    post:
      description: "Returns a list of the agreements for the server that's identified\
        \ by the <code>ServerId</code> that you supply. If you want to limit the results\
        \ to a certain number, supply a value for the <code>MaxResults</code> parameter.\
        \ If you ran the command previously and received a value for <code>NextToken</code>,\
        \ you can supply that value to continue listing agreements from where you\
        \ left off."
      operationId: ListAgreements
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListAgreements
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAgreementsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgreementsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListCertificates:
    post:
      description: "Returns a list of the current certificates that have been imported\
        \ into Transfer Family. If you want to limit the results to a certain number,\
        \ supply a value for the <code>MaxResults</code> parameter. If you ran the\
        \ command previously and received a value for the <code>NextToken</code> parameter,\
        \ you can supply that value to continue listing certificates from where you\
        \ left off."
      operationId: ListCertificates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListCertificates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCertificatesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListConnectors:
    post:
      description: Lists the connectors for the specified Region.
      operationId: ListConnectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListConnectors
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectorsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListExecutions:
    post:
      description: "<p>Lists all in-progress executions for the specified workflow.</p>\
        \ <note> <p>If the specified workflow ID cannot be found, <code>ListExecutions</code>\
        \ returns a <code>ResourceNotFound</code> exception.</p> </note>"
      operationId: ListExecutions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExecutionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListHostKeys:
    post:
      description: Returns a list of host keys for the server that's specified by
        the <code>ServerId</code> parameter.
      operationId: ListHostKeys
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListHostKeys
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHostKeysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostKeysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListProfiles:
    post:
      description: "Returns a list of the profiles for your system. If you want to\
        \ limit the results to a certain number, supply a value for the <code>MaxResults</code>\
        \ parameter. If you ran the command previously and received a value for <code>NextToken</code>,\
        \ you can supply that value to continue listing profiles from where you left\
        \ off."
      operationId: ListProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListProfiles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListSecurityPolicies:
    post:
      description: Lists the security policies that are attached to your file transfer
        protocol-enabled servers.
      operationId: ListSecurityPolicies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListSecurityPolicies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecurityPoliciesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityPoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListServers:
    post:
      description: Lists the file transfer protocol-enabled servers that are associated
        with your Amazon Web Services account.
      operationId: ListServers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListServers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListTagsForResource:
    post:
      description: "Lists all of the tags associated with the Amazon Resource Name\
        \ (ARN) that you specify. The resource can be a user, server, or role."
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListUsers:
    post:
      description: Lists the users for a file transfer protocol-enabled server that
        you specify by passing the <code>ServerId</code> parameter.
      operationId: ListUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.ListWorkflows:
    post:
      description: Lists all workflows associated with your Amazon Web Services account
        for your current region.
      operationId: ListWorkflows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.ListWorkflows
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkflowsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.SendWorkflowStepState:
    post:
      description: "<p>Sends a callback for asynchronous custom steps.</p> <p> The\
        \ <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code>\
        \ are passed to the target resource during execution of a custom step of a\
        \ workflow. You must include those with their callback as well as providing\
        \ a status. </p>"
      operationId: SendWorkflowStepState
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.SendWorkflowStepState
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWorkflowStepStateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWorkflowStepStateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.StartFileTransfer:
    post:
      description: "<p>Begins a file transfer between local Amazon Web Services storage\
        \ and a remote AS2 or SFTP server.</p> <ul> <li> <p>For an AS2 connector,\
        \ you specify the <code>ConnectorId</code> and one or more <code>SendFilePaths</code>\
        \ to identify the files you want to transfer.</p> </li> <li> <p>For an SFTP\
        \ connector, the file transfer can be either outbound or inbound. In both\
        \ cases, you specify the <code>ConnectorId</code>. Depending on the direction\
        \ of the transfer, you also specify the following items:</p> <ul> <li> <p>If\
        \ you are transferring file from a partner's SFTP server to a Transfer Family\
        \ server, you specify one or more <code>RetreiveFilePaths</code> to identify\
        \ the files you want to transfer, and a <code>LocalDirectoryPath</code> to\
        \ specify the destination folder.</p> </li> <li> <p>If you are transferring\
        \ file to a partner's SFTP server from Amazon Web Services storage, you specify\
        \ one or more <code>SendFilePaths</code> to identify the files you want to\
        \ transfer, and a <code>RemoteDirectoryPath</code> to specify the destination\
        \ folder.</p> </li> </ul> </li> </ul>"
      operationId: StartFileTransfer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.StartFileTransfer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFileTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFileTransferResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.StartServer:
    post:
      description: "<p>Changes the state of a file transfer protocol-enabled server\
        \ from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on a\
        \ server that is already <code>ONLINE</code>. An <code>ONLINE</code> server\
        \ can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code>\
        \ indicates that the server is in an intermediate state, either not fully\
        \ able to respond, or not fully online. The values of <code>START_FAILED</code>\
        \ can indicate an error condition.</p> <p>No response is returned from this\
        \ call.</p>"
      operationId: StartServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.StartServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartServerRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.StopServer:
    post:
      description: "<p>Changes the state of a file transfer protocol-enabled server\
        \ from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code>\
        \ server cannot accept and process file transfer jobs. Information tied to\
        \ your server, such as server and user properties, are not affected by stopping\
        \ your server.</p> <note> <p>Stopping the server does not reduce or impact\
        \ your file transfer protocol endpoint billing; you must delete the server\
        \ to stop being billed.</p> </note> <p>The state of <code>STOPPING</code>\
        \ indicates that the server is in an intermediate state, either not fully\
        \ able to respond, or not fully offline. The values of <code>STOP_FAILED</code>\
        \ can indicate an error condition.</p> <p>No response is returned from this\
        \ call.</p>"
      operationId: StopServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.StopServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopServerRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.TagResource:
    post:
      description: "<p>Attaches a key-value pair to a resource, as identified by its\
        \ Amazon Resource Name (ARN). Resources are users, servers, roles, and other\
        \ entities.</p> <p>There is no response returned from this call.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.TestConnection:
    post:
      description: Tests whether your SFTP connector is set up successfully. We highly
        recommend that you call this operation to test your ability to transfer files
        between a Transfer Family server and a trading partner's SFTP server.
      operationId: TestConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.TestConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.TestIdentityProvider:
    post:
      description: "<p>If the <code>IdentityProviderType</code> of a file transfer\
        \ protocol-enabled server is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>,\
        \ tests whether your identity provider is set up successfully. We highly recommend\
        \ that you call this operation to test your authentication method as soon\
        \ as you create your server. By doing so, you can troubleshoot issues with\
        \ the identity provider integration to ensure that your users can successfully\
        \ use the service.</p> <p> The <code>ServerId</code> and <code>UserName</code>\
        \ parameters are required. The <code>ServerProtocol</code>, <code>SourceIp</code>,\
        \ and <code>UserPassword</code> are all optional. </p> <p>Note the following:</p>\
        \ <ul> <li> <p> You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code>\
        \ of your server is <code>SERVICE_MANAGED</code>.</p> </li> <li> <p> <code>TestIdentityProvider</code>\
        \ does not work with keys: it only accepts passwords.</p> </li> <li> <p> <code>TestIdentityProvider</code>\
        \ can test the password operation for a custom Identity Provider that handles\
        \ keys and passwords.</p> </li> <li> <p> If you provide any incorrect values\
        \ for any parameters, the <code>Response</code> field is empty. </p> </li>\
        \ <li> <p> If you provide a server ID for a server that uses service-managed\
        \ users, you get an error: </p> <p> <code> An error occurred (InvalidRequestException)\
        \ when calling the TestIdentityProvider operation: s-<i>server-ID</i> not\
        \ configured for external auth </code> </p> </li> <li> <p> If you enter a\
        \ Server ID for the <code>--server-id</code> parameter that does not identify\
        \ an actual Transfer server, you receive the following error: </p> <p> <code>An\
        \ error occurred (ResourceNotFoundException) when calling the TestIdentityProvider\
        \ operation: Unknown server</code>. </p> <p>It is possible your sever is in\
        \ a different region. You can specify a region by adding the following: <code>--region\
        \ region-code</code>, such as <code>--region us-east-2</code> to specify a\
        \ server in <b>US East (Ohio)</b>.</p> </li> </ul>"
      operationId: TestIdentityProvider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.TestIdentityProvider
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIdentityProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIdentityProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UntagResource:
    post:
      description: "<p>Detaches a key-value pair from a resource, as identified by\
        \ its Amazon Resource Name (ARN). Resources are users, servers, roles, and\
        \ other entities.</p> <p>No response is returned from this call.</p>"
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateAccess:
    post:
      description: Allows you to update parameters for the access specified in the
        <code>ServerID</code> and <code>ExternalID</code> parameters.
      operationId: UpdateAccess
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateAccess
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateAgreement:
    post:
      description: "Updates some of the parameters for an existing agreement. Provide\
        \ the <code>AgreementId</code> and the <code>ServerId</code> for the agreement\
        \ that you want to update, along with the new values for the parameters to\
        \ update."
      operationId: UpdateAgreement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateAgreement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgreementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAgreementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateCertificate:
    post:
      description: Updates the active and inactive dates for a certificate.
      operationId: UpdateCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateCertificate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCertificateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateConnector:
    post:
      description: "Updates some of the parameters for an existing connector. Provide\
        \ the <code>ConnectorId</code> for the connector that you want to update,\
        \ along with the new values for the parameters to update."
      operationId: UpdateConnector
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateConnector
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateHostKey:
    post:
      description: Updates the description for the host key that's specified by the
        <code>ServerId</code> and <code>HostKeyId</code> parameters.
      operationId: UpdateHostKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateHostKey
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHostKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateProfile:
    post:
      description: "Updates some of the parameters for an existing profile. Provide\
        \ the <code>ProfileId</code> for the profile that you want to update, along\
        \ with the new values for the parameters to update."
      operationId: UpdateProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateServer:
    post:
      description: <p>Updates the file transfer protocol-enabled server's properties
        after that server has been created.</p> <p>The <code>UpdateServer</code> call
        returns the <code>ServerId</code> of the server you updated.</p>
      operationId: UpdateServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateServer
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=TransferService.UpdateUser:
    post:
      description: "<p>Assigns new properties to a user. Parameters you pass modify\
        \ any or all of the following: the home directory, role, and policy for the\
        \ <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The\
        \ response returns the <code>ServerId</code> and the <code>UserName</code>\
        \ for the updated user.</p>"
      operationId: UpdateUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - TransferService.UpdateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
          description: InternalServiceError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAccessResponse:
      example:
        ServerId: ""
        ExternalId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that the user is attached to.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: The external identifier of the group whose users have access
              to your Amazon S3 or Amazon EFS resources over the enabled protocols
              using Transfer Family.
      required:
      - ExternalId
      - ServerId
      type: object
    CreateAccessRequest:
      example:
        Policy: ""
        Role: ""
        HomeDirectory: ""
        HomeDirectoryType: ""
        ServerId: ""
        HomeDirectoryMappings: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        ExternalId: ""
      properties:
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        HomeDirectoryMappings:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryMappings'
          - description: "<p>Logical directory mappings that specify what Amazon S3\
              \ or Amazon EFS paths and keys should be visible to your user and how\
              \ you want to make them visible. You must specify the <code>Entry</code>\
              \ and <code>Target</code> pair, where <code>Entry</code> shows how the\
              \ path is made visible and <code>Target</code> is the actual Amazon\
              \ S3 or Amazon EFS path. If you only specify a target, it is displayed\
              \ as is. You also must ensure that your Identity and Access Management\
              \ (IAM) role provides access to paths in <code>Target</code>. This value\
              \ can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p>\
              \ <p>The following is an <code>Entry</code> and <code>Target</code>\
              \ pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\"\
              : \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases,\
              \ you can use this value instead of the session policy to lock down\
              \ your user to the designated home directory (\"<code>chroot</code>\"\
              ). To do this, you can set <code>Entry</code> to <code>/</code> and\
              \ set <code>Target</code> to the <code>HomeDirectory</code> parameter\
              \ value.</p> <p>The following is an <code>Entry</code> and <code>Target</code>\
              \ pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\"\
              : \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "<p>A session policy for your user so that you can use the\
              \ same Identity and Access Management (IAM) role across multiple users.\
              \ This policy scopes down a user's access to portions of their Amazon\
              \ S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,\
              \ <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\
              \ <note> <p>This policy applies only when the domain of <code>ServerId</code>\
              \ is Amazon S3. Amazon EFS does not use session policies.</p> <p>For\
              \ session policies, Transfer Family stores the policy as a JSON blob,\
              \ instead of the Amazon Resource Name (ARN) of the policy. You save\
              \ the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p>\
              \ <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\"\
              >Example session policy</a>.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\"\
              >AssumeRole</a> in the <i>Security Token Service API Reference</i>.</p>\
              \ </note>"
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance.
              This is the specific server that you added your user to.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: "<p>A unique identifier that is required to identify specific\
              \ groups within your directory. The users of the group that you associate\
              \ have access to your Amazon S3 or Amazon EFS resources over the enabled\
              \ protocols using Transfer Family. If you know the group name, you can\
              \ view the SID values by running the following command using Windows\
              \ PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like\
              \ \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code>\
              \ </p> <p>In that command, replace <i>YourGroupName</i> with the name\
              \ of your Active Directory group.</p> <p>The regular expression used\
              \ to validate this parameter is a string of characters consisting of\
              \ uppercase and lowercase alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
      required:
      - ExternalId
      - Role
      - ServerId
      title: CreateAccessRequest
      type: object
    ServiceUnavailableException: {}
    InternalServiceError: {}
    InvalidRequestException: {}
    ResourceExistsException: {}
    ResourceNotFoundException: {}
    CreateAgreementResponse:
      example:
        AgreementId: ""
      properties:
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: "The unique identifier for the agreement. Use this ID for\
              \ deleting, or updating an agreement, as well as in any other API calls\
              \ that require that you specify the agreement ID."
      required:
      - AgreementId
      type: object
    CreateAgreementRequest:
      example:
        Status: ""
        Description: ""
        ServerId: ""
        BaseDirectory: ""
        AccessRole: ""
        PartnerProfileId: ""
        LocalProfileId: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'A name or short description to identify the agreement. '
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance.
              This is the specific server that the agreement uses.
        LocalProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the AS2 local profile.
        PartnerProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the partner profile used in the agreement.
        BaseDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for files transferred by
              using the AS2 protocol.</p> <p>A <code>BaseDirectory</code> example
              is <code>/DOC-EXAMPLE-BUCKET/home/mydirectory</code>.</p>
        AccessRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>With AS2, you can send files by calling <code>StartFileTransfer</code>\
              \ and specifying the file paths in the request parameter, <code>SendFilePaths</code>.\
              \ We use the file’s parent directory (for example, for <code>--send-file-paths\
              \ /bucket/dir/file.txt</code>, parent directory is <code>/bucket/dir/</code>)\
              \ to temporarily store a processed AS2 message file, store the MDN when\
              \ we receive them from the partner, and write a final JSON file containing\
              \ relevant metadata of the transmission. So, the <code>AccessRole</code>\
              \ needs to provide read and write access to the parent directory of\
              \ the file location used in the <code>StartFileTransfer</code> request.\
              \ Additionally, you need to provide read and write access to the parent\
              \ directory of the files that you intend to send with <code>StartFileTransfer</code>.</p>\
              \ <p>If you are using Basic authentication for your AS2 connector, the\
              \ access role requires the <code>secretsmanager:GetSecretValue</code>\
              \ permission for the secret. If the secret is encrypted using a customer-managed\
              \ key instead of the Amazon Web Services managed key in Secrets Manager,\
              \ then the role also needs the <code>kms:Decrypt</code> permission for\
              \ that key.</p>"
        Status:
          allOf:
          - $ref: '#/components/schemas/AgreementStatusType'
          - description: The status of the agreement. The agreement can be either
              <code>ACTIVE</code> or <code>INACTIVE</code>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              agreements.
      required:
      - AccessRole
      - BaseDirectory
      - LocalProfileId
      - PartnerProfileId
      - ServerId
      title: CreateAgreementRequest
      type: object
    ThrottlingException: {}
    CreateConnectorResponse:
      example:
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: "The unique identifier for the connector, returned after\
              \ the API call succeeds."
      required:
      - ConnectorId
      type: object
    CreateConnectorRequest:
      example:
        As2Config:
          Compression: ""
          MessageSubject: ""
          BasicAuthSecretId: ""
          PartnerProfileId: ""
          EncryptionAlgorithm: ""
          SigningAlgorithm: ""
          LocalProfileId: ""
          MdnResponse: ""
          MdnSigningAlgorithm: ""
        LoggingRole: ""
        AccessRole: ""
        SftpConfig:
          TrustedHostKeys: ""
          UserSecretId: ""
        Url: ""
        Tags: ""
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of the partner's AS2 or SFTP endpoint.
        As2Config:
          $ref: '#/components/schemas/CreateConnectorRequest_As2Config'
        AccessRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>With AS2, you can send files by calling <code>StartFileTransfer</code>\
              \ and specifying the file paths in the request parameter, <code>SendFilePaths</code>.\
              \ We use the file’s parent directory (for example, for <code>--send-file-paths\
              \ /bucket/dir/file.txt</code>, parent directory is <code>/bucket/dir/</code>)\
              \ to temporarily store a processed AS2 message file, store the MDN when\
              \ we receive them from the partner, and write a final JSON file containing\
              \ relevant metadata of the transmission. So, the <code>AccessRole</code>\
              \ needs to provide read and write access to the parent directory of\
              \ the file location used in the <code>StartFileTransfer</code> request.\
              \ Additionally, you need to provide read and write access to the parent\
              \ directory of the files that you intend to send with <code>StartFileTransfer</code>.</p>\
              \ <p>If you are using Basic authentication for your AS2 connector, the\
              \ access role requires the <code>secretsmanager:GetSecretValue</code>\
              \ permission for the secret. If the secret is encrypted using a customer-managed\
              \ key instead of the Amazon Web Services managed key in Secrets Manager,\
              \ then the role also needs the <code>kms:Decrypt</code> permission for\
              \ that key.</p>"
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a connector to turn on CloudWatch\
              \ logging for Amazon S3 events. When set, you can view connector activity\
              \ in your CloudWatch logs."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              connectors. Tags are metadata attached to connectors for any purpose.
        SftpConfig:
          $ref: '#/components/schemas/CreateConnectorRequest_SftpConfig'
      required:
      - AccessRole
      - Url
      title: CreateConnectorRequest
      type: object
    CreateProfileResponse:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: "The unique identifier for the AS2 profile, returned after\
              \ the API call succeeds."
      required:
      - ProfileId
      type: object
    CreateProfileRequest:
      example:
        As2Id: ""
        ProfileType: ""
        CertificateIds: ""
        Tags: ""
      properties:
        As2Id:
          allOf:
          - $ref: '#/components/schemas/As2Id'
          - description: "The <code>As2Id</code> is the <i>AS2-name</i>, as defined\
              \ in the <a href=\"https://datatracker.ietf.org/doc/html/rfc4130\">RFC\
              \ 4130</a>. For inbound transfers, this is the <code>AS2-From</code>\
              \ header for the AS2 messages sent from the partner. For outbound connectors,\
              \ this is the <code>AS2-To</code> header for the AS2 messages sent to\
              \ the partner using the <code>StartFileTransfer</code> API operation.\
              \ This ID cannot include spaces."
        ProfileType:
          allOf:
          - $ref: '#/components/schemas/ProfileType'
          - description: "<p>Determines the type of profile to create:</p> <ul> <li>\
              \ <p>Specify <code>LOCAL</code> to create a local profile. A local profile\
              \ represents the AS2-enabled Transfer Family server organization or\
              \ party.</p> </li> <li> <p>Specify <code>PARTNER</code> to create a\
              \ partner profile. A partner profile represents a remote organization,\
              \ external to Transfer Family.</p> </li> </ul>"
        CertificateIds:
          allOf:
          - $ref: '#/components/schemas/CertificateIds'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              AS2 profiles.
      required:
      - As2Id
      - ProfileType
      title: CreateProfileRequest
      type: object
    CreateServerResponse:
      example:
        ServerId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The service-assigned identifier of the server that is created.
      required:
      - ServerId
      type: object
    CreateServerRequest:
      example:
        LoggingRole: ""
        HostKey: ""
        Protocols: ""
        IdentityProviderDetails:
          Function: ""
          DirectoryId: ""
          InvocationRole: ""
          Url: ""
          SftpAuthenticationMethods: ""
        EndpointDetails:
          AddressAllocationIds: ""
          VpcId: ""
          VpcEndpointId: ""
          SubnetIds: ""
          SecurityGroupIds: ""
        StructuredLogDestinations: ""
        PreAuthenticationLoginBanner: ""
        PostAuthenticationLoginBanner: ""
        EndpointType: ""
        SecurityPolicyName: ""
        ProtocolDetails:
          As2Transports: ""
          PassiveIp: ""
          SetStatOption: ""
          TlsSessionResumptionMode: ""
        WorkflowDetails:
          OnUpload: ""
          OnPartialUpload: ""
        Domain: ""
        IdentityProviderType: ""
        Tags: ""
        Certificate: ""
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: "<p>The Amazon Resource Name (ARN) of the Certificate Manager\
              \ (ACM) certificate. Required when <code>Protocols</code> is set to\
              \ <code>FTPS</code>.</p> <p>To request a new public certificate, see\
              \ <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html\"\
              >Request a public certificate</a> in the <i>Certificate Manager User\
              \ Guide</i>.</p> <p>To import an existing certificate into ACM, see\
              \ <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\"\
              >Importing certificates into ACM</a> in the <i>Certificate Manager User\
              \ Guide</i>.</p> <p>To request a private certificate to use FTPS through\
              \ private IP addresses, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html\"\
              >Request a private certificate</a> in the <i>Certificate Manager User\
              \ Guide</i>.</p> <p>Certificates with the following cryptographic algorithms\
              \ and key sizes are supported:</p> <ul> <li> <p>2048-bit RSA (RSA_2048)</p>\
              \ </li> <li> <p>4096-bit RSA (RSA_4096)</p> </li> <li> <p>Elliptic Prime\
              \ Curve 256 bit (EC_prime256v1)</p> </li> <li> <p>Elliptic Prime Curve\
              \ 384 bit (EC_secp384r1)</p> </li> <li> <p>Elliptic Prime Curve 521\
              \ bit (EC_secp521r1)</p> </li> </ul> <note> <p>The certificate must\
              \ be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP address\
              \ specified and information about the issuer.</p> </note>"
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: "<p>The domain of the storage system that is used for file\
              \ transfers. There are two domains available: Amazon Simple Storage\
              \ Service (Amazon S3) and Amazon Elastic File System (Amazon EFS). The\
              \ default value is S3.</p> <note> <p>After the server is created, the\
              \ domain cannot be changed.</p> </note>"
        EndpointDetails:
          $ref: '#/components/schemas/CreateServerRequest_EndpointDetails'
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          - description: "<p>The type of endpoint that you want your server to use.\
              \ You can choose to make your server's endpoint publicly accessible\
              \ (PUBLIC) or host it inside your VPC. With an endpoint that is hosted\
              \ in a VPC, you can restrict access to your server and resources only\
              \ within your VPC or choose to make it internet facing by attaching\
              \ Elastic IP addresses directly to it.</p> <note> <p> After May 19,\
              \ 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>\
              \ in your Amazon Web Services account if your account hasn't already\
              \ done so before May 19, 2021. If you have already created servers with\
              \ <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Services\
              \ account on or before May 19, 2021, you will not be affected. After\
              \ this date, use <code>EndpointType</code>=<code>VPC</code>.</p> <p>For\
              \ more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p>\
              \ <p>It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>.\
              \ With this endpoint type, you have the option to directly associate\
              \ up to three Elastic IPv4 addresses (BYO IP included) with your server's\
              \ endpoint and use VPC security groups to restrict traffic by the client's\
              \ public IP address. This is not possible with <code>EndpointType</code>\
              \ set to <code>VPC_ENDPOINT</code>.</p> </note>"
        HostKey:
          allOf:
          - $ref: '#/components/schemas/HostKey'
          - description: "<p>The RSA, ECDSA, or ED25519 private key to use for your\
              \ SFTP-enabled server. You can add multiple host keys, in case you want\
              \ to rotate keys, or have a set of active keys that use different algorithms.</p>\
              \ <p>Use the following command to generate an RSA 2048 bit key with\
              \ no passphrase:</p> <p> <code>ssh-keygen -t rsa -b 2048 -N \"\" -m\
              \ PEM -f my-new-server-key</code>.</p> <p>Use a minimum value of 2048\
              \ for the <code>-b</code> option. You can create a stronger key by using\
              \ 3072 or 4096.</p> <p>Use the following command to generate an ECDSA\
              \ 256 bit key with no passphrase:</p> <p> <code>ssh-keygen -t ecdsa\
              \ -b 256 -N \"\" -m PEM -f my-new-server-key</code>.</p> <p>Valid values\
              \ for the <code>-b</code> option for ECDSA are 256, 384, and 521.</p>\
              \ <p>Use the following command to generate an ED25519 key with no passphrase:</p>\
              \ <p> <code>ssh-keygen -t ed25519 -N \"\" -f my-new-server-key</code>.</p>\
              \ <p>For all of these commands, you can replace <i>my-new-server-key</i>\
              \ with a string of your choice.</p> <important> <p>If you aren't planning\
              \ to migrate existing users from an existing SFTP-enabled server to\
              \ a new server, don't update the host key. Accidentally changing a server's\
              \ host key can be disruptive.</p> </important> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key\"\
              >Manage host keys for your SFTP-enabled server</a> in the <i>Transfer\
              \ Family User Guide</i>.</p>"
        IdentityProviderDetails:
          $ref: '#/components/schemas/CreateServerRequest_IdentityProviderDetails'
        IdentityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          - description: "<p>The mode of authentication for a server. The default\
              \ value is <code>SERVICE_MANAGED</code>, which allows you to store and\
              \ access user credentials within the Transfer Family service.</p> <p>Use\
              \ <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory\
              \ groups in Directory Service for Microsoft Active Directory or Microsoft\
              \ Active Directory in your on-premises environment or in Amazon Web\
              \ Services using AD Connector. This option also requires you to provide\
              \ a Directory ID by using the <code>IdentityProviderDetails</code> parameter.</p>\
              \ <p>Use the <code>API_GATEWAY</code> value to integrate with an identity\
              \ provider of your choosing. The <code>API_GATEWAY</code> setting requires\
              \ you to provide an Amazon API Gateway endpoint URL to call for authentication\
              \ by using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use\
              \ the <code>AWS_LAMBDA</code> value to directly use an Lambda function\
              \ as your identity provider. If you choose this value, you must specify\
              \ the ARN for the Lambda function in the <code>Function</code> parameter\
              \ for the <code>IdentityProviderDetails</code> data type.</p>"
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a server to turn on Amazon CloudWatch\
              \ logging for Amazon S3 or Amazon EFSevents. When set, you can view\
              \ user activity in your CloudWatch logs."
        PostAuthenticationLoginBanner:
          allOf:
          - $ref: '#/components/schemas/PostAuthenticationLoginBanner'
          - description: <p>Specifies a string to display when users connect to a
              server. This string is displayed after the user authenticates.</p> <note>
              <p>The SFTP protocol does not support post-authentication display banners.</p>
              </note>
        PreAuthenticationLoginBanner:
          allOf:
          - $ref: '#/components/schemas/PreAuthenticationLoginBanner'
          - description: "<p>Specifies a string to display when users connect to a\
              \ server. This string is displayed before the user authenticates. For\
              \ example, the following banner displays details about using the system:</p>\
              \ <p> <code>This system is for the use of authorized users only. Individuals\
              \ using this computer system without authority, or in excess of their\
              \ authority, are subject to having all of their activities on this system\
              \ monitored and recorded by system personnel.</code> </p>"
        Protocols:
          allOf:
          - $ref: '#/components/schemas/Protocols'
          - description: "<p>Specifies the file transfer protocol or protocols over\
              \ which your file transfer protocol client can connect to your server's\
              \ endpoint. The available protocols are:</p> <ul> <li> <p> <code>SFTP</code>\
              \ (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH</p>\
              \ </li> <li> <p> <code>FTPS</code> (File Transfer Protocol Secure):\
              \ File transfer with TLS encryption</p> </li> <li> <p> <code>FTP</code>\
              \ (File Transfer Protocol): Unencrypted file transfer</p> </li> <li>\
              \ <p> <code>AS2</code> (Applicability Statement 2): used for transporting\
              \ structured business-to-business data</p> </li> </ul> <note> <ul> <li>\
              \ <p>If you select <code>FTPS</code>, you must choose a certificate\
              \ stored in Certificate Manager (ACM) which is used to identify your\
              \ server when clients connect to it over FTPS.</p> </li> <li> <p>If\
              \ <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>,\
              \ then the <code>EndpointType</code> must be <code>VPC</code> and the\
              \ <code>IdentityProviderType</code> must be either <code>AWS_DIRECTORY_SERVICE</code>,\
              \ <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.</p> </li> <li>\
              \ <p>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>\
              \ cannot be associated.</p> </li> <li> <p>If <code>Protocol</code> is\
              \ set only to <code>SFTP</code>, the <code>EndpointType</code> can be\
              \ set to <code>PUBLIC</code> and the <code>IdentityProviderType</code>\
              \ can be set any of the supported identity types: <code>SERVICE_MANAGED</code>,\
              \ <code>AWS_DIRECTORY_SERVICE</code>, <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.</p>\
              \ </li> <li> <p>If <code>Protocol</code> includes <code>AS2</code>,\
              \ then the <code>EndpointType</code> must be <code>VPC</code>, and domain\
              \ must be Amazon S3.</p> </li> </ul> </note>"
        ProtocolDetails:
          $ref: '#/components/schemas/CreateServerRequest_ProtocolDetails'
        SecurityPolicyName:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyName'
          - description: Specifies the name of the security policy that is attached
              to the server.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              servers.
        WorkflowDetails:
          $ref: '#/components/schemas/CreateServerRequest_WorkflowDetails'
        StructuredLogDestinations:
          allOf:
          - $ref: '#/components/schemas/StructuredLogDestinations'
          - description: "<p>Specifies the log groups to which your server logs are\
              \ sent.</p> <p>To specify a log group, you must provide the ARN for\
              \ an existing log group. In this case, the format of the log group is\
              \ as follows:</p> <p> <code>arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*</code>\
              \ </p> <p>For example, <code>arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*</code>\
              \ </p> <p>If you have previously specified a log group for a server,\
              \ you can clear it, and in effect turn off structured logging, by providing\
              \ an empty value for this parameter in an <code>update-server</code>\
              \ call. For example:</p> <p> <code>update-server --server-id s-1234567890abcdef0\
              \ --structured-log-destinations</code> </p>"
      title: CreateServerRequest
      type: object
    AccessDeniedException: {}
    CreateUserResponse:
      example:
        ServerId: ""
        UserName: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that the user is attached to.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: A unique string that identifies a Transfer Family user.
      required:
      - ServerId
      - UserName
      type: object
    CreateUserRequest:
      example:
        Policy: ""
        Role: ""
        HomeDirectory: ""
        HomeDirectoryType: ""
        ServerId: ""
        UserName: ""
        HomeDirectoryMappings: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        SshPublicKeyBody: ""
        Tags: ""
      properties:
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        HomeDirectoryMappings:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryMappings'
          - description: "<p>Logical directory mappings that specify what Amazon S3\
              \ or Amazon EFS paths and keys should be visible to your user and how\
              \ you want to make them visible. You must specify the <code>Entry</code>\
              \ and <code>Target</code> pair, where <code>Entry</code> shows how the\
              \ path is made visible and <code>Target</code> is the actual Amazon\
              \ S3 or Amazon EFS path. If you only specify a target, it is displayed\
              \ as is. You also must ensure that your Identity and Access Management\
              \ (IAM) role provides access to paths in <code>Target</code>. This value\
              \ can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p>\
              \ <p>The following is an <code>Entry</code> and <code>Target</code>\
              \ pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\"\
              : \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases,\
              \ you can use this value instead of the session policy to lock your\
              \ user down to the designated home directory (\"<code>chroot</code>\"\
              ). To do this, you can set <code>Entry</code> to <code>/</code> and\
              \ set <code>Target</code> to the value the user should see for their\
              \ home directory when they log in.</p> <p>The following is an <code>Entry</code>\
              \ and <code>Target</code> pair example for <code>chroot</code>.</p>\
              \ <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\"\
              \ } ]</code> </p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "<p>A session policy for your user so that you can use the\
              \ same Identity and Access Management (IAM) role across multiple users.\
              \ This policy scopes down a user's access to portions of their Amazon\
              \ S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,\
              \ <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\
              \ <note> <p>This policy applies only when the domain of <code>ServerId</code>\
              \ is Amazon S3. Amazon EFS does not use session policies.</p> <p>For\
              \ session policies, Transfer Family stores the policy as a JSON blob,\
              \ instead of the Amazon Resource Name (ARN) of the policy. You save\
              \ the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p>\
              \ <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\"\
              >Example session policy</a>.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\"\
              >AssumeRole</a> in the <i>Amazon Web Services Security Token Service\
              \ API Reference</i>.</p> </note>"
        PosixProfile:
          $ref: '#/components/schemas/CreateUserRequest_PosixProfile'
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance.
              This is the specific server that you added your user to.
        SshPublicKeyBody:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyBody'
          - description: "<p>The public portion of the Secure Shell (SSH) key used\
              \ to authenticate the user to the server.</p> <p>The three standard\
              \ SSH public key format elements are <code>&lt;key type&gt;</code>,\
              \ <code>&lt;body base64&gt;</code>, and an optional <code>&lt;comment&gt;</code>,\
              \ with spaces between each element.</p> <p>Transfer Family accepts RSA,\
              \ ECDSA, and ED25519 keys.</p> <ul> <li> <p>For RSA keys, the key type\
              \ is <code>ssh-rsa</code>.</p> </li> <li> <p>For ED25519 keys, the key\
              \ type is <code>ssh-ed25519</code>.</p> </li> <li> <p>For ECDSA keys,\
              \ the key type is either <code>ecdsa-sha2-nistp256</code>, <code>ecdsa-sha2-nistp384</code>,\
              \ or <code>ecdsa-sha2-nistp521</code>, depending on the size of the\
              \ key you generated.</p> </li> </ul>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              users. Tags are metadata attached to users for any purpose.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: "A unique string that identifies a user and is associated\
              \ with a <code>ServerId</code>. This user name must be a minimum of\
              \ 3 and a maximum of 100 characters long. The following are valid characters:\
              \ a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and at sign\
              \ '@'. The user name can't start with a hyphen, period, or at sign."
      required:
      - Role
      - ServerId
      - UserName
      title: CreateUserRequest
      type: object
    CreateWorkflowResponse:
      example:
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
      required:
      - WorkflowId
      type: object
    CreateWorkflowRequest:
      example:
        Steps: ""
        Description: ""
        OnExceptionSteps: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/WorkflowDescription'
          - description: A textual description for the workflow.
        Steps:
          allOf:
          - $ref: '#/components/schemas/WorkflowSteps'
          - description: "<p>Specifies the details for the steps that are in the specified\
              \ workflow.</p> <p> The <code>TYPE</code> specifies which of the following\
              \ actions is being taken for this step. </p> <ul> <li> <p> <b> <code>COPY</code>\
              \ </b> - Copy the file to another location.</p> </li> <li> <p> <b> <code>CUSTOM</code>\
              \ </b> - Perform a custom step with an Lambda function target.</p> </li>\
              \ <li> <p> <b> <code>DECRYPT</code> </b> - Decrypt a file that was encrypted\
              \ before it was uploaded.</p> </li> <li> <p> <b> <code>DELETE</code>\
              \ </b> - Delete the file.</p> </li> <li> <p> <b> <code>TAG</code> </b>\
              \ - Add a tag to the file.</p> </li> </ul> <note> <p> Currently, copying\
              \ and tagging are supported only on S3. </p> </note> <p> For file location,\
              \ you specify either the Amazon S3 bucket and key, or the Amazon EFS\
              \ file system ID and path. </p>"
        OnExceptionSteps:
          allOf:
          - $ref: '#/components/schemas/WorkflowSteps'
          - description: "<p>Specifies the steps (actions) to take if errors are encountered\
              \ during execution of the workflow.</p> <note> <p>For custom steps,\
              \ the Lambda function needs to send <code>FAILURE</code> to the call\
              \ back API to kick off the exception steps. Additionally, if the Lambda\
              \ does not send <code>SUCCESS</code> before it times out, the exception\
              \ steps are executed.</p> </note>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              workflows. Tags are metadata attached to workflows for any purpose.
      required:
      - Steps
      title: CreateWorkflowRequest
      type: object
    DeleteAccessRequest:
      example:
        ServerId: ""
        ExternalId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              this user assigned.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: "<p>A unique identifier that is required to identify specific\
              \ groups within your directory. The users of the group that you associate\
              \ have access to your Amazon S3 or Amazon EFS resources over the enabled\
              \ protocols using Transfer Family. If you know the group name, you can\
              \ view the SID values by running the following command using Windows\
              \ PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like\
              \ \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code>\
              \ </p> <p>In that command, replace <i>YourGroupName</i> with the name\
              \ of your Active Directory group.</p> <p>The regular expression used\
              \ to validate this parameter is a string of characters consisting of\
              \ uppercase and lowercase alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
      required:
      - ExternalId
      - ServerId
      title: DeleteAccessRequest
      type: object
    DeleteAgreementRequest:
      example:
        AgreementId: ""
        ServerId: ""
      properties:
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: A unique identifier for the agreement. This identifier is
              returned when you create an agreement.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The server identifier associated with the agreement that
              you are deleting.
      required:
      - AgreementId
      - ServerId
      title: DeleteAgreementRequest
      type: object
    DeleteCertificateRequest:
      example:
        CertificateId: ""
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: The identifier of the certificate object that you are deleting.
      required:
      - CertificateId
      title: DeleteCertificateRequest
      type: object
    DeleteConnectorRequest:
      example:
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
      required:
      - ConnectorId
      title: DeleteConnectorRequest
      type: object
    DeleteHostKeyRequest:
      example:
        ServerId: ""
        HostKeyId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that contains the host key that
              you are deleting.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: The identifier of the host key that you are deleting.
      required:
      - HostKeyId
      - ServerId
      title: DeleteHostKeyRequest
      type: object
    DeleteProfileRequest:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: The identifier of the profile that you are deleting.
      required:
      - ProfileId
      title: DeleteProfileRequest
      type: object
    DeleteServerRequest:
      example:
        ServerId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A unique system-assigned identifier for a server instance.
      required:
      - ServerId
      title: DeleteServerRequest
      type: object
    DeleteSshPublicKeyRequest:
      example:
        SshPublicKeyId: ""
        ServerId: ""
        UserName: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a file transfer protocol-enabled
              server instance that has the user assigned to it.
        SshPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyId'
          - description: A unique identifier used to reference your user's specific
              SSH key.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: A unique string that identifies a user whose public key is
              being deleted.
      required:
      - ServerId
      - SshPublicKeyId
      - UserName
      title: DeleteSshPublicKeyRequest
      type: object
    DeleteUserRequest:
      example:
        ServerId: ""
        UserName: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance
              that has the user assigned to it.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: A unique string that identifies a user that is being deleted
              from a server.
      required:
      - ServerId
      - UserName
      title: DeleteUserRequest
      type: object
    DeleteWorkflowRequest:
      example:
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
      required:
      - WorkflowId
      title: DeleteWorkflowRequest
      type: object
    DescribeAccessResponse:
      example:
        ServerId: ""
        Access:
          Policy: ""
          Role: ""
          HomeDirectory: ""
          HomeDirectoryType: ""
          HomeDirectoryMappings: ""
          PosixProfile:
            Uid: ""
            SecondaryGids: ""
            Gid: ""
          ExternalId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              this access assigned.
        Access:
          $ref: '#/components/schemas/DescribeAccessResponse_Access'
      required:
      - Access
      - ServerId
      type: object
    DescribeAccessRequest:
      example:
        ServerId: ""
        ExternalId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              this access assigned.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: "<p>A unique identifier that is required to identify specific\
              \ groups within your directory. The users of the group that you associate\
              \ have access to your Amazon S3 or Amazon EFS resources over the enabled\
              \ protocols using Transfer Family. If you know the group name, you can\
              \ view the SID values by running the following command using Windows\
              \ PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like\
              \ \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code>\
              \ </p> <p>In that command, replace <i>YourGroupName</i> with the name\
              \ of your Active Directory group.</p> <p>The regular expression used\
              \ to validate this parameter is a string of characters consisting of\
              \ uppercase and lowercase alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
      required:
      - ExternalId
      - ServerId
      title: DescribeAccessRequest
      type: object
    DescribeAgreementResponse:
      example:
        Agreement:
          Status: ""
          AgreementId: ""
          Description: ""
          ServerId: ""
          BaseDirectory: ""
          AccessRole: ""
          PartnerProfileId: ""
          LocalProfileId: ""
          Arn: ""
          Tags: ""
      properties:
        Agreement:
          $ref: '#/components/schemas/DescribeAgreementResponse_Agreement'
      required:
      - Agreement
      type: object
    DescribeAgreementRequest:
      example:
        AgreementId: ""
        ServerId: ""
      properties:
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: A unique identifier for the agreement. This identifier is
              returned when you create an agreement.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The server identifier that's associated with the agreement.
      required:
      - AgreementId
      - ServerId
      title: DescribeAgreementRequest
      type: object
    DescribeCertificateResponse:
      example:
        Certificate:
          Status: ""
          InactiveDate: ""
          Usage: ""
          Description: ""
          CertificateId: ""
          NotBeforeDate: ""
          ActiveDate: ""
          NotAfterDate: ""
          Serial: ""
          Type: ""
          CertificateChain: ""
          Arn: ""
          Tags: ""
          Certificate: ""
      properties:
        Certificate:
          $ref: '#/components/schemas/DescribeCertificateResponse_Certificate'
      required:
      - Certificate
      type: object
    DescribeCertificateRequest:
      example:
        CertificateId: ""
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
      required:
      - CertificateId
      title: DescribeCertificateRequest
      type: object
    DescribeConnectorResponse:
      example:
        Connector:
          As2Config:
            Compression: ""
            MessageSubject: ""
            BasicAuthSecretId: ""
            PartnerProfileId: ""
            EncryptionAlgorithm: ""
            SigningAlgorithm: ""
            LocalProfileId: ""
            MdnResponse: ""
            MdnSigningAlgorithm: ""
          LoggingRole: ""
          AccessRole: ""
          SftpConfig:
            TrustedHostKeys: ""
            UserSecretId: ""
          Arn: ""
          Url: ""
          Tags: ""
          ConnectorId: ""
      properties:
        Connector:
          $ref: '#/components/schemas/DescribeConnectorResponse_Connector'
      required:
      - Connector
      type: object
    DescribeConnectorRequest:
      example:
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
      required:
      - ConnectorId
      title: DescribeConnectorRequest
      type: object
    DescribeExecutionResponse:
      example:
        Execution:
          Status: ""
          Results:
            Steps: ""
            OnExceptionSteps: ""
          PosixProfile:
            Uid: ""
            SecondaryGids: ""
            Gid: ""
          LoggingConfiguration:
            LoggingRole: ""
            LogGroupName: ""
          InitialFileLocation:
            EfsFileLocation:
              Path: ""
              FileSystemId: ""
            S3FileLocation:
              VersionId: ""
              Etag: ""
              Bucket: ""
              Key: ""
          ExecutionRole: ""
          ServiceMetadata:
            UserDetails:
              UserName: ""
              ServerId: ""
              SessionId: ""
          ExecutionId: ""
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
        Execution:
          $ref: '#/components/schemas/DescribeExecutionResponse_Execution'
      required:
      - Execution
      - WorkflowId
      type: object
    DescribeExecutionRequest:
      example:
        WorkflowId: ""
        ExecutionId: ""
      properties:
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: A unique identifier for the execution of a workflow.
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
      required:
      - ExecutionId
      - WorkflowId
      title: DescribeExecutionRequest
      type: object
    DescribeHostKeyResponse:
      example:
        HostKey:
          Type: ""
          HostKeyId: ""
          Description: ""
          HostKeyFingerprint: ""
          Arn: ""
          DateImported: ""
          Tags: ""
      properties:
        HostKey:
          $ref: '#/components/schemas/DescribeHostKeyResponse_HostKey'
      required:
      - HostKey
      type: object
    DescribeHostKeyRequest:
      example:
        ServerId: ""
        HostKeyId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that contains the host key that
              you want described.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: The identifier of the host key that you want described.
      required:
      - HostKeyId
      - ServerId
      title: DescribeHostKeyRequest
      type: object
    DescribeProfileResponse:
      example:
        Profile:
          ProfileId: ""
          ProfileType: ""
          As2Id: ""
          CertificateIds: ""
          Arn: ""
          Tags: ""
      properties:
        Profile:
          $ref: '#/components/schemas/DescribeProfileResponse_Profile'
      required:
      - Profile
      type: object
    DescribeProfileRequest:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: The identifier of the profile that you want described.
      required:
      - ProfileId
      title: DescribeProfileRequest
      type: object
    DescribeSecurityPolicyResponse:
      example:
        SecurityPolicy:
          SshCiphers: ""
          SshKexs: ""
          TlsCiphers: ""
          Fips: ""
          SecurityPolicyName: ""
          SshMacs: ""
      properties:
        SecurityPolicy:
          $ref: '#/components/schemas/DescribeSecurityPolicyResponse_SecurityPolicy'
      required:
      - SecurityPolicy
      type: object
    DescribeSecurityPolicyRequest:
      example:
        SecurityPolicyName: ""
      properties:
        SecurityPolicyName:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyName'
          - description: Specifies the name of the security policy that is attached
              to the server.
      required:
      - SecurityPolicyName
      title: DescribeSecurityPolicyRequest
      type: object
    DescribeServerResponse:
      example:
        Server:
          LoggingRole: ""
          Protocols: ""
          HostKeyFingerprint: ""
          UserCount: ""
          IdentityProviderDetails:
            Function: ""
            DirectoryId: ""
            InvocationRole: ""
            Url: ""
            SftpAuthenticationMethods: ""
          EndpointDetails:
            AddressAllocationIds: ""
            VpcId: ""
            VpcEndpointId: ""
            SubnetIds: ""
            SecurityGroupIds: ""
          StructuredLogDestinations: ""
          PreAuthenticationLoginBanner: ""
          ServerId: ""
          PostAuthenticationLoginBanner: ""
          State: ""
          EndpointType: ""
          SecurityPolicyName: ""
          ProtocolDetails:
            As2Transports: ""
            PassiveIp: ""
            SetStatOption: ""
            TlsSessionResumptionMode: ""
          WorkflowDetails:
            OnUpload: ""
            OnPartialUpload: ""
          Arn: ""
          Domain: ""
          IdentityProviderType: ""
          Tags: ""
          Certificate: ""
      properties:
        Server:
          $ref: '#/components/schemas/DescribeServerResponse_Server'
      required:
      - Server
      type: object
    DescribeServerRequest:
      example:
        ServerId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server.
      required:
      - ServerId
      title: DescribeServerRequest
      type: object
    DescribeUserResponse:
      example:
        ServerId: ""
        User:
          Policy: ""
          Role: ""
          HomeDirectory: ""
          HomeDirectoryType: ""
          UserName: ""
          HomeDirectoryMappings: ""
          PosixProfile:
            Uid: ""
            SecondaryGids: ""
            Gid: ""
          SshPublicKeys: ""
          Arn: ""
          Tags: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              this user assigned.
        User:
          $ref: '#/components/schemas/DescribeUserResponse_User'
      required:
      - ServerId
      - User
      type: object
    DescribeUserRequest:
      example:
        ServerId: ""
        UserName: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              this user assigned.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the user assigned to one or more servers. User
              names are part of the sign-in credentials to use the Transfer Family
              service and perform file transfer tasks.
      required:
      - ServerId
      - UserName
      title: DescribeUserRequest
      type: object
    DescribeWorkflowResponse:
      example:
        Workflow:
          Steps: ""
          Description: ""
          Arn: ""
          WorkflowId: ""
          OnExceptionSteps: ""
          Tags: ""
      properties:
        Workflow:
          $ref: '#/components/schemas/DescribeWorkflowResponse_Workflow'
      required:
      - Workflow
      type: object
    DescribeWorkflowRequest:
      example:
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
      required:
      - WorkflowId
      title: DescribeWorkflowRequest
      type: object
    ImportCertificateResponse:
      example:
        CertificateId: ""
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
      required:
      - CertificateId
      type: object
    ImportCertificateRequest:
      example:
        InactiveDate: ""
        Usage: ""
        PrivateKey: ""
        Description: ""
        CertificateChain: ""
        ActiveDate: ""
        Tags: ""
        Certificate: ""
      properties:
        Usage:
          allOf:
          - $ref: '#/components/schemas/CertificateUsageType'
          - description: Specifies whether this certificate is used for signing or
              encryption.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/CertificateBodyType'
          - description: "<ul> <li> <p>For the CLI, provide a file path for a certificate\
              \ in URI format. For example, <code>--certificate file://encryption-cert.pem</code>.\
              \ Alternatively, you can provide the raw content.</p> </li> <li> <p>For\
              \ the SDK, specify the raw content of a certificate file. For example,\
              \ <code>--certificate \"`cat encryption-cert.pem`\"</code>.</p> </li>\
              \ </ul>"
        CertificateChain:
          allOf:
          - $ref: '#/components/schemas/CertificateChainType'
          - description: An optional list of certificates that make up the chain for
              the certificate that's being imported.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyType'
          - description: "<ul> <li> <p>For the CLI, provide a file path for a private\
              \ key in URI format.For example, <code>--private-key file://encryption-key.pem</code>.\
              \ Alternatively, you can provide the raw content of the private key\
              \ file.</p> </li> <li> <p>For the SDK, specify the raw content of a\
              \ private key file. For example, <code>--private-key \"`cat encryption-key.pem`\"\
              </code> </p> </li> </ul>"
        ActiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              active.
        InactiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              inactive.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'A short description that helps identify the certificate. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              certificates.
      required:
      - Certificate
      - Usage
      title: ImportCertificateRequest
      type: object
    ImportHostKeyResponse:
      example:
        ServerId: ""
        HostKeyId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: Returns the server identifier that contains the imported
              key.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: Returns the host key identifier for the imported key.
      required:
      - HostKeyId
      - ServerId
      type: object
    ImportHostKeyRequest:
      example:
        ServerId: ""
        Description: ""
        Tags: ""
        HostKeyBody: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that contains the host key that
              you are importing.
        HostKeyBody:
          allOf:
          - $ref: '#/components/schemas/HostKey'
          - description: "<p>The private key portion of an SSH key pair.</p> <p>Transfer\
              \ Family accepts RSA, ECDSA, and ED25519 keys.</p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/HostKeyDescription'
          - description: The text description that identifies this host key.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              host keys.
      required:
      - HostKeyBody
      - ServerId
      title: ImportHostKeyRequest
      type: object
    ImportSshPublicKeyResponse:
      description: "Identifies the user, the server they belong to, and the identifier\
        \ of the SSH public key associated with that user. A user can have more than\
        \ one key on each server that they are associated with."
      example:
        SshPublicKeyId: ""
        ServerId: ""
        UserName: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server.
        SshPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyId'
          - description: The name given to a public key by the system that was imported.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: A user name assigned to the <code>ServerID</code> value that
              you specified.
      required:
      - ServerId
      - SshPublicKeyId
      - UserName
      type: object
    ImportSshPublicKeyRequest:
      example:
        ServerId: ""
        UserName: ""
        SshPublicKeyBody: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server.
        SshPublicKeyBody:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyBody'
          - description: "<p>The public key portion of an SSH key pair.</p> <p>Transfer\
              \ Family accepts RSA, ECDSA, and ED25519 keys.</p>"
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the Transfer Family user that is assigned to
              one or more servers.
      required:
      - ServerId
      - SshPublicKeyBody
      - UserName
      title: ImportSshPublicKeyRequest
      type: object
    ListAccessesResponse:
      example:
        ServerId: ""
        NextToken: ""
        Accesses: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListAccesses</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional accesses."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              users assigned to it.
        Accesses:
          allOf:
          - $ref: '#/components/schemas/ListedAccesses'
          - description: Returns the accesses and their properties for the <code>ServerId</code>
              value that you specify.
      required:
      - Accesses
      - ServerId
      type: object
    ListAccessesRequest:
      example:
        ServerId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the maximum number of access SIDs to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListAccesses</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional accesses."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              users assigned to it.
      required:
      - ServerId
      title: ListAccessesRequest
      type: object
    InvalidNextTokenException: {}
    ListAgreementsResponse:
      example:
        NextToken: ""
        Agreements: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns a token that you can use to call <code>ListAgreements</code>\
              \ again and receive additional results, if there are any."
        Agreements:
          allOf:
          - $ref: '#/components/schemas/ListedAgreements'
          - description: "Returns an array, where each item contains the details of\
              \ an agreement."
      required:
      - Agreements
      type: object
    ListAgreementsRequest:
      example:
        ServerId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of agreements to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListAgreements</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional agreements."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server for which you want a list of
              agreements.
      required:
      - ServerId
      title: ListAgreementsRequest
      type: object
    ListCertificatesResponse:
      example:
        NextToken: ""
        Certificates: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns the next token, which you can use to list the next\
              \ certificate."
        Certificates:
          allOf:
          - $ref: '#/components/schemas/ListedCertificates'
          - description: Returns an array of the certificates that are specified in
              the <code>ListCertificates</code> call.
      required:
      - Certificates
      type: object
    ListCertificatesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of certificates to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListCertificates</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional certificates."
      title: ListCertificatesRequest
      type: object
    ListConnectorsResponse:
      example:
        Connectors: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns a token that you can use to call <code>ListConnectors</code>\
              \ again and receive additional results, if there are any."
        Connectors:
          allOf:
          - $ref: '#/components/schemas/ListedConnectors'
          - description: "Returns an array, where each item contains the details of\
              \ a connector."
      required:
      - Connectors
      type: object
    ListConnectorsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of connectors to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListConnectors</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional connectors."
      title: ListConnectorsRequest
      type: object
    ListExecutionsResponse:
      example:
        Executions: ""
        NextToken: ""
        WorkflowId: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' <code>ListExecutions</code> returns the <code>NextToken</code>
              parameter in the output. You can then pass the <code>NextToken</code>
              parameter in a subsequent command to continue listing additional executions.'
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
        Executions:
          allOf:
          - $ref: '#/components/schemas/ListedExecutions'
          - description: "Returns the details for each execution, in a <code>ListedExecution</code>\
              \ array."
      required:
      - Executions
      - WorkflowId
      type: object
    ListExecutionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        WorkflowId: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the maximum number of executions to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p> <code>ListExecutions</code> returns the <code>NextToken</code>\
              \ parameter in the output. You can then pass the <code>NextToken</code>\
              \ parameter in a subsequent command to continue listing additional executions.</p>\
              \ <p> This is useful for pagination, for instance. If you have 100 executions\
              \ for a workflow, you might only want to list first 10. If so, call\
              \ the API by specifying the <code>max-results</code>: </p> <p> <code>aws\
              \ transfer list-executions --max-results 10</code> </p> <p> This returns\
              \ details for the first 10 executions, as well as the pointer (<code>NextToken</code>)\
              \ to the eleventh execution. You can now call the API again, supplying\
              \ the <code>NextToken</code> value you received: </p> <p> <code>aws\
              \ transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult</code>\
              \ </p> <p> This call returns the next 10 executions, the 11th through\
              \ the 20th. You can then repeat the call until the details for all 100\
              \ executions have been returned. </p>"
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
      required:
      - WorkflowId
      title: ListExecutionsRequest
      type: object
    ListHostKeysResponse:
      example:
        ServerId: ""
        NextToken: ""
        HostKeys: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns a token that you can use to call <code>ListHostKeys</code>\
              \ again and receive additional results, if there are any."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: Returns the server identifier that contains the listed host
              keys.
        HostKeys:
          allOf:
          - $ref: '#/components/schemas/ListedHostKeys'
          - description: "Returns an array, where each item contains the details of\
              \ a host key."
      required:
      - HostKeys
      - ServerId
      type: object
    ListHostKeysRequest:
      example:
        ServerId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of host keys to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When there are additional results that were not returned,\
              \ a <code>NextToken</code> parameter is returned. You can use that value\
              \ for a subsequent call to <code>ListHostKeys</code> to continue listing\
              \ results."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that contains the host keys
              that you want to view.
      required:
      - ServerId
      title: ListHostKeysRequest
      type: object
    ListProfilesResponse:
      example:
        NextToken: ""
        Profiles: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Returns a token that you can use to call <code>ListProfiles</code>\
              \ again and receive additional results, if there are any."
        Profiles:
          allOf:
          - $ref: '#/components/schemas/ListedProfiles'
          - description: "Returns an array, where each item contains the details of\
              \ a profile."
      required:
      - Profiles
      type: object
    ListProfilesRequest:
      example:
        ProfileType: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of profiles to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When there are additional results that were not returned,\
              \ a <code>NextToken</code> parameter is returned. You can use that value\
              \ for a subsequent call to <code>ListProfiles</code> to continue listing\
              \ results."
        ProfileType:
          allOf:
          - $ref: '#/components/schemas/ProfileType'
          - description: "Indicates whether to list only <code>LOCAL</code> type profiles\
              \ or only <code>PARTNER</code> type profiles. If not supplied in the\
              \ request, the command lists all types of profiles."
      title: ListProfilesRequest
      type: object
    ListSecurityPoliciesResponse:
      example:
        NextToken: ""
        SecurityPolicyNames: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListSecurityPolicies</code>\
              \ operation, a <code>NextToken</code> parameter is returned in the output.\
              \ In a following command, you can pass in the <code>NextToken</code>\
              \ parameter to continue listing security policies."
        SecurityPolicyNames:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyNames'
          - description: An array of security policies that were listed.
      required:
      - SecurityPolicyNames
      type: object
    ListSecurityPoliciesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the number of security policies to return as a
              response to the <code>ListSecurityPolicies</code> query.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When additional results are obtained from the <code>ListSecurityPolicies</code>\
              \ command, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass the <code>NextToken</code> parameter in a subsequent\
              \ command to continue listing additional security policies."
      title: ListSecurityPoliciesRequest
      type: object
    ListServersResponse:
      example:
        NextToken: ""
        Servers: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListServers</code>\
              \ operation, a <code>NextToken</code> parameter is returned in the output.\
              \ In a following command, you can pass in the <code>NextToken</code>\
              \ parameter to continue listing additional servers."
        Servers:
          allOf:
          - $ref: '#/components/schemas/ListedServers'
          - description: An array of servers that were listed.
      required:
      - Servers
      type: object
    ListServersRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the number of servers to return as a response to
              the <code>ListServers</code> query.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When additional results are obtained from the <code>ListServers</code>\
              \ command, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass the <code>NextToken</code> parameter in a subsequent\
              \ command to continue listing additional servers."
      title: ListServersRequest
      type: object
    ListTagsForResourceResponse:
      example:
        NextToken: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN you specified to list the tags of.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListTagsForResource</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional tags."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Key-value pairs that are assigned to a resource, usually\
              \ for the purpose of grouping and searching for items. Tags are metadata\
              \ that you define."
      type: object
    ListTagsForResourceRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "Requests the tags associated with a particular Amazon Resource\
              \ Name (ARN). An ARN is an identifier for a specific Amazon Web Services\
              \ resource, such as a server, user, or role."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the number of tags to return as a response to the
              <code>ListTagsForResource</code> request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you request additional results from the <code>ListTagsForResource</code>\
              \ operation, a <code>NextToken</code> parameter is returned in the input.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional tags."
      required:
      - Arn
      title: ListTagsForResourceRequest
      type: object
    ListUsersResponse:
      example:
        ServerId: ""
        NextToken: ""
        Users: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListUsers</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional users."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that the
              users are assigned to.
        Users:
          allOf:
          - $ref: '#/components/schemas/ListedUsers'
          - description: Returns the Transfer Family users and their properties for
              the <code>ServerId</code> value that you specify.
      required:
      - ServerId
      - Users
      type: object
    ListUsersRequest:
      example:
        ServerId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the number of users to return as a response to
              the <code>ListUsers</code> request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "When you can get additional results from the <code>ListUsers</code>\
              \ call, a <code>NextToken</code> parameter is returned in the output.\
              \ You can then pass in a subsequent command to the <code>NextToken</code>\
              \ parameter to continue listing additional users."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that has
              users assigned to it.
      required:
      - ServerId
      title: ListUsersRequest
      type: object
    ListWorkflowsResponse:
      example:
        NextToken: ""
        Workflows: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' <code>ListWorkflows</code> returns the <code>NextToken</code>
              parameter in the output. You can then pass the <code>NextToken</code>
              parameter in a subsequent command to continue listing additional workflows.'
        Workflows:
          allOf:
          - $ref: '#/components/schemas/ListedWorkflows'
          - description: "Returns the <code>Arn</code>, <code>WorkflowId</code>, and\
              \ <code>Description</code> for each workflow."
      required:
      - Workflows
      type: object
    ListWorkflowsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the maximum number of workflows to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' <code>ListWorkflows</code> returns the <code>NextToken</code>
              parameter in the output. You can then pass the <code>NextToken</code>
              parameter in a subsequent command to continue listing additional workflows.'
      title: ListWorkflowsRequest
      type: object
    SendWorkflowStepStateResponse:
      properties: {}
      type: object
    SendWorkflowStepStateRequest:
      example:
        Status: ""
        Token: ""
        WorkflowId: ""
        ExecutionId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: A unique identifier for the execution of a workflow.
        Token:
          allOf:
          - $ref: '#/components/schemas/CallbackToken'
          - description: Used to distinguish between multiple callbacks for multiple
              Lambda steps within the same execution.
        Status:
          allOf:
          - $ref: '#/components/schemas/CustomStepStatus'
          - description: Indicates whether the specified step succeeded or failed.
      required:
      - ExecutionId
      - Status
      - Token
      - WorkflowId
      title: SendWorkflowStepStateRequest
      type: object
    StartFileTransferResponse:
      example:
        TransferId: ""
      properties:
        TransferId:
          allOf:
          - $ref: '#/components/schemas/TransferId'
          - description: Returns the unique identifier for the file transfer.
      required:
      - TransferId
      type: object
    StartFileTransferRequest:
      example:
        RetrieveFilePaths: ""
        RemoteDirectoryPath: ""
        SendFilePaths: ""
        LocalDirectoryPath: ""
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
        SendFilePaths:
          allOf:
          - $ref: '#/components/schemas/FilePaths'
          - description: "One or more source paths for the Transfer Family server.\
              \ Each string represents a source file path for one outbound file transfer.\
              \ For example, <code> <i>DOC-EXAMPLE-BUCKET</i>/<i>myfile.txt</i> </code>."
        RetrieveFilePaths:
          allOf:
          - $ref: '#/components/schemas/FilePaths'
          - description: One or more source paths for the partner's SFTP server. Each
              string represents a source file path for one inbound file transfer.
        LocalDirectoryPath:
          allOf:
          - $ref: '#/components/schemas/FilePath'
          - description: "For an inbound transfer, the <code>LocaDirectoryPath</code>\
              \ specifies the destination for one or more files that are transferred\
              \ from the partner's SFTP server."
        RemoteDirectoryPath:
          allOf:
          - $ref: '#/components/schemas/FilePath'
          - description: "For an outbound transfer, the <code>RemoteDirectoryPath</code>\
              \ specifies the destination for one or more files that are transferred\
              \ to the partner's SFTP server. If you don't specify a <code>RemoteDirectoryPath</code>,\
              \ the destination for transferred files is the SFTP user's home directory."
      required:
      - ConnectorId
      title: StartFileTransferRequest
      type: object
    StartServerRequest:
      example:
        ServerId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that you
              start.
      required:
      - ServerId
      title: StartServerRequest
      type: object
    StopServerRequest:
      example:
        ServerId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that you
              stopped.
      required:
      - ServerId
      title: StopServerRequest
      type: object
    TagResourceRequest:
      example:
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "An Amazon Resource Name (ARN) for a specific Amazon Web\
              \ Services resource, such as a server, user, or role."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Key-value pairs assigned to ARNs that you can use to group\
              \ and search for resources by type. You can attach this metadata to\
              \ resources (servers, users, workflows, and so on) for any purpose."
      required:
      - Arn
      - Tags
      title: TagResourceRequest
      type: object
    TestConnectionResponse:
      example:
        Status: ""
        ConnectorId: ""
        StatusMessage: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: Returns the identifier of the connector object that you are
              testing.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: "Returns <code>OK</code> for successful test, or <code>ERROR</code>\
              \ if the test fails."
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "<p>Returns <code>Connection succeeded</code> if the test\
              \ is successful. Or, returns a descriptive error message if the test\
              \ fails. The following list provides the details for some error messages\
              \ and troubleshooting steps for each.</p> <ul> <li> <p> <b>Unable to\
              \ access secrets manager</b>: Verify that your secret name aligns with\
              \ the one in Transfer Role permissions.</p> </li> <li> <p> <b>Unknown\
              \ Host/Connection failed</b>: Verify the server URL in the connector\
              \ configuration , and verify that the login credentials work successfully\
              \ outside of the connector.</p> </li> <li> <p> <b>Private key not found</b>:\
              \ Verify that the secret exists and is formatted correctly.</p> </li>\
              \ <li> <p> <b>Invalid trusted host keys</b>: Verify that the trusted\
              \ host key in the connector configuration matches the <code>ssh-keyscan</code>\
              \ output.</p> </li> </ul>"
      type: object
    TestConnectionRequest:
      example:
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
      required:
      - ConnectorId
      title: TestConnectionRequest
      type: object
    TestIdentityProviderResponse:
      example:
        Response: ""
        Message: ""
        StatusCode: ""
        Url: ""
      properties:
        Response:
          allOf:
          - $ref: '#/components/schemas/Response'
          - description: The response that is returned from your API Gateway or your
              Lambda function.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          - description: The HTTP status code that is the response from your API Gateway
              or your Lambda function.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: "<p>A message that indicates whether the test was successful\
              \ or not.</p> <note> <p>If an empty string is returned, the most likely\
              \ cause is that the authentication failed due to an incorrect username\
              \ or password.</p> </note>"
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The endpoint of the service used to authenticate a user.
      required:
      - StatusCode
      - Url
      type: object
    TestIdentityProviderRequest:
      example:
        ServerId: ""
        SourceIp: ""
        UserName: ""
        UserPassword: ""
        ServerProtocol: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned identifier for a specific server. That
              server's user authentication method is tested with a user name and password.
        ServerProtocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: <p>The type of file transfer protocol to be tested.</p> <p>The
              available protocols are:</p> <ul> <li> <p>Secure Shell (SSH) File Transfer
              Protocol (SFTP)</p> </li> <li> <p>File Transfer Protocol Secure (FTPS)</p>
              </li> <li> <p>File Transfer Protocol (FTP)</p> </li> <li> <p>Applicability
              Statement 2 (AS2)</p> </li> </ul>
        SourceIp:
          allOf:
          - $ref: '#/components/schemas/SourceIp'
          - description: The source IP address of the account to be tested.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the account to be tested.
        UserPassword:
          allOf:
          - $ref: '#/components/schemas/UserPassword'
          - description: The password of the account to be tested.
      required:
      - ServerId
      - UserName
      title: TestIdentityProviderRequest
      type: object
    UntagResourceRequest:
      example:
        Arn: ""
        TagKeys: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The value of the resource that will have the tag removed.\
              \ An Amazon Resource Name (ARN) is an identifier for a specific Amazon\
              \ Web Services resource, such as a server, user, or role."
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: TagKeys are key-value pairs assigned to ARNs that can be
              used to group and search for resources by type. This metadata can be
              attached to resources for any purpose.
      required:
      - Arn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateAccessResponse:
      example:
        ServerId: ""
        ExternalId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that the user is attached to.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: The external identifier of the group whose users have access
              to your Amazon S3 or Amazon EFS resources over the enabled protocols
              using Amazon Web ServicesTransfer Family.
      required:
      - ExternalId
      - ServerId
      type: object
    UpdateAccessRequest:
      example:
        Policy: ""
        Role: ""
        HomeDirectory: ""
        HomeDirectoryType: ""
        ServerId: ""
        HomeDirectoryMappings: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        ExternalId: ""
      properties:
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        HomeDirectoryMappings:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryMappings'
          - description: "<p>Logical directory mappings that specify what Amazon S3\
              \ or Amazon EFS paths and keys should be visible to your user and how\
              \ you want to make them visible. You must specify the <code>Entry</code>\
              \ and <code>Target</code> pair, where <code>Entry</code> shows how the\
              \ path is made visible and <code>Target</code> is the actual Amazon\
              \ S3 or Amazon EFS path. If you only specify a target, it is displayed\
              \ as is. You also must ensure that your Identity and Access Management\
              \ (IAM) role provides access to paths in <code>Target</code>. This value\
              \ can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p>\
              \ <p>The following is an <code>Entry</code> and <code>Target</code>\
              \ pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\"\
              : \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases,\
              \ you can use this value instead of the session policy to lock down\
              \ your user to the designated home directory (\"<code>chroot</code>\"\
              ). To do this, you can set <code>Entry</code> to <code>/</code> and\
              \ set <code>Target</code> to the <code>HomeDirectory</code> parameter\
              \ value.</p> <p>The following is an <code>Entry</code> and <code>Target</code>\
              \ pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\"\
              : \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "<p>A session policy for your user so that you can use the\
              \ same Identity and Access Management (IAM) role across multiple users.\
              \ This policy scopes down a user's access to portions of their Amazon\
              \ S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,\
              \ <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\
              \ <note> <p>This policy applies only when the domain of <code>ServerId</code>\
              \ is Amazon S3. Amazon EFS does not use session policies.</p> <p>For\
              \ session policies, Transfer Family stores the policy as a JSON blob,\
              \ instead of the Amazon Resource Name (ARN) of the policy. You save\
              \ the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p>\
              \ <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\"\
              >Example session policy</a>.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\"\
              >AssumeRole</a> in the <i>Amazon Web ServicesSecurity Token Service\
              \ API Reference</i>.</p> </note>"
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance.
              This is the specific server that you added your user to.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: "<p>A unique identifier that is required to identify specific\
              \ groups within your directory. The users of the group that you associate\
              \ have access to your Amazon S3 or Amazon EFS resources over the enabled\
              \ protocols using Transfer Family. If you know the group name, you can\
              \ view the SID values by running the following command using Windows\
              \ PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like\
              \ \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code>\
              \ </p> <p>In that command, replace <i>YourGroupName</i> with the name\
              \ of your Active Directory group.</p> <p>The regular expression used\
              \ to validate this parameter is a string of characters consisting of\
              \ uppercase and lowercase alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
      required:
      - ExternalId
      - ServerId
      title: UpdateAccessRequest
      type: object
    UpdateAgreementResponse:
      example:
        AgreementId: ""
      properties:
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: A unique identifier for the agreement. This identifier is
              returned when you create an agreement.
      required:
      - AgreementId
      type: object
    UpdateAgreementRequest:
      example:
        Status: ""
        AgreementId: ""
        ServerId: ""
        Description: ""
        BaseDirectory: ""
        AccessRole: ""
        PartnerProfileId: ""
        LocalProfileId: ""
      properties:
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: A unique identifier for the agreement. This identifier is
              returned when you create an agreement.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance.
              This is the specific server that the agreement uses.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "To replace the existing description, provide a short description\
              \ for the agreement. "
        Status:
          allOf:
          - $ref: '#/components/schemas/AgreementStatusType'
          - description: "You can update the status for the agreement, either activating\
              \ an inactive agreement or the reverse."
        LocalProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: "<p>A unique identifier for the AS2 local profile.</p> <p>To\
              \ change the local profile identifier, provide a new value here.</p>"
        PartnerProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: "A unique identifier for the partner profile. To change the\
              \ partner profile identifier, provide a new value here."
        BaseDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: "To change the landing directory (folder) for files that\
              \ are transferred, provide the bucket folder that you want to use; for\
              \ example, <code>/<i>DOC-EXAMPLE-BUCKET</i>/<i>home</i>/<i>mydirectory</i>\
              \ </code>."
        AccessRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>With AS2, you can send files by calling <code>StartFileTransfer</code>\
              \ and specifying the file paths in the request parameter, <code>SendFilePaths</code>.\
              \ We use the file’s parent directory (for example, for <code>--send-file-paths\
              \ /bucket/dir/file.txt</code>, parent directory is <code>/bucket/dir/</code>)\
              \ to temporarily store a processed AS2 message file, store the MDN when\
              \ we receive them from the partner, and write a final JSON file containing\
              \ relevant metadata of the transmission. So, the <code>AccessRole</code>\
              \ needs to provide read and write access to the parent directory of\
              \ the file location used in the <code>StartFileTransfer</code> request.\
              \ Additionally, you need to provide read and write access to the parent\
              \ directory of the files that you intend to send with <code>StartFileTransfer</code>.</p>\
              \ <p>If you are using Basic authentication for your AS2 connector, the\
              \ access role requires the <code>secretsmanager:GetSecretValue</code>\
              \ permission for the secret. If the secret is encrypted using a customer-managed\
              \ key instead of the Amazon Web Services managed key in Secrets Manager,\
              \ then the role also needs the <code>kms:Decrypt</code> permission for\
              \ that key.</p>"
      required:
      - AgreementId
      - ServerId
      title: UpdateAgreementRequest
      type: object
    UpdateCertificateResponse:
      example:
        CertificateId: ""
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: Returns the identifier of the certificate object that you
              are updating.
      required:
      - CertificateId
      type: object
    UpdateCertificateRequest:
      example:
        InactiveDate: ""
        Description: ""
        CertificateId: ""
        ActiveDate: ""
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: The identifier of the certificate object that you are updating.
        ActiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              active.
        InactiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              inactive.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A short description to help identify the certificate.
      required:
      - CertificateId
      title: UpdateCertificateRequest
      type: object
    UpdateConnectorResponse:
      example:
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: Returns the identifier of the connector object that you are
              updating.
      required:
      - ConnectorId
      type: object
    UpdateConnectorRequest:
      example:
        As2Config:
          Compression: ""
          MessageSubject: ""
          BasicAuthSecretId: ""
          PartnerProfileId: ""
          EncryptionAlgorithm: ""
          SigningAlgorithm: ""
          LocalProfileId: ""
          MdnResponse: ""
          MdnSigningAlgorithm: ""
        LoggingRole: ""
        AccessRole: ""
        SftpConfig:
          TrustedHostKeys: ""
          UserSecretId: ""
        Url: ""
        ConnectorId: ""
      properties:
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of the partner's AS2 or SFTP endpoint.
        As2Config:
          $ref: '#/components/schemas/CreateConnectorRequest_As2Config'
        AccessRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>With AS2, you can send files by calling <code>StartFileTransfer</code>\
              \ and specifying the file paths in the request parameter, <code>SendFilePaths</code>.\
              \ We use the file’s parent directory (for example, for <code>--send-file-paths\
              \ /bucket/dir/file.txt</code>, parent directory is <code>/bucket/dir/</code>)\
              \ to temporarily store a processed AS2 message file, store the MDN when\
              \ we receive them from the partner, and write a final JSON file containing\
              \ relevant metadata of the transmission. So, the <code>AccessRole</code>\
              \ needs to provide read and write access to the parent directory of\
              \ the file location used in the <code>StartFileTransfer</code> request.\
              \ Additionally, you need to provide read and write access to the parent\
              \ directory of the files that you intend to send with <code>StartFileTransfer</code>.</p>\
              \ <p>If you are using Basic authentication for your AS2 connector, the\
              \ access role requires the <code>secretsmanager:GetSecretValue</code>\
              \ permission for the secret. If the secret is encrypted using a customer-managed\
              \ key instead of the Amazon Web Services managed key in Secrets Manager,\
              \ then the role also needs the <code>kms:Decrypt</code> permission for\
              \ that key.</p>"
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a connector to turn on CloudWatch\
              \ logging for Amazon S3 events. When set, you can view connector activity\
              \ in your CloudWatch logs."
        SftpConfig:
          $ref: '#/components/schemas/CreateConnectorRequest_SftpConfig'
      required:
      - ConnectorId
      title: UpdateConnectorRequest
      type: object
    UpdateHostKeyResponse:
      example:
        ServerId: ""
        HostKeyId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: Returns the server identifier for the server that contains
              the updated host key.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: Returns the host key identifier for the updated host key.
      required:
      - HostKeyId
      - ServerId
      type: object
    UpdateHostKeyRequest:
      example:
        ServerId: ""
        HostKeyId: ""
        Description: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The identifier of the server that contains the host key that
              you are updating.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: The identifier of the host key that you are updating.
        Description:
          allOf:
          - $ref: '#/components/schemas/HostKeyDescription'
          - description: An updated description for the host key.
      required:
      - Description
      - HostKeyId
      - ServerId
      title: UpdateHostKeyRequest
      type: object
    UpdateProfileResponse:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: Returns the identifier for the profile that's being updated.
      required:
      - ProfileId
      type: object
    UpdateProfileRequest:
      example:
        ProfileId: ""
        CertificateIds: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: The identifier of the profile object that you are updating.
        CertificateIds:
          allOf:
          - $ref: '#/components/schemas/CertificateIds'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
      required:
      - ProfileId
      title: UpdateProfileRequest
      type: object
    UpdateServerResponse:
      example:
        ServerId: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server that the
              Transfer Family user is assigned to.
      required:
      - ServerId
      type: object
    UpdateServerRequest:
      example:
        LoggingRole: ""
        HostKey: ""
        Protocols: ""
        IdentityProviderDetails:
          Function: ""
          DirectoryId: ""
          InvocationRole: ""
          Url: ""
          SftpAuthenticationMethods: ""
        EndpointDetails:
          AddressAllocationIds: ""
          VpcId: ""
          VpcEndpointId: ""
          SubnetIds: ""
          SecurityGroupIds: ""
        StructuredLogDestinations: ""
        PreAuthenticationLoginBanner: ""
        ServerId: ""
        PostAuthenticationLoginBanner: ""
        EndpointType: ""
        SecurityPolicyName: ""
        ProtocolDetails:
          As2Transports: ""
          PassiveIp: ""
          SetStatOption: ""
          TlsSessionResumptionMode: ""
        WorkflowDetails:
          OnUpload: ""
          OnPartialUpload: ""
        Certificate: ""
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: "<p>The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate\
              \ Manager (ACM) certificate. Required when <code>Protocols</code> is\
              \ set to <code>FTPS</code>.</p> <p>To request a new public certificate,\
              \ see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html\"\
              >Request a public certificate</a> in the <i> Amazon Web ServicesCertificate\
              \ Manager User Guide</i>.</p> <p>To import an existing certificate into\
              \ ACM, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\"\
              >Importing certificates into ACM</a> in the <i> Amazon Web ServicesCertificate\
              \ Manager User Guide</i>.</p> <p>To request a private certificate to\
              \ use FTPS through private IP addresses, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html\"\
              >Request a private certificate</a> in the <i> Amazon Web ServicesCertificate\
              \ Manager User Guide</i>.</p> <p>Certificates with the following cryptographic\
              \ algorithms and key sizes are supported:</p> <ul> <li> <p>2048-bit\
              \ RSA (RSA_2048)</p> </li> <li> <p>4096-bit RSA (RSA_4096)</p> </li>\
              \ <li> <p>Elliptic Prime Curve 256 bit (EC_prime256v1)</p> </li> <li>\
              \ <p>Elliptic Prime Curve 384 bit (EC_secp384r1)</p> </li> <li> <p>Elliptic\
              \ Prime Curve 521 bit (EC_secp521r1)</p> </li> </ul> <note> <p>The certificate\
              \ must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP\
              \ address specified and information about the issuer.</p> </note>"
        ProtocolDetails:
          $ref: '#/components/schemas/CreateServerRequest_ProtocolDetails'
        EndpointDetails:
          $ref: '#/components/schemas/CreateServerRequest_EndpointDetails'
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          - description: "<p>The type of endpoint that you want your server to use.\
              \ You can choose to make your server's endpoint publicly accessible\
              \ (PUBLIC) or host it inside your VPC. With an endpoint that is hosted\
              \ in a VPC, you can restrict access to your server and resources only\
              \ within your VPC or choose to make it internet facing by attaching\
              \ Elastic IP addresses directly to it.</p> <note> <p> After May 19,\
              \ 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>\
              \ in your Amazon Web Servicesaccount if your account hasn't already\
              \ done so before May 19, 2021. If you have already created servers with\
              \ <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount\
              \ on or before May 19, 2021, you will not be affected. After this date,\
              \ use <code>EndpointType</code>=<code>VPC</code>.</p> <p>For more information,\
              \ see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p>\
              \ <p>It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>.\
              \ With this endpoint type, you have the option to directly associate\
              \ up to three Elastic IPv4 addresses (BYO IP included) with your server's\
              \ endpoint and use VPC security groups to restrict traffic by the client's\
              \ public IP address. This is not possible with <code>EndpointType</code>\
              \ set to <code>VPC_ENDPOINT</code>.</p> </note>"
        HostKey:
          allOf:
          - $ref: '#/components/schemas/HostKey'
          - description: "<p>The RSA, ECDSA, or ED25519 private key to use for your\
              \ SFTP-enabled server. You can add multiple host keys, in case you want\
              \ to rotate keys, or have a set of active keys that use different algorithms.</p>\
              \ <p>Use the following command to generate an RSA 2048 bit key with\
              \ no passphrase:</p> <p> <code>ssh-keygen -t rsa -b 2048 -N \"\" -m\
              \ PEM -f my-new-server-key</code>.</p> <p>Use a minimum value of 2048\
              \ for the <code>-b</code> option. You can create a stronger key by using\
              \ 3072 or 4096.</p> <p>Use the following command to generate an ECDSA\
              \ 256 bit key with no passphrase:</p> <p> <code>ssh-keygen -t ecdsa\
              \ -b 256 -N \"\" -m PEM -f my-new-server-key</code>.</p> <p>Valid values\
              \ for the <code>-b</code> option for ECDSA are 256, 384, and 521.</p>\
              \ <p>Use the following command to generate an ED25519 key with no passphrase:</p>\
              \ <p> <code>ssh-keygen -t ed25519 -N \"\" -f my-new-server-key</code>.</p>\
              \ <p>For all of these commands, you can replace <i>my-new-server-key</i>\
              \ with a string of your choice.</p> <important> <p>If you aren't planning\
              \ to migrate existing users from an existing SFTP-enabled server to\
              \ a new server, don't update the host key. Accidentally changing a server's\
              \ host key can be disruptive.</p> </important> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key\"\
              >Manage host keys for your SFTP-enabled server</a> in the <i>Transfer\
              \ Family User Guide</i>.</p>"
        IdentityProviderDetails:
          $ref: '#/components/schemas/UpdateServerRequest_IdentityProviderDetails'
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/NullableRole'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a server to turn on Amazon CloudWatch\
              \ logging for Amazon S3 or Amazon EFSevents. When set, you can view\
              \ user activity in your CloudWatch logs."
        PostAuthenticationLoginBanner:
          allOf:
          - $ref: '#/components/schemas/PostAuthenticationLoginBanner'
          - description: <p>Specifies a string to display when users connect to a
              server. This string is displayed after the user authenticates.</p> <note>
              <p>The SFTP protocol does not support post-authentication display banners.</p>
              </note>
        PreAuthenticationLoginBanner:
          allOf:
          - $ref: '#/components/schemas/PreAuthenticationLoginBanner'
          - description: "<p>Specifies a string to display when users connect to a\
              \ server. This string is displayed before the user authenticates. For\
              \ example, the following banner displays details about using the system:</p>\
              \ <p> <code>This system is for the use of authorized users only. Individuals\
              \ using this computer system without authority, or in excess of their\
              \ authority, are subject to having all of their activities on this system\
              \ monitored and recorded by system personnel.</code> </p>"
        Protocols:
          allOf:
          - $ref: '#/components/schemas/Protocols'
          - description: "<p>Specifies the file transfer protocol or protocols over\
              \ which your file transfer protocol client can connect to your server's\
              \ endpoint. The available protocols are:</p> <ul> <li> <p> <code>SFTP</code>\
              \ (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH</p>\
              \ </li> <li> <p> <code>FTPS</code> (File Transfer Protocol Secure):\
              \ File transfer with TLS encryption</p> </li> <li> <p> <code>FTP</code>\
              \ (File Transfer Protocol): Unencrypted file transfer</p> </li> <li>\
              \ <p> <code>AS2</code> (Applicability Statement 2): used for transporting\
              \ structured business-to-business data</p> </li> </ul> <note> <ul> <li>\
              \ <p>If you select <code>FTPS</code>, you must choose a certificate\
              \ stored in Certificate Manager (ACM) which is used to identify your\
              \ server when clients connect to it over FTPS.</p> </li> <li> <p>If\
              \ <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>,\
              \ then the <code>EndpointType</code> must be <code>VPC</code> and the\
              \ <code>IdentityProviderType</code> must be either <code>AWS_DIRECTORY_SERVICE</code>,\
              \ <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.</p> </li> <li>\
              \ <p>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>\
              \ cannot be associated.</p> </li> <li> <p>If <code>Protocol</code> is\
              \ set only to <code>SFTP</code>, the <code>EndpointType</code> can be\
              \ set to <code>PUBLIC</code> and the <code>IdentityProviderType</code>\
              \ can be set any of the supported identity types: <code>SERVICE_MANAGED</code>,\
              \ <code>AWS_DIRECTORY_SERVICE</code>, <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.</p>\
              \ </li> <li> <p>If <code>Protocol</code> includes <code>AS2</code>,\
              \ then the <code>EndpointType</code> must be <code>VPC</code>, and domain\
              \ must be Amazon S3.</p> </li> </ul> </note>"
        SecurityPolicyName:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyName'
          - description: Specifies the name of the security policy that is attached
              to the server.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance
              that the Transfer Family user is assigned to.
        WorkflowDetails:
          $ref: '#/components/schemas/UpdateServerRequest_WorkflowDetails'
        StructuredLogDestinations:
          allOf:
          - $ref: '#/components/schemas/StructuredLogDestinations'
          - description: "<p>Specifies the log groups to which your server logs are\
              \ sent.</p> <p>To specify a log group, you must provide the ARN for\
              \ an existing log group. In this case, the format of the log group is\
              \ as follows:</p> <p> <code>arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*</code>\
              \ </p> <p>For example, <code>arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*</code>\
              \ </p> <p>If you have previously specified a log group for a server,\
              \ you can clear it, and in effect turn off structured logging, by providing\
              \ an empty value for this parameter in an <code>update-server</code>\
              \ call. For example:</p> <p> <code>update-server --server-id s-1234567890abcdef0\
              \ --structured-log-destinations</code> </p>"
      required:
      - ServerId
      title: UpdateServerRequest
      type: object
    ConflictException: {}
    UpdateUserResponse:
      description: ' <code>UpdateUserResponse</code> returns the user name and identifier
        for the request to update a user''s properties.'
      example:
        ServerId: ""
        UserName: ""
      properties:
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a Transfer Family
              server instance that the account is assigned to.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The unique identifier for a user that is assigned to a server
              instance that was specified in the request.
      required:
      - ServerId
      - UserName
      type: object
    UpdateUserRequest:
      example:
        Policy: ""
        Role: ""
        HomeDirectory: ""
        HomeDirectoryType: ""
        ServerId: ""
        UserName: ""
        HomeDirectoryMappings: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
      properties:
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        HomeDirectoryMappings:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryMappings'
          - description: "<p>Logical directory mappings that specify what Amazon S3\
              \ or Amazon EFS paths and keys should be visible to your user and how\
              \ you want to make them visible. You must specify the <code>Entry</code>\
              \ and <code>Target</code> pair, where <code>Entry</code> shows how the\
              \ path is made visible and <code>Target</code> is the actual Amazon\
              \ S3 or Amazon EFS path. If you only specify a target, it is displayed\
              \ as is. You also must ensure that your Identity and Access Management\
              \ (IAM) role provides access to paths in <code>Target</code>. This value\
              \ can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p>\
              \ <p>The following is an <code>Entry</code> and <code>Target</code>\
              \ pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\"\
              : \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases,\
              \ you can use this value instead of the session policy to lock down\
              \ your user to the designated home directory (\"<code>chroot</code>\"\
              ). To do this, you can set <code>Entry</code> to '/' and set <code>Target</code>\
              \ to the HomeDirectory parameter value.</p> <p>The following is an <code>Entry</code>\
              \ and <code>Target</code> pair example for <code>chroot</code>.</p>\
              \ <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\"\
              \ } ]</code> </p>"
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "<p>A session policy for your user so that you can use the\
              \ same Identity and Access Management (IAM) role across multiple users.\
              \ This policy scopes down a user's access to portions of their Amazon\
              \ S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,\
              \ <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>\
              \ <note> <p>This policy applies only when the domain of <code>ServerId</code>\
              \ is Amazon S3. Amazon EFS does not use session policies.</p> <p>For\
              \ session policies, Transfer Family stores the policy as a JSON blob,\
              \ instead of the Amazon Resource Name (ARN) of the policy. You save\
              \ the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p>\
              \ <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy\"\
              >Creating a session policy</a>.</p> <p>For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\"\
              >AssumeRole</a> in the <i>Amazon Web Services Security Token Service\
              \ API Reference</i>.</p> </note>"
        PosixProfile:
          $ref: '#/components/schemas/UpdateUserRequest_PosixProfile'
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a Transfer Family
              server instance that the user is assigned to.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: "A unique string that identifies a user and is associated\
              \ with a server as specified by the <code>ServerId</code>. This user\
              \ name must be a minimum of 3 and a maximum of 100 characters long.\
              \ The following are valid characters: a-z, A-Z, 0-9, underscore '_',\
              \ hyphen '-', period '.', and at sign '@'. The user name can't start\
              \ with a hyphen, period, or at sign."
      required:
      - ServerId
      - UserName
      title: UpdateUserRequest
      type: object
    AddressAllocationId:
      type: string
    AddressAllocationIds:
      items:
        $ref: '#/components/schemas/AddressAllocationId'
      type: array
    AgreementId:
      maxLength: 19
      minLength: 19
      pattern: "^a-([0-9a-f]{17})$"
      type: string
    AgreementStatusType:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    Arn:
      maxLength: 1600
      minLength: 20
      pattern: arn:.*
      type: string
    ProfileId:
      maxLength: 19
      minLength: 19
      pattern: "^p-([0-9a-f]{17})$"
      type: string
    MessageSubject:
      maxLength: 1024
      minLength: 1
      pattern: "^[\\p{Print}\\p{Blank}]+"
      type: string
    CompressionEnum:
      enum:
      - ZLIB
      - DISABLED
      type: string
    EncryptionAlg:
      enum:
      - AES128_CBC
      - AES192_CBC
      - AES256_CBC
      - NONE
      type: string
    SigningAlg:
      enum:
      - SHA256
      - SHA384
      - SHA512
      - SHA1
      - NONE
      type: string
    MdnSigningAlg:
      enum:
      - SHA256
      - SHA384
      - SHA512
      - SHA1
      - NONE
      - DEFAULT
      type: string
    MdnResponse:
      enum:
      - SYNC
      - NONE
      type: string
    As2ConnectorSecretId:
      maxLength: 2048
      minLength: 0
      type: string
    As2ConnectorConfig:
      description: "Contains the details for an AS2 connector object. The connector\
        \ object is used for AS2 outbound processes, to connect the Transfer Family\
        \ customer with the trading partner."
      properties:
        LocalProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the AS2 local profile.
        PartnerProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the partner profile for the connector.
        MessageSubject:
          allOf:
          - $ref: '#/components/schemas/MessageSubject'
          - description: Used as the <code>Subject</code> HTTP header attribute in
              AS2 messages that are being sent with the connector.
        Compression:
          allOf:
          - $ref: '#/components/schemas/CompressionEnum'
          - description: Specifies whether the AS2 file is compressed.
        EncryptionAlgorithm:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlg'
          - description: <p>The algorithm that is used to encrypt the file.</p> <note>
              <p>You can only specify <code>NONE</code> if the URL for your connector
              uses HTTPS. This ensures that no traffic is sent in clear text.</p>
              </note>
        SigningAlgorithm:
          allOf:
          - $ref: '#/components/schemas/SigningAlg'
          - description: The algorithm that is used to sign the AS2 messages sent
              with the connector.
        MdnSigningAlgorithm:
          allOf:
          - $ref: '#/components/schemas/MdnSigningAlg'
          - description: "<p>The signing algorithm for the MDN response.</p> <note>\
              \ <p>If set to DEFAULT (or not set at all), the value for <code>SigningAlgorithm</code>\
              \ is used.</p> </note>"
        MdnResponse:
          allOf:
          - $ref: '#/components/schemas/MdnResponse'
          - description: "<p>Used for outbound requests (from an Transfer Family server\
              \ to a partner AS2 server) to determine whether the partner response\
              \ for transfers is synchronous or asynchronous. Specify either of the\
              \ following values:</p> <ul> <li> <p> <code>SYNC</code>: The system\
              \ expects a synchronous MDN response, confirming that the file was transferred\
              \ successfully (or not).</p> </li> <li> <p> <code>NONE</code>: Specifies\
              \ that no MDN response is required.</p> </li> </ul>"
        BasicAuthSecretId:
          allOf:
          - $ref: '#/components/schemas/As2ConnectorSecretId'
          - description: "<p>Provides Basic authentication support to the AS2 Connectors\
              \ API. To use Basic authentication, you must provide the name or Amazon\
              \ Resource Name (ARN) of a secret in Secrets Manager.</p> <p>The default\
              \ value for this parameter is <code>null</code>, which indicates that\
              \ Basic authentication is not enabled for the connector.</p> <p>If the\
              \ connector should use Basic authentication, the secret needs to be\
              \ in the following format:</p> <p> <code>{ \"Username\": \"user-name\"\
              , \"Password\": \"user-password\" }</code> </p> <p>Replace <code>user-name</code>\
              \ and <code>user-password</code> with the credentials for the actual\
              \ user that is being authenticated.</p> <p>Note the following:</p> <ul>\
              \ <li> <p>You are storing these credentials in Secrets Manager, <i>not\
              \ passing them directly</i> into this API.</p> </li> <li> <p>If you\
              \ are using the API, SDKs, or CloudFormation to configure your connector,\
              \ then you must create the secret before you can enable Basic authentication.\
              \ However, if you are using the Amazon Web Services management console,\
              \ you can have the system create the secret for you.</p> </li> </ul>\
              \ <p>If you have previously enabled Basic authentication for a connector,\
              \ you can disable it by using the <code>UpdateConnector</code> API call.\
              \ For example, if you are using the CLI, you can run the following command\
              \ to remove Basic authentication:</p> <p> <code>update-connector --connector-id\
              \ my-connector-id --as2-config 'BasicAuthSecretId=\"\"'</code> </p>"
      type: object
    As2Id:
      maxLength: 128
      minLength: 1
      pattern: "^[\\p{Print}\\s]*"
      type: string
    As2Transport:
      enum:
      - HTTP
      type: string
    As2Transports:
      items:
        $ref: '#/components/schemas/As2Transport'
      maxItems: 1
      minItems: 1
      type: array
    CallbackToken:
      maxLength: 64
      minLength: 1
      pattern: \w+
      type: string
    CertDate:
      format: date-time
      type: string
    CertSerial:
      maxLength: 48
      minLength: 0
      pattern: "^[\\p{XDigit}{2}:?]*"
      type: string
    Certificate:
      maxLength: 1600
      type: string
    CertificateBodyType:
      format: password
      maxLength: 16384
      minLength: 1
      pattern: "^[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*"
      type: string
    CertificateChainType:
      format: password
      maxLength: 2097152
      minLength: 1
      pattern: "^[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*"
      type: string
    CertificateId:
      maxLength: 22
      minLength: 22
      pattern: "^cert-([0-9a-f]{17})$"
      type: string
    CertificateIds:
      items:
        $ref: '#/components/schemas/CertificateId'
      type: array
    CertificateStatusType:
      enum:
      - ACTIVE
      - PENDING_ROTATION
      - INACTIVE
      type: string
    CertificateType:
      enum:
      - CERTIFICATE
      - CERTIFICATE_WITH_PRIVATE_KEY
      type: string
    CertificateUsageType:
      enum:
      - SIGNING
      - ENCRYPTION
      type: string
    ConnectorId:
      maxLength: 19
      minLength: 19
      pattern: "^c-([0-9a-f]{17})$"
      type: string
    WorkflowStepName:
      maxLength: 30
      pattern: "^[\\w-]*$"
      type: string
    InputFileLocation:
      description: Specifies the location for the file that's being processed.
      properties:
        S3FileLocation:
          $ref: '#/components/schemas/InputFileLocation_S3FileLocation'
        EfsFileLocation:
          $ref: '#/components/schemas/InputFileLocation_EfsFileLocation'
      type: object
    OverwriteExisting:
      enum:
      - "TRUE"
      - "FALSE"
      type: string
    SourceFileLocation:
      maxLength: 256
      pattern: "^\\$\\{(\\w+.)+\\w+\\}$"
      type: string
    CopyStepDetails:
      description: Each step type has its own <code>StepDetails</code> structure.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepName'
          - description: "The name of the step, used as an identifier."
        DestinationFileLocation:
          $ref: '#/components/schemas/CopyStepDetails_DestinationFileLocation'
        OverwriteExisting:
          allOf:
          - $ref: '#/components/schemas/OverwriteExisting'
          - description: "<p>A flag that indicates whether to overwrite an existing\
              \ file of the same name. The default is <code>FALSE</code>.</p> <p>If\
              \ the workflow is processing a file that has the same name as an existing\
              \ file, the behavior is as follows:</p> <ul> <li> <p>If <code>OverwriteExisting</code>\
              \ is <code>TRUE</code>, the existing file is replaced with the file\
              \ being processed.</p> </li> <li> <p>If <code>OverwriteExisting</code>\
              \ is <code>FALSE</code>, nothing happens, and the workflow processing\
              \ stops.</p> </li> </ul>"
        SourceFileLocation:
          allOf:
          - $ref: '#/components/schemas/SourceFileLocation'
          - description: "<p>Specifies which file to use as input to the workflow\
              \ step: either the output from the previous step, or the originally\
              \ uploaded file for the workflow.</p> <ul> <li> <p>To use the previous\
              \ file as the input, enter <code>${previous.file}</code>. In this case,\
              \ this workflow step uses the output file from the previous workflow\
              \ step as input. This is the default value.</p> </li> <li> <p>To use\
              \ the originally uploaded file location as input for this step, enter\
              \ <code>${original.file}</code>.</p> </li> </ul>"
      type: object
    HomeDirectory:
      maxLength: 1024
      pattern: ^$|/.*
      type: string
    HomeDirectoryType:
      enum:
      - PATH
      - LOGICAL
      type: string
    HomeDirectoryMappings:
      items:
        $ref: '#/components/schemas/HomeDirectoryMapEntry'
      maxItems: 50
      minItems: 1
      type: array
    Policy:
      maxLength: 2048
      type: string
    PosixProfile:
      description: "The full POSIX identity, including user ID (<code>Uid</code>),\
        \ group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>),\
        \ that controls your users' access to your Amazon EFS file systems. The POSIX\
        \ permissions that are set on files and directories in your file system determine\
        \ the level of access your users get when transferring files into and out\
        \ of your Amazon EFS file systems."
      example:
        Uid: ""
        SecondaryGids: ""
        Gid: ""
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/PosixId'
          - description: The POSIX user ID used for all EFS operations by this user.
        Gid:
          allOf:
          - $ref: '#/components/schemas/PosixId'
          - description: The POSIX group ID used for all EFS operations by this user.
        SecondaryGids:
          allOf:
          - $ref: '#/components/schemas/SecondaryGids'
          - description: The secondary POSIX group IDs used for all EFS operations
              by this user.
      required:
      - Gid
      - Uid
      type: object
    Role:
      maxLength: 2048
      minLength: 20
      pattern: arn:.*role/.*
      type: string
    ServerId:
      maxLength: 19
      minLength: 19
      pattern: "^s-([0-9a-f]{17})$"
      type: string
    ExternalId:
      maxLength: 256
      minLength: 1
      pattern: "^S-1-[\\d-]+$"
      type: string
    Description:
      maxLength: 200
      minLength: 1
      pattern: "^[\\p{Graph}]+"
      type: string
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 1
      type: array
    Url:
      maxLength: 255
      type: string
    SftpConnectorConfig:
      description: Contains the details for an SFTP connector object. The connector
        object is used for transferring files to and from a partner's SFTP server.
      properties:
        UserSecretId:
          allOf:
          - $ref: '#/components/schemas/SecretId'
          - description: The identifiers for the secrets (in Amazon Web Services Secrets
              Manager) that contain the SFTP user's private keys or passwords.
        TrustedHostKeys:
          allOf:
          - $ref: '#/components/schemas/SftpConnectorTrustedHostKeyList'
          - description: "<p>The public portion of the host key, or keys, that are\
              \ used to authenticate the user to the external server to which you\
              \ are connecting. You can use the <code>ssh-keyscan</code> command against\
              \ the SFTP server to retrieve the necessary key.</p> <p>The three standard\
              \ SSH public key format elements are <code>&lt;key type&gt;</code>,\
              \ <code>&lt;body base64&gt;</code>, and an optional <code>&lt;comment&gt;</code>,\
              \ with spaces between each element.</p> <p>For the trusted host key,\
              \ Transfer Family accepts RSA and ECDSA keys.</p> <ul> <li> <p>For RSA\
              \ keys, the key type is <code>ssh-rsa</code>.</p> </li> <li> <p>For\
              \ ECDSA keys, the key type is either <code>ecdsa-sha2-nistp256</code>,\
              \ <code>ecdsa-sha2-nistp384</code>, or <code>ecdsa-sha2-nistp521</code>,\
              \ depending on the size of the key you generated.</p> </li> </ul>"
      type: object
    ProfileType:
      enum:
      - LOCAL
      - PARTNER
      type: string
    Domain:
      enum:
      - S3
      - EFS
      type: string
    EndpointDetails:
      description: "<p>The virtual private cloud (VPC) endpoint settings that are\
        \ configured for your file transfer protocol-enabled server. With a VPC endpoint,\
        \ you can restrict access to your server and resources only within your VPC.\
        \ To control incoming internet traffic, invoke the <code>UpdateServer</code>\
        \ API and attach an Elastic IP address to your server's endpoint.</p> <note>\
        \ <p> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>\
        \ in your Amazon Web Servicesaccount if your account hasn't already done so\
        \ before May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code>\
        \ in your Amazon Web Servicesaccount on or before May 19, 2021, you will not\
        \ be affected. After this date, use <code>EndpointType</code>=<code>VPC</code>.</p>\
        \ <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p>\
        \ </note>"
      properties:
        AddressAllocationIds:
          allOf:
          - $ref: '#/components/schemas/AddressAllocationIds'
          - description: <p>A list of address allocation IDs that are required to
              attach an Elastic IP address to your server's endpoint.</p> <note> <p>This
              property can only be set when <code>EndpointType</code> is set to <code>VPC</code>
              and it is only valid in the <code>UpdateServer</code> API.</p> </note>
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: <p>A list of subnet IDs that are required to host your server
              endpoint in your VPC.</p> <note> <p>This property can only be set when
              <code>EndpointType</code> is set to <code>VPC</code>.</p> </note>
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: "<p>The identifier of the VPC endpoint.</p> <note> <p>This\
              \ property can only be set when <code>EndpointType</code> is set to\
              \ <code>VPC_ENDPOINT</code>.</p> <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p>\
              \ </note>"
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: <p>The VPC identifier of the VPC in which a server's endpoint
              will be hosted.</p> <note> <p>This property can only be set when <code>EndpointType</code>
              is set to <code>VPC</code>.</p> </note>
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "<p>A list of security groups IDs that are available to attach\
              \ to your server's endpoint.</p> <note> <p>This property can only be\
              \ set when <code>EndpointType</code> is set to <code>VPC</code>.</p>\
              \ <p>You can edit the <code>SecurityGroupIds</code> property in the\
              \ <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/API_UpdateServer.html\"\
              >UpdateServer</a> API only if you are changing the <code>EndpointType</code>\
              \ from <code>PUBLIC</code> or <code>VPC_ENDPOINT</code> to <code>VPC</code>.\
              \ To change security groups associated with your server's VPC endpoint\
              \ after creation, use the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html\"\
              >ModifyVpcEndpoint</a> API.</p> </note>"
      type: object
    EndpointType:
      enum:
      - PUBLIC
      - VPC
      - VPC_ENDPOINT
      type: string
    HostKey:
      format: password
      maxLength: 4096
      type: string
    IdentityProviderDetails:
      description: Returns information related to the type of user authentication
        that is in use for a file transfer protocol-enabled server's users. A server
        can have only one method of authentication.
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: Provides the location of the service endpoint used to authenticate
              users.
        InvocationRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: This parameter is only applicable if your <code>IdentityProviderType</code>
              is <code>API_GATEWAY</code>. Provides the type of <code>InvocationRole</code>
              used to authenticate the user account.
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          - description: The identifier of the Directory Service directory that you
              want to stop sharing.
        Function:
          allOf:
          - $ref: '#/components/schemas/Function'
          - description: The ARN for a Lambda function to use for the Identity provider.
        SftpAuthenticationMethods:
          allOf:
          - $ref: '#/components/schemas/SftpAuthenticationMethods'
          - description: "<p>For SFTP-enabled servers, and for custom identity providers\
              \ <i>only</i>, you can specify whether to authenticate using a password,\
              \ SSH key pair, or both.</p> <ul> <li> <p> <code>PASSWORD</code> - users\
              \ must provide their password to connect.</p> </li> <li> <p> <code>PUBLIC_KEY</code>\
              \ - users must provide their private key to connect.</p> </li> <li>\
              \ <p> <code>PUBLIC_KEY_OR_PASSWORD</code> - users can authenticate with\
              \ either their password or their key. This is the default value.</p>\
              \ </li> <li> <p> <code>PUBLIC_KEY_AND_PASSWORD</code> - users must provide\
              \ both their private key and their password to connect. The server checks\
              \ the key first, and then if the key is valid, the system prompts for\
              \ a password. If the private key provided does not match the public\
              \ key that is stored, authentication fails.</p> </li> </ul>"
      type: object
    IdentityProviderType:
      description: "<p>The mode of authentication for a server. The default value\
        \ is <code>SERVICE_MANAGED</code>, which allows you to store and access user\
        \ credentials within the Transfer Family service.</p> <p>Use <code>AWS_DIRECTORY_SERVICE</code>\
        \ to provide access to Active Directory groups in Directory Service for Microsoft\
        \ Active Directory or Microsoft Active Directory in your on-premises environment\
        \ or in Amazon Web Services using AD Connector. This option also requires\
        \ you to provide a Directory ID by using the <code>IdentityProviderDetails</code>\
        \ parameter.</p> <p>Use the <code>API_GATEWAY</code> value to integrate with\
        \ an identity provider of your choosing. The <code>API_GATEWAY</code> setting\
        \ requires you to provide an Amazon API Gateway endpoint URL to call for authentication\
        \ by using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use\
        \ the <code>AWS_LAMBDA</code> value to directly use an Lambda function as\
        \ your identity provider. If you choose this value, you must specify the ARN\
        \ for the Lambda function in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code>\
        \ data type.</p>"
      enum:
      - SERVICE_MANAGED
      - API_GATEWAY
      - AWS_DIRECTORY_SERVICE
      - AWS_LAMBDA
      type: string
    PostAuthenticationLoginBanner:
      maxLength: 512
      pattern: "[\\x09-\\x0D\\x20-\\x7E]*"
      type: string
    PreAuthenticationLoginBanner:
      maxLength: 512
      pattern: "[\\x09-\\x0D\\x20-\\x7E]*"
      type: string
    Protocols:
      items:
        $ref: '#/components/schemas/Protocol'
      maxItems: 4
      minItems: 1
      type: array
    ProtocolDetails:
      description: ' The protocol settings that are configured for your server. '
      properties:
        PassiveIp:
          allOf:
          - $ref: '#/components/schemas/PassiveIp'
          - description: "<p> Indicates passive mode, for FTP and FTPS protocols.\
              \ Enter a single IPv4 address, such as the public IP address of a firewall,\
              \ router, or load balancer. For example: </p> <p> <code>aws transfer\
              \ update-server --protocol-details PassiveIp=0.0.0.0</code> </p> <p>Replace\
              \ <code>0.0.0.0</code> in the example above with the actual IP address\
              \ you want to use.</p> <note> <p> If you change the <code>PassiveIp</code>\
              \ value, you must stop and then restart your Transfer Family server\
              \ for the change to take effect. For details on using passive mode (PASV)\
              \ in a NAT environment, see <a href=\"http://aws.amazon.com/blogs/storage/configuring-your-ftps-server-behind-a-firewall-or-nat-with-aws-transfer-family/\"\
              >Configuring your FTPS server behind a firewall or NAT with Transfer\
              \ Family</a>. </p> </note> <p> <i>Special values</i> </p> <p>The <code>AUTO</code>\
              \ and <code>0.0.0.0</code> are special values for the <code>PassiveIp</code>\
              \ parameter. The value <code>PassiveIp=AUTO</code> is assigned by default\
              \ to FTP and FTPS type servers. In this case, the server automatically\
              \ responds with one of the endpoint IPs within the PASV response. <code>PassiveIp=0.0.0.0</code>\
              \ has a more unique application for its usage. For example, if you have\
              \ a High Availability (HA) Network Load Balancer (NLB) environment,\
              \ where you have 3 subnets, you can only specify a single IP address\
              \ using the <code>PassiveIp</code> parameter. This reduces the effectiveness\
              \ of having High Availability. In this case, you can specify <code>PassiveIp=0.0.0.0</code>.\
              \ This tells the client to use the same IP address as the Control connection\
              \ and utilize all AZs for their connections. Note, however, that not\
              \ all FTP clients support the <code>PassiveIp=0.0.0.0</code> response.\
              \ FileZilla and WinSCP do support it. If you are using other clients,\
              \ check to see if your client supports the <code>PassiveIp=0.0.0.0</code>\
              \ response.</p>"
        TlsSessionResumptionMode:
          allOf:
          - $ref: '#/components/schemas/TlsSessionResumptionMode'
          - description: "<p>A property used with Transfer Family servers that use\
              \ the FTPS protocol. TLS Session Resumption provides a mechanism to\
              \ resume or share a negotiated secret key between the control and data\
              \ connection for an FTPS session. <code>TlsSessionResumptionMode</code>\
              \ determines whether or not the server resumes recent, negotiated sessions\
              \ through a unique session ID. This property is available during <code>CreateServer</code>\
              \ and <code>UpdateServer</code> calls. If a <code>TlsSessionResumptionMode</code>\
              \ value is not specified during <code>CreateServer</code>, it is set\
              \ to <code>ENFORCED</code> by default.</p> <ul> <li> <p> <code>DISABLED</code>:\
              \ the server does not process TLS session resumption client requests\
              \ and creates a new TLS session for each request. </p> </li> <li> <p>\
              \ <code>ENABLED</code>: the server processes and accepts clients that\
              \ are performing TLS session resumption. The server doesn't reject client\
              \ data connections that do not perform the TLS session resumption client\
              \ processing.</p> </li> <li> <p> <code>ENFORCED</code>: the server processes\
              \ and accepts clients that are performing TLS session resumption. The\
              \ server rejects client data connections that do not perform the TLS\
              \ session resumption client processing. Before you set the value to\
              \ <code>ENFORCED</code>, test your clients.</p> <note> <p>Not all FTPS\
              \ clients perform TLS session resumption. So, if you choose to enforce\
              \ TLS session resumption, you prevent any connections from FTPS clients\
              \ that don't perform the protocol negotiation. To determine whether\
              \ or not you can use the <code>ENFORCED</code> value, you need to test\
              \ your clients.</p> </note> </li> </ul>"
        SetStatOption:
          allOf:
          - $ref: '#/components/schemas/SetStatOption'
          - description: "<p>Use the <code>SetStatOption</code> to ignore the error\
              \ that is generated when the client attempts to use <code>SETSTAT</code>\
              \ on a file you are uploading to an S3 bucket.</p> <p>Some SFTP file\
              \ transfer clients can attempt to change the attributes of remote files,\
              \ including timestamp and permissions, using commands, such as <code>SETSTAT</code>\
              \ when uploading the file. However, these commands are not compatible\
              \ with object storage systems, such as Amazon S3. Due to this incompatibility,\
              \ file uploads from these clients can result in errors even when the\
              \ file is otherwise successfully uploaded.</p> <p>Set the value to <code>ENABLE_NO_OP</code>\
              \ to have the Transfer Family server ignore the <code>SETSTAT</code>\
              \ command, and upload files without needing to make any changes to your\
              \ SFTP client. While the <code>SetStatOption</code> <code>ENABLE_NO_OP</code>\
              \ setting ignores the error, it does generate a log entry in Amazon\
              \ CloudWatch Logs, so you can determine when the client is making a\
              \ <code>SETSTAT</code> call.</p> <note> <p>If you want to preserve the\
              \ original timestamp for your file, and modify other file attributes\
              \ using <code>SETSTAT</code>, you can use Amazon EFS as backend storage\
              \ with Transfer Family.</p> </note>"
        As2Transports:
          allOf:
          - $ref: '#/components/schemas/As2Transports'
          - description: "Indicates the transport method for the AS2 messages. Currently,\
              \ only HTTP is supported."
      type: object
    SecurityPolicyName:
      maxLength: 100
      pattern: TransferSecurityPolicy-.+
      type: string
    WorkflowDetails:
      description: Container for the <code>WorkflowDetail</code> data type. It is
        used by actions that trigger a workflow to begin execution.
      properties:
        OnUpload:
          allOf:
          - $ref: '#/components/schemas/OnUploadWorkflowDetails'
          - description: "<p>A trigger that starts a workflow: the workflow begins\
              \ to execute after a file is uploaded.</p> <p>To remove an associated\
              \ workflow from a server, you can provide an empty <code>OnUpload</code>\
              \ object, as in the following example.</p> <p> <code>aws transfer update-server\
              \ --server-id s-01234567890abcdef --workflow-details '{\"OnUpload\"\
              :[]}'</code> </p>"
        OnPartialUpload:
          allOf:
          - $ref: '#/components/schemas/OnPartialUploadWorkflowDetails'
          - description: <p>A trigger that starts a workflow if a file is only partially
              uploaded. You can attach a workflow to a server that executes whenever
              there is a partial upload.</p> <p>A <i>partial upload</i> occurs when
              a file is open when the session disconnects.</p>
      type: object
    StructuredLogDestinations:
      items:
        $ref: '#/components/schemas/Arn'
      maxItems: 1
      minItems: 0
      type: array
    SshPublicKeyBody:
      maxLength: 2048
      type: string
    UserName:
      maxLength: 100
      minLength: 3
      pattern: "^[\\w][\\w@.-]{2,99}$"
      type: string
    WorkflowDescription:
      maxLength: 256
      pattern: "^[\\w- ]*$"
      type: string
    WorkflowSteps:
      items:
        $ref: '#/components/schemas/WorkflowStep'
      maxItems: 8
      type: array
    WorkflowId:
      maxLength: 19
      minLength: 19
      pattern: "^w-([a-z0-9]{17})$"
      type: string
    CustomStepTarget:
      maxLength: 170
      pattern: "arn:[a-z-]+:lambda:.*$"
      type: string
    CustomStepTimeoutSeconds:
      maximum: 1800
      minimum: 1
      type: integer
    CustomStepDetails:
      description: Each step type has its own <code>StepDetails</code> structure.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepName'
          - description: "The name of the step, used as an identifier."
        Target:
          allOf:
          - $ref: '#/components/schemas/CustomStepTarget'
          - description: The ARN for the Lambda function that is being called.
        TimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/CustomStepTimeoutSeconds'
          - description: "Timeout, in seconds, for the step."
        SourceFileLocation:
          allOf:
          - $ref: '#/components/schemas/SourceFileLocation'
          - description: "<p>Specifies which file to use as input to the workflow\
              \ step: either the output from the previous step, or the originally\
              \ uploaded file for the workflow.</p> <ul> <li> <p>To use the previous\
              \ file as the input, enter <code>${previous.file}</code>. In this case,\
              \ this workflow step uses the output file from the previous workflow\
              \ step as input. This is the default value.</p> </li> <li> <p>To use\
              \ the originally uploaded file location as input for this step, enter\
              \ <code>${original.file}</code>.</p> </li> </ul>"
      type: object
    CustomStepStatus:
      enum:
      - SUCCESS
      - FAILURE
      type: string
    DateImported:
      format: date-time
      type: string
    EncryptionType:
      enum:
      - PGP
      type: string
    DecryptStepDetails:
      description: Each step type has its own <code>StepDetails</code> structure.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepName'
          - description: "The name of the step, used as an identifier."
        Type:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          - description: "The type of encryption used. Currently, this value must\
              \ be <code>PGP</code>."
        SourceFileLocation:
          allOf:
          - $ref: '#/components/schemas/SourceFileLocation'
          - description: "<p>Specifies which file to use as input to the workflow\
              \ step: either the output from the previous step, or the originally\
              \ uploaded file for the workflow.</p> <ul> <li> <p>To use the previous\
              \ file as the input, enter <code>${previous.file}</code>. In this case,\
              \ this workflow step uses the output file from the previous workflow\
              \ step as input. This is the default value.</p> </li> <li> <p>To use\
              \ the originally uploaded file location as input for this step, enter\
              \ <code>${original.file}</code>.</p> </li> </ul>"
        OverwriteExisting:
          allOf:
          - $ref: '#/components/schemas/OverwriteExisting'
          - description: "<p>A flag that indicates whether to overwrite an existing\
              \ file of the same name. The default is <code>FALSE</code>.</p> <p>If\
              \ the workflow is processing a file that has the same name as an existing\
              \ file, the behavior is as follows:</p> <ul> <li> <p>If <code>OverwriteExisting</code>\
              \ is <code>TRUE</code>, the existing file is replaced with the file\
              \ being processed.</p> </li> <li> <p>If <code>OverwriteExisting</code>\
              \ is <code>FALSE</code>, nothing happens, and the workflow processing\
              \ stops.</p> </li> </ul>"
        DestinationFileLocation:
          $ref: '#/components/schemas/DecryptStepDetails_DestinationFileLocation'
      required:
      - DestinationFileLocation
      - Type
      type: object
    HostKeyId:
      maxLength: 25
      minLength: 25
      pattern: "^hostkey-[0-9a-f]{17}$"
      type: string
    SshPublicKeyId:
      maxLength: 21
      minLength: 21
      pattern: "^key-[0-9a-f]{17}$"
      type: string
    DeleteStepDetails:
      description: "The name of the step, used to identify the delete step."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepName'
          - description: "The name of the step, used as an identifier."
        SourceFileLocation:
          allOf:
          - $ref: '#/components/schemas/SourceFileLocation'
          - description: "<p>Specifies which file to use as input to the workflow\
              \ step: either the output from the previous step, or the originally\
              \ uploaded file for the workflow.</p> <ul> <li> <p>To use the previous\
              \ file as the input, enter <code>${previous.file}</code>. In this case,\
              \ this workflow step uses the output file from the previous workflow\
              \ step as input. This is the default value.</p> </li> <li> <p>To use\
              \ the originally uploaded file location as input for this step, enter\
              \ <code>${original.file}</code>.</p> </li> </ul>"
      type: object
    DescribedAccess:
      description: Describes the properties of the access that was specified.
      properties:
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryMappings:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryMappings'
          - description: "<p>Logical directory mappings that specify what Amazon S3\
              \ or Amazon EFS paths and keys should be visible to your user and how\
              \ you want to make them visible. You must specify the <code>Entry</code>\
              \ and <code>Target</code> pair, where <code>Entry</code> shows how the\
              \ path is made visible and <code>Target</code> is the actual Amazon\
              \ S3 or Amazon EFS path. If you only specify a target, it is displayed\
              \ as is. You also must ensure that your Identity and Access Management\
              \ (IAM) role provides access to paths in <code>Target</code>. This value\
              \ can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p>\
              \ <p>In most cases, you can use this value instead of the session policy\
              \ to lock down the associated access to the designated home directory\
              \ (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code>\
              \ to '/' and set <code>Target</code> to the <code>HomeDirectory</code>\
              \ parameter value.</p>"
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "A session policy for your user so that you can use the same\
              \ Identity and Access Management (IAM) role across multiple users. This\
              \ policy scopes down a user's access to portions of their Amazon S3\
              \ bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,\
              \ <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>."
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: "<p>A unique identifier that is required to identify specific\
              \ groups within your directory. The users of the group that you associate\
              \ have access to your Amazon S3 or Amazon EFS resources over the enabled\
              \ protocols using Transfer Family. If you know the group name, you can\
              \ view the SID values by running the following command using Windows\
              \ PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like\
              \ \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code>\
              \ </p> <p>In that command, replace <i>YourGroupName</i> with the name\
              \ of your Active Directory group.</p> <p>The regular expression used\
              \ to validate this parameter is a string of characters consisting of\
              \ uppercase and lowercase alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
      type: object
    DescribedAgreement:
      description: Describes the properties of an agreement.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique Amazon Resource Name (ARN) for the agreement.
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: A unique identifier for the agreement. This identifier is
              returned when you create an agreement.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The name or short description that's used to identify the
              agreement.
        Status:
          allOf:
          - $ref: '#/components/schemas/AgreementStatusType'
          - description: "The current status of the agreement, either <code>ACTIVE</code>\
              \ or <code>INACTIVE</code>."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: A system-assigned unique identifier for a server instance.
              This identifier indicates the specific server that the agreement uses.
        LocalProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the AS2 local profile.
        PartnerProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the partner profile used in the agreement.
        BaseDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: The landing directory (folder) for files that are transferred
              by using the AS2 protocol.
        AccessRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>With AS2, you can send files by calling <code>StartFileTransfer</code>\
              \ and specifying the file paths in the request parameter, <code>SendFilePaths</code>.\
              \ We use the file’s parent directory (for example, for <code>--send-file-paths\
              \ /bucket/dir/file.txt</code>, parent directory is <code>/bucket/dir/</code>)\
              \ to temporarily store a processed AS2 message file, store the MDN when\
              \ we receive them from the partner, and write a final JSON file containing\
              \ relevant metadata of the transmission. So, the <code>AccessRole</code>\
              \ needs to provide read and write access to the parent directory of\
              \ the file location used in the <code>StartFileTransfer</code> request.\
              \ Additionally, you need to provide read and write access to the parent\
              \ directory of the files that you intend to send with <code>StartFileTransfer</code>.</p>\
              \ <p>If you are using Basic authentication for your AS2 connector, the\
              \ access role requires the <code>secretsmanager:GetSecretValue</code>\
              \ permission for the secret. If the secret is encrypted using a customer-managed\
              \ key instead of the Amazon Web Services managed key in Secrets Manager,\
              \ then the role also needs the <code>kms:Decrypt</code> permission for\
              \ that key.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              agreements.
      required:
      - Arn
      type: object
    DescribedCertificate:
      description: Describes the properties of a certificate.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique Amazon Resource Name (ARN) for the certificate.
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
        Usage:
          allOf:
          - $ref: '#/components/schemas/CertificateUsageType'
          - description: Specifies whether this certificate is used for signing or
              encryption.
        Status:
          allOf:
          - $ref: '#/components/schemas/CertificateStatusType'
          - description: "The certificate can be either <code>ACTIVE</code>, <code>PENDING_ROTATION</code>,\
              \ or <code>INACTIVE</code>. <code>PENDING_ROTATION</code> means that\
              \ this certificate will replace the current certificate when it expires."
        Certificate:
          allOf:
          - $ref: '#/components/schemas/CertificateBodyType'
          - description: The file name for the certificate.
        CertificateChain:
          allOf:
          - $ref: '#/components/schemas/CertificateChainType'
          - description: The list of certificates that make up the chain for the certificate.
        ActiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              active.
        InactiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              inactive.
        Serial:
          allOf:
          - $ref: '#/components/schemas/CertSerial'
          - description: The serial number for the certificate.
        NotBeforeDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: The earliest date that the certificate is valid.
        NotAfterDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: The final date that the certificate is valid.
        Type:
          allOf:
          - $ref: '#/components/schemas/CertificateType'
          - description: "If a private key has been specified for the certificate,\
              \ its type is <code>CERTIFICATE_WITH_PRIVATE_KEY</code>. If there is\
              \ no private key, the type is <code>CERTIFICATE</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'The name or description that''s used to identity the certificate. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              certificates.
      required:
      - Arn
      type: object
    DescribedConnector:
      description: "Describes the parameters for the connector, as identified by the\
        \ <code>ConnectorId</code>."
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique Amazon Resource Name (ARN) for the connector.
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of the partner's AS2 or SFTP endpoint.
        As2Config:
          $ref: '#/components/schemas/CreateConnectorRequest_As2Config'
        AccessRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>With AS2, you can send files by calling <code>StartFileTransfer</code>\
              \ and specifying the file paths in the request parameter, <code>SendFilePaths</code>.\
              \ We use the file’s parent directory (for example, for <code>--send-file-paths\
              \ /bucket/dir/file.txt</code>, parent directory is <code>/bucket/dir/</code>)\
              \ to temporarily store a processed AS2 message file, store the MDN when\
              \ we receive them from the partner, and write a final JSON file containing\
              \ relevant metadata of the transmission. So, the <code>AccessRole</code>\
              \ needs to provide read and write access to the parent directory of\
              \ the file location used in the <code>StartFileTransfer</code> request.\
              \ Additionally, you need to provide read and write access to the parent\
              \ directory of the files that you intend to send with <code>StartFileTransfer</code>.</p>\
              \ <p>If you are using Basic authentication for your AS2 connector, the\
              \ access role requires the <code>secretsmanager:GetSecretValue</code>\
              \ permission for the secret. If the secret is encrypted using a customer-managed\
              \ key instead of the Amazon Web Services managed key in Secrets Manager,\
              \ then the role also needs the <code>kms:Decrypt</code> permission for\
              \ that key.</p>"
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a connector to turn on CloudWatch\
              \ logging for Amazon S3 events. When set, you can view connector activity\
              \ in your CloudWatch logs."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              connectors.
        SftpConfig:
          $ref: '#/components/schemas/CreateConnectorRequest_SftpConfig'
      required:
      - Arn
      type: object
    ExecutionId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}$"
      type: string
    DescribedExecution:
      description: The details for an execution object.
      properties:
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: A unique identifier for the execution of a workflow.
        InitialFileLocation:
          $ref: '#/components/schemas/DescribedExecution_InitialFileLocation'
        ServiceMetadata:
          $ref: '#/components/schemas/DescribedExecution_ServiceMetadata'
        ExecutionRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The IAM role associated with the execution.
        LoggingConfiguration:
          $ref: '#/components/schemas/DescribedExecution_LoggingConfiguration'
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: "The status is one of the execution. Can be in progress,\
              \ completed, exception encountered, or handling the exception. "
        Results:
          $ref: '#/components/schemas/DescribedExecution_Results'
      type: object
    DescribedHostKey:
      description: The details for a server host key.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique Amazon Resource Name (ARN) for the host key.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: A unique identifier for the host key.
        HostKeyFingerprint:
          allOf:
          - $ref: '#/components/schemas/HostKeyFingerprint'
          - description: "The public key fingerprint, which is a short sequence of\
              \ bytes used to identify the longer public key."
        Description:
          allOf:
          - $ref: '#/components/schemas/HostKeyDescription'
          - description: The text description for this host key.
        Type:
          allOf:
          - $ref: '#/components/schemas/HostKeyType'
          - description: <p>The encryption algorithm that is used for the host key.
              The <code>Type</code> parameter is specified by using one of the following
              values:</p> <ul> <li> <p> <code>ssh-rsa</code> </p> </li> <li> <p> <code>ssh-ed25519</code>
              </p> </li> <li> <p> <code>ecdsa-sha2-nistp256</code> </p> </li> <li>
              <p> <code>ecdsa-sha2-nistp384</code> </p> </li> <li> <p> <code>ecdsa-sha2-nistp521</code>
              </p> </li> </ul>
        DateImported:
          allOf:
          - $ref: '#/components/schemas/DateImported'
          - description: The date on which the host key was added to the server.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              host keys.
      required:
      - Arn
      type: object
    DescribedProfile:
      description: 'The details for a local or partner AS2 profile. '
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique Amazon Resource Name (ARN) for the profile.
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the local or partner AS2 profile.
        ProfileType:
          allOf:
          - $ref: '#/components/schemas/ProfileType'
          - description: "Indicates whether to list only <code>LOCAL</code> type profiles\
              \ or only <code>PARTNER</code> type profiles. If not supplied in the\
              \ request, the command lists all types of profiles."
        As2Id:
          allOf:
          - $ref: '#/components/schemas/As2Id'
          - description: "The <code>As2Id</code> is the <i>AS2-name</i>, as defined\
              \ in the <a href=\"https://datatracker.ietf.org/doc/html/rfc4130\">RFC\
              \ 4130</a>. For inbound transfers, this is the <code>AS2-From</code>\
              \ header for the AS2 messages sent from the partner. For outbound connectors,\
              \ this is the <code>AS2-To</code> header for the AS2 messages sent to\
              \ the partner using the <code>StartFileTransfer</code> API operation.\
              \ This ID cannot include spaces."
        CertificateIds:
          allOf:
          - $ref: '#/components/schemas/CertificateIds'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              profiles.
      required:
      - Arn
      type: object
    DescribedSecurityPolicy:
      description: "Describes the properties of a security policy that was specified.\
        \ For more information about security policies, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html\"\
        >Working with security policies</a>."
      properties:
        Fips:
          allOf:
          - $ref: '#/components/schemas/Fips'
          - description: Specifies whether this policy enables Federal Information
              Processing Standards (FIPS).
        SecurityPolicyName:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyName'
          - description: Specifies the name of the security policy that is attached
              to the server.
        SshCiphers:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyOptions'
          - description: Specifies the enabled Secure Shell (SSH) cipher encryption
              algorithms in the security policy that is attached to the server.
        SshKexs:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyOptions'
          - description: Specifies the enabled SSH key exchange (KEX) encryption algorithms
              in the security policy that is attached to the server.
        SshMacs:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyOptions'
          - description: Specifies the enabled SSH message authentication code (MAC)
              encryption algorithms in the security policy that is attached to the
              server.
        TlsCiphers:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyOptions'
          - description: Specifies the enabled Transport Layer Security (TLS) cipher
              encryption algorithms in the security policy that is attached to the
              server.
      required:
      - SecurityPolicyName
      type: object
    DescribedServer:
      description: Describes the properties of a file transfer protocol-enabled server
        that was specified.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Specifies the unique Amazon Resource Name (ARN) of the server.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: Specifies the ARN of the Amazon Web ServicesCertificate Manager
              (ACM) certificate. Required when <code>Protocols</code> is set to <code>FTPS</code>.
        ProtocolDetails:
          $ref: '#/components/schemas/CreateServerRequest_ProtocolDetails'
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: Specifies the domain of the storage system that is used for
              file transfers.
        EndpointDetails:
          $ref: '#/components/schemas/CreateServerRequest_EndpointDetails'
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          - description: "Defines the type of endpoint that your server is connected\
              \ to. If your server is connected to a VPC endpoint, your server isn't\
              \ accessible over the public internet."
        HostKeyFingerprint:
          allOf:
          - $ref: '#/components/schemas/HostKeyFingerprint'
          - description: Specifies the Base64-encoded SHA256 fingerprint of the server's
              host key. This value is equivalent to the output of the <code>ssh-keygen
              -l -f my-new-server-key</code> command.
        IdentityProviderDetails:
          $ref: '#/components/schemas/DescribedServer_IdentityProviderDetails'
        IdentityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          - description: "<p>The mode of authentication for a server. The default\
              \ value is <code>SERVICE_MANAGED</code>, which allows you to store and\
              \ access user credentials within the Transfer Family service.</p> <p>Use\
              \ <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory\
              \ groups in Directory Service for Microsoft Active Directory or Microsoft\
              \ Active Directory in your on-premises environment or in Amazon Web\
              \ Services using AD Connector. This option also requires you to provide\
              \ a Directory ID by using the <code>IdentityProviderDetails</code> parameter.</p>\
              \ <p>Use the <code>API_GATEWAY</code> value to integrate with an identity\
              \ provider of your choosing. The <code>API_GATEWAY</code> setting requires\
              \ you to provide an Amazon API Gateway endpoint URL to call for authentication\
              \ by using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use\
              \ the <code>AWS_LAMBDA</code> value to directly use an Lambda function\
              \ as your identity provider. If you choose this value, you must specify\
              \ the ARN for the Lambda function in the <code>Function</code> parameter\
              \ for the <code>IdentityProviderDetails</code> data type.</p>"
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a server to turn on Amazon CloudWatch\
              \ logging for Amazon S3 or Amazon EFSevents. When set, you can view\
              \ user activity in your CloudWatch logs."
        PostAuthenticationLoginBanner:
          allOf:
          - $ref: '#/components/schemas/PostAuthenticationLoginBanner'
          - description: <p>Specifies a string to display when users connect to a
              server. This string is displayed after the user authenticates.</p> <note>
              <p>The SFTP protocol does not support post-authentication display banners.</p>
              </note>
        PreAuthenticationLoginBanner:
          allOf:
          - $ref: '#/components/schemas/PreAuthenticationLoginBanner'
          - description: "<p>Specifies a string to display when users connect to a\
              \ server. This string is displayed before the user authenticates. For\
              \ example, the following banner displays details about using the system:</p>\
              \ <p> <code>This system is for the use of authorized users only. Individuals\
              \ using this computer system without authority, or in excess of their\
              \ authority, are subject to having all of their activities on this system\
              \ monitored and recorded by system personnel.</code> </p>"
        Protocols:
          allOf:
          - $ref: '#/components/schemas/Protocols'
          - description: "<p>Specifies the file transfer protocol or protocols over\
              \ which your file transfer protocol client can connect to your server's\
              \ endpoint. The available protocols are:</p> <ul> <li> <p> <code>SFTP</code>\
              \ (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH</p>\
              \ </li> <li> <p> <code>FTPS</code> (File Transfer Protocol Secure):\
              \ File transfer with TLS encryption</p> </li> <li> <p> <code>FTP</code>\
              \ (File Transfer Protocol): Unencrypted file transfer</p> </li> <li>\
              \ <p> <code>AS2</code> (Applicability Statement 2): used for transporting\
              \ structured business-to-business data</p> </li> </ul> <note> <ul> <li>\
              \ <p>If you select <code>FTPS</code>, you must choose a certificate\
              \ stored in Certificate Manager (ACM) which is used to identify your\
              \ server when clients connect to it over FTPS.</p> </li> <li> <p>If\
              \ <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>,\
              \ then the <code>EndpointType</code> must be <code>VPC</code> and the\
              \ <code>IdentityProviderType</code> must be either <code>AWS_DIRECTORY_SERVICE</code>,\
              \ <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.</p> </li> <li>\
              \ <p>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>\
              \ cannot be associated.</p> </li> <li> <p>If <code>Protocol</code> is\
              \ set only to <code>SFTP</code>, the <code>EndpointType</code> can be\
              \ set to <code>PUBLIC</code> and the <code>IdentityProviderType</code>\
              \ can be set any of the supported identity types: <code>SERVICE_MANAGED</code>,\
              \ <code>AWS_DIRECTORY_SERVICE</code>, <code>AWS_LAMBDA</code>, or <code>API_GATEWAY</code>.</p>\
              \ </li> <li> <p>If <code>Protocol</code> includes <code>AS2</code>,\
              \ then the <code>EndpointType</code> must be <code>VPC</code>, and domain\
              \ must be Amazon S3.</p> </li> </ul> </note>"
        SecurityPolicyName:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyName'
          - description: Specifies the name of the security policy that is attached
              to the server.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: Specifies the unique system-assigned identifier for a server
              that you instantiate.
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The condition of the server that was described. A value\
              \ of <code>ONLINE</code> indicates that the server can accept jobs and\
              \ transfer files. A <code>State</code> value of <code>OFFLINE</code>\
              \ means that the server cannot perform file transfer operations.</p>\
              \ <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate\
              \ that the server is in an intermediate state, either not fully able\
              \ to respond, or not fully offline. The values of <code>START_FAILED</code>\
              \ or <code>STOP_FAILED</code> can indicate an error condition.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Specifies the key-value pairs that you can use to search
              for and group servers that were assigned to the server that was described.
        UserCount:
          allOf:
          - $ref: '#/components/schemas/UserCount'
          - description: Specifies the number of users that are assigned to a server
              you specified with the <code>ServerId</code>.
        WorkflowDetails:
          $ref: '#/components/schemas/CreateServerRequest_WorkflowDetails'
        StructuredLogDestinations:
          allOf:
          - $ref: '#/components/schemas/StructuredLogDestinations'
          - description: "<p>Specifies the log groups to which your server logs are\
              \ sent.</p> <p>To specify a log group, you must provide the ARN for\
              \ an existing log group. In this case, the format of the log group is\
              \ as follows:</p> <p> <code>arn:aws:logs:region-name:amazon-account-id:log-group:log-group-name:*</code>\
              \ </p> <p>For example, <code>arn:aws:logs:us-east-1:111122223333:log-group:mytestgroup:*</code>\
              \ </p> <p>If you have previously specified a log group for a server,\
              \ you can clear it, and in effect turn off structured logging, by providing\
              \ an empty value for this parameter in an <code>update-server</code>\
              \ call. For example:</p> <p> <code>update-server --server-id s-1234567890abcdef0\
              \ --structured-log-destinations</code> </p>"
      required:
      - Arn
      type: object
    DescribedUser:
      description: Describes the properties of a user that was specified.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Specifies the unique Amazon Resource Name (ARN) for the user
              that was requested to be described.
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryMappings:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryMappings'
          - description: "<p>Logical directory mappings that specify what Amazon S3\
              \ or Amazon EFS paths and keys should be visible to your user and how\
              \ you want to make them visible. You must specify the <code>Entry</code>\
              \ and <code>Target</code> pair, where <code>Entry</code> shows how the\
              \ path is made visible and <code>Target</code> is the actual Amazon\
              \ S3 or Amazon EFS path. If you only specify a target, it is displayed\
              \ as is. You also must ensure that your Identity and Access Management\
              \ (IAM) role provides access to paths in <code>Target</code>. This value\
              \ can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p>\
              \ <p>In most cases, you can use this value instead of the session policy\
              \ to lock your user down to the designated home directory (\"<code>chroot</code>\"\
              ). To do this, you can set <code>Entry</code> to '/' and set <code>Target</code>\
              \ to the HomeDirectory parameter value.</p>"
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "A session policy for your user so that you can use the same\
              \ Identity and Access Management (IAM) role across multiple users. This\
              \ policy scopes down a user's access to portions of their Amazon S3\
              \ bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,\
              \ <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>."
        PosixProfile:
          $ref: '#/components/schemas/DescribedUser_PosixProfile'
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        SshPublicKeys:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeys'
          - description: Specifies the public key portion of the Secure Shell (SSH)
              keys stored for the described user.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Specifies the key-value pairs for the user requested. Tag
              can be used to search for and group users for a variety of purposes.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: Specifies the name of the user that was requested to be described.
              User names are used for authentication purposes. This is the string
              that will be used by your user when they log in to your server.
      required:
      - Arn
      type: object
    DescribedWorkflow:
      description: Describes the properties of the specified workflow
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Specifies the unique Amazon Resource Name (ARN) for the workflow.
        Description:
          allOf:
          - $ref: '#/components/schemas/WorkflowDescription'
          - description: Specifies the text description for the workflow.
        Steps:
          allOf:
          - $ref: '#/components/schemas/WorkflowSteps'
          - description: Specifies the details for the steps that are in the specified
              workflow.
        OnExceptionSteps:
          allOf:
          - $ref: '#/components/schemas/WorkflowSteps'
          - description: Specifies the steps (actions) to take if errors are encountered
              during execution of the workflow.
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Key-value pairs that can be used to group and search for
              workflows. Tags are metadata attached to workflows for any purpose.
      required:
      - Arn
      type: object
    FileLocation:
      description: Specifies the Amazon S3 or EFS file details to be used in the step.
      properties:
        S3FileLocation:
          $ref: '#/components/schemas/FileLocation_S3FileLocation'
        EfsFileLocation:
          $ref: '#/components/schemas/FileLocation_EfsFileLocation'
      type: object
    ServiceMetadata:
      description: A container object for the session details that are associated
        with a workflow.
      properties:
        UserDetails:
          $ref: '#/components/schemas/ServiceMetadata_UserDetails'
      required:
      - UserDetails
      type: object
    LoggingConfiguration:
      description: Consists of the logging role and the log group name.
      properties:
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a server to turn on Amazon CloudWatch\
              \ logging for Amazon S3 or Amazon EFSevents. When set, you can view\
              \ user activity in your CloudWatch logs."
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          - description: The name of the CloudWatch logging group for the Transfer
              Family server to which this workflow belongs.
      type: object
    ExecutionStatus:
      enum:
      - IN_PROGRESS
      - COMPLETED
      - EXCEPTION
      - HANDLING_EXCEPTION
      type: string
    ExecutionResults:
      description: "Specifies the steps in the workflow, as well as the steps to execute\
        \ in case of any errors during workflow execution."
      properties:
        Steps:
          allOf:
          - $ref: '#/components/schemas/ExecutionStepResults'
          - description: Specifies the details for the steps that are in the specified
              workflow.
        OnExceptionSteps:
          allOf:
          - $ref: '#/components/schemas/ExecutionStepResults'
          - description: Specifies the steps (actions) to take if errors are encountered
              during execution of the workflow.
      type: object
    HostKeyFingerprint:
      type: string
    HostKeyDescription:
      maxLength: 200
      minLength: 0
      pattern: "^[\\p{Print}]*$"
      type: string
    HostKeyType:
      type: string
    Fips:
      type: boolean
    SecurityPolicyOptions:
      items:
        $ref: '#/components/schemas/SecurityPolicyOption'
      type: array
    State:
      description: "<p>Describes the condition of a file transfer protocol-enabled\
        \ server with respect to its ability to perform file operations. There are\
        \ six possible states: <code>OFFLINE</code>, <code>ONLINE</code>, <code>STARTING</code>,\
        \ <code>STOPPING</code>, <code>START_FAILED</code>, and <code>STOP_FAILED</code>.</p>\
        \ <p> <code>OFFLINE</code> indicates that the server exists, but that it is\
        \ not available for file operations. <code>ONLINE</code> indicates that the\
        \ server is available to perform file operations. <code>STARTING</code> indicates\
        \ that the server's was instantiated, but the server is not yet available\
        \ to perform file operations. Under normal conditions, it can take a couple\
        \ of minutes for the server to be completely operational. Both <code>START_FAILED</code>\
        \ and <code>STOP_FAILED</code> are error conditions.</p>"
      enum:
      - OFFLINE
      - ONLINE
      - STARTING
      - STOPPING
      - START_FAILED
      - STOP_FAILED
      type: string
    UserCount:
      type: integer
    SshPublicKeys:
      items:
        $ref: '#/components/schemas/SshPublicKey'
      maxItems: 5
      type: array
    DirectoryId:
      maxLength: 12
      minLength: 12
      pattern: "^d-[0-9a-f]{10}$"
      type: string
    EfsFileSystemId:
      maxLength: 128
      pattern: "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$"
      type: string
    EfsPath:
      maxLength: 65536
      minLength: 1
      pattern: "^[^\\x00]+$"
      type: string
    EfsFileLocation:
      description: <p>Specifies the details for the file location for the file that's
        being used in the workflow. Only applicable if you are using Amazon Elastic
        File Systems (Amazon EFS) for storage.</p> <p> </p>
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/EfsFileSystemId'
          - description: "The identifier of the file system, assigned by Amazon EFS."
        Path:
          allOf:
          - $ref: '#/components/schemas/EfsPath'
          - description: The pathname for the folder being used by a workflow.
      type: object
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      type: array
    VpcEndpointId:
      maxLength: 22
      minLength: 22
      pattern: "^vpce-[0-9a-f]{17}$"
      type: string
    VpcId:
      type: string
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      type: array
    ExecutionErrorType:
      enum:
      - PERMISSION_DENIED
      - CUSTOM_STEP_FAILED
      - THROTTLED
      - ALREADY_EXISTS
      - NOT_FOUND
      - BAD_REQUEST
      - TIMEOUT
      - INTERNAL_SERVER_ERROR
      type: string
    ExecutionErrorMessage:
      type: string
    ExecutionError:
      description: "Specifies the error message and type, for an error that occurs\
        \ during the execution of the workflow."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ExecutionErrorType'
          - description: "<p>Specifies the error type.</p> <ul> <li> <p> <code>ALREADY_EXISTS</code>:\
              \ occurs for a copy step, if the overwrite option is not selected and\
              \ a file with the same name already exists in the target location.</p>\
              \ </li> <li> <p> <code>BAD_REQUEST</code>: a general bad request: for\
              \ example, a step that attempts to tag an EFS file returns <code>BAD_REQUEST</code>,\
              \ as only S3 files can be tagged.</p> </li> <li> <p> <code>CUSTOM_STEP_FAILED</code>:\
              \ occurs when the custom step provided a callback that indicates failure.</p>\
              \ </li> <li> <p> <code>INTERNAL_SERVER_ERROR</code>: a catch-all error\
              \ that can occur for a variety of reasons.</p> </li> <li> <p> <code>NOT_FOUND</code>:\
              \ occurs when a requested entity, for example a source file for a copy\
              \ step, does not exist.</p> </li> <li> <p> <code>PERMISSION_DENIED</code>:\
              \ occurs if your policy does not contain the correct permissions to\
              \ complete one or more of the steps in the workflow.</p> </li> <li>\
              \ <p> <code>TIMEOUT</code>: occurs when the execution times out.</p>\
              \ <note> <p> You can set the <code>TimeoutSeconds</code> for a custom\
              \ step, anywhere from 1 second to 1800 seconds (30 minutes). </p> </note>\
              \ </li> <li> <p> <code>THROTTLED</code>: occurs if you exceed the new\
              \ execution refill rate of one workflow per second.</p> </li> </ul>"
        Message:
          allOf:
          - $ref: '#/components/schemas/ExecutionErrorMessage'
          - description: Specifies the descriptive message that corresponds to the
              <code>ErrorType</code>.
      required:
      - Message
      - Type
      type: object
    ExecutionStepResults:
      items:
        $ref: '#/components/schemas/ExecutionStepResult'
      maxItems: 50
      minItems: 1
      type: array
    WorkflowStepType:
      enum:
      - COPY
      - CUSTOM
      - TAG
      - DELETE
      - DECRYPT
      type: string
    StepResultOutputsJson:
      maxLength: 65536
      type: string
    ExecutionStepResult:
      description: "Specifies the following details for the step: error (if any),\
        \ outputs (if any), and the step type."
      properties:
        StepType:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepType'
          - description: <p>One of the available step types.</p> <ul> <li> <p> <b>
              <code>COPY</code> </b> - Copy the file to another location.</p> </li>
              <li> <p> <b> <code>CUSTOM</code> </b> - Perform a custom step with an
              Lambda function target.</p> </li> <li> <p> <b> <code>DECRYPT</code>
              </b> - Decrypt a file that was encrypted before it was uploaded.</p>
              </li> <li> <p> <b> <code>DELETE</code> </b> - Delete the file.</p> </li>
              <li> <p> <b> <code>TAG</code> </b> - Add a tag to the file.</p> </li>
              </ul>
        Outputs:
          allOf:
          - $ref: '#/components/schemas/StepResultOutputsJson'
          - description: The values for the key/value pair applied as a tag to the
              file. Only applicable if the step type is <code>TAG</code>.
        Error:
          $ref: '#/components/schemas/ExecutionStepResult_Error'
      type: object
    S3FileLocation:
      description: Specifies the details for the file location for the file that's
        being used in the workflow. Only applicable if you are using S3 storage.
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: Specifies the S3 bucket that contains the file being used.
        Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The name assigned to the file when it was created in Amazon
              S3. You use the object key to retrieve the object.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/S3VersionId'
          - description: Specifies the file version.
        Etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          - description: "The entity tag is a hash of the object. The ETag reflects\
              \ changes only to the contents of an object, not its metadata."
      type: object
    FilePath:
      maxLength: 1024
      minLength: 1
      pattern: ^(.)+
      type: string
    FilePaths:
      items:
        $ref: '#/components/schemas/FilePath'
      maxItems: 10
      minItems: 1
      type: array
    Function:
      maxLength: 170
      minLength: 1
      pattern: "^arn:[a-z-]+:lambda:.*$"
      type: string
    MapEntry:
      maxLength: 1024
      pattern: ^/.*
      type: string
    MapTarget:
      maxLength: 1024
      pattern: ^/.*
      type: string
    HomeDirectoryMapEntry:
      description: "<p>Represents an object that contains entries and targets for\
        \ <code>HomeDirectoryMappings</code>.</p> <p>The following is an <code>Entry</code>\
        \ and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[\
        \ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code>\
        \ </p>"
      properties:
        Entry:
          allOf:
          - $ref: '#/components/schemas/MapEntry'
          - description: Represents an entry for <code>HomeDirectoryMappings</code>.
        Target:
          allOf:
          - $ref: '#/components/schemas/MapTarget'
          - description: Represents the map target that is used in a <code>HomeDirectorymapEntry</code>.
      required:
      - Entry
      - Target
      type: object
    SftpAuthenticationMethods:
      enum:
      - PASSWORD
      - PUBLIC_KEY
      - PUBLIC_KEY_OR_PASSWORD
      - PUBLIC_KEY_AND_PASSWORD
      type: string
    PrivateKeyType:
      format: password
      maxLength: 16384
      minLength: 1
      pattern: "^[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*"
      type: string
    S3InputFileLocation:
      description: "<p>Specifies the customer input Amazon S3 file location. If it\
        \ is used inside <code>copyStepDetails.DestinationFileLocation</code>, it\
        \ should be the S3 copy destination.</p> <p> You need to provide the bucket\
        \ and key. The key can represent either a path or a file. This is determined\
        \ by whether or not you end the key value with the forward slash (/) character.\
        \ If the final character is \"/\", then your file is copied to the folder,\
        \ and its name does not change. If, rather, the final character is alphanumeric,\
        \ your uploaded file is renamed to the path value. In this case, if a file\
        \ with that name already exists, it is overwritten. </p> <p>For example, if\
        \ your path is <code>shared-files/bob/</code>, your uploaded files are copied\
        \ to the <code>shared-files/bob/</code>, folder. If your path is <code>shared-files/today</code>,\
        \ each uploaded file is copied to the <code>shared-files</code> folder and\
        \ named <code>today</code>: each upload overwrites the previous version of\
        \ the <i>bob</i> file.</p>"
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: Specifies the S3 bucket for the customer input file.
        Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The name assigned to the file when it was created in Amazon
              S3. You use the object key to retrieve the object.
      type: object
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    NextToken:
      maxLength: 6144
      minLength: 1
      type: string
    ListedAccesses:
      items:
        $ref: '#/components/schemas/ListedAccess'
      type: array
    ListedAgreements:
      items:
        $ref: '#/components/schemas/ListedAgreement'
      type: array
    ListedCertificates:
      items:
        $ref: '#/components/schemas/ListedCertificate'
      type: array
    ListedConnectors:
      items:
        $ref: '#/components/schemas/ListedConnector'
      type: array
    ListedExecutions:
      items:
        $ref: '#/components/schemas/ListedExecution'
      type: array
    ListedHostKeys:
      items:
        $ref: '#/components/schemas/ListedHostKey'
      type: array
    ListedProfiles:
      items:
        $ref: '#/components/schemas/ListedProfile'
      type: array
    SecurityPolicyNames:
      items:
        $ref: '#/components/schemas/SecurityPolicyName'
      type: array
    ListedServers:
      items:
        $ref: '#/components/schemas/ListedServer'
      type: array
    ListedUsers:
      items:
        $ref: '#/components/schemas/ListedUser'
      type: array
    ListedWorkflows:
      items:
        $ref: '#/components/schemas/ListedWorkflow'
      type: array
    ListedAccess:
      description: Lists the properties for one or more specified associated accesses.
      properties:
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that controls your users' access to your Amazon
              S3 bucket or Amazon EFS file system. The policies attached to this role
              determine the level of access that you want to provide your users when
              transferring files into and out of your Amazon S3 bucket or Amazon EFS
              file system. The IAM role should also contain a trust relationship that
              allows the server to access your resources when servicing your users'
              transfer requests.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: "<p>A unique identifier that is required to identify specific\
              \ groups within your directory. The users of the group that you associate\
              \ have access to your Amazon S3 or Amazon EFS resources over the enabled\
              \ protocols using Transfer Family. If you know the group name, you can\
              \ view the SID values by running the following command using Windows\
              \ PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like\
              \ \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code>\
              \ </p> <p>In that command, replace <i>YourGroupName</i> with the name\
              \ of your Active Directory group.</p> <p>The regular expression used\
              \ to validate this parameter is a string of characters consisting of\
              \ uppercase and lowercase alphanumeric characters with no spaces. You\
              \ can also include underscores or any of the following characters: =,.@:/-</p>"
      type: object
    ListedAgreement:
      description: Describes the properties of an agreement.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the specified agreement.
        AgreementId:
          allOf:
          - $ref: '#/components/schemas/AgreementId'
          - description: A unique identifier for the agreement. This identifier is
              returned when you create an agreement.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: 'The current description for the agreement. You can change
              it by calling the <code>UpdateAgreement</code> operation and providing
              a new description. '
        Status:
          allOf:
          - $ref: '#/components/schemas/AgreementStatusType'
          - description: The agreement can be either <code>ACTIVE</code> or <code>INACTIVE</code>.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: The unique identifier for the agreement.
        LocalProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the AS2 local profile.
        PartnerProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the partner profile.
      type: object
    ListedCertificate:
      description: Describes the properties of a certificate.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the specified certificate.
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          - description: An array of identifiers for the imported certificates. You
              use this identifier for working with profiles and partner profiles.
        Usage:
          allOf:
          - $ref: '#/components/schemas/CertificateUsageType'
          - description: Specifies whether this certificate is used for signing or
              encryption.
        Status:
          allOf:
          - $ref: '#/components/schemas/CertificateStatusType'
          - description: "The certificate can be either <code>ACTIVE</code>, <code>PENDING_ROTATION</code>,\
              \ or <code>INACTIVE</code>. <code>PENDING_ROTATION</code> means that\
              \ this certificate will replace the current certificate when it expires."
        ActiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              active.
        InactiveDate:
          allOf:
          - $ref: '#/components/schemas/CertDate'
          - description: An optional date that specifies when the certificate becomes
              inactive.
        Type:
          allOf:
          - $ref: '#/components/schemas/CertificateType'
          - description: "The type for the certificate. If a private key has been\
              \ specified for the certificate, its type is <code>CERTIFICATE_WITH_PRIVATE_KEY</code>.\
              \ If there is no private key, the type is <code>CERTIFICATE</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The name or short description that's used to identify the
              certificate.
      type: object
    ListedConnector:
      description: Returns details of the connector that is specified.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the specified connector.
        ConnectorId:
          allOf:
          - $ref: '#/components/schemas/ConnectorId'
          - description: The unique identifier for the connector.
        Url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of the partner's AS2 or SFTP endpoint.
      type: object
    ListedExecution:
      description: Returns properties of the execution that is specified.
      properties:
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: A unique identifier for the execution of a workflow.
        InitialFileLocation:
          $ref: '#/components/schemas/DescribedExecution_InitialFileLocation'
        ServiceMetadata:
          $ref: '#/components/schemas/DescribedExecution_ServiceMetadata'
        Status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: "The status is one of the execution. Can be in progress,\
              \ completed, exception encountered, or handling the exception."
      type: object
    ListedHostKey:
      description: Returns properties of the host key that's specified.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The unique Amazon Resource Name (ARN) of the host key.
        HostKeyId:
          allOf:
          - $ref: '#/components/schemas/HostKeyId'
          - description: A unique identifier for the host key.
        Fingerprint:
          allOf:
          - $ref: '#/components/schemas/HostKeyFingerprint'
          - description: "The public key fingerprint, which is a short sequence of\
              \ bytes used to identify the longer public key."
        Description:
          allOf:
          - $ref: '#/components/schemas/HostKeyDescription'
          - description: The current description for the host key. You can change
              it by calling the <code>UpdateHostKey</code> operation and providing
              a new description.
        Type:
          allOf:
          - $ref: '#/components/schemas/HostKeyType'
          - description: <p>The encryption algorithm that is used for the host key.
              The <code>Type</code> parameter is specified by using one of the following
              values:</p> <ul> <li> <p> <code>ssh-rsa</code> </p> </li> <li> <p> <code>ssh-ed25519</code>
              </p> </li> <li> <p> <code>ecdsa-sha2-nistp256</code> </p> </li> <li>
              <p> <code>ecdsa-sha2-nistp384</code> </p> </li> <li> <p> <code>ecdsa-sha2-nistp521</code>
              </p> </li> </ul>
        DateImported:
          allOf:
          - $ref: '#/components/schemas/DateImported'
          - description: The date on which the host key was added to the server.
      required:
      - Arn
      type: object
    ListedProfile:
      description: Returns the properties of the profile that was specified.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the specified profile.
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/ProfileId'
          - description: A unique identifier for the local or partner AS2 profile.
        As2Id:
          allOf:
          - $ref: '#/components/schemas/As2Id'
          - description: "The <code>As2Id</code> is the <i>AS2-name</i>, as defined\
              \ in the <a href=\"https://datatracker.ietf.org/doc/html/rfc4130\">RFC\
              \ 4130</a>. For inbound transfers, this is the <code>AS2-From</code>\
              \ header for the AS2 messages sent from the partner. For outbound connectors,\
              \ this is the <code>AS2-To</code> header for the AS2 messages sent to\
              \ the partner using the <code>StartFileTransfer</code> API operation.\
              \ This ID cannot include spaces."
        ProfileType:
          allOf:
          - $ref: '#/components/schemas/ProfileType'
          - description: "Indicates whether to list only <code>LOCAL</code> type profiles\
              \ or only <code>PARTNER</code> type profiles. If not supplied in the\
              \ request, the command lists all types of profiles."
      type: object
    ListedServer:
      description: Returns properties of a file transfer protocol-enabled server that
        was specified.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Specifies the unique Amazon Resource Name (ARN) for a server
              to be listed.
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: Specifies the domain of the storage system that is used for
              file transfers.
        IdentityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          - description: "<p>The mode of authentication for a server. The default\
              \ value is <code>SERVICE_MANAGED</code>, which allows you to store and\
              \ access user credentials within the Transfer Family service.</p> <p>Use\
              \ <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory\
              \ groups in Directory Service for Microsoft Active Directory or Microsoft\
              \ Active Directory in your on-premises environment or in Amazon Web\
              \ Services using AD Connector. This option also requires you to provide\
              \ a Directory ID by using the <code>IdentityProviderDetails</code> parameter.</p>\
              \ <p>Use the <code>API_GATEWAY</code> value to integrate with an identity\
              \ provider of your choosing. The <code>API_GATEWAY</code> setting requires\
              \ you to provide an Amazon API Gateway endpoint URL to call for authentication\
              \ by using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use\
              \ the <code>AWS_LAMBDA</code> value to directly use an Lambda function\
              \ as your identity provider. If you choose this value, you must specify\
              \ the ARN for the Lambda function in the <code>Function</code> parameter\
              \ for the <code>IdentityProviderDetails</code> data type.</p>"
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          - description: "Specifies the type of VPC endpoint that your server is connected\
              \ to. If your server is connected to a VPC endpoint, your server isn't\
              \ accessible over the public internet."
        LoggingRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that allows a server to turn on Amazon CloudWatch\
              \ logging for Amazon S3 or Amazon EFSevents. When set, you can view\
              \ user activity in your CloudWatch logs."
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: Specifies the unique system assigned identifier for the servers
              that were listed.
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The condition of the server that was described. A value\
              \ of <code>ONLINE</code> indicates that the server can accept jobs and\
              \ transfer files. A <code>State</code> value of <code>OFFLINE</code>\
              \ means that the server cannot perform file transfer operations.</p>\
              \ <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate\
              \ that the server is in an intermediate state, either not fully able\
              \ to respond, or not fully offline. The values of <code>START_FAILED</code>\
              \ or <code>STOP_FAILED</code> can indicate an error condition.</p>"
        UserCount:
          allOf:
          - $ref: '#/components/schemas/UserCount'
          - description: Specifies the number of users that are assigned to a server
              you specified with the <code>ServerId</code>.
      required:
      - Arn
      type: object
    SshPublicKeyCount:
      type: integer
    ListedUser:
      description: Returns properties of the user that you specify.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Provides the unique Amazon Resource Name (ARN) for the user
              that you want to learn about.
        HomeDirectory:
          allOf:
          - $ref: '#/components/schemas/HomeDirectory'
          - description: <p>The landing directory (folder) for a user when they log
              in to the server using the client.</p> <p>A <code>HomeDirectory</code>
              example is <code>/bucket_name/home/mydirectory</code>.</p>
        HomeDirectoryType:
          allOf:
          - $ref: '#/components/schemas/HomeDirectoryType'
          - description: "The type of landing directory (folder) that you want your\
              \ users' home directory to be when they log in to the server. If you\
              \ set it to <code>PATH</code>, the user will see the absolute Amazon\
              \ S3 bucket or EFS paths as is in their file transfer protocol clients.\
              \ If you set it <code>LOGICAL</code>, you need to provide mappings in\
              \ the <code>HomeDirectoryMappings</code> for how you want to make Amazon\
              \ S3 or Amazon EFS paths visible to your users."
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "<p>The Amazon Resource Name (ARN) of the Identity and Access\
              \ Management (IAM) role that controls your users' access to your Amazon\
              \ S3 bucket or Amazon EFS file system. The policies attached to this\
              \ role determine the level of access that you want to provide your users\
              \ when transferring files into and out of your Amazon S3 bucket or Amazon\
              \ EFS file system. The IAM role should also contain a trust relationship\
              \ that allows the server to access your resources when servicing your\
              \ users' transfer requests.</p> <note> <p>The IAM role that controls\
              \ your users' access to your Amazon S3 bucket for servers with <code>Domain=S3</code>,\
              \ or your EFS file system for servers with <code>Domain=EFS</code>.\
              \ </p> <p>The policies attached to this role determine the level of\
              \ access you want to provide your users when transferring files into\
              \ and out of your S3 buckets or EFS file systems.</p> </note>"
        SshPublicKeyCount:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyCount'
          - description: Specifies the number of SSH public keys stored for the user
              you specified.
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: Specifies the name of the user whose ARN was specified. User
              names are used for authentication purposes.
      required:
      - Arn
      type: object
    ListedWorkflow:
      description: "Contains the identifier, text description, and Amazon Resource\
        \ Name (ARN) for the workflow."
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
        Description:
          allOf:
          - $ref: '#/components/schemas/WorkflowDescription'
          - description: Specifies the text description for the workflow.
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: Specifies the unique Amazon Resource Name (ARN) for the workflow.
      type: object
    LogGroupName:
      maxLength: 512
      minLength: 1
      pattern: "[\\.\\-_/#A-Za-z0-9]*"
      type: string
    Message:
      type: string
    NullableRole:
      maxLength: 2048
      pattern: ^$|arn:.*role/.*
      type: string
    WorkflowDetail:
      description: "<p>Specifies the workflow ID for the workflow to assign and the\
        \ execution role that's used for executing the workflow.</p> <p>In addition\
        \ to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>\
        \ can also contain a workflow ID (and execution role) for a workflow to execute\
        \ on partial upload. A partial upload occurs when the server session disconnects\
        \ while the file is still being uploaded.</p>"
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: A unique identifier for the workflow.
        ExecutionRole:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "Includes the necessary permissions for S3, EFS, and Lambda\
              \ operations that Transfer can assume, so that all workflow steps can\
              \ operate on the required resources"
      required:
      - ExecutionRole
      - WorkflowId
      type: object
    OnPartialUploadWorkflowDetails:
      items:
        $ref: '#/components/schemas/WorkflowDetail'
      maxItems: 1
      type: array
    OnUploadWorkflowDetails:
      items:
        $ref: '#/components/schemas/WorkflowDetail'
      maxItems: 1
      type: array
    PassiveIp:
      maxLength: 15
      type: string
    PosixId:
      maximum: 4294967295
      minimum: 0
      type: integer
    SecondaryGids:
      items:
        $ref: '#/components/schemas/PosixId'
      maxItems: 16
      minItems: 0
      type: array
    Protocol:
      enum:
      - SFTP
      - FTP
      - FTPS
      - AS2
      type: string
    TlsSessionResumptionMode:
      enum:
      - DISABLED
      - ENABLED
      - ENFORCED
      type: string
    SetStatOption:
      enum:
      - DEFAULT
      - ENABLE_NO_OP
      type: string
    Response:
      type: string
    S3Bucket:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$"
      type: string
    S3Etag:
      maxLength: 65536
      minLength: 1
      pattern: ^.+$
      type: string
    S3Key:
      maxLength: 1024
      pattern: "[\\P{M}\\p{M}]*"
      type: string
    S3VersionId:
      maxLength: 1024
      minLength: 1
      pattern: ^.+$
      type: string
    S3TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    S3TagValue:
      maxLength: 256
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    S3Tag:
      description: Specifies the key-value pair that are assigned to a file during
        the execution of a Tagging step.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/S3TagKey'
          - description: The name assigned to the tag that you create.
        Value:
          allOf:
          - $ref: '#/components/schemas/S3TagValue'
          - description: The value that corresponds to the key.
      required:
      - Key
      - Value
      type: object
    S3Tags:
      items:
        $ref: '#/components/schemas/S3Tag'
      maxItems: 10
      minItems: 1
      type: array
    SecretId:
      maxLength: 2048
      minLength: 1
      type: string
    SecurityGroupId:
      maxLength: 20
      minLength: 11
      pattern: "^sg-[0-9a-f]{8,17}$"
      type: string
    SecurityPolicyOption:
      maxLength: 50
      type: string
    UserDetails:
      description: "Specifies the user name, server ID, and session ID for a workflow."
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: A unique string that identifies a Transfer Family user associated
              with a server.
        ServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: 'The system-assigned unique identifier for a Transfer server
              instance. '
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The system-assigned unique identifier for a session that
              corresponds to the workflow.
      required:
      - ServerId
      - UserName
      type: object
    SessionId:
      maxLength: 32
      minLength: 3
      pattern: "^[\\w-]*$"
      type: string
    SftpConnectorTrustedHostKeyList:
      items:
        $ref: '#/components/schemas/SftpConnectorTrustedHostKey'
      maxItems: 10
      minItems: 1
      type: array
    SftpConnectorTrustedHostKey:
      maxLength: 2048
      minLength: 1
      type: string
    SourceIp:
      maxLength: 32
      pattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
      type: string
    SshPublicKey:
      description: "Provides information about the public Secure Shell (SSH) key that\
        \ is associated with a Transfer Family user for the specific file transfer\
        \ protocol-enabled server (as identified by <code>ServerId</code>). The information\
        \ returned includes the date the key was imported, the public key contents,\
        \ and the public key ID. A user can store more than one SSH public key associated\
        \ with their user name on a specific server."
      properties:
        DateImported:
          allOf:
          - $ref: '#/components/schemas/DateImported'
          - description: Specifies the date that the public key was added to the Transfer
              Family user.
        SshPublicKeyBody:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyBody'
          - description: "<p>Specifies the content of the SSH public key as specified\
              \ by the <code>PublicKeyId</code>.</p> <p>Transfer Family accepts RSA,\
              \ ECDSA, and ED25519 keys.</p>"
        SshPublicKeyId:
          allOf:
          - $ref: '#/components/schemas/SshPublicKeyId'
          - description: Specifies the <code>SshPublicKeyId</code> parameter contains
              the identifier of the public key.
      required:
      - DateImported
      - SshPublicKeyBody
      - SshPublicKeyId
      type: object
    TransferId:
      maxLength: 512
      minLength: 1
      pattern: "^[0-9a-zA-Z./-]+$"
      type: string
    Status:
      type: string
    StatusCode:
      type: integer
    SubnetId:
      type: string
    TagKey:
      maxLength: 128
      type: string
    TagValue:
      maxLength: 256
      type: string
    Tag:
      description: "Creates a key-value pair for a specific resource. Tags are metadata\
        \ that you can use to search for and group a resource for various purposes.\
        \ You can apply tags to servers, users, and roles. A tag key can take more\
        \ than one value. For example, to group servers for accounting purposes, you\
        \ might create a tag called <code>Group</code> and assign the values <code>Research</code>\
        \ and <code>Accounting</code> to that group."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The name assigned to the tag that you create.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: Contains one or more values that you assigned to the key
              name you create.
      required:
      - Key
      - Value
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagStepDetails:
      description: <p>Each step type has its own <code>StepDetails</code> structure.</p>
        <p>The key/value pairs used to tag a file during the execution of a workflow
        step.</p>
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepName'
          - description: "The name of the step, used as an identifier."
        Tags:
          allOf:
          - $ref: '#/components/schemas/S3Tags'
          - description: Array that contains from 1 to 10 key/value pairs.
        SourceFileLocation:
          allOf:
          - $ref: '#/components/schemas/SourceFileLocation'
          - description: "<p>Specifies which file to use as input to the workflow\
              \ step: either the output from the previous step, or the originally\
              \ uploaded file for the workflow.</p> <ul> <li> <p>To use the previous\
              \ file as the input, enter <code>${previous.file}</code>. In this case,\
              \ this workflow step uses the output file from the previous workflow\
              \ step as input. This is the default value.</p> </li> <li> <p>To use\
              \ the originally uploaded file location as input for this step, enter\
              \ <code>${original.file}</code>.</p> </li> </ul>"
      type: object
    UserPassword:
      format: password
      maxLength: 1024
      type: string
    WorkflowStep:
      description: The basic building block of a workflow.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepType'
          - description: "<p> Currently, the following step types are supported. </p>\
              \ <ul> <li> <p> <b> <code>COPY</code> </b> - Copy the file to another\
              \ location.</p> </li> <li> <p> <b> <code>CUSTOM</code> </b> - Perform\
              \ a custom step with an Lambda function target.</p> </li> <li> <p> <b>\
              \ <code>DECRYPT</code> </b> - Decrypt a file that was encrypted before\
              \ it was uploaded.</p> </li> <li> <p> <b> <code>DELETE</code> </b> -\
              \ Delete the file.</p> </li> <li> <p> <b> <code>TAG</code> </b> - Add\
              \ a tag to the file.</p> </li> </ul>"
        CopyStepDetails:
          $ref: '#/components/schemas/WorkflowStep_CopyStepDetails'
        CustomStepDetails:
          $ref: '#/components/schemas/WorkflowStep_CustomStepDetails'
        DeleteStepDetails:
          $ref: '#/components/schemas/WorkflowStep_DeleteStepDetails'
        TagStepDetails:
          $ref: '#/components/schemas/WorkflowStep_TagStepDetails'
        DecryptStepDetails:
          $ref: '#/components/schemas/WorkflowStep_DecryptStepDetails'
      type: object
    CreateConnectorRequest_As2Config:
      allOf:
      - $ref: '#/components/schemas/As2ConnectorConfig'
      - description: A structure that contains the parameters for an AS2 connector
          object.
      example:
        Compression: ""
        MessageSubject: ""
        BasicAuthSecretId: ""
        PartnerProfileId: ""
        EncryptionAlgorithm: ""
        SigningAlgorithm: ""
        LocalProfileId: ""
        MdnResponse: ""
        MdnSigningAlgorithm: ""
    CreateConnectorRequest_SftpConfig:
      allOf:
      - $ref: '#/components/schemas/SftpConnectorConfig'
      - description: A structure that contains the parameters for an SFTP connector
          object.
      example:
        TrustedHostKeys: ""
        UserSecretId: ""
    CreateServerRequest_EndpointDetails:
      allOf:
      - $ref: '#/components/schemas/EndpointDetails'
      - description: "The virtual private cloud (VPC) endpoint settings that are configured\
          \ for your server. When you host your endpoint within your VPC, you can\
          \ make your endpoint accessible only to resources within your VPC, or you\
          \ can attach Elastic IP addresses and make your endpoint accessible to clients\
          \ over the internet. Your VPC's default security groups are automatically\
          \ assigned to your endpoint."
      example:
        AddressAllocationIds: ""
        VpcId: ""
        VpcEndpointId: ""
        SubnetIds: ""
        SecurityGroupIds: ""
    CreateServerRequest_IdentityProviderDetails:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderDetails'
      - description: "Required when <code>IdentityProviderType</code> is set to <code>AWS_DIRECTORY_SERVICE</code>,\
          \ <code>Amazon Web Services_LAMBDA</code> or <code>API_GATEWAY</code>. Accepts\
          \ an array containing all of the information required to use a directory\
          \ in <code>AWS_DIRECTORY_SERVICE</code> or invoke a customer-supplied authentication\
          \ API, including the API Gateway URL. Not required when <code>IdentityProviderType</code>\
          \ is set to <code>SERVICE_MANAGED</code>."
      example:
        Function: ""
        DirectoryId: ""
        InvocationRole: ""
        Url: ""
        SftpAuthenticationMethods: ""
    CreateServerRequest_ProtocolDetails:
      allOf:
      - $ref: '#/components/schemas/ProtocolDetails'
      - description: "<p>The protocol settings that are configured for your server.</p>\
          \ <ul> <li> <p> To indicate passive mode (for FTP and FTPS protocols), use\
          \ the <code>PassiveIp</code> parameter. Enter a single dotted-quad IPv4\
          \ address, such as the external IP address of a firewall, router, or load\
          \ balancer. </p> </li> <li> <p>To ignore the error that is generated when\
          \ the client attempts to use the <code>SETSTAT</code> command on a file\
          \ that you are uploading to an Amazon S3 bucket, use the <code>SetStatOption</code>\
          \ parameter. To have the Transfer Family server ignore the <code>SETSTAT</code>\
          \ command and upload files without needing to make any changes to your SFTP\
          \ client, set the value to <code>ENABLE_NO_OP</code>. If you set the <code>SetStatOption</code>\
          \ parameter to <code>ENABLE_NO_OP</code>, Transfer Family generates a log\
          \ entry to Amazon CloudWatch Logs, so that you can determine when the client\
          \ is making a <code>SETSTAT</code> call.</p> </li> <li> <p>To determine\
          \ whether your Transfer Family server resumes recent, negotiated sessions\
          \ through a unique session ID, use the <code>TlsSessionResumptionMode</code>\
          \ parameter.</p> </li> <li> <p> <code>As2Transports</code> indicates the\
          \ transport method for the AS2 messages. Currently, only HTTP is supported.</p>\
          \ </li> </ul>"
      example:
        As2Transports: ""
        PassiveIp: ""
        SetStatOption: ""
        TlsSessionResumptionMode: ""
    CreateServerRequest_WorkflowDetails:
      allOf:
      - $ref: '#/components/schemas/WorkflowDetails'
      - description: "<p>Specifies the workflow ID for the workflow to assign and\
          \ the execution role that's used for executing the workflow.</p> <p>In addition\
          \ to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>\
          \ can also contain a workflow ID (and execution role) for a workflow to\
          \ execute on partial upload. A partial upload occurs when the server session\
          \ disconnects while the file is still being uploaded.</p>"
      example:
        OnUpload: ""
        OnPartialUpload: ""
    CreateUserRequest_PosixProfile:
      allOf:
      - $ref: '#/components/schemas/PosixProfile'
      - description: "Specifies the full POSIX identity, including user ID (<code>Uid</code>),\
          \ group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>),\
          \ that controls your users' access to your Amazon EFS file systems. The\
          \ POSIX permissions that are set on files and directories in Amazon EFS\
          \ determine the level of access your users get when transferring files into\
          \ and out of your Amazon EFS file systems."
      example:
        Uid: ""
        SecondaryGids: ""
        Gid: ""
    DescribeAccessResponse_Access:
      allOf:
      - $ref: '#/components/schemas/DescribedAccess'
      - description: The external identifier of the server that the access is attached
          to.
      example:
        Policy: ""
        Role: ""
        HomeDirectory: ""
        HomeDirectoryType: ""
        HomeDirectoryMappings: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        ExternalId: ""
    DescribeAgreementResponse_Agreement:
      allOf:
      - $ref: '#/components/schemas/DescribedAgreement'
      - description: "The details for the specified agreement, returned as a <code>DescribedAgreement</code>\
          \ object."
      example:
        Status: ""
        AgreementId: ""
        Description: ""
        ServerId: ""
        BaseDirectory: ""
        AccessRole: ""
        PartnerProfileId: ""
        LocalProfileId: ""
        Arn: ""
        Tags: ""
    DescribeCertificateResponse_Certificate:
      allOf:
      - $ref: '#/components/schemas/DescribedCertificate'
      - description: "The details for the specified certificate, returned as an object."
      example:
        Status: ""
        InactiveDate: ""
        Usage: ""
        Description: ""
        CertificateId: ""
        NotBeforeDate: ""
        ActiveDate: ""
        NotAfterDate: ""
        Serial: ""
        Type: ""
        CertificateChain: ""
        Arn: ""
        Tags: ""
        Certificate: ""
    DescribeConnectorResponse_Connector:
      allOf:
      - $ref: '#/components/schemas/DescribedConnector'
      - description: The structure that contains the details of the connector.
      example:
        As2Config:
          Compression: ""
          MessageSubject: ""
          BasicAuthSecretId: ""
          PartnerProfileId: ""
          EncryptionAlgorithm: ""
          SigningAlgorithm: ""
          LocalProfileId: ""
          MdnResponse: ""
          MdnSigningAlgorithm: ""
        LoggingRole: ""
        AccessRole: ""
        SftpConfig:
          TrustedHostKeys: ""
          UserSecretId: ""
        Arn: ""
        Url: ""
        Tags: ""
        ConnectorId: ""
    DescribeExecutionResponse_Execution:
      allOf:
      - $ref: '#/components/schemas/DescribedExecution'
      - description: The structure that contains the details of the workflow' execution.
      example:
        Status: ""
        Results:
          Steps: ""
          OnExceptionSteps: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        LoggingConfiguration:
          LoggingRole: ""
          LogGroupName: ""
        InitialFileLocation:
          EfsFileLocation:
            Path: ""
            FileSystemId: ""
          S3FileLocation:
            VersionId: ""
            Etag: ""
            Bucket: ""
            Key: ""
        ExecutionRole: ""
        ServiceMetadata:
          UserDetails:
            UserName: ""
            ServerId: ""
            SessionId: ""
        ExecutionId: ""
    DescribeHostKeyResponse_HostKey:
      allOf:
      - $ref: '#/components/schemas/DescribedHostKey'
      - description: Returns the details for the specified host key.
      example:
        Type: ""
        HostKeyId: ""
        Description: ""
        HostKeyFingerprint: ""
        Arn: ""
        DateImported: ""
        Tags: ""
    DescribeProfileResponse_Profile:
      allOf:
      - $ref: '#/components/schemas/DescribedProfile'
      - description: "The details of the specified profile, returned as an object."
      example:
        ProfileId: ""
        ProfileType: ""
        As2Id: ""
        CertificateIds: ""
        Arn: ""
        Tags: ""
    DescribeSecurityPolicyResponse_SecurityPolicy:
      allOf:
      - $ref: '#/components/schemas/DescribedSecurityPolicy'
      - description: An array containing the properties of the security policy.
      example:
        SshCiphers: ""
        SshKexs: ""
        TlsCiphers: ""
        Fips: ""
        SecurityPolicyName: ""
        SshMacs: ""
    DescribeServerResponse_Server:
      allOf:
      - $ref: '#/components/schemas/DescribedServer'
      - description: An array containing the properties of a server with the <code>ServerID</code>
          you specified.
      example:
        LoggingRole: ""
        Protocols: ""
        HostKeyFingerprint: ""
        UserCount: ""
        IdentityProviderDetails:
          Function: ""
          DirectoryId: ""
          InvocationRole: ""
          Url: ""
          SftpAuthenticationMethods: ""
        EndpointDetails:
          AddressAllocationIds: ""
          VpcId: ""
          VpcEndpointId: ""
          SubnetIds: ""
          SecurityGroupIds: ""
        StructuredLogDestinations: ""
        PreAuthenticationLoginBanner: ""
        ServerId: ""
        PostAuthenticationLoginBanner: ""
        State: ""
        EndpointType: ""
        SecurityPolicyName: ""
        ProtocolDetails:
          As2Transports: ""
          PassiveIp: ""
          SetStatOption: ""
          TlsSessionResumptionMode: ""
        WorkflowDetails:
          OnUpload: ""
          OnPartialUpload: ""
        Arn: ""
        Domain: ""
        IdentityProviderType: ""
        Tags: ""
        Certificate: ""
    DescribeUserResponse_User:
      allOf:
      - $ref: '#/components/schemas/DescribedUser'
      - description: An array containing the properties of the Transfer Family user
          for the <code>ServerID</code> value that you specified.
      example:
        Policy: ""
        Role: ""
        HomeDirectory: ""
        HomeDirectoryType: ""
        UserName: ""
        HomeDirectoryMappings: ""
        PosixProfile:
          Uid: ""
          SecondaryGids: ""
          Gid: ""
        SshPublicKeys: ""
        Arn: ""
        Tags: ""
    DescribeWorkflowResponse_Workflow:
      allOf:
      - $ref: '#/components/schemas/DescribedWorkflow'
      - description: The structure that contains the details of the workflow.
      example:
        Steps: ""
        Description: ""
        Arn: ""
        WorkflowId: ""
        OnExceptionSteps: ""
        Tags: ""
    UpdateServerRequest_IdentityProviderDetails:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderDetails'
      - description: An array containing all of the information required to call a
          customer's authentication API method.
      example:
        Function: ""
        DirectoryId: ""
        InvocationRole: ""
        Url: ""
        SftpAuthenticationMethods: ""
    UpdateServerRequest_WorkflowDetails:
      allOf:
      - $ref: '#/components/schemas/WorkflowDetails'
      - description: "<p>Specifies the workflow ID for the workflow to assign and\
          \ the execution role that's used for executing the workflow.</p> <p>In addition\
          \ to a workflow to execute when a file is uploaded completely, <code>WorkflowDetails</code>\
          \ can also contain a workflow ID (and execution role) for a workflow to\
          \ execute on partial upload. A partial upload occurs when the server session\
          \ disconnects while the file is still being uploaded.</p> <p>To remove an\
          \ associated workflow from a server, you can provide an empty <code>OnUpload</code>\
          \ object, as in the following example.</p> <p> <code>aws transfer update-server\
          \ --server-id s-01234567890abcdef --workflow-details '{\"OnUpload\":[]}'</code>\
          \ </p>"
      example:
        OnUpload: ""
        OnPartialUpload: ""
    UpdateUserRequest_PosixProfile:
      allOf:
      - $ref: '#/components/schemas/PosixProfile'
      - description: "Specifies the full POSIX identity, including user ID (<code>Uid</code>),\
          \ group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>),\
          \ that controls your users' access to your Amazon Elastic File Systems (Amazon\
          \ EFS). The POSIX permissions that are set on files and directories in your\
          \ file system determines the level of access your users get when transferring\
          \ files into and out of your Amazon EFS file systems."
      example:
        Uid: ""
        SecondaryGids: ""
        Gid: ""
    InputFileLocation_S3FileLocation:
      allOf:
      - $ref: '#/components/schemas/S3InputFileLocation'
      - description: Specifies the details for the Amazon S3 file that's being copied
          or decrypted.
    InputFileLocation_EfsFileLocation:
      allOf:
      - $ref: '#/components/schemas/EfsFileLocation'
      - description: Specifies the details for the Amazon Elastic File System (Amazon
          EFS) file that's being decrypted.
    CopyStepDetails_DestinationFileLocation:
      allOf:
      - $ref: '#/components/schemas/InputFileLocation'
      - description: "<p>Specifies the location for the file being copied. Use <code>${Transfer:UserName}</code>\
          \ or <code>${Transfer:UploadDate}</code> in this field to parametrize the\
          \ destination prefix by username or uploaded date.</p> <ul> <li> <p>Set\
          \ the value of <code>DestinationFileLocation</code> to <code>${Transfer:UserName}</code>\
          \ to copy uploaded files to an Amazon S3 bucket that is prefixed with the\
          \ name of the Transfer Family user that uploaded the file.</p> </li> <li>\
          \ <p>Set the value of <code>DestinationFileLocation</code> to <code>${Transfer:UploadDate}</code>\
          \ to copy uploaded files to an Amazon S3 bucket that is prefixed with the\
          \ date of the upload.</p> <note> <p>The system resolves <code>UploadDate</code>\
          \ to a date format of <i>YYYY-MM-DD</i>, based on the date the file is uploaded\
          \ in UTC.</p> </note> </li> </ul>"
    DecryptStepDetails_DestinationFileLocation:
      allOf:
      - $ref: '#/components/schemas/InputFileLocation'
      - description: "<p>Specifies the location for the file being decrypted. Use\
          \ <code>${Transfer:UserName}</code> or <code>${Transfer:UploadDate}</code>\
          \ in this field to parametrize the destination prefix by username or uploaded\
          \ date.</p> <ul> <li> <p>Set the value of <code>DestinationFileLocation</code>\
          \ to <code>${Transfer:UserName}</code> to decrypt uploaded files to an Amazon\
          \ S3 bucket that is prefixed with the name of the Transfer Family user that\
          \ uploaded the file.</p> </li> <li> <p>Set the value of <code>DestinationFileLocation</code>\
          \ to <code>${Transfer:UploadDate}</code> to decrypt uploaded files to an\
          \ Amazon S3 bucket that is prefixed with the date of the upload.</p> <note>\
          \ <p>The system resolves <code>UploadDate</code> to a date format of <i>YYYY-MM-DD</i>,\
          \ based on the date the file is uploaded in UTC.</p> </note> </li> </ul>"
    DescribedExecution_InitialFileLocation:
      allOf:
      - $ref: '#/components/schemas/FileLocation'
      - description: "A structure that describes the Amazon S3 or EFS file location.\
          \ This is the file location when the execution begins: if the file is being\
          \ copied, this is the initial (as opposed to destination) file location."
      example:
        EfsFileLocation:
          Path: ""
          FileSystemId: ""
        S3FileLocation:
          VersionId: ""
          Etag: ""
          Bucket: ""
          Key: ""
    DescribedExecution_ServiceMetadata:
      allOf:
      - $ref: '#/components/schemas/ServiceMetadata'
      - description: A container object for the session details that are associated
          with a workflow.
      example:
        UserDetails:
          UserName: ""
          ServerId: ""
          SessionId: ""
    DescribedExecution_LoggingConfiguration:
      allOf:
      - $ref: '#/components/schemas/LoggingConfiguration'
      - description: The IAM logging role associated with the execution.
      example:
        LoggingRole: ""
        LogGroupName: ""
    DescribedExecution_Results:
      allOf:
      - $ref: '#/components/schemas/ExecutionResults'
      - description: "A structure that describes the execution results. This includes\
          \ a list of the steps along with the details of each step, error type and\
          \ message (if any), and the <code>OnExceptionSteps</code> structure."
      example:
        Steps: ""
        OnExceptionSteps: ""
    DescribedServer_IdentityProviderDetails:
      allOf:
      - $ref: '#/components/schemas/IdentityProviderDetails'
      - description: Specifies information to call a customer-supplied authentication
          API. This field is not populated when the <code>IdentityProviderType</code>
          of a server is <code>AWS_DIRECTORY_SERVICE</code> or <code>SERVICE_MANAGED</code>.
      example:
        Function: ""
        DirectoryId: ""
        InvocationRole: ""
        Url: ""
        SftpAuthenticationMethods: ""
    DescribedUser_PosixProfile:
      allOf:
      - $ref: '#/components/schemas/PosixProfile'
      - description: "Specifies the full POSIX identity, including user ID (<code>Uid</code>),\
          \ group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>),\
          \ that controls your users' access to your Amazon Elastic File System (Amazon\
          \ EFS) file systems. The POSIX permissions that are set on files and directories\
          \ in your file system determine the level of access your users get when\
          \ transferring files into and out of your Amazon EFS file systems."
      example:
        Uid: ""
        SecondaryGids: ""
        Gid: ""
    FileLocation_S3FileLocation:
      allOf:
      - $ref: '#/components/schemas/S3FileLocation'
      - description: "Specifies the S3 details for the file being used, such as bucket,\
          \ ETag, and so forth."
      example:
        VersionId: ""
        Etag: ""
        Bucket: ""
        Key: ""
    FileLocation_EfsFileLocation:
      allOf:
      - $ref: '#/components/schemas/EfsFileLocation'
      - description: Specifies the Amazon EFS identifier and the path for the file
          being used.
      example:
        Path: ""
        FileSystemId: ""
    ServiceMetadata_UserDetails:
      allOf:
      - $ref: '#/components/schemas/UserDetails'
      - description: "The Server ID (<code>ServerId</code>), Session ID (<code>SessionId</code>)\
          \ and user (<code>UserName</code>) make up the <code>UserDetails</code>."
      example:
        UserName: ""
        ServerId: ""
        SessionId: ""
    ExecutionStepResult_Error:
      allOf:
      - $ref: '#/components/schemas/ExecutionError'
      - description: "Specifies the details for an error, if it occurred during execution\
          \ of the specified workflow step."
    WorkflowStep_CopyStepDetails:
      allOf:
      - $ref: '#/components/schemas/CopyStepDetails'
      - description: "<p>Details for a step that performs a file copy.</p> <p> Consists\
          \ of the following values: </p> <ul> <li> <p>A description</p> </li> <li>\
          \ <p>An Amazon S3 location for the destination of the file copy.</p> </li>\
          \ <li> <p>A flag that indicates whether to overwrite an existing file of\
          \ the same name. The default is <code>FALSE</code>.</p> </li> </ul>"
    WorkflowStep_CustomStepDetails:
      allOf:
      - $ref: '#/components/schemas/CustomStepDetails'
      - description: "<p>Details for a step that invokes an Lambda function.</p> <p>Consists\
          \ of the Lambda function's name, target, and timeout (in seconds). </p>"
    WorkflowStep_DeleteStepDetails:
      allOf:
      - $ref: '#/components/schemas/DeleteStepDetails'
      - description: Details for a step that deletes the file.
    WorkflowStep_TagStepDetails:
      allOf:
      - $ref: '#/components/schemas/TagStepDetails'
      - description: <p>Details for a step that creates one or more tags.</p> <p>You
          specify one or more tags. Each tag contains a key-value pair.</p>
    WorkflowStep_DecryptStepDetails:
      allOf:
      - $ref: '#/components/schemas/DecryptStepDetails'
      - description: "<p>Details for a step that decrypts an encrypted file.</p> <p>Consists\
          \ of the following values:</p> <ul> <li> <p>A descriptive name</p> </li>\
          \ <li> <p>An Amazon S3 or Amazon Elastic File System (Amazon EFS) location\
          \ for the source file to decrypt.</p> </li> <li> <p>An S3 or Amazon EFS\
          \ location for the destination of the file decryption.</p> </li> <li> <p>A\
          \ flag that indicates whether to overwrite an existing file of the same\
          \ name. The default is <code>FALSE</code>.</p> </li> <li> <p>The type of\
          \ encryption that's used. Currently, only PGP encryption is supported.</p>\
          \ </li> </ul>"
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

