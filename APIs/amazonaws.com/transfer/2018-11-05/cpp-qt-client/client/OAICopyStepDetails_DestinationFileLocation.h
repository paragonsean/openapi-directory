/**
 * AWS Transfer Family
 * Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement 2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer workflows to Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics, machine learning, and archiving. Getting started with Transfer Family is easy since there is no infrastructure to buy and set up.
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICopyStepDetails_DestinationFileLocation.h
 *
 * 
 */

#ifndef OAICopyStepDetails_DestinationFileLocation_H
#define OAICopyStepDetails_DestinationFileLocation_H

#include <QJsonObject>

#include "OAIInputFileLocation_EfsFileLocation.h"
#include "OAIInputFileLocation_S3FileLocation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInputFileLocation_S3FileLocation;
class OAIInputFileLocation_EfsFileLocation;

class OAICopyStepDetails_DestinationFileLocation : public OAIObject {
public:
    OAICopyStepDetails_DestinationFileLocation();
    OAICopyStepDetails_DestinationFileLocation(QString json);
    ~OAICopyStepDetails_DestinationFileLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInputFileLocation_S3FileLocation getS3FileLocation() const;
    void setS3FileLocation(const OAIInputFileLocation_S3FileLocation &s3_file_location);
    bool is_s3_file_location_Set() const;
    bool is_s3_file_location_Valid() const;

    OAIInputFileLocation_EfsFileLocation getEfsFileLocation() const;
    void setEfsFileLocation(const OAIInputFileLocation_EfsFileLocation &efs_file_location);
    bool is_efs_file_location_Set() const;
    bool is_efs_file_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInputFileLocation_S3FileLocation m_s3_file_location;
    bool m_s3_file_location_isSet;
    bool m_s3_file_location_isValid;

    OAIInputFileLocation_EfsFileLocation m_efs_file_location;
    bool m_efs_file_location_isSet;
    bool m_efs_file_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICopyStepDetails_DestinationFileLocation)

#endif // OAICopyStepDetails_DestinationFileLocation_H
