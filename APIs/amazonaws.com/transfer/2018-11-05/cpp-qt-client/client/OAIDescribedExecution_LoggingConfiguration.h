/**
 * AWS Transfer Family
 * Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement 2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer workflows to Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics, machine learning, and archiving. Getting started with Transfer Family is easy since there is no infrastructure to buy and set up.
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribedExecution_LoggingConfiguration.h
 *
 * 
 */

#ifndef OAIDescribedExecution_LoggingConfiguration_H
#define OAIDescribedExecution_LoggingConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribedExecution_LoggingConfiguration : public OAIObject {
public:
    OAIDescribedExecution_LoggingConfiguration();
    OAIDescribedExecution_LoggingConfiguration(QString json);
    ~OAIDescribedExecution_LoggingConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLoggingRole() const;
    void setLoggingRole(const QString &logging_role);
    bool is_logging_role_Set() const;
    bool is_logging_role_Valid() const;

    QString getLogGroupName() const;
    void setLogGroupName(const QString &log_group_name);
    bool is_log_group_name_Set() const;
    bool is_log_group_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_logging_role;
    bool m_logging_role_isSet;
    bool m_logging_role_isValid;

    QString m_log_group_name;
    bool m_log_group_name_isSet;
    bool m_log_group_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribedExecution_LoggingConfiguration)

#endif // OAIDescribedExecution_LoggingConfiguration_H
