/**
 * AWS Transfer Family
 * Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement 2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer workflows to Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics, machine learning, and archiving. Getting started with Transfer Family is easy since there is no infrastructure to buy and set up.
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISshPublicKey.h
 *
 * Provides information about the public Secure Shell (SSH) key that is associated with a Transfer Family user for the specific file transfer protocol-enabled server (as identified by &lt;code&gt;ServerId&lt;/code&gt;). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific server.
 */

#ifndef OAISshPublicKey_H
#define OAISshPublicKey_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISshPublicKey : public OAIObject {
public:
    OAISshPublicKey();
    OAISshPublicKey(QString json);
    ~OAISshPublicKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getDateImported() const;
    void setDateImported(const QDateTime &date_imported);
    bool is_date_imported_Set() const;
    bool is_date_imported_Valid() const;

    QString getSshPublicKeyBody() const;
    void setSshPublicKeyBody(const QString &ssh_public_key_body);
    bool is_ssh_public_key_body_Set() const;
    bool is_ssh_public_key_body_Valid() const;

    QString getSshPublicKeyId() const;
    void setSshPublicKeyId(const QString &ssh_public_key_id);
    bool is_ssh_public_key_id_Set() const;
    bool is_ssh_public_key_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_date_imported;
    bool m_date_imported_isSet;
    bool m_date_imported_isValid;

    QString m_ssh_public_key_body;
    bool m_ssh_public_key_body_isSet;
    bool m_ssh_public_key_body_isValid;

    QString m_ssh_public_key_id;
    bool m_ssh_public_key_id_isSet;
    bool m_ssh_public_key_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISshPublicKey)

#endif // OAISshPublicKey_H
