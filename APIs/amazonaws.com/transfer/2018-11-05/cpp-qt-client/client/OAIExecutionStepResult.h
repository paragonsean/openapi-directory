/**
 * AWS Transfer Family
 * Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement 2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer workflows to Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics, machine learning, and archiving. Getting started with Transfer Family is easy since there is no infrastructure to buy and set up.
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecutionStepResult.h
 *
 * Specifies the following details for the step: error (if any), outputs (if any), and the step type.
 */

#ifndef OAIExecutionStepResult_H
#define OAIExecutionStepResult_H

#include <QJsonObject>

#include "OAIExecutionStepResult_Error.h"
#include "OAIWorkflowStepType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExecutionStepResult_Error;

class OAIExecutionStepResult : public OAIObject {
public:
    OAIExecutionStepResult();
    OAIExecutionStepResult(QString json);
    ~OAIExecutionStepResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWorkflowStepType getStepType() const;
    void setStepType(const OAIWorkflowStepType &step_type);
    bool is_step_type_Set() const;
    bool is_step_type_Valid() const;

    QString getOutputs() const;
    void setOutputs(const QString &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    OAIExecutionStepResult_Error getError() const;
    void setError(const OAIExecutionStepResult_Error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWorkflowStepType m_step_type;
    bool m_step_type_isSet;
    bool m_step_type_isValid;

    QString m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    OAIExecutionStepResult_Error m_error;
    bool m_error_isSet;
    bool m_error_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecutionStepResult)

#endif // OAIExecutionStepResult_H
