/**
 * AWS Transfer Family
 * Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3) or Amazon EFS. Additionally, you can use Applicability Statement 2 (AS2) to transfer files into and out of Amazon S3. Amazon Web Services helps you seamlessly migrate your file transfer workflows to Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services for processing, analytics, machine learning, and archiving. Getting started with Transfer Family is easy since there is no infrastructure to buy and set up.
 *
 * The version of the OpenAPI document: 2018-11-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeProfileResponse_Profile.h
 *
 * 
 */

#ifndef OAIDescribeProfileResponse_Profile_H
#define OAIDescribeProfileResponse_Profile_H

#include <QJsonObject>

#include "OAIProfileType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeProfileResponse_Profile : public OAIObject {
public:
    OAIDescribeProfileResponse_Profile();
    OAIDescribeProfileResponse_Profile(QString json);
    ~OAIDescribeProfileResponse_Profile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getProfileId() const;
    void setProfileId(const QString &profile_id);
    bool is_profile_id_Set() const;
    bool is_profile_id_Valid() const;

    OAIProfileType getProfileType() const;
    void setProfileType(const OAIProfileType &profile_type);
    bool is_profile_type_Set() const;
    bool is_profile_type_Valid() const;

    QString getAs2Id() const;
    void setAs2Id(const QString &as2_id);
    bool is_as2_id_Set() const;
    bool is_as2_id_Valid() const;

    QList getCertificateIds() const;
    void setCertificateIds(const QList &certificate_ids);
    bool is_certificate_ids_Set() const;
    bool is_certificate_ids_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_profile_id;
    bool m_profile_id_isSet;
    bool m_profile_id_isValid;

    OAIProfileType m_profile_type;
    bool m_profile_type_isSet;
    bool m_profile_type_isValid;

    QString m_as2_id;
    bool m_as2_id_isSet;
    bool m_as2_id_isValid;

    QList m_certificate_ids;
    bool m_certificate_ids_isSet;
    bool m_certificate_ids_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeProfileResponse_Profile)

#endif // OAIDescribeProfileResponse_Profile_H
