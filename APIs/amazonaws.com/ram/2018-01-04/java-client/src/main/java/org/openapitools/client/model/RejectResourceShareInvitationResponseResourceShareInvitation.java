/*
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ResourceShareInvitationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RejectResourceShareInvitationResponseResourceShareInvitation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:59.709480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RejectResourceShareInvitationResponseResourceShareInvitation {
  public static final String SERIALIZED_NAME_RESOURCE_SHARE_INVITATION_ARN = "resourceShareInvitationArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_INVITATION_ARN)
  private String resourceShareInvitationArn;

  public static final String SERIALIZED_NAME_RESOURCE_SHARE_NAME = "resourceShareName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_NAME)
  private String resourceShareName;

  public static final String SERIALIZED_NAME_RESOURCE_SHARE_ARN = "resourceShareArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_ARN)
  private String resourceShareArn;

  public static final String SERIALIZED_NAME_SENDER_ACCOUNT_ID = "senderAccountId";
  @SerializedName(SERIALIZED_NAME_SENDER_ACCOUNT_ID)
  private String senderAccountId;

  public static final String SERIALIZED_NAME_RECEIVER_ACCOUNT_ID = "receiverAccountId";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ACCOUNT_ID)
  private String receiverAccountId;

  public static final String SERIALIZED_NAME_INVITATION_TIMESTAMP = "invitationTimestamp";
  @SerializedName(SERIALIZED_NAME_INVITATION_TIMESTAMP)
  private OffsetDateTime invitationTimestamp;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ResourceShareInvitationStatus status;

  public static final String SERIALIZED_NAME_RESOURCE_SHARE_ASSOCIATIONS = "resourceShareAssociations";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_ASSOCIATIONS)
  private List resourceShareAssociations;

  public static final String SERIALIZED_NAME_RECEIVER_ARN = "receiverArn";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ARN)
  private String receiverArn;

  public RejectResourceShareInvitationResponseResourceShareInvitation() {
  }

  public RejectResourceShareInvitationResponseResourceShareInvitation resourceShareInvitationArn(String resourceShareInvitationArn) {
    this.resourceShareInvitationArn = resourceShareInvitationArn;
    return this;
  }

  /**
   * Get resourceShareInvitationArn
   * @return resourceShareInvitationArn
   */
  @javax.annotation.Nullable
  public String getResourceShareInvitationArn() {
    return resourceShareInvitationArn;
  }

  public void setResourceShareInvitationArn(String resourceShareInvitationArn) {
    this.resourceShareInvitationArn = resourceShareInvitationArn;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation resourceShareName(String resourceShareName) {
    this.resourceShareName = resourceShareName;
    return this;
  }

  /**
   * Get resourceShareName
   * @return resourceShareName
   */
  @javax.annotation.Nullable
  public String getResourceShareName() {
    return resourceShareName;
  }

  public void setResourceShareName(String resourceShareName) {
    this.resourceShareName = resourceShareName;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation resourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
    return this;
  }

  /**
   * Get resourceShareArn
   * @return resourceShareArn
   */
  @javax.annotation.Nullable
  public String getResourceShareArn() {
    return resourceShareArn;
  }

  public void setResourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation senderAccountId(String senderAccountId) {
    this.senderAccountId = senderAccountId;
    return this;
  }

  /**
   * Get senderAccountId
   * @return senderAccountId
   */
  @javax.annotation.Nullable
  public String getSenderAccountId() {
    return senderAccountId;
  }

  public void setSenderAccountId(String senderAccountId) {
    this.senderAccountId = senderAccountId;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation receiverAccountId(String receiverAccountId) {
    this.receiverAccountId = receiverAccountId;
    return this;
  }

  /**
   * Get receiverAccountId
   * @return receiverAccountId
   */
  @javax.annotation.Nullable
  public String getReceiverAccountId() {
    return receiverAccountId;
  }

  public void setReceiverAccountId(String receiverAccountId) {
    this.receiverAccountId = receiverAccountId;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation invitationTimestamp(OffsetDateTime invitationTimestamp) {
    this.invitationTimestamp = invitationTimestamp;
    return this;
  }

  /**
   * Get invitationTimestamp
   * @return invitationTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInvitationTimestamp() {
    return invitationTimestamp;
  }

  public void setInvitationTimestamp(OffsetDateTime invitationTimestamp) {
    this.invitationTimestamp = invitationTimestamp;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation status(ResourceShareInvitationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ResourceShareInvitationStatus getStatus() {
    return status;
  }

  public void setStatus(ResourceShareInvitationStatus status) {
    this.status = status;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation resourceShareAssociations(List resourceShareAssociations) {
    this.resourceShareAssociations = resourceShareAssociations;
    return this;
  }

  /**
   * Get resourceShareAssociations
   * @return resourceShareAssociations
   */
  @javax.annotation.Nullable
  public List getResourceShareAssociations() {
    return resourceShareAssociations;
  }

  public void setResourceShareAssociations(List resourceShareAssociations) {
    this.resourceShareAssociations = resourceShareAssociations;
  }


  public RejectResourceShareInvitationResponseResourceShareInvitation receiverArn(String receiverArn) {
    this.receiverArn = receiverArn;
    return this;
  }

  /**
   * Get receiverArn
   * @return receiverArn
   */
  @javax.annotation.Nullable
  public String getReceiverArn() {
    return receiverArn;
  }

  public void setReceiverArn(String receiverArn) {
    this.receiverArn = receiverArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RejectResourceShareInvitationResponseResourceShareInvitation rejectResourceShareInvitationResponseResourceShareInvitation = (RejectResourceShareInvitationResponseResourceShareInvitation) o;
    return Objects.equals(this.resourceShareInvitationArn, rejectResourceShareInvitationResponseResourceShareInvitation.resourceShareInvitationArn) &&
        Objects.equals(this.resourceShareName, rejectResourceShareInvitationResponseResourceShareInvitation.resourceShareName) &&
        Objects.equals(this.resourceShareArn, rejectResourceShareInvitationResponseResourceShareInvitation.resourceShareArn) &&
        Objects.equals(this.senderAccountId, rejectResourceShareInvitationResponseResourceShareInvitation.senderAccountId) &&
        Objects.equals(this.receiverAccountId, rejectResourceShareInvitationResponseResourceShareInvitation.receiverAccountId) &&
        Objects.equals(this.invitationTimestamp, rejectResourceShareInvitationResponseResourceShareInvitation.invitationTimestamp) &&
        Objects.equals(this.status, rejectResourceShareInvitationResponseResourceShareInvitation.status) &&
        Objects.equals(this.resourceShareAssociations, rejectResourceShareInvitationResponseResourceShareInvitation.resourceShareAssociations) &&
        Objects.equals(this.receiverArn, rejectResourceShareInvitationResponseResourceShareInvitation.receiverArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceShareInvitationArn, resourceShareName, resourceShareArn, senderAccountId, receiverAccountId, invitationTimestamp, status, resourceShareAssociations, receiverArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RejectResourceShareInvitationResponseResourceShareInvitation {\n");
    sb.append("    resourceShareInvitationArn: ").append(toIndentedString(resourceShareInvitationArn)).append("\n");
    sb.append("    resourceShareName: ").append(toIndentedString(resourceShareName)).append("\n");
    sb.append("    resourceShareArn: ").append(toIndentedString(resourceShareArn)).append("\n");
    sb.append("    senderAccountId: ").append(toIndentedString(senderAccountId)).append("\n");
    sb.append("    receiverAccountId: ").append(toIndentedString(receiverAccountId)).append("\n");
    sb.append("    invitationTimestamp: ").append(toIndentedString(invitationTimestamp)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    resourceShareAssociations: ").append(toIndentedString(resourceShareAssociations)).append("\n");
    sb.append("    receiverArn: ").append(toIndentedString(receiverArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resourceShareInvitationArn");
    openapiFields.add("resourceShareName");
    openapiFields.add("resourceShareArn");
    openapiFields.add("senderAccountId");
    openapiFields.add("receiverAccountId");
    openapiFields.add("invitationTimestamp");
    openapiFields.add("status");
    openapiFields.add("resourceShareAssociations");
    openapiFields.add("receiverArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RejectResourceShareInvitationResponseResourceShareInvitation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RejectResourceShareInvitationResponseResourceShareInvitation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RejectResourceShareInvitationResponseResourceShareInvitation is not found in the empty JSON string", RejectResourceShareInvitationResponseResourceShareInvitation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RejectResourceShareInvitationResponseResourceShareInvitation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RejectResourceShareInvitationResponseResourceShareInvitation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `resourceShareInvitationArn`
      if (jsonObj.get("resourceShareInvitationArn") != null && !jsonObj.get("resourceShareInvitationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("resourceShareInvitationArn"));
      }
      // validate the optional field `resourceShareName`
      if (jsonObj.get("resourceShareName") != null && !jsonObj.get("resourceShareName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("resourceShareName"));
      }
      // validate the optional field `resourceShareArn`
      if (jsonObj.get("resourceShareArn") != null && !jsonObj.get("resourceShareArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("resourceShareArn"));
      }
      // validate the optional field `senderAccountId`
      if (jsonObj.get("senderAccountId") != null && !jsonObj.get("senderAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("senderAccountId"));
      }
      // validate the optional field `receiverAccountId`
      if (jsonObj.get("receiverAccountId") != null && !jsonObj.get("receiverAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("receiverAccountId"));
      }
      // validate the optional field `invitationTimestamp`
      if (jsonObj.get("invitationTimestamp") != null && !jsonObj.get("invitationTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("invitationTimestamp"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ResourceShareInvitationStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `resourceShareAssociations`
      if (jsonObj.get("resourceShareAssociations") != null && !jsonObj.get("resourceShareAssociations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourceShareAssociations"));
      }
      // validate the optional field `receiverArn`
      if (jsonObj.get("receiverArn") != null && !jsonObj.get("receiverArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("receiverArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RejectResourceShareInvitationResponseResourceShareInvitation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RejectResourceShareInvitationResponseResourceShareInvitation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RejectResourceShareInvitationResponseResourceShareInvitation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RejectResourceShareInvitationResponseResourceShareInvitation.class));

       return (TypeAdapter<T>) new TypeAdapter<RejectResourceShareInvitationResponseResourceShareInvitation>() {
           @Override
           public void write(JsonWriter out, RejectResourceShareInvitationResponseResourceShareInvitation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RejectResourceShareInvitationResponseResourceShareInvitation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RejectResourceShareInvitationResponseResourceShareInvitation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RejectResourceShareInvitationResponseResourceShareInvitation
   * @throws IOException if the JSON string is invalid with respect to RejectResourceShareInvitationResponseResourceShareInvitation
   */
  public static RejectResourceShareInvitationResponseResourceShareInvitation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RejectResourceShareInvitationResponseResourceShareInvitation.class);
  }

  /**
   * Convert an instance of RejectResourceShareInvitationResponseResourceShareInvitation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

