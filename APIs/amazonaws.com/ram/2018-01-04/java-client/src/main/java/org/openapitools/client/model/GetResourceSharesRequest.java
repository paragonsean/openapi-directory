/*
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TagFilter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetResourceSharesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:59.709480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetResourceSharesRequest {
  public static final String SERIALIZED_NAME_RESOURCE_SHARE_ARNS = "resourceShareArns";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_ARNS)
  private List<String> resourceShareArns = new ArrayList<>();

  /**
   * Specifies that you want to retrieve details of only those resource shares that have this status.
   */
  @JsonAdapter(ResourceShareStatusEnum.Adapter.class)
  public enum ResourceShareStatusEnum {
    PENDING("PENDING"),
    
    ACTIVE("ACTIVE"),
    
    FAILED("FAILED"),
    
    DELETING("DELETING"),
    
    DELETED("DELETED");

    private String value;

    ResourceShareStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResourceShareStatusEnum fromValue(String value) {
      for (ResourceShareStatusEnum b : ResourceShareStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResourceShareStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceShareStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResourceShareStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResourceShareStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResourceShareStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESOURCE_SHARE_STATUS = "resourceShareStatus";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_STATUS)
  private ResourceShareStatusEnum resourceShareStatus;

  /**
   * &lt;p&gt;Specifies that you want to retrieve details of only those resource shares that match the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt; &lt;code&gt;SELF&lt;/code&gt; &lt;/b&gt; – resource shares that your account shares with other accounts&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt; &lt;code&gt;OTHER-ACCOUNTS&lt;/code&gt; &lt;/b&gt; – resource shares that other accounts share with your account&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   */
  @JsonAdapter(ResourceOwnerEnum.Adapter.class)
  public enum ResourceOwnerEnum {
    SELF("SELF"),
    
    OTHER_ACCOUNTS("OTHER-ACCOUNTS");

    private String value;

    ResourceOwnerEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResourceOwnerEnum fromValue(String value) {
      for (ResourceOwnerEnum b : ResourceOwnerEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResourceOwnerEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceOwnerEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResourceOwnerEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResourceOwnerEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResourceOwnerEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESOURCE_OWNER = "resourceOwner";
  @SerializedName(SERIALIZED_NAME_RESOURCE_OWNER)
  private ResourceOwnerEnum resourceOwner;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TAG_FILTERS = "tagFilters";
  @SerializedName(SERIALIZED_NAME_TAG_FILTERS)
  private List<TagFilter> tagFilters = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "nextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "maxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_PERMISSION_ARN = "permissionArn";
  @SerializedName(SERIALIZED_NAME_PERMISSION_ARN)
  private String permissionArn;

  public static final String SERIALIZED_NAME_PERMISSION_VERSION = "permissionVersion";
  @SerializedName(SERIALIZED_NAME_PERMISSION_VERSION)
  private Integer permissionVersion;

  public GetResourceSharesRequest() {
  }

  public GetResourceSharesRequest resourceShareArns(List<String> resourceShareArns) {
    this.resourceShareArns = resourceShareArns;
    return this;
  }

  public GetResourceSharesRequest addResourceShareArnsItem(String resourceShareArnsItem) {
    if (this.resourceShareArns == null) {
      this.resourceShareArns = new ArrayList<>();
    }
    this.resourceShareArns.add(resourceShareArnsItem);
    return this;
  }

  /**
   * Specifies the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Names (ARNs)&lt;/a&gt; of individual resource shares that you want information about.
   * @return resourceShareArns
   */
  @javax.annotation.Nullable
  public List<String> getResourceShareArns() {
    return resourceShareArns;
  }

  public void setResourceShareArns(List<String> resourceShareArns) {
    this.resourceShareArns = resourceShareArns;
  }


  public GetResourceSharesRequest resourceShareStatus(ResourceShareStatusEnum resourceShareStatus) {
    this.resourceShareStatus = resourceShareStatus;
    return this;
  }

  /**
   * Specifies that you want to retrieve details of only those resource shares that have this status.
   * @return resourceShareStatus
   */
  @javax.annotation.Nullable
  public ResourceShareStatusEnum getResourceShareStatus() {
    return resourceShareStatus;
  }

  public void setResourceShareStatus(ResourceShareStatusEnum resourceShareStatus) {
    this.resourceShareStatus = resourceShareStatus;
  }


  public GetResourceSharesRequest resourceOwner(ResourceOwnerEnum resourceOwner) {
    this.resourceOwner = resourceOwner;
    return this;
  }

  /**
   * &lt;p&gt;Specifies that you want to retrieve details of only those resource shares that match the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt; &lt;code&gt;SELF&lt;/code&gt; &lt;/b&gt; – resource shares that your account shares with other accounts&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt; &lt;code&gt;OTHER-ACCOUNTS&lt;/code&gt; &lt;/b&gt; – resource shares that other accounts share with your account&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return resourceOwner
   */
  @javax.annotation.Nonnull
  public ResourceOwnerEnum getResourceOwner() {
    return resourceOwner;
  }

  public void setResourceOwner(ResourceOwnerEnum resourceOwner) {
    this.resourceOwner = resourceOwner;
  }


  public GetResourceSharesRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Specifies the name of an individual resource share that you want to retrieve details about.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetResourceSharesRequest tagFilters(List<TagFilter> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public GetResourceSharesRequest addTagFiltersItem(TagFilter tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

  /**
   * Specifies that you want to retrieve details of only those resource shares that match the specified tag keys and values.
   * @return tagFilters
   */
  @javax.annotation.Nullable
  public List<TagFilter> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilter> tagFilters) {
    this.tagFilters = tagFilters;
  }


  public GetResourceSharesRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Specifies that you want to receive the next page of results. Valid only if you received a &lt;code&gt;NextToken&lt;/code&gt; response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call&#39;s &lt;code&gt;NextToken&lt;/code&gt; response to request the next page of results.
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public GetResourceSharesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the &lt;code&gt;NextToken&lt;/code&gt; response element is returned with a value (not null). Include the specified value as the &lt;code&gt;NextToken&lt;/code&gt; request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check &lt;code&gt;NextToken&lt;/code&gt; after every operation to ensure that you receive all of the results.
   * minimum: 1
   * maximum: 500
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public GetResourceSharesRequest permissionArn(String permissionArn) {
    this.permissionArn = permissionArn;
    return this;
  }

  /**
   * Specifies that you want to retrieve details of only those resource shares that use the managed permission with this &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Name (ARN)&lt;/a&gt;.
   * @return permissionArn
   */
  @javax.annotation.Nullable
  public String getPermissionArn() {
    return permissionArn;
  }

  public void setPermissionArn(String permissionArn) {
    this.permissionArn = permissionArn;
  }


  public GetResourceSharesRequest permissionVersion(Integer permissionVersion) {
    this.permissionVersion = permissionVersion;
    return this;
  }

  /**
   * Specifies that you want to retrieve details for only those resource shares that use the specified version of the managed permission.
   * @return permissionVersion
   */
  @javax.annotation.Nullable
  public Integer getPermissionVersion() {
    return permissionVersion;
  }

  public void setPermissionVersion(Integer permissionVersion) {
    this.permissionVersion = permissionVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetResourceSharesRequest getResourceSharesRequest = (GetResourceSharesRequest) o;
    return Objects.equals(this.resourceShareArns, getResourceSharesRequest.resourceShareArns) &&
        Objects.equals(this.resourceShareStatus, getResourceSharesRequest.resourceShareStatus) &&
        Objects.equals(this.resourceOwner, getResourceSharesRequest.resourceOwner) &&
        Objects.equals(this.name, getResourceSharesRequest.name) &&
        Objects.equals(this.tagFilters, getResourceSharesRequest.tagFilters) &&
        Objects.equals(this.nextToken, getResourceSharesRequest.nextToken) &&
        Objects.equals(this.maxResults, getResourceSharesRequest.maxResults) &&
        Objects.equals(this.permissionArn, getResourceSharesRequest.permissionArn) &&
        Objects.equals(this.permissionVersion, getResourceSharesRequest.permissionVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceShareArns, resourceShareStatus, resourceOwner, name, tagFilters, nextToken, maxResults, permissionArn, permissionVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetResourceSharesRequest {\n");
    sb.append("    resourceShareArns: ").append(toIndentedString(resourceShareArns)).append("\n");
    sb.append("    resourceShareStatus: ").append(toIndentedString(resourceShareStatus)).append("\n");
    sb.append("    resourceOwner: ").append(toIndentedString(resourceOwner)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    permissionArn: ").append(toIndentedString(permissionArn)).append("\n");
    sb.append("    permissionVersion: ").append(toIndentedString(permissionVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resourceShareArns");
    openapiFields.add("resourceShareStatus");
    openapiFields.add("resourceOwner");
    openapiFields.add("name");
    openapiFields.add("tagFilters");
    openapiFields.add("nextToken");
    openapiFields.add("maxResults");
    openapiFields.add("permissionArn");
    openapiFields.add("permissionVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("resourceOwner");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetResourceSharesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetResourceSharesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetResourceSharesRequest is not found in the empty JSON string", GetResourceSharesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetResourceSharesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetResourceSharesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetResourceSharesRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceShareArns") != null && !jsonObj.get("resourceShareArns").isJsonNull() && !jsonObj.get("resourceShareArns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceShareArns` to be an array in the JSON string but got `%s`", jsonObj.get("resourceShareArns").toString()));
      }
      if ((jsonObj.get("resourceShareStatus") != null && !jsonObj.get("resourceShareStatus").isJsonNull()) && !jsonObj.get("resourceShareStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceShareStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceShareStatus").toString()));
      }
      // validate the optional field `resourceShareStatus`
      if (jsonObj.get("resourceShareStatus") != null && !jsonObj.get("resourceShareStatus").isJsonNull()) {
        ResourceShareStatusEnum.validateJsonElement(jsonObj.get("resourceShareStatus"));
      }
      if (!jsonObj.get("resourceOwner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceOwner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceOwner").toString()));
      }
      // validate the required field `resourceOwner`
      ResourceOwnerEnum.validateJsonElement(jsonObj.get("resourceOwner"));
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("tagFilters") != null && !jsonObj.get("tagFilters").isJsonNull()) {
        JsonArray jsonArraytagFilters = jsonObj.getAsJsonArray("tagFilters");
        if (jsonArraytagFilters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tagFilters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tagFilters` to be an array in the JSON string but got `%s`", jsonObj.get("tagFilters").toString()));
          }

          // validate the optional field `tagFilters` (array)
          for (int i = 0; i < jsonArraytagFilters.size(); i++) {
            TagFilter.validateJsonElement(jsonArraytagFilters.get(i));
          };
        }
      }
      if ((jsonObj.get("nextToken") != null && !jsonObj.get("nextToken").isJsonNull()) && !jsonObj.get("nextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextToken").toString()));
      }
      if ((jsonObj.get("permissionArn") != null && !jsonObj.get("permissionArn").isJsonNull()) && !jsonObj.get("permissionArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permissionArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permissionArn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetResourceSharesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetResourceSharesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetResourceSharesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetResourceSharesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GetResourceSharesRequest>() {
           @Override
           public void write(JsonWriter out, GetResourceSharesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetResourceSharesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetResourceSharesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetResourceSharesRequest
   * @throws IOException if the JSON string is invalid with respect to GetResourceSharesRequest
   */
  public static GetResourceSharesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetResourceSharesRequest.class);
  }

  /**
   * Convert an instance of GetResourceSharesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

