/*
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AssociateResourceShareRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:59.709480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssociateResourceShareRequest {
  public static final String SERIALIZED_NAME_RESOURCE_SHARE_ARN = "resourceShareArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_ARN)
  private String resourceShareArn;

  public static final String SERIALIZED_NAME_RESOURCE_ARNS = "resourceArns";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARNS)
  private List<String> resourceArns = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRINCIPALS = "principals";
  @SerializedName(SERIALIZED_NAME_PRINCIPALS)
  private List<String> principals = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_SOURCES = "sources";
  @SerializedName(SERIALIZED_NAME_SOURCES)
  private List<String> sources = new ArrayList<>();

  public AssociateResourceShareRequest() {
  }

  public AssociateResourceShareRequest resourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
    return this;
  }

  /**
   * Specifies the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Name (ARN)&lt;/a&gt; of the resource share that you want to add principals or resources to.
   * @return resourceShareArn
   */
  @javax.annotation.Nonnull
  public String getResourceShareArn() {
    return resourceShareArn;
  }

  public void setResourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
  }


  public AssociateResourceShareRequest resourceArns(List<String> resourceArns) {
    this.resourceArns = resourceArns;
    return this;
  }

  public AssociateResourceShareRequest addResourceArnsItem(String resourceArnsItem) {
    if (this.resourceArns == null) {
      this.resourceArns = new ArrayList<>();
    }
    this.resourceArns.add(resourceArnsItem);
    return this;
  }

  /**
   * Specifies a list of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Names (ARNs)&lt;/a&gt; of the resources that you want to share. This can be &lt;code&gt;null&lt;/code&gt; if you want to add only principals.
   * @return resourceArns
   */
  @javax.annotation.Nullable
  public List<String> getResourceArns() {
    return resourceArns;
  }

  public void setResourceArns(List<String> resourceArns) {
    this.resourceArns = resourceArns;
  }


  public AssociateResourceShareRequest principals(List<String> principals) {
    this.principals = principals;
    return this;
  }

  public AssociateResourceShareRequest addPrincipalsItem(String principalsItem) {
    if (this.principals == null) {
      this.principals = new ArrayList<>();
    }
    this.principals.add(principalsItem);
    return this;
  }

  /**
   * &lt;p&gt;Specifies a list of principals to whom you want to the resource share. This can be &lt;code&gt;null&lt;/code&gt; if you want to add only resources.&lt;/p&gt; &lt;p&gt;What the principals can do with the resources in the share is determined by the RAM permissions that you associate with the resource share. See &lt;a&gt;AssociateResourceSharePermission&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You can include the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;An Amazon Web Services account ID, for example: &lt;code&gt;123456789012&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Name (ARN)&lt;/a&gt; of an organization in Organizations, for example: &lt;code&gt;organizations::123456789012:organization/o-exampleorgid&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An ARN of an organizational unit (OU) in Organizations, for example: &lt;code&gt;organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An ARN of an IAM role, for example: &lt;code&gt;iam::123456789012:role/rolename&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An ARN of an IAM user, for example: &lt;code&gt;iam::123456789012user/username&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Not all resource types can be shared with IAM roles and users. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\&quot;&gt;Sharing with IAM roles and users&lt;/a&gt; in the &lt;i&gt;Resource Access Manager User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
   * @return principals
   */
  @javax.annotation.Nullable
  public List<String> getPrincipals() {
    return principals;
  }

  public void setPrincipals(List<String> principals) {
    this.principals = principals;
  }


  public AssociateResourceShareRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * &lt;p&gt;Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a &lt;a href&#x3D;\&quot;https://wikipedia.org/wiki/Universally_unique_identifier\&quot;&gt;UUID type of value.&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t provide this value, then Amazon Web Services generates a random one for you.&lt;/p&gt; &lt;p&gt;If you retry the operation with the same &lt;code&gt;ClientToken&lt;/code&gt;, but with different parameters, the retry fails with an &lt;code&gt;IdempotentParameterMismatch&lt;/code&gt; error.&lt;/p&gt;
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public AssociateResourceShareRequest sources(List<String> sources) {
    this.sources = sources;
    return this;
  }

  public AssociateResourceShareRequest addSourcesItem(String sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

  /**
   * Specifies from which source accounts the service principal has access to the resources in this resource share.
   * @return sources
   */
  @javax.annotation.Nullable
  public List<String> getSources() {
    return sources;
  }

  public void setSources(List<String> sources) {
    this.sources = sources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociateResourceShareRequest associateResourceShareRequest = (AssociateResourceShareRequest) o;
    return Objects.equals(this.resourceShareArn, associateResourceShareRequest.resourceShareArn) &&
        Objects.equals(this.resourceArns, associateResourceShareRequest.resourceArns) &&
        Objects.equals(this.principals, associateResourceShareRequest.principals) &&
        Objects.equals(this.clientToken, associateResourceShareRequest.clientToken) &&
        Objects.equals(this.sources, associateResourceShareRequest.sources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceShareArn, resourceArns, principals, clientToken, sources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociateResourceShareRequest {\n");
    sb.append("    resourceShareArn: ").append(toIndentedString(resourceShareArn)).append("\n");
    sb.append("    resourceArns: ").append(toIndentedString(resourceArns)).append("\n");
    sb.append("    principals: ").append(toIndentedString(principals)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resourceShareArn");
    openapiFields.add("resourceArns");
    openapiFields.add("principals");
    openapiFields.add("clientToken");
    openapiFields.add("sources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("resourceShareArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociateResourceShareRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociateResourceShareRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociateResourceShareRequest is not found in the empty JSON string", AssociateResourceShareRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociateResourceShareRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociateResourceShareRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AssociateResourceShareRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("resourceShareArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceShareArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceShareArn").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceArns") != null && !jsonObj.get("resourceArns").isJsonNull() && !jsonObj.get("resourceArns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceArns` to be an array in the JSON string but got `%s`", jsonObj.get("resourceArns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("principals") != null && !jsonObj.get("principals").isJsonNull() && !jsonObj.get("principals").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `principals` to be an array in the JSON string but got `%s`", jsonObj.get("principals").toString()));
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sources") != null && !jsonObj.get("sources").isJsonNull() && !jsonObj.get("sources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sources` to be an array in the JSON string but got `%s`", jsonObj.get("sources").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociateResourceShareRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociateResourceShareRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociateResourceShareRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociateResourceShareRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociateResourceShareRequest>() {
           @Override
           public void write(JsonWriter out, AssociateResourceShareRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociateResourceShareRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociateResourceShareRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociateResourceShareRequest
   * @throws IOException if the JSON string is invalid with respect to AssociateResourceShareRequest
   */
  public static AssociateResourceShareRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociateResourceShareRequest.class);
  }

  /**
   * Convert an instance of AssociateResourceShareRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

