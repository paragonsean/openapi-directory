/*
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateResourceShareRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:59.709480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateResourceShareRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RESOURCE_ARNS = "resourceArns";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARNS)
  private List<String> resourceArns = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRINCIPALS = "principals";
  @SerializedName(SERIALIZED_NAME_PRINCIPALS)
  private List<String> principals = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLOW_EXTERNAL_PRINCIPALS = "allowExternalPrincipals";
  @SerializedName(SERIALIZED_NAME_ALLOW_EXTERNAL_PRINCIPALS)
  private Boolean allowExternalPrincipals;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_PERMISSION_ARNS = "permissionArns";
  @SerializedName(SERIALIZED_NAME_PERMISSION_ARNS)
  private List<String> permissionArns = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCES = "sources";
  @SerializedName(SERIALIZED_NAME_SOURCES)
  private List<String> sources = new ArrayList<>();

  public CreateResourceShareRequest() {
  }

  public CreateResourceShareRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Specifies the name of the resource share.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateResourceShareRequest resourceArns(List<String> resourceArns) {
    this.resourceArns = resourceArns;
    return this;
  }

  public CreateResourceShareRequest addResourceArnsItem(String resourceArnsItem) {
    if (this.resourceArns == null) {
      this.resourceArns = new ArrayList<>();
    }
    this.resourceArns.add(resourceArnsItem);
    return this;
  }

  /**
   * Specifies a list of one or more ARNs of the resources to associate with the resource share.
   * @return resourceArns
   */
  @javax.annotation.Nullable
  public List<String> getResourceArns() {
    return resourceArns;
  }

  public void setResourceArns(List<String> resourceArns) {
    this.resourceArns = resourceArns;
  }


  public CreateResourceShareRequest principals(List<String> principals) {
    this.principals = principals;
    return this;
  }

  public CreateResourceShareRequest addPrincipalsItem(String principalsItem) {
    if (this.principals == null) {
      this.principals = new ArrayList<>();
    }
    this.principals.add(principalsItem);
    return this;
  }

  /**
   * &lt;p&gt;Specifies a list of one or more principals to associate with the resource share.&lt;/p&gt; &lt;p&gt;You can include the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;An Amazon Web Services account ID, for example: &lt;code&gt;123456789012&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Name (ARN)&lt;/a&gt; of an organization in Organizations, for example: &lt;code&gt;organizations::123456789012:organization/o-exampleorgid&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An ARN of an organizational unit (OU) in Organizations, for example: &lt;code&gt;organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An ARN of an IAM role, for example: &lt;code&gt;iam::123456789012:role/rolename&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An ARN of an IAM user, for example: &lt;code&gt;iam::123456789012user/username&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Not all resource types can be shared with IAM roles and users. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\&quot;&gt;Sharing with IAM roles and users&lt;/a&gt; in the &lt;i&gt;Resource Access Manager User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
   * @return principals
   */
  @javax.annotation.Nullable
  public List<String> getPrincipals() {
    return principals;
  }

  public void setPrincipals(List<String> principals) {
    this.principals = principals;
  }


  public CreateResourceShareRequest tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public CreateResourceShareRequest addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Specifies one or more tags to attach to the resource share itself. It doesn&#39;t attach the tags to the resources associated with the resource share.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public CreateResourceShareRequest allowExternalPrincipals(Boolean allowExternalPrincipals) {
    this.allowExternalPrincipals = allowExternalPrincipals;
    return this;
  }

  /**
   * Specifies whether principals outside your organization in Organizations can be associated with a resource share. A value of &lt;code&gt;true&lt;/code&gt; lets you share with individual Amazon Web Services accounts that are &lt;i&gt;not&lt;/i&gt; in your organization. A value of &lt;code&gt;false&lt;/code&gt; only has meaning if your account is a member of an Amazon Web Services Organization. The default value is &lt;code&gt;true&lt;/code&gt;.
   * @return allowExternalPrincipals
   */
  @javax.annotation.Nullable
  public Boolean getAllowExternalPrincipals() {
    return allowExternalPrincipals;
  }

  public void setAllowExternalPrincipals(Boolean allowExternalPrincipals) {
    this.allowExternalPrincipals = allowExternalPrincipals;
  }


  public CreateResourceShareRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * &lt;p&gt;Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a &lt;a href&#x3D;\&quot;https://wikipedia.org/wiki/Universally_unique_identifier\&quot;&gt;UUID type of value.&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t provide this value, then Amazon Web Services generates a random one for you.&lt;/p&gt; &lt;p&gt;If you retry the operation with the same &lt;code&gt;ClientToken&lt;/code&gt;, but with different parameters, the retry fails with an &lt;code&gt;IdempotentParameterMismatch&lt;/code&gt; error.&lt;/p&gt;
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreateResourceShareRequest permissionArns(List<String> permissionArns) {
    this.permissionArns = permissionArns;
    return this;
  }

  public CreateResourceShareRequest addPermissionArnsItem(String permissionArnsItem) {
    if (this.permissionArns == null) {
      this.permissionArns = new ArrayList<>();
    }
    this.permissionArns.add(permissionArnsItem);
    return this;
  }

  /**
   * Specifies the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;Amazon Resource Names (ARNs)&lt;/a&gt; of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
   * @return permissionArns
   */
  @javax.annotation.Nullable
  public List<String> getPermissionArns() {
    return permissionArns;
  }

  public void setPermissionArns(List<String> permissionArns) {
    this.permissionArns = permissionArns;
  }


  public CreateResourceShareRequest sources(List<String> sources) {
    this.sources = sources;
    return this;
  }

  public CreateResourceShareRequest addSourcesItem(String sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

  /**
   * Specifies from which source accounts the service principal has access to the resources in this resource share.
   * @return sources
   */
  @javax.annotation.Nullable
  public List<String> getSources() {
    return sources;
  }

  public void setSources(List<String> sources) {
    this.sources = sources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResourceShareRequest createResourceShareRequest = (CreateResourceShareRequest) o;
    return Objects.equals(this.name, createResourceShareRequest.name) &&
        Objects.equals(this.resourceArns, createResourceShareRequest.resourceArns) &&
        Objects.equals(this.principals, createResourceShareRequest.principals) &&
        Objects.equals(this.tags, createResourceShareRequest.tags) &&
        Objects.equals(this.allowExternalPrincipals, createResourceShareRequest.allowExternalPrincipals) &&
        Objects.equals(this.clientToken, createResourceShareRequest.clientToken) &&
        Objects.equals(this.permissionArns, createResourceShareRequest.permissionArns) &&
        Objects.equals(this.sources, createResourceShareRequest.sources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, resourceArns, principals, tags, allowExternalPrincipals, clientToken, permissionArns, sources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResourceShareRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceArns: ").append(toIndentedString(resourceArns)).append("\n");
    sb.append("    principals: ").append(toIndentedString(principals)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    allowExternalPrincipals: ").append(toIndentedString(allowExternalPrincipals)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    permissionArns: ").append(toIndentedString(permissionArns)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("resourceArns");
    openapiFields.add("principals");
    openapiFields.add("tags");
    openapiFields.add("allowExternalPrincipals");
    openapiFields.add("clientToken");
    openapiFields.add("permissionArns");
    openapiFields.add("sources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateResourceShareRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateResourceShareRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateResourceShareRequest is not found in the empty JSON string", CreateResourceShareRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateResourceShareRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateResourceShareRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateResourceShareRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceArns") != null && !jsonObj.get("resourceArns").isJsonNull() && !jsonObj.get("resourceArns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceArns` to be an array in the JSON string but got `%s`", jsonObj.get("resourceArns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("principals") != null && !jsonObj.get("principals").isJsonNull() && !jsonObj.get("principals").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `principals` to be an array in the JSON string but got `%s`", jsonObj.get("principals").toString()));
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("permissionArns") != null && !jsonObj.get("permissionArns").isJsonNull() && !jsonObj.get("permissionArns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `permissionArns` to be an array in the JSON string but got `%s`", jsonObj.get("permissionArns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sources") != null && !jsonObj.get("sources").isJsonNull() && !jsonObj.get("sources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sources` to be an array in the JSON string but got `%s`", jsonObj.get("sources").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateResourceShareRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateResourceShareRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateResourceShareRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateResourceShareRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateResourceShareRequest>() {
           @Override
           public void write(JsonWriter out, CreateResourceShareRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateResourceShareRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateResourceShareRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateResourceShareRequest
   * @throws IOException if the JSON string is invalid with respect to CreateResourceShareRequest
   */
  public static CreateResourceShareRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateResourceShareRequest.class);
  }

  /**
   * Convert an instance of CreateResourceShareRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

