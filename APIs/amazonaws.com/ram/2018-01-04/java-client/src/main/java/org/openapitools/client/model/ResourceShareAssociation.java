/*
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ResourceShareAssociationStatus;
import org.openapitools.client.model.ResourceShareAssociationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an association between a resource share and either a principal or a resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:59.709480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceShareAssociation {
  public static final String SERIALIZED_NAME_RESOURCE_SHARE_ARN = "resourceShareArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_ARN)
  private String resourceShareArn;

  public static final String SERIALIZED_NAME_RESOURCE_SHARE_NAME = "resourceShareName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_NAME)
  private String resourceShareName;

  public static final String SERIALIZED_NAME_ASSOCIATED_ENTITY = "associatedEntity";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_ENTITY)
  private String associatedEntity;

  public static final String SERIALIZED_NAME_ASSOCIATION_TYPE = "associationType";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_TYPE)
  private ResourceShareAssociationType associationType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ResourceShareAssociationStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_EXTERNAL = "external";
  @SerializedName(SERIALIZED_NAME_EXTERNAL)
  private Boolean external;

  public ResourceShareAssociation() {
  }

  public ResourceShareAssociation resourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
    return this;
  }

  /**
   * Get resourceShareArn
   * @return resourceShareArn
   */
  @javax.annotation.Nullable
  public String getResourceShareArn() {
    return resourceShareArn;
  }

  public void setResourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
  }


  public ResourceShareAssociation resourceShareName(String resourceShareName) {
    this.resourceShareName = resourceShareName;
    return this;
  }

  /**
   * Get resourceShareName
   * @return resourceShareName
   */
  @javax.annotation.Nullable
  public String getResourceShareName() {
    return resourceShareName;
  }

  public void setResourceShareName(String resourceShareName) {
    this.resourceShareName = resourceShareName;
  }


  public ResourceShareAssociation associatedEntity(String associatedEntity) {
    this.associatedEntity = associatedEntity;
    return this;
  }

  /**
   * Get associatedEntity
   * @return associatedEntity
   */
  @javax.annotation.Nullable
  public String getAssociatedEntity() {
    return associatedEntity;
  }

  public void setAssociatedEntity(String associatedEntity) {
    this.associatedEntity = associatedEntity;
  }


  public ResourceShareAssociation associationType(ResourceShareAssociationType associationType) {
    this.associationType = associationType;
    return this;
  }

  /**
   * Get associationType
   * @return associationType
   */
  @javax.annotation.Nullable
  public ResourceShareAssociationType getAssociationType() {
    return associationType;
  }

  public void setAssociationType(ResourceShareAssociationType associationType) {
    this.associationType = associationType;
  }


  public ResourceShareAssociation status(ResourceShareAssociationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ResourceShareAssociationStatus getStatus() {
    return status;
  }

  public void setStatus(ResourceShareAssociationStatus status) {
    this.status = status;
  }


  public ResourceShareAssociation statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public ResourceShareAssociation creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public ResourceShareAssociation lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public ResourceShareAssociation external(Boolean external) {
    this.external = external;
    return this;
  }

  /**
   * Get external
   * @return external
   */
  @javax.annotation.Nullable
  public Boolean getExternal() {
    return external;
  }

  public void setExternal(Boolean external) {
    this.external = external;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceShareAssociation resourceShareAssociation = (ResourceShareAssociation) o;
    return Objects.equals(this.resourceShareArn, resourceShareAssociation.resourceShareArn) &&
        Objects.equals(this.resourceShareName, resourceShareAssociation.resourceShareName) &&
        Objects.equals(this.associatedEntity, resourceShareAssociation.associatedEntity) &&
        Objects.equals(this.associationType, resourceShareAssociation.associationType) &&
        Objects.equals(this.status, resourceShareAssociation.status) &&
        Objects.equals(this.statusMessage, resourceShareAssociation.statusMessage) &&
        Objects.equals(this.creationTime, resourceShareAssociation.creationTime) &&
        Objects.equals(this.lastUpdatedTime, resourceShareAssociation.lastUpdatedTime) &&
        Objects.equals(this.external, resourceShareAssociation.external);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceShareArn, resourceShareName, associatedEntity, associationType, status, statusMessage, creationTime, lastUpdatedTime, external);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceShareAssociation {\n");
    sb.append("    resourceShareArn: ").append(toIndentedString(resourceShareArn)).append("\n");
    sb.append("    resourceShareName: ").append(toIndentedString(resourceShareName)).append("\n");
    sb.append("    associatedEntity: ").append(toIndentedString(associatedEntity)).append("\n");
    sb.append("    associationType: ").append(toIndentedString(associationType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resourceShareArn");
    openapiFields.add("resourceShareName");
    openapiFields.add("associatedEntity");
    openapiFields.add("associationType");
    openapiFields.add("status");
    openapiFields.add("statusMessage");
    openapiFields.add("creationTime");
    openapiFields.add("lastUpdatedTime");
    openapiFields.add("external");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceShareAssociation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceShareAssociation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceShareAssociation is not found in the empty JSON string", ResourceShareAssociation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceShareAssociation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceShareAssociation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `resourceShareArn`
      if (jsonObj.get("resourceShareArn") != null && !jsonObj.get("resourceShareArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("resourceShareArn"));
      }
      // validate the optional field `resourceShareName`
      if (jsonObj.get("resourceShareName") != null && !jsonObj.get("resourceShareName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("resourceShareName"));
      }
      // validate the optional field `associatedEntity`
      if (jsonObj.get("associatedEntity") != null && !jsonObj.get("associatedEntity").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("associatedEntity"));
      }
      // validate the optional field `associationType`
      if (jsonObj.get("associationType") != null && !jsonObj.get("associationType").isJsonNull()) {
        ResourceShareAssociationType.validateJsonElement(jsonObj.get("associationType"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ResourceShareAssociationStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `lastUpdatedTime`
      if (jsonObj.get("lastUpdatedTime") != null && !jsonObj.get("lastUpdatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedTime"));
      }
      // validate the optional field `external`
      if (jsonObj.get("external") != null && !jsonObj.get("external").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("external"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceShareAssociation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceShareAssociation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceShareAssociation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceShareAssociation.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceShareAssociation>() {
           @Override
           public void write(JsonWriter out, ResourceShareAssociation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceShareAssociation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceShareAssociation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceShareAssociation
   * @throws IOException if the JSON string is invalid with respect to ResourceShareAssociation
   */
  public static ResourceShareAssociation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceShareAssociation.class);
  }

  /**
   * Convert an instance of ResourceShareAssociation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

