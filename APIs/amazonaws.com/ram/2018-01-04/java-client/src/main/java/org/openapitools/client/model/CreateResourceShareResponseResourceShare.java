/*
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ResourceShareFeatureSet;
import org.openapitools.client.model.ResourceShareStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateResourceShareResponseResourceShare
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:59.709480-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateResourceShareResponseResourceShare {
  public static final String SERIALIZED_NAME_RESOURCE_SHARE_ARN = "resourceShareArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SHARE_ARN)
  private String resourceShareArn;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OWNING_ACCOUNT_ID = "owningAccountId";
  @SerializedName(SERIALIZED_NAME_OWNING_ACCOUNT_ID)
  private String owningAccountId;

  public static final String SERIALIZED_NAME_ALLOW_EXTERNAL_PRINCIPALS = "allowExternalPrincipals";
  @SerializedName(SERIALIZED_NAME_ALLOW_EXTERNAL_PRINCIPALS)
  private Boolean allowExternalPrincipals;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ResourceShareStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_FEATURE_SET = "featureSet";
  @SerializedName(SERIALIZED_NAME_FEATURE_SET)
  private ResourceShareFeatureSet featureSet;

  public CreateResourceShareResponseResourceShare() {
  }

  public CreateResourceShareResponseResourceShare resourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
    return this;
  }

  /**
   * Get resourceShareArn
   * @return resourceShareArn
   */
  @javax.annotation.Nullable
  public String getResourceShareArn() {
    return resourceShareArn;
  }

  public void setResourceShareArn(String resourceShareArn) {
    this.resourceShareArn = resourceShareArn;
  }


  public CreateResourceShareResponseResourceShare name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateResourceShareResponseResourceShare owningAccountId(String owningAccountId) {
    this.owningAccountId = owningAccountId;
    return this;
  }

  /**
   * Get owningAccountId
   * @return owningAccountId
   */
  @javax.annotation.Nullable
  public String getOwningAccountId() {
    return owningAccountId;
  }

  public void setOwningAccountId(String owningAccountId) {
    this.owningAccountId = owningAccountId;
  }


  public CreateResourceShareResponseResourceShare allowExternalPrincipals(Boolean allowExternalPrincipals) {
    this.allowExternalPrincipals = allowExternalPrincipals;
    return this;
  }

  /**
   * Get allowExternalPrincipals
   * @return allowExternalPrincipals
   */
  @javax.annotation.Nullable
  public Boolean getAllowExternalPrincipals() {
    return allowExternalPrincipals;
  }

  public void setAllowExternalPrincipals(Boolean allowExternalPrincipals) {
    this.allowExternalPrincipals = allowExternalPrincipals;
  }


  public CreateResourceShareResponseResourceShare status(ResourceShareStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ResourceShareStatus getStatus() {
    return status;
  }

  public void setStatus(ResourceShareStatus status) {
    this.status = status;
  }


  public CreateResourceShareResponseResourceShare statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public CreateResourceShareResponseResourceShare tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateResourceShareResponseResourceShare creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CreateResourceShareResponseResourceShare lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public CreateResourceShareResponseResourceShare featureSet(ResourceShareFeatureSet featureSet) {
    this.featureSet = featureSet;
    return this;
  }

  /**
   * Get featureSet
   * @return featureSet
   */
  @javax.annotation.Nullable
  public ResourceShareFeatureSet getFeatureSet() {
    return featureSet;
  }

  public void setFeatureSet(ResourceShareFeatureSet featureSet) {
    this.featureSet = featureSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResourceShareResponseResourceShare createResourceShareResponseResourceShare = (CreateResourceShareResponseResourceShare) o;
    return Objects.equals(this.resourceShareArn, createResourceShareResponseResourceShare.resourceShareArn) &&
        Objects.equals(this.name, createResourceShareResponseResourceShare.name) &&
        Objects.equals(this.owningAccountId, createResourceShareResponseResourceShare.owningAccountId) &&
        Objects.equals(this.allowExternalPrincipals, createResourceShareResponseResourceShare.allowExternalPrincipals) &&
        Objects.equals(this.status, createResourceShareResponseResourceShare.status) &&
        Objects.equals(this.statusMessage, createResourceShareResponseResourceShare.statusMessage) &&
        Objects.equals(this.tags, createResourceShareResponseResourceShare.tags) &&
        Objects.equals(this.creationTime, createResourceShareResponseResourceShare.creationTime) &&
        Objects.equals(this.lastUpdatedTime, createResourceShareResponseResourceShare.lastUpdatedTime) &&
        Objects.equals(this.featureSet, createResourceShareResponseResourceShare.featureSet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceShareArn, name, owningAccountId, allowExternalPrincipals, status, statusMessage, tags, creationTime, lastUpdatedTime, featureSet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResourceShareResponseResourceShare {\n");
    sb.append("    resourceShareArn: ").append(toIndentedString(resourceShareArn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owningAccountId: ").append(toIndentedString(owningAccountId)).append("\n");
    sb.append("    allowExternalPrincipals: ").append(toIndentedString(allowExternalPrincipals)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    featureSet: ").append(toIndentedString(featureSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resourceShareArn");
    openapiFields.add("name");
    openapiFields.add("owningAccountId");
    openapiFields.add("allowExternalPrincipals");
    openapiFields.add("status");
    openapiFields.add("statusMessage");
    openapiFields.add("tags");
    openapiFields.add("creationTime");
    openapiFields.add("lastUpdatedTime");
    openapiFields.add("featureSet");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateResourceShareResponseResourceShare
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateResourceShareResponseResourceShare.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateResourceShareResponseResourceShare is not found in the empty JSON string", CreateResourceShareResponseResourceShare.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateResourceShareResponseResourceShare.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateResourceShareResponseResourceShare` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `resourceShareArn`
      if (jsonObj.get("resourceShareArn") != null && !jsonObj.get("resourceShareArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("resourceShareArn"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `owningAccountId`
      if (jsonObj.get("owningAccountId") != null && !jsonObj.get("owningAccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("owningAccountId"));
      }
      // validate the optional field `allowExternalPrincipals`
      if (jsonObj.get("allowExternalPrincipals") != null && !jsonObj.get("allowExternalPrincipals").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("allowExternalPrincipals"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ResourceShareStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `lastUpdatedTime`
      if (jsonObj.get("lastUpdatedTime") != null && !jsonObj.get("lastUpdatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedTime"));
      }
      // validate the optional field `featureSet`
      if (jsonObj.get("featureSet") != null && !jsonObj.get("featureSet").isJsonNull()) {
        ResourceShareFeatureSet.validateJsonElement(jsonObj.get("featureSet"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateResourceShareResponseResourceShare.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateResourceShareResponseResourceShare' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateResourceShareResponseResourceShare> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateResourceShareResponseResourceShare.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateResourceShareResponseResourceShare>() {
           @Override
           public void write(JsonWriter out, CreateResourceShareResponseResourceShare value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateResourceShareResponseResourceShare read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateResourceShareResponseResourceShare given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateResourceShareResponseResourceShare
   * @throws IOException if the JSON string is invalid with respect to CreateResourceShareResponseResourceShare
   */
  public static CreateResourceShareResponseResourceShare fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateResourceShareResponseResourceShare.class);
  }

  /**
   * Convert an instance of CreateResourceShareResponseResourceShare to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

