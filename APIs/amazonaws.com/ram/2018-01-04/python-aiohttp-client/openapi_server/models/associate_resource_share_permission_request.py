# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociateResourceSharePermissionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_share_arn: str=None, permission_arn: str=None, replace: bool=None, client_token: str=None, permission_version: int=None):
        """AssociateResourceSharePermissionRequest - a model defined in OpenAPI

        :param resource_share_arn: The resource_share_arn of this AssociateResourceSharePermissionRequest.
        :param permission_arn: The permission_arn of this AssociateResourceSharePermissionRequest.
        :param replace: The replace of this AssociateResourceSharePermissionRequest.
        :param client_token: The client_token of this AssociateResourceSharePermissionRequest.
        :param permission_version: The permission_version of this AssociateResourceSharePermissionRequest.
        """
        self.openapi_types = {
            'resource_share_arn': str,
            'permission_arn': str,
            'replace': bool,
            'client_token': str,
            'permission_version': int
        }

        self.attribute_map = {
            'resource_share_arn': 'resourceShareArn',
            'permission_arn': 'permissionArn',
            'replace': 'replace',
            'client_token': 'clientToken',
            'permission_version': 'permissionVersion'
        }

        self._resource_share_arn = resource_share_arn
        self._permission_arn = permission_arn
        self._replace = replace
        self._client_token = client_token
        self._permission_version = permission_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateResourceSharePermissionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateResourceSharePermission_request of this AssociateResourceSharePermissionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_share_arn(self):
        """Gets the resource_share_arn of this AssociateResourceSharePermissionRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share to which you want to add or replace permissions.

        :return: The resource_share_arn of this AssociateResourceSharePermissionRequest.
        :rtype: str
        """
        return self._resource_share_arn

    @resource_share_arn.setter
    def resource_share_arn(self, resource_share_arn):
        """Sets the resource_share_arn of this AssociateResourceSharePermissionRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share to which you want to add or replace permissions.

        :param resource_share_arn: The resource_share_arn of this AssociateResourceSharePermissionRequest.
        :type resource_share_arn: str
        """
        if resource_share_arn is None:
            raise ValueError("Invalid value for `resource_share_arn`, must not be `None`")

        self._resource_share_arn = resource_share_arn

    @property
    def permission_arn(self):
        """Gets the permission_arn of this AssociateResourceSharePermissionRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the RAM permission to associate with the resource share. To find the ARN for a permission, use either the <a>ListPermissions</a> operation or go to the <a href=\"https://console.aws.amazon.com/ram/home#Permissions:\">Permissions library</a> page in the RAM console and then choose the name of the permission. The ARN is displayed on the detail page.

        :return: The permission_arn of this AssociateResourceSharePermissionRequest.
        :rtype: str
        """
        return self._permission_arn

    @permission_arn.setter
    def permission_arn(self, permission_arn):
        """Sets the permission_arn of this AssociateResourceSharePermissionRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the RAM permission to associate with the resource share. To find the ARN for a permission, use either the <a>ListPermissions</a> operation or go to the <a href=\"https://console.aws.amazon.com/ram/home#Permissions:\">Permissions library</a> page in the RAM console and then choose the name of the permission. The ARN is displayed on the detail page.

        :param permission_arn: The permission_arn of this AssociateResourceSharePermissionRequest.
        :type permission_arn: str
        """
        if permission_arn is None:
            raise ValueError("Invalid value for `permission_arn`, must not be `None`")

        self._permission_arn = permission_arn

    @property
    def replace(self):
        """Gets the replace of this AssociateResourceSharePermissionRequest.

        <p>Specifies whether the specified permission should replace the existing permission associated with the resource share. Use <code>true</code> to replace the current permissions. Use <code>false</code> to add the permission to a resource share that currently doesn't have a permission. The default value is <code>false</code>.</p> <note> <p>A resource share can have only one permission per resource type. If a resource share already has a permission for the specified resource type and you don't set <code>replace</code> to <code>true</code> then the operation returns an error. This helps prevent accidental overwriting of a permission.</p> </note>

        :return: The replace of this AssociateResourceSharePermissionRequest.
        :rtype: bool
        """
        return self._replace

    @replace.setter
    def replace(self, replace):
        """Sets the replace of this AssociateResourceSharePermissionRequest.

        <p>Specifies whether the specified permission should replace the existing permission associated with the resource share. Use <code>true</code> to replace the current permissions. Use <code>false</code> to add the permission to a resource share that currently doesn't have a permission. The default value is <code>false</code>.</p> <note> <p>A resource share can have only one permission per resource type. If a resource share already has a permission for the specified resource type and you don't set <code>replace</code> to <code>true</code> then the operation returns an error. This helps prevent accidental overwriting of a permission.</p> </note>

        :param replace: The replace of this AssociateResourceSharePermissionRequest.
        :type replace: bool
        """

        self._replace = replace

    @property
    def client_token(self):
        """Gets the client_token of this AssociateResourceSharePermissionRequest.

        <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>

        :return: The client_token of this AssociateResourceSharePermissionRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this AssociateResourceSharePermissionRequest.

        <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>

        :param client_token: The client_token of this AssociateResourceSharePermissionRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def permission_version(self):
        """Gets the permission_version of this AssociateResourceSharePermissionRequest.

        <p>Specifies the version of the RAM permission to associate with the resource share. You can specify <i>only</i> the version that is currently set as the default version for the permission. If you also set the <code>replace</code> pararameter to <code>true</code>, then this operation updates an outdated version of the permission to the current default version.</p> <note> <p>You don't need to specify this parameter because the default behavior is to use the version that is currently set as the default version for the permission. This parameter is supported for backwards compatibility.</p> </note>

        :return: The permission_version of this AssociateResourceSharePermissionRequest.
        :rtype: int
        """
        return self._permission_version

    @permission_version.setter
    def permission_version(self, permission_version):
        """Sets the permission_version of this AssociateResourceSharePermissionRequest.

        <p>Specifies the version of the RAM permission to associate with the resource share. You can specify <i>only</i> the version that is currently set as the default version for the permission. If you also set the <code>replace</code> pararameter to <code>true</code>, then this operation updates an outdated version of the permission to the current default version.</p> <note> <p>You don't need to specify this parameter because the default behavior is to use the version that is currently set as the default version for the permission. This parameter is supported for backwards compatibility.</p> </note>

        :param permission_version: The permission_version of this AssociateResourceSharePermissionRequest.
        :type permission_version: int
        """

        self._permission_version = permission_version
