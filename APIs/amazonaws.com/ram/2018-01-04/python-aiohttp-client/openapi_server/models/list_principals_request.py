# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListPrincipalsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_owner: str=None, resource_arn: str=None, principals: List[str]=None, resource_type: str=None, resource_share_arns: List[str]=None, next_token: str=None, max_results: int=None):
        """ListPrincipalsRequest - a model defined in OpenAPI

        :param resource_owner: The resource_owner of this ListPrincipalsRequest.
        :param resource_arn: The resource_arn of this ListPrincipalsRequest.
        :param principals: The principals of this ListPrincipalsRequest.
        :param resource_type: The resource_type of this ListPrincipalsRequest.
        :param resource_share_arns: The resource_share_arns of this ListPrincipalsRequest.
        :param next_token: The next_token of this ListPrincipalsRequest.
        :param max_results: The max_results of this ListPrincipalsRequest.
        """
        self.openapi_types = {
            'resource_owner': str,
            'resource_arn': str,
            'principals': List[str],
            'resource_type': str,
            'resource_share_arns': List[str],
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'resource_owner': 'resourceOwner',
            'resource_arn': 'resourceArn',
            'principals': 'principals',
            'resource_type': 'resourceType',
            'resource_share_arns': 'resourceShareArns',
            'next_token': 'nextToken',
            'max_results': 'maxResults'
        }

        self._resource_owner = resource_owner
        self._resource_arn = resource_arn
        self._principals = principals
        self._resource_type = resource_type
        self._resource_share_arns = resource_share_arns
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPrincipalsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPrincipals_request of this ListPrincipalsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_owner(self):
        """Gets the resource_owner of this ListPrincipalsRequest.

        <p>Specifies that you want to list information for only resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – principals that your account is sharing resources with</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – principals that are sharing resources with your account</p> </li> </ul>

        :return: The resource_owner of this ListPrincipalsRequest.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this ListPrincipalsRequest.

        <p>Specifies that you want to list information for only resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – principals that your account is sharing resources with</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – principals that are sharing resources with your account</p> </li> </ul>

        :param resource_owner: The resource_owner of this ListPrincipalsRequest.
        :type resource_owner: str
        """
        allowed_values = ["SELF", "OTHER-ACCOUNTS"]  # noqa: E501
        if resource_owner not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_owner` ({0}), must be one of {1}"
                .format(resource_owner, allowed_values)
            )

        self._resource_owner = resource_owner

    @property
    def resource_arn(self):
        """Gets the resource_arn of this ListPrincipalsRequest.

        Specifies that you want to list principal information for the resource share with the specified <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a>.

        :return: The resource_arn of this ListPrincipalsRequest.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this ListPrincipalsRequest.

        Specifies that you want to list principal information for the resource share with the specified <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a>.

        :param resource_arn: The resource_arn of this ListPrincipalsRequest.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def principals(self):
        """Gets the principals of this ListPrincipalsRequest.

        <p>Specifies that you want to list information for only the listed principals.</p> <p>You can include the following values:</p> <ul> <li> <p>An Amazon Web Services account ID, for example: <code>123456789012</code> </p> </li> <li> <p>An <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an organization in Organizations, for example: <code>organizations::123456789012:organization/o-exampleorgid</code> </p> </li> <li> <p>An ARN of an organizational unit (OU) in Organizations, for example: <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code> </p> </li> <li> <p>An ARN of an IAM role, for example: <code>iam::123456789012:role/rolename</code> </p> </li> <li> <p>An ARN of an IAM user, for example: <code>iam::123456789012user/username</code> </p> </li> </ul> <note> <p>Not all resource types can be shared with IAM roles and users. For more information, see <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User Guide</i>.</p> </note>

        :return: The principals of this ListPrincipalsRequest.
        :rtype: List[str]
        """
        return self._principals

    @principals.setter
    def principals(self, principals):
        """Sets the principals of this ListPrincipalsRequest.

        <p>Specifies that you want to list information for only the listed principals.</p> <p>You can include the following values:</p> <ul> <li> <p>An Amazon Web Services account ID, for example: <code>123456789012</code> </p> </li> <li> <p>An <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an organization in Organizations, for example: <code>organizations::123456789012:organization/o-exampleorgid</code> </p> </li> <li> <p>An ARN of an organizational unit (OU) in Organizations, for example: <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code> </p> </li> <li> <p>An ARN of an IAM role, for example: <code>iam::123456789012:role/rolename</code> </p> </li> <li> <p>An ARN of an IAM user, for example: <code>iam::123456789012user/username</code> </p> </li> </ul> <note> <p>Not all resource types can be shared with IAM roles and users. For more information, see <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User Guide</i>.</p> </note>

        :param principals: The principals of this ListPrincipalsRequest.
        :type principals: List[str]
        """

        self._principals = principals

    @property
    def resource_type(self):
        """Gets the resource_type of this ListPrincipalsRequest.

        <p>Specifies that you want to list information for only principals associated with resource shares that include the specified resource type.</p> <p>For a list of valid values, query the <a>ListResourceTypes</a> operation.</p>

        :return: The resource_type of this ListPrincipalsRequest.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ListPrincipalsRequest.

        <p>Specifies that you want to list information for only principals associated with resource shares that include the specified resource type.</p> <p>For a list of valid values, query the <a>ListResourceTypes</a> operation.</p>

        :param resource_type: The resource_type of this ListPrincipalsRequest.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_share_arns(self):
        """Gets the resource_share_arns of this ListPrincipalsRequest.

        Specifies that you want to list information for only principals associated with the resource shares specified by a list the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a>.

        :return: The resource_share_arns of this ListPrincipalsRequest.
        :rtype: List[str]
        """
        return self._resource_share_arns

    @resource_share_arns.setter
    def resource_share_arns(self, resource_share_arns):
        """Sets the resource_share_arns of this ListPrincipalsRequest.

        Specifies that you want to list information for only principals associated with the resource shares specified by a list the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a>.

        :param resource_share_arns: The resource_share_arns of this ListPrincipalsRequest.
        :type resource_share_arns: List[str]
        """

        self._resource_share_arns = resource_share_arns

    @property
    def next_token(self):
        """Gets the next_token of this ListPrincipalsRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :return: The next_token of this ListPrincipalsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListPrincipalsRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :param next_token: The next_token of this ListPrincipalsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListPrincipalsRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :return: The max_results of this ListPrincipalsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListPrincipalsRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :param max_results: The max_results of this ListPrincipalsRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 500:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `500`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results
