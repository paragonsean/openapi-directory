# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_region_scope import ResourceRegionScope
from openapi_server.models.resource_status import ResourceStatus
from openapi_server import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, type: str=None, resource_share_arn: str=None, resource_group_arn: str=None, status: ResourceStatus=None, status_message: str=None, creation_time: datetime=None, last_updated_time: datetime=None, resource_region_scope: ResourceRegionScope=None):
        """Resource - a model defined in OpenAPI

        :param arn: The arn of this Resource.
        :param type: The type of this Resource.
        :param resource_share_arn: The resource_share_arn of this Resource.
        :param resource_group_arn: The resource_group_arn of this Resource.
        :param status: The status of this Resource.
        :param status_message: The status_message of this Resource.
        :param creation_time: The creation_time of this Resource.
        :param last_updated_time: The last_updated_time of this Resource.
        :param resource_region_scope: The resource_region_scope of this Resource.
        """
        self.openapi_types = {
            'arn': str,
            'type': str,
            'resource_share_arn': str,
            'resource_group_arn': str,
            'status': ResourceStatus,
            'status_message': str,
            'creation_time': datetime,
            'last_updated_time': datetime,
            'resource_region_scope': ResourceRegionScope
        }

        self.attribute_map = {
            'arn': 'arn',
            'type': 'type',
            'resource_share_arn': 'resourceShareArn',
            'resource_group_arn': 'resourceGroupArn',
            'status': 'status',
            'status_message': 'statusMessage',
            'creation_time': 'creationTime',
            'last_updated_time': 'lastUpdatedTime',
            'resource_region_scope': 'resourceRegionScope'
        }

        self._arn = arn
        self._type = type
        self._resource_share_arn = resource_share_arn
        self._resource_group_arn = resource_group_arn
        self._status = status
        self._status_message = status_message
        self._creation_time = creation_time
        self._last_updated_time = last_updated_time
        self._resource_region_scope = resource_region_scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource of this Resource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this Resource.


        :return: The arn of this Resource.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Resource.


        :param arn: The arn of this Resource.
        :type arn: str
        """

        self._arn = arn

    @property
    def type(self):
        """Gets the type of this Resource.


        :return: The type of this Resource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Resource.


        :param type: The type of this Resource.
        :type type: str
        """

        self._type = type

    @property
    def resource_share_arn(self):
        """Gets the resource_share_arn of this Resource.


        :return: The resource_share_arn of this Resource.
        :rtype: str
        """
        return self._resource_share_arn

    @resource_share_arn.setter
    def resource_share_arn(self, resource_share_arn):
        """Sets the resource_share_arn of this Resource.


        :param resource_share_arn: The resource_share_arn of this Resource.
        :type resource_share_arn: str
        """

        self._resource_share_arn = resource_share_arn

    @property
    def resource_group_arn(self):
        """Gets the resource_group_arn of this Resource.


        :return: The resource_group_arn of this Resource.
        :rtype: str
        """
        return self._resource_group_arn

    @resource_group_arn.setter
    def resource_group_arn(self, resource_group_arn):
        """Sets the resource_group_arn of this Resource.


        :param resource_group_arn: The resource_group_arn of this Resource.
        :type resource_group_arn: str
        """

        self._resource_group_arn = resource_group_arn

    @property
    def status(self):
        """Gets the status of this Resource.


        :return: The status of this Resource.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Resource.


        :param status: The status of this Resource.
        :type status: ResourceStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this Resource.


        :return: The status_message of this Resource.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this Resource.


        :param status_message: The status_message of this Resource.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def creation_time(self):
        """Gets the creation_time of this Resource.


        :return: The creation_time of this Resource.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Resource.


        :param creation_time: The creation_time of this Resource.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this Resource.


        :return: The last_updated_time of this Resource.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this Resource.


        :param last_updated_time: The last_updated_time of this Resource.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def resource_region_scope(self):
        """Gets the resource_region_scope of this Resource.


        :return: The resource_region_scope of this Resource.
        :rtype: ResourceRegionScope
        """
        return self._resource_region_scope

    @resource_region_scope.setter
    def resource_region_scope(self, resource_region_scope):
        """Sets the resource_region_scope of this Resource.


        :param resource_region_scope: The resource_region_scope of this Resource.
        :type resource_region_scope: ResourceRegionScope
        """

        self._resource_region_scope = resource_region_scope
