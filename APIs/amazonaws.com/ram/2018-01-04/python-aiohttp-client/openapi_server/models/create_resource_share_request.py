# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
from openapi_server import util


class CreateResourceShareRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, resource_arns: List[str]=None, principals: List[str]=None, tags: List[Tag]=None, allow_external_principals: bool=None, client_token: str=None, permission_arns: List[str]=None, sources: List[str]=None):
        """CreateResourceShareRequest - a model defined in OpenAPI

        :param name: The name of this CreateResourceShareRequest.
        :param resource_arns: The resource_arns of this CreateResourceShareRequest.
        :param principals: The principals of this CreateResourceShareRequest.
        :param tags: The tags of this CreateResourceShareRequest.
        :param allow_external_principals: The allow_external_principals of this CreateResourceShareRequest.
        :param client_token: The client_token of this CreateResourceShareRequest.
        :param permission_arns: The permission_arns of this CreateResourceShareRequest.
        :param sources: The sources of this CreateResourceShareRequest.
        """
        self.openapi_types = {
            'name': str,
            'resource_arns': List[str],
            'principals': List[str],
            'tags': List[Tag],
            'allow_external_principals': bool,
            'client_token': str,
            'permission_arns': List[str],
            'sources': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'resource_arns': 'resourceArns',
            'principals': 'principals',
            'tags': 'tags',
            'allow_external_principals': 'allowExternalPrincipals',
            'client_token': 'clientToken',
            'permission_arns': 'permissionArns',
            'sources': 'sources'
        }

        self._name = name
        self._resource_arns = resource_arns
        self._principals = principals
        self._tags = tags
        self._allow_external_principals = allow_external_principals
        self._client_token = client_token
        self._permission_arns = permission_arns
        self._sources = sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateResourceShareRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateResourceShare_request of this CreateResourceShareRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateResourceShareRequest.

        Specifies the name of the resource share.

        :return: The name of this CreateResourceShareRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateResourceShareRequest.

        Specifies the name of the resource share.

        :param name: The name of this CreateResourceShareRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def resource_arns(self):
        """Gets the resource_arns of this CreateResourceShareRequest.

        Specifies a list of one or more ARNs of the resources to associate with the resource share.

        :return: The resource_arns of this CreateResourceShareRequest.
        :rtype: List[str]
        """
        return self._resource_arns

    @resource_arns.setter
    def resource_arns(self, resource_arns):
        """Sets the resource_arns of this CreateResourceShareRequest.

        Specifies a list of one or more ARNs of the resources to associate with the resource share.

        :param resource_arns: The resource_arns of this CreateResourceShareRequest.
        :type resource_arns: List[str]
        """

        self._resource_arns = resource_arns

    @property
    def principals(self):
        """Gets the principals of this CreateResourceShareRequest.

        <p>Specifies a list of one or more principals to associate with the resource share.</p> <p>You can include the following values:</p> <ul> <li> <p>An Amazon Web Services account ID, for example: <code>123456789012</code> </p> </li> <li> <p>An <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an organization in Organizations, for example: <code>organizations::123456789012:organization/o-exampleorgid</code> </p> </li> <li> <p>An ARN of an organizational unit (OU) in Organizations, for example: <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code> </p> </li> <li> <p>An ARN of an IAM role, for example: <code>iam::123456789012:role/rolename</code> </p> </li> <li> <p>An ARN of an IAM user, for example: <code>iam::123456789012user/username</code> </p> </li> </ul> <note> <p>Not all resource types can be shared with IAM roles and users. For more information, see <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User Guide</i>.</p> </note>

        :return: The principals of this CreateResourceShareRequest.
        :rtype: List[str]
        """
        return self._principals

    @principals.setter
    def principals(self, principals):
        """Sets the principals of this CreateResourceShareRequest.

        <p>Specifies a list of one or more principals to associate with the resource share.</p> <p>You can include the following values:</p> <ul> <li> <p>An Amazon Web Services account ID, for example: <code>123456789012</code> </p> </li> <li> <p>An <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an organization in Organizations, for example: <code>organizations::123456789012:organization/o-exampleorgid</code> </p> </li> <li> <p>An ARN of an organizational unit (OU) in Organizations, for example: <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code> </p> </li> <li> <p>An ARN of an IAM role, for example: <code>iam::123456789012:role/rolename</code> </p> </li> <li> <p>An ARN of an IAM user, for example: <code>iam::123456789012user/username</code> </p> </li> </ul> <note> <p>Not all resource types can be shared with IAM roles and users. For more information, see <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User Guide</i>.</p> </note>

        :param principals: The principals of this CreateResourceShareRequest.
        :type principals: List[str]
        """

        self._principals = principals

    @property
    def tags(self):
        """Gets the tags of this CreateResourceShareRequest.

        Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.

        :return: The tags of this CreateResourceShareRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateResourceShareRequest.

        Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.

        :param tags: The tags of this CreateResourceShareRequest.
        :type tags: List[Tag]
        """

        self._tags = tags

    @property
    def allow_external_principals(self):
        """Gets the allow_external_principals of this CreateResourceShareRequest.

        Specifies whether principals outside your organization in Organizations can be associated with a resource share. A value of <code>true</code> lets you share with individual Amazon Web Services accounts that are <i>not</i> in your organization. A value of <code>false</code> only has meaning if your account is a member of an Amazon Web Services Organization. The default value is <code>true</code>.

        :return: The allow_external_principals of this CreateResourceShareRequest.
        :rtype: bool
        """
        return self._allow_external_principals

    @allow_external_principals.setter
    def allow_external_principals(self, allow_external_principals):
        """Sets the allow_external_principals of this CreateResourceShareRequest.

        Specifies whether principals outside your organization in Organizations can be associated with a resource share. A value of <code>true</code> lets you share with individual Amazon Web Services accounts that are <i>not</i> in your organization. A value of <code>false</code> only has meaning if your account is a member of an Amazon Web Services Organization. The default value is <code>true</code>.

        :param allow_external_principals: The allow_external_principals of this CreateResourceShareRequest.
        :type allow_external_principals: bool
        """

        self._allow_external_principals = allow_external_principals

    @property
    def client_token(self):
        """Gets the client_token of this CreateResourceShareRequest.

        <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>

        :return: The client_token of this CreateResourceShareRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateResourceShareRequest.

        <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>

        :param client_token: The client_token of this CreateResourceShareRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def permission_arns(self):
        """Gets the permission_arns of this CreateResourceShareRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.

        :return: The permission_arns of this CreateResourceShareRequest.
        :rtype: List[str]
        """
        return self._permission_arns

    @permission_arns.setter
    def permission_arns(self, permission_arns):
        """Sets the permission_arns of this CreateResourceShareRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.

        :param permission_arns: The permission_arns of this CreateResourceShareRequest.
        :type permission_arns: List[str]
        """

        self._permission_arns = permission_arns

    @property
    def sources(self):
        """Gets the sources of this CreateResourceShareRequest.

        Specifies from which source accounts the service principal has access to the resources in this resource share.

        :return: The sources of this CreateResourceShareRequest.
        :rtype: List[str]
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this CreateResourceShareRequest.

        Specifies from which source accounts the service principal has access to the resources in this resource share.

        :param sources: The sources of this CreateResourceShareRequest.
        :type sources: List[str]
        """

        self._sources = sources
