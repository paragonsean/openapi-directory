# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.permission_feature_set import PermissionFeatureSet
from openapi_server import util


class AssociatedPermission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, permission_version: str=None, default_version: bool=None, resource_type: str=None, status: str=None, feature_set: PermissionFeatureSet=None, last_updated_time: datetime=None, resource_share_arn: str=None):
        """AssociatedPermission - a model defined in OpenAPI

        :param arn: The arn of this AssociatedPermission.
        :param permission_version: The permission_version of this AssociatedPermission.
        :param default_version: The default_version of this AssociatedPermission.
        :param resource_type: The resource_type of this AssociatedPermission.
        :param status: The status of this AssociatedPermission.
        :param feature_set: The feature_set of this AssociatedPermission.
        :param last_updated_time: The last_updated_time of this AssociatedPermission.
        :param resource_share_arn: The resource_share_arn of this AssociatedPermission.
        """
        self.openapi_types = {
            'arn': str,
            'permission_version': str,
            'default_version': bool,
            'resource_type': str,
            'status': str,
            'feature_set': PermissionFeatureSet,
            'last_updated_time': datetime,
            'resource_share_arn': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'permission_version': 'permissionVersion',
            'default_version': 'defaultVersion',
            'resource_type': 'resourceType',
            'status': 'status',
            'feature_set': 'featureSet',
            'last_updated_time': 'lastUpdatedTime',
            'resource_share_arn': 'resourceShareArn'
        }

        self._arn = arn
        self._permission_version = permission_version
        self._default_version = default_version
        self._resource_type = resource_type
        self._status = status
        self._feature_set = feature_set
        self._last_updated_time = last_updated_time
        self._resource_share_arn = resource_share_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociatedPermission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociatedPermission of this AssociatedPermission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this AssociatedPermission.


        :return: The arn of this AssociatedPermission.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this AssociatedPermission.


        :param arn: The arn of this AssociatedPermission.
        :type arn: str
        """

        self._arn = arn

    @property
    def permission_version(self):
        """Gets the permission_version of this AssociatedPermission.


        :return: The permission_version of this AssociatedPermission.
        :rtype: str
        """
        return self._permission_version

    @permission_version.setter
    def permission_version(self, permission_version):
        """Sets the permission_version of this AssociatedPermission.


        :param permission_version: The permission_version of this AssociatedPermission.
        :type permission_version: str
        """

        self._permission_version = permission_version

    @property
    def default_version(self):
        """Gets the default_version of this AssociatedPermission.


        :return: The default_version of this AssociatedPermission.
        :rtype: bool
        """
        return self._default_version

    @default_version.setter
    def default_version(self, default_version):
        """Sets the default_version of this AssociatedPermission.


        :param default_version: The default_version of this AssociatedPermission.
        :type default_version: bool
        """

        self._default_version = default_version

    @property
    def resource_type(self):
        """Gets the resource_type of this AssociatedPermission.


        :return: The resource_type of this AssociatedPermission.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this AssociatedPermission.


        :param resource_type: The resource_type of this AssociatedPermission.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def status(self):
        """Gets the status of this AssociatedPermission.


        :return: The status of this AssociatedPermission.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AssociatedPermission.


        :param status: The status of this AssociatedPermission.
        :type status: str
        """

        self._status = status

    @property
    def feature_set(self):
        """Gets the feature_set of this AssociatedPermission.


        :return: The feature_set of this AssociatedPermission.
        :rtype: PermissionFeatureSet
        """
        return self._feature_set

    @feature_set.setter
    def feature_set(self, feature_set):
        """Sets the feature_set of this AssociatedPermission.


        :param feature_set: The feature_set of this AssociatedPermission.
        :type feature_set: PermissionFeatureSet
        """

        self._feature_set = feature_set

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this AssociatedPermission.


        :return: The last_updated_time of this AssociatedPermission.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this AssociatedPermission.


        :param last_updated_time: The last_updated_time of this AssociatedPermission.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def resource_share_arn(self):
        """Gets the resource_share_arn of this AssociatedPermission.


        :return: The resource_share_arn of this AssociatedPermission.
        :rtype: str
        """
        return self._resource_share_arn

    @resource_share_arn.setter
    def resource_share_arn(self, resource_share_arn):
        """Sets the resource_share_arn of this AssociatedPermission.


        :param resource_share_arn: The resource_share_arn of this AssociatedPermission.
        :type resource_share_arn: str
        """

        self._resource_share_arn = resource_share_arn
