# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_region_scope import ResourceRegionScope
from openapi_server import util


class ServiceNameAndResourceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type: str=None, service_name: str=None, resource_region_scope: ResourceRegionScope=None):
        """ServiceNameAndResourceType - a model defined in OpenAPI

        :param resource_type: The resource_type of this ServiceNameAndResourceType.
        :param service_name: The service_name of this ServiceNameAndResourceType.
        :param resource_region_scope: The resource_region_scope of this ServiceNameAndResourceType.
        """
        self.openapi_types = {
            'resource_type': str,
            'service_name': str,
            'resource_region_scope': ResourceRegionScope
        }

        self.attribute_map = {
            'resource_type': 'resourceType',
            'service_name': 'serviceName',
            'resource_region_scope': 'resourceRegionScope'
        }

        self._resource_type = resource_type
        self._service_name = service_name
        self._resource_region_scope = resource_region_scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceNameAndResourceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceNameAndResourceType of this ServiceNameAndResourceType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self):
        """Gets the resource_type of this ServiceNameAndResourceType.


        :return: The resource_type of this ServiceNameAndResourceType.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ServiceNameAndResourceType.


        :param resource_type: The resource_type of this ServiceNameAndResourceType.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def service_name(self):
        """Gets the service_name of this ServiceNameAndResourceType.


        :return: The service_name of this ServiceNameAndResourceType.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceNameAndResourceType.


        :param service_name: The service_name of this ServiceNameAndResourceType.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def resource_region_scope(self):
        """Gets the resource_region_scope of this ServiceNameAndResourceType.


        :return: The resource_region_scope of this ServiceNameAndResourceType.
        :rtype: ResourceRegionScope
        """
        return self._resource_region_scope

    @resource_region_scope.setter
    def resource_region_scope(self, resource_region_scope):
        """Sets the resource_region_scope of this ServiceNameAndResourceType.


        :param resource_region_scope: The resource_region_scope of this ServiceNameAndResourceType.
        :type resource_region_scope: ResourceRegionScope
        """

        self._resource_region_scope = resource_region_scope
