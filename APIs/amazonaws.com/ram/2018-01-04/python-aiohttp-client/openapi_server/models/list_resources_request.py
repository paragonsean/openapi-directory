# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListResourcesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_owner: str=None, principal: str=None, resource_type: str=None, resource_arns: List[str]=None, resource_share_arns: List[str]=None, next_token: str=None, max_results: int=None, resource_region_scope: str=None):
        """ListResourcesRequest - a model defined in OpenAPI

        :param resource_owner: The resource_owner of this ListResourcesRequest.
        :param principal: The principal of this ListResourcesRequest.
        :param resource_type: The resource_type of this ListResourcesRequest.
        :param resource_arns: The resource_arns of this ListResourcesRequest.
        :param resource_share_arns: The resource_share_arns of this ListResourcesRequest.
        :param next_token: The next_token of this ListResourcesRequest.
        :param max_results: The max_results of this ListResourcesRequest.
        :param resource_region_scope: The resource_region_scope of this ListResourcesRequest.
        """
        self.openapi_types = {
            'resource_owner': str,
            'principal': str,
            'resource_type': str,
            'resource_arns': List[str],
            'resource_share_arns': List[str],
            'next_token': str,
            'max_results': int,
            'resource_region_scope': str
        }

        self.attribute_map = {
            'resource_owner': 'resourceOwner',
            'principal': 'principal',
            'resource_type': 'resourceType',
            'resource_arns': 'resourceArns',
            'resource_share_arns': 'resourceShareArns',
            'next_token': 'nextToken',
            'max_results': 'maxResults',
            'resource_region_scope': 'resourceRegionScope'
        }

        self._resource_owner = resource_owner
        self._principal = principal
        self._resource_type = resource_type
        self._resource_arns = resource_arns
        self._resource_share_arns = resource_share_arns
        self._next_token = next_token
        self._max_results = max_results
        self._resource_region_scope = resource_region_scope

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListResourcesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListResources_request of this ListResourcesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_owner(self):
        """Gets the resource_owner of this ListResourcesRequest.

        <p>Specifies that you want to list only the resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – resources that your account shares with other accounts</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – resources that other accounts share with your account</p> </li> </ul>

        :return: The resource_owner of this ListResourcesRequest.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this ListResourcesRequest.

        <p>Specifies that you want to list only the resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – resources that your account shares with other accounts</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – resources that other accounts share with your account</p> </li> </ul>

        :param resource_owner: The resource_owner of this ListResourcesRequest.
        :type resource_owner: str
        """
        allowed_values = ["SELF", "OTHER-ACCOUNTS"]  # noqa: E501
        if resource_owner not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_owner` ({0}), must be one of {1}"
                .format(resource_owner, allowed_values)
            )

        self._resource_owner = resource_owner

    @property
    def principal(self):
        """Gets the principal of this ListResourcesRequest.

        Specifies that you want to list only the resource shares that are associated with the specified principal.

        :return: The principal of this ListResourcesRequest.
        :rtype: str
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this ListResourcesRequest.

        Specifies that you want to list only the resource shares that are associated with the specified principal.

        :param principal: The principal of this ListResourcesRequest.
        :type principal: str
        """

        self._principal = principal

    @property
    def resource_type(self):
        """Gets the resource_type of this ListResourcesRequest.

        <p>Specifies that you want to list only the resource shares that include resources of the specified resource type.</p> <p>For valid values, query the <a>ListResourceTypes</a> operation.</p>

        :return: The resource_type of this ListResourcesRequest.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ListResourcesRequest.

        <p>Specifies that you want to list only the resource shares that include resources of the specified resource type.</p> <p>For valid values, query the <a>ListResourceTypes</a> operation.</p>

        :param resource_type: The resource_type of this ListResourcesRequest.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_arns(self):
        """Gets the resource_arns of this ListResourcesRequest.

        Specifies that you want to list only the resource shares that include resources with the specified <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a>.

        :return: The resource_arns of this ListResourcesRequest.
        :rtype: List[str]
        """
        return self._resource_arns

    @resource_arns.setter
    def resource_arns(self, resource_arns):
        """Sets the resource_arns of this ListResourcesRequest.

        Specifies that you want to list only the resource shares that include resources with the specified <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a>.

        :param resource_arns: The resource_arns of this ListResourcesRequest.
        :type resource_arns: List[str]
        """

        self._resource_arns = resource_arns

    @property
    def resource_share_arns(self):
        """Gets the resource_share_arns of this ListResourcesRequest.

        Specifies that you want to list only resources in the resource shares identified by the specified <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a>.

        :return: The resource_share_arns of this ListResourcesRequest.
        :rtype: List[str]
        """
        return self._resource_share_arns

    @resource_share_arns.setter
    def resource_share_arns(self, resource_share_arns):
        """Sets the resource_share_arns of this ListResourcesRequest.

        Specifies that you want to list only resources in the resource shares identified by the specified <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a>.

        :param resource_share_arns: The resource_share_arns of this ListResourcesRequest.
        :type resource_share_arns: List[str]
        """

        self._resource_share_arns = resource_share_arns

    @property
    def next_token(self):
        """Gets the next_token of this ListResourcesRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :return: The next_token of this ListResourcesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListResourcesRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :param next_token: The next_token of this ListResourcesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListResourcesRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :return: The max_results of this ListResourcesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListResourcesRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :param max_results: The max_results of this ListResourcesRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 500:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `500`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def resource_region_scope(self):
        """Gets the resource_region_scope of this ListResourcesRequest.

        <p>Specifies that you want the results to include only resources that have the specified scope.</p> <ul> <li> <p> <code>ALL</code> – the results include both global and regional resources or resource types.</p> </li> <li> <p> <code>GLOBAL</code> – the results include only global resources or resource types.</p> </li> <li> <p> <code>REGIONAL</code> – the results include only regional resources or resource types.</p> </li> </ul> <p>The default value is <code>ALL</code>.</p>

        :return: The resource_region_scope of this ListResourcesRequest.
        :rtype: str
        """
        return self._resource_region_scope

    @resource_region_scope.setter
    def resource_region_scope(self, resource_region_scope):
        """Sets the resource_region_scope of this ListResourcesRequest.

        <p>Specifies that you want the results to include only resources that have the specified scope.</p> <ul> <li> <p> <code>ALL</code> – the results include both global and regional resources or resource types.</p> </li> <li> <p> <code>GLOBAL</code> – the results include only global resources or resource types.</p> </li> <li> <p> <code>REGIONAL</code> – the results include only regional resources or resource types.</p> </li> </ul> <p>The default value is <code>ALL</code>.</p>

        :param resource_region_scope: The resource_region_scope of this ListResourcesRequest.
        :type resource_region_scope: str
        """
        allowed_values = ["ALL", "REGIONAL", "GLOBAL"]  # noqa: E501
        if resource_region_scope not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_region_scope` ({0}), must be one of {1}"
                .format(resource_region_scope, allowed_values)
            )

        self._resource_region_scope = resource_region_scope
