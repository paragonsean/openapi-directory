# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_share_permission_detail import ResourceSharePermissionDetail
from openapi_server import util


class CreatePermissionVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permission: ResourceSharePermissionDetail=None, client_token: str=None):
        """CreatePermissionVersionResponse - a model defined in OpenAPI

        :param permission: The permission of this CreatePermissionVersionResponse.
        :param client_token: The client_token of this CreatePermissionVersionResponse.
        """
        self.openapi_types = {
            'permission': ResourceSharePermissionDetail,
            'client_token': str
        }

        self.attribute_map = {
            'permission': 'permission',
            'client_token': 'clientToken'
        }

        self._permission = permission
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePermissionVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePermissionVersionResponse of this CreatePermissionVersionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permission(self):
        """Gets the permission of this CreatePermissionVersionResponse.


        :return: The permission of this CreatePermissionVersionResponse.
        :rtype: ResourceSharePermissionDetail
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this CreatePermissionVersionResponse.


        :param permission: The permission of this CreatePermissionVersionResponse.
        :type permission: ResourceSharePermissionDetail
        """

        self._permission = permission

    @property
    def client_token(self):
        """Gets the client_token of this CreatePermissionVersionResponse.


        :return: The client_token of this CreatePermissionVersionResponse.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreatePermissionVersionResponse.


        :param client_token: The client_token of this CreatePermissionVersionResponse.
        :type client_token: str
        """

        self._client_token = client_token
