# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_filter import TagFilter
from openapi_server import util


class GetResourceSharesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_share_arns: List[str]=None, resource_share_status: str=None, resource_owner: str=None, name: str=None, tag_filters: List[TagFilter]=None, next_token: str=None, max_results: int=None, permission_arn: str=None, permission_version: int=None):
        """GetResourceSharesRequest - a model defined in OpenAPI

        :param resource_share_arns: The resource_share_arns of this GetResourceSharesRequest.
        :param resource_share_status: The resource_share_status of this GetResourceSharesRequest.
        :param resource_owner: The resource_owner of this GetResourceSharesRequest.
        :param name: The name of this GetResourceSharesRequest.
        :param tag_filters: The tag_filters of this GetResourceSharesRequest.
        :param next_token: The next_token of this GetResourceSharesRequest.
        :param max_results: The max_results of this GetResourceSharesRequest.
        :param permission_arn: The permission_arn of this GetResourceSharesRequest.
        :param permission_version: The permission_version of this GetResourceSharesRequest.
        """
        self.openapi_types = {
            'resource_share_arns': List[str],
            'resource_share_status': str,
            'resource_owner': str,
            'name': str,
            'tag_filters': List[TagFilter],
            'next_token': str,
            'max_results': int,
            'permission_arn': str,
            'permission_version': int
        }

        self.attribute_map = {
            'resource_share_arns': 'resourceShareArns',
            'resource_share_status': 'resourceShareStatus',
            'resource_owner': 'resourceOwner',
            'name': 'name',
            'tag_filters': 'tagFilters',
            'next_token': 'nextToken',
            'max_results': 'maxResults',
            'permission_arn': 'permissionArn',
            'permission_version': 'permissionVersion'
        }

        self._resource_share_arns = resource_share_arns
        self._resource_share_status = resource_share_status
        self._resource_owner = resource_owner
        self._name = name
        self._tag_filters = tag_filters
        self._next_token = next_token
        self._max_results = max_results
        self._permission_arn = permission_arn
        self._permission_version = permission_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetResourceSharesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetResourceShares_request of this GetResourceSharesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_share_arns(self):
        """Gets the resource_share_arns of this GetResourceSharesRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> of individual resource shares that you want information about.

        :return: The resource_share_arns of this GetResourceSharesRequest.
        :rtype: List[str]
        """
        return self._resource_share_arns

    @resource_share_arns.setter
    def resource_share_arns(self, resource_share_arns):
        """Sets the resource_share_arns of this GetResourceSharesRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> of individual resource shares that you want information about.

        :param resource_share_arns: The resource_share_arns of this GetResourceSharesRequest.
        :type resource_share_arns: List[str]
        """

        self._resource_share_arns = resource_share_arns

    @property
    def resource_share_status(self):
        """Gets the resource_share_status of this GetResourceSharesRequest.

        Specifies that you want to retrieve details of only those resource shares that have this status.

        :return: The resource_share_status of this GetResourceSharesRequest.
        :rtype: str
        """
        return self._resource_share_status

    @resource_share_status.setter
    def resource_share_status(self, resource_share_status):
        """Sets the resource_share_status of this GetResourceSharesRequest.

        Specifies that you want to retrieve details of only those resource shares that have this status.

        :param resource_share_status: The resource_share_status of this GetResourceSharesRequest.
        :type resource_share_status: str
        """
        allowed_values = ["PENDING", "ACTIVE", "FAILED", "DELETING", "DELETED"]  # noqa: E501
        if resource_share_status not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_share_status` ({0}), must be one of {1}"
                .format(resource_share_status, allowed_values)
            )

        self._resource_share_status = resource_share_status

    @property
    def resource_owner(self):
        """Gets the resource_owner of this GetResourceSharesRequest.

        <p>Specifies that you want to retrieve details of only those resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – resource shares that your account shares with other accounts</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – resource shares that other accounts share with your account</p> </li> </ul>

        :return: The resource_owner of this GetResourceSharesRequest.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this GetResourceSharesRequest.

        <p>Specifies that you want to retrieve details of only those resource shares that match the following:</p> <ul> <li> <p> <b> <code>SELF</code> </b> – resource shares that your account shares with other accounts</p> </li> <li> <p> <b> <code>OTHER-ACCOUNTS</code> </b> – resource shares that other accounts share with your account</p> </li> </ul>

        :param resource_owner: The resource_owner of this GetResourceSharesRequest.
        :type resource_owner: str
        """
        allowed_values = ["SELF", "OTHER-ACCOUNTS"]  # noqa: E501
        if resource_owner not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_owner` ({0}), must be one of {1}"
                .format(resource_owner, allowed_values)
            )

        self._resource_owner = resource_owner

    @property
    def name(self):
        """Gets the name of this GetResourceSharesRequest.

        Specifies the name of an individual resource share that you want to retrieve details about.

        :return: The name of this GetResourceSharesRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetResourceSharesRequest.

        Specifies the name of an individual resource share that you want to retrieve details about.

        :param name: The name of this GetResourceSharesRequest.
        :type name: str
        """

        self._name = name

    @property
    def tag_filters(self):
        """Gets the tag_filters of this GetResourceSharesRequest.

        Specifies that you want to retrieve details of only those resource shares that match the specified tag keys and values.

        :return: The tag_filters of this GetResourceSharesRequest.
        :rtype: List[TagFilter]
        """
        return self._tag_filters

    @tag_filters.setter
    def tag_filters(self, tag_filters):
        """Sets the tag_filters of this GetResourceSharesRequest.

        Specifies that you want to retrieve details of only those resource shares that match the specified tag keys and values.

        :param tag_filters: The tag_filters of this GetResourceSharesRequest.
        :type tag_filters: List[TagFilter]
        """

        self._tag_filters = tag_filters

    @property
    def next_token(self):
        """Gets the next_token of this GetResourceSharesRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :return: The next_token of this GetResourceSharesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetResourceSharesRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :param next_token: The next_token of this GetResourceSharesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this GetResourceSharesRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :return: The max_results of this GetResourceSharesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetResourceSharesRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :param max_results: The max_results of this GetResourceSharesRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 500:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `500`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def permission_arn(self):
        """Gets the permission_arn of this GetResourceSharesRequest.

        Specifies that you want to retrieve details of only those resource shares that use the managed permission with this <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a>.

        :return: The permission_arn of this GetResourceSharesRequest.
        :rtype: str
        """
        return self._permission_arn

    @permission_arn.setter
    def permission_arn(self, permission_arn):
        """Sets the permission_arn of this GetResourceSharesRequest.

        Specifies that you want to retrieve details of only those resource shares that use the managed permission with this <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a>.

        :param permission_arn: The permission_arn of this GetResourceSharesRequest.
        :type permission_arn: str
        """

        self._permission_arn = permission_arn

    @property
    def permission_version(self):
        """Gets the permission_version of this GetResourceSharesRequest.

        Specifies that you want to retrieve details for only those resource shares that use the specified version of the managed permission.

        :return: The permission_version of this GetResourceSharesRequest.
        :rtype: int
        """
        return self._permission_version

    @permission_version.setter
    def permission_version(self, permission_version):
        """Sets the permission_version of this GetResourceSharesRequest.

        Specifies that you want to retrieve details for only those resource shares that use the specified version of the managed permission.

        :param permission_version: The permission_version of this GetResourceSharesRequest.
        :type permission_version: int
        """

        self._permission_version = permission_version
