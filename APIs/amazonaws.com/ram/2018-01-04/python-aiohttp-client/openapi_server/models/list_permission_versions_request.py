# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListPermissionVersionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permission_arn: str=None, next_token: str=None, max_results: int=None):
        """ListPermissionVersionsRequest - a model defined in OpenAPI

        :param permission_arn: The permission_arn of this ListPermissionVersionsRequest.
        :param next_token: The next_token of this ListPermissionVersionsRequest.
        :param max_results: The max_results of this ListPermissionVersionsRequest.
        """
        self.openapi_types = {
            'permission_arn': str,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'permission_arn': 'permissionArn',
            'next_token': 'nextToken',
            'max_results': 'maxResults'
        }

        self._permission_arn = permission_arn
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPermissionVersionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPermissionVersions_request of this ListPermissionVersionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permission_arn(self):
        """Gets the permission_arn of this ListPermissionVersionsRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the RAM permission whose versions you want to list. You can use the <code>permissionVersion</code> parameter on the <a>AssociateResourceSharePermission</a> operation to specify a non-default version to attach.

        :return: The permission_arn of this ListPermissionVersionsRequest.
        :rtype: str
        """
        return self._permission_arn

    @permission_arn.setter
    def permission_arn(self, permission_arn):
        """Sets the permission_arn of this ListPermissionVersionsRequest.

        Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the RAM permission whose versions you want to list. You can use the <code>permissionVersion</code> parameter on the <a>AssociateResourceSharePermission</a> operation to specify a non-default version to attach.

        :param permission_arn: The permission_arn of this ListPermissionVersionsRequest.
        :type permission_arn: str
        """
        if permission_arn is None:
            raise ValueError("Invalid value for `permission_arn`, must not be `None`")

        self._permission_arn = permission_arn

    @property
    def next_token(self):
        """Gets the next_token of this ListPermissionVersionsRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :return: The next_token of this ListPermissionVersionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListPermissionVersionsRequest.

        Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.

        :param next_token: The next_token of this ListPermissionVersionsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListPermissionVersionsRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :return: The max_results of this ListPermissionVersionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListPermissionVersionsRequest.

        Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the <code>NextToken</code> response element is returned with a value (not null). Include the specified value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.

        :param max_results: The max_results of this ListPermissionVersionsRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 500:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `500`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results
