# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_share_association_status import ResourceShareAssociationStatus
from openapi_server.models.resource_share_association_type import ResourceShareAssociationType
from openapi_server import util


class ResourceShareAssociation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_share_arn: str=None, resource_share_name: str=None, associated_entity: str=None, association_type: ResourceShareAssociationType=None, status: ResourceShareAssociationStatus=None, status_message: str=None, creation_time: datetime=None, last_updated_time: datetime=None, external: bool=None):
        """ResourceShareAssociation - a model defined in OpenAPI

        :param resource_share_arn: The resource_share_arn of this ResourceShareAssociation.
        :param resource_share_name: The resource_share_name of this ResourceShareAssociation.
        :param associated_entity: The associated_entity of this ResourceShareAssociation.
        :param association_type: The association_type of this ResourceShareAssociation.
        :param status: The status of this ResourceShareAssociation.
        :param status_message: The status_message of this ResourceShareAssociation.
        :param creation_time: The creation_time of this ResourceShareAssociation.
        :param last_updated_time: The last_updated_time of this ResourceShareAssociation.
        :param external: The external of this ResourceShareAssociation.
        """
        self.openapi_types = {
            'resource_share_arn': str,
            'resource_share_name': str,
            'associated_entity': str,
            'association_type': ResourceShareAssociationType,
            'status': ResourceShareAssociationStatus,
            'status_message': str,
            'creation_time': datetime,
            'last_updated_time': datetime,
            'external': bool
        }

        self.attribute_map = {
            'resource_share_arn': 'resourceShareArn',
            'resource_share_name': 'resourceShareName',
            'associated_entity': 'associatedEntity',
            'association_type': 'associationType',
            'status': 'status',
            'status_message': 'statusMessage',
            'creation_time': 'creationTime',
            'last_updated_time': 'lastUpdatedTime',
            'external': 'external'
        }

        self._resource_share_arn = resource_share_arn
        self._resource_share_name = resource_share_name
        self._associated_entity = associated_entity
        self._association_type = association_type
        self._status = status
        self._status_message = status_message
        self._creation_time = creation_time
        self._last_updated_time = last_updated_time
        self._external = external

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceShareAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceShareAssociation of this ResourceShareAssociation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_share_arn(self):
        """Gets the resource_share_arn of this ResourceShareAssociation.


        :return: The resource_share_arn of this ResourceShareAssociation.
        :rtype: str
        """
        return self._resource_share_arn

    @resource_share_arn.setter
    def resource_share_arn(self, resource_share_arn):
        """Sets the resource_share_arn of this ResourceShareAssociation.


        :param resource_share_arn: The resource_share_arn of this ResourceShareAssociation.
        :type resource_share_arn: str
        """

        self._resource_share_arn = resource_share_arn

    @property
    def resource_share_name(self):
        """Gets the resource_share_name of this ResourceShareAssociation.


        :return: The resource_share_name of this ResourceShareAssociation.
        :rtype: str
        """
        return self._resource_share_name

    @resource_share_name.setter
    def resource_share_name(self, resource_share_name):
        """Sets the resource_share_name of this ResourceShareAssociation.


        :param resource_share_name: The resource_share_name of this ResourceShareAssociation.
        :type resource_share_name: str
        """

        self._resource_share_name = resource_share_name

    @property
    def associated_entity(self):
        """Gets the associated_entity of this ResourceShareAssociation.


        :return: The associated_entity of this ResourceShareAssociation.
        :rtype: str
        """
        return self._associated_entity

    @associated_entity.setter
    def associated_entity(self, associated_entity):
        """Sets the associated_entity of this ResourceShareAssociation.


        :param associated_entity: The associated_entity of this ResourceShareAssociation.
        :type associated_entity: str
        """

        self._associated_entity = associated_entity

    @property
    def association_type(self):
        """Gets the association_type of this ResourceShareAssociation.


        :return: The association_type of this ResourceShareAssociation.
        :rtype: ResourceShareAssociationType
        """
        return self._association_type

    @association_type.setter
    def association_type(self, association_type):
        """Sets the association_type of this ResourceShareAssociation.


        :param association_type: The association_type of this ResourceShareAssociation.
        :type association_type: ResourceShareAssociationType
        """

        self._association_type = association_type

    @property
    def status(self):
        """Gets the status of this ResourceShareAssociation.


        :return: The status of this ResourceShareAssociation.
        :rtype: ResourceShareAssociationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ResourceShareAssociation.


        :param status: The status of this ResourceShareAssociation.
        :type status: ResourceShareAssociationStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this ResourceShareAssociation.


        :return: The status_message of this ResourceShareAssociation.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this ResourceShareAssociation.


        :param status_message: The status_message of this ResourceShareAssociation.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def creation_time(self):
        """Gets the creation_time of this ResourceShareAssociation.


        :return: The creation_time of this ResourceShareAssociation.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ResourceShareAssociation.


        :param creation_time: The creation_time of this ResourceShareAssociation.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this ResourceShareAssociation.


        :return: The last_updated_time of this ResourceShareAssociation.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this ResourceShareAssociation.


        :param last_updated_time: The last_updated_time of this ResourceShareAssociation.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def external(self):
        """Gets the external of this ResourceShareAssociation.


        :return: The external of this ResourceShareAssociation.
        :rtype: bool
        """
        return self._external

    @external.setter
    def external(self, external):
        """Sets the external of this ResourceShareAssociation.


        :param external: The external of this ResourceShareAssociation.
        :type external: bool
        """

        self._external = external
