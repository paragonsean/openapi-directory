/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceShareInvitationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceShareInvitationStatus::OAIResourceShareInvitationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceShareInvitationStatus::OAIResourceShareInvitationStatus() {
    this->initializeModel();
}

OAIResourceShareInvitationStatus::~OAIResourceShareInvitationStatus() {}

void OAIResourceShareInvitationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIResourceShareInvitationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIResourceShareInvitationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceShareInvitationStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCEPTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceShareInvitationStatus::ACCEPTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REJECTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceShareInvitationStatus::REJECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXPIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIResourceShareInvitationStatus::EXPIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIResourceShareInvitationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIResourceShareInvitationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIResourceShareInvitationStatus::PENDING:
            val = "PENDING";
            break;
        case eOAIResourceShareInvitationStatus::ACCEPTED:
            val = "ACCEPTED";
            break;
        case eOAIResourceShareInvitationStatus::REJECTED:
            val = "REJECTED";
            break;
        case eOAIResourceShareInvitationStatus::EXPIRED:
            val = "EXPIRED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIResourceShareInvitationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIResourceShareInvitationStatus::eOAIResourceShareInvitationStatus OAIResourceShareInvitationStatus::getValue() const {
    return m_value;
}

void OAIResourceShareInvitationStatus::setValue(const OAIResourceShareInvitationStatus::eOAIResourceShareInvitationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIResourceShareInvitationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIResourceShareInvitationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
