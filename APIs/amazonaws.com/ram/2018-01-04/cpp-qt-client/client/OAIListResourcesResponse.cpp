/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListResourcesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListResourcesResponse::OAIListResourcesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListResourcesResponse::OAIListResourcesResponse() {
    this->initializeModel();
}

OAIListResourcesResponse::~OAIListResourcesResponse() {}

void OAIListResourcesResponse::initializeModel() {

    m_resources_isSet = false;
    m_resources_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListResourcesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListResourcesResponse::fromJsonObject(QJsonObject json) {

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListResourcesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListResourcesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_resources.isSet()) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListResourcesResponse::getResources() const {
    return m_resources;
}
void OAIListResourcesResponse::setResources(const QList &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIListResourcesResponse::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIListResourcesResponse::is_resources_Valid() const{
    return m_resources_isValid;
}

QString OAIListResourcesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListResourcesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListResourcesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListResourcesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListResourcesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListResourcesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
