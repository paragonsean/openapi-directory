/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceShare.h
 *
 * Describes a resource share in RAM.
 */

#ifndef OAIResourceShare_H
#define OAIResourceShare_H

#include <QJsonObject>

#include "OAIResourceShareFeatureSet.h"
#include "OAIResourceShareStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceShare : public OAIObject {
public:
    OAIResourceShare();
    OAIResourceShare(QString json);
    ~OAIResourceShare() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceShareArn() const;
    void setResourceShareArn(const QString &resource_share_arn);
    bool is_resource_share_arn_Set() const;
    bool is_resource_share_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwningAccountId() const;
    void setOwningAccountId(const QString &owning_account_id);
    bool is_owning_account_id_Set() const;
    bool is_owning_account_id_Valid() const;

    bool getAllowExternalPrincipals() const;
    void setAllowExternalPrincipals(const bool &allow_external_principals);
    bool is_allow_external_principals_Set() const;
    bool is_allow_external_principals_Valid() const;

    OAIResourceShareStatus getStatus() const;
    void setStatus(const OAIResourceShareStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    OAIResourceShareFeatureSet getFeatureSet() const;
    void setFeatureSet(const OAIResourceShareFeatureSet &feature_set);
    bool is_feature_set_Set() const;
    bool is_feature_set_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_share_arn;
    bool m_resource_share_arn_isSet;
    bool m_resource_share_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owning_account_id;
    bool m_owning_account_id_isSet;
    bool m_owning_account_id_isValid;

    bool m_allow_external_principals;
    bool m_allow_external_principals_isSet;
    bool m_allow_external_principals_isValid;

    OAIResourceShareStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    OAIResourceShareFeatureSet m_feature_set;
    bool m_feature_set_isSet;
    bool m_feature_set_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceShare)

#endif // OAIResourceShare_H
