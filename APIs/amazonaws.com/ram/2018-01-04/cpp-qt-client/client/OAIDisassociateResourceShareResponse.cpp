/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDisassociateResourceShareResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDisassociateResourceShareResponse::OAIDisassociateResourceShareResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDisassociateResourceShareResponse::OAIDisassociateResourceShareResponse() {
    this->initializeModel();
}

OAIDisassociateResourceShareResponse::~OAIDisassociateResourceShareResponse() {}

void OAIDisassociateResourceShareResponse::initializeModel() {

    m_resource_share_associations_isSet = false;
    m_resource_share_associations_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIDisassociateResourceShareResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDisassociateResourceShareResponse::fromJsonObject(QJsonObject json) {

    m_resource_share_associations_isValid = ::OpenAPI::fromJsonValue(m_resource_share_associations, json[QString("resourceShareAssociations")]);
    m_resource_share_associations_isSet = !json[QString("resourceShareAssociations")].isNull() && m_resource_share_associations_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;
}

QString OAIDisassociateResourceShareResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDisassociateResourceShareResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_share_associations.isSet()) {
        obj.insert(QString("resourceShareAssociations"), ::OpenAPI::toJsonValue(m_resource_share_associations));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QList OAIDisassociateResourceShareResponse::getResourceShareAssociations() const {
    return m_resource_share_associations;
}
void OAIDisassociateResourceShareResponse::setResourceShareAssociations(const QList &resource_share_associations) {
    m_resource_share_associations = resource_share_associations;
    m_resource_share_associations_isSet = true;
}

bool OAIDisassociateResourceShareResponse::is_resource_share_associations_Set() const{
    return m_resource_share_associations_isSet;
}

bool OAIDisassociateResourceShareResponse::is_resource_share_associations_Valid() const{
    return m_resource_share_associations_isValid;
}

QString OAIDisassociateResourceShareResponse::getClientToken() const {
    return m_client_token;
}
void OAIDisassociateResourceShareResponse::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIDisassociateResourceShareResponse::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIDisassociateResourceShareResponse::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIDisassociateResourceShareResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_share_associations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDisassociateResourceShareResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
