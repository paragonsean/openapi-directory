/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssociatedPermission.h
 *
 * An object that describes a managed permission associated with a resource share.
 */

#ifndef OAIAssociatedPermission_H
#define OAIAssociatedPermission_H

#include <QJsonObject>

#include "OAIPermissionFeatureSet.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssociatedPermission : public OAIObject {
public:
    OAIAssociatedPermission();
    OAIAssociatedPermission(QString json);
    ~OAIAssociatedPermission() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getPermissionVersion() const;
    void setPermissionVersion(const QString &permission_version);
    bool is_permission_version_Set() const;
    bool is_permission_version_Valid() const;

    bool getDefaultVersion() const;
    void setDefaultVersion(const bool &default_version);
    bool is_default_version_Set() const;
    bool is_default_version_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIPermissionFeatureSet getFeatureSet() const;
    void setFeatureSet(const OAIPermissionFeatureSet &feature_set);
    bool is_feature_set_Set() const;
    bool is_feature_set_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QString getResourceShareArn() const;
    void setResourceShareArn(const QString &resource_share_arn);
    bool is_resource_share_arn_Set() const;
    bool is_resource_share_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_permission_version;
    bool m_permission_version_isSet;
    bool m_permission_version_isValid;

    bool m_default_version;
    bool m_default_version_isSet;
    bool m_default_version_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIPermissionFeatureSet m_feature_set;
    bool m_feature_set_isSet;
    bool m_feature_set_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QString m_resource_share_arn;
    bool m_resource_share_arn_isSet;
    bool m_resource_share_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssociatedPermission)

#endif // OAIAssociatedPermission_H
