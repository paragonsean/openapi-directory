/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptResourceShareInvitationResponse_resourceShareInvitation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::OAIAcceptResourceShareInvitationResponse_resourceShareInvitation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::OAIAcceptResourceShareInvitationResponse_resourceShareInvitation() {
    this->initializeModel();
}

OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::~OAIAcceptResourceShareInvitationResponse_resourceShareInvitation() {}

void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::initializeModel() {

    m_resource_share_invitation_arn_isSet = false;
    m_resource_share_invitation_arn_isValid = false;

    m_resource_share_name_isSet = false;
    m_resource_share_name_isValid = false;

    m_resource_share_arn_isSet = false;
    m_resource_share_arn_isValid = false;

    m_sender_account_id_isSet = false;
    m_sender_account_id_isValid = false;

    m_receiver_account_id_isSet = false;
    m_receiver_account_id_isValid = false;

    m_invitation_timestamp_isSet = false;
    m_invitation_timestamp_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_resource_share_associations_isSet = false;
    m_resource_share_associations_isValid = false;

    m_receiver_arn_isSet = false;
    m_receiver_arn_isValid = false;
}

void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::fromJsonObject(QJsonObject json) {

    m_resource_share_invitation_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_share_invitation_arn, json[QString("resourceShareInvitationArn")]);
    m_resource_share_invitation_arn_isSet = !json[QString("resourceShareInvitationArn")].isNull() && m_resource_share_invitation_arn_isValid;

    m_resource_share_name_isValid = ::OpenAPI::fromJsonValue(m_resource_share_name, json[QString("resourceShareName")]);
    m_resource_share_name_isSet = !json[QString("resourceShareName")].isNull() && m_resource_share_name_isValid;

    m_resource_share_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_share_arn, json[QString("resourceShareArn")]);
    m_resource_share_arn_isSet = !json[QString("resourceShareArn")].isNull() && m_resource_share_arn_isValid;

    m_sender_account_id_isValid = ::OpenAPI::fromJsonValue(m_sender_account_id, json[QString("senderAccountId")]);
    m_sender_account_id_isSet = !json[QString("senderAccountId")].isNull() && m_sender_account_id_isValid;

    m_receiver_account_id_isValid = ::OpenAPI::fromJsonValue(m_receiver_account_id, json[QString("receiverAccountId")]);
    m_receiver_account_id_isSet = !json[QString("receiverAccountId")].isNull() && m_receiver_account_id_isValid;

    m_invitation_timestamp_isValid = ::OpenAPI::fromJsonValue(m_invitation_timestamp, json[QString("invitationTimestamp")]);
    m_invitation_timestamp_isSet = !json[QString("invitationTimestamp")].isNull() && m_invitation_timestamp_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_resource_share_associations_isValid = ::OpenAPI::fromJsonValue(m_resource_share_associations, json[QString("resourceShareAssociations")]);
    m_resource_share_associations_isSet = !json[QString("resourceShareAssociations")].isNull() && m_resource_share_associations_isValid;

    m_receiver_arn_isValid = ::OpenAPI::fromJsonValue(m_receiver_arn, json[QString("receiverArn")]);
    m_receiver_arn_isSet = !json[QString("receiverArn")].isNull() && m_receiver_arn_isValid;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_share_invitation_arn_isSet) {
        obj.insert(QString("resourceShareInvitationArn"), ::OpenAPI::toJsonValue(m_resource_share_invitation_arn));
    }
    if (m_resource_share_name_isSet) {
        obj.insert(QString("resourceShareName"), ::OpenAPI::toJsonValue(m_resource_share_name));
    }
    if (m_resource_share_arn_isSet) {
        obj.insert(QString("resourceShareArn"), ::OpenAPI::toJsonValue(m_resource_share_arn));
    }
    if (m_sender_account_id_isSet) {
        obj.insert(QString("senderAccountId"), ::OpenAPI::toJsonValue(m_sender_account_id));
    }
    if (m_receiver_account_id_isSet) {
        obj.insert(QString("receiverAccountId"), ::OpenAPI::toJsonValue(m_receiver_account_id));
    }
    if (m_invitation_timestamp_isSet) {
        obj.insert(QString("invitationTimestamp"), ::OpenAPI::toJsonValue(m_invitation_timestamp));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_resource_share_associations.isSet()) {
        obj.insert(QString("resourceShareAssociations"), ::OpenAPI::toJsonValue(m_resource_share_associations));
    }
    if (m_receiver_arn_isSet) {
        obj.insert(QString("receiverArn"), ::OpenAPI::toJsonValue(m_receiver_arn));
    }
    return obj;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getResourceShareInvitationArn() const {
    return m_resource_share_invitation_arn;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setResourceShareInvitationArn(const QString &resource_share_invitation_arn) {
    m_resource_share_invitation_arn = resource_share_invitation_arn;
    m_resource_share_invitation_arn_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_invitation_arn_Set() const{
    return m_resource_share_invitation_arn_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_invitation_arn_Valid() const{
    return m_resource_share_invitation_arn_isValid;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getResourceShareName() const {
    return m_resource_share_name;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setResourceShareName(const QString &resource_share_name) {
    m_resource_share_name = resource_share_name;
    m_resource_share_name_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_name_Set() const{
    return m_resource_share_name_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_name_Valid() const{
    return m_resource_share_name_isValid;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getResourceShareArn() const {
    return m_resource_share_arn;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setResourceShareArn(const QString &resource_share_arn) {
    m_resource_share_arn = resource_share_arn;
    m_resource_share_arn_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_arn_Set() const{
    return m_resource_share_arn_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_arn_Valid() const{
    return m_resource_share_arn_isValid;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getSenderAccountId() const {
    return m_sender_account_id;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setSenderAccountId(const QString &sender_account_id) {
    m_sender_account_id = sender_account_id;
    m_sender_account_id_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_sender_account_id_Set() const{
    return m_sender_account_id_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_sender_account_id_Valid() const{
    return m_sender_account_id_isValid;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getReceiverAccountId() const {
    return m_receiver_account_id;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setReceiverAccountId(const QString &receiver_account_id) {
    m_receiver_account_id = receiver_account_id;
    m_receiver_account_id_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_receiver_account_id_Set() const{
    return m_receiver_account_id_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_receiver_account_id_Valid() const{
    return m_receiver_account_id_isValid;
}

QDateTime OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getInvitationTimestamp() const {
    return m_invitation_timestamp;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setInvitationTimestamp(const QDateTime &invitation_timestamp) {
    m_invitation_timestamp = invitation_timestamp;
    m_invitation_timestamp_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_invitation_timestamp_Set() const{
    return m_invitation_timestamp_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_invitation_timestamp_Valid() const{
    return m_invitation_timestamp_isValid;
}

OAIResourceShareInvitationStatus OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getStatus() const {
    return m_status;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setStatus(const OAIResourceShareInvitationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_status_Valid() const{
    return m_status_isValid;
}

QList OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getResourceShareAssociations() const {
    return m_resource_share_associations;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setResourceShareAssociations(const QList &resource_share_associations) {
    m_resource_share_associations = resource_share_associations;
    m_resource_share_associations_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_associations_Set() const{
    return m_resource_share_associations_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_resource_share_associations_Valid() const{
    return m_resource_share_associations_isValid;
}

QString OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::getReceiverArn() const {
    return m_receiver_arn;
}
void OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::setReceiverArn(const QString &receiver_arn) {
    m_receiver_arn = receiver_arn;
    m_receiver_arn_isSet = true;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_receiver_arn_Set() const{
    return m_receiver_arn_isSet;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::is_receiver_arn_Valid() const{
    return m_receiver_arn_isValid;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_share_invitation_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_share_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_share_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invitation_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_share_associations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptResourceShareInvitationResponse_resourceShareInvitation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
