/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateResourceShare_request.h
 *
 * 
 */

#ifndef OAICreateResourceShare_request_H
#define OAICreateResourceShare_request_H

#include <QJsonObject>

#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITag;

class OAICreateResourceShare_request : public OAIObject {
public:
    OAICreateResourceShare_request();
    OAICreateResourceShare_request(QString json);
    ~OAICreateResourceShare_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getResourceArns() const;
    void setResourceArns(const QList<QString> &resource_arns);
    bool is_resource_arns_Set() const;
    bool is_resource_arns_Valid() const;

    QList<QString> getPrincipals() const;
    void setPrincipals(const QList<QString> &principals);
    bool is_principals_Set() const;
    bool is_principals_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    bool isAllowExternalPrincipals() const;
    void setAllowExternalPrincipals(const bool &allow_external_principals);
    bool is_allow_external_principals_Set() const;
    bool is_allow_external_principals_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QList<QString> getPermissionArns() const;
    void setPermissionArns(const QList<QString> &permission_arns);
    bool is_permission_arns_Set() const;
    bool is_permission_arns_Valid() const;

    QList<QString> getSources() const;
    void setSources(const QList<QString> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_resource_arns;
    bool m_resource_arns_isSet;
    bool m_resource_arns_isValid;

    QList<QString> m_principals;
    bool m_principals_isSet;
    bool m_principals_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    bool m_allow_external_principals;
    bool m_allow_external_principals_isSet;
    bool m_allow_external_principals_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QList<QString> m_permission_arns;
    bool m_permission_arns_isSet;
    bool m_permission_arns_isValid;

    QList<QString> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateResourceShare_request)

#endif // OAICreateResourceShare_request_H
