/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssociateResourceShare_request.h
 *
 * 
 */

#ifndef OAIAssociateResourceShare_request_H
#define OAIAssociateResourceShare_request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssociateResourceShare_request : public OAIObject {
public:
    OAIAssociateResourceShare_request();
    OAIAssociateResourceShare_request(QString json);
    ~OAIAssociateResourceShare_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceShareArn() const;
    void setResourceShareArn(const QString &resource_share_arn);
    bool is_resource_share_arn_Set() const;
    bool is_resource_share_arn_Valid() const;

    QList<QString> getResourceArns() const;
    void setResourceArns(const QList<QString> &resource_arns);
    bool is_resource_arns_Set() const;
    bool is_resource_arns_Valid() const;

    QList<QString> getPrincipals() const;
    void setPrincipals(const QList<QString> &principals);
    bool is_principals_Set() const;
    bool is_principals_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QList<QString> getSources() const;
    void setSources(const QList<QString> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_share_arn;
    bool m_resource_share_arn_isSet;
    bool m_resource_share_arn_isValid;

    QList<QString> m_resource_arns;
    bool m_resource_arns_isSet;
    bool m_resource_arns_isValid;

    QList<QString> m_principals;
    bool m_principals_isSet;
    bool m_principals_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QList<QString> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssociateResourceShare_request)

#endif // OAIAssociateResourceShare_request_H
