/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceShareAssociation.h
 *
 * Describes an association between a resource share and either a principal or a resource.
 */

#ifndef OAIResourceShareAssociation_H
#define OAIResourceShareAssociation_H

#include <QJsonObject>

#include "OAIResourceShareAssociationStatus.h"
#include "OAIResourceShareAssociationType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResourceShareAssociation : public OAIObject {
public:
    OAIResourceShareAssociation();
    OAIResourceShareAssociation(QString json);
    ~OAIResourceShareAssociation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceShareArn() const;
    void setResourceShareArn(const QString &resource_share_arn);
    bool is_resource_share_arn_Set() const;
    bool is_resource_share_arn_Valid() const;

    QString getResourceShareName() const;
    void setResourceShareName(const QString &resource_share_name);
    bool is_resource_share_name_Set() const;
    bool is_resource_share_name_Valid() const;

    QString getAssociatedEntity() const;
    void setAssociatedEntity(const QString &associated_entity);
    bool is_associated_entity_Set() const;
    bool is_associated_entity_Valid() const;

    OAIResourceShareAssociationType getAssociationType() const;
    void setAssociationType(const OAIResourceShareAssociationType &association_type);
    bool is_association_type_Set() const;
    bool is_association_type_Valid() const;

    OAIResourceShareAssociationStatus getStatus() const;
    void setStatus(const OAIResourceShareAssociationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    bool getExternal() const;
    void setExternal(const bool &external);
    bool is_external_Set() const;
    bool is_external_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_share_arn;
    bool m_resource_share_arn_isSet;
    bool m_resource_share_arn_isValid;

    QString m_resource_share_name;
    bool m_resource_share_name_isSet;
    bool m_resource_share_name_isValid;

    QString m_associated_entity;
    bool m_associated_entity_isSet;
    bool m_associated_entity_isValid;

    OAIResourceShareAssociationType m_association_type;
    bool m_association_type_isSet;
    bool m_association_type_isValid;

    OAIResourceShareAssociationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    bool m_external;
    bool m_external_isSet;
    bool m_external_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceShareAssociation)

#endif // OAIResourceShareAssociation_H
