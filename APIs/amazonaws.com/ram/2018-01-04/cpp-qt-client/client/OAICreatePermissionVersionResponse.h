/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreatePermissionVersionResponse.h
 *
 * 
 */

#ifndef OAICreatePermissionVersionResponse_H
#define OAICreatePermissionVersionResponse_H

#include <QJsonObject>

#include "OAIResourceSharePermissionDetail.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceSharePermissionDetail;

class OAICreatePermissionVersionResponse : public OAIObject {
public:
    OAICreatePermissionVersionResponse();
    OAICreatePermissionVersionResponse(QString json);
    ~OAICreatePermissionVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceSharePermissionDetail getPermission() const;
    void setPermission(const OAIResourceSharePermissionDetail &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceSharePermissionDetail m_permission;
    bool m_permission_isSet;
    bool m_permission_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreatePermissionVersionResponse)

#endif // OAICreatePermissionVersionResponse_H
