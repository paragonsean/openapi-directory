/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tag from './Tag';

/**
 * The CreateResourceShareRequest model module.
 * @module model/CreateResourceShareRequest
 * @version 2018-01-04
 */
class CreateResourceShareRequest {
    /**
     * Constructs a new <code>CreateResourceShareRequest</code>.
     * @alias module:model/CreateResourceShareRequest
     * @param name {String} Specifies the name of the resource share.
     */
    constructor(name) { 
        
        CreateResourceShareRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateResourceShareRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateResourceShareRequest} obj Optional instance to populate.
     * @return {module:model/CreateResourceShareRequest} The populated <code>CreateResourceShareRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateResourceShareRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceArns')) {
                obj['resourceArns'] = ApiClient.convertToType(data['resourceArns'], ['String']);
            }
            if (data.hasOwnProperty('principals')) {
                obj['principals'] = ApiClient.convertToType(data['principals'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [Tag]);
            }
            if (data.hasOwnProperty('allowExternalPrincipals')) {
                obj['allowExternalPrincipals'] = ApiClient.convertToType(data['allowExternalPrincipals'], 'Boolean');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('permissionArns')) {
                obj['permissionArns'] = ApiClient.convertToType(data['permissionArns'], ['String']);
            }
            if (data.hasOwnProperty('sources')) {
                obj['sources'] = ApiClient.convertToType(data['sources'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateResourceShareRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateResourceShareRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateResourceShareRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resourceArns'])) {
            throw new Error("Expected the field `resourceArns` to be an array in the JSON data but got " + data['resourceArns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['principals'])) {
            throw new Error("Expected the field `principals` to be an array in the JSON data but got " + data['principals']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                Tag.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissionArns'])) {
            throw new Error("Expected the field `permissionArns` to be an array in the JSON data but got " + data['permissionArns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sources'])) {
            throw new Error("Expected the field `sources` to be an array in the JSON data but got " + data['sources']);
        }

        return true;
    }


}

CreateResourceShareRequest.RequiredProperties = ["name"];

/**
 * Specifies the name of the resource share.
 * @member {String} name
 */
CreateResourceShareRequest.prototype['name'] = undefined;

/**
 * Specifies a list of one or more ARNs of the resources to associate with the resource share.
 * @member {Array.<String>} resourceArns
 */
CreateResourceShareRequest.prototype['resourceArns'] = undefined;

/**
 * <p>Specifies a list of one or more principals to associate with the resource share.</p> <p>You can include the following values:</p> <ul> <li> <p>An Amazon Web Services account ID, for example: <code>123456789012</code> </p> </li> <li> <p>An <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of an organization in Organizations, for example: <code>organizations::123456789012:organization/o-exampleorgid</code> </p> </li> <li> <p>An ARN of an organizational unit (OU) in Organizations, for example: <code>organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123</code> </p> </li> <li> <p>An ARN of an IAM role, for example: <code>iam::123456789012:role/rolename</code> </p> </li> <li> <p>An ARN of an IAM user, for example: <code>iam::123456789012user/username</code> </p> </li> </ul> <note> <p>Not all resource types can be shared with IAM roles and users. For more information, see <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types\">Sharing with IAM roles and users</a> in the <i>Resource Access Manager User Guide</i>.</p> </note>
 * @member {Array.<String>} principals
 */
CreateResourceShareRequest.prototype['principals'] = undefined;

/**
 * Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
 * @member {Array.<module:model/Tag>} tags
 */
CreateResourceShareRequest.prototype['tags'] = undefined;

/**
 * Specifies whether principals outside your organization in Organizations can be associated with a resource share. A value of <code>true</code> lets you share with individual Amazon Web Services accounts that are <i>not</i> in your organization. A value of <code>false</code> only has meaning if your account is a member of an Amazon Web Services Organization. The default value is <code>true</code>.
 * @member {Boolean} allowExternalPrincipals
 */
CreateResourceShareRequest.prototype['allowExternalPrincipals'] = undefined;

/**
 * <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>
 * @member {String} clientToken
 */
CreateResourceShareRequest.prototype['clientToken'] = undefined;

/**
 * Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
 * @member {Array.<String>} permissionArns
 */
CreateResourceShareRequest.prototype['permissionArns'] = undefined;

/**
 * Specifies from which source accounts the service principal has access to the resources in this resource share.
 * @member {Array.<String>} sources
 */
CreateResourceShareRequest.prototype['sources'] = undefined;






export default CreateResourceShareRequest;

