/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateResourceShareRequest model module.
 * @module model/UpdateResourceShareRequest
 * @version 2018-01-04
 */
class UpdateResourceShareRequest {
    /**
     * Constructs a new <code>UpdateResourceShareRequest</code>.
     * @alias module:model/UpdateResourceShareRequest
     * @param resourceShareArn {String} Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share that you want to modify.
     */
    constructor(resourceShareArn) { 
        
        UpdateResourceShareRequest.initialize(this, resourceShareArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceShareArn) { 
        obj['resourceShareArn'] = resourceShareArn;
    }

    /**
     * Constructs a <code>UpdateResourceShareRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateResourceShareRequest} obj Optional instance to populate.
     * @return {module:model/UpdateResourceShareRequest} The populated <code>UpdateResourceShareRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateResourceShareRequest();

            if (data.hasOwnProperty('resourceShareArn')) {
                obj['resourceShareArn'] = ApiClient.convertToType(data['resourceShareArn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('allowExternalPrincipals')) {
                obj['allowExternalPrincipals'] = ApiClient.convertToType(data['allowExternalPrincipals'], 'Boolean');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateResourceShareRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateResourceShareRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateResourceShareRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['resourceShareArn'] && !(typeof data['resourceShareArn'] === 'string' || data['resourceShareArn'] instanceof String)) {
            throw new Error("Expected the field `resourceShareArn` to be a primitive type in the JSON string but got " + data['resourceShareArn']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

UpdateResourceShareRequest.RequiredProperties = ["resourceShareArn"];

/**
 * Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share that you want to modify.
 * @member {String} resourceShareArn
 */
UpdateResourceShareRequest.prototype['resourceShareArn'] = undefined;

/**
 * If specified, the new name that you want to attach to the resource share.
 * @member {String} name
 */
UpdateResourceShareRequest.prototype['name'] = undefined;

/**
 * Specifies whether principals outside your organization in Organizations can be associated with a resource share.
 * @member {Boolean} allowExternalPrincipals
 */
UpdateResourceShareRequest.prototype['allowExternalPrincipals'] = undefined;

/**
 * <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>
 * @member {String} clientToken
 */
UpdateResourceShareRequest.prototype['clientToken'] = undefined;






export default UpdateResourceShareRequest;

