/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssociateResourceSharePermissionRequest model module.
 * @module model/AssociateResourceSharePermissionRequest
 * @version 2018-01-04
 */
class AssociateResourceSharePermissionRequest {
    /**
     * Constructs a new <code>AssociateResourceSharePermissionRequest</code>.
     * @alias module:model/AssociateResourceSharePermissionRequest
     * @param resourceShareArn {String} Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share to which you want to add or replace permissions.
     * @param permissionArn {String} Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the RAM permission to associate with the resource share. To find the ARN for a permission, use either the <a>ListPermissions</a> operation or go to the <a href=\"https://console.aws.amazon.com/ram/home#Permissions:\">Permissions library</a> page in the RAM console and then choose the name of the permission. The ARN is displayed on the detail page.
     */
    constructor(resourceShareArn, permissionArn) { 
        
        AssociateResourceSharePermissionRequest.initialize(this, resourceShareArn, permissionArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceShareArn, permissionArn) { 
        obj['resourceShareArn'] = resourceShareArn;
        obj['permissionArn'] = permissionArn;
    }

    /**
     * Constructs a <code>AssociateResourceSharePermissionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssociateResourceSharePermissionRequest} obj Optional instance to populate.
     * @return {module:model/AssociateResourceSharePermissionRequest} The populated <code>AssociateResourceSharePermissionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssociateResourceSharePermissionRequest();

            if (data.hasOwnProperty('resourceShareArn')) {
                obj['resourceShareArn'] = ApiClient.convertToType(data['resourceShareArn'], 'String');
            }
            if (data.hasOwnProperty('permissionArn')) {
                obj['permissionArn'] = ApiClient.convertToType(data['permissionArn'], 'String');
            }
            if (data.hasOwnProperty('replace')) {
                obj['replace'] = ApiClient.convertToType(data['replace'], 'Boolean');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('permissionVersion')) {
                obj['permissionVersion'] = ApiClient.convertToType(data['permissionVersion'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssociateResourceSharePermissionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssociateResourceSharePermissionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssociateResourceSharePermissionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['resourceShareArn'] && !(typeof data['resourceShareArn'] === 'string' || data['resourceShareArn'] instanceof String)) {
            throw new Error("Expected the field `resourceShareArn` to be a primitive type in the JSON string but got " + data['resourceShareArn']);
        }
        // ensure the json data is a string
        if (data['permissionArn'] && !(typeof data['permissionArn'] === 'string' || data['permissionArn'] instanceof String)) {
            throw new Error("Expected the field `permissionArn` to be a primitive type in the JSON string but got " + data['permissionArn']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

AssociateResourceSharePermissionRequest.RequiredProperties = ["resourceShareArn", "permissionArn"];

/**
 * Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share to which you want to add or replace permissions.
 * @member {String} resourceShareArn
 */
AssociateResourceSharePermissionRequest.prototype['resourceShareArn'] = undefined;

/**
 * Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the RAM permission to associate with the resource share. To find the ARN for a permission, use either the <a>ListPermissions</a> operation or go to the <a href=\"https://console.aws.amazon.com/ram/home#Permissions:\">Permissions library</a> page in the RAM console and then choose the name of the permission. The ARN is displayed on the detail page.
 * @member {String} permissionArn
 */
AssociateResourceSharePermissionRequest.prototype['permissionArn'] = undefined;

/**
 * <p>Specifies whether the specified permission should replace the existing permission associated with the resource share. Use <code>true</code> to replace the current permissions. Use <code>false</code> to add the permission to a resource share that currently doesn't have a permission. The default value is <code>false</code>.</p> <note> <p>A resource share can have only one permission per resource type. If a resource share already has a permission for the specified resource type and you don't set <code>replace</code> to <code>true</code> then the operation returns an error. This helps prevent accidental overwriting of a permission.</p> </note>
 * @member {Boolean} replace
 */
AssociateResourceSharePermissionRequest.prototype['replace'] = undefined;

/**
 * <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>
 * @member {String} clientToken
 */
AssociateResourceSharePermissionRequest.prototype['clientToken'] = undefined;

/**
 * <p>Specifies the version of the RAM permission to associate with the resource share. You can specify <i>only</i> the version that is currently set as the default version for the permission. If you also set the <code>replace</code> pararameter to <code>true</code>, then this operation updates an outdated version of the permission to the current default version.</p> <note> <p>You don't need to specify this parameter because the default behavior is to use the version that is currently set as the default version for the permission. This parameter is supported for backwards compatibility.</p> </note>
 * @member {Number} permissionVersion
 */
AssociateResourceSharePermissionRequest.prototype['permissionVersion'] = undefined;






export default AssociateResourceSharePermissionRequest;

