/**
 * AWS Resource Access Manager
 * <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users. </p> <p>To learn more about RAM, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/ram\">Resource Access Manager product page</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/\">Resource Access Manager User Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2018-01-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AcceptResourceShareInvitationRequest from '../model/AcceptResourceShareInvitationRequest';
import AcceptResourceShareInvitationResponse from '../model/AcceptResourceShareInvitationResponse';
import AssociateResourceSharePermissionRequest from '../model/AssociateResourceSharePermissionRequest';
import AssociateResourceSharePermissionResponse from '../model/AssociateResourceSharePermissionResponse';
import AssociateResourceShareRequest from '../model/AssociateResourceShareRequest';
import AssociateResourceShareResponse from '../model/AssociateResourceShareResponse';
import CreatePermissionRequest from '../model/CreatePermissionRequest';
import CreatePermissionResponse from '../model/CreatePermissionResponse';
import CreatePermissionVersionRequest from '../model/CreatePermissionVersionRequest';
import CreatePermissionVersionResponse from '../model/CreatePermissionVersionResponse';
import CreateResourceShareRequest from '../model/CreateResourceShareRequest';
import CreateResourceShareResponse from '../model/CreateResourceShareResponse';
import DeletePermissionResponse from '../model/DeletePermissionResponse';
import DeletePermissionVersionResponse from '../model/DeletePermissionVersionResponse';
import DeleteResourceShareResponse from '../model/DeleteResourceShareResponse';
import DisassociateResourceSharePermissionRequest from '../model/DisassociateResourceSharePermissionRequest';
import DisassociateResourceSharePermissionResponse from '../model/DisassociateResourceSharePermissionResponse';
import DisassociateResourceShareRequest from '../model/DisassociateResourceShareRequest';
import DisassociateResourceShareResponse from '../model/DisassociateResourceShareResponse';
import EnableSharingWithAwsOrganizationResponse from '../model/EnableSharingWithAwsOrganizationResponse';
import GetPermissionRequest from '../model/GetPermissionRequest';
import GetPermissionResponse from '../model/GetPermissionResponse';
import GetResourcePoliciesRequest from '../model/GetResourcePoliciesRequest';
import GetResourcePoliciesResponse from '../model/GetResourcePoliciesResponse';
import GetResourceShareAssociationsRequest from '../model/GetResourceShareAssociationsRequest';
import GetResourceShareAssociationsResponse from '../model/GetResourceShareAssociationsResponse';
import GetResourceShareInvitationsRequest from '../model/GetResourceShareInvitationsRequest';
import GetResourceShareInvitationsResponse from '../model/GetResourceShareInvitationsResponse';
import GetResourceSharesRequest from '../model/GetResourceSharesRequest';
import GetResourceSharesResponse from '../model/GetResourceSharesResponse';
import ListPendingInvitationResourcesRequest from '../model/ListPendingInvitationResourcesRequest';
import ListPendingInvitationResourcesResponse from '../model/ListPendingInvitationResourcesResponse';
import ListPermissionAssociationsRequest from '../model/ListPermissionAssociationsRequest';
import ListPermissionAssociationsResponse from '../model/ListPermissionAssociationsResponse';
import ListPermissionVersionsRequest from '../model/ListPermissionVersionsRequest';
import ListPermissionVersionsResponse from '../model/ListPermissionVersionsResponse';
import ListPermissionsRequest from '../model/ListPermissionsRequest';
import ListPermissionsResponse from '../model/ListPermissionsResponse';
import ListPrincipalsRequest from '../model/ListPrincipalsRequest';
import ListPrincipalsResponse from '../model/ListPrincipalsResponse';
import ListReplacePermissionAssociationsWorkRequest from '../model/ListReplacePermissionAssociationsWorkRequest';
import ListReplacePermissionAssociationsWorkResponse from '../model/ListReplacePermissionAssociationsWorkResponse';
import ListResourceSharePermissionsRequest from '../model/ListResourceSharePermissionsRequest';
import ListResourceSharePermissionsResponse from '../model/ListResourceSharePermissionsResponse';
import ListResourceTypesRequest from '../model/ListResourceTypesRequest';
import ListResourceTypesResponse from '../model/ListResourceTypesResponse';
import ListResourcesRequest from '../model/ListResourcesRequest';
import ListResourcesResponse from '../model/ListResourcesResponse';
import PromotePermissionCreatedFromPolicyRequest from '../model/PromotePermissionCreatedFromPolicyRequest';
import PromotePermissionCreatedFromPolicyResponse from '../model/PromotePermissionCreatedFromPolicyResponse';
import PromoteResourceShareCreatedFromPolicyResponse from '../model/PromoteResourceShareCreatedFromPolicyResponse';
import RejectResourceShareInvitationRequest from '../model/RejectResourceShareInvitationRequest';
import RejectResourceShareInvitationResponse from '../model/RejectResourceShareInvitationResponse';
import ReplacePermissionAssociationsRequest from '../model/ReplacePermissionAssociationsRequest';
import ReplacePermissionAssociationsResponse from '../model/ReplacePermissionAssociationsResponse';
import SetDefaultPermissionVersionRequest from '../model/SetDefaultPermissionVersionRequest';
import SetDefaultPermissionVersionResponse from '../model/SetDefaultPermissionVersionResponse';
import TagResourceRequest from '../model/TagResourceRequest';
import UntagResourceRequest from '../model/UntagResourceRequest';
import UpdateResourceShareRequest from '../model/UpdateResourceShareRequest';
import UpdateResourceShareResponse from '../model/UpdateResourceShareResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2018-01-04
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the acceptResourceShareInvitation operation.
     * @callback module:api/DefaultApi~acceptResourceShareInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AcceptResourceShareInvitationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accepts an invitation to a resource share from another Amazon Web Services account. After you accept the invitation, the resources included in the resource share are available to interact with in the relevant Amazon Web Services Management Consoles and tools.
     * @param {module:model/AcceptResourceShareInvitationRequest} acceptResourceShareInvitationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~acceptResourceShareInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AcceptResourceShareInvitationResponse}
     */
    acceptResourceShareInvitation(acceptResourceShareInvitationRequest, opts, callback) {
      opts = opts || {};
      let postBody = acceptResourceShareInvitationRequest;
      // verify the required parameter 'acceptResourceShareInvitationRequest' is set
      if (acceptResourceShareInvitationRequest === undefined || acceptResourceShareInvitationRequest === null) {
        throw new Error("Missing the required parameter 'acceptResourceShareInvitationRequest' when calling acceptResourceShareInvitation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AcceptResourceShareInvitationResponse;
      return this.apiClient.callApi(
        '/acceptresourceshareinvitation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the associateResourceShare operation.
     * @callback module:api/DefaultApi~associateResourceShareCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssociateResourceShareResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds the specified list of principals and list of resources to a resource share. Principals that already have access to this resource share immediately receive access to the added resources. Newly added principals immediately receive access to the resources shared in this resource share. 
     * @param {module:model/AssociateResourceShareRequest} associateResourceShareRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateResourceShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssociateResourceShareResponse}
     */
    associateResourceShare(associateResourceShareRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateResourceShareRequest;
      // verify the required parameter 'associateResourceShareRequest' is set
      if (associateResourceShareRequest === undefined || associateResourceShareRequest === null) {
        throw new Error("Missing the required parameter 'associateResourceShareRequest' when calling associateResourceShare");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssociateResourceShareResponse;
      return this.apiClient.callApi(
        '/associateresourceshare', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the associateResourceSharePermission operation.
     * @callback module:api/DefaultApi~associateResourceSharePermissionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssociateResourceSharePermissionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds or replaces the RAM permission for a resource type included in a resource share. You can have exactly one permission associated with each resource type in the resource share. You can add a new RAM permission only if there are currently no resources of that resource type currently in the resource share.
     * @param {module:model/AssociateResourceSharePermissionRequest} associateResourceSharePermissionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateResourceSharePermissionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssociateResourceSharePermissionResponse}
     */
    associateResourceSharePermission(associateResourceSharePermissionRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateResourceSharePermissionRequest;
      // verify the required parameter 'associateResourceSharePermissionRequest' is set
      if (associateResourceSharePermissionRequest === undefined || associateResourceSharePermissionRequest === null) {
        throw new Error("Missing the required parameter 'associateResourceSharePermissionRequest' when calling associateResourceSharePermission");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssociateResourceSharePermissionResponse;
      return this.apiClient.callApi(
        '/associateresourcesharepermission', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createPermission operation.
     * @callback module:api/DefaultApi~createPermissionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatePermissionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a customer managed permission for a specified resource type that you can attach to resource shares. It is created in the Amazon Web Services Region in which you call the operation.
     * @param {module:model/CreatePermissionRequest} createPermissionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createPermissionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatePermissionResponse}
     */
    createPermission(createPermissionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createPermissionRequest;
      // verify the required parameter 'createPermissionRequest' is set
      if (createPermissionRequest === undefined || createPermissionRequest === null) {
        throw new Error("Missing the required parameter 'createPermissionRequest' when calling createPermission");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreatePermissionResponse;
      return this.apiClient.callApi(
        '/createpermission', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createPermissionVersion operation.
     * @callback module:api/DefaultApi~createPermissionVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatePermissionVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new version of the specified customer managed permission. The new version is automatically set as the default version of the customer managed permission. New resource shares automatically use the default permission. Existing resource shares continue to use their original permission versions, but you can use <a>ReplacePermissionAssociations</a> to update them.</p> <p>If the specified customer managed permission already has the maximum of 5 versions, then you must delete one of the existing versions before you can create a new one.</p>
     * @param {module:model/CreatePermissionVersionRequest} createPermissionVersionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createPermissionVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatePermissionVersionResponse}
     */
    createPermissionVersion(createPermissionVersionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createPermissionVersionRequest;
      // verify the required parameter 'createPermissionVersionRequest' is set
      if (createPermissionVersionRequest === undefined || createPermissionVersionRequest === null) {
        throw new Error("Missing the required parameter 'createPermissionVersionRequest' when calling createPermissionVersion");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreatePermissionVersionResponse;
      return this.apiClient.callApi(
        '/createpermissionversion', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createResourceShare operation.
     * @callback module:api/DefaultApi~createResourceShareCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateResourceShareResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a resource share. You can provide a list of the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> for the resources that you want to share, a list of principals you want to share the resources with, and the permissions to grant those principals.</p> <note> <p>Sharing a resource makes it available for use by principals outside of the Amazon Web Services account that created the resource. Sharing doesn't change any permissions or quotas that apply to the resource in the account that created it.</p> </note>
     * @param {module:model/CreateResourceShareRequest} createResourceShareRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createResourceShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateResourceShareResponse}
     */
    createResourceShare(createResourceShareRequest, opts, callback) {
      opts = opts || {};
      let postBody = createResourceShareRequest;
      // verify the required parameter 'createResourceShareRequest' is set
      if (createResourceShareRequest === undefined || createResourceShareRequest === null) {
        throw new Error("Missing the required parameter 'createResourceShareRequest' when calling createResourceShare");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateResourceShareResponse;
      return this.apiClient.callApi(
        '/createresourceshare', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePermission operation.
     * @callback module:api/DefaultApi~deletePermissionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletePermissionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the specified customer managed permission in the Amazon Web Services Region in which you call this operation. You can delete a customer managed permission only if it isn't attached to any resource share. The operation deletes all versions associated with the customer managed permission.
     * @param {String} permissionArn Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the customer managed permission that you want to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>
     * @param {module:api/DefaultApi~deletePermissionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletePermissionResponse}
     */
    deletePermission(permissionArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'permissionArn' is set
      if (permissionArn === undefined || permissionArn === null) {
        throw new Error("Missing the required parameter 'permissionArn' when calling deletePermission");
      }

      let pathParams = {
      };
      let queryParams = {
        'permissionArn': permissionArn,
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeletePermissionResponse;
      return this.apiClient.callApi(
        '/deletepermission#permissionArn', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePermissionVersion operation.
     * @callback module:api/DefaultApi~deletePermissionVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletePermissionVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes one version of a customer managed permission. The version you specify must not be attached to any resource share and must not be the default version for the permission.</p> <p>If a customer managed permission has the maximum of 5 versions, then you must delete at least one version before you can create another.</p>
     * @param {String} permissionArn Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the permission with the version you want to delete.
     * @param {Number} permissionVersion <p>Specifies the version number to delete.</p> <p>You can't delete the default version for a customer managed permission.</p> <p>You can't delete a version if it's the only version of the permission. You must either first create another version, or delete the permission completely.</p> <p>You can't delete a version if it is attached to any resource shares. If the version is the default, you must first use <a>SetDefaultPermissionVersion</a> to set a different version as the default for the customer managed permission, and then use <a>AssociateResourceSharePermission</a> to update your resource shares to use the new default version.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>
     * @param {module:api/DefaultApi~deletePermissionVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletePermissionVersionResponse}
     */
    deletePermissionVersion(permissionArn, permissionVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'permissionArn' is set
      if (permissionArn === undefined || permissionArn === null) {
        throw new Error("Missing the required parameter 'permissionArn' when calling deletePermissionVersion");
      }
      // verify the required parameter 'permissionVersion' is set
      if (permissionVersion === undefined || permissionVersion === null) {
        throw new Error("Missing the required parameter 'permissionVersion' when calling deletePermissionVersion");
      }

      let pathParams = {
      };
      let queryParams = {
        'permissionArn': permissionArn,
        'permissionVersion': permissionVersion,
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeletePermissionVersionResponse;
      return this.apiClient.callApi(
        '/deletepermissionversion#permissionArn&permissionVersion', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteResourceShare operation.
     * @callback module:api/DefaultApi~deleteResourceShareCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteResourceShareResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified resource share.</p> <important> <p>This doesn't delete any of the resources that were associated with the resource share; it only stops the sharing of those resources through this resource share.</p> </important>
     * @param {String} resourceShareArn Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] <p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>
     * @param {module:api/DefaultApi~deleteResourceShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteResourceShareResponse}
     */
    deleteResourceShare(resourceShareArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceShareArn' is set
      if (resourceShareArn === undefined || resourceShareArn === null) {
        throw new Error("Missing the required parameter 'resourceShareArn' when calling deleteResourceShare");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceShareArn': resourceShareArn,
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteResourceShareResponse;
      return this.apiClient.callApi(
        '/deleteresourceshare#resourceShareArn', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateResourceShare operation.
     * @callback module:api/DefaultApi~disassociateResourceShareCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisassociateResourceShareResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the specified principals or resources from participating in the specified resource share.
     * @param {module:model/DisassociateResourceShareRequest} disassociateResourceShareRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateResourceShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisassociateResourceShareResponse}
     */
    disassociateResourceShare(disassociateResourceShareRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociateResourceShareRequest;
      // verify the required parameter 'disassociateResourceShareRequest' is set
      if (disassociateResourceShareRequest === undefined || disassociateResourceShareRequest === null) {
        throw new Error("Missing the required parameter 'disassociateResourceShareRequest' when calling disassociateResourceShare");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisassociateResourceShareResponse;
      return this.apiClient.callApi(
        '/disassociateresourceshare', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateResourceSharePermission operation.
     * @callback module:api/DefaultApi~disassociateResourceSharePermissionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisassociateResourceSharePermissionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a managed permission from a resource share. Permission changes take effect immediately. You can remove a managed permission from a resource share only if there are currently no resources of the relevant resource type currently attached to the resource share.
     * @param {module:model/DisassociateResourceSharePermissionRequest} disassociateResourceSharePermissionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateResourceSharePermissionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisassociateResourceSharePermissionResponse}
     */
    disassociateResourceSharePermission(disassociateResourceSharePermissionRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociateResourceSharePermissionRequest;
      // verify the required parameter 'disassociateResourceSharePermissionRequest' is set
      if (disassociateResourceSharePermissionRequest === undefined || disassociateResourceSharePermissionRequest === null) {
        throw new Error("Missing the required parameter 'disassociateResourceSharePermissionRequest' when calling disassociateResourceSharePermission");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisassociateResourceSharePermissionResponse;
      return this.apiClient.callApi(
        '/disassociateresourcesharepermission', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enableSharingWithAwsOrganization operation.
     * @callback module:api/DefaultApi~enableSharingWithAwsOrganizationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnableSharingWithAwsOrganizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Enables resource sharing within your organization in Organizations. This operation creates a service-linked role called <code>AWSServiceRoleForResourceAccessManager</code> that has the IAM managed policy named AWSResourceAccessManagerServiceRolePolicy attached. This role permits RAM to retrieve information about the organization and its structure. This lets you share resources with all of the accounts in the calling account's organization by specifying the organization ID, or all of the accounts in an organizational unit (OU) by specifying the OU ID. Until you enable sharing within the organization, you can specify only individual Amazon Web Services accounts, or for supported resource types, IAM roles and users.</p> <p>You must call this operation from an IAM role or user in the organization's management account.</p> <p/>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~enableSharingWithAwsOrganizationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnableSharingWithAwsOrganizationResponse}
     */
    enableSharingWithAwsOrganization(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EnableSharingWithAwsOrganizationResponse;
      return this.apiClient.callApi(
        '/enablesharingwithawsorganization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPermission operation.
     * @callback module:api/DefaultApi~getPermissionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPermissionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the contents of a managed permission in JSON format.
     * @param {module:model/GetPermissionRequest} getPermissionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getPermissionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPermissionResponse}
     */
    getPermission(getPermissionRequest, opts, callback) {
      opts = opts || {};
      let postBody = getPermissionRequest;
      // verify the required parameter 'getPermissionRequest' is set
      if (getPermissionRequest === undefined || getPermissionRequest === null) {
        throw new Error("Missing the required parameter 'getPermissionRequest' when calling getPermission");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetPermissionResponse;
      return this.apiClient.callApi(
        '/getpermission', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourcePolicies operation.
     * @callback module:api/DefaultApi~getResourcePoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetResourcePoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the resource policies for the specified resources that you own and have shared.
     * @param {module:model/GetResourcePoliciesRequest} getResourcePoliciesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getResourcePoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetResourcePoliciesResponse}
     */
    getResourcePolicies(getResourcePoliciesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getResourcePoliciesRequest;
      // verify the required parameter 'getResourcePoliciesRequest' is set
      if (getResourcePoliciesRequest === undefined || getResourcePoliciesRequest === null) {
        throw new Error("Missing the required parameter 'getResourcePoliciesRequest' when calling getResourcePolicies");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetResourcePoliciesResponse;
      return this.apiClient.callApi(
        '/getresourcepolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourceShareAssociations operation.
     * @callback module:api/DefaultApi~getResourceShareAssociationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetResourceShareAssociationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the lists of resources and principals that associated for resource shares that you own.
     * @param {module:model/GetResourceShareAssociationsRequest} getResourceShareAssociationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getResourceShareAssociationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetResourceShareAssociationsResponse}
     */
    getResourceShareAssociations(getResourceShareAssociationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getResourceShareAssociationsRequest;
      // verify the required parameter 'getResourceShareAssociationsRequest' is set
      if (getResourceShareAssociationsRequest === undefined || getResourceShareAssociationsRequest === null) {
        throw new Error("Missing the required parameter 'getResourceShareAssociationsRequest' when calling getResourceShareAssociations");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetResourceShareAssociationsResponse;
      return this.apiClient.callApi(
        '/getresourceshareassociations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourceShareInvitations operation.
     * @callback module:api/DefaultApi~getResourceShareInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetResourceShareInvitationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details about invitations that you have received for resource shares.
     * @param {module:model/GetResourceShareInvitationsRequest} getResourceShareInvitationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getResourceShareInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetResourceShareInvitationsResponse}
     */
    getResourceShareInvitations(getResourceShareInvitationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = getResourceShareInvitationsRequest;
      // verify the required parameter 'getResourceShareInvitationsRequest' is set
      if (getResourceShareInvitationsRequest === undefined || getResourceShareInvitationsRequest === null) {
        throw new Error("Missing the required parameter 'getResourceShareInvitationsRequest' when calling getResourceShareInvitations");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetResourceShareInvitationsResponse;
      return this.apiClient.callApi(
        '/getresourceshareinvitations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourceShares operation.
     * @callback module:api/DefaultApi~getResourceSharesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetResourceSharesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details about the resource shares that you own or that are shared with you.
     * @param {module:model/GetResourceSharesRequest} getResourceSharesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~getResourceSharesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetResourceSharesResponse}
     */
    getResourceShares(getResourceSharesRequest, opts, callback) {
      opts = opts || {};
      let postBody = getResourceSharesRequest;
      // verify the required parameter 'getResourceSharesRequest' is set
      if (getResourceSharesRequest === undefined || getResourceSharesRequest === null) {
        throw new Error("Missing the required parameter 'getResourceSharesRequest' when calling getResourceShares");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetResourceSharesResponse;
      return this.apiClient.callApi(
        '/getresourceshares', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPendingInvitationResources operation.
     * @callback module:api/DefaultApi~listPendingInvitationResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPendingInvitationResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the resources in a resource share that is shared with you but for which the invitation is still <code>PENDING</code>. That means that you haven't accepted or rejected the invitation and the invitation hasn't expired.
     * @param {module:model/ListPendingInvitationResourcesRequest} listPendingInvitationResourcesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPendingInvitationResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPendingInvitationResourcesResponse}
     */
    listPendingInvitationResources(listPendingInvitationResourcesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPendingInvitationResourcesRequest;
      // verify the required parameter 'listPendingInvitationResourcesRequest' is set
      if (listPendingInvitationResourcesRequest === undefined || listPendingInvitationResourcesRequest === null) {
        throw new Error("Missing the required parameter 'listPendingInvitationResourcesRequest' when calling listPendingInvitationResources");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPendingInvitationResourcesResponse;
      return this.apiClient.callApi(
        '/listpendinginvitationresources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPermissionAssociations operation.
     * @callback module:api/DefaultApi~listPermissionAssociationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPermissionAssociationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists information about the managed permission and its associations to any resource shares that use this managed permission. This lets you see which resource shares use which versions of the specified managed permission.
     * @param {module:model/ListPermissionAssociationsRequest} listPermissionAssociationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPermissionAssociationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPermissionAssociationsResponse}
     */
    listPermissionAssociations(listPermissionAssociationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPermissionAssociationsRequest;
      // verify the required parameter 'listPermissionAssociationsRequest' is set
      if (listPermissionAssociationsRequest === undefined || listPermissionAssociationsRequest === null) {
        throw new Error("Missing the required parameter 'listPermissionAssociationsRequest' when calling listPermissionAssociations");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPermissionAssociationsResponse;
      return this.apiClient.callApi(
        '/listpermissionassociations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPermissionVersions operation.
     * @callback module:api/DefaultApi~listPermissionVersionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPermissionVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the available versions of the specified RAM permission.
     * @param {module:model/ListPermissionVersionsRequest} listPermissionVersionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPermissionVersionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPermissionVersionsResponse}
     */
    listPermissionVersions(listPermissionVersionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPermissionVersionsRequest;
      // verify the required parameter 'listPermissionVersionsRequest' is set
      if (listPermissionVersionsRequest === undefined || listPermissionVersionsRequest === null) {
        throw new Error("Missing the required parameter 'listPermissionVersionsRequest' when calling listPermissionVersions");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPermissionVersionsResponse;
      return this.apiClient.callApi(
        '/listpermissionversions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPermissions operation.
     * @callback module:api/DefaultApi~listPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a list of available RAM permissions that you can use for the supported resource types. 
     * @param {module:model/ListPermissionsRequest} listPermissionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPermissionsResponse}
     */
    listPermissions(listPermissionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPermissionsRequest;
      // verify the required parameter 'listPermissionsRequest' is set
      if (listPermissionsRequest === undefined || listPermissionsRequest === null) {
        throw new Error("Missing the required parameter 'listPermissionsRequest' when calling listPermissions");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPermissionsResponse;
      return this.apiClient.callApi(
        '/listpermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPrincipals operation.
     * @callback module:api/DefaultApi~listPrincipalsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPrincipalsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the principals that you are sharing resources with or that are sharing resources with you.
     * @param {module:model/ListPrincipalsRequest} listPrincipalsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listPrincipalsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPrincipalsResponse}
     */
    listPrincipals(listPrincipalsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listPrincipalsRequest;
      // verify the required parameter 'listPrincipalsRequest' is set
      if (listPrincipalsRequest === undefined || listPrincipalsRequest === null) {
        throw new Error("Missing the required parameter 'listPrincipalsRequest' when calling listPrincipals");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPrincipalsResponse;
      return this.apiClient.callApi(
        '/listprincipals', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listReplacePermissionAssociationsWork operation.
     * @callback module:api/DefaultApi~listReplacePermissionAssociationsWorkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListReplacePermissionAssociationsWorkResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the current status of the asynchronous tasks performed by RAM when you perform the <a>ReplacePermissionAssociationsWork</a> operation.
     * @param {module:model/ListReplacePermissionAssociationsWorkRequest} listReplacePermissionAssociationsWorkRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listReplacePermissionAssociationsWorkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListReplacePermissionAssociationsWorkResponse}
     */
    listReplacePermissionAssociationsWork(listReplacePermissionAssociationsWorkRequest, opts, callback) {
      opts = opts || {};
      let postBody = listReplacePermissionAssociationsWorkRequest;
      // verify the required parameter 'listReplacePermissionAssociationsWorkRequest' is set
      if (listReplacePermissionAssociationsWorkRequest === undefined || listReplacePermissionAssociationsWorkRequest === null) {
        throw new Error("Missing the required parameter 'listReplacePermissionAssociationsWorkRequest' when calling listReplacePermissionAssociationsWork");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListReplacePermissionAssociationsWorkResponse;
      return this.apiClient.callApi(
        '/listreplacepermissionassociationswork', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listResourceSharePermissions operation.
     * @callback module:api/DefaultApi~listResourceSharePermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResourceSharePermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the RAM permissions that are associated with a resource share.
     * @param {module:model/ListResourceSharePermissionsRequest} listResourceSharePermissionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listResourceSharePermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResourceSharePermissionsResponse}
     */
    listResourceSharePermissions(listResourceSharePermissionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listResourceSharePermissionsRequest;
      // verify the required parameter 'listResourceSharePermissionsRequest' is set
      if (listResourceSharePermissionsRequest === undefined || listResourceSharePermissionsRequest === null) {
        throw new Error("Missing the required parameter 'listResourceSharePermissionsRequest' when calling listResourceSharePermissions");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListResourceSharePermissionsResponse;
      return this.apiClient.callApi(
        '/listresourcesharepermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listResourceTypes operation.
     * @callback module:api/DefaultApi~listResourceTypesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResourceTypesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the resource types that can be shared by RAM.
     * @param {module:model/ListResourceTypesRequest} listResourceTypesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listResourceTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResourceTypesResponse}
     */
    listResourceTypes(listResourceTypesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listResourceTypesRequest;
      // verify the required parameter 'listResourceTypesRequest' is set
      if (listResourceTypesRequest === undefined || listResourceTypesRequest === null) {
        throw new Error("Missing the required parameter 'listResourceTypesRequest' when calling listResourceTypes");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListResourceTypesResponse;
      return this.apiClient.callApi(
        '/listresourcetypes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listResources operation.
     * @callback module:api/DefaultApi~listResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the resources that you added to a resource share or the resources that are shared with you.
     * @param {module:model/ListResourcesRequest} listResourcesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListResourcesResponse}
     */
    listResources(listResourcesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listResourcesRequest;
      // verify the required parameter 'listResourcesRequest' is set
      if (listResourcesRequest === undefined || listResourcesRequest === null) {
        throw new Error("Missing the required parameter 'listResourcesRequest' when calling listResources");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListResourcesResponse;
      return this.apiClient.callApi(
        '/listresources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the promotePermissionCreatedFromPolicy operation.
     * @callback module:api/DefaultApi~promotePermissionCreatedFromPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotePermissionCreatedFromPolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>When you attach a resource-based policy to a resource, RAM automatically creates a resource share of <code>featureSet</code>=<code>CREATED_FROM_POLICY</code> with a managed permission that has the same IAM permissions as the original resource-based policy. However, this type of managed permission is visible to only the resource share owner, and the associated resource share can't be modified by using RAM.</p> <p>This operation creates a separate, fully manageable customer managed permission that has the same IAM permissions as the original resource-based policy. You can associate this customer managed permission to any resource shares.</p> <p>Before you use <a>PromoteResourceShareCreatedFromPolicy</a>, you should first run this operation to ensure that you have an appropriate customer managed permission that can be associated with the promoted resource share.</p> <note> <ul> <li> <p>The original <code>CREATED_FROM_POLICY</code> policy isn't deleted, and resource shares using that original policy aren't automatically updated.</p> </li> <li> <p>You can't modify a <code>CREATED_FROM_POLICY</code> resource share so you can't associate the new customer managed permission by using <code>ReplacePermsissionAssociations</code>. However, if you use <a>PromoteResourceShareCreatedFromPolicy</a>, that operation automatically associates the fully manageable customer managed permission to the newly promoted <code>STANDARD</code> resource share.</p> </li> <li> <p>After you promote a resource share, if the original <code>CREATED_FROM_POLICY</code> managed permission has no other associations to A resource share, then RAM automatically deletes it.</p> </li> </ul> </note>
     * @param {module:model/PromotePermissionCreatedFromPolicyRequest} promotePermissionCreatedFromPolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~promotePermissionCreatedFromPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotePermissionCreatedFromPolicyResponse}
     */
    promotePermissionCreatedFromPolicy(promotePermissionCreatedFromPolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = promotePermissionCreatedFromPolicyRequest;
      // verify the required parameter 'promotePermissionCreatedFromPolicyRequest' is set
      if (promotePermissionCreatedFromPolicyRequest === undefined || promotePermissionCreatedFromPolicyRequest === null) {
        throw new Error("Missing the required parameter 'promotePermissionCreatedFromPolicyRequest' when calling promotePermissionCreatedFromPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotePermissionCreatedFromPolicyResponse;
      return this.apiClient.callApi(
        '/promotepermissioncreatedfrompolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the promoteResourceShareCreatedFromPolicy operation.
     * @callback module:api/DefaultApi~promoteResourceShareCreatedFromPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromoteResourceShareCreatedFromPolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>When you attach a resource-based policy to a resource, RAM automatically creates a resource share of <code>featureSet</code>=<code>CREATED_FROM_POLICY</code> with a managed permission that has the same IAM permissions as the original resource-based policy. However, this type of managed permission is visible to only the resource share owner, and the associated resource share can't be modified by using RAM.</p> <p>This operation promotes the resource share to a <code>STANDARD</code> resource share that is fully manageable in RAM. When you promote a resource share, you can then manage the resource share in RAM and it becomes visible to all of the principals you shared it with.</p> <important> <p>Before you perform this operation, you should first run <a>PromotePermissionCreatedFromPolicy</a>to ensure that you have an appropriate customer managed permission that can be associated with this resource share after its is promoted. If this operation can't find a managed permission that exactly matches the existing <code>CREATED_FROM_POLICY</code> permission, then this operation fails.</p> </important>
     * @param {String} resourceShareArn Specifies the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the resource share to promote.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~promoteResourceShareCreatedFromPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromoteResourceShareCreatedFromPolicyResponse}
     */
    promoteResourceShareCreatedFromPolicy(resourceShareArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceShareArn' is set
      if (resourceShareArn === undefined || resourceShareArn === null) {
        throw new Error("Missing the required parameter 'resourceShareArn' when calling promoteResourceShareCreatedFromPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceShareArn': resourceShareArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromoteResourceShareCreatedFromPolicyResponse;
      return this.apiClient.callApi(
        '/promoteresourcesharecreatedfrompolicy#resourceShareArn', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rejectResourceShareInvitation operation.
     * @callback module:api/DefaultApi~rejectResourceShareInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RejectResourceShareInvitationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rejects an invitation to a resource share from another Amazon Web Services account.
     * @param {module:model/RejectResourceShareInvitationRequest} rejectResourceShareInvitationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~rejectResourceShareInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RejectResourceShareInvitationResponse}
     */
    rejectResourceShareInvitation(rejectResourceShareInvitationRequest, opts, callback) {
      opts = opts || {};
      let postBody = rejectResourceShareInvitationRequest;
      // verify the required parameter 'rejectResourceShareInvitationRequest' is set
      if (rejectResourceShareInvitationRequest === undefined || rejectResourceShareInvitationRequest === null) {
        throw new Error("Missing the required parameter 'rejectResourceShareInvitationRequest' when calling rejectResourceShareInvitation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RejectResourceShareInvitationResponse;
      return this.apiClient.callApi(
        '/rejectresourceshareinvitation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the replacePermissionAssociations operation.
     * @callback module:api/DefaultApi~replacePermissionAssociationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReplacePermissionAssociationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates all resource shares that use a managed permission to a different managed permission. This operation always applies the default version of the target managed permission. You can optionally specify that the update applies to only resource shares that currently use a specified version. This enables you to update to the latest version, without changing the which managed permission is used.</p> <p>You can use this operation to update all of your resource shares to use the current default version of the permission by specifying the same value for the <code>fromPermissionArn</code> and <code>toPermissionArn</code> parameters.</p> <p>You can use the optional <code>fromPermissionVersion</code> parameter to update only those resources that use a specified version of the managed permission to the new managed permission.</p> <important> <p>To successfully perform this operation, you must have permission to update the resource-based policy on all affected resource types.</p> </important>
     * @param {module:model/ReplacePermissionAssociationsRequest} replacePermissionAssociationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~replacePermissionAssociationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReplacePermissionAssociationsResponse}
     */
    replacePermissionAssociations(replacePermissionAssociationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = replacePermissionAssociationsRequest;
      // verify the required parameter 'replacePermissionAssociationsRequest' is set
      if (replacePermissionAssociationsRequest === undefined || replacePermissionAssociationsRequest === null) {
        throw new Error("Missing the required parameter 'replacePermissionAssociationsRequest' when calling replacePermissionAssociations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReplacePermissionAssociationsResponse;
      return this.apiClient.callApi(
        '/replacepermissionassociations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setDefaultPermissionVersion operation.
     * @callback module:api/DefaultApi~setDefaultPermissionVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SetDefaultPermissionVersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Designates the specified version number as the default version for the specified customer managed permission. New resource shares automatically use this new default permission. Existing resource shares continue to use their original permission version, but you can use <a>ReplacePermissionAssociations</a> to update them.
     * @param {module:model/SetDefaultPermissionVersionRequest} setDefaultPermissionVersionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~setDefaultPermissionVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SetDefaultPermissionVersionResponse}
     */
    setDefaultPermissionVersion(setDefaultPermissionVersionRequest, opts, callback) {
      opts = opts || {};
      let postBody = setDefaultPermissionVersionRequest;
      // verify the required parameter 'setDefaultPermissionVersionRequest' is set
      if (setDefaultPermissionVersionRequest === undefined || setDefaultPermissionVersionRequest === null) {
        throw new Error("Missing the required parameter 'setDefaultPermissionVersionRequest' when calling setDefaultPermissionVersion");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SetDefaultPermissionVersionResponse;
      return this.apiClient.callApi(
        '/setdefaultpermissionversion', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds the specified tag keys and values to a resource share or managed permission. If you choose a resource share, the tags are attached to only the resource share, not to the resources that are in the resource share.</p> <p>The tags on a managed permission are the same for all versions of the managed permission.</p>
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tagresource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the specified tag key and value pairs from the specified resource share or managed permission.
     * @param {module:model/UntagResourceRequest} untagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(untagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagResourceRequest;
      // verify the required parameter 'untagResourceRequest' is set
      if (untagResourceRequest === undefined || untagResourceRequest === null) {
        throw new Error("Missing the required parameter 'untagResourceRequest' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/untagresource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateResourceShare operation.
     * @callback module:api/DefaultApi~updateResourceShareCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateResourceShareResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modifies some of the properties of the specified resource share.
     * @param {module:model/UpdateResourceShareRequest} updateResourceShareRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateResourceShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateResourceShareResponse}
     */
    updateResourceShare(updateResourceShareRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateResourceShareRequest;
      // verify the required parameter 'updateResourceShareRequest' is set
      if (updateResourceShareRequest === undefined || updateResourceShareRequest === null) {
        throw new Error("Missing the required parameter 'updateResourceShareRequest' when calling updateResourceShare");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateResourceShareResponse;
      return this.apiClient.callApi(
        '/updateresourceshare', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
