/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPartitionResponse_Partition.h
 *
 * 
 */

#ifndef OAIGetPartitionResponse_Partition_H
#define OAIGetPartitionResponse_Partition_H

#include <QJsonObject>

#include "OAIPartitionInput_StorageDescriptor.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPartitionInput_StorageDescriptor;

class OAIGetPartitionResponse_Partition : public OAIObject {
public:
    OAIGetPartitionResponse_Partition();
    OAIGetPartitionResponse_Partition(QString json);
    ~OAIGetPartitionResponse_Partition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastAccessTime() const;
    void setLastAccessTime(const QDateTime &last_access_time);
    bool is_last_access_time_Set() const;
    bool is_last_access_time_Valid() const;

    OAIPartitionInput_StorageDescriptor getStorageDescriptor() const;
    void setStorageDescriptor(const OAIPartitionInput_StorageDescriptor &storage_descriptor);
    bool is_storage_descriptor_Set() const;
    bool is_storage_descriptor_Valid() const;

    QMap getParameters() const;
    void setParameters(const QMap &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QDateTime getLastAnalyzedTime() const;
    void setLastAnalyzedTime(const QDateTime &last_analyzed_time);
    bool is_last_analyzed_time_Set() const;
    bool is_last_analyzed_time_Valid() const;

    QString getCatalogId() const;
    void setCatalogId(const QString &catalog_id);
    bool is_catalog_id_Set() const;
    bool is_catalog_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_access_time;
    bool m_last_access_time_isSet;
    bool m_last_access_time_isValid;

    OAIPartitionInput_StorageDescriptor m_storage_descriptor;
    bool m_storage_descriptor_isSet;
    bool m_storage_descriptor_isValid;

    QMap m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QDateTime m_last_analyzed_time;
    bool m_last_analyzed_time_isSet;
    bool m_last_analyzed_time_isValid;

    QString m_catalog_id;
    bool m_catalog_id_isSet;
    bool m_catalog_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPartitionResponse_Partition)

#endif // OAIGetPartitionResponse_Partition_H
