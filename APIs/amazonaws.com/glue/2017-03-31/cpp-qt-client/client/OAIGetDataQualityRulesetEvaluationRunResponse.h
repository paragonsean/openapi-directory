/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDataQualityRulesetEvaluationRunResponse.h
 *
 * 
 */

#ifndef OAIGetDataQualityRulesetEvaluationRunResponse_H
#define OAIGetDataQualityRulesetEvaluationRunResponse_H

#include <QJsonObject>

#include "OAIGetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions.h"
#include "OAIGetDataQualityRulesetEvaluationRunResponse_DataSource.h"
#include "OAITaskStatusType.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDataQualityRulesetEvaluationRunResponse_DataSource;
class OAIGetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions;

class OAIGetDataQualityRulesetEvaluationRunResponse : public OAIObject {
public:
    OAIGetDataQualityRulesetEvaluationRunResponse();
    OAIGetDataQualityRulesetEvaluationRunResponse(QString json);
    ~OAIGetDataQualityRulesetEvaluationRunResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRunId() const;
    void setRunId(const QString &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    OAIGetDataQualityRulesetEvaluationRunResponse_DataSource getDataSource() const;
    void setDataSource(const OAIGetDataQualityRulesetEvaluationRunResponse_DataSource &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    qint32 getNumberOfWorkers() const;
    void setNumberOfWorkers(const qint32 &number_of_workers);
    bool is_number_of_workers_Set() const;
    bool is_number_of_workers_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    OAIGetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions getAdditionalRunOptions() const;
    void setAdditionalRunOptions(const OAIGetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions &additional_run_options);
    bool is_additional_run_options_Set() const;
    bool is_additional_run_options_Valid() const;

    OAITaskStatusType getStatus() const;
    void setStatus(const OAITaskStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getErrorString() const;
    void setErrorString(const QString &error_string);
    bool is_error_string_Set() const;
    bool is_error_string_Valid() const;

    QDateTime getStartedOn() const;
    void setStartedOn(const QDateTime &started_on);
    bool is_started_on_Set() const;
    bool is_started_on_Valid() const;

    QDateTime getLastModifiedOn() const;
    void setLastModifiedOn(const QDateTime &last_modified_on);
    bool is_last_modified_on_Set() const;
    bool is_last_modified_on_Valid() const;

    QDateTime getCompletedOn() const;
    void setCompletedOn(const QDateTime &completed_on);
    bool is_completed_on_Set() const;
    bool is_completed_on_Valid() const;

    qint32 getExecutionTime() const;
    void setExecutionTime(const qint32 &execution_time);
    bool is_execution_time_Set() const;
    bool is_execution_time_Valid() const;

    QList getRulesetNames() const;
    void setRulesetNames(const QList &ruleset_names);
    bool is_ruleset_names_Set() const;
    bool is_ruleset_names_Valid() const;

    QList getResultIds() const;
    void setResultIds(const QList &result_ids);
    bool is_result_ids_Set() const;
    bool is_result_ids_Valid() const;

    QMap getAdditionalDataSources() const;
    void setAdditionalDataSources(const QMap &additional_data_sources);
    bool is_additional_data_sources_Set() const;
    bool is_additional_data_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    OAIGetDataQualityRulesetEvaluationRunResponse_DataSource m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    qint32 m_number_of_workers;
    bool m_number_of_workers_isSet;
    bool m_number_of_workers_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    OAIGetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions m_additional_run_options;
    bool m_additional_run_options_isSet;
    bool m_additional_run_options_isValid;

    OAITaskStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_error_string;
    bool m_error_string_isSet;
    bool m_error_string_isValid;

    QDateTime m_started_on;
    bool m_started_on_isSet;
    bool m_started_on_isValid;

    QDateTime m_last_modified_on;
    bool m_last_modified_on_isSet;
    bool m_last_modified_on_isValid;

    QDateTime m_completed_on;
    bool m_completed_on_isSet;
    bool m_completed_on_isValid;

    qint32 m_execution_time;
    bool m_execution_time_isSet;
    bool m_execution_time_isValid;

    QList m_ruleset_names;
    bool m_ruleset_names_isSet;
    bool m_ruleset_names_isValid;

    QList m_result_ids;
    bool m_result_ids_isSet;
    bool m_result_ids_isValid;

    QMap m_additional_data_sources;
    bool m_additional_data_sources_isSet;
    bool m_additional_data_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDataQualityRulesetEvaluationRunResponse)

#endif // OAIGetDataQualityRulesetEvaluationRunResponse_H
