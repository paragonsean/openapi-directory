/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobUpdate.h
 *
 * Specifies information used to update an existing job definition. The previous job definition is completely overwritten by this information.
 */

#ifndef OAIJobUpdate_H
#define OAIJobUpdate_H

#include <QJsonObject>

#include "OAICreateJobRequest_Connections.h"
#include "OAICreateJobRequest_ExecutionProperty.h"
#include "OAICreateJobRequest_SourceControlDetails.h"
#include "OAIExecutionClass.h"
#include "OAIJobUpdate_Command.h"
#include "OAIJobUpdate_NotificationProperty.h"
#include "OAIWorkerType.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateJobRequest_ExecutionProperty;
class OAIJobUpdate_Command;
class OAICreateJobRequest_Connections;
class OAIJobUpdate_NotificationProperty;
class OAICreateJobRequest_SourceControlDetails;

class OAIJobUpdate : public OAIObject {
public:
    OAIJobUpdate();
    OAIJobUpdate(QString json);
    ~OAIJobUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getLogUri() const;
    void setLogUri(const QString &log_uri);
    bool is_log_uri_Set() const;
    bool is_log_uri_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAICreateJobRequest_ExecutionProperty getExecutionProperty() const;
    void setExecutionProperty(const OAICreateJobRequest_ExecutionProperty &execution_property);
    bool is_execution_property_Set() const;
    bool is_execution_property_Valid() const;

    OAIJobUpdate_Command getCommand() const;
    void setCommand(const OAIJobUpdate_Command &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    QMap getDefaultArguments() const;
    void setDefaultArguments(const QMap &default_arguments);
    bool is_default_arguments_Set() const;
    bool is_default_arguments_Valid() const;

    QMap getNonOverridableArguments() const;
    void setNonOverridableArguments(const QMap &non_overridable_arguments);
    bool is_non_overridable_arguments_Set() const;
    bool is_non_overridable_arguments_Valid() const;

    OAICreateJobRequest_Connections getConnections() const;
    void setConnections(const OAICreateJobRequest_Connections &connections);
    bool is_connections_Set() const;
    bool is_connections_Valid() const;

    qint32 getMaxRetries() const;
    void setMaxRetries(const qint32 &max_retries);
    bool is_max_retries_Set() const;
    bool is_max_retries_Valid() const;

    qint32 getAllocatedCapacity() const;
    void setAllocatedCapacity(const qint32 &allocated_capacity);
    bool is_allocated_capacity_Set() const;
    bool is_allocated_capacity_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    double getMaxCapacity() const;
    void setMaxCapacity(const double &max_capacity);
    bool is_max_capacity_Set() const;
    bool is_max_capacity_Valid() const;

    OAIWorkerType getWorkerType() const;
    void setWorkerType(const OAIWorkerType &worker_type);
    bool is_worker_type_Set() const;
    bool is_worker_type_Valid() const;

    qint32 getNumberOfWorkers() const;
    void setNumberOfWorkers(const qint32 &number_of_workers);
    bool is_number_of_workers_Set() const;
    bool is_number_of_workers_Valid() const;

    QString getSecurityConfiguration() const;
    void setSecurityConfiguration(const QString &security_configuration);
    bool is_security_configuration_Set() const;
    bool is_security_configuration_Valid() const;

    OAIJobUpdate_NotificationProperty getNotificationProperty() const;
    void setNotificationProperty(const OAIJobUpdate_NotificationProperty &notification_property);
    bool is_notification_property_Set() const;
    bool is_notification_property_Valid() const;

    QString getGlueVersion() const;
    void setGlueVersion(const QString &glue_version);
    bool is_glue_version_Set() const;
    bool is_glue_version_Valid() const;

    QMap getCodeGenConfigurationNodes() const;
    void setCodeGenConfigurationNodes(const QMap &code_gen_configuration_nodes);
    bool is_code_gen_configuration_nodes_Set() const;
    bool is_code_gen_configuration_nodes_Valid() const;

    OAIExecutionClass getExecutionClass() const;
    void setExecutionClass(const OAIExecutionClass &execution_class);
    bool is_execution_class_Set() const;
    bool is_execution_class_Valid() const;

    OAICreateJobRequest_SourceControlDetails getSourceControlDetails() const;
    void setSourceControlDetails(const OAICreateJobRequest_SourceControlDetails &source_control_details);
    bool is_source_control_details_Set() const;
    bool is_source_control_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_log_uri;
    bool m_log_uri_isSet;
    bool m_log_uri_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAICreateJobRequest_ExecutionProperty m_execution_property;
    bool m_execution_property_isSet;
    bool m_execution_property_isValid;

    OAIJobUpdate_Command m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    QMap m_default_arguments;
    bool m_default_arguments_isSet;
    bool m_default_arguments_isValid;

    QMap m_non_overridable_arguments;
    bool m_non_overridable_arguments_isSet;
    bool m_non_overridable_arguments_isValid;

    OAICreateJobRequest_Connections m_connections;
    bool m_connections_isSet;
    bool m_connections_isValid;

    qint32 m_max_retries;
    bool m_max_retries_isSet;
    bool m_max_retries_isValid;

    qint32 m_allocated_capacity;
    bool m_allocated_capacity_isSet;
    bool m_allocated_capacity_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    double m_max_capacity;
    bool m_max_capacity_isSet;
    bool m_max_capacity_isValid;

    OAIWorkerType m_worker_type;
    bool m_worker_type_isSet;
    bool m_worker_type_isValid;

    qint32 m_number_of_workers;
    bool m_number_of_workers_isSet;
    bool m_number_of_workers_isValid;

    QString m_security_configuration;
    bool m_security_configuration_isSet;
    bool m_security_configuration_isValid;

    OAIJobUpdate_NotificationProperty m_notification_property;
    bool m_notification_property_isSet;
    bool m_notification_property_isValid;

    QString m_glue_version;
    bool m_glue_version_isSet;
    bool m_glue_version_isValid;

    QMap m_code_gen_configuration_nodes;
    bool m_code_gen_configuration_nodes_isSet;
    bool m_code_gen_configuration_nodes_isValid;

    OAIExecutionClass m_execution_class;
    bool m_execution_class_isSet;
    bool m_execution_class_isValid;

    OAICreateJobRequest_SourceControlDetails m_source_control_details;
    bool m_source_control_details_isSet;
    bool m_source_control_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobUpdate)

#endif // OAIJobUpdate_H
