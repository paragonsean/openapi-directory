/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateJobFromSourceControlRequest.h
 *
 * 
 */

#ifndef OAIUpdateJobFromSourceControlRequest_H
#define OAIUpdateJobFromSourceControlRequest_H

#include <QJsonObject>

#include "OAISourceControlAuthStrategy.h"
#include "OAISourceControlProvider.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateJobFromSourceControlRequest : public OAIObject {
public:
    OAIUpdateJobFromSourceControlRequest();
    OAIUpdateJobFromSourceControlRequest(QString json);
    ~OAIUpdateJobFromSourceControlRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobName() const;
    void setJobName(const QString &job_name);
    bool is_job_name_Set() const;
    bool is_job_name_Valid() const;

    OAISourceControlProvider getProvider() const;
    void setProvider(const OAISourceControlProvider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getRepositoryName() const;
    void setRepositoryName(const QString &repository_name);
    bool is_repository_name_Set() const;
    bool is_repository_name_Valid() const;

    QString getRepositoryOwner() const;
    void setRepositoryOwner(const QString &repository_owner);
    bool is_repository_owner_Set() const;
    bool is_repository_owner_Valid() const;

    QString getBranchName() const;
    void setBranchName(const QString &branch_name);
    bool is_branch_name_Set() const;
    bool is_branch_name_Valid() const;

    QString getFolder() const;
    void setFolder(const QString &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    OAISourceControlAuthStrategy getAuthStrategy() const;
    void setAuthStrategy(const OAISourceControlAuthStrategy &auth_strategy);
    bool is_auth_strategy_Set() const;
    bool is_auth_strategy_Valid() const;

    QString getAuthToken() const;
    void setAuthToken(const QString &auth_token);
    bool is_auth_token_Set() const;
    bool is_auth_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_name;
    bool m_job_name_isSet;
    bool m_job_name_isValid;

    OAISourceControlProvider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_repository_name;
    bool m_repository_name_isSet;
    bool m_repository_name_isValid;

    QString m_repository_owner;
    bool m_repository_owner_isSet;
    bool m_repository_owner_isValid;

    QString m_branch_name;
    bool m_branch_name_isSet;
    bool m_branch_name_isValid;

    QString m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    OAISourceControlAuthStrategy m_auth_strategy;
    bool m_auth_strategy_isSet;
    bool m_auth_strategy_isValid;

    QString m_auth_token;
    bool m_auth_token_isSet;
    bool m_auth_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateJobFromSourceControlRequest)

#endif // OAIUpdateJobFromSourceControlRequest_H
