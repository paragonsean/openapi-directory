/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnStatisticsType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnStatisticsType::OAIColumnStatisticsType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnStatisticsType::OAIColumnStatisticsType() {
    this->initializeModel();
}

OAIColumnStatisticsType::~OAIColumnStatisticsType() {}

void OAIColumnStatisticsType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIColumnStatisticsType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIColumnStatisticsType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BOOLEAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::BOOLEAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::DATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DECIMAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::DECIMAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOUBLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::DOUBLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LONG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::LONG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STRING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::STRING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BINARY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColumnStatisticsType::BINARY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIColumnStatisticsType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIColumnStatisticsType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIColumnStatisticsType::BOOLEAN:
            val = "BOOLEAN";
            break;
        case eOAIColumnStatisticsType::DATE:
            val = "DATE";
            break;
        case eOAIColumnStatisticsType::DECIMAL:
            val = "DECIMAL";
            break;
        case eOAIColumnStatisticsType::DOUBLE:
            val = "DOUBLE";
            break;
        case eOAIColumnStatisticsType::LONG:
            val = "LONG";
            break;
        case eOAIColumnStatisticsType::STRING:
            val = "STRING";
            break;
        case eOAIColumnStatisticsType::BINARY:
            val = "BINARY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIColumnStatisticsType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIColumnStatisticsType::eOAIColumnStatisticsType OAIColumnStatisticsType::getValue() const {
    return m_value;
}

void OAIColumnStatisticsType::setValue(const OAIColumnStatisticsType::eOAIColumnStatisticsType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIColumnStatisticsType::isSet() const {
    
    return m_value_isSet;
}

bool OAIColumnStatisticsType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
