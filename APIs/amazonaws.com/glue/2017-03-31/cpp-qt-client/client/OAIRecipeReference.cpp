/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecipeReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecipeReference::OAIRecipeReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecipeReference::OAIRecipeReference() {
    this->initializeModel();
}

OAIRecipeReference::~OAIRecipeReference() {}

void OAIRecipeReference::initializeModel() {

    m_recipe_arn_isSet = false;
    m_recipe_arn_isValid = false;

    m_recipe_version_isSet = false;
    m_recipe_version_isValid = false;
}

void OAIRecipeReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecipeReference::fromJsonObject(QJsonObject json) {

    m_recipe_arn_isValid = ::OpenAPI::fromJsonValue(m_recipe_arn, json[QString("RecipeArn")]);
    m_recipe_arn_isSet = !json[QString("RecipeArn")].isNull() && m_recipe_arn_isValid;

    m_recipe_version_isValid = ::OpenAPI::fromJsonValue(m_recipe_version, json[QString("RecipeVersion")]);
    m_recipe_version_isSet = !json[QString("RecipeVersion")].isNull() && m_recipe_version_isValid;
}

QString OAIRecipeReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecipeReference::asJsonObject() const {
    QJsonObject obj;
    if (m_recipe_arn_isSet) {
        obj.insert(QString("RecipeArn"), ::OpenAPI::toJsonValue(m_recipe_arn));
    }
    if (m_recipe_version_isSet) {
        obj.insert(QString("RecipeVersion"), ::OpenAPI::toJsonValue(m_recipe_version));
    }
    return obj;
}

QString OAIRecipeReference::getRecipeArn() const {
    return m_recipe_arn;
}
void OAIRecipeReference::setRecipeArn(const QString &recipe_arn) {
    m_recipe_arn = recipe_arn;
    m_recipe_arn_isSet = true;
}

bool OAIRecipeReference::is_recipe_arn_Set() const{
    return m_recipe_arn_isSet;
}

bool OAIRecipeReference::is_recipe_arn_Valid() const{
    return m_recipe_arn_isValid;
}

QString OAIRecipeReference::getRecipeVersion() const {
    return m_recipe_version;
}
void OAIRecipeReference::setRecipeVersion(const QString &recipe_version) {
    m_recipe_version = recipe_version;
    m_recipe_version_isSet = true;
}

bool OAIRecipeReference::is_recipe_version_Set() const{
    return m_recipe_version_isSet;
}

bool OAIRecipeReference::is_recipe_version_Valid() const{
    return m_recipe_version_isValid;
}

bool OAIRecipeReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recipe_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipe_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecipeReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recipe_arn_isValid && m_recipe_version_isValid && true;
}

} // namespace OpenAPI
