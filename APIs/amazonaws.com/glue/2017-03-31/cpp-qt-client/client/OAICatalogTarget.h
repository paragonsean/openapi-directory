/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogTarget.h
 *
 * Specifies an Glue Data Catalog target.
 */

#ifndef OAICatalogTarget_H
#define OAICatalogTarget_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICatalogTarget : public OAIObject {
public:
    OAICatalogTarget();
    OAICatalogTarget(QString json);
    ~OAICatalogTarget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    QList getTables() const;
    void setTables(const QList &tables);
    bool is_tables_Set() const;
    bool is_tables_Valid() const;

    QString getConnectionName() const;
    void setConnectionName(const QString &connection_name);
    bool is_connection_name_Set() const;
    bool is_connection_name_Valid() const;

    QString getEventQueueArn() const;
    void setEventQueueArn(const QString &event_queue_arn);
    bool is_event_queue_arn_Set() const;
    bool is_event_queue_arn_Valid() const;

    QString getDlqEventQueueArn() const;
    void setDlqEventQueueArn(const QString &dlq_event_queue_arn);
    bool is_dlq_event_queue_arn_Set() const;
    bool is_dlq_event_queue_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    QList m_tables;
    bool m_tables_isSet;
    bool m_tables_isValid;

    QString m_connection_name;
    bool m_connection_name_isSet;
    bool m_connection_name_isValid;

    QString m_event_queue_arn;
    bool m_event_queue_arn_isSet;
    bool m_event_queue_arn_isValid;

    QString m_dlq_event_queue_arn;
    bool m_dlq_event_queue_arn_isSet;
    bool m_dlq_event_queue_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogTarget)

#endif // OAICatalogTarget_H
