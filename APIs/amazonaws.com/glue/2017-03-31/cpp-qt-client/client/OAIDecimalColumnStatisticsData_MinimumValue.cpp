/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecimalColumnStatisticsData_MinimumValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecimalColumnStatisticsData_MinimumValue::OAIDecimalColumnStatisticsData_MinimumValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecimalColumnStatisticsData_MinimumValue::OAIDecimalColumnStatisticsData_MinimumValue() {
    this->initializeModel();
}

OAIDecimalColumnStatisticsData_MinimumValue::~OAIDecimalColumnStatisticsData_MinimumValue() {}

void OAIDecimalColumnStatisticsData_MinimumValue::initializeModel() {

    m_unscaled_value_isSet = false;
    m_unscaled_value_isValid = false;

    m_scale_isSet = false;
    m_scale_isValid = false;
}

void OAIDecimalColumnStatisticsData_MinimumValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDecimalColumnStatisticsData_MinimumValue::fromJsonObject(QJsonObject json) {

    m_unscaled_value_isValid = ::OpenAPI::fromJsonValue(m_unscaled_value, json[QString("UnscaledValue")]);
    m_unscaled_value_isSet = !json[QString("UnscaledValue")].isNull() && m_unscaled_value_isValid;

    m_scale_isValid = ::OpenAPI::fromJsonValue(m_scale, json[QString("Scale")]);
    m_scale_isSet = !json[QString("Scale")].isNull() && m_scale_isValid;
}

QString OAIDecimalColumnStatisticsData_MinimumValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDecimalColumnStatisticsData_MinimumValue::asJsonObject() const {
    QJsonObject obj;
    if (m_unscaled_value_isSet) {
        obj.insert(QString("UnscaledValue"), ::OpenAPI::toJsonValue(m_unscaled_value));
    }
    if (m_scale_isSet) {
        obj.insert(QString("Scale"), ::OpenAPI::toJsonValue(m_scale));
    }
    return obj;
}

QString OAIDecimalColumnStatisticsData_MinimumValue::getUnscaledValue() const {
    return m_unscaled_value;
}
void OAIDecimalColumnStatisticsData_MinimumValue::setUnscaledValue(const QString &unscaled_value) {
    m_unscaled_value = unscaled_value;
    m_unscaled_value_isSet = true;
}

bool OAIDecimalColumnStatisticsData_MinimumValue::is_unscaled_value_Set() const{
    return m_unscaled_value_isSet;
}

bool OAIDecimalColumnStatisticsData_MinimumValue::is_unscaled_value_Valid() const{
    return m_unscaled_value_isValid;
}

qint32 OAIDecimalColumnStatisticsData_MinimumValue::getScale() const {
    return m_scale;
}
void OAIDecimalColumnStatisticsData_MinimumValue::setScale(const qint32 &scale) {
    m_scale = scale;
    m_scale_isSet = true;
}

bool OAIDecimalColumnStatisticsData_MinimumValue::is_scale_Set() const{
    return m_scale_isSet;
}

bool OAIDecimalColumnStatisticsData_MinimumValue::is_scale_Valid() const{
    return m_scale_isValid;
}

bool OAIDecimalColumnStatisticsData_MinimumValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_unscaled_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scale_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDecimalColumnStatisticsData_MinimumValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_unscaled_value_isValid && m_scale_isValid && true;
}

} // namespace OpenAPI
