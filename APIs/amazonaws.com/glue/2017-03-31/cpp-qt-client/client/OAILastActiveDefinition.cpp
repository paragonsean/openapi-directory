/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILastActiveDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILastActiveDefinition::OAILastActiveDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILastActiveDefinition::OAILastActiveDefinition() {
    this->initializeModel();
}

OAILastActiveDefinition::~OAILastActiveDefinition() {}

void OAILastActiveDefinition::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_last_modified_on_isSet = false;
    m_last_modified_on_isValid = false;

    m_parameter_spec_isSet = false;
    m_parameter_spec_isValid = false;

    m_blueprint_location_isSet = false;
    m_blueprint_location_isValid = false;

    m_blueprint_service_location_isSet = false;
    m_blueprint_service_location_isValid = false;
}

void OAILastActiveDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILastActiveDefinition::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_last_modified_on_isValid = ::OpenAPI::fromJsonValue(m_last_modified_on, json[QString("LastModifiedOn")]);
    m_last_modified_on_isSet = !json[QString("LastModifiedOn")].isNull() && m_last_modified_on_isValid;

    m_parameter_spec_isValid = ::OpenAPI::fromJsonValue(m_parameter_spec, json[QString("ParameterSpec")]);
    m_parameter_spec_isSet = !json[QString("ParameterSpec")].isNull() && m_parameter_spec_isValid;

    m_blueprint_location_isValid = ::OpenAPI::fromJsonValue(m_blueprint_location, json[QString("BlueprintLocation")]);
    m_blueprint_location_isSet = !json[QString("BlueprintLocation")].isNull() && m_blueprint_location_isValid;

    m_blueprint_service_location_isValid = ::OpenAPI::fromJsonValue(m_blueprint_service_location, json[QString("BlueprintServiceLocation")]);
    m_blueprint_service_location_isSet = !json[QString("BlueprintServiceLocation")].isNull() && m_blueprint_service_location_isValid;
}

QString OAILastActiveDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILastActiveDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_last_modified_on_isSet) {
        obj.insert(QString("LastModifiedOn"), ::OpenAPI::toJsonValue(m_last_modified_on));
    }
    if (m_parameter_spec_isSet) {
        obj.insert(QString("ParameterSpec"), ::OpenAPI::toJsonValue(m_parameter_spec));
    }
    if (m_blueprint_location_isSet) {
        obj.insert(QString("BlueprintLocation"), ::OpenAPI::toJsonValue(m_blueprint_location));
    }
    if (m_blueprint_service_location_isSet) {
        obj.insert(QString("BlueprintServiceLocation"), ::OpenAPI::toJsonValue(m_blueprint_service_location));
    }
    return obj;
}

QString OAILastActiveDefinition::getDescription() const {
    return m_description;
}
void OAILastActiveDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAILastActiveDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAILastActiveDefinition::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAILastActiveDefinition::getLastModifiedOn() const {
    return m_last_modified_on;
}
void OAILastActiveDefinition::setLastModifiedOn(const QDateTime &last_modified_on) {
    m_last_modified_on = last_modified_on;
    m_last_modified_on_isSet = true;
}

bool OAILastActiveDefinition::is_last_modified_on_Set() const{
    return m_last_modified_on_isSet;
}

bool OAILastActiveDefinition::is_last_modified_on_Valid() const{
    return m_last_modified_on_isValid;
}

QString OAILastActiveDefinition::getParameterSpec() const {
    return m_parameter_spec;
}
void OAILastActiveDefinition::setParameterSpec(const QString &parameter_spec) {
    m_parameter_spec = parameter_spec;
    m_parameter_spec_isSet = true;
}

bool OAILastActiveDefinition::is_parameter_spec_Set() const{
    return m_parameter_spec_isSet;
}

bool OAILastActiveDefinition::is_parameter_spec_Valid() const{
    return m_parameter_spec_isValid;
}

QString OAILastActiveDefinition::getBlueprintLocation() const {
    return m_blueprint_location;
}
void OAILastActiveDefinition::setBlueprintLocation(const QString &blueprint_location) {
    m_blueprint_location = blueprint_location;
    m_blueprint_location_isSet = true;
}

bool OAILastActiveDefinition::is_blueprint_location_Set() const{
    return m_blueprint_location_isSet;
}

bool OAILastActiveDefinition::is_blueprint_location_Valid() const{
    return m_blueprint_location_isValid;
}

QString OAILastActiveDefinition::getBlueprintServiceLocation() const {
    return m_blueprint_service_location;
}
void OAILastActiveDefinition::setBlueprintServiceLocation(const QString &blueprint_service_location) {
    m_blueprint_service_location = blueprint_service_location;
    m_blueprint_service_location_isSet = true;
}

bool OAILastActiveDefinition::is_blueprint_service_location_Set() const{
    return m_blueprint_service_location_isSet;
}

bool OAILastActiveDefinition::is_blueprint_service_location_Valid() const{
    return m_blueprint_service_location_isValid;
}

bool OAILastActiveDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_spec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blueprint_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_blueprint_service_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILastActiveDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
