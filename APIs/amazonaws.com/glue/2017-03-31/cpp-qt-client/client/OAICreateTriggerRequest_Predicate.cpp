/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateTriggerRequest_Predicate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateTriggerRequest_Predicate::OAICreateTriggerRequest_Predicate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateTriggerRequest_Predicate::OAICreateTriggerRequest_Predicate() {
    this->initializeModel();
}

OAICreateTriggerRequest_Predicate::~OAICreateTriggerRequest_Predicate() {}

void OAICreateTriggerRequest_Predicate::initializeModel() {

    m_logical_isSet = false;
    m_logical_isValid = false;

    m_conditions_isSet = false;
    m_conditions_isValid = false;
}

void OAICreateTriggerRequest_Predicate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateTriggerRequest_Predicate::fromJsonObject(QJsonObject json) {

    m_logical_isValid = ::OpenAPI::fromJsonValue(m_logical, json[QString("Logical")]);
    m_logical_isSet = !json[QString("Logical")].isNull() && m_logical_isValid;

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("Conditions")]);
    m_conditions_isSet = !json[QString("Conditions")].isNull() && m_conditions_isValid;
}

QString OAICreateTriggerRequest_Predicate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateTriggerRequest_Predicate::asJsonObject() const {
    QJsonObject obj;
    if (m_logical.isSet()) {
        obj.insert(QString("Logical"), ::OpenAPI::toJsonValue(m_logical));
    }
    if (m_conditions.isSet()) {
        obj.insert(QString("Conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    return obj;
}

OAILogical OAICreateTriggerRequest_Predicate::getLogical() const {
    return m_logical;
}
void OAICreateTriggerRequest_Predicate::setLogical(const OAILogical &logical) {
    m_logical = logical;
    m_logical_isSet = true;
}

bool OAICreateTriggerRequest_Predicate::is_logical_Set() const{
    return m_logical_isSet;
}

bool OAICreateTriggerRequest_Predicate::is_logical_Valid() const{
    return m_logical_isValid;
}

QList OAICreateTriggerRequest_Predicate::getConditions() const {
    return m_conditions;
}
void OAICreateTriggerRequest_Predicate::setConditions(const QList &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAICreateTriggerRequest_Predicate::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAICreateTriggerRequest_Predicate::is_conditions_Valid() const{
    return m_conditions_isValid;
}

bool OAICreateTriggerRequest_Predicate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_logical.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateTriggerRequest_Predicate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
