/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodeGenConfigurationNode_CatalogKafkaSource.h
 *
 * 
 */

#ifndef OAICodeGenConfigurationNode_CatalogKafkaSource_H
#define OAICodeGenConfigurationNode_CatalogKafkaSource_H

#include <QJsonObject>

#include "OAICatalogKafkaSource_DataPreviewOptions.h"
#include "OAICatalogKafkaSource_StreamingOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICatalogKafkaSource_StreamingOptions;
class OAICatalogKafkaSource_DataPreviewOptions;

class OAICodeGenConfigurationNode_CatalogKafkaSource : public OAIObject {
public:
    OAICodeGenConfigurationNode_CatalogKafkaSource();
    OAICodeGenConfigurationNode_CatalogKafkaSource(QString json);
    ~OAICodeGenConfigurationNode_CatalogKafkaSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getWindowSize() const;
    void setWindowSize(const qint32 &window_size);
    bool is_window_size_Set() const;
    bool is_window_size_Valid() const;

    bool getDetectSchema() const;
    void setDetectSchema(const bool &detect_schema);
    bool is_detect_schema_Set() const;
    bool is_detect_schema_Valid() const;

    QString getTable() const;
    void setTable(const QString &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    QString getDatabase() const;
    void setDatabase(const QString &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    OAICatalogKafkaSource_StreamingOptions getStreamingOptions() const;
    void setStreamingOptions(const OAICatalogKafkaSource_StreamingOptions &streaming_options);
    bool is_streaming_options_Set() const;
    bool is_streaming_options_Valid() const;

    OAICatalogKafkaSource_DataPreviewOptions getDataPreviewOptions() const;
    void setDataPreviewOptions(const OAICatalogKafkaSource_DataPreviewOptions &data_preview_options);
    bool is_data_preview_options_Set() const;
    bool is_data_preview_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_window_size;
    bool m_window_size_isSet;
    bool m_window_size_isValid;

    bool m_detect_schema;
    bool m_detect_schema_isSet;
    bool m_detect_schema_isValid;

    QString m_table;
    bool m_table_isSet;
    bool m_table_isValid;

    QString m_database;
    bool m_database_isSet;
    bool m_database_isValid;

    OAICatalogKafkaSource_StreamingOptions m_streaming_options;
    bool m_streaming_options_isSet;
    bool m_streaming_options_isValid;

    OAICatalogKafkaSource_DataPreviewOptions m_data_preview_options;
    bool m_data_preview_options_isSet;
    bool m_data_preview_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodeGenConfigurationNode_CatalogKafkaSource)

#endif // OAICodeGenConfigurationNode_CatalogKafkaSource_H
