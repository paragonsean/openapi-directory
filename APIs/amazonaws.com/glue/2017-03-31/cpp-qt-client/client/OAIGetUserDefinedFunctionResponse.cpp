/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetUserDefinedFunctionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetUserDefinedFunctionResponse::OAIGetUserDefinedFunctionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetUserDefinedFunctionResponse::OAIGetUserDefinedFunctionResponse() {
    this->initializeModel();
}

OAIGetUserDefinedFunctionResponse::~OAIGetUserDefinedFunctionResponse() {}

void OAIGetUserDefinedFunctionResponse::initializeModel() {

    m_user_defined_function_isSet = false;
    m_user_defined_function_isValid = false;
}

void OAIGetUserDefinedFunctionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetUserDefinedFunctionResponse::fromJsonObject(QJsonObject json) {

    m_user_defined_function_isValid = ::OpenAPI::fromJsonValue(m_user_defined_function, json[QString("UserDefinedFunction")]);
    m_user_defined_function_isSet = !json[QString("UserDefinedFunction")].isNull() && m_user_defined_function_isValid;
}

QString OAIGetUserDefinedFunctionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetUserDefinedFunctionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_user_defined_function.isSet()) {
        obj.insert(QString("UserDefinedFunction"), ::OpenAPI::toJsonValue(m_user_defined_function));
    }
    return obj;
}

OAIGetUserDefinedFunctionResponse_UserDefinedFunction OAIGetUserDefinedFunctionResponse::getUserDefinedFunction() const {
    return m_user_defined_function;
}
void OAIGetUserDefinedFunctionResponse::setUserDefinedFunction(const OAIGetUserDefinedFunctionResponse_UserDefinedFunction &user_defined_function) {
    m_user_defined_function = user_defined_function;
    m_user_defined_function_isSet = true;
}

bool OAIGetUserDefinedFunctionResponse::is_user_defined_function_Set() const{
    return m_user_defined_function_isSet;
}

bool OAIGetUserDefinedFunctionResponse::is_user_defined_function_Valid() const{
    return m_user_defined_function_isValid;
}

bool OAIGetUserDefinedFunctionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_defined_function.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetUserDefinedFunctionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
