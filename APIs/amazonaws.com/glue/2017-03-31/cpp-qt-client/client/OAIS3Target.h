/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3Target.h
 *
 * Specifies a data store in Amazon Simple Storage Service (Amazon S3).
 */

#ifndef OAIS3Target_H
#define OAIS3Target_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIS3Target : public OAIObject {
public:
    OAIS3Target();
    OAIS3Target(QString json);
    ~OAIS3Target() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QList getExclusions() const;
    void setExclusions(const QList &exclusions);
    bool is_exclusions_Set() const;
    bool is_exclusions_Valid() const;

    QString getConnectionName() const;
    void setConnectionName(const QString &connection_name);
    bool is_connection_name_Set() const;
    bool is_connection_name_Valid() const;

    qint32 getSampleSize() const;
    void setSampleSize(const qint32 &sample_size);
    bool is_sample_size_Set() const;
    bool is_sample_size_Valid() const;

    QString getEventQueueArn() const;
    void setEventQueueArn(const QString &event_queue_arn);
    bool is_event_queue_arn_Set() const;
    bool is_event_queue_arn_Valid() const;

    QString getDlqEventQueueArn() const;
    void setDlqEventQueueArn(const QString &dlq_event_queue_arn);
    bool is_dlq_event_queue_arn_Set() const;
    bool is_dlq_event_queue_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QList m_exclusions;
    bool m_exclusions_isSet;
    bool m_exclusions_isValid;

    QString m_connection_name;
    bool m_connection_name_isSet;
    bool m_connection_name_isValid;

    qint32 m_sample_size;
    bool m_sample_size_isSet;
    bool m_sample_size_isValid;

    QString m_event_queue_arn;
    bool m_event_queue_arn_isSet;
    bool m_event_queue_arn_isValid;

    QString m_dlq_event_queue_arn;
    bool m_dlq_event_queue_arn_isSet;
    bool m_dlq_event_queue_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3Target)

#endif // OAIS3Target_H
