/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPiiType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPiiType::OAIPiiType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPiiType::OAIPiiType() {
    this->initializeModel();
}

OAIPiiType::~OAIPiiType() {}

void OAIPiiType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPiiType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPiiType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RowAudit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPiiType::ROWAUDIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RowMasking", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPiiType::ROWMASKING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ColumnAudit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPiiType::COLUMNAUDIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ColumnMasking", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPiiType::COLUMNMASKING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPiiType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPiiType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPiiType::ROWAUDIT:
            val = "RowAudit";
            break;
        case eOAIPiiType::ROWMASKING:
            val = "RowMasking";
            break;
        case eOAIPiiType::COLUMNAUDIT:
            val = "ColumnAudit";
            break;
        case eOAIPiiType::COLUMNMASKING:
            val = "ColumnMasking";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPiiType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPiiType::eOAIPiiType OAIPiiType::getValue() const {
    return m_value;
}

void OAIPiiType::setValue(const OAIPiiType::eOAIPiiType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPiiType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPiiType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
