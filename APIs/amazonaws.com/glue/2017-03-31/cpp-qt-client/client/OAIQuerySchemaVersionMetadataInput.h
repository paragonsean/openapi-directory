/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuerySchemaVersionMetadataInput.h
 *
 * 
 */

#ifndef OAIQuerySchemaVersionMetadataInput_H
#define OAIQuerySchemaVersionMetadataInput_H

#include <QJsonObject>

#include "OAIGetSchemaVersionInput_SchemaVersionNumber.h"
#include "OAIQuerySchemaVersionMetadataInput_SchemaId.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuerySchemaVersionMetadataInput_SchemaId;
class OAIGetSchemaVersionInput_SchemaVersionNumber;

class OAIQuerySchemaVersionMetadataInput : public OAIObject {
public:
    OAIQuerySchemaVersionMetadataInput();
    OAIQuerySchemaVersionMetadataInput(QString json);
    ~OAIQuerySchemaVersionMetadataInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQuerySchemaVersionMetadataInput_SchemaId getSchemaId() const;
    void setSchemaId(const OAIQuerySchemaVersionMetadataInput_SchemaId &schema_id);
    bool is_schema_id_Set() const;
    bool is_schema_id_Valid() const;

    OAIGetSchemaVersionInput_SchemaVersionNumber getSchemaVersionNumber() const;
    void setSchemaVersionNumber(const OAIGetSchemaVersionInput_SchemaVersionNumber &schema_version_number);
    bool is_schema_version_number_Set() const;
    bool is_schema_version_number_Valid() const;

    QString getSchemaVersionId() const;
    void setSchemaVersionId(const QString &schema_version_id);
    bool is_schema_version_id_Set() const;
    bool is_schema_version_id_Valid() const;

    QList getMetadataList() const;
    void setMetadataList(const QList &metadata_list);
    bool is_metadata_list_Set() const;
    bool is_metadata_list_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQuerySchemaVersionMetadataInput_SchemaId m_schema_id;
    bool m_schema_id_isSet;
    bool m_schema_id_isValid;

    OAIGetSchemaVersionInput_SchemaVersionNumber m_schema_version_number;
    bool m_schema_version_number_isSet;
    bool m_schema_version_number_isValid;

    QString m_schema_version_id;
    bool m_schema_version_id_isSet;
    bool m_schema_version_id_isValid;

    QList m_metadata_list;
    bool m_metadata_list_isSet;
    bool m_metadata_list_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuerySchemaVersionMetadataInput)

#endif // OAIQuerySchemaVersionMetadataInput_H
