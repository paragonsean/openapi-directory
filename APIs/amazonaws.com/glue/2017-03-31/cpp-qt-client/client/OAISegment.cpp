/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegment::OAISegment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegment::OAISegment() {
    this->initializeModel();
}

OAISegment::~OAISegment() {}

void OAISegment::initializeModel() {

    m_segment_number_isSet = false;
    m_segment_number_isValid = false;

    m_total_segments_isSet = false;
    m_total_segments_isValid = false;
}

void OAISegment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegment::fromJsonObject(QJsonObject json) {

    m_segment_number_isValid = ::OpenAPI::fromJsonValue(m_segment_number, json[QString("SegmentNumber")]);
    m_segment_number_isSet = !json[QString("SegmentNumber")].isNull() && m_segment_number_isValid;

    m_total_segments_isValid = ::OpenAPI::fromJsonValue(m_total_segments, json[QString("TotalSegments")]);
    m_total_segments_isSet = !json[QString("TotalSegments")].isNull() && m_total_segments_isValid;
}

QString OAISegment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegment::asJsonObject() const {
    QJsonObject obj;
    if (m_segment_number_isSet) {
        obj.insert(QString("SegmentNumber"), ::OpenAPI::toJsonValue(m_segment_number));
    }
    if (m_total_segments_isSet) {
        obj.insert(QString("TotalSegments"), ::OpenAPI::toJsonValue(m_total_segments));
    }
    return obj;
}

qint32 OAISegment::getSegmentNumber() const {
    return m_segment_number;
}
void OAISegment::setSegmentNumber(const qint32 &segment_number) {
    m_segment_number = segment_number;
    m_segment_number_isSet = true;
}

bool OAISegment::is_segment_number_Set() const{
    return m_segment_number_isSet;
}

bool OAISegment::is_segment_number_Valid() const{
    return m_segment_number_isValid;
}

qint32 OAISegment::getTotalSegments() const {
    return m_total_segments;
}
void OAISegment::setTotalSegments(const qint32 &total_segments) {
    m_total_segments = total_segments;
    m_total_segments_isSet = true;
}

bool OAISegment::is_total_segments_Set() const{
    return m_total_segments_isSet;
}

bool OAISegment::is_total_segments_Valid() const{
    return m_total_segments_isValid;
}

bool OAISegment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_segment_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_segments_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_segment_number_isValid && m_total_segments_isValid && true;
}

} // namespace OpenAPI
