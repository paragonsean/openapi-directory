/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDevEndpointRequest.h
 *
 * 
 */

#ifndef OAIUpdateDevEndpointRequest_H
#define OAIUpdateDevEndpointRequest_H

#include <QJsonObject>

#include "OAIUpdateDevEndpointRequest_CustomLibraries.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateDevEndpointRequest_CustomLibraries;

class OAIUpdateDevEndpointRequest : public OAIObject {
public:
    OAIUpdateDevEndpointRequest();
    OAIUpdateDevEndpointRequest(QString json);
    ~OAIUpdateDevEndpointRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointName() const;
    void setEndpointName(const QString &endpoint_name);
    bool is_endpoint_name_Set() const;
    bool is_endpoint_name_Valid() const;

    QString getPublicKey() const;
    void setPublicKey(const QString &public_key);
    bool is_public_key_Set() const;
    bool is_public_key_Valid() const;

    QList getAddPublicKeys() const;
    void setAddPublicKeys(const QList &add_public_keys);
    bool is_add_public_keys_Set() const;
    bool is_add_public_keys_Valid() const;

    QList getDeletePublicKeys() const;
    void setDeletePublicKeys(const QList &delete_public_keys);
    bool is_delete_public_keys_Set() const;
    bool is_delete_public_keys_Valid() const;

    OAIUpdateDevEndpointRequest_CustomLibraries getCustomLibraries() const;
    void setCustomLibraries(const OAIUpdateDevEndpointRequest_CustomLibraries &custom_libraries);
    bool is_custom_libraries_Set() const;
    bool is_custom_libraries_Valid() const;

    bool getUpdateEtlLibraries() const;
    void setUpdateEtlLibraries(const bool &update_etl_libraries);
    bool is_update_etl_libraries_Set() const;
    bool is_update_etl_libraries_Valid() const;

    QList getDeleteArguments() const;
    void setDeleteArguments(const QList &delete_arguments);
    bool is_delete_arguments_Set() const;
    bool is_delete_arguments_Valid() const;

    QMap getAddArguments() const;
    void setAddArguments(const QMap &add_arguments);
    bool is_add_arguments_Set() const;
    bool is_add_arguments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_name;
    bool m_endpoint_name_isSet;
    bool m_endpoint_name_isValid;

    QString m_public_key;
    bool m_public_key_isSet;
    bool m_public_key_isValid;

    QList m_add_public_keys;
    bool m_add_public_keys_isSet;
    bool m_add_public_keys_isValid;

    QList m_delete_public_keys;
    bool m_delete_public_keys_isSet;
    bool m_delete_public_keys_isValid;

    OAIUpdateDevEndpointRequest_CustomLibraries m_custom_libraries;
    bool m_custom_libraries_isSet;
    bool m_custom_libraries_isValid;

    bool m_update_etl_libraries;
    bool m_update_etl_libraries_isSet;
    bool m_update_etl_libraries_isValid;

    QList m_delete_arguments;
    bool m_delete_arguments_isSet;
    bool m_delete_arguments_isValid;

    QMap m_add_arguments;
    bool m_add_arguments_isSet;
    bool m_add_arguments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDevEndpointRequest)

#endif // OAIUpdateDevEndpointRequest_H
