/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudWatchEncryption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudWatchEncryption::OAICloudWatchEncryption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudWatchEncryption::OAICloudWatchEncryption() {
    this->initializeModel();
}

OAICloudWatchEncryption::~OAICloudWatchEncryption() {}

void OAICloudWatchEncryption::initializeModel() {

    m_cloud_watch_encryption_mode_isSet = false;
    m_cloud_watch_encryption_mode_isValid = false;

    m_kms_key_arn_isSet = false;
    m_kms_key_arn_isValid = false;
}

void OAICloudWatchEncryption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudWatchEncryption::fromJsonObject(QJsonObject json) {

    m_cloud_watch_encryption_mode_isValid = ::OpenAPI::fromJsonValue(m_cloud_watch_encryption_mode, json[QString("CloudWatchEncryptionMode")]);
    m_cloud_watch_encryption_mode_isSet = !json[QString("CloudWatchEncryptionMode")].isNull() && m_cloud_watch_encryption_mode_isValid;

    m_kms_key_arn_isValid = ::OpenAPI::fromJsonValue(m_kms_key_arn, json[QString("KmsKeyArn")]);
    m_kms_key_arn_isSet = !json[QString("KmsKeyArn")].isNull() && m_kms_key_arn_isValid;
}

QString OAICloudWatchEncryption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudWatchEncryption::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_watch_encryption_mode.isSet()) {
        obj.insert(QString("CloudWatchEncryptionMode"), ::OpenAPI::toJsonValue(m_cloud_watch_encryption_mode));
    }
    if (m_kms_key_arn_isSet) {
        obj.insert(QString("KmsKeyArn"), ::OpenAPI::toJsonValue(m_kms_key_arn));
    }
    return obj;
}

OAICloudWatchEncryptionMode OAICloudWatchEncryption::getCloudWatchEncryptionMode() const {
    return m_cloud_watch_encryption_mode;
}
void OAICloudWatchEncryption::setCloudWatchEncryptionMode(const OAICloudWatchEncryptionMode &cloud_watch_encryption_mode) {
    m_cloud_watch_encryption_mode = cloud_watch_encryption_mode;
    m_cloud_watch_encryption_mode_isSet = true;
}

bool OAICloudWatchEncryption::is_cloud_watch_encryption_mode_Set() const{
    return m_cloud_watch_encryption_mode_isSet;
}

bool OAICloudWatchEncryption::is_cloud_watch_encryption_mode_Valid() const{
    return m_cloud_watch_encryption_mode_isValid;
}

QString OAICloudWatchEncryption::getKmsKeyArn() const {
    return m_kms_key_arn;
}
void OAICloudWatchEncryption::setKmsKeyArn(const QString &kms_key_arn) {
    m_kms_key_arn = kms_key_arn;
    m_kms_key_arn_isSet = true;
}

bool OAICloudWatchEncryption::is_kms_key_arn_Set() const{
    return m_kms_key_arn_isSet;
}

bool OAICloudWatchEncryption::is_kms_key_arn_Valid() const{
    return m_kms_key_arn_isValid;
}

bool OAICloudWatchEncryption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_watch_encryption_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudWatchEncryption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
