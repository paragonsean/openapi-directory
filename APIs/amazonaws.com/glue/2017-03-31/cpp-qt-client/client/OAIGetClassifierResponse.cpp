/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetClassifierResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetClassifierResponse::OAIGetClassifierResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetClassifierResponse::OAIGetClassifierResponse() {
    this->initializeModel();
}

OAIGetClassifierResponse::~OAIGetClassifierResponse() {}

void OAIGetClassifierResponse::initializeModel() {

    m_classifier_isSet = false;
    m_classifier_isValid = false;
}

void OAIGetClassifierResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetClassifierResponse::fromJsonObject(QJsonObject json) {

    m_classifier_isValid = ::OpenAPI::fromJsonValue(m_classifier, json[QString("Classifier")]);
    m_classifier_isSet = !json[QString("Classifier")].isNull() && m_classifier_isValid;
}

QString OAIGetClassifierResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetClassifierResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_classifier.isSet()) {
        obj.insert(QString("Classifier"), ::OpenAPI::toJsonValue(m_classifier));
    }
    return obj;
}

OAIGetClassifierResponse_Classifier OAIGetClassifierResponse::getClassifier() const {
    return m_classifier;
}
void OAIGetClassifierResponse::setClassifier(const OAIGetClassifierResponse_Classifier &classifier) {
    m_classifier = classifier;
    m_classifier_isSet = true;
}

bool OAIGetClassifierResponse::is_classifier_Set() const{
    return m_classifier_isSet;
}

bool OAIGetClassifierResponse::is_classifier_Valid() const{
    return m_classifier_isValid;
}

bool OAIGetClassifierResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_classifier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetClassifierResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
