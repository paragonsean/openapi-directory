/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMLTransformsRequest_Filter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMLTransformsRequest_Filter::OAIGetMLTransformsRequest_Filter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMLTransformsRequest_Filter::OAIGetMLTransformsRequest_Filter() {
    this->initializeModel();
}

OAIGetMLTransformsRequest_Filter::~OAIGetMLTransformsRequest_Filter() {}

void OAIGetMLTransformsRequest_Filter::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_transform_type_isSet = false;
    m_transform_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_glue_version_isSet = false;
    m_glue_version_isValid = false;

    m_created_before_isSet = false;
    m_created_before_isValid = false;

    m_created_after_isSet = false;
    m_created_after_isValid = false;

    m_last_modified_before_isSet = false;
    m_last_modified_before_isValid = false;

    m_last_modified_after_isSet = false;
    m_last_modified_after_isValid = false;

    m_schema_isSet = false;
    m_schema_isValid = false;
}

void OAIGetMLTransformsRequest_Filter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMLTransformsRequest_Filter::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_transform_type_isValid = ::OpenAPI::fromJsonValue(m_transform_type, json[QString("TransformType")]);
    m_transform_type_isSet = !json[QString("TransformType")].isNull() && m_transform_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_glue_version_isValid = ::OpenAPI::fromJsonValue(m_glue_version, json[QString("GlueVersion")]);
    m_glue_version_isSet = !json[QString("GlueVersion")].isNull() && m_glue_version_isValid;

    m_created_before_isValid = ::OpenAPI::fromJsonValue(m_created_before, json[QString("CreatedBefore")]);
    m_created_before_isSet = !json[QString("CreatedBefore")].isNull() && m_created_before_isValid;

    m_created_after_isValid = ::OpenAPI::fromJsonValue(m_created_after, json[QString("CreatedAfter")]);
    m_created_after_isSet = !json[QString("CreatedAfter")].isNull() && m_created_after_isValid;

    m_last_modified_before_isValid = ::OpenAPI::fromJsonValue(m_last_modified_before, json[QString("LastModifiedBefore")]);
    m_last_modified_before_isSet = !json[QString("LastModifiedBefore")].isNull() && m_last_modified_before_isValid;

    m_last_modified_after_isValid = ::OpenAPI::fromJsonValue(m_last_modified_after, json[QString("LastModifiedAfter")]);
    m_last_modified_after_isSet = !json[QString("LastModifiedAfter")].isNull() && m_last_modified_after_isValid;

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("Schema")]);
    m_schema_isSet = !json[QString("Schema")].isNull() && m_schema_isValid;
}

QString OAIGetMLTransformsRequest_Filter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMLTransformsRequest_Filter::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_transform_type.isSet()) {
        obj.insert(QString("TransformType"), ::OpenAPI::toJsonValue(m_transform_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_glue_version_isSet) {
        obj.insert(QString("GlueVersion"), ::OpenAPI::toJsonValue(m_glue_version));
    }
    if (m_created_before_isSet) {
        obj.insert(QString("CreatedBefore"), ::OpenAPI::toJsonValue(m_created_before));
    }
    if (m_created_after_isSet) {
        obj.insert(QString("CreatedAfter"), ::OpenAPI::toJsonValue(m_created_after));
    }
    if (m_last_modified_before_isSet) {
        obj.insert(QString("LastModifiedBefore"), ::OpenAPI::toJsonValue(m_last_modified_before));
    }
    if (m_last_modified_after_isSet) {
        obj.insert(QString("LastModifiedAfter"), ::OpenAPI::toJsonValue(m_last_modified_after));
    }
    if (m_schema.isSet()) {
        obj.insert(QString("Schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    return obj;
}

QString OAIGetMLTransformsRequest_Filter::getName() const {
    return m_name;
}
void OAIGetMLTransformsRequest_Filter::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_name_Valid() const{
    return m_name_isValid;
}

OAITransformType OAIGetMLTransformsRequest_Filter::getTransformType() const {
    return m_transform_type;
}
void OAIGetMLTransformsRequest_Filter::setTransformType(const OAITransformType &transform_type) {
    m_transform_type = transform_type;
    m_transform_type_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_transform_type_Set() const{
    return m_transform_type_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_transform_type_Valid() const{
    return m_transform_type_isValid;
}

OAITransformStatusType OAIGetMLTransformsRequest_Filter::getStatus() const {
    return m_status;
}
void OAIGetMLTransformsRequest_Filter::setStatus(const OAITransformStatusType &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetMLTransformsRequest_Filter::getGlueVersion() const {
    return m_glue_version;
}
void OAIGetMLTransformsRequest_Filter::setGlueVersion(const QString &glue_version) {
    m_glue_version = glue_version;
    m_glue_version_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_glue_version_Set() const{
    return m_glue_version_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_glue_version_Valid() const{
    return m_glue_version_isValid;
}

QDateTime OAIGetMLTransformsRequest_Filter::getCreatedBefore() const {
    return m_created_before;
}
void OAIGetMLTransformsRequest_Filter::setCreatedBefore(const QDateTime &created_before) {
    m_created_before = created_before;
    m_created_before_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_created_before_Set() const{
    return m_created_before_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_created_before_Valid() const{
    return m_created_before_isValid;
}

QDateTime OAIGetMLTransformsRequest_Filter::getCreatedAfter() const {
    return m_created_after;
}
void OAIGetMLTransformsRequest_Filter::setCreatedAfter(const QDateTime &created_after) {
    m_created_after = created_after;
    m_created_after_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_created_after_Set() const{
    return m_created_after_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_created_after_Valid() const{
    return m_created_after_isValid;
}

QDateTime OAIGetMLTransformsRequest_Filter::getLastModifiedBefore() const {
    return m_last_modified_before;
}
void OAIGetMLTransformsRequest_Filter::setLastModifiedBefore(const QDateTime &last_modified_before) {
    m_last_modified_before = last_modified_before;
    m_last_modified_before_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_last_modified_before_Set() const{
    return m_last_modified_before_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_last_modified_before_Valid() const{
    return m_last_modified_before_isValid;
}

QDateTime OAIGetMLTransformsRequest_Filter::getLastModifiedAfter() const {
    return m_last_modified_after;
}
void OAIGetMLTransformsRequest_Filter::setLastModifiedAfter(const QDateTime &last_modified_after) {
    m_last_modified_after = last_modified_after;
    m_last_modified_after_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_last_modified_after_Set() const{
    return m_last_modified_after_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_last_modified_after_Valid() const{
    return m_last_modified_after_isValid;
}

QList OAIGetMLTransformsRequest_Filter::getSchema() const {
    return m_schema;
}
void OAIGetMLTransformsRequest_Filter::setSchema(const QList &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAIGetMLTransformsRequest_Filter::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAIGetMLTransformsRequest_Filter::is_schema_Valid() const{
    return m_schema_isValid;
}

bool OAIGetMLTransformsRequest_Filter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transform_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_glue_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMLTransformsRequest_Filter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
