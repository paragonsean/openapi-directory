/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackfillError.h
 *
 * &lt;p&gt;A list of errors that can occur when registering partition indexes for an existing table.&lt;/p&gt; &lt;p&gt;These errors give the details about why an index registration failed and provide a limited number of partitions in the response, so that you can fix the partitions at fault and try registering the index again. The most common set of errors that can occur are categorized as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;EncryptedPartitionError: The partitions are encrypted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;InvalidPartitionTypeDataError: The partition value doesn&#39;t match the data type for that partition column.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MissingPartitionValueError: The partitions are encrypted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;UnsupportedPartitionCharacterError: Characters inside the partition value are not supported. For example: U+0000 , U+0001, U+0002.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;InternalError: Any error which does not belong to other error codes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIBackfillError_H
#define OAIBackfillError_H

#include <QJsonObject>

#include "OAIBackfillErrorCode.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBackfillError : public OAIObject {
public:
    OAIBackfillError();
    OAIBackfillError(QString json);
    ~OAIBackfillError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBackfillErrorCode getCode() const;
    void setCode(const OAIBackfillErrorCode &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList getPartitions() const;
    void setPartitions(const QList &partitions);
    bool is_partitions_Set() const;
    bool is_partitions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBackfillErrorCode m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList m_partitions;
    bool m_partitions_isSet;
    bool m_partitions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackfillError)

#endif // OAIBackfillError_H
