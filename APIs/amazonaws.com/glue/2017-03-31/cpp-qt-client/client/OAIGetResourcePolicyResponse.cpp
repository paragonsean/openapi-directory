/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetResourcePolicyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetResourcePolicyResponse::OAIGetResourcePolicyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetResourcePolicyResponse::OAIGetResourcePolicyResponse() {
    this->initializeModel();
}

OAIGetResourcePolicyResponse::~OAIGetResourcePolicyResponse() {}

void OAIGetResourcePolicyResponse::initializeModel() {

    m_policy_in_json_isSet = false;
    m_policy_in_json_isValid = false;

    m_policy_hash_isSet = false;
    m_policy_hash_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGetResourcePolicyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetResourcePolicyResponse::fromJsonObject(QJsonObject json) {

    m_policy_in_json_isValid = ::OpenAPI::fromJsonValue(m_policy_in_json, json[QString("PolicyInJson")]);
    m_policy_in_json_isSet = !json[QString("PolicyInJson")].isNull() && m_policy_in_json_isValid;

    m_policy_hash_isValid = ::OpenAPI::fromJsonValue(m_policy_hash, json[QString("PolicyHash")]);
    m_policy_hash_isSet = !json[QString("PolicyHash")].isNull() && m_policy_hash_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("CreateTime")]);
    m_create_time_isSet = !json[QString("CreateTime")].isNull() && m_create_time_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("UpdateTime")]);
    m_update_time_isSet = !json[QString("UpdateTime")].isNull() && m_update_time_isValid;
}

QString OAIGetResourcePolicyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetResourcePolicyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_in_json_isSet) {
        obj.insert(QString("PolicyInJson"), ::OpenAPI::toJsonValue(m_policy_in_json));
    }
    if (m_policy_hash_isSet) {
        obj.insert(QString("PolicyHash"), ::OpenAPI::toJsonValue(m_policy_hash));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("CreateTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("UpdateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGetResourcePolicyResponse::getPolicyInJson() const {
    return m_policy_in_json;
}
void OAIGetResourcePolicyResponse::setPolicyInJson(const QString &policy_in_json) {
    m_policy_in_json = policy_in_json;
    m_policy_in_json_isSet = true;
}

bool OAIGetResourcePolicyResponse::is_policy_in_json_Set() const{
    return m_policy_in_json_isSet;
}

bool OAIGetResourcePolicyResponse::is_policy_in_json_Valid() const{
    return m_policy_in_json_isValid;
}

QString OAIGetResourcePolicyResponse::getPolicyHash() const {
    return m_policy_hash;
}
void OAIGetResourcePolicyResponse::setPolicyHash(const QString &policy_hash) {
    m_policy_hash = policy_hash;
    m_policy_hash_isSet = true;
}

bool OAIGetResourcePolicyResponse::is_policy_hash_Set() const{
    return m_policy_hash_isSet;
}

bool OAIGetResourcePolicyResponse::is_policy_hash_Valid() const{
    return m_policy_hash_isValid;
}

QDateTime OAIGetResourcePolicyResponse::getCreateTime() const {
    return m_create_time;
}
void OAIGetResourcePolicyResponse::setCreateTime(const QDateTime &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGetResourcePolicyResponse::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGetResourcePolicyResponse::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QDateTime OAIGetResourcePolicyResponse::getUpdateTime() const {
    return m_update_time;
}
void OAIGetResourcePolicyResponse::setUpdateTime(const QDateTime &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGetResourcePolicyResponse::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGetResourcePolicyResponse::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGetResourcePolicyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_in_json_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetResourcePolicyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
