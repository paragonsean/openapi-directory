/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISession.h
 *
 * The period in which a remote Spark runtime environment is running.
 */

#ifndef OAISession_H
#define OAISession_H

#include <QJsonObject>

#include "OAISessionStatus.h"
#include "OAISession_Command.h"
#include "OAISession_Connections.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISession_Command;
class OAISession_Connections;

class OAISession : public OAIObject {
public:
    OAISession();
    OAISession(QString json);
    ~OAISession() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    OAISessionStatus getStatus() const;
    void setStatus(const OAISessionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAISession_Command getCommand() const;
    void setCommand(const OAISession_Command &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    QMap getDefaultArguments() const;
    void setDefaultArguments(const QMap &default_arguments);
    bool is_default_arguments_Set() const;
    bool is_default_arguments_Valid() const;

    OAISession_Connections getConnections() const;
    void setConnections(const OAISession_Connections &connections);
    bool is_connections_Set() const;
    bool is_connections_Valid() const;

    double getProgress() const;
    void setProgress(const double &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    double getMaxCapacity() const;
    void setMaxCapacity(const double &max_capacity);
    bool is_max_capacity_Set() const;
    bool is_max_capacity_Valid() const;

    QString getSecurityConfiguration() const;
    void setSecurityConfiguration(const QString &security_configuration);
    bool is_security_configuration_Set() const;
    bool is_security_configuration_Valid() const;

    QString getGlueVersion() const;
    void setGlueVersion(const QString &glue_version);
    bool is_glue_version_Set() const;
    bool is_glue_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    OAISessionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAISession_Command m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    QMap m_default_arguments;
    bool m_default_arguments_isSet;
    bool m_default_arguments_isValid;

    OAISession_Connections m_connections;
    bool m_connections_isSet;
    bool m_connections_isValid;

    double m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;

    double m_max_capacity;
    bool m_max_capacity_isSet;
    bool m_max_capacity_isValid;

    QString m_security_configuration;
    bool m_security_configuration_isSet;
    bool m_security_configuration_isValid;

    QString m_glue_version;
    bool m_glue_version_isSet;
    bool m_glue_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISession)

#endif // OAISession_H
