/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICodeGenEdge.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICodeGenEdge::OAICodeGenEdge(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICodeGenEdge::OAICodeGenEdge() {
    this->initializeModel();
}

OAICodeGenEdge::~OAICodeGenEdge() {}

void OAICodeGenEdge::initializeModel() {

    m_source_isSet = false;
    m_source_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;

    m_target_parameter_isSet = false;
    m_target_parameter_isValid = false;
}

void OAICodeGenEdge::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICodeGenEdge::fromJsonObject(QJsonObject json) {

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("Target")]);
    m_target_isSet = !json[QString("Target")].isNull() && m_target_isValid;

    m_target_parameter_isValid = ::OpenAPI::fromJsonValue(m_target_parameter, json[QString("TargetParameter")]);
    m_target_parameter_isSet = !json[QString("TargetParameter")].isNull() && m_target_parameter_isValid;
}

QString OAICodeGenEdge::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICodeGenEdge::asJsonObject() const {
    QJsonObject obj;
    if (m_source_isSet) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_target_isSet) {
        obj.insert(QString("Target"), ::OpenAPI::toJsonValue(m_target));
    }
    if (m_target_parameter_isSet) {
        obj.insert(QString("TargetParameter"), ::OpenAPI::toJsonValue(m_target_parameter));
    }
    return obj;
}

QString OAICodeGenEdge::getSource() const {
    return m_source;
}
void OAICodeGenEdge::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAICodeGenEdge::is_source_Set() const{
    return m_source_isSet;
}

bool OAICodeGenEdge::is_source_Valid() const{
    return m_source_isValid;
}

QString OAICodeGenEdge::getTarget() const {
    return m_target;
}
void OAICodeGenEdge::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAICodeGenEdge::is_target_Set() const{
    return m_target_isSet;
}

bool OAICodeGenEdge::is_target_Valid() const{
    return m_target_isValid;
}

QString OAICodeGenEdge::getTargetParameter() const {
    return m_target_parameter;
}
void OAICodeGenEdge::setTargetParameter(const QString &target_parameter) {
    m_target_parameter = target_parameter;
    m_target_parameter_isSet = true;
}

bool OAICodeGenEdge::is_target_parameter_Set() const{
    return m_target_parameter_isSet;
}

bool OAICodeGenEdge::is_target_parameter_Valid() const{
    return m_target_parameter_isValid;
}

bool OAICodeGenEdge::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_parameter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICodeGenEdge::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_source_isValid && m_target_isValid && true;
}

} // namespace OpenAPI
