/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICodeGenConfigurationNode_S3HudiSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICodeGenConfigurationNode_S3HudiSource::OAICodeGenConfigurationNode_S3HudiSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICodeGenConfigurationNode_S3HudiSource::OAICodeGenConfigurationNode_S3HudiSource() {
    this->initializeModel();
}

OAICodeGenConfigurationNode_S3HudiSource::~OAICodeGenConfigurationNode_S3HudiSource() {}

void OAICodeGenConfigurationNode_S3HudiSource::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_paths_isSet = false;
    m_paths_isValid = false;

    m_additional_hudi_options_isSet = false;
    m_additional_hudi_options_isValid = false;

    m_additional_options_isSet = false;
    m_additional_options_isValid = false;

    m_output_schemas_isSet = false;
    m_output_schemas_isValid = false;
}

void OAICodeGenConfigurationNode_S3HudiSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICodeGenConfigurationNode_S3HudiSource::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_paths_isValid = ::OpenAPI::fromJsonValue(m_paths, json[QString("Paths")]);
    m_paths_isSet = !json[QString("Paths")].isNull() && m_paths_isValid;

    m_additional_hudi_options_isValid = ::OpenAPI::fromJsonValue(m_additional_hudi_options, json[QString("AdditionalHudiOptions")]);
    m_additional_hudi_options_isSet = !json[QString("AdditionalHudiOptions")].isNull() && m_additional_hudi_options_isValid;

    m_additional_options_isValid = ::OpenAPI::fromJsonValue(m_additional_options, json[QString("AdditionalOptions")]);
    m_additional_options_isSet = !json[QString("AdditionalOptions")].isNull() && m_additional_options_isValid;

    m_output_schemas_isValid = ::OpenAPI::fromJsonValue(m_output_schemas, json[QString("OutputSchemas")]);
    m_output_schemas_isSet = !json[QString("OutputSchemas")].isNull() && m_output_schemas_isValid;
}

QString OAICodeGenConfigurationNode_S3HudiSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICodeGenConfigurationNode_S3HudiSource::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_paths.isSet()) {
        obj.insert(QString("Paths"), ::OpenAPI::toJsonValue(m_paths));
    }
    if (m_additional_hudi_options.isSet()) {
        obj.insert(QString("AdditionalHudiOptions"), ::OpenAPI::toJsonValue(m_additional_hudi_options));
    }
    if (m_additional_options.isSet()) {
        obj.insert(QString("AdditionalOptions"), ::OpenAPI::toJsonValue(m_additional_options));
    }
    if (m_output_schemas.isSet()) {
        obj.insert(QString("OutputSchemas"), ::OpenAPI::toJsonValue(m_output_schemas));
    }
    return obj;
}

QString OAICodeGenConfigurationNode_S3HudiSource::getName() const {
    return m_name;
}
void OAICodeGenConfigurationNode_S3HudiSource::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_name_Set() const{
    return m_name_isSet;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_name_Valid() const{
    return m_name_isValid;
}

QList OAICodeGenConfigurationNode_S3HudiSource::getPaths() const {
    return m_paths;
}
void OAICodeGenConfigurationNode_S3HudiSource::setPaths(const QList &paths) {
    m_paths = paths;
    m_paths_isSet = true;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_paths_Set() const{
    return m_paths_isSet;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_paths_Valid() const{
    return m_paths_isValid;
}

QMap OAICodeGenConfigurationNode_S3HudiSource::getAdditionalHudiOptions() const {
    return m_additional_hudi_options;
}
void OAICodeGenConfigurationNode_S3HudiSource::setAdditionalHudiOptions(const QMap &additional_hudi_options) {
    m_additional_hudi_options = additional_hudi_options;
    m_additional_hudi_options_isSet = true;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_additional_hudi_options_Set() const{
    return m_additional_hudi_options_isSet;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_additional_hudi_options_Valid() const{
    return m_additional_hudi_options_isValid;
}

OAIS3HudiSource_AdditionalOptions OAICodeGenConfigurationNode_S3HudiSource::getAdditionalOptions() const {
    return m_additional_options;
}
void OAICodeGenConfigurationNode_S3HudiSource::setAdditionalOptions(const OAIS3HudiSource_AdditionalOptions &additional_options) {
    m_additional_options = additional_options;
    m_additional_options_isSet = true;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_additional_options_Set() const{
    return m_additional_options_isSet;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_additional_options_Valid() const{
    return m_additional_options_isValid;
}

QList OAICodeGenConfigurationNode_S3HudiSource::getOutputSchemas() const {
    return m_output_schemas;
}
void OAICodeGenConfigurationNode_S3HudiSource::setOutputSchemas(const QList &output_schemas) {
    m_output_schemas = output_schemas;
    m_output_schemas_isSet = true;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_output_schemas_Set() const{
    return m_output_schemas_isSet;
}

bool OAICodeGenConfigurationNode_S3HudiSource::is_output_schemas_Valid() const{
    return m_output_schemas_isValid;
}

bool OAICodeGenConfigurationNode_S3HudiSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paths.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_hudi_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_schemas.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICodeGenConfigurationNode_S3HudiSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_paths_isValid && true;
}

} // namespace OpenAPI
