/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetConnectionResponse_Connection.h
 *
 * 
 */

#ifndef OAIGetConnectionResponse_Connection_H
#define OAIGetConnectionResponse_Connection_H

#include <QJsonObject>

#include "OAIConnectionType.h"
#include "OAIConnection_PhysicalConnectionRequirements.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnection_PhysicalConnectionRequirements;

class OAIGetConnectionResponse_Connection : public OAIObject {
public:
    OAIGetConnectionResponse_Connection();
    OAIGetConnectionResponse_Connection(QString json);
    ~OAIGetConnectionResponse_Connection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIConnectionType getConnectionType() const;
    void setConnectionType(const OAIConnectionType &connection_type);
    bool is_connection_type_Set() const;
    bool is_connection_type_Valid() const;

    QList getMatchCriteria() const;
    void setMatchCriteria(const QList &match_criteria);
    bool is_match_criteria_Set() const;
    bool is_match_criteria_Valid() const;

    QMap getConnectionProperties() const;
    void setConnectionProperties(const QMap &connection_properties);
    bool is_connection_properties_Set() const;
    bool is_connection_properties_Valid() const;

    OAIConnection_PhysicalConnectionRequirements getPhysicalConnectionRequirements() const;
    void setPhysicalConnectionRequirements(const OAIConnection_PhysicalConnectionRequirements &physical_connection_requirements);
    bool is_physical_connection_requirements_Set() const;
    bool is_physical_connection_requirements_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QString getLastUpdatedBy() const;
    void setLastUpdatedBy(const QString &last_updated_by);
    bool is_last_updated_by_Set() const;
    bool is_last_updated_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIConnectionType m_connection_type;
    bool m_connection_type_isSet;
    bool m_connection_type_isValid;

    QList m_match_criteria;
    bool m_match_criteria_isSet;
    bool m_match_criteria_isValid;

    QMap m_connection_properties;
    bool m_connection_properties_isSet;
    bool m_connection_properties_isValid;

    OAIConnection_PhysicalConnectionRequirements m_physical_connection_requirements;
    bool m_physical_connection_requirements_isSet;
    bool m_physical_connection_requirements_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QString m_last_updated_by;
    bool m_last_updated_by_isSet;
    bool m_last_updated_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetConnectionResponse_Connection)

#endif // OAIGetConnectionResponse_Connection_H
