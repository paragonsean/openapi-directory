/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPIIDetection.h
 *
 * Specifies a transform that identifies, removes or masks PII data.
 */

#ifndef OAIPIIDetection_H
#define OAIPIIDetection_H

#include <QJsonObject>

#include "OAIPiiType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPIIDetection : public OAIObject {
public:
    OAIPIIDetection();
    OAIPIIDetection(QString json);
    ~OAIPIIDetection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getInputs() const;
    void setInputs(const QList &inputs);
    bool is_inputs_Set() const;
    bool is_inputs_Valid() const;

    OAIPiiType getPiiType() const;
    void setPiiType(const OAIPiiType &pii_type);
    bool is_pii_type_Set() const;
    bool is_pii_type_Valid() const;

    QList getEntityTypesToDetect() const;
    void setEntityTypesToDetect(const QList &entity_types_to_detect);
    bool is_entity_types_to_detect_Set() const;
    bool is_entity_types_to_detect_Valid() const;

    QString getOutputColumnName() const;
    void setOutputColumnName(const QString &output_column_name);
    bool is_output_column_name_Set() const;
    bool is_output_column_name_Valid() const;

    double getSampleFraction() const;
    void setSampleFraction(const double &sample_fraction);
    bool is_sample_fraction_Set() const;
    bool is_sample_fraction_Valid() const;

    double getThresholdFraction() const;
    void setThresholdFraction(const double &threshold_fraction);
    bool is_threshold_fraction_Set() const;
    bool is_threshold_fraction_Valid() const;

    QString getMaskValue() const;
    void setMaskValue(const QString &mask_value);
    bool is_mask_value_Set() const;
    bool is_mask_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_inputs;
    bool m_inputs_isSet;
    bool m_inputs_isValid;

    OAIPiiType m_pii_type;
    bool m_pii_type_isSet;
    bool m_pii_type_isValid;

    QList m_entity_types_to_detect;
    bool m_entity_types_to_detect_isSet;
    bool m_entity_types_to_detect_isValid;

    QString m_output_column_name;
    bool m_output_column_name_isSet;
    bool m_output_column_name_isValid;

    double m_sample_fraction;
    bool m_sample_fraction_isSet;
    bool m_sample_fraction_isValid;

    double m_threshold_fraction;
    bool m_threshold_fraction_isSet;
    bool m_threshold_fraction_isValid;

    QString m_mask_value;
    bool m_mask_value_isSet;
    bool m_mask_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPIIDetection)

#endif // OAIPIIDetection_H
