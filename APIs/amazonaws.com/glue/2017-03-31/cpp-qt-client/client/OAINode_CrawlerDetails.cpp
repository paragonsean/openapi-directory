/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINode_CrawlerDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINode_CrawlerDetails::OAINode_CrawlerDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINode_CrawlerDetails::OAINode_CrawlerDetails() {
    this->initializeModel();
}

OAINode_CrawlerDetails::~OAINode_CrawlerDetails() {}

void OAINode_CrawlerDetails::initializeModel() {

    m_crawls_isSet = false;
    m_crawls_isValid = false;
}

void OAINode_CrawlerDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINode_CrawlerDetails::fromJsonObject(QJsonObject json) {

    m_crawls_isValid = ::OpenAPI::fromJsonValue(m_crawls, json[QString("Crawls")]);
    m_crawls_isSet = !json[QString("Crawls")].isNull() && m_crawls_isValid;
}

QString OAINode_CrawlerDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINode_CrawlerDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_crawls.isSet()) {
        obj.insert(QString("Crawls"), ::OpenAPI::toJsonValue(m_crawls));
    }
    return obj;
}

QList OAINode_CrawlerDetails::getCrawls() const {
    return m_crawls;
}
void OAINode_CrawlerDetails::setCrawls(const QList &crawls) {
    m_crawls = crawls;
    m_crawls_isSet = true;
}

bool OAINode_CrawlerDetails::is_crawls_Set() const{
    return m_crawls_isSet;
}

bool OAINode_CrawlerDetails::is_crawls_Valid() const{
    return m_crawls_isValid;
}

bool OAINode_CrawlerDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crawls.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINode_CrawlerDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
