/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMerge.h
 *
 * Specifies a transform that merges a &lt;code&gt;DynamicFrame&lt;/code&gt; with a staging &lt;code&gt;DynamicFrame&lt;/code&gt; based on the specified primary keys to identify records. Duplicate records (records with the same primary keys) are not de-duplicated. 
 */

#ifndef OAIMerge_H
#define OAIMerge_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMerge : public OAIObject {
public:
    OAIMerge();
    OAIMerge(QString json);
    ~OAIMerge() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getInputs() const;
    void setInputs(const QList &inputs);
    bool is_inputs_Set() const;
    bool is_inputs_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList getPrimaryKeys() const;
    void setPrimaryKeys(const QList &primary_keys);
    bool is_primary_keys_Set() const;
    bool is_primary_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_inputs;
    bool m_inputs_isSet;
    bool m_inputs_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList m_primary_keys;
    bool m_primary_keys_isSet;
    bool m_primary_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMerge)

#endif // OAIMerge_H
