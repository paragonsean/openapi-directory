/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateTableRequest.h
 *
 * 
 */

#ifndef OAICreateTableRequest_H
#define OAICreateTableRequest_H

#include <QJsonObject>

#include "OAICreateTableRequest_OpenTableFormatInput.h"
#include "OAICreateTableRequest_TableInput.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateTableRequest_TableInput;
class OAICreateTableRequest_OpenTableFormatInput;

class OAICreateTableRequest : public OAIObject {
public:
    OAICreateTableRequest();
    OAICreateTableRequest(QString json);
    ~OAICreateTableRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalogId() const;
    void setCatalogId(const QString &catalog_id);
    bool is_catalog_id_Set() const;
    bool is_catalog_id_Valid() const;

    QString getDatabaseName() const;
    void setDatabaseName(const QString &database_name);
    bool is_database_name_Set() const;
    bool is_database_name_Valid() const;

    OAICreateTableRequest_TableInput getTableInput() const;
    void setTableInput(const OAICreateTableRequest_TableInput &table_input);
    bool is_table_input_Set() const;
    bool is_table_input_Valid() const;

    QList getPartitionIndexes() const;
    void setPartitionIndexes(const QList &partition_indexes);
    bool is_partition_indexes_Set() const;
    bool is_partition_indexes_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    OAICreateTableRequest_OpenTableFormatInput getOpenTableFormatInput() const;
    void setOpenTableFormatInput(const OAICreateTableRequest_OpenTableFormatInput &open_table_format_input);
    bool is_open_table_format_input_Set() const;
    bool is_open_table_format_input_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalog_id;
    bool m_catalog_id_isSet;
    bool m_catalog_id_isValid;

    QString m_database_name;
    bool m_database_name_isSet;
    bool m_database_name_isValid;

    OAICreateTableRequest_TableInput m_table_input;
    bool m_table_input_isSet;
    bool m_table_input_isValid;

    QList m_partition_indexes;
    bool m_partition_indexes_isSet;
    bool m_partition_indexes_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;

    OAICreateTableRequest_OpenTableFormatInput m_open_table_format_input;
    bool m_open_table_format_input_isSet;
    bool m_open_table_format_input_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateTableRequest)

#endif // OAICreateTableRequest_H
