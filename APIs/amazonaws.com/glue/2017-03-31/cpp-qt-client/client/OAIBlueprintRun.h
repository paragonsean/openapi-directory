/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlueprintRun.h
 *
 * The details of a blueprint run.
 */

#ifndef OAIBlueprintRun_H
#define OAIBlueprintRun_H

#include <QJsonObject>

#include "OAIBlueprintRunState.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBlueprintRun : public OAIObject {
public:
    OAIBlueprintRun();
    OAIBlueprintRun(QString json);
    ~OAIBlueprintRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlueprintName() const;
    void setBlueprintName(const QString &blueprint_name);
    bool is_blueprint_name_Set() const;
    bool is_blueprint_name_Valid() const;

    QString getRunId() const;
    void setRunId(const QString &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    QString getWorkflowName() const;
    void setWorkflowName(const QString &workflow_name);
    bool is_workflow_name_Set() const;
    bool is_workflow_name_Valid() const;

    OAIBlueprintRunState getState() const;
    void setState(const OAIBlueprintRunState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getStartedOn() const;
    void setStartedOn(const QDateTime &started_on);
    bool is_started_on_Set() const;
    bool is_started_on_Valid() const;

    QDateTime getCompletedOn() const;
    void setCompletedOn(const QDateTime &completed_on);
    bool is_completed_on_Set() const;
    bool is_completed_on_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getRollbackErrorMessage() const;
    void setRollbackErrorMessage(const QString &rollback_error_message);
    bool is_rollback_error_message_Set() const;
    bool is_rollback_error_message_Valid() const;

    QString getParameters() const;
    void setParameters(const QString &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blueprint_name;
    bool m_blueprint_name_isSet;
    bool m_blueprint_name_isValid;

    QString m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    QString m_workflow_name;
    bool m_workflow_name_isSet;
    bool m_workflow_name_isValid;

    OAIBlueprintRunState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_started_on;
    bool m_started_on_isSet;
    bool m_started_on_isValid;

    QDateTime m_completed_on;
    bool m_completed_on_isSet;
    bool m_completed_on_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_rollback_error_message;
    bool m_rollback_error_message_isSet;
    bool m_rollback_error_message_isValid;

    QString m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlueprintRun)

#endif // OAIBlueprintRun_H
