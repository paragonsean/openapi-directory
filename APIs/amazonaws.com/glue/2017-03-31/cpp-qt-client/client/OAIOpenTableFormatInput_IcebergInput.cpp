/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOpenTableFormatInput_IcebergInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOpenTableFormatInput_IcebergInput::OAIOpenTableFormatInput_IcebergInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOpenTableFormatInput_IcebergInput::OAIOpenTableFormatInput_IcebergInput() {
    this->initializeModel();
}

OAIOpenTableFormatInput_IcebergInput::~OAIOpenTableFormatInput_IcebergInput() {}

void OAIOpenTableFormatInput_IcebergInput::initializeModel() {

    m_metadata_operation_isSet = false;
    m_metadata_operation_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIOpenTableFormatInput_IcebergInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOpenTableFormatInput_IcebergInput::fromJsonObject(QJsonObject json) {

    m_metadata_operation_isValid = ::OpenAPI::fromJsonValue(m_metadata_operation, json[QString("MetadataOperation")]);
    m_metadata_operation_isSet = !json[QString("MetadataOperation")].isNull() && m_metadata_operation_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIOpenTableFormatInput_IcebergInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOpenTableFormatInput_IcebergInput::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_operation.isSet()) {
        obj.insert(QString("MetadataOperation"), ::OpenAPI::toJsonValue(m_metadata_operation));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAIMetadataOperation OAIOpenTableFormatInput_IcebergInput::getMetadataOperation() const {
    return m_metadata_operation;
}
void OAIOpenTableFormatInput_IcebergInput::setMetadataOperation(const OAIMetadataOperation &metadata_operation) {
    m_metadata_operation = metadata_operation;
    m_metadata_operation_isSet = true;
}

bool OAIOpenTableFormatInput_IcebergInput::is_metadata_operation_Set() const{
    return m_metadata_operation_isSet;
}

bool OAIOpenTableFormatInput_IcebergInput::is_metadata_operation_Valid() const{
    return m_metadata_operation_isValid;
}

QString OAIOpenTableFormatInput_IcebergInput::getVersion() const {
    return m_version;
}
void OAIOpenTableFormatInput_IcebergInput::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIOpenTableFormatInput_IcebergInput::is_version_Set() const{
    return m_version_isSet;
}

bool OAIOpenTableFormatInput_IcebergInput::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIOpenTableFormatInput_IcebergInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_operation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOpenTableFormatInput_IcebergInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_metadata_operation_isValid && true;
}

} // namespace OpenAPI
