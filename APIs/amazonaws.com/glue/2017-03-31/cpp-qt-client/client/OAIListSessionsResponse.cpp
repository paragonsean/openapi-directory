/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSessionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSessionsResponse::OAIListSessionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSessionsResponse::OAIListSessionsResponse() {
    this->initializeModel();
}

OAIListSessionsResponse::~OAIListSessionsResponse() {}

void OAIListSessionsResponse::initializeModel() {

    m_ids_isSet = false;
    m_ids_isValid = false;

    m_sessions_isSet = false;
    m_sessions_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListSessionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSessionsResponse::fromJsonObject(QJsonObject json) {

    m_ids_isValid = ::OpenAPI::fromJsonValue(m_ids, json[QString("Ids")]);
    m_ids_isSet = !json[QString("Ids")].isNull() && m_ids_isValid;

    m_sessions_isValid = ::OpenAPI::fromJsonValue(m_sessions, json[QString("Sessions")]);
    m_sessions_isSet = !json[QString("Sessions")].isNull() && m_sessions_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListSessionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSessionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_ids.isSet()) {
        obj.insert(QString("Ids"), ::OpenAPI::toJsonValue(m_ids));
    }
    if (m_sessions.isSet()) {
        obj.insert(QString("Sessions"), ::OpenAPI::toJsonValue(m_sessions));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListSessionsResponse::getIds() const {
    return m_ids;
}
void OAIListSessionsResponse::setIds(const QList &ids) {
    m_ids = ids;
    m_ids_isSet = true;
}

bool OAIListSessionsResponse::is_ids_Set() const{
    return m_ids_isSet;
}

bool OAIListSessionsResponse::is_ids_Valid() const{
    return m_ids_isValid;
}

QList OAIListSessionsResponse::getSessions() const {
    return m_sessions;
}
void OAIListSessionsResponse::setSessions(const QList &sessions) {
    m_sessions = sessions;
    m_sessions_isSet = true;
}

bool OAIListSessionsResponse::is_sessions_Set() const{
    return m_sessions_isSet;
}

bool OAIListSessionsResponse::is_sessions_Valid() const{
    return m_sessions_isValid;
}

QString OAIListSessionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListSessionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSessionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSessionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListSessionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sessions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSessionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
