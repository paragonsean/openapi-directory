/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartExportLabelsTaskRunResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartExportLabelsTaskRunResponse::OAIStartExportLabelsTaskRunResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartExportLabelsTaskRunResponse::OAIStartExportLabelsTaskRunResponse() {
    this->initializeModel();
}

OAIStartExportLabelsTaskRunResponse::~OAIStartExportLabelsTaskRunResponse() {}

void OAIStartExportLabelsTaskRunResponse::initializeModel() {

    m_task_run_id_isSet = false;
    m_task_run_id_isValid = false;
}

void OAIStartExportLabelsTaskRunResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartExportLabelsTaskRunResponse::fromJsonObject(QJsonObject json) {

    m_task_run_id_isValid = ::OpenAPI::fromJsonValue(m_task_run_id, json[QString("TaskRunId")]);
    m_task_run_id_isSet = !json[QString("TaskRunId")].isNull() && m_task_run_id_isValid;
}

QString OAIStartExportLabelsTaskRunResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartExportLabelsTaskRunResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_task_run_id_isSet) {
        obj.insert(QString("TaskRunId"), ::OpenAPI::toJsonValue(m_task_run_id));
    }
    return obj;
}

QString OAIStartExportLabelsTaskRunResponse::getTaskRunId() const {
    return m_task_run_id;
}
void OAIStartExportLabelsTaskRunResponse::setTaskRunId(const QString &task_run_id) {
    m_task_run_id = task_run_id;
    m_task_run_id_isSet = true;
}

bool OAIStartExportLabelsTaskRunResponse::is_task_run_id_Set() const{
    return m_task_run_id_isSet;
}

bool OAIStartExportLabelsTaskRunResponse::is_task_run_id_Valid() const{
    return m_task_run_id_isValid;
}

bool OAIStartExportLabelsTaskRunResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_run_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartExportLabelsTaskRunResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
