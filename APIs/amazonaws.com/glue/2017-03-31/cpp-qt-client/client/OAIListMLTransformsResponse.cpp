/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListMLTransformsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListMLTransformsResponse::OAIListMLTransformsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListMLTransformsResponse::OAIListMLTransformsResponse() {
    this->initializeModel();
}

OAIListMLTransformsResponse::~OAIListMLTransformsResponse() {}

void OAIListMLTransformsResponse::initializeModel() {

    m_transform_ids_isSet = false;
    m_transform_ids_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListMLTransformsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListMLTransformsResponse::fromJsonObject(QJsonObject json) {

    m_transform_ids_isValid = ::OpenAPI::fromJsonValue(m_transform_ids, json[QString("TransformIds")]);
    m_transform_ids_isSet = !json[QString("TransformIds")].isNull() && m_transform_ids_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListMLTransformsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListMLTransformsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_transform_ids.isSet()) {
        obj.insert(QString("TransformIds"), ::OpenAPI::toJsonValue(m_transform_ids));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListMLTransformsResponse::getTransformIds() const {
    return m_transform_ids;
}
void OAIListMLTransformsResponse::setTransformIds(const QList &transform_ids) {
    m_transform_ids = transform_ids;
    m_transform_ids_isSet = true;
}

bool OAIListMLTransformsResponse::is_transform_ids_Set() const{
    return m_transform_ids_isSet;
}

bool OAIListMLTransformsResponse::is_transform_ids_Valid() const{
    return m_transform_ids_isValid;
}

QString OAIListMLTransformsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListMLTransformsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListMLTransformsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListMLTransformsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListMLTransformsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transform_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListMLTransformsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_transform_ids_isValid && true;
}

} // namespace OpenAPI
