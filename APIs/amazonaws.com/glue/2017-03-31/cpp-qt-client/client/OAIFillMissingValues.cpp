/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFillMissingValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFillMissingValues::OAIFillMissingValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFillMissingValues::OAIFillMissingValues() {
    this->initializeModel();
}

OAIFillMissingValues::~OAIFillMissingValues() {}

void OAIFillMissingValues::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_imputed_path_isSet = false;
    m_imputed_path_isValid = false;

    m_filled_path_isSet = false;
    m_filled_path_isValid = false;
}

void OAIFillMissingValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFillMissingValues::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("Inputs")]);
    m_inputs_isSet = !json[QString("Inputs")].isNull() && m_inputs_isValid;

    m_imputed_path_isValid = ::OpenAPI::fromJsonValue(m_imputed_path, json[QString("ImputedPath")]);
    m_imputed_path_isSet = !json[QString("ImputedPath")].isNull() && m_imputed_path_isValid;

    m_filled_path_isValid = ::OpenAPI::fromJsonValue(m_filled_path, json[QString("FilledPath")]);
    m_filled_path_isSet = !json[QString("FilledPath")].isNull() && m_filled_path_isValid;
}

QString OAIFillMissingValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFillMissingValues::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_inputs.isSet()) {
        obj.insert(QString("Inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_imputed_path_isSet) {
        obj.insert(QString("ImputedPath"), ::OpenAPI::toJsonValue(m_imputed_path));
    }
    if (m_filled_path_isSet) {
        obj.insert(QString("FilledPath"), ::OpenAPI::toJsonValue(m_filled_path));
    }
    return obj;
}

QString OAIFillMissingValues::getName() const {
    return m_name;
}
void OAIFillMissingValues::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFillMissingValues::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFillMissingValues::is_name_Valid() const{
    return m_name_isValid;
}

QList OAIFillMissingValues::getInputs() const {
    return m_inputs;
}
void OAIFillMissingValues::setInputs(const QList &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIFillMissingValues::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIFillMissingValues::is_inputs_Valid() const{
    return m_inputs_isValid;
}

QString OAIFillMissingValues::getImputedPath() const {
    return m_imputed_path;
}
void OAIFillMissingValues::setImputedPath(const QString &imputed_path) {
    m_imputed_path = imputed_path;
    m_imputed_path_isSet = true;
}

bool OAIFillMissingValues::is_imputed_path_Set() const{
    return m_imputed_path_isSet;
}

bool OAIFillMissingValues::is_imputed_path_Valid() const{
    return m_imputed_path_isValid;
}

QString OAIFillMissingValues::getFilledPath() const {
    return m_filled_path;
}
void OAIFillMissingValues::setFilledPath(const QString &filled_path) {
    m_filled_path = filled_path;
    m_filled_path_isSet = true;
}

bool OAIFillMissingValues::is_filled_path_Set() const{
    return m_filled_path_isSet;
}

bool OAIFillMissingValues::is_filled_path_Valid() const{
    return m_filled_path_isValid;
}

bool OAIFillMissingValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inputs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_imputed_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filled_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFillMissingValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_inputs_isValid && m_imputed_path_isValid && true;
}

} // namespace OpenAPI
