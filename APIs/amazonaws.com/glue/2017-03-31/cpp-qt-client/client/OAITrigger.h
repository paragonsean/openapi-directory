/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrigger.h
 *
 * Information about a specific trigger.
 */

#ifndef OAITrigger_H
#define OAITrigger_H

#include <QJsonObject>

#include "OAICreateTriggerRequest_EventBatchingCondition.h"
#include "OAITriggerState.h"
#include "OAITriggerType.h"
#include "OAITrigger_Predicate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrigger_Predicate;
class OAICreateTriggerRequest_EventBatchingCondition;

class OAITrigger : public OAIObject {
public:
    OAITrigger();
    OAITrigger(QString json);
    ~OAITrigger() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getWorkflowName() const;
    void setWorkflowName(const QString &workflow_name);
    bool is_workflow_name_Set() const;
    bool is_workflow_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAITriggerType getType() const;
    void setType(const OAITriggerType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAITriggerState getState() const;
    void setState(const OAITriggerState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getSchedule() const;
    void setSchedule(const QString &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QList getActions() const;
    void setActions(const QList &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    OAITrigger_Predicate getPredicate() const;
    void setPredicate(const OAITrigger_Predicate &predicate);
    bool is_predicate_Set() const;
    bool is_predicate_Valid() const;

    OAICreateTriggerRequest_EventBatchingCondition getEventBatchingCondition() const;
    void setEventBatchingCondition(const OAICreateTriggerRequest_EventBatchingCondition &event_batching_condition);
    bool is_event_batching_condition_Set() const;
    bool is_event_batching_condition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_workflow_name;
    bool m_workflow_name_isSet;
    bool m_workflow_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAITriggerType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAITriggerState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QList m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    OAITrigger_Predicate m_predicate;
    bool m_predicate_isSet;
    bool m_predicate_isValid;

    OAICreateTriggerRequest_EventBatchingCondition m_event_batching_condition;
    bool m_event_batching_condition_isSet;
    bool m_event_batching_condition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrigger)

#endif // OAITrigger_H
