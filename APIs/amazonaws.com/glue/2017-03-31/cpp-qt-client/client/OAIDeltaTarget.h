/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeltaTarget.h
 *
 * Specifies a Delta data store to crawl one or more Delta tables.
 */

#ifndef OAIDeltaTarget_H
#define OAIDeltaTarget_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeltaTarget : public OAIObject {
public:
    OAIDeltaTarget();
    OAIDeltaTarget(QString json);
    ~OAIDeltaTarget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getDeltaTables() const;
    void setDeltaTables(const QList &delta_tables);
    bool is_delta_tables_Set() const;
    bool is_delta_tables_Valid() const;

    QString getConnectionName() const;
    void setConnectionName(const QString &connection_name);
    bool is_connection_name_Set() const;
    bool is_connection_name_Valid() const;

    bool getWriteManifest() const;
    void setWriteManifest(const bool &write_manifest);
    bool is_write_manifest_Set() const;
    bool is_write_manifest_Valid() const;

    bool getCreateNativeDeltaTable() const;
    void setCreateNativeDeltaTable(const bool &create_native_delta_table);
    bool is_create_native_delta_table_Set() const;
    bool is_create_native_delta_table_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_delta_tables;
    bool m_delta_tables_isSet;
    bool m_delta_tables_isValid;

    QString m_connection_name;
    bool m_connection_name_isSet;
    bool m_connection_name_isValid;

    bool m_write_manifest;
    bool m_write_manifest_isSet;
    bool m_write_manifest_isValid;

    bool m_create_native_delta_table;
    bool m_create_native_delta_table_isSet;
    bool m_create_native_delta_table_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeltaTarget)

#endif // OAIDeltaTarget_H
