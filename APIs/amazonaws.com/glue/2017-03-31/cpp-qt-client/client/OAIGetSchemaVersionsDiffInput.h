/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSchemaVersionsDiffInput.h
 *
 * 
 */

#ifndef OAIGetSchemaVersionsDiffInput_H
#define OAIGetSchemaVersionsDiffInput_H

#include <QJsonObject>

#include "OAIGetSchemaByDefinitionInput_SchemaId.h"
#include "OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber.h"
#include "OAIGetSchemaVersionsDiffInput_SecondSchemaVersionNumber.h"
#include "OAISchemaDiffType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetSchemaByDefinitionInput_SchemaId;
class OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber;
class OAIGetSchemaVersionsDiffInput_SecondSchemaVersionNumber;

class OAIGetSchemaVersionsDiffInput : public OAIObject {
public:
    OAIGetSchemaVersionsDiffInput();
    OAIGetSchemaVersionsDiffInput(QString json);
    ~OAIGetSchemaVersionsDiffInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetSchemaByDefinitionInput_SchemaId getSchemaId() const;
    void setSchemaId(const OAIGetSchemaByDefinitionInput_SchemaId &schema_id);
    bool is_schema_id_Set() const;
    bool is_schema_id_Valid() const;

    OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber getFirstSchemaVersionNumber() const;
    void setFirstSchemaVersionNumber(const OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber &first_schema_version_number);
    bool is_first_schema_version_number_Set() const;
    bool is_first_schema_version_number_Valid() const;

    OAIGetSchemaVersionsDiffInput_SecondSchemaVersionNumber getSecondSchemaVersionNumber() const;
    void setSecondSchemaVersionNumber(const OAIGetSchemaVersionsDiffInput_SecondSchemaVersionNumber &second_schema_version_number);
    bool is_second_schema_version_number_Set() const;
    bool is_second_schema_version_number_Valid() const;

    OAISchemaDiffType getSchemaDiffType() const;
    void setSchemaDiffType(const OAISchemaDiffType &schema_diff_type);
    bool is_schema_diff_type_Set() const;
    bool is_schema_diff_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetSchemaByDefinitionInput_SchemaId m_schema_id;
    bool m_schema_id_isSet;
    bool m_schema_id_isValid;

    OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber m_first_schema_version_number;
    bool m_first_schema_version_number_isSet;
    bool m_first_schema_version_number_isValid;

    OAIGetSchemaVersionsDiffInput_SecondSchemaVersionNumber m_second_schema_version_number;
    bool m_second_schema_version_number_isSet;
    bool m_second_schema_version_number_isValid;

    OAISchemaDiffType m_schema_diff_type;
    bool m_schema_diff_type_isSet;
    bool m_schema_diff_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSchemaVersionsDiffInput)

#endif // OAIGetSchemaVersionsDiffInput_H
