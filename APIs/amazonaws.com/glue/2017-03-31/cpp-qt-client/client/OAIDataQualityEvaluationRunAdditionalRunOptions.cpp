/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataQualityEvaluationRunAdditionalRunOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataQualityEvaluationRunAdditionalRunOptions::OAIDataQualityEvaluationRunAdditionalRunOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataQualityEvaluationRunAdditionalRunOptions::OAIDataQualityEvaluationRunAdditionalRunOptions() {
    this->initializeModel();
}

OAIDataQualityEvaluationRunAdditionalRunOptions::~OAIDataQualityEvaluationRunAdditionalRunOptions() {}

void OAIDataQualityEvaluationRunAdditionalRunOptions::initializeModel() {

    m_cloud_watch_metrics_enabled_isSet = false;
    m_cloud_watch_metrics_enabled_isValid = false;

    m_results_s3_prefix_isSet = false;
    m_results_s3_prefix_isValid = false;
}

void OAIDataQualityEvaluationRunAdditionalRunOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataQualityEvaluationRunAdditionalRunOptions::fromJsonObject(QJsonObject json) {

    m_cloud_watch_metrics_enabled_isValid = ::OpenAPI::fromJsonValue(m_cloud_watch_metrics_enabled, json[QString("CloudWatchMetricsEnabled")]);
    m_cloud_watch_metrics_enabled_isSet = !json[QString("CloudWatchMetricsEnabled")].isNull() && m_cloud_watch_metrics_enabled_isValid;

    m_results_s3_prefix_isValid = ::OpenAPI::fromJsonValue(m_results_s3_prefix, json[QString("ResultsS3Prefix")]);
    m_results_s3_prefix_isSet = !json[QString("ResultsS3Prefix")].isNull() && m_results_s3_prefix_isValid;
}

QString OAIDataQualityEvaluationRunAdditionalRunOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataQualityEvaluationRunAdditionalRunOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_watch_metrics_enabled_isSet) {
        obj.insert(QString("CloudWatchMetricsEnabled"), ::OpenAPI::toJsonValue(m_cloud_watch_metrics_enabled));
    }
    if (m_results_s3_prefix_isSet) {
        obj.insert(QString("ResultsS3Prefix"), ::OpenAPI::toJsonValue(m_results_s3_prefix));
    }
    return obj;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::getCloudWatchMetricsEnabled() const {
    return m_cloud_watch_metrics_enabled;
}
void OAIDataQualityEvaluationRunAdditionalRunOptions::setCloudWatchMetricsEnabled(const bool &cloud_watch_metrics_enabled) {
    m_cloud_watch_metrics_enabled = cloud_watch_metrics_enabled;
    m_cloud_watch_metrics_enabled_isSet = true;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::is_cloud_watch_metrics_enabled_Set() const{
    return m_cloud_watch_metrics_enabled_isSet;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::is_cloud_watch_metrics_enabled_Valid() const{
    return m_cloud_watch_metrics_enabled_isValid;
}

QString OAIDataQualityEvaluationRunAdditionalRunOptions::getResultsS3Prefix() const {
    return m_results_s3_prefix;
}
void OAIDataQualityEvaluationRunAdditionalRunOptions::setResultsS3Prefix(const QString &results_s3_prefix) {
    m_results_s3_prefix = results_s3_prefix;
    m_results_s3_prefix_isSet = true;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::is_results_s3_prefix_Set() const{
    return m_results_s3_prefix_isSet;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::is_results_s3_prefix_Valid() const{
    return m_results_s3_prefix_isValid;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_watch_metrics_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results_s3_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataQualityEvaluationRunAdditionalRunOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
