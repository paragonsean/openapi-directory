/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetBlueprintsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetBlueprintsRequest::OAIBatchGetBlueprintsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetBlueprintsRequest::OAIBatchGetBlueprintsRequest() {
    this->initializeModel();
}

OAIBatchGetBlueprintsRequest::~OAIBatchGetBlueprintsRequest() {}

void OAIBatchGetBlueprintsRequest::initializeModel() {

    m_names_isSet = false;
    m_names_isValid = false;

    m_include_blueprint_isSet = false;
    m_include_blueprint_isValid = false;

    m_include_parameter_spec_isSet = false;
    m_include_parameter_spec_isValid = false;
}

void OAIBatchGetBlueprintsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetBlueprintsRequest::fromJsonObject(QJsonObject json) {

    m_names_isValid = ::OpenAPI::fromJsonValue(m_names, json[QString("Names")]);
    m_names_isSet = !json[QString("Names")].isNull() && m_names_isValid;

    m_include_blueprint_isValid = ::OpenAPI::fromJsonValue(m_include_blueprint, json[QString("IncludeBlueprint")]);
    m_include_blueprint_isSet = !json[QString("IncludeBlueprint")].isNull() && m_include_blueprint_isValid;

    m_include_parameter_spec_isValid = ::OpenAPI::fromJsonValue(m_include_parameter_spec, json[QString("IncludeParameterSpec")]);
    m_include_parameter_spec_isSet = !json[QString("IncludeParameterSpec")].isNull() && m_include_parameter_spec_isValid;
}

QString OAIBatchGetBlueprintsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetBlueprintsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_names.isSet()) {
        obj.insert(QString("Names"), ::OpenAPI::toJsonValue(m_names));
    }
    if (m_include_blueprint_isSet) {
        obj.insert(QString("IncludeBlueprint"), ::OpenAPI::toJsonValue(m_include_blueprint));
    }
    if (m_include_parameter_spec_isSet) {
        obj.insert(QString("IncludeParameterSpec"), ::OpenAPI::toJsonValue(m_include_parameter_spec));
    }
    return obj;
}

QList OAIBatchGetBlueprintsRequest::getNames() const {
    return m_names;
}
void OAIBatchGetBlueprintsRequest::setNames(const QList &names) {
    m_names = names;
    m_names_isSet = true;
}

bool OAIBatchGetBlueprintsRequest::is_names_Set() const{
    return m_names_isSet;
}

bool OAIBatchGetBlueprintsRequest::is_names_Valid() const{
    return m_names_isValid;
}

bool OAIBatchGetBlueprintsRequest::getIncludeBlueprint() const {
    return m_include_blueprint;
}
void OAIBatchGetBlueprintsRequest::setIncludeBlueprint(const bool &include_blueprint) {
    m_include_blueprint = include_blueprint;
    m_include_blueprint_isSet = true;
}

bool OAIBatchGetBlueprintsRequest::is_include_blueprint_Set() const{
    return m_include_blueprint_isSet;
}

bool OAIBatchGetBlueprintsRequest::is_include_blueprint_Valid() const{
    return m_include_blueprint_isValid;
}

bool OAIBatchGetBlueprintsRequest::getIncludeParameterSpec() const {
    return m_include_parameter_spec;
}
void OAIBatchGetBlueprintsRequest::setIncludeParameterSpec(const bool &include_parameter_spec) {
    m_include_parameter_spec = include_parameter_spec;
    m_include_parameter_spec_isSet = true;
}

bool OAIBatchGetBlueprintsRequest::is_include_parameter_spec_Set() const{
    return m_include_parameter_spec_isSet;
}

bool OAIBatchGetBlueprintsRequest::is_include_parameter_spec_Valid() const{
    return m_include_parameter_spec_isValid;
}

bool OAIBatchGetBlueprintsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_names.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_blueprint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_parameter_spec_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetBlueprintsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_names_isValid && true;
}

} // namespace OpenAPI
