/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskRunFilterCriteria.h
 *
 * The criteria that are used to filter the task runs for the machine learning transform.
 */

#ifndef OAITaskRunFilterCriteria_H
#define OAITaskRunFilterCriteria_H

#include <QJsonObject>

#include "OAITaskStatusType.h"
#include "OAITaskType.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskRunFilterCriteria : public OAIObject {
public:
    OAITaskRunFilterCriteria();
    OAITaskRunFilterCriteria(QString json);
    ~OAITaskRunFilterCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITaskType getTaskRunType() const;
    void setTaskRunType(const OAITaskType &task_run_type);
    bool is_task_run_type_Set() const;
    bool is_task_run_type_Valid() const;

    OAITaskStatusType getStatus() const;
    void setStatus(const OAITaskStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getStartedBefore() const;
    void setStartedBefore(const QDateTime &started_before);
    bool is_started_before_Set() const;
    bool is_started_before_Valid() const;

    QDateTime getStartedAfter() const;
    void setStartedAfter(const QDateTime &started_after);
    bool is_started_after_Set() const;
    bool is_started_after_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITaskType m_task_run_type;
    bool m_task_run_type_isSet;
    bool m_task_run_type_isValid;

    OAITaskStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_started_before;
    bool m_started_before_isSet;
    bool m_started_before_isValid;

    QDateTime m_started_after;
    bool m_started_after_isSet;
    bool m_started_after_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskRunFilterCriteria)

#endif // OAITaskRunFilterCriteria_H
