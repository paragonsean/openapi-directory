/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateSessionRequest.h
 *
 * Request to create a new session.
 */

#ifndef OAICreateSessionRequest_H
#define OAICreateSessionRequest_H

#include <QJsonObject>

#include "OAICreateSessionRequest_Command.h"
#include "OAICreateSessionRequest_Connections.h"
#include "OAIWorkerType.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateSessionRequest_Command;
class OAICreateSessionRequest_Connections;

class OAICreateSessionRequest : public OAIObject {
public:
    OAICreateSessionRequest();
    OAICreateSessionRequest(QString json);
    ~OAICreateSessionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAICreateSessionRequest_Command getCommand() const;
    void setCommand(const OAICreateSessionRequest_Command &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    qint32 getIdleTimeout() const;
    void setIdleTimeout(const qint32 &idle_timeout);
    bool is_idle_timeout_Set() const;
    bool is_idle_timeout_Valid() const;

    QMap getDefaultArguments() const;
    void setDefaultArguments(const QMap &default_arguments);
    bool is_default_arguments_Set() const;
    bool is_default_arguments_Valid() const;

    OAICreateSessionRequest_Connections getConnections() const;
    void setConnections(const OAICreateSessionRequest_Connections &connections);
    bool is_connections_Set() const;
    bool is_connections_Valid() const;

    double getMaxCapacity() const;
    void setMaxCapacity(const double &max_capacity);
    bool is_max_capacity_Set() const;
    bool is_max_capacity_Valid() const;

    qint32 getNumberOfWorkers() const;
    void setNumberOfWorkers(const qint32 &number_of_workers);
    bool is_number_of_workers_Set() const;
    bool is_number_of_workers_Valid() const;

    OAIWorkerType getWorkerType() const;
    void setWorkerType(const OAIWorkerType &worker_type);
    bool is_worker_type_Set() const;
    bool is_worker_type_Valid() const;

    QString getSecurityConfiguration() const;
    void setSecurityConfiguration(const QString &security_configuration);
    bool is_security_configuration_Set() const;
    bool is_security_configuration_Valid() const;

    QString getGlueVersion() const;
    void setGlueVersion(const QString &glue_version);
    bool is_glue_version_Set() const;
    bool is_glue_version_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getRequestOrigin() const;
    void setRequestOrigin(const QString &request_origin);
    bool is_request_origin_Set() const;
    bool is_request_origin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAICreateSessionRequest_Command m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    qint32 m_idle_timeout;
    bool m_idle_timeout_isSet;
    bool m_idle_timeout_isValid;

    QMap m_default_arguments;
    bool m_default_arguments_isSet;
    bool m_default_arguments_isValid;

    OAICreateSessionRequest_Connections m_connections;
    bool m_connections_isSet;
    bool m_connections_isValid;

    double m_max_capacity;
    bool m_max_capacity_isSet;
    bool m_max_capacity_isValid;

    qint32 m_number_of_workers;
    bool m_number_of_workers_isSet;
    bool m_number_of_workers_isValid;

    OAIWorkerType m_worker_type;
    bool m_worker_type_isSet;
    bool m_worker_type_isValid;

    QString m_security_configuration;
    bool m_security_configuration_isSet;
    bool m_security_configuration_isValid;

    QString m_glue_version;
    bool m_glue_version_isSet;
    bool m_glue_version_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_request_origin;
    bool m_request_origin_isSet;
    bool m_request_origin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateSessionRequest)

#endif // OAICreateSessionRequest_H
