/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICodeGenConfigurationNode_Aggregate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICodeGenConfigurationNode_Aggregate::OAICodeGenConfigurationNode_Aggregate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICodeGenConfigurationNode_Aggregate::OAICodeGenConfigurationNode_Aggregate() {
    this->initializeModel();
}

OAICodeGenConfigurationNode_Aggregate::~OAICodeGenConfigurationNode_Aggregate() {}

void OAICodeGenConfigurationNode_Aggregate::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_aggs_isSet = false;
    m_aggs_isValid = false;
}

void OAICodeGenConfigurationNode_Aggregate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICodeGenConfigurationNode_Aggregate::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("Inputs")]);
    m_inputs_isSet = !json[QString("Inputs")].isNull() && m_inputs_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("Groups")]);
    m_groups_isSet = !json[QString("Groups")].isNull() && m_groups_isValid;

    m_aggs_isValid = ::OpenAPI::fromJsonValue(m_aggs, json[QString("Aggs")]);
    m_aggs_isSet = !json[QString("Aggs")].isNull() && m_aggs_isValid;
}

QString OAICodeGenConfigurationNode_Aggregate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICodeGenConfigurationNode_Aggregate::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_inputs.isSet()) {
        obj.insert(QString("Inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_groups.isSet()) {
        obj.insert(QString("Groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    if (m_aggs.isSet()) {
        obj.insert(QString("Aggs"), ::OpenAPI::toJsonValue(m_aggs));
    }
    return obj;
}

QString OAICodeGenConfigurationNode_Aggregate::getName() const {
    return m_name;
}
void OAICodeGenConfigurationNode_Aggregate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICodeGenConfigurationNode_Aggregate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICodeGenConfigurationNode_Aggregate::is_name_Valid() const{
    return m_name_isValid;
}

QList OAICodeGenConfigurationNode_Aggregate::getInputs() const {
    return m_inputs;
}
void OAICodeGenConfigurationNode_Aggregate::setInputs(const QList &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAICodeGenConfigurationNode_Aggregate::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAICodeGenConfigurationNode_Aggregate::is_inputs_Valid() const{
    return m_inputs_isValid;
}

QList OAICodeGenConfigurationNode_Aggregate::getGroups() const {
    return m_groups;
}
void OAICodeGenConfigurationNode_Aggregate::setGroups(const QList &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAICodeGenConfigurationNode_Aggregate::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAICodeGenConfigurationNode_Aggregate::is_groups_Valid() const{
    return m_groups_isValid;
}

QList OAICodeGenConfigurationNode_Aggregate::getAggs() const {
    return m_aggs;
}
void OAICodeGenConfigurationNode_Aggregate::setAggs(const QList &aggs) {
    m_aggs = aggs;
    m_aggs_isSet = true;
}

bool OAICodeGenConfigurationNode_Aggregate::is_aggs_Set() const{
    return m_aggs_isSet;
}

bool OAICodeGenConfigurationNode_Aggregate::is_aggs_Valid() const{
    return m_aggs_isValid;
}

bool OAICodeGenConfigurationNode_Aggregate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inputs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aggs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICodeGenConfigurationNode_Aggregate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_inputs_isValid && m_groups_isValid && m_aggs_isValid && true;
}

} // namespace OpenAPI
