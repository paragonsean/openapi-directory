/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirectKinesisSource.h
 *
 * Specifies a direct Amazon Kinesis data source.
 */

#ifndef OAIDirectKinesisSource_H
#define OAIDirectKinesisSource_H

#include <QJsonObject>

#include "OAICatalogKinesisSource_DataPreviewOptions.h"
#include "OAICatalogKinesisSource_StreamingOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICatalogKinesisSource_StreamingOptions;
class OAICatalogKinesisSource_DataPreviewOptions;

class OAIDirectKinesisSource : public OAIObject {
public:
    OAIDirectKinesisSource();
    OAIDirectKinesisSource(QString json);
    ~OAIDirectKinesisSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getWindowSize() const;
    void setWindowSize(const qint32 &window_size);
    bool is_window_size_Set() const;
    bool is_window_size_Valid() const;

    bool getDetectSchema() const;
    void setDetectSchema(const bool &detect_schema);
    bool is_detect_schema_Set() const;
    bool is_detect_schema_Valid() const;

    OAICatalogKinesisSource_StreamingOptions getStreamingOptions() const;
    void setStreamingOptions(const OAICatalogKinesisSource_StreamingOptions &streaming_options);
    bool is_streaming_options_Set() const;
    bool is_streaming_options_Valid() const;

    OAICatalogKinesisSource_DataPreviewOptions getDataPreviewOptions() const;
    void setDataPreviewOptions(const OAICatalogKinesisSource_DataPreviewOptions &data_preview_options);
    bool is_data_preview_options_Set() const;
    bool is_data_preview_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_window_size;
    bool m_window_size_isSet;
    bool m_window_size_isValid;

    bool m_detect_schema;
    bool m_detect_schema_isSet;
    bool m_detect_schema_isValid;

    OAICatalogKinesisSource_StreamingOptions m_streaming_options;
    bool m_streaming_options_isSet;
    bool m_streaming_options_isValid;

    OAICatalogKinesisSource_DataPreviewOptions m_data_preview_options;
    bool m_data_preview_options_isSet;
    bool m_data_preview_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirectKinesisSource)

#endif // OAIDirectKinesisSource_H
