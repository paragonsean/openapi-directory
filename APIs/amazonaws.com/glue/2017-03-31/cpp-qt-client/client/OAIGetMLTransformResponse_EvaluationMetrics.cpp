/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMLTransformResponse_EvaluationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMLTransformResponse_EvaluationMetrics::OAIGetMLTransformResponse_EvaluationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMLTransformResponse_EvaluationMetrics::OAIGetMLTransformResponse_EvaluationMetrics() {
    this->initializeModel();
}

OAIGetMLTransformResponse_EvaluationMetrics::~OAIGetMLTransformResponse_EvaluationMetrics() {}

void OAIGetMLTransformResponse_EvaluationMetrics::initializeModel() {

    m_transform_type_isSet = false;
    m_transform_type_isValid = false;

    m_find_matches_metrics_isSet = false;
    m_find_matches_metrics_isValid = false;
}

void OAIGetMLTransformResponse_EvaluationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMLTransformResponse_EvaluationMetrics::fromJsonObject(QJsonObject json) {

    m_transform_type_isValid = ::OpenAPI::fromJsonValue(m_transform_type, json[QString("TransformType")]);
    m_transform_type_isSet = !json[QString("TransformType")].isNull() && m_transform_type_isValid;

    m_find_matches_metrics_isValid = ::OpenAPI::fromJsonValue(m_find_matches_metrics, json[QString("FindMatchesMetrics")]);
    m_find_matches_metrics_isSet = !json[QString("FindMatchesMetrics")].isNull() && m_find_matches_metrics_isValid;
}

QString OAIGetMLTransformResponse_EvaluationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMLTransformResponse_EvaluationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_transform_type.isSet()) {
        obj.insert(QString("TransformType"), ::OpenAPI::toJsonValue(m_transform_type));
    }
    if (m_find_matches_metrics.isSet()) {
        obj.insert(QString("FindMatchesMetrics"), ::OpenAPI::toJsonValue(m_find_matches_metrics));
    }
    return obj;
}

OAITransformType OAIGetMLTransformResponse_EvaluationMetrics::getTransformType() const {
    return m_transform_type;
}
void OAIGetMLTransformResponse_EvaluationMetrics::setTransformType(const OAITransformType &transform_type) {
    m_transform_type = transform_type;
    m_transform_type_isSet = true;
}

bool OAIGetMLTransformResponse_EvaluationMetrics::is_transform_type_Set() const{
    return m_transform_type_isSet;
}

bool OAIGetMLTransformResponse_EvaluationMetrics::is_transform_type_Valid() const{
    return m_transform_type_isValid;
}

OAIEvaluationMetrics_FindMatchesMetrics OAIGetMLTransformResponse_EvaluationMetrics::getFindMatchesMetrics() const {
    return m_find_matches_metrics;
}
void OAIGetMLTransformResponse_EvaluationMetrics::setFindMatchesMetrics(const OAIEvaluationMetrics_FindMatchesMetrics &find_matches_metrics) {
    m_find_matches_metrics = find_matches_metrics;
    m_find_matches_metrics_isSet = true;
}

bool OAIGetMLTransformResponse_EvaluationMetrics::is_find_matches_metrics_Set() const{
    return m_find_matches_metrics_isSet;
}

bool OAIGetMLTransformResponse_EvaluationMetrics::is_find_matches_metrics_Valid() const{
    return m_find_matches_metrics_isValid;
}

bool OAIGetMLTransformResponse_EvaluationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transform_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_find_matches_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMLTransformResponse_EvaluationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_transform_type_isValid && true;
}

} // namespace OpenAPI
