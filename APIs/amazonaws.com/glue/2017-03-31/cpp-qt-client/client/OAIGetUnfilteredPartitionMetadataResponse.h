/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetUnfilteredPartitionMetadataResponse.h
 *
 * 
 */

#ifndef OAIGetUnfilteredPartitionMetadataResponse_H
#define OAIGetUnfilteredPartitionMetadataResponse_H

#include <QJsonObject>

#include "OAIGetUnfilteredPartitionMetadataResponse_Partition.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetUnfilteredPartitionMetadataResponse_Partition;

class OAIGetUnfilteredPartitionMetadataResponse : public OAIObject {
public:
    OAIGetUnfilteredPartitionMetadataResponse();
    OAIGetUnfilteredPartitionMetadataResponse(QString json);
    ~OAIGetUnfilteredPartitionMetadataResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetUnfilteredPartitionMetadataResponse_Partition getPartition() const;
    void setPartition(const OAIGetUnfilteredPartitionMetadataResponse_Partition &partition);
    bool is_partition_Set() const;
    bool is_partition_Valid() const;

    QList getAuthorizedColumns() const;
    void setAuthorizedColumns(const QList &authorized_columns);
    bool is_authorized_columns_Set() const;
    bool is_authorized_columns_Valid() const;

    bool getIsRegisteredWithLakeFormation() const;
    void setIsRegisteredWithLakeFormation(const bool &is_registered_with_lake_formation);
    bool is_is_registered_with_lake_formation_Set() const;
    bool is_is_registered_with_lake_formation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetUnfilteredPartitionMetadataResponse_Partition m_partition;
    bool m_partition_isSet;
    bool m_partition_isValid;

    QList m_authorized_columns;
    bool m_authorized_columns_isSet;
    bool m_authorized_columns_isValid;

    bool m_is_registered_with_lake_formation;
    bool m_is_registered_with_lake_formation_isSet;
    bool m_is_registered_with_lake_formation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetUnfilteredPartitionMetadataResponse)

#endif // OAIGetUnfilteredPartitionMetadataResponse_H
