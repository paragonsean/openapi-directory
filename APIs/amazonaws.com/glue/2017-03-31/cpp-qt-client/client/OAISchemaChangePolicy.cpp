/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchemaChangePolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchemaChangePolicy::OAISchemaChangePolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchemaChangePolicy::OAISchemaChangePolicy() {
    this->initializeModel();
}

OAISchemaChangePolicy::~OAISchemaChangePolicy() {}

void OAISchemaChangePolicy::initializeModel() {

    m_update_behavior_isSet = false;
    m_update_behavior_isValid = false;

    m_delete_behavior_isSet = false;
    m_delete_behavior_isValid = false;
}

void OAISchemaChangePolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchemaChangePolicy::fromJsonObject(QJsonObject json) {

    m_update_behavior_isValid = ::OpenAPI::fromJsonValue(m_update_behavior, json[QString("UpdateBehavior")]);
    m_update_behavior_isSet = !json[QString("UpdateBehavior")].isNull() && m_update_behavior_isValid;

    m_delete_behavior_isValid = ::OpenAPI::fromJsonValue(m_delete_behavior, json[QString("DeleteBehavior")]);
    m_delete_behavior_isSet = !json[QString("DeleteBehavior")].isNull() && m_delete_behavior_isValid;
}

QString OAISchemaChangePolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchemaChangePolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_update_behavior.isSet()) {
        obj.insert(QString("UpdateBehavior"), ::OpenAPI::toJsonValue(m_update_behavior));
    }
    if (m_delete_behavior.isSet()) {
        obj.insert(QString("DeleteBehavior"), ::OpenAPI::toJsonValue(m_delete_behavior));
    }
    return obj;
}

OAIUpdateBehavior OAISchemaChangePolicy::getUpdateBehavior() const {
    return m_update_behavior;
}
void OAISchemaChangePolicy::setUpdateBehavior(const OAIUpdateBehavior &update_behavior) {
    m_update_behavior = update_behavior;
    m_update_behavior_isSet = true;
}

bool OAISchemaChangePolicy::is_update_behavior_Set() const{
    return m_update_behavior_isSet;
}

bool OAISchemaChangePolicy::is_update_behavior_Valid() const{
    return m_update_behavior_isValid;
}

OAIDeleteBehavior OAISchemaChangePolicy::getDeleteBehavior() const {
    return m_delete_behavior;
}
void OAISchemaChangePolicy::setDeleteBehavior(const OAIDeleteBehavior &delete_behavior) {
    m_delete_behavior = delete_behavior;
    m_delete_behavior_isSet = true;
}

bool OAISchemaChangePolicy::is_delete_behavior_Set() const{
    return m_delete_behavior_isSet;
}

bool OAISchemaChangePolicy::is_delete_behavior_Valid() const{
    return m_delete_behavior_isValid;
}

bool OAISchemaChangePolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_update_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delete_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchemaChangePolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
