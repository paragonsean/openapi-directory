/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber() {
    this->initializeModel();
}

OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::~OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber() {}

void OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::initializeModel() {

    m_latest_version_isSet = false;
    m_latest_version_isValid = false;

    m_version_number_isSet = false;
    m_version_number_isValid = false;
}

void OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::fromJsonObject(QJsonObject json) {

    m_latest_version_isValid = ::OpenAPI::fromJsonValue(m_latest_version, json[QString("LatestVersion")]);
    m_latest_version_isSet = !json[QString("LatestVersion")].isNull() && m_latest_version_isValid;

    m_version_number_isValid = ::OpenAPI::fromJsonValue(m_version_number, json[QString("VersionNumber")]);
    m_version_number_isSet = !json[QString("VersionNumber")].isNull() && m_version_number_isValid;
}

QString OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::asJsonObject() const {
    QJsonObject obj;
    if (m_latest_version_isSet) {
        obj.insert(QString("LatestVersion"), ::OpenAPI::toJsonValue(m_latest_version));
    }
    if (m_version_number_isSet) {
        obj.insert(QString("VersionNumber"), ::OpenAPI::toJsonValue(m_version_number));
    }
    return obj;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::getLatestVersion() const {
    return m_latest_version;
}
void OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::setLatestVersion(const bool &latest_version) {
    m_latest_version = latest_version;
    m_latest_version_isSet = true;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::is_latest_version_Set() const{
    return m_latest_version_isSet;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::is_latest_version_Valid() const{
    return m_latest_version_isValid;
}

qint32 OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::getVersionNumber() const {
    return m_version_number;
}
void OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::setVersionNumber(const qint32 &version_number) {
    m_version_number = version_number;
    m_version_number_isSet = true;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::is_version_number_Set() const{
    return m_version_number_isSet;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::is_version_number_Valid() const{
    return m_version_number_isValid;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_latest_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSchemaVersionsDiffInput_FirstSchemaVersionNumber::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
