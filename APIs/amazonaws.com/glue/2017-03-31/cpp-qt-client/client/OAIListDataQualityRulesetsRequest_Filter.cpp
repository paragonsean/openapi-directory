/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDataQualityRulesetsRequest_Filter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDataQualityRulesetsRequest_Filter::OAIListDataQualityRulesetsRequest_Filter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDataQualityRulesetsRequest_Filter::OAIListDataQualityRulesetsRequest_Filter() {
    this->initializeModel();
}

OAIListDataQualityRulesetsRequest_Filter::~OAIListDataQualityRulesetsRequest_Filter() {}

void OAIListDataQualityRulesetsRequest_Filter::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_created_before_isSet = false;
    m_created_before_isValid = false;

    m_created_after_isSet = false;
    m_created_after_isValid = false;

    m_last_modified_before_isSet = false;
    m_last_modified_before_isValid = false;

    m_last_modified_after_isSet = false;
    m_last_modified_after_isValid = false;

    m_target_table_isSet = false;
    m_target_table_isValid = false;
}

void OAIListDataQualityRulesetsRequest_Filter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDataQualityRulesetsRequest_Filter::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_created_before_isValid = ::OpenAPI::fromJsonValue(m_created_before, json[QString("CreatedBefore")]);
    m_created_before_isSet = !json[QString("CreatedBefore")].isNull() && m_created_before_isValid;

    m_created_after_isValid = ::OpenAPI::fromJsonValue(m_created_after, json[QString("CreatedAfter")]);
    m_created_after_isSet = !json[QString("CreatedAfter")].isNull() && m_created_after_isValid;

    m_last_modified_before_isValid = ::OpenAPI::fromJsonValue(m_last_modified_before, json[QString("LastModifiedBefore")]);
    m_last_modified_before_isSet = !json[QString("LastModifiedBefore")].isNull() && m_last_modified_before_isValid;

    m_last_modified_after_isValid = ::OpenAPI::fromJsonValue(m_last_modified_after, json[QString("LastModifiedAfter")]);
    m_last_modified_after_isSet = !json[QString("LastModifiedAfter")].isNull() && m_last_modified_after_isValid;

    m_target_table_isValid = ::OpenAPI::fromJsonValue(m_target_table, json[QString("TargetTable")]);
    m_target_table_isSet = !json[QString("TargetTable")].isNull() && m_target_table_isValid;
}

QString OAIListDataQualityRulesetsRequest_Filter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDataQualityRulesetsRequest_Filter::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_created_before_isSet) {
        obj.insert(QString("CreatedBefore"), ::OpenAPI::toJsonValue(m_created_before));
    }
    if (m_created_after_isSet) {
        obj.insert(QString("CreatedAfter"), ::OpenAPI::toJsonValue(m_created_after));
    }
    if (m_last_modified_before_isSet) {
        obj.insert(QString("LastModifiedBefore"), ::OpenAPI::toJsonValue(m_last_modified_before));
    }
    if (m_last_modified_after_isSet) {
        obj.insert(QString("LastModifiedAfter"), ::OpenAPI::toJsonValue(m_last_modified_after));
    }
    if (m_target_table.isSet()) {
        obj.insert(QString("TargetTable"), ::OpenAPI::toJsonValue(m_target_table));
    }
    return obj;
}

QString OAIListDataQualityRulesetsRequest_Filter::getName() const {
    return m_name;
}
void OAIListDataQualityRulesetsRequest_Filter::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_name_Set() const{
    return m_name_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIListDataQualityRulesetsRequest_Filter::getDescription() const {
    return m_description;
}
void OAIListDataQualityRulesetsRequest_Filter::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_description_Set() const{
    return m_description_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIListDataQualityRulesetsRequest_Filter::getCreatedBefore() const {
    return m_created_before;
}
void OAIListDataQualityRulesetsRequest_Filter::setCreatedBefore(const QDateTime &created_before) {
    m_created_before = created_before;
    m_created_before_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_created_before_Set() const{
    return m_created_before_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_created_before_Valid() const{
    return m_created_before_isValid;
}

QDateTime OAIListDataQualityRulesetsRequest_Filter::getCreatedAfter() const {
    return m_created_after;
}
void OAIListDataQualityRulesetsRequest_Filter::setCreatedAfter(const QDateTime &created_after) {
    m_created_after = created_after;
    m_created_after_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_created_after_Set() const{
    return m_created_after_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_created_after_Valid() const{
    return m_created_after_isValid;
}

QDateTime OAIListDataQualityRulesetsRequest_Filter::getLastModifiedBefore() const {
    return m_last_modified_before;
}
void OAIListDataQualityRulesetsRequest_Filter::setLastModifiedBefore(const QDateTime &last_modified_before) {
    m_last_modified_before = last_modified_before;
    m_last_modified_before_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_last_modified_before_Set() const{
    return m_last_modified_before_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_last_modified_before_Valid() const{
    return m_last_modified_before_isValid;
}

QDateTime OAIListDataQualityRulesetsRequest_Filter::getLastModifiedAfter() const {
    return m_last_modified_after;
}
void OAIListDataQualityRulesetsRequest_Filter::setLastModifiedAfter(const QDateTime &last_modified_after) {
    m_last_modified_after = last_modified_after;
    m_last_modified_after_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_last_modified_after_Set() const{
    return m_last_modified_after_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_last_modified_after_Valid() const{
    return m_last_modified_after_isValid;
}

OAIGetDataQualityRulesetResponse_TargetTable OAIListDataQualityRulesetsRequest_Filter::getTargetTable() const {
    return m_target_table;
}
void OAIListDataQualityRulesetsRequest_Filter::setTargetTable(const OAIGetDataQualityRulesetResponse_TargetTable &target_table) {
    m_target_table = target_table;
    m_target_table_isSet = true;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_target_table_Set() const{
    return m_target_table_isSet;
}

bool OAIListDataQualityRulesetsRequest_Filter::is_target_table_Valid() const{
    return m_target_table_isValid;
}

bool OAIListDataQualityRulesetsRequest_Filter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_table.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDataQualityRulesetsRequest_Filter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
