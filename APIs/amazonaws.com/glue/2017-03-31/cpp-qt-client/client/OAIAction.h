/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAction.h
 *
 * Defines an action to be initiated by a trigger.
 */

#ifndef OAIAction_H
#define OAIAction_H

#include <QJsonObject>

#include "OAIStartJobRunRequest_NotificationProperty.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartJobRunRequest_NotificationProperty;

class OAIAction : public OAIObject {
public:
    OAIAction();
    OAIAction(QString json);
    ~OAIAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobName() const;
    void setJobName(const QString &job_name);
    bool is_job_name_Set() const;
    bool is_job_name_Valid() const;

    QMap getArguments() const;
    void setArguments(const QMap &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QString getSecurityConfiguration() const;
    void setSecurityConfiguration(const QString &security_configuration);
    bool is_security_configuration_Set() const;
    bool is_security_configuration_Valid() const;

    OAIStartJobRunRequest_NotificationProperty getNotificationProperty() const;
    void setNotificationProperty(const OAIStartJobRunRequest_NotificationProperty &notification_property);
    bool is_notification_property_Set() const;
    bool is_notification_property_Valid() const;

    QString getCrawlerName() const;
    void setCrawlerName(const QString &crawler_name);
    bool is_crawler_name_Set() const;
    bool is_crawler_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_name;
    bool m_job_name_isSet;
    bool m_job_name_isValid;

    QMap m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QString m_security_configuration;
    bool m_security_configuration_isSet;
    bool m_security_configuration_isValid;

    OAIStartJobRunRequest_NotificationProperty m_notification_property;
    bool m_notification_property_isSet;
    bool m_notification_property_isValid;

    QString m_crawler_name;
    bool m_crawler_name_isSet;
    bool m_crawler_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAction)

#endif // OAIAction_H
