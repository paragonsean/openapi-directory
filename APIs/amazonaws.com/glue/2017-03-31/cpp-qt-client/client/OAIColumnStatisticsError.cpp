/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnStatisticsError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnStatisticsError::OAIColumnStatisticsError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnStatisticsError::OAIColumnStatisticsError() {
    this->initializeModel();
}

OAIColumnStatisticsError::~OAIColumnStatisticsError() {}

void OAIColumnStatisticsError::initializeModel() {

    m_column_statistics_isSet = false;
    m_column_statistics_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;
}

void OAIColumnStatisticsError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumnStatisticsError::fromJsonObject(QJsonObject json) {

    m_column_statistics_isValid = ::OpenAPI::fromJsonValue(m_column_statistics, json[QString("ColumnStatistics")]);
    m_column_statistics_isSet = !json[QString("ColumnStatistics")].isNull() && m_column_statistics_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("Error")]);
    m_error_isSet = !json[QString("Error")].isNull() && m_error_isValid;
}

QString OAIColumnStatisticsError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumnStatisticsError::asJsonObject() const {
    QJsonObject obj;
    if (m_column_statistics.isSet()) {
        obj.insert(QString("ColumnStatistics"), ::OpenAPI::toJsonValue(m_column_statistics));
    }
    if (m_error.isSet()) {
        obj.insert(QString("Error"), ::OpenAPI::toJsonValue(m_error));
    }
    return obj;
}

OAIColumnStatisticsError_ColumnStatistics OAIColumnStatisticsError::getColumnStatistics() const {
    return m_column_statistics;
}
void OAIColumnStatisticsError::setColumnStatistics(const OAIColumnStatisticsError_ColumnStatistics &column_statistics) {
    m_column_statistics = column_statistics;
    m_column_statistics_isSet = true;
}

bool OAIColumnStatisticsError::is_column_statistics_Set() const{
    return m_column_statistics_isSet;
}

bool OAIColumnStatisticsError::is_column_statistics_Valid() const{
    return m_column_statistics_isValid;
}

OAIColumnError_Error OAIColumnStatisticsError::getError() const {
    return m_error;
}
void OAIColumnStatisticsError::setError(const OAIColumnError_Error &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIColumnStatisticsError::is_error_Set() const{
    return m_error_isSet;
}

bool OAIColumnStatisticsError::is_error_Valid() const{
    return m_error_isValid;
}

bool OAIColumnStatisticsError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_statistics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumnStatisticsError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
