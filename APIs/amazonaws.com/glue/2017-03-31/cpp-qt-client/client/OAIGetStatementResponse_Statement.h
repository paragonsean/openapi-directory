/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetStatementResponse_Statement.h
 *
 * 
 */

#ifndef OAIGetStatementResponse_Statement_H
#define OAIGetStatementResponse_Statement_H

#include <QJsonObject>

#include "OAIStatementState.h"
#include "OAIStatement_Output.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatement_Output;

class OAIGetStatementResponse_Statement : public OAIObject {
public:
    OAIGetStatementResponse_Statement();
    OAIGetStatementResponse_Statement(QString json);
    ~OAIGetStatementResponse_Statement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    OAIStatementState getState() const;
    void setState(const OAIStatementState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIStatement_Output getOutput() const;
    void setOutput(const OAIStatement_Output &output);
    bool is_output_Set() const;
    bool is_output_Valid() const;

    double getProgress() const;
    void setProgress(const double &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    qint32 getStartedOn() const;
    void setStartedOn(const qint32 &started_on);
    bool is_started_on_Set() const;
    bool is_started_on_Valid() const;

    qint32 getCompletedOn() const;
    void setCompletedOn(const qint32 &completed_on);
    bool is_completed_on_Set() const;
    bool is_completed_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    OAIStatementState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIStatement_Output m_output;
    bool m_output_isSet;
    bool m_output_isValid;

    double m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;

    qint32 m_started_on;
    bool m_started_on_isSet;
    bool m_started_on_isValid;

    qint32 m_completed_on;
    bool m_completed_on_isSet;
    bool m_completed_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetStatementResponse_Statement)

#endif // OAIGetStatementResponse_Statement_H
