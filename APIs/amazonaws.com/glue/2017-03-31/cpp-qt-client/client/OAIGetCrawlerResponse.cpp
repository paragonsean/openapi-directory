/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetCrawlerResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetCrawlerResponse::OAIGetCrawlerResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetCrawlerResponse::OAIGetCrawlerResponse() {
    this->initializeModel();
}

OAIGetCrawlerResponse::~OAIGetCrawlerResponse() {}

void OAIGetCrawlerResponse::initializeModel() {

    m_crawler_isSet = false;
    m_crawler_isValid = false;
}

void OAIGetCrawlerResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetCrawlerResponse::fromJsonObject(QJsonObject json) {

    m_crawler_isValid = ::OpenAPI::fromJsonValue(m_crawler, json[QString("Crawler")]);
    m_crawler_isSet = !json[QString("Crawler")].isNull() && m_crawler_isValid;
}

QString OAIGetCrawlerResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetCrawlerResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_crawler.isSet()) {
        obj.insert(QString("Crawler"), ::OpenAPI::toJsonValue(m_crawler));
    }
    return obj;
}

OAIGetCrawlerResponse_Crawler OAIGetCrawlerResponse::getCrawler() const {
    return m_crawler;
}
void OAIGetCrawlerResponse::setCrawler(const OAIGetCrawlerResponse_Crawler &crawler) {
    m_crawler = crawler;
    m_crawler_isSet = true;
}

bool OAIGetCrawlerResponse::is_crawler_Set() const{
    return m_crawler_isSet;
}

bool OAIGetCrawlerResponse::is_crawler_Valid() const{
    return m_crawler_isValid;
}

bool OAIGetCrawlerResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crawler.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetCrawlerResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
