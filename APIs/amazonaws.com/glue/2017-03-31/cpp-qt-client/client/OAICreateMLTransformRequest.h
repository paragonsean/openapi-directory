/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateMLTransformRequest.h
 *
 * 
 */

#ifndef OAICreateMLTransformRequest_H
#define OAICreateMLTransformRequest_H

#include <QJsonObject>

#include "OAICreateMLTransformRequest_Parameters.h"
#include "OAICreateMLTransformRequest_TransformEncryption.h"
#include "OAIWorkerType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateMLTransformRequest_Parameters;
class OAICreateMLTransformRequest_TransformEncryption;

class OAICreateMLTransformRequest : public OAIObject {
public:
    OAICreateMLTransformRequest();
    OAICreateMLTransformRequest(QString json);
    ~OAICreateMLTransformRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getInputRecordTables() const;
    void setInputRecordTables(const QList &input_record_tables);
    bool is_input_record_tables_Set() const;
    bool is_input_record_tables_Valid() const;

    OAICreateMLTransformRequest_Parameters getParameters() const;
    void setParameters(const OAICreateMLTransformRequest_Parameters &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getGlueVersion() const;
    void setGlueVersion(const QString &glue_version);
    bool is_glue_version_Set() const;
    bool is_glue_version_Valid() const;

    double getMaxCapacity() const;
    void setMaxCapacity(const double &max_capacity);
    bool is_max_capacity_Set() const;
    bool is_max_capacity_Valid() const;

    OAIWorkerType getWorkerType() const;
    void setWorkerType(const OAIWorkerType &worker_type);
    bool is_worker_type_Set() const;
    bool is_worker_type_Valid() const;

    qint32 getNumberOfWorkers() const;
    void setNumberOfWorkers(const qint32 &number_of_workers);
    bool is_number_of_workers_Set() const;
    bool is_number_of_workers_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    qint32 getMaxRetries() const;
    void setMaxRetries(const qint32 &max_retries);
    bool is_max_retries_Set() const;
    bool is_max_retries_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreateMLTransformRequest_TransformEncryption getTransformEncryption() const;
    void setTransformEncryption(const OAICreateMLTransformRequest_TransformEncryption &transform_encryption);
    bool is_transform_encryption_Set() const;
    bool is_transform_encryption_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_input_record_tables;
    bool m_input_record_tables_isSet;
    bool m_input_record_tables_isValid;

    OAICreateMLTransformRequest_Parameters m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_glue_version;
    bool m_glue_version_isSet;
    bool m_glue_version_isValid;

    double m_max_capacity;
    bool m_max_capacity_isSet;
    bool m_max_capacity_isValid;

    OAIWorkerType m_worker_type;
    bool m_worker_type_isSet;
    bool m_worker_type_isValid;

    qint32 m_number_of_workers;
    bool m_number_of_workers_isSet;
    bool m_number_of_workers_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    qint32 m_max_retries;
    bool m_max_retries_isSet;
    bool m_max_retries_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreateMLTransformRequest_TransformEncryption m_transform_encryption;
    bool m_transform_encryption_isSet;
    bool m_transform_encryption_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateMLTransformRequest)

#endif // OAICreateMLTransformRequest_H
