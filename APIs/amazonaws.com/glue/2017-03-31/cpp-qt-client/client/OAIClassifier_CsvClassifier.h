/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClassifier_CsvClassifier.h
 *
 * 
 */

#ifndef OAIClassifier_CsvClassifier_H
#define OAIClassifier_CsvClassifier_H

#include <QJsonObject>

#include "OAICsvHeaderOption.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClassifier_CsvClassifier : public OAIObject {
public:
    OAIClassifier_CsvClassifier();
    OAIClassifier_CsvClassifier(QString json);
    ~OAIClassifier_CsvClassifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getDelimiter() const;
    void setDelimiter(const QString &delimiter);
    bool is_delimiter_Set() const;
    bool is_delimiter_Valid() const;

    QString getQuoteSymbol() const;
    void setQuoteSymbol(const QString &quote_symbol);
    bool is_quote_symbol_Set() const;
    bool is_quote_symbol_Valid() const;

    OAICsvHeaderOption getContainsHeader() const;
    void setContainsHeader(const OAICsvHeaderOption &contains_header);
    bool is_contains_header_Set() const;
    bool is_contains_header_Valid() const;

    QList getHeader() const;
    void setHeader(const QList &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    bool getDisableValueTrimming() const;
    void setDisableValueTrimming(const bool &disable_value_trimming);
    bool is_disable_value_trimming_Set() const;
    bool is_disable_value_trimming_Valid() const;

    bool getAllowSingleColumn() const;
    void setAllowSingleColumn(const bool &allow_single_column);
    bool is_allow_single_column_Set() const;
    bool is_allow_single_column_Valid() const;

    bool getCustomDatatypeConfigured() const;
    void setCustomDatatypeConfigured(const bool &custom_datatype_configured);
    bool is_custom_datatype_configured_Set() const;
    bool is_custom_datatype_configured_Valid() const;

    QList getCustomDatatypes() const;
    void setCustomDatatypes(const QList &custom_datatypes);
    bool is_custom_datatypes_Set() const;
    bool is_custom_datatypes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_delimiter;
    bool m_delimiter_isSet;
    bool m_delimiter_isValid;

    QString m_quote_symbol;
    bool m_quote_symbol_isSet;
    bool m_quote_symbol_isValid;

    OAICsvHeaderOption m_contains_header;
    bool m_contains_header_isSet;
    bool m_contains_header_isValid;

    QList m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    bool m_disable_value_trimming;
    bool m_disable_value_trimming_isSet;
    bool m_disable_value_trimming_isValid;

    bool m_allow_single_column;
    bool m_allow_single_column_isSet;
    bool m_allow_single_column_isValid;

    bool m_custom_datatype_configured;
    bool m_custom_datatype_configured_isSet;
    bool m_custom_datatype_configured_isValid;

    QList m_custom_datatypes;
    bool m_custom_datatypes_isSet;
    bool m_custom_datatypes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClassifier_CsvClassifier)

#endif // OAIClassifier_CsvClassifier_H
