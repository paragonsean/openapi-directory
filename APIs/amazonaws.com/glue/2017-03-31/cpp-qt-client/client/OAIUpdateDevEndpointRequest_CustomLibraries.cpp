/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDevEndpointRequest_CustomLibraries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDevEndpointRequest_CustomLibraries::OAIUpdateDevEndpointRequest_CustomLibraries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDevEndpointRequest_CustomLibraries::OAIUpdateDevEndpointRequest_CustomLibraries() {
    this->initializeModel();
}

OAIUpdateDevEndpointRequest_CustomLibraries::~OAIUpdateDevEndpointRequest_CustomLibraries() {}

void OAIUpdateDevEndpointRequest_CustomLibraries::initializeModel() {

    m_extra_python_libs_s3_path_isSet = false;
    m_extra_python_libs_s3_path_isValid = false;

    m_extra_jars_s3_path_isSet = false;
    m_extra_jars_s3_path_isValid = false;
}

void OAIUpdateDevEndpointRequest_CustomLibraries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDevEndpointRequest_CustomLibraries::fromJsonObject(QJsonObject json) {

    m_extra_python_libs_s3_path_isValid = ::OpenAPI::fromJsonValue(m_extra_python_libs_s3_path, json[QString("ExtraPythonLibsS3Path")]);
    m_extra_python_libs_s3_path_isSet = !json[QString("ExtraPythonLibsS3Path")].isNull() && m_extra_python_libs_s3_path_isValid;

    m_extra_jars_s3_path_isValid = ::OpenAPI::fromJsonValue(m_extra_jars_s3_path, json[QString("ExtraJarsS3Path")]);
    m_extra_jars_s3_path_isSet = !json[QString("ExtraJarsS3Path")].isNull() && m_extra_jars_s3_path_isValid;
}

QString OAIUpdateDevEndpointRequest_CustomLibraries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDevEndpointRequest_CustomLibraries::asJsonObject() const {
    QJsonObject obj;
    if (m_extra_python_libs_s3_path_isSet) {
        obj.insert(QString("ExtraPythonLibsS3Path"), ::OpenAPI::toJsonValue(m_extra_python_libs_s3_path));
    }
    if (m_extra_jars_s3_path_isSet) {
        obj.insert(QString("ExtraJarsS3Path"), ::OpenAPI::toJsonValue(m_extra_jars_s3_path));
    }
    return obj;
}

QString OAIUpdateDevEndpointRequest_CustomLibraries::getExtraPythonLibsS3Path() const {
    return m_extra_python_libs_s3_path;
}
void OAIUpdateDevEndpointRequest_CustomLibraries::setExtraPythonLibsS3Path(const QString &extra_python_libs_s3_path) {
    m_extra_python_libs_s3_path = extra_python_libs_s3_path;
    m_extra_python_libs_s3_path_isSet = true;
}

bool OAIUpdateDevEndpointRequest_CustomLibraries::is_extra_python_libs_s3_path_Set() const{
    return m_extra_python_libs_s3_path_isSet;
}

bool OAIUpdateDevEndpointRequest_CustomLibraries::is_extra_python_libs_s3_path_Valid() const{
    return m_extra_python_libs_s3_path_isValid;
}

QString OAIUpdateDevEndpointRequest_CustomLibraries::getExtraJarsS3Path() const {
    return m_extra_jars_s3_path;
}
void OAIUpdateDevEndpointRequest_CustomLibraries::setExtraJarsS3Path(const QString &extra_jars_s3_path) {
    m_extra_jars_s3_path = extra_jars_s3_path;
    m_extra_jars_s3_path_isSet = true;
}

bool OAIUpdateDevEndpointRequest_CustomLibraries::is_extra_jars_s3_path_Set() const{
    return m_extra_jars_s3_path_isSet;
}

bool OAIUpdateDevEndpointRequest_CustomLibraries::is_extra_jars_s3_path_Valid() const{
    return m_extra_jars_s3_path_isValid;
}

bool OAIUpdateDevEndpointRequest_CustomLibraries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_extra_python_libs_s3_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_jars_s3_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDevEndpointRequest_CustomLibraries::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
