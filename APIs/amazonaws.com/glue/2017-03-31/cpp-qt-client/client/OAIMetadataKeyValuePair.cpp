/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetadataKeyValuePair.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetadataKeyValuePair::OAIMetadataKeyValuePair(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetadataKeyValuePair::OAIMetadataKeyValuePair() {
    this->initializeModel();
}

OAIMetadataKeyValuePair::~OAIMetadataKeyValuePair() {}

void OAIMetadataKeyValuePair::initializeModel() {

    m_metadata_key_isSet = false;
    m_metadata_key_isValid = false;

    m_metadata_value_isSet = false;
    m_metadata_value_isValid = false;
}

void OAIMetadataKeyValuePair::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetadataKeyValuePair::fromJsonObject(QJsonObject json) {

    m_metadata_key_isValid = ::OpenAPI::fromJsonValue(m_metadata_key, json[QString("MetadataKey")]);
    m_metadata_key_isSet = !json[QString("MetadataKey")].isNull() && m_metadata_key_isValid;

    m_metadata_value_isValid = ::OpenAPI::fromJsonValue(m_metadata_value, json[QString("MetadataValue")]);
    m_metadata_value_isSet = !json[QString("MetadataValue")].isNull() && m_metadata_value_isValid;
}

QString OAIMetadataKeyValuePair::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetadataKeyValuePair::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_key_isSet) {
        obj.insert(QString("MetadataKey"), ::OpenAPI::toJsonValue(m_metadata_key));
    }
    if (m_metadata_value_isSet) {
        obj.insert(QString("MetadataValue"), ::OpenAPI::toJsonValue(m_metadata_value));
    }
    return obj;
}

QString OAIMetadataKeyValuePair::getMetadataKey() const {
    return m_metadata_key;
}
void OAIMetadataKeyValuePair::setMetadataKey(const QString &metadata_key) {
    m_metadata_key = metadata_key;
    m_metadata_key_isSet = true;
}

bool OAIMetadataKeyValuePair::is_metadata_key_Set() const{
    return m_metadata_key_isSet;
}

bool OAIMetadataKeyValuePair::is_metadata_key_Valid() const{
    return m_metadata_key_isValid;
}

QString OAIMetadataKeyValuePair::getMetadataValue() const {
    return m_metadata_value;
}
void OAIMetadataKeyValuePair::setMetadataValue(const QString &metadata_value) {
    m_metadata_value = metadata_value;
    m_metadata_value_isSet = true;
}

bool OAIMetadataKeyValuePair::is_metadata_value_Set() const{
    return m_metadata_value_isSet;
}

bool OAIMetadataKeyValuePair::is_metadata_value_Valid() const{
    return m_metadata_value_isValid;
}

bool OAIMetadataKeyValuePair::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetadataKeyValuePair::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
