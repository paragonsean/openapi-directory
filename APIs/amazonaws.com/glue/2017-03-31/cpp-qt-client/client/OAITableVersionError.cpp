/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableVersionError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableVersionError::OAITableVersionError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableVersionError::OAITableVersionError() {
    this->initializeModel();
}

OAITableVersionError::~OAITableVersionError() {}

void OAITableVersionError::initializeModel() {

    m_table_name_isSet = false;
    m_table_name_isValid = false;

    m_version_id_isSet = false;
    m_version_id_isValid = false;

    m_error_detail_isSet = false;
    m_error_detail_isValid = false;
}

void OAITableVersionError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableVersionError::fromJsonObject(QJsonObject json) {

    m_table_name_isValid = ::OpenAPI::fromJsonValue(m_table_name, json[QString("TableName")]);
    m_table_name_isSet = !json[QString("TableName")].isNull() && m_table_name_isValid;

    m_version_id_isValid = ::OpenAPI::fromJsonValue(m_version_id, json[QString("VersionId")]);
    m_version_id_isSet = !json[QString("VersionId")].isNull() && m_version_id_isValid;

    m_error_detail_isValid = ::OpenAPI::fromJsonValue(m_error_detail, json[QString("ErrorDetail")]);
    m_error_detail_isSet = !json[QString("ErrorDetail")].isNull() && m_error_detail_isValid;
}

QString OAITableVersionError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableVersionError::asJsonObject() const {
    QJsonObject obj;
    if (m_table_name_isSet) {
        obj.insert(QString("TableName"), ::OpenAPI::toJsonValue(m_table_name));
    }
    if (m_version_id_isSet) {
        obj.insert(QString("VersionId"), ::OpenAPI::toJsonValue(m_version_id));
    }
    if (m_error_detail.isSet()) {
        obj.insert(QString("ErrorDetail"), ::OpenAPI::toJsonValue(m_error_detail));
    }
    return obj;
}

QString OAITableVersionError::getTableName() const {
    return m_table_name;
}
void OAITableVersionError::setTableName(const QString &table_name) {
    m_table_name = table_name;
    m_table_name_isSet = true;
}

bool OAITableVersionError::is_table_name_Set() const{
    return m_table_name_isSet;
}

bool OAITableVersionError::is_table_name_Valid() const{
    return m_table_name_isValid;
}

QString OAITableVersionError::getVersionId() const {
    return m_version_id;
}
void OAITableVersionError::setVersionId(const QString &version_id) {
    m_version_id = version_id;
    m_version_id_isSet = true;
}

bool OAITableVersionError::is_version_id_Set() const{
    return m_version_id_isSet;
}

bool OAITableVersionError::is_version_id_Valid() const{
    return m_version_id_isValid;
}

OAITableError_ErrorDetail OAITableVersionError::getErrorDetail() const {
    return m_error_detail;
}
void OAITableVersionError::setErrorDetail(const OAITableError_ErrorDetail &error_detail) {
    m_error_detail = error_detail;
    m_error_detail_isSet = true;
}

bool OAITableVersionError::is_error_detail_Set() const{
    return m_error_detail_isSet;
}

bool OAITableVersionError::is_error_detail_Valid() const{
    return m_error_detail_isValid;
}

bool OAITableVersionError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_table_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableVersionError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
