/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJDBCConnectorOptions.h
 *
 * Additional connection options for the connector.
 */

#ifndef OAIJDBCConnectorOptions_H
#define OAIJDBCConnectorOptions_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJDBCConnectorOptions : public OAIObject {
public:
    OAIJDBCConnectorOptions();
    OAIJDBCConnectorOptions(QString json);
    ~OAIJDBCConnectorOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilterPredicate() const;
    void setFilterPredicate(const QString &filter_predicate);
    bool is_filter_predicate_Set() const;
    bool is_filter_predicate_Valid() const;

    QString getPartitionColumn() const;
    void setPartitionColumn(const QString &partition_column);
    bool is_partition_column_Set() const;
    bool is_partition_column_Valid() const;

    qint32 getLowerBound() const;
    void setLowerBound(const qint32 &lower_bound);
    bool is_lower_bound_Set() const;
    bool is_lower_bound_Valid() const;

    qint32 getUpperBound() const;
    void setUpperBound(const qint32 &upper_bound);
    bool is_upper_bound_Set() const;
    bool is_upper_bound_Valid() const;

    qint32 getNumPartitions() const;
    void setNumPartitions(const qint32 &num_partitions);
    bool is_num_partitions_Set() const;
    bool is_num_partitions_Valid() const;

    QList getJobBookmarkKeys() const;
    void setJobBookmarkKeys(const QList &job_bookmark_keys);
    bool is_job_bookmark_keys_Set() const;
    bool is_job_bookmark_keys_Valid() const;

    QString getJobBookmarkKeysSortOrder() const;
    void setJobBookmarkKeysSortOrder(const QString &job_bookmark_keys_sort_order);
    bool is_job_bookmark_keys_sort_order_Set() const;
    bool is_job_bookmark_keys_sort_order_Valid() const;

    QMap getDataTypeMapping() const;
    void setDataTypeMapping(const QMap &data_type_mapping);
    bool is_data_type_mapping_Set() const;
    bool is_data_type_mapping_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter_predicate;
    bool m_filter_predicate_isSet;
    bool m_filter_predicate_isValid;

    QString m_partition_column;
    bool m_partition_column_isSet;
    bool m_partition_column_isValid;

    qint32 m_lower_bound;
    bool m_lower_bound_isSet;
    bool m_lower_bound_isValid;

    qint32 m_upper_bound;
    bool m_upper_bound_isSet;
    bool m_upper_bound_isValid;

    qint32 m_num_partitions;
    bool m_num_partitions_isSet;
    bool m_num_partitions_isValid;

    QList m_job_bookmark_keys;
    bool m_job_bookmark_keys_isSet;
    bool m_job_bookmark_keys_isValid;

    QString m_job_bookmark_keys_sort_order;
    bool m_job_bookmark_keys_sort_order_isSet;
    bool m_job_bookmark_keys_sort_order_isValid;

    QMap m_data_type_mapping;
    bool m_data_type_mapping_isSet;
    bool m_data_type_mapping_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJDBCConnectorOptions)

#endif // OAIJDBCConnectorOptions_H
