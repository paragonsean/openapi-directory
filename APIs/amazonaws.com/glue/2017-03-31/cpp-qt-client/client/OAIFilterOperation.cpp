/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFilterOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFilterOperation::OAIFilterOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFilterOperation::OAIFilterOperation() {
    this->initializeModel();
}

OAIFilterOperation::~OAIFilterOperation() {}

void OAIFilterOperation::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFilterOperation::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFilterOperation::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EQ", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::EQ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::LT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::GT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LTE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::LTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GTE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::GTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REGEX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::REGEX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ISNULL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFilterOperation::ISNULL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFilterOperation::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFilterOperation::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFilterOperation::EQ:
            val = "EQ";
            break;
        case eOAIFilterOperation::LT:
            val = "LT";
            break;
        case eOAIFilterOperation::GT:
            val = "GT";
            break;
        case eOAIFilterOperation::LTE:
            val = "LTE";
            break;
        case eOAIFilterOperation::GTE:
            val = "GTE";
            break;
        case eOAIFilterOperation::REGEX:
            val = "REGEX";
            break;
        case eOAIFilterOperation::ISNULL:
            val = "ISNULL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFilterOperation::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFilterOperation::eOAIFilterOperation OAIFilterOperation::getValue() const {
    return m_value;
}

void OAIFilterOperation::setValue(const OAIFilterOperation::eOAIFilterOperation& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFilterOperation::isSet() const {
    
    return m_value_isSet;
}

bool OAIFilterOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
