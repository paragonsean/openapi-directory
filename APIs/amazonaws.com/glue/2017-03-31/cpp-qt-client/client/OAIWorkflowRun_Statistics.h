/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflowRun_Statistics.h
 *
 * 
 */

#ifndef OAIWorkflowRun_Statistics_H
#define OAIWorkflowRun_Statistics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkflowRun_Statistics : public OAIObject {
public:
    OAIWorkflowRun_Statistics();
    OAIWorkflowRun_Statistics(QString json);
    ~OAIWorkflowRun_Statistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotalActions() const;
    void setTotalActions(const qint32 &total_actions);
    bool is_total_actions_Set() const;
    bool is_total_actions_Valid() const;

    qint32 getTimeoutActions() const;
    void setTimeoutActions(const qint32 &timeout_actions);
    bool is_timeout_actions_Set() const;
    bool is_timeout_actions_Valid() const;

    qint32 getFailedActions() const;
    void setFailedActions(const qint32 &failed_actions);
    bool is_failed_actions_Set() const;
    bool is_failed_actions_Valid() const;

    qint32 getStoppedActions() const;
    void setStoppedActions(const qint32 &stopped_actions);
    bool is_stopped_actions_Set() const;
    bool is_stopped_actions_Valid() const;

    qint32 getSucceededActions() const;
    void setSucceededActions(const qint32 &succeeded_actions);
    bool is_succeeded_actions_Set() const;
    bool is_succeeded_actions_Valid() const;

    qint32 getRunningActions() const;
    void setRunningActions(const qint32 &running_actions);
    bool is_running_actions_Set() const;
    bool is_running_actions_Valid() const;

    qint32 getErroredActions() const;
    void setErroredActions(const qint32 &errored_actions);
    bool is_errored_actions_Set() const;
    bool is_errored_actions_Valid() const;

    qint32 getWaitingActions() const;
    void setWaitingActions(const qint32 &waiting_actions);
    bool is_waiting_actions_Set() const;
    bool is_waiting_actions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total_actions;
    bool m_total_actions_isSet;
    bool m_total_actions_isValid;

    qint32 m_timeout_actions;
    bool m_timeout_actions_isSet;
    bool m_timeout_actions_isValid;

    qint32 m_failed_actions;
    bool m_failed_actions_isSet;
    bool m_failed_actions_isValid;

    qint32 m_stopped_actions;
    bool m_stopped_actions_isSet;
    bool m_stopped_actions_isValid;

    qint32 m_succeeded_actions;
    bool m_succeeded_actions_isSet;
    bool m_succeeded_actions_isValid;

    qint32 m_running_actions;
    bool m_running_actions_isSet;
    bool m_running_actions_isValid;

    qint32 m_errored_actions;
    bool m_errored_actions_isSet;
    bool m_errored_actions_isValid;

    qint32 m_waiting_actions;
    bool m_waiting_actions_isSet;
    bool m_waiting_actions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflowRun_Statistics)

#endif // OAIWorkflowRun_Statistics_H
