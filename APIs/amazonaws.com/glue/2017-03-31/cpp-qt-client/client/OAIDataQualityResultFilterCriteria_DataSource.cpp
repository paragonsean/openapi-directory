/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataQualityResultFilterCriteria_DataSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataQualityResultFilterCriteria_DataSource::OAIDataQualityResultFilterCriteria_DataSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataQualityResultFilterCriteria_DataSource::OAIDataQualityResultFilterCriteria_DataSource() {
    this->initializeModel();
}

OAIDataQualityResultFilterCriteria_DataSource::~OAIDataQualityResultFilterCriteria_DataSource() {}

void OAIDataQualityResultFilterCriteria_DataSource::initializeModel() {

    m_glue_table_isSet = false;
    m_glue_table_isValid = false;
}

void OAIDataQualityResultFilterCriteria_DataSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataQualityResultFilterCriteria_DataSource::fromJsonObject(QJsonObject json) {

    m_glue_table_isValid = ::OpenAPI::fromJsonValue(m_glue_table, json[QString("GlueTable")]);
    m_glue_table_isSet = !json[QString("GlueTable")].isNull() && m_glue_table_isValid;
}

QString OAIDataQualityResultFilterCriteria_DataSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataQualityResultFilterCriteria_DataSource::asJsonObject() const {
    QJsonObject obj;
    if (m_glue_table.isSet()) {
        obj.insert(QString("GlueTable"), ::OpenAPI::toJsonValue(m_glue_table));
    }
    return obj;
}

OAIDataSource_GlueTable OAIDataQualityResultFilterCriteria_DataSource::getGlueTable() const {
    return m_glue_table;
}
void OAIDataQualityResultFilterCriteria_DataSource::setGlueTable(const OAIDataSource_GlueTable &glue_table) {
    m_glue_table = glue_table;
    m_glue_table_isSet = true;
}

bool OAIDataQualityResultFilterCriteria_DataSource::is_glue_table_Set() const{
    return m_glue_table_isSet;
}

bool OAIDataQualityResultFilterCriteria_DataSource::is_glue_table_Valid() const{
    return m_glue_table_isValid;
}

bool OAIDataQualityResultFilterCriteria_DataSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_glue_table.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataQualityResultFilterCriteria_DataSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_glue_table_isValid && true;
}

} // namespace OpenAPI
