/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPlanRequest.h
 *
 * 
 */

#ifndef OAIGetPlanRequest_H
#define OAIGetPlanRequest_H

#include <QJsonObject>

#include "OAIGetPlanRequest_Location.h"
#include "OAIGetPlanRequest_Source.h"
#include "OAILanguage.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetPlanRequest_Source;
class OAIGetPlanRequest_Location;

class OAIGetPlanRequest : public OAIObject {
public:
    OAIGetPlanRequest();
    OAIGetPlanRequest(QString json);
    ~OAIGetPlanRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getMapping() const;
    void setMapping(const QList &mapping);
    bool is_mapping_Set() const;
    bool is_mapping_Valid() const;

    OAIGetPlanRequest_Source getSource() const;
    void setSource(const OAIGetPlanRequest_Source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList getSinks() const;
    void setSinks(const QList &sinks);
    bool is_sinks_Set() const;
    bool is_sinks_Valid() const;

    OAIGetPlanRequest_Location getLocation() const;
    void setLocation(const OAIGetPlanRequest_Location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAILanguage getLanguage() const;
    void setLanguage(const OAILanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QMap getAdditionalPlanOptionsMap() const;
    void setAdditionalPlanOptionsMap(const QMap &additional_plan_options_map);
    bool is_additional_plan_options_map_Set() const;
    bool is_additional_plan_options_map_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_mapping;
    bool m_mapping_isSet;
    bool m_mapping_isValid;

    OAIGetPlanRequest_Source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList m_sinks;
    bool m_sinks_isSet;
    bool m_sinks_isValid;

    OAIGetPlanRequest_Location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAILanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QMap m_additional_plan_options_map;
    bool m_additional_plan_options_map_isSet;
    bool m_additional_plan_options_map_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPlanRequest)

#endif // OAIGetPlanRequest_H
