/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataQualityRuleResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataQualityRuleResult::OAIDataQualityRuleResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataQualityRuleResult::OAIDataQualityRuleResult() {
    this->initializeModel();
}

OAIDataQualityRuleResult::~OAIDataQualityRuleResult() {}

void OAIDataQualityRuleResult::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_evaluation_message_isSet = false;
    m_evaluation_message_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_evaluated_metrics_isSet = false;
    m_evaluated_metrics_isValid = false;
}

void OAIDataQualityRuleResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataQualityRuleResult::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_evaluation_message_isValid = ::OpenAPI::fromJsonValue(m_evaluation_message, json[QString("EvaluationMessage")]);
    m_evaluation_message_isSet = !json[QString("EvaluationMessage")].isNull() && m_evaluation_message_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("Result")]);
    m_result_isSet = !json[QString("Result")].isNull() && m_result_isValid;

    m_evaluated_metrics_isValid = ::OpenAPI::fromJsonValue(m_evaluated_metrics, json[QString("EvaluatedMetrics")]);
    m_evaluated_metrics_isSet = !json[QString("EvaluatedMetrics")].isNull() && m_evaluated_metrics_isValid;
}

QString OAIDataQualityRuleResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataQualityRuleResult::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_evaluation_message_isSet) {
        obj.insert(QString("EvaluationMessage"), ::OpenAPI::toJsonValue(m_evaluation_message));
    }
    if (m_result.isSet()) {
        obj.insert(QString("Result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_evaluated_metrics.isSet()) {
        obj.insert(QString("EvaluatedMetrics"), ::OpenAPI::toJsonValue(m_evaluated_metrics));
    }
    return obj;
}

QString OAIDataQualityRuleResult::getName() const {
    return m_name;
}
void OAIDataQualityRuleResult::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDataQualityRuleResult::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDataQualityRuleResult::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDataQualityRuleResult::getDescription() const {
    return m_description;
}
void OAIDataQualityRuleResult::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDataQualityRuleResult::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDataQualityRuleResult::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIDataQualityRuleResult::getEvaluationMessage() const {
    return m_evaluation_message;
}
void OAIDataQualityRuleResult::setEvaluationMessage(const QString &evaluation_message) {
    m_evaluation_message = evaluation_message;
    m_evaluation_message_isSet = true;
}

bool OAIDataQualityRuleResult::is_evaluation_message_Set() const{
    return m_evaluation_message_isSet;
}

bool OAIDataQualityRuleResult::is_evaluation_message_Valid() const{
    return m_evaluation_message_isValid;
}

OAIDataQualityRuleResultStatus OAIDataQualityRuleResult::getResult() const {
    return m_result;
}
void OAIDataQualityRuleResult::setResult(const OAIDataQualityRuleResultStatus &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIDataQualityRuleResult::is_result_Set() const{
    return m_result_isSet;
}

bool OAIDataQualityRuleResult::is_result_Valid() const{
    return m_result_isValid;
}

QMap OAIDataQualityRuleResult::getEvaluatedMetrics() const {
    return m_evaluated_metrics;
}
void OAIDataQualityRuleResult::setEvaluatedMetrics(const QMap &evaluated_metrics) {
    m_evaluated_metrics = evaluated_metrics;
    m_evaluated_metrics_isSet = true;
}

bool OAIDataQualityRuleResult::is_evaluated_metrics_Set() const{
    return m_evaluated_metrics_isSet;
}

bool OAIDataQualityRuleResult::is_evaluated_metrics_Valid() const{
    return m_evaluated_metrics_isValid;
}

bool OAIDataQualityRuleResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluated_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataQualityRuleResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
