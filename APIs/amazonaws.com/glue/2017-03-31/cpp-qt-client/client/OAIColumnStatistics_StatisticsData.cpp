/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColumnStatistics_StatisticsData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColumnStatistics_StatisticsData::OAIColumnStatistics_StatisticsData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColumnStatistics_StatisticsData::OAIColumnStatistics_StatisticsData() {
    this->initializeModel();
}

OAIColumnStatistics_StatisticsData::~OAIColumnStatistics_StatisticsData() {}

void OAIColumnStatistics_StatisticsData::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_boolean_column_statistics_data_isSet = false;
    m_boolean_column_statistics_data_isValid = false;

    m_date_column_statistics_data_isSet = false;
    m_date_column_statistics_data_isValid = false;

    m_decimal_column_statistics_data_isSet = false;
    m_decimal_column_statistics_data_isValid = false;

    m_double_column_statistics_data_isSet = false;
    m_double_column_statistics_data_isValid = false;

    m_long_column_statistics_data_isSet = false;
    m_long_column_statistics_data_isValid = false;

    m_string_column_statistics_data_isSet = false;
    m_string_column_statistics_data_isValid = false;

    m_binary_column_statistics_data_isSet = false;
    m_binary_column_statistics_data_isValid = false;
}

void OAIColumnStatistics_StatisticsData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColumnStatistics_StatisticsData::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_boolean_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_boolean_column_statistics_data, json[QString("BooleanColumnStatisticsData")]);
    m_boolean_column_statistics_data_isSet = !json[QString("BooleanColumnStatisticsData")].isNull() && m_boolean_column_statistics_data_isValid;

    m_date_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_date_column_statistics_data, json[QString("DateColumnStatisticsData")]);
    m_date_column_statistics_data_isSet = !json[QString("DateColumnStatisticsData")].isNull() && m_date_column_statistics_data_isValid;

    m_decimal_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_decimal_column_statistics_data, json[QString("DecimalColumnStatisticsData")]);
    m_decimal_column_statistics_data_isSet = !json[QString("DecimalColumnStatisticsData")].isNull() && m_decimal_column_statistics_data_isValid;

    m_double_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_double_column_statistics_data, json[QString("DoubleColumnStatisticsData")]);
    m_double_column_statistics_data_isSet = !json[QString("DoubleColumnStatisticsData")].isNull() && m_double_column_statistics_data_isValid;

    m_long_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_long_column_statistics_data, json[QString("LongColumnStatisticsData")]);
    m_long_column_statistics_data_isSet = !json[QString("LongColumnStatisticsData")].isNull() && m_long_column_statistics_data_isValid;

    m_string_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_string_column_statistics_data, json[QString("StringColumnStatisticsData")]);
    m_string_column_statistics_data_isSet = !json[QString("StringColumnStatisticsData")].isNull() && m_string_column_statistics_data_isValid;

    m_binary_column_statistics_data_isValid = ::OpenAPI::fromJsonValue(m_binary_column_statistics_data, json[QString("BinaryColumnStatisticsData")]);
    m_binary_column_statistics_data_isSet = !json[QString("BinaryColumnStatisticsData")].isNull() && m_binary_column_statistics_data_isValid;
}

QString OAIColumnStatistics_StatisticsData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColumnStatistics_StatisticsData::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_boolean_column_statistics_data.isSet()) {
        obj.insert(QString("BooleanColumnStatisticsData"), ::OpenAPI::toJsonValue(m_boolean_column_statistics_data));
    }
    if (m_date_column_statistics_data.isSet()) {
        obj.insert(QString("DateColumnStatisticsData"), ::OpenAPI::toJsonValue(m_date_column_statistics_data));
    }
    if (m_decimal_column_statistics_data.isSet()) {
        obj.insert(QString("DecimalColumnStatisticsData"), ::OpenAPI::toJsonValue(m_decimal_column_statistics_data));
    }
    if (m_double_column_statistics_data.isSet()) {
        obj.insert(QString("DoubleColumnStatisticsData"), ::OpenAPI::toJsonValue(m_double_column_statistics_data));
    }
    if (m_long_column_statistics_data.isSet()) {
        obj.insert(QString("LongColumnStatisticsData"), ::OpenAPI::toJsonValue(m_long_column_statistics_data));
    }
    if (m_string_column_statistics_data.isSet()) {
        obj.insert(QString("StringColumnStatisticsData"), ::OpenAPI::toJsonValue(m_string_column_statistics_data));
    }
    if (m_binary_column_statistics_data.isSet()) {
        obj.insert(QString("BinaryColumnStatisticsData"), ::OpenAPI::toJsonValue(m_binary_column_statistics_data));
    }
    return obj;
}

OAIColumnStatisticsType OAIColumnStatistics_StatisticsData::getType() const {
    return m_type;
}
void OAIColumnStatistics_StatisticsData::setType(const OAIColumnStatisticsType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_type_Set() const{
    return m_type_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_type_Valid() const{
    return m_type_isValid;
}

OAIColumnStatisticsData_BooleanColumnStatisticsData OAIColumnStatistics_StatisticsData::getBooleanColumnStatisticsData() const {
    return m_boolean_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setBooleanColumnStatisticsData(const OAIColumnStatisticsData_BooleanColumnStatisticsData &boolean_column_statistics_data) {
    m_boolean_column_statistics_data = boolean_column_statistics_data;
    m_boolean_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_boolean_column_statistics_data_Set() const{
    return m_boolean_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_boolean_column_statistics_data_Valid() const{
    return m_boolean_column_statistics_data_isValid;
}

OAIColumnStatisticsData_DateColumnStatisticsData OAIColumnStatistics_StatisticsData::getDateColumnStatisticsData() const {
    return m_date_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setDateColumnStatisticsData(const OAIColumnStatisticsData_DateColumnStatisticsData &date_column_statistics_data) {
    m_date_column_statistics_data = date_column_statistics_data;
    m_date_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_date_column_statistics_data_Set() const{
    return m_date_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_date_column_statistics_data_Valid() const{
    return m_date_column_statistics_data_isValid;
}

OAIColumnStatisticsData_DecimalColumnStatisticsData OAIColumnStatistics_StatisticsData::getDecimalColumnStatisticsData() const {
    return m_decimal_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setDecimalColumnStatisticsData(const OAIColumnStatisticsData_DecimalColumnStatisticsData &decimal_column_statistics_data) {
    m_decimal_column_statistics_data = decimal_column_statistics_data;
    m_decimal_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_decimal_column_statistics_data_Set() const{
    return m_decimal_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_decimal_column_statistics_data_Valid() const{
    return m_decimal_column_statistics_data_isValid;
}

OAIColumnStatisticsData_DoubleColumnStatisticsData OAIColumnStatistics_StatisticsData::getDoubleColumnStatisticsData() const {
    return m_double_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setDoubleColumnStatisticsData(const OAIColumnStatisticsData_DoubleColumnStatisticsData &double_column_statistics_data) {
    m_double_column_statistics_data = double_column_statistics_data;
    m_double_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_double_column_statistics_data_Set() const{
    return m_double_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_double_column_statistics_data_Valid() const{
    return m_double_column_statistics_data_isValid;
}

OAIColumnStatisticsData_LongColumnStatisticsData OAIColumnStatistics_StatisticsData::getLongColumnStatisticsData() const {
    return m_long_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setLongColumnStatisticsData(const OAIColumnStatisticsData_LongColumnStatisticsData &long_column_statistics_data) {
    m_long_column_statistics_data = long_column_statistics_data;
    m_long_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_long_column_statistics_data_Set() const{
    return m_long_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_long_column_statistics_data_Valid() const{
    return m_long_column_statistics_data_isValid;
}

OAIColumnStatisticsData_StringColumnStatisticsData OAIColumnStatistics_StatisticsData::getStringColumnStatisticsData() const {
    return m_string_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setStringColumnStatisticsData(const OAIColumnStatisticsData_StringColumnStatisticsData &string_column_statistics_data) {
    m_string_column_statistics_data = string_column_statistics_data;
    m_string_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_string_column_statistics_data_Set() const{
    return m_string_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_string_column_statistics_data_Valid() const{
    return m_string_column_statistics_data_isValid;
}

OAIColumnStatisticsData_BinaryColumnStatisticsData OAIColumnStatistics_StatisticsData::getBinaryColumnStatisticsData() const {
    return m_binary_column_statistics_data;
}
void OAIColumnStatistics_StatisticsData::setBinaryColumnStatisticsData(const OAIColumnStatisticsData_BinaryColumnStatisticsData &binary_column_statistics_data) {
    m_binary_column_statistics_data = binary_column_statistics_data;
    m_binary_column_statistics_data_isSet = true;
}

bool OAIColumnStatistics_StatisticsData::is_binary_column_statistics_data_Set() const{
    return m_binary_column_statistics_data_isSet;
}

bool OAIColumnStatistics_StatisticsData::is_binary_column_statistics_data_Valid() const{
    return m_binary_column_statistics_data_isValid;
}

bool OAIColumnStatistics_StatisticsData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_boolean_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_decimal_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_double_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_binary_column_statistics_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColumnStatistics_StatisticsData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
