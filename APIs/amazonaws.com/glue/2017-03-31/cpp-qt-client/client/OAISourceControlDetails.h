/**
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceControlDetails.h
 *
 * The details for a source control configuration for a job, allowing synchronization of job artifacts to or from a remote repository.
 */

#ifndef OAISourceControlDetails_H
#define OAISourceControlDetails_H

#include <QJsonObject>

#include "OAISourceControlAuthStrategy.h"
#include "OAISourceControlProvider.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceControlDetails : public OAIObject {
public:
    OAISourceControlDetails();
    OAISourceControlDetails(QString json);
    ~OAISourceControlDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceControlProvider getProvider() const;
    void setProvider(const OAISourceControlProvider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getRepository() const;
    void setRepository(const QString &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getFolder() const;
    void setFolder(const QString &folder);
    bool is_folder_Set() const;
    bool is_folder_Valid() const;

    QString getLastCommitId() const;
    void setLastCommitId(const QString &last_commit_id);
    bool is_last_commit_id_Set() const;
    bool is_last_commit_id_Valid() const;

    OAISourceControlAuthStrategy getAuthStrategy() const;
    void setAuthStrategy(const OAISourceControlAuthStrategy &auth_strategy);
    bool is_auth_strategy_Set() const;
    bool is_auth_strategy_Valid() const;

    QString getAuthToken() const;
    void setAuthToken(const QString &auth_token);
    bool is_auth_token_Set() const;
    bool is_auth_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceControlProvider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_folder;
    bool m_folder_isSet;
    bool m_folder_isValid;

    QString m_last_commit_id;
    bool m_last_commit_id_isSet;
    bool m_last_commit_id_isValid;

    OAISourceControlAuthStrategy m_auth_strategy;
    bool m_auth_strategy_isSet;
    bool m_auth_strategy_isValid;

    QString m_auth_token;
    bool m_auth_token_isSet;
    bool m_auth_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceControlDetails)

#endif // OAISourceControlDetails_H
