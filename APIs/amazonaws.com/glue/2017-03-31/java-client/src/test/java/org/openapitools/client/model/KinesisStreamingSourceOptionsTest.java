/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.StartingPosition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for KinesisStreamingSourceOptions
 */
public class KinesisStreamingSourceOptionsTest {
    private final KinesisStreamingSourceOptions model = new KinesisStreamingSourceOptions();

    /**
     * Model tests for KinesisStreamingSourceOptions
     */
    @Test
    public void testKinesisStreamingSourceOptions() {
        // TODO: test KinesisStreamingSourceOptions
    }

    /**
     * Test the property 'endpointUrl'
     */
    @Test
    public void endpointUrlTest() {
        // TODO: test endpointUrl
    }

    /**
     * Test the property 'streamName'
     */
    @Test
    public void streamNameTest() {
        // TODO: test streamName
    }

    /**
     * Test the property 'classification'
     */
    @Test
    public void classificationTest() {
        // TODO: test classification
    }

    /**
     * Test the property 'delimiter'
     */
    @Test
    public void delimiterTest() {
        // TODO: test delimiter
    }

    /**
     * Test the property 'startingPosition'
     */
    @Test
    public void startingPositionTest() {
        // TODO: test startingPosition
    }

    /**
     * Test the property 'maxFetchTimeInMs'
     */
    @Test
    public void maxFetchTimeInMsTest() {
        // TODO: test maxFetchTimeInMs
    }

    /**
     * Test the property 'maxFetchRecordsPerShard'
     */
    @Test
    public void maxFetchRecordsPerShardTest() {
        // TODO: test maxFetchRecordsPerShard
    }

    /**
     * Test the property 'maxRecordPerRead'
     */
    @Test
    public void maxRecordPerReadTest() {
        // TODO: test maxRecordPerRead
    }

    /**
     * Test the property 'addIdleTimeBetweenReads'
     */
    @Test
    public void addIdleTimeBetweenReadsTest() {
        // TODO: test addIdleTimeBetweenReads
    }

    /**
     * Test the property 'idleTimeBetweenReadsInMs'
     */
    @Test
    public void idleTimeBetweenReadsInMsTest() {
        // TODO: test idleTimeBetweenReadsInMs
    }

    /**
     * Test the property 'describeShardInterval'
     */
    @Test
    public void describeShardIntervalTest() {
        // TODO: test describeShardInterval
    }

    /**
     * Test the property 'numRetries'
     */
    @Test
    public void numRetriesTest() {
        // TODO: test numRetries
    }

    /**
     * Test the property 'retryIntervalMs'
     */
    @Test
    public void retryIntervalMsTest() {
        // TODO: test retryIntervalMs
    }

    /**
     * Test the property 'maxRetryIntervalMs'
     */
    @Test
    public void maxRetryIntervalMsTest() {
        // TODO: test maxRetryIntervalMs
    }

    /**
     * Test the property 'avoidEmptyBatches'
     */
    @Test
    public void avoidEmptyBatchesTest() {
        // TODO: test avoidEmptyBatches
    }

    /**
     * Test the property 'streamArn'
     */
    @Test
    public void streamArnTest() {
        // TODO: test streamArn
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'roleSessionName'
     */
    @Test
    public void roleSessionNameTest() {
        // TODO: test roleSessionName
    }

    /**
     * Test the property 'addRecordTimestamp'
     */
    @Test
    public void addRecordTimestampTest() {
        // TODO: test addRecordTimestamp
    }

    /**
     * Test the property 'emitConsumerLagMetrics'
     */
    @Test
    public void emitConsumerLagMetricsTest() {
        // TODO: test emitConsumerLagMetrics
    }

    /**
     * Test the property 'startingTimestamp'
     */
    @Test
    public void startingTimestampTest() {
        // TODO: test startingTimestamp
    }

}
