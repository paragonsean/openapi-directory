/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CatalogKafkaSourceStreamingOptions
 */
public class CatalogKafkaSourceStreamingOptionsTest {
    private final CatalogKafkaSourceStreamingOptions model = new CatalogKafkaSourceStreamingOptions();

    /**
     * Model tests for CatalogKafkaSourceStreamingOptions
     */
    @Test
    public void testCatalogKafkaSourceStreamingOptions() {
        // TODO: test CatalogKafkaSourceStreamingOptions
    }

    /**
     * Test the property 'bootstrapServers'
     */
    @Test
    public void bootstrapServersTest() {
        // TODO: test bootstrapServers
    }

    /**
     * Test the property 'securityProtocol'
     */
    @Test
    public void securityProtocolTest() {
        // TODO: test securityProtocol
    }

    /**
     * Test the property 'connectionName'
     */
    @Test
    public void connectionNameTest() {
        // TODO: test connectionName
    }

    /**
     * Test the property 'topicName'
     */
    @Test
    public void topicNameTest() {
        // TODO: test topicName
    }

    /**
     * Test the property 'assign'
     */
    @Test
    public void assignTest() {
        // TODO: test assign
    }

    /**
     * Test the property 'subscribePattern'
     */
    @Test
    public void subscribePatternTest() {
        // TODO: test subscribePattern
    }

    /**
     * Test the property 'classification'
     */
    @Test
    public void classificationTest() {
        // TODO: test classification
    }

    /**
     * Test the property 'delimiter'
     */
    @Test
    public void delimiterTest() {
        // TODO: test delimiter
    }

    /**
     * Test the property 'startingOffsets'
     */
    @Test
    public void startingOffsetsTest() {
        // TODO: test startingOffsets
    }

    /**
     * Test the property 'endingOffsets'
     */
    @Test
    public void endingOffsetsTest() {
        // TODO: test endingOffsets
    }

    /**
     * Test the property 'pollTimeoutMs'
     */
    @Test
    public void pollTimeoutMsTest() {
        // TODO: test pollTimeoutMs
    }

    /**
     * Test the property 'numRetries'
     */
    @Test
    public void numRetriesTest() {
        // TODO: test numRetries
    }

    /**
     * Test the property 'retryIntervalMs'
     */
    @Test
    public void retryIntervalMsTest() {
        // TODO: test retryIntervalMs
    }

    /**
     * Test the property 'maxOffsetsPerTrigger'
     */
    @Test
    public void maxOffsetsPerTriggerTest() {
        // TODO: test maxOffsetsPerTrigger
    }

    /**
     * Test the property 'minPartitions'
     */
    @Test
    public void minPartitionsTest() {
        // TODO: test minPartitions
    }

    /**
     * Test the property 'includeHeaders'
     */
    @Test
    public void includeHeadersTest() {
        // TODO: test includeHeaders
    }

    /**
     * Test the property 'addRecordTimestamp'
     */
    @Test
    public void addRecordTimestampTest() {
        // TODO: test addRecordTimestamp
    }

    /**
     * Test the property 'emitConsumerLagMetrics'
     */
    @Test
    public void emitConsumerLagMetricsTest() {
        // TODO: test emitConsumerLagMetrics
    }

    /**
     * Test the property 'startingTimestamp'
     */
    @Test
    public void startingTimestampTest() {
        // TODO: test startingTimestamp
    }

}
