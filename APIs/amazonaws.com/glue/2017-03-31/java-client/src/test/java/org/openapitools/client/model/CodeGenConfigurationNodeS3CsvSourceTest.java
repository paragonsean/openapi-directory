/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CompressionType;
import org.openapitools.client.model.QuoteChar;
import org.openapitools.client.model.S3CsvSourceAdditionalOptions;
import org.openapitools.client.model.Separator;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CodeGenConfigurationNodeS3CsvSource
 */
public class CodeGenConfigurationNodeS3CsvSourceTest {
    private final CodeGenConfigurationNodeS3CsvSource model = new CodeGenConfigurationNodeS3CsvSource();

    /**
     * Model tests for CodeGenConfigurationNodeS3CsvSource
     */
    @Test
    public void testCodeGenConfigurationNodeS3CsvSource() {
        // TODO: test CodeGenConfigurationNodeS3CsvSource
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'paths'
     */
    @Test
    public void pathsTest() {
        // TODO: test paths
    }

    /**
     * Test the property 'compressionType'
     */
    @Test
    public void compressionTypeTest() {
        // TODO: test compressionType
    }

    /**
     * Test the property 'exclusions'
     */
    @Test
    public void exclusionsTest() {
        // TODO: test exclusions
    }

    /**
     * Test the property 'groupSize'
     */
    @Test
    public void groupSizeTest() {
        // TODO: test groupSize
    }

    /**
     * Test the property 'groupFiles'
     */
    @Test
    public void groupFilesTest() {
        // TODO: test groupFiles
    }

    /**
     * Test the property 'recurse'
     */
    @Test
    public void recurseTest() {
        // TODO: test recurse
    }

    /**
     * Test the property 'maxBand'
     */
    @Test
    public void maxBandTest() {
        // TODO: test maxBand
    }

    /**
     * Test the property 'maxFilesInBand'
     */
    @Test
    public void maxFilesInBandTest() {
        // TODO: test maxFilesInBand
    }

    /**
     * Test the property 'additionalOptions'
     */
    @Test
    public void additionalOptionsTest() {
        // TODO: test additionalOptions
    }

    /**
     * Test the property 'separator'
     */
    @Test
    public void separatorTest() {
        // TODO: test separator
    }

    /**
     * Test the property 'escaper'
     */
    @Test
    public void escaperTest() {
        // TODO: test escaper
    }

    /**
     * Test the property 'quoteChar'
     */
    @Test
    public void quoteCharTest() {
        // TODO: test quoteChar
    }

    /**
     * Test the property 'multiline'
     */
    @Test
    public void multilineTest() {
        // TODO: test multiline
    }

    /**
     * Test the property 'withHeader'
     */
    @Test
    public void withHeaderTest() {
        // TODO: test withHeader
    }

    /**
     * Test the property 'writeHeader'
     */
    @Test
    public void writeHeaderTest() {
        // TODO: test writeHeader
    }

    /**
     * Test the property 'skipFirst'
     */
    @Test
    public void skipFirstTest() {
        // TODO: test skipFirst
    }

    /**
     * Test the property 'optimizePerformance'
     */
    @Test
    public void optimizePerformanceTest() {
        // TODO: test optimizePerformance
    }

    /**
     * Test the property 'outputSchemas'
     */
    @Test
    public void outputSchemasTest() {
        // TODO: test outputSchemas
    }

}
