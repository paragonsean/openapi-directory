/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ExecutionClass;
import org.openapitools.client.model.JobRunState;
import org.openapitools.client.model.StartJobRunRequestNotificationProperty;
import org.openapitools.client.model.WorkerType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetJobRunResponseJobRun
 */
public class GetJobRunResponseJobRunTest {
    private final GetJobRunResponseJobRun model = new GetJobRunResponseJobRun();

    /**
     * Model tests for GetJobRunResponseJobRun
     */
    @Test
    public void testGetJobRunResponseJobRun() {
        // TODO: test GetJobRunResponseJobRun
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'attempt'
     */
    @Test
    public void attemptTest() {
        // TODO: test attempt
    }

    /**
     * Test the property 'previousRunId'
     */
    @Test
    public void previousRunIdTest() {
        // TODO: test previousRunId
    }

    /**
     * Test the property 'triggerName'
     */
    @Test
    public void triggerNameTest() {
        // TODO: test triggerName
    }

    /**
     * Test the property 'jobName'
     */
    @Test
    public void jobNameTest() {
        // TODO: test jobName
    }

    /**
     * Test the property 'startedOn'
     */
    @Test
    public void startedOnTest() {
        // TODO: test startedOn
    }

    /**
     * Test the property 'lastModifiedOn'
     */
    @Test
    public void lastModifiedOnTest() {
        // TODO: test lastModifiedOn
    }

    /**
     * Test the property 'completedOn'
     */
    @Test
    public void completedOnTest() {
        // TODO: test completedOn
    }

    /**
     * Test the property 'jobRunState'
     */
    @Test
    public void jobRunStateTest() {
        // TODO: test jobRunState
    }

    /**
     * Test the property 'arguments'
     */
    @Test
    public void argumentsTest() {
        // TODO: test arguments
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

    /**
     * Test the property 'predecessorRuns'
     */
    @Test
    public void predecessorRunsTest() {
        // TODO: test predecessorRuns
    }

    /**
     * Test the property 'allocatedCapacity'
     */
    @Test
    public void allocatedCapacityTest() {
        // TODO: test allocatedCapacity
    }

    /**
     * Test the property 'executionTime'
     */
    @Test
    public void executionTimeTest() {
        // TODO: test executionTime
    }

    /**
     * Test the property 'timeout'
     */
    @Test
    public void timeoutTest() {
        // TODO: test timeout
    }

    /**
     * Test the property 'maxCapacity'
     */
    @Test
    public void maxCapacityTest() {
        // TODO: test maxCapacity
    }

    /**
     * Test the property 'workerType'
     */
    @Test
    public void workerTypeTest() {
        // TODO: test workerType
    }

    /**
     * Test the property 'numberOfWorkers'
     */
    @Test
    public void numberOfWorkersTest() {
        // TODO: test numberOfWorkers
    }

    /**
     * Test the property 'securityConfiguration'
     */
    @Test
    public void securityConfigurationTest() {
        // TODO: test securityConfiguration
    }

    /**
     * Test the property 'logGroupName'
     */
    @Test
    public void logGroupNameTest() {
        // TODO: test logGroupName
    }

    /**
     * Test the property 'notificationProperty'
     */
    @Test
    public void notificationPropertyTest() {
        // TODO: test notificationProperty
    }

    /**
     * Test the property 'glueVersion'
     */
    @Test
    public void glueVersionTest() {
        // TODO: test glueVersion
    }

    /**
     * Test the property 'dpUSeconds'
     */
    @Test
    public void dpUSecondsTest() {
        // TODO: test dpUSeconds
    }

    /**
     * Test the property 'executionClass'
     */
    @Test
    public void executionClassTest() {
        // TODO: test executionClass
    }

}
