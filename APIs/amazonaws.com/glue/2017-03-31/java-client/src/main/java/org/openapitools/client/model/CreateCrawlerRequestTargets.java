/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCrawlerRequestTargets
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCrawlerRequestTargets {
  public static final String SERIALIZED_NAME_S3_TARGETS = "S3Targets";
  @SerializedName(SERIALIZED_NAME_S3_TARGETS)
  private List s3Targets;

  public static final String SERIALIZED_NAME_JDBC_TARGETS = "JdbcTargets";
  @SerializedName(SERIALIZED_NAME_JDBC_TARGETS)
  private List jdbcTargets;

  public static final String SERIALIZED_NAME_MONGO_D_B_TARGETS = "MongoDBTargets";
  @SerializedName(SERIALIZED_NAME_MONGO_D_B_TARGETS)
  private List mongoDBTargets;

  public static final String SERIALIZED_NAME_DYNAMO_D_B_TARGETS = "DynamoDBTargets";
  @SerializedName(SERIALIZED_NAME_DYNAMO_D_B_TARGETS)
  private List dynamoDBTargets;

  public static final String SERIALIZED_NAME_CATALOG_TARGETS = "CatalogTargets";
  @SerializedName(SERIALIZED_NAME_CATALOG_TARGETS)
  private List catalogTargets;

  public static final String SERIALIZED_NAME_DELTA_TARGETS = "DeltaTargets";
  @SerializedName(SERIALIZED_NAME_DELTA_TARGETS)
  private List deltaTargets;

  public static final String SERIALIZED_NAME_ICEBERG_TARGETS = "IcebergTargets";
  @SerializedName(SERIALIZED_NAME_ICEBERG_TARGETS)
  private List icebergTargets;

  public static final String SERIALIZED_NAME_HUDI_TARGETS = "HudiTargets";
  @SerializedName(SERIALIZED_NAME_HUDI_TARGETS)
  private List hudiTargets;

  public CreateCrawlerRequestTargets() {
  }

  public CreateCrawlerRequestTargets s3Targets(List s3Targets) {
    this.s3Targets = s3Targets;
    return this;
  }

  /**
   * Get s3Targets
   * @return s3Targets
   */
  @javax.annotation.Nullable
  public List getS3Targets() {
    return s3Targets;
  }

  public void setS3Targets(List s3Targets) {
    this.s3Targets = s3Targets;
  }


  public CreateCrawlerRequestTargets jdbcTargets(List jdbcTargets) {
    this.jdbcTargets = jdbcTargets;
    return this;
  }

  /**
   * Get jdbcTargets
   * @return jdbcTargets
   */
  @javax.annotation.Nullable
  public List getJdbcTargets() {
    return jdbcTargets;
  }

  public void setJdbcTargets(List jdbcTargets) {
    this.jdbcTargets = jdbcTargets;
  }


  public CreateCrawlerRequestTargets mongoDBTargets(List mongoDBTargets) {
    this.mongoDBTargets = mongoDBTargets;
    return this;
  }

  /**
   * Get mongoDBTargets
   * @return mongoDBTargets
   */
  @javax.annotation.Nullable
  public List getMongoDBTargets() {
    return mongoDBTargets;
  }

  public void setMongoDBTargets(List mongoDBTargets) {
    this.mongoDBTargets = mongoDBTargets;
  }


  public CreateCrawlerRequestTargets dynamoDBTargets(List dynamoDBTargets) {
    this.dynamoDBTargets = dynamoDBTargets;
    return this;
  }

  /**
   * Get dynamoDBTargets
   * @return dynamoDBTargets
   */
  @javax.annotation.Nullable
  public List getDynamoDBTargets() {
    return dynamoDBTargets;
  }

  public void setDynamoDBTargets(List dynamoDBTargets) {
    this.dynamoDBTargets = dynamoDBTargets;
  }


  public CreateCrawlerRequestTargets catalogTargets(List catalogTargets) {
    this.catalogTargets = catalogTargets;
    return this;
  }

  /**
   * Get catalogTargets
   * @return catalogTargets
   */
  @javax.annotation.Nullable
  public List getCatalogTargets() {
    return catalogTargets;
  }

  public void setCatalogTargets(List catalogTargets) {
    this.catalogTargets = catalogTargets;
  }


  public CreateCrawlerRequestTargets deltaTargets(List deltaTargets) {
    this.deltaTargets = deltaTargets;
    return this;
  }

  /**
   * Get deltaTargets
   * @return deltaTargets
   */
  @javax.annotation.Nullable
  public List getDeltaTargets() {
    return deltaTargets;
  }

  public void setDeltaTargets(List deltaTargets) {
    this.deltaTargets = deltaTargets;
  }


  public CreateCrawlerRequestTargets icebergTargets(List icebergTargets) {
    this.icebergTargets = icebergTargets;
    return this;
  }

  /**
   * Get icebergTargets
   * @return icebergTargets
   */
  @javax.annotation.Nullable
  public List getIcebergTargets() {
    return icebergTargets;
  }

  public void setIcebergTargets(List icebergTargets) {
    this.icebergTargets = icebergTargets;
  }


  public CreateCrawlerRequestTargets hudiTargets(List hudiTargets) {
    this.hudiTargets = hudiTargets;
    return this;
  }

  /**
   * Get hudiTargets
   * @return hudiTargets
   */
  @javax.annotation.Nullable
  public List getHudiTargets() {
    return hudiTargets;
  }

  public void setHudiTargets(List hudiTargets) {
    this.hudiTargets = hudiTargets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCrawlerRequestTargets createCrawlerRequestTargets = (CreateCrawlerRequestTargets) o;
    return Objects.equals(this.s3Targets, createCrawlerRequestTargets.s3Targets) &&
        Objects.equals(this.jdbcTargets, createCrawlerRequestTargets.jdbcTargets) &&
        Objects.equals(this.mongoDBTargets, createCrawlerRequestTargets.mongoDBTargets) &&
        Objects.equals(this.dynamoDBTargets, createCrawlerRequestTargets.dynamoDBTargets) &&
        Objects.equals(this.catalogTargets, createCrawlerRequestTargets.catalogTargets) &&
        Objects.equals(this.deltaTargets, createCrawlerRequestTargets.deltaTargets) &&
        Objects.equals(this.icebergTargets, createCrawlerRequestTargets.icebergTargets) &&
        Objects.equals(this.hudiTargets, createCrawlerRequestTargets.hudiTargets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(s3Targets, jdbcTargets, mongoDBTargets, dynamoDBTargets, catalogTargets, deltaTargets, icebergTargets, hudiTargets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCrawlerRequestTargets {\n");
    sb.append("    s3Targets: ").append(toIndentedString(s3Targets)).append("\n");
    sb.append("    jdbcTargets: ").append(toIndentedString(jdbcTargets)).append("\n");
    sb.append("    mongoDBTargets: ").append(toIndentedString(mongoDBTargets)).append("\n");
    sb.append("    dynamoDBTargets: ").append(toIndentedString(dynamoDBTargets)).append("\n");
    sb.append("    catalogTargets: ").append(toIndentedString(catalogTargets)).append("\n");
    sb.append("    deltaTargets: ").append(toIndentedString(deltaTargets)).append("\n");
    sb.append("    icebergTargets: ").append(toIndentedString(icebergTargets)).append("\n");
    sb.append("    hudiTargets: ").append(toIndentedString(hudiTargets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("S3Targets");
    openapiFields.add("JdbcTargets");
    openapiFields.add("MongoDBTargets");
    openapiFields.add("DynamoDBTargets");
    openapiFields.add("CatalogTargets");
    openapiFields.add("DeltaTargets");
    openapiFields.add("IcebergTargets");
    openapiFields.add("HudiTargets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCrawlerRequestTargets
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCrawlerRequestTargets.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCrawlerRequestTargets is not found in the empty JSON string", CreateCrawlerRequestTargets.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCrawlerRequestTargets.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCrawlerRequestTargets` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `S3Targets`
      if (jsonObj.get("S3Targets") != null && !jsonObj.get("S3Targets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("S3Targets"));
      }
      // validate the optional field `JdbcTargets`
      if (jsonObj.get("JdbcTargets") != null && !jsonObj.get("JdbcTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("JdbcTargets"));
      }
      // validate the optional field `MongoDBTargets`
      if (jsonObj.get("MongoDBTargets") != null && !jsonObj.get("MongoDBTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MongoDBTargets"));
      }
      // validate the optional field `DynamoDBTargets`
      if (jsonObj.get("DynamoDBTargets") != null && !jsonObj.get("DynamoDBTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DynamoDBTargets"));
      }
      // validate the optional field `CatalogTargets`
      if (jsonObj.get("CatalogTargets") != null && !jsonObj.get("CatalogTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CatalogTargets"));
      }
      // validate the optional field `DeltaTargets`
      if (jsonObj.get("DeltaTargets") != null && !jsonObj.get("DeltaTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DeltaTargets"));
      }
      // validate the optional field `IcebergTargets`
      if (jsonObj.get("IcebergTargets") != null && !jsonObj.get("IcebergTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("IcebergTargets"));
      }
      // validate the optional field `HudiTargets`
      if (jsonObj.get("HudiTargets") != null && !jsonObj.get("HudiTargets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("HudiTargets"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCrawlerRequestTargets.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCrawlerRequestTargets' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCrawlerRequestTargets> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCrawlerRequestTargets.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCrawlerRequestTargets>() {
           @Override
           public void write(JsonWriter out, CreateCrawlerRequestTargets value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCrawlerRequestTargets read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCrawlerRequestTargets given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCrawlerRequestTargets
   * @throws IOException if the JSON string is invalid with respect to CreateCrawlerRequestTargets
   */
  public static CreateCrawlerRequestTargets fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCrawlerRequestTargets.class);
  }

  /**
   * Convert an instance of CreateCrawlerRequestTargets to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

