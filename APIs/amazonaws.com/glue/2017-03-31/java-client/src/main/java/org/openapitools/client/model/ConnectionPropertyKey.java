/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ConnectionPropertyKey
 */
@JsonAdapter(ConnectionPropertyKey.Adapter.class)
public enum ConnectionPropertyKey {
  
  HOST("HOST"),
  
  PORT("PORT"),
  
  USERNAME("USERNAME"),
  
  PASSWORD("PASSWORD"),
  
  ENCRYPTED_PASSWORD("ENCRYPTED_PASSWORD"),
  
  JDBC_DRIVER_JAR_URI("JDBC_DRIVER_JAR_URI"),
  
  JDBC_DRIVER_CLASS_NAME("JDBC_DRIVER_CLASS_NAME"),
  
  JDBC_ENGINE("JDBC_ENGINE"),
  
  JDBC_ENGINE_VERSION("JDBC_ENGINE_VERSION"),
  
  CONFIG_FILES("CONFIG_FILES"),
  
  INSTANCE_ID("INSTANCE_ID"),
  
  JDBC_CONNECTION_URL("JDBC_CONNECTION_URL"),
  
  JDBC_ENFORCE_SSL("JDBC_ENFORCE_SSL"),
  
  CUSTOM_JDBC_CERT("CUSTOM_JDBC_CERT"),
  
  SKIP_CUSTOM_JDBC_CERT_VALIDATION("SKIP_CUSTOM_JDBC_CERT_VALIDATION"),
  
  CUSTOM_JDBC_CERT_STRING("CUSTOM_JDBC_CERT_STRING"),
  
  CONNECTION_URL("CONNECTION_URL"),
  
  KAFKA_BOOTSTRAP_SERVERS("KAFKA_BOOTSTRAP_SERVERS"),
  
  KAFKA_SSL_ENABLED("KAFKA_SSL_ENABLED"),
  
  KAFKA_CUSTOM_CERT("KAFKA_CUSTOM_CERT"),
  
  KAFKA_SKIP_CUSTOM_CERT_VALIDATION("KAFKA_SKIP_CUSTOM_CERT_VALIDATION"),
  
  KAFKA_CLIENT_KEYSTORE("KAFKA_CLIENT_KEYSTORE"),
  
  KAFKA_CLIENT_KEYSTORE_PASSWORD("KAFKA_CLIENT_KEYSTORE_PASSWORD"),
  
  KAFKA_CLIENT_KEY_PASSWORD("KAFKA_CLIENT_KEY_PASSWORD"),
  
  ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD("ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD"),
  
  ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD("ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD"),
  
  SECRET_ID("SECRET_ID"),
  
  CONNECTOR_URL("CONNECTOR_URL"),
  
  CONNECTOR_TYPE("CONNECTOR_TYPE"),
  
  CONNECTOR_CLASS_NAME("CONNECTOR_CLASS_NAME"),
  
  KAFKA_SASL_MECHANISM("KAFKA_SASL_MECHANISM"),
  
  KAFKA_SASL_SCRAM_USERNAME("KAFKA_SASL_SCRAM_USERNAME"),
  
  KAFKA_SASL_SCRAM_PASSWORD("KAFKA_SASL_SCRAM_PASSWORD"),
  
  KAFKA_SASL_SCRAM_SECRETS_ARN("KAFKA_SASL_SCRAM_SECRETS_ARN"),
  
  ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD("ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD"),
  
  KAFKA_SASL_GSSAPI_KEYTAB("KAFKA_SASL_GSSAPI_KEYTAB"),
  
  KAFKA_SASL_GSSAPI_KRB5_CONF("KAFKA_SASL_GSSAPI_KRB5_CONF"),
  
  KAFKA_SASL_GSSAPI_SERVICE("KAFKA_SASL_GSSAPI_SERVICE"),
  
  KAFKA_SASL_GSSAPI_PRINCIPAL("KAFKA_SASL_GSSAPI_PRINCIPAL");

  private String value;

  ConnectionPropertyKey(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ConnectionPropertyKey fromValue(String value) {
    for (ConnectionPropertyKey b : ConnectionPropertyKey.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ConnectionPropertyKey> {
    @Override
    public void write(final JsonWriter jsonWriter, final ConnectionPropertyKey enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ConnectionPropertyKey read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ConnectionPropertyKey.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ConnectionPropertyKey.fromValue(value);
  }
}

