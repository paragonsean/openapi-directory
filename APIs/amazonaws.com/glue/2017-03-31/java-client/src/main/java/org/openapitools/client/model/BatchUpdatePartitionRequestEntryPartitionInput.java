/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.PartitionInputStorageDescriptor;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BatchUpdatePartitionRequestEntryPartitionInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchUpdatePartitionRequestEntryPartitionInput {
  public static final String SERIALIZED_NAME_VALUES = "Values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List values;

  public static final String SERIALIZED_NAME_LAST_ACCESS_TIME = "LastAccessTime";
  @SerializedName(SERIALIZED_NAME_LAST_ACCESS_TIME)
  private OffsetDateTime lastAccessTime;

  public static final String SERIALIZED_NAME_STORAGE_DESCRIPTOR = "StorageDescriptor";
  @SerializedName(SERIALIZED_NAME_STORAGE_DESCRIPTOR)
  private PartitionInputStorageDescriptor storageDescriptor;

  public static final String SERIALIZED_NAME_PARAMETERS = "Parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map parameters;

  public static final String SERIALIZED_NAME_LAST_ANALYZED_TIME = "LastAnalyzedTime";
  @SerializedName(SERIALIZED_NAME_LAST_ANALYZED_TIME)
  private OffsetDateTime lastAnalyzedTime;

  public BatchUpdatePartitionRequestEntryPartitionInput() {
  }

  public BatchUpdatePartitionRequestEntryPartitionInput values(List values) {
    this.values = values;
    return this;
  }

  /**
   * Get values
   * @return values
   */
  @javax.annotation.Nullable
  public List getValues() {
    return values;
  }

  public void setValues(List values) {
    this.values = values;
  }


  public BatchUpdatePartitionRequestEntryPartitionInput lastAccessTime(OffsetDateTime lastAccessTime) {
    this.lastAccessTime = lastAccessTime;
    return this;
  }

  /**
   * Get lastAccessTime
   * @return lastAccessTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAccessTime() {
    return lastAccessTime;
  }

  public void setLastAccessTime(OffsetDateTime lastAccessTime) {
    this.lastAccessTime = lastAccessTime;
  }


  public BatchUpdatePartitionRequestEntryPartitionInput storageDescriptor(PartitionInputStorageDescriptor storageDescriptor) {
    this.storageDescriptor = storageDescriptor;
    return this;
  }

  /**
   * Get storageDescriptor
   * @return storageDescriptor
   */
  @javax.annotation.Nullable
  public PartitionInputStorageDescriptor getStorageDescriptor() {
    return storageDescriptor;
  }

  public void setStorageDescriptor(PartitionInputStorageDescriptor storageDescriptor) {
    this.storageDescriptor = storageDescriptor;
  }


  public BatchUpdatePartitionRequestEntryPartitionInput parameters(Map parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map getParameters() {
    return parameters;
  }

  public void setParameters(Map parameters) {
    this.parameters = parameters;
  }


  public BatchUpdatePartitionRequestEntryPartitionInput lastAnalyzedTime(OffsetDateTime lastAnalyzedTime) {
    this.lastAnalyzedTime = lastAnalyzedTime;
    return this;
  }

  /**
   * Get lastAnalyzedTime
   * @return lastAnalyzedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAnalyzedTime() {
    return lastAnalyzedTime;
  }

  public void setLastAnalyzedTime(OffsetDateTime lastAnalyzedTime) {
    this.lastAnalyzedTime = lastAnalyzedTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchUpdatePartitionRequestEntryPartitionInput batchUpdatePartitionRequestEntryPartitionInput = (BatchUpdatePartitionRequestEntryPartitionInput) o;
    return Objects.equals(this.values, batchUpdatePartitionRequestEntryPartitionInput.values) &&
        Objects.equals(this.lastAccessTime, batchUpdatePartitionRequestEntryPartitionInput.lastAccessTime) &&
        Objects.equals(this.storageDescriptor, batchUpdatePartitionRequestEntryPartitionInput.storageDescriptor) &&
        Objects.equals(this.parameters, batchUpdatePartitionRequestEntryPartitionInput.parameters) &&
        Objects.equals(this.lastAnalyzedTime, batchUpdatePartitionRequestEntryPartitionInput.lastAnalyzedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(values, lastAccessTime, storageDescriptor, parameters, lastAnalyzedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchUpdatePartitionRequestEntryPartitionInput {\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    lastAccessTime: ").append(toIndentedString(lastAccessTime)).append("\n");
    sb.append("    storageDescriptor: ").append(toIndentedString(storageDescriptor)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    lastAnalyzedTime: ").append(toIndentedString(lastAnalyzedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Values");
    openapiFields.add("LastAccessTime");
    openapiFields.add("StorageDescriptor");
    openapiFields.add("Parameters");
    openapiFields.add("LastAnalyzedTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchUpdatePartitionRequestEntryPartitionInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchUpdatePartitionRequestEntryPartitionInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchUpdatePartitionRequestEntryPartitionInput is not found in the empty JSON string", BatchUpdatePartitionRequestEntryPartitionInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchUpdatePartitionRequestEntryPartitionInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchUpdatePartitionRequestEntryPartitionInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Values`
      if (jsonObj.get("Values") != null && !jsonObj.get("Values").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Values"));
      }
      // validate the optional field `LastAccessTime`
      if (jsonObj.get("LastAccessTime") != null && !jsonObj.get("LastAccessTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastAccessTime"));
      }
      // validate the optional field `StorageDescriptor`
      if (jsonObj.get("StorageDescriptor") != null && !jsonObj.get("StorageDescriptor").isJsonNull()) {
        PartitionInputStorageDescriptor.validateJsonElement(jsonObj.get("StorageDescriptor"));
      }
      // validate the optional field `Parameters`
      if (jsonObj.get("Parameters") != null && !jsonObj.get("Parameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Parameters"));
      }
      // validate the optional field `LastAnalyzedTime`
      if (jsonObj.get("LastAnalyzedTime") != null && !jsonObj.get("LastAnalyzedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastAnalyzedTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchUpdatePartitionRequestEntryPartitionInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchUpdatePartitionRequestEntryPartitionInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchUpdatePartitionRequestEntryPartitionInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchUpdatePartitionRequestEntryPartitionInput.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchUpdatePartitionRequestEntryPartitionInput>() {
           @Override
           public void write(JsonWriter out, BatchUpdatePartitionRequestEntryPartitionInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchUpdatePartitionRequestEntryPartitionInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchUpdatePartitionRequestEntryPartitionInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchUpdatePartitionRequestEntryPartitionInput
   * @throws IOException if the JSON string is invalid with respect to BatchUpdatePartitionRequestEntryPartitionInput
   */
  public static BatchUpdatePartitionRequestEntryPartitionInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchUpdatePartitionRequestEntryPartitionInput.class);
  }

  /**
   * Convert an instance of BatchUpdatePartitionRequestEntryPartitionInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

