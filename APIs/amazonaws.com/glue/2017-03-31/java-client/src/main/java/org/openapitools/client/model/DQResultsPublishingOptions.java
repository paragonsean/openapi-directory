/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Options to configure how your data quality evaluation results are published.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DQResultsPublishingOptions {
  public static final String SERIALIZED_NAME_EVALUATION_CONTEXT = "EvaluationContext";
  @SerializedName(SERIALIZED_NAME_EVALUATION_CONTEXT)
  private String evaluationContext;

  public static final String SERIALIZED_NAME_RESULTS_S3_PREFIX = "ResultsS3Prefix";
  @SerializedName(SERIALIZED_NAME_RESULTS_S3_PREFIX)
  private String resultsS3Prefix;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_METRICS_ENABLED = "CloudWatchMetricsEnabled";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_METRICS_ENABLED)
  private Boolean cloudWatchMetricsEnabled;

  public static final String SERIALIZED_NAME_RESULTS_PUBLISHING_ENABLED = "ResultsPublishingEnabled";
  @SerializedName(SERIALIZED_NAME_RESULTS_PUBLISHING_ENABLED)
  private Boolean resultsPublishingEnabled;

  public DQResultsPublishingOptions() {
  }

  public DQResultsPublishingOptions evaluationContext(String evaluationContext) {
    this.evaluationContext = evaluationContext;
    return this;
  }

  /**
   * Get evaluationContext
   * @return evaluationContext
   */
  @javax.annotation.Nullable
  public String getEvaluationContext() {
    return evaluationContext;
  }

  public void setEvaluationContext(String evaluationContext) {
    this.evaluationContext = evaluationContext;
  }


  public DQResultsPublishingOptions resultsS3Prefix(String resultsS3Prefix) {
    this.resultsS3Prefix = resultsS3Prefix;
    return this;
  }

  /**
   * Get resultsS3Prefix
   * @return resultsS3Prefix
   */
  @javax.annotation.Nullable
  public String getResultsS3Prefix() {
    return resultsS3Prefix;
  }

  public void setResultsS3Prefix(String resultsS3Prefix) {
    this.resultsS3Prefix = resultsS3Prefix;
  }


  public DQResultsPublishingOptions cloudWatchMetricsEnabled(Boolean cloudWatchMetricsEnabled) {
    this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
    return this;
  }

  /**
   * Get cloudWatchMetricsEnabled
   * @return cloudWatchMetricsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCloudWatchMetricsEnabled() {
    return cloudWatchMetricsEnabled;
  }

  public void setCloudWatchMetricsEnabled(Boolean cloudWatchMetricsEnabled) {
    this.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
  }


  public DQResultsPublishingOptions resultsPublishingEnabled(Boolean resultsPublishingEnabled) {
    this.resultsPublishingEnabled = resultsPublishingEnabled;
    return this;
  }

  /**
   * Get resultsPublishingEnabled
   * @return resultsPublishingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getResultsPublishingEnabled() {
    return resultsPublishingEnabled;
  }

  public void setResultsPublishingEnabled(Boolean resultsPublishingEnabled) {
    this.resultsPublishingEnabled = resultsPublishingEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DQResultsPublishingOptions dqResultsPublishingOptions = (DQResultsPublishingOptions) o;
    return Objects.equals(this.evaluationContext, dqResultsPublishingOptions.evaluationContext) &&
        Objects.equals(this.resultsS3Prefix, dqResultsPublishingOptions.resultsS3Prefix) &&
        Objects.equals(this.cloudWatchMetricsEnabled, dqResultsPublishingOptions.cloudWatchMetricsEnabled) &&
        Objects.equals(this.resultsPublishingEnabled, dqResultsPublishingOptions.resultsPublishingEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evaluationContext, resultsS3Prefix, cloudWatchMetricsEnabled, resultsPublishingEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DQResultsPublishingOptions {\n");
    sb.append("    evaluationContext: ").append(toIndentedString(evaluationContext)).append("\n");
    sb.append("    resultsS3Prefix: ").append(toIndentedString(resultsS3Prefix)).append("\n");
    sb.append("    cloudWatchMetricsEnabled: ").append(toIndentedString(cloudWatchMetricsEnabled)).append("\n");
    sb.append("    resultsPublishingEnabled: ").append(toIndentedString(resultsPublishingEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EvaluationContext");
    openapiFields.add("ResultsS3Prefix");
    openapiFields.add("CloudWatchMetricsEnabled");
    openapiFields.add("ResultsPublishingEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DQResultsPublishingOptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DQResultsPublishingOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DQResultsPublishingOptions is not found in the empty JSON string", DQResultsPublishingOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DQResultsPublishingOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DQResultsPublishingOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EvaluationContext`
      if (jsonObj.get("EvaluationContext") != null && !jsonObj.get("EvaluationContext").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EvaluationContext"));
      }
      // validate the optional field `ResultsS3Prefix`
      if (jsonObj.get("ResultsS3Prefix") != null && !jsonObj.get("ResultsS3Prefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResultsS3Prefix"));
      }
      // validate the optional field `CloudWatchMetricsEnabled`
      if (jsonObj.get("CloudWatchMetricsEnabled") != null && !jsonObj.get("CloudWatchMetricsEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CloudWatchMetricsEnabled"));
      }
      // validate the optional field `ResultsPublishingEnabled`
      if (jsonObj.get("ResultsPublishingEnabled") != null && !jsonObj.get("ResultsPublishingEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ResultsPublishingEnabled"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DQResultsPublishingOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DQResultsPublishingOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DQResultsPublishingOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DQResultsPublishingOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<DQResultsPublishingOptions>() {
           @Override
           public void write(JsonWriter out, DQResultsPublishingOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DQResultsPublishingOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DQResultsPublishingOptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DQResultsPublishingOptions
   * @throws IOException if the JSON string is invalid with respect to DQResultsPublishingOptions
   */
  public static DQResultsPublishingOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DQResultsPublishingOptions.class);
  }

  /**
   * Convert an instance of DQResultsPublishingOptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

