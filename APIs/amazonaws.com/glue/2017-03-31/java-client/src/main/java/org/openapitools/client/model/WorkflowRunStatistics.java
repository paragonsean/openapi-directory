/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WorkflowRunStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WorkflowRunStatistics {
  public static final String SERIALIZED_NAME_TOTAL_ACTIONS = "TotalActions";
  @SerializedName(SERIALIZED_NAME_TOTAL_ACTIONS)
  private Integer totalActions;

  public static final String SERIALIZED_NAME_TIMEOUT_ACTIONS = "TimeoutActions";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_ACTIONS)
  private Integer timeoutActions;

  public static final String SERIALIZED_NAME_FAILED_ACTIONS = "FailedActions";
  @SerializedName(SERIALIZED_NAME_FAILED_ACTIONS)
  private Integer failedActions;

  public static final String SERIALIZED_NAME_STOPPED_ACTIONS = "StoppedActions";
  @SerializedName(SERIALIZED_NAME_STOPPED_ACTIONS)
  private Integer stoppedActions;

  public static final String SERIALIZED_NAME_SUCCEEDED_ACTIONS = "SucceededActions";
  @SerializedName(SERIALIZED_NAME_SUCCEEDED_ACTIONS)
  private Integer succeededActions;

  public static final String SERIALIZED_NAME_RUNNING_ACTIONS = "RunningActions";
  @SerializedName(SERIALIZED_NAME_RUNNING_ACTIONS)
  private Integer runningActions;

  public static final String SERIALIZED_NAME_ERRORED_ACTIONS = "ErroredActions";
  @SerializedName(SERIALIZED_NAME_ERRORED_ACTIONS)
  private Integer erroredActions;

  public static final String SERIALIZED_NAME_WAITING_ACTIONS = "WaitingActions";
  @SerializedName(SERIALIZED_NAME_WAITING_ACTIONS)
  private Integer waitingActions;

  public WorkflowRunStatistics() {
  }

  public WorkflowRunStatistics totalActions(Integer totalActions) {
    this.totalActions = totalActions;
    return this;
  }

  /**
   * Get totalActions
   * @return totalActions
   */
  @javax.annotation.Nullable
  public Integer getTotalActions() {
    return totalActions;
  }

  public void setTotalActions(Integer totalActions) {
    this.totalActions = totalActions;
  }


  public WorkflowRunStatistics timeoutActions(Integer timeoutActions) {
    this.timeoutActions = timeoutActions;
    return this;
  }

  /**
   * Get timeoutActions
   * @return timeoutActions
   */
  @javax.annotation.Nullable
  public Integer getTimeoutActions() {
    return timeoutActions;
  }

  public void setTimeoutActions(Integer timeoutActions) {
    this.timeoutActions = timeoutActions;
  }


  public WorkflowRunStatistics failedActions(Integer failedActions) {
    this.failedActions = failedActions;
    return this;
  }

  /**
   * Get failedActions
   * @return failedActions
   */
  @javax.annotation.Nullable
  public Integer getFailedActions() {
    return failedActions;
  }

  public void setFailedActions(Integer failedActions) {
    this.failedActions = failedActions;
  }


  public WorkflowRunStatistics stoppedActions(Integer stoppedActions) {
    this.stoppedActions = stoppedActions;
    return this;
  }

  /**
   * Get stoppedActions
   * @return stoppedActions
   */
  @javax.annotation.Nullable
  public Integer getStoppedActions() {
    return stoppedActions;
  }

  public void setStoppedActions(Integer stoppedActions) {
    this.stoppedActions = stoppedActions;
  }


  public WorkflowRunStatistics succeededActions(Integer succeededActions) {
    this.succeededActions = succeededActions;
    return this;
  }

  /**
   * Get succeededActions
   * @return succeededActions
   */
  @javax.annotation.Nullable
  public Integer getSucceededActions() {
    return succeededActions;
  }

  public void setSucceededActions(Integer succeededActions) {
    this.succeededActions = succeededActions;
  }


  public WorkflowRunStatistics runningActions(Integer runningActions) {
    this.runningActions = runningActions;
    return this;
  }

  /**
   * Get runningActions
   * @return runningActions
   */
  @javax.annotation.Nullable
  public Integer getRunningActions() {
    return runningActions;
  }

  public void setRunningActions(Integer runningActions) {
    this.runningActions = runningActions;
  }


  public WorkflowRunStatistics erroredActions(Integer erroredActions) {
    this.erroredActions = erroredActions;
    return this;
  }

  /**
   * Get erroredActions
   * @return erroredActions
   */
  @javax.annotation.Nullable
  public Integer getErroredActions() {
    return erroredActions;
  }

  public void setErroredActions(Integer erroredActions) {
    this.erroredActions = erroredActions;
  }


  public WorkflowRunStatistics waitingActions(Integer waitingActions) {
    this.waitingActions = waitingActions;
    return this;
  }

  /**
   * Get waitingActions
   * @return waitingActions
   */
  @javax.annotation.Nullable
  public Integer getWaitingActions() {
    return waitingActions;
  }

  public void setWaitingActions(Integer waitingActions) {
    this.waitingActions = waitingActions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowRunStatistics workflowRunStatistics = (WorkflowRunStatistics) o;
    return Objects.equals(this.totalActions, workflowRunStatistics.totalActions) &&
        Objects.equals(this.timeoutActions, workflowRunStatistics.timeoutActions) &&
        Objects.equals(this.failedActions, workflowRunStatistics.failedActions) &&
        Objects.equals(this.stoppedActions, workflowRunStatistics.stoppedActions) &&
        Objects.equals(this.succeededActions, workflowRunStatistics.succeededActions) &&
        Objects.equals(this.runningActions, workflowRunStatistics.runningActions) &&
        Objects.equals(this.erroredActions, workflowRunStatistics.erroredActions) &&
        Objects.equals(this.waitingActions, workflowRunStatistics.waitingActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalActions, timeoutActions, failedActions, stoppedActions, succeededActions, runningActions, erroredActions, waitingActions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowRunStatistics {\n");
    sb.append("    totalActions: ").append(toIndentedString(totalActions)).append("\n");
    sb.append("    timeoutActions: ").append(toIndentedString(timeoutActions)).append("\n");
    sb.append("    failedActions: ").append(toIndentedString(failedActions)).append("\n");
    sb.append("    stoppedActions: ").append(toIndentedString(stoppedActions)).append("\n");
    sb.append("    succeededActions: ").append(toIndentedString(succeededActions)).append("\n");
    sb.append("    runningActions: ").append(toIndentedString(runningActions)).append("\n");
    sb.append("    erroredActions: ").append(toIndentedString(erroredActions)).append("\n");
    sb.append("    waitingActions: ").append(toIndentedString(waitingActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TotalActions");
    openapiFields.add("TimeoutActions");
    openapiFields.add("FailedActions");
    openapiFields.add("StoppedActions");
    openapiFields.add("SucceededActions");
    openapiFields.add("RunningActions");
    openapiFields.add("ErroredActions");
    openapiFields.add("WaitingActions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WorkflowRunStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WorkflowRunStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkflowRunStatistics is not found in the empty JSON string", WorkflowRunStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WorkflowRunStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkflowRunStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TotalActions`
      if (jsonObj.get("TotalActions") != null && !jsonObj.get("TotalActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalActions"));
      }
      // validate the optional field `TimeoutActions`
      if (jsonObj.get("TimeoutActions") != null && !jsonObj.get("TimeoutActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimeoutActions"));
      }
      // validate the optional field `FailedActions`
      if (jsonObj.get("FailedActions") != null && !jsonObj.get("FailedActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("FailedActions"));
      }
      // validate the optional field `StoppedActions`
      if (jsonObj.get("StoppedActions") != null && !jsonObj.get("StoppedActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StoppedActions"));
      }
      // validate the optional field `SucceededActions`
      if (jsonObj.get("SucceededActions") != null && !jsonObj.get("SucceededActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SucceededActions"));
      }
      // validate the optional field `RunningActions`
      if (jsonObj.get("RunningActions") != null && !jsonObj.get("RunningActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RunningActions"));
      }
      // validate the optional field `ErroredActions`
      if (jsonObj.get("ErroredActions") != null && !jsonObj.get("ErroredActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ErroredActions"));
      }
      // validate the optional field `WaitingActions`
      if (jsonObj.get("WaitingActions") != null && !jsonObj.get("WaitingActions").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("WaitingActions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkflowRunStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkflowRunStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkflowRunStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkflowRunStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkflowRunStatistics>() {
           @Override
           public void write(JsonWriter out, WorkflowRunStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkflowRunStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WorkflowRunStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WorkflowRunStatistics
   * @throws IOException if the JSON string is invalid with respect to WorkflowRunStatistics
   */
  public static WorkflowRunStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkflowRunStatistics.class);
  }

  /**
   * Convert an instance of WorkflowRunStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

