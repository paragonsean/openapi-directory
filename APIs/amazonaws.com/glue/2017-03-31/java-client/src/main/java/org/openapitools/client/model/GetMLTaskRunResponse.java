/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GetMLTaskRunResponseProperties;
import org.openapitools.client.model.TaskStatusType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMLTaskRunResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMLTaskRunResponse {
  public static final String SERIALIZED_NAME_TRANSFORM_ID = "TransformId";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_ID)
  private String transformId;

  public static final String SERIALIZED_NAME_TASK_RUN_ID = "TaskRunId";
  @SerializedName(SERIALIZED_NAME_TASK_RUN_ID)
  private String taskRunId;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TaskStatusType status;

  public static final String SERIALIZED_NAME_LOG_GROUP_NAME = "LogGroupName";
  @SerializedName(SERIALIZED_NAME_LOG_GROUP_NAME)
  private String logGroupName;

  public static final String SERIALIZED_NAME_PROPERTIES = "Properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private GetMLTaskRunResponseProperties properties;

  public static final String SERIALIZED_NAME_ERROR_STRING = "ErrorString";
  @SerializedName(SERIALIZED_NAME_ERROR_STRING)
  private String errorString;

  public static final String SERIALIZED_NAME_STARTED_ON = "StartedOn";
  @SerializedName(SERIALIZED_NAME_STARTED_ON)
  private OffsetDateTime startedOn;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_ON = "LastModifiedOn";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_ON)
  private OffsetDateTime lastModifiedOn;

  public static final String SERIALIZED_NAME_COMPLETED_ON = "CompletedOn";
  @SerializedName(SERIALIZED_NAME_COMPLETED_ON)
  private OffsetDateTime completedOn;

  public static final String SERIALIZED_NAME_EXECUTION_TIME = "ExecutionTime";
  @SerializedName(SERIALIZED_NAME_EXECUTION_TIME)
  private Integer executionTime;

  public GetMLTaskRunResponse() {
  }

  public GetMLTaskRunResponse transformId(String transformId) {
    this.transformId = transformId;
    return this;
  }

  /**
   * Get transformId
   * @return transformId
   */
  @javax.annotation.Nullable
  public String getTransformId() {
    return transformId;
  }

  public void setTransformId(String transformId) {
    this.transformId = transformId;
  }


  public GetMLTaskRunResponse taskRunId(String taskRunId) {
    this.taskRunId = taskRunId;
    return this;
  }

  /**
   * Get taskRunId
   * @return taskRunId
   */
  @javax.annotation.Nullable
  public String getTaskRunId() {
    return taskRunId;
  }

  public void setTaskRunId(String taskRunId) {
    this.taskRunId = taskRunId;
  }


  public GetMLTaskRunResponse status(TaskStatusType status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TaskStatusType getStatus() {
    return status;
  }

  public void setStatus(TaskStatusType status) {
    this.status = status;
  }


  public GetMLTaskRunResponse logGroupName(String logGroupName) {
    this.logGroupName = logGroupName;
    return this;
  }

  /**
   * Get logGroupName
   * @return logGroupName
   */
  @javax.annotation.Nullable
  public String getLogGroupName() {
    return logGroupName;
  }

  public void setLogGroupName(String logGroupName) {
    this.logGroupName = logGroupName;
  }


  public GetMLTaskRunResponse properties(GetMLTaskRunResponseProperties properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  public GetMLTaskRunResponseProperties getProperties() {
    return properties;
  }

  public void setProperties(GetMLTaskRunResponseProperties properties) {
    this.properties = properties;
  }


  public GetMLTaskRunResponse errorString(String errorString) {
    this.errorString = errorString;
    return this;
  }

  /**
   * Get errorString
   * @return errorString
   */
  @javax.annotation.Nullable
  public String getErrorString() {
    return errorString;
  }

  public void setErrorString(String errorString) {
    this.errorString = errorString;
  }


  public GetMLTaskRunResponse startedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
    return this;
  }

  /**
   * Get startedOn
   * @return startedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartedOn() {
    return startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
  }


  public GetMLTaskRunResponse lastModifiedOn(OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
    return this;
  }

  /**
   * Get lastModifiedOn
   * @return lastModifiedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedOn() {
    return lastModifiedOn;
  }

  public void setLastModifiedOn(OffsetDateTime lastModifiedOn) {
    this.lastModifiedOn = lastModifiedOn;
  }


  public GetMLTaskRunResponse completedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
    return this;
  }

  /**
   * Get completedOn
   * @return completedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletedOn() {
    return completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
  }


  public GetMLTaskRunResponse executionTime(Integer executionTime) {
    this.executionTime = executionTime;
    return this;
  }

  /**
   * Get executionTime
   * @return executionTime
   */
  @javax.annotation.Nullable
  public Integer getExecutionTime() {
    return executionTime;
  }

  public void setExecutionTime(Integer executionTime) {
    this.executionTime = executionTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMLTaskRunResponse getMLTaskRunResponse = (GetMLTaskRunResponse) o;
    return Objects.equals(this.transformId, getMLTaskRunResponse.transformId) &&
        Objects.equals(this.taskRunId, getMLTaskRunResponse.taskRunId) &&
        Objects.equals(this.status, getMLTaskRunResponse.status) &&
        Objects.equals(this.logGroupName, getMLTaskRunResponse.logGroupName) &&
        Objects.equals(this.properties, getMLTaskRunResponse.properties) &&
        Objects.equals(this.errorString, getMLTaskRunResponse.errorString) &&
        Objects.equals(this.startedOn, getMLTaskRunResponse.startedOn) &&
        Objects.equals(this.lastModifiedOn, getMLTaskRunResponse.lastModifiedOn) &&
        Objects.equals(this.completedOn, getMLTaskRunResponse.completedOn) &&
        Objects.equals(this.executionTime, getMLTaskRunResponse.executionTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transformId, taskRunId, status, logGroupName, properties, errorString, startedOn, lastModifiedOn, completedOn, executionTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMLTaskRunResponse {\n");
    sb.append("    transformId: ").append(toIndentedString(transformId)).append("\n");
    sb.append("    taskRunId: ").append(toIndentedString(taskRunId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    logGroupName: ").append(toIndentedString(logGroupName)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    errorString: ").append(toIndentedString(errorString)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    lastModifiedOn: ").append(toIndentedString(lastModifiedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    executionTime: ").append(toIndentedString(executionTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TransformId");
    openapiFields.add("TaskRunId");
    openapiFields.add("Status");
    openapiFields.add("LogGroupName");
    openapiFields.add("Properties");
    openapiFields.add("ErrorString");
    openapiFields.add("StartedOn");
    openapiFields.add("LastModifiedOn");
    openapiFields.add("CompletedOn");
    openapiFields.add("ExecutionTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMLTaskRunResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMLTaskRunResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMLTaskRunResponse is not found in the empty JSON string", GetMLTaskRunResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMLTaskRunResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMLTaskRunResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TransformId`
      if (jsonObj.get("TransformId") != null && !jsonObj.get("TransformId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TransformId"));
      }
      // validate the optional field `TaskRunId`
      if (jsonObj.get("TaskRunId") != null && !jsonObj.get("TaskRunId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskRunId"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        TaskStatusType.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `LogGroupName`
      if (jsonObj.get("LogGroupName") != null && !jsonObj.get("LogGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LogGroupName"));
      }
      // validate the optional field `Properties`
      if (jsonObj.get("Properties") != null && !jsonObj.get("Properties").isJsonNull()) {
        GetMLTaskRunResponseProperties.validateJsonElement(jsonObj.get("Properties"));
      }
      // validate the optional field `ErrorString`
      if (jsonObj.get("ErrorString") != null && !jsonObj.get("ErrorString").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorString"));
      }
      // validate the optional field `StartedOn`
      if (jsonObj.get("StartedOn") != null && !jsonObj.get("StartedOn").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartedOn"));
      }
      // validate the optional field `LastModifiedOn`
      if (jsonObj.get("LastModifiedOn") != null && !jsonObj.get("LastModifiedOn").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedOn"));
      }
      // validate the optional field `CompletedOn`
      if (jsonObj.get("CompletedOn") != null && !jsonObj.get("CompletedOn").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletedOn"));
      }
      // validate the optional field `ExecutionTime`
      if (jsonObj.get("ExecutionTime") != null && !jsonObj.get("ExecutionTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ExecutionTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMLTaskRunResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMLTaskRunResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMLTaskRunResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMLTaskRunResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMLTaskRunResponse>() {
           @Override
           public void write(JsonWriter out, GetMLTaskRunResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMLTaskRunResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMLTaskRunResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMLTaskRunResponse
   * @throws IOException if the JSON string is invalid with respect to GetMLTaskRunResponse
   */
  public static GetMLTaskRunResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMLTaskRunResponse.class);
  }

  /**
   * Convert an instance of GetMLTaskRunResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

