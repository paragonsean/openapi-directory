/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.WorkerType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDevEndpointRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDevEndpointRequest {
  public static final String SERIALIZED_NAME_ENDPOINT_NAME = "EndpointName";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_NAME)
  private String endpointName;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_PUBLIC_KEY = "PublicKey";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private String publicKey;

  public static final String SERIALIZED_NAME_PUBLIC_KEYS = "PublicKeys";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEYS)
  private List publicKeys;

  public static final String SERIALIZED_NAME_NUMBER_OF_NODES = "NumberOfNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_NODES)
  private Integer numberOfNodes;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "WorkerType";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private WorkerType workerType;

  public static final String SERIALIZED_NAME_GLUE_VERSION = "GlueVersion";
  @SerializedName(SERIALIZED_NAME_GLUE_VERSION)
  private String glueVersion;

  public static final String SERIALIZED_NAME_NUMBER_OF_WORKERS = "NumberOfWorkers";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_WORKERS)
  private Integer numberOfWorkers;

  public static final String SERIALIZED_NAME_EXTRA_PYTHON_LIBS_S3_PATH = "ExtraPythonLibsS3Path";
  @SerializedName(SERIALIZED_NAME_EXTRA_PYTHON_LIBS_S3_PATH)
  private String extraPythonLibsS3Path;

  public static final String SERIALIZED_NAME_EXTRA_JARS_S3_PATH = "ExtraJarsS3Path";
  @SerializedName(SERIALIZED_NAME_EXTRA_JARS_S3_PATH)
  private String extraJarsS3Path;

  public static final String SERIALIZED_NAME_SECURITY_CONFIGURATION = "SecurityConfiguration";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONFIGURATION)
  private String securityConfiguration;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_ARGUMENTS = "Arguments";
  @SerializedName(SERIALIZED_NAME_ARGUMENTS)
  private Map arguments;

  public CreateDevEndpointRequest() {
  }

  public CreateDevEndpointRequest endpointName(String endpointName) {
    this.endpointName = endpointName;
    return this;
  }

  /**
   * Get endpointName
   * @return endpointName
   */
  @javax.annotation.Nonnull
  public String getEndpointName() {
    return endpointName;
  }

  public void setEndpointName(String endpointName) {
    this.endpointName = endpointName;
  }


  public CreateDevEndpointRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateDevEndpointRequest securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public CreateDevEndpointRequest subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

  /**
   * Get subnetId
   * @return subnetId
   */
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public CreateDevEndpointRequest publicKey(String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

  /**
   * Get publicKey
   * @return publicKey
   */
  @javax.annotation.Nullable
  public String getPublicKey() {
    return publicKey;
  }

  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public CreateDevEndpointRequest publicKeys(List publicKeys) {
    this.publicKeys = publicKeys;
    return this;
  }

  /**
   * Get publicKeys
   * @return publicKeys
   */
  @javax.annotation.Nullable
  public List getPublicKeys() {
    return publicKeys;
  }

  public void setPublicKeys(List publicKeys) {
    this.publicKeys = publicKeys;
  }


  public CreateDevEndpointRequest numberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
    return this;
  }

  /**
   * Get numberOfNodes
   * @return numberOfNodes
   */
  @javax.annotation.Nullable
  public Integer getNumberOfNodes() {
    return numberOfNodes;
  }

  public void setNumberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
  }


  public CreateDevEndpointRequest workerType(WorkerType workerType) {
    this.workerType = workerType;
    return this;
  }

  /**
   * Get workerType
   * @return workerType
   */
  @javax.annotation.Nullable
  public WorkerType getWorkerType() {
    return workerType;
  }

  public void setWorkerType(WorkerType workerType) {
    this.workerType = workerType;
  }


  public CreateDevEndpointRequest glueVersion(String glueVersion) {
    this.glueVersion = glueVersion;
    return this;
  }

  /**
   * Get glueVersion
   * @return glueVersion
   */
  @javax.annotation.Nullable
  public String getGlueVersion() {
    return glueVersion;
  }

  public void setGlueVersion(String glueVersion) {
    this.glueVersion = glueVersion;
  }


  public CreateDevEndpointRequest numberOfWorkers(Integer numberOfWorkers) {
    this.numberOfWorkers = numberOfWorkers;
    return this;
  }

  /**
   * Get numberOfWorkers
   * @return numberOfWorkers
   */
  @javax.annotation.Nullable
  public Integer getNumberOfWorkers() {
    return numberOfWorkers;
  }

  public void setNumberOfWorkers(Integer numberOfWorkers) {
    this.numberOfWorkers = numberOfWorkers;
  }


  public CreateDevEndpointRequest extraPythonLibsS3Path(String extraPythonLibsS3Path) {
    this.extraPythonLibsS3Path = extraPythonLibsS3Path;
    return this;
  }

  /**
   * Get extraPythonLibsS3Path
   * @return extraPythonLibsS3Path
   */
  @javax.annotation.Nullable
  public String getExtraPythonLibsS3Path() {
    return extraPythonLibsS3Path;
  }

  public void setExtraPythonLibsS3Path(String extraPythonLibsS3Path) {
    this.extraPythonLibsS3Path = extraPythonLibsS3Path;
  }


  public CreateDevEndpointRequest extraJarsS3Path(String extraJarsS3Path) {
    this.extraJarsS3Path = extraJarsS3Path;
    return this;
  }

  /**
   * Get extraJarsS3Path
   * @return extraJarsS3Path
   */
  @javax.annotation.Nullable
  public String getExtraJarsS3Path() {
    return extraJarsS3Path;
  }

  public void setExtraJarsS3Path(String extraJarsS3Path) {
    this.extraJarsS3Path = extraJarsS3Path;
  }


  public CreateDevEndpointRequest securityConfiguration(String securityConfiguration) {
    this.securityConfiguration = securityConfiguration;
    return this;
  }

  /**
   * Get securityConfiguration
   * @return securityConfiguration
   */
  @javax.annotation.Nullable
  public String getSecurityConfiguration() {
    return securityConfiguration;
  }

  public void setSecurityConfiguration(String securityConfiguration) {
    this.securityConfiguration = securityConfiguration;
  }


  public CreateDevEndpointRequest tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public CreateDevEndpointRequest arguments(Map arguments) {
    this.arguments = arguments;
    return this;
  }

  /**
   * Get arguments
   * @return arguments
   */
  @javax.annotation.Nullable
  public Map getArguments() {
    return arguments;
  }

  public void setArguments(Map arguments) {
    this.arguments = arguments;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDevEndpointRequest createDevEndpointRequest = (CreateDevEndpointRequest) o;
    return Objects.equals(this.endpointName, createDevEndpointRequest.endpointName) &&
        Objects.equals(this.roleArn, createDevEndpointRequest.roleArn) &&
        Objects.equals(this.securityGroupIds, createDevEndpointRequest.securityGroupIds) &&
        Objects.equals(this.subnetId, createDevEndpointRequest.subnetId) &&
        Objects.equals(this.publicKey, createDevEndpointRequest.publicKey) &&
        Objects.equals(this.publicKeys, createDevEndpointRequest.publicKeys) &&
        Objects.equals(this.numberOfNodes, createDevEndpointRequest.numberOfNodes) &&
        Objects.equals(this.workerType, createDevEndpointRequest.workerType) &&
        Objects.equals(this.glueVersion, createDevEndpointRequest.glueVersion) &&
        Objects.equals(this.numberOfWorkers, createDevEndpointRequest.numberOfWorkers) &&
        Objects.equals(this.extraPythonLibsS3Path, createDevEndpointRequest.extraPythonLibsS3Path) &&
        Objects.equals(this.extraJarsS3Path, createDevEndpointRequest.extraJarsS3Path) &&
        Objects.equals(this.securityConfiguration, createDevEndpointRequest.securityConfiguration) &&
        Objects.equals(this.tags, createDevEndpointRequest.tags) &&
        Objects.equals(this.arguments, createDevEndpointRequest.arguments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointName, roleArn, securityGroupIds, subnetId, publicKey, publicKeys, numberOfNodes, workerType, glueVersion, numberOfWorkers, extraPythonLibsS3Path, extraJarsS3Path, securityConfiguration, tags, arguments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDevEndpointRequest {\n");
    sb.append("    endpointName: ").append(toIndentedString(endpointName)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    publicKeys: ").append(toIndentedString(publicKeys)).append("\n");
    sb.append("    numberOfNodes: ").append(toIndentedString(numberOfNodes)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    glueVersion: ").append(toIndentedString(glueVersion)).append("\n");
    sb.append("    numberOfWorkers: ").append(toIndentedString(numberOfWorkers)).append("\n");
    sb.append("    extraPythonLibsS3Path: ").append(toIndentedString(extraPythonLibsS3Path)).append("\n");
    sb.append("    extraJarsS3Path: ").append(toIndentedString(extraJarsS3Path)).append("\n");
    sb.append("    securityConfiguration: ").append(toIndentedString(securityConfiguration)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointName");
    openapiFields.add("RoleArn");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("SubnetId");
    openapiFields.add("PublicKey");
    openapiFields.add("PublicKeys");
    openapiFields.add("NumberOfNodes");
    openapiFields.add("WorkerType");
    openapiFields.add("GlueVersion");
    openapiFields.add("NumberOfWorkers");
    openapiFields.add("ExtraPythonLibsS3Path");
    openapiFields.add("ExtraJarsS3Path");
    openapiFields.add("SecurityConfiguration");
    openapiFields.add("Tags");
    openapiFields.add("Arguments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EndpointName");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDevEndpointRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDevEndpointRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDevEndpointRequest is not found in the empty JSON string", CreateDevEndpointRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDevEndpointRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDevEndpointRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateDevEndpointRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `EndpointName`
      String.validateJsonElement(jsonObj.get("EndpointName"));
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `SubnetId`
      if (jsonObj.get("SubnetId") != null && !jsonObj.get("SubnetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetId"));
      }
      // validate the optional field `PublicKey`
      if (jsonObj.get("PublicKey") != null && !jsonObj.get("PublicKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PublicKey"));
      }
      // validate the optional field `PublicKeys`
      if (jsonObj.get("PublicKeys") != null && !jsonObj.get("PublicKeys").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PublicKeys"));
      }
      // validate the optional field `NumberOfNodes`
      if (jsonObj.get("NumberOfNodes") != null && !jsonObj.get("NumberOfNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfNodes"));
      }
      // validate the optional field `WorkerType`
      if (jsonObj.get("WorkerType") != null && !jsonObj.get("WorkerType").isJsonNull()) {
        WorkerType.validateJsonElement(jsonObj.get("WorkerType"));
      }
      // validate the optional field `GlueVersion`
      if (jsonObj.get("GlueVersion") != null && !jsonObj.get("GlueVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GlueVersion"));
      }
      // validate the optional field `NumberOfWorkers`
      if (jsonObj.get("NumberOfWorkers") != null && !jsonObj.get("NumberOfWorkers").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfWorkers"));
      }
      // validate the optional field `ExtraPythonLibsS3Path`
      if (jsonObj.get("ExtraPythonLibsS3Path") != null && !jsonObj.get("ExtraPythonLibsS3Path").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExtraPythonLibsS3Path"));
      }
      // validate the optional field `ExtraJarsS3Path`
      if (jsonObj.get("ExtraJarsS3Path") != null && !jsonObj.get("ExtraJarsS3Path").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExtraJarsS3Path"));
      }
      // validate the optional field `SecurityConfiguration`
      if (jsonObj.get("SecurityConfiguration") != null && !jsonObj.get("SecurityConfiguration").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SecurityConfiguration"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `Arguments`
      if (jsonObj.get("Arguments") != null && !jsonObj.get("Arguments").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Arguments"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDevEndpointRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDevEndpointRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDevEndpointRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDevEndpointRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDevEndpointRequest>() {
           @Override
           public void write(JsonWriter out, CreateDevEndpointRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDevEndpointRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDevEndpointRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDevEndpointRequest
   * @throws IOException if the JSON string is invalid with respect to CreateDevEndpointRequest
   */
  public static CreateDevEndpointRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDevEndpointRequest.class);
  }

  /**
   * Convert an instance of CreateDevEndpointRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

