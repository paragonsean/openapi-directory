/*
 * AWS Glue
 * <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue service.</p>
 *
 * The version of the OpenAPI document: 2017-03-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TransformStatusType;
import org.openapitools.client.model.TransformType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListMLTransformsRequestFilter
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:19.587194-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListMLTransformsRequestFilter {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TRANSFORM_TYPE = "TransformType";
  @SerializedName(SERIALIZED_NAME_TRANSFORM_TYPE)
  private TransformType transformType;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TransformStatusType status;

  public static final String SERIALIZED_NAME_GLUE_VERSION = "GlueVersion";
  @SerializedName(SERIALIZED_NAME_GLUE_VERSION)
  private String glueVersion;

  public static final String SERIALIZED_NAME_CREATED_BEFORE = "CreatedBefore";
  @SerializedName(SERIALIZED_NAME_CREATED_BEFORE)
  private OffsetDateTime createdBefore;

  public static final String SERIALIZED_NAME_CREATED_AFTER = "CreatedAfter";
  @SerializedName(SERIALIZED_NAME_CREATED_AFTER)
  private OffsetDateTime createdAfter;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BEFORE = "LastModifiedBefore";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BEFORE)
  private OffsetDateTime lastModifiedBefore;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AFTER = "LastModifiedAfter";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AFTER)
  private OffsetDateTime lastModifiedAfter;

  public static final String SERIALIZED_NAME_SCHEMA = "Schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private List schema;

  public ListMLTransformsRequestFilter() {
  }

  public ListMLTransformsRequestFilter name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ListMLTransformsRequestFilter transformType(TransformType transformType) {
    this.transformType = transformType;
    return this;
  }

  /**
   * Get transformType
   * @return transformType
   */
  @javax.annotation.Nullable
  public TransformType getTransformType() {
    return transformType;
  }

  public void setTransformType(TransformType transformType) {
    this.transformType = transformType;
  }


  public ListMLTransformsRequestFilter status(TransformStatusType status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TransformStatusType getStatus() {
    return status;
  }

  public void setStatus(TransformStatusType status) {
    this.status = status;
  }


  public ListMLTransformsRequestFilter glueVersion(String glueVersion) {
    this.glueVersion = glueVersion;
    return this;
  }

  /**
   * Get glueVersion
   * @return glueVersion
   */
  @javax.annotation.Nullable
  public String getGlueVersion() {
    return glueVersion;
  }

  public void setGlueVersion(String glueVersion) {
    this.glueVersion = glueVersion;
  }


  public ListMLTransformsRequestFilter createdBefore(OffsetDateTime createdBefore) {
    this.createdBefore = createdBefore;
    return this;
  }

  /**
   * Get createdBefore
   * @return createdBefore
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedBefore() {
    return createdBefore;
  }

  public void setCreatedBefore(OffsetDateTime createdBefore) {
    this.createdBefore = createdBefore;
  }


  public ListMLTransformsRequestFilter createdAfter(OffsetDateTime createdAfter) {
    this.createdAfter = createdAfter;
    return this;
  }

  /**
   * Get createdAfter
   * @return createdAfter
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAfter() {
    return createdAfter;
  }

  public void setCreatedAfter(OffsetDateTime createdAfter) {
    this.createdAfter = createdAfter;
  }


  public ListMLTransformsRequestFilter lastModifiedBefore(OffsetDateTime lastModifiedBefore) {
    this.lastModifiedBefore = lastModifiedBefore;
    return this;
  }

  /**
   * Get lastModifiedBefore
   * @return lastModifiedBefore
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedBefore() {
    return lastModifiedBefore;
  }

  public void setLastModifiedBefore(OffsetDateTime lastModifiedBefore) {
    this.lastModifiedBefore = lastModifiedBefore;
  }


  public ListMLTransformsRequestFilter lastModifiedAfter(OffsetDateTime lastModifiedAfter) {
    this.lastModifiedAfter = lastModifiedAfter;
    return this;
  }

  /**
   * Get lastModifiedAfter
   * @return lastModifiedAfter
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedAfter() {
    return lastModifiedAfter;
  }

  public void setLastModifiedAfter(OffsetDateTime lastModifiedAfter) {
    this.lastModifiedAfter = lastModifiedAfter;
  }


  public ListMLTransformsRequestFilter schema(List schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  public List getSchema() {
    return schema;
  }

  public void setSchema(List schema) {
    this.schema = schema;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListMLTransformsRequestFilter listMLTransformsRequestFilter = (ListMLTransformsRequestFilter) o;
    return Objects.equals(this.name, listMLTransformsRequestFilter.name) &&
        Objects.equals(this.transformType, listMLTransformsRequestFilter.transformType) &&
        Objects.equals(this.status, listMLTransformsRequestFilter.status) &&
        Objects.equals(this.glueVersion, listMLTransformsRequestFilter.glueVersion) &&
        Objects.equals(this.createdBefore, listMLTransformsRequestFilter.createdBefore) &&
        Objects.equals(this.createdAfter, listMLTransformsRequestFilter.createdAfter) &&
        Objects.equals(this.lastModifiedBefore, listMLTransformsRequestFilter.lastModifiedBefore) &&
        Objects.equals(this.lastModifiedAfter, listMLTransformsRequestFilter.lastModifiedAfter) &&
        Objects.equals(this.schema, listMLTransformsRequestFilter.schema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, transformType, status, glueVersion, createdBefore, createdAfter, lastModifiedBefore, lastModifiedAfter, schema);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListMLTransformsRequestFilter {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    transformType: ").append(toIndentedString(transformType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    glueVersion: ").append(toIndentedString(glueVersion)).append("\n");
    sb.append("    createdBefore: ").append(toIndentedString(createdBefore)).append("\n");
    sb.append("    createdAfter: ").append(toIndentedString(createdAfter)).append("\n");
    sb.append("    lastModifiedBefore: ").append(toIndentedString(lastModifiedBefore)).append("\n");
    sb.append("    lastModifiedAfter: ").append(toIndentedString(lastModifiedAfter)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("TransformType");
    openapiFields.add("Status");
    openapiFields.add("GlueVersion");
    openapiFields.add("CreatedBefore");
    openapiFields.add("CreatedAfter");
    openapiFields.add("LastModifiedBefore");
    openapiFields.add("LastModifiedAfter");
    openapiFields.add("Schema");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListMLTransformsRequestFilter
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListMLTransformsRequestFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListMLTransformsRequestFilter is not found in the empty JSON string", ListMLTransformsRequestFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListMLTransformsRequestFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListMLTransformsRequestFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `TransformType`
      if (jsonObj.get("TransformType") != null && !jsonObj.get("TransformType").isJsonNull()) {
        TransformType.validateJsonElement(jsonObj.get("TransformType"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        TransformStatusType.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `GlueVersion`
      if (jsonObj.get("GlueVersion") != null && !jsonObj.get("GlueVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GlueVersion"));
      }
      // validate the optional field `CreatedBefore`
      if (jsonObj.get("CreatedBefore") != null && !jsonObj.get("CreatedBefore").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedBefore"));
      }
      // validate the optional field `CreatedAfter`
      if (jsonObj.get("CreatedAfter") != null && !jsonObj.get("CreatedAfter").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAfter"));
      }
      // validate the optional field `LastModifiedBefore`
      if (jsonObj.get("LastModifiedBefore") != null && !jsonObj.get("LastModifiedBefore").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedBefore"));
      }
      // validate the optional field `LastModifiedAfter`
      if (jsonObj.get("LastModifiedAfter") != null && !jsonObj.get("LastModifiedAfter").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedAfter"));
      }
      // validate the optional field `Schema`
      if (jsonObj.get("Schema") != null && !jsonObj.get("Schema").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Schema"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListMLTransformsRequestFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListMLTransformsRequestFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListMLTransformsRequestFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListMLTransformsRequestFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<ListMLTransformsRequestFilter>() {
           @Override
           public void write(JsonWriter out, ListMLTransformsRequestFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListMLTransformsRequestFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListMLTransformsRequestFilter given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListMLTransformsRequestFilter
   * @throws IOException if the JSON string is invalid with respect to ListMLTransformsRequestFilter
   */
  public static ListMLTransformsRequestFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListMLTransformsRequestFilter.class);
  }

  /**
   * Convert an instance of ListMLTransformsRequestFilter to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

