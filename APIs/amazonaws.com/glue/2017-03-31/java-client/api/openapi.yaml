openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <fullname>Glue</fullname> <p>Defines the public endpoint for the Glue
    service.</p>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Glue
  version: 2017-03-31
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: glue
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/glue-2017-03-31.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/glue/
servers:
- description: The AWS Glue multi-region endpoint
  url: "http://glue.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Glue multi-region endpoint
  url: "https://glue.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Glue endpoint for China (Beijing) and China (Ningxia)
  url: "http://glue.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Glue endpoint for China (Beijing) and China (Ningxia)
  url: "https://glue.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSGlue.BatchCreatePartition:
    post:
      description: Creates one or more partitions in a batch operation.
      operationId: BatchCreatePartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchCreatePartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreatePartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreatePartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchDeleteConnection:
    post:
      description: Deletes a list of connection definitions from the Data Catalog.
      operationId: BatchDeleteConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchDeleteConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchDeletePartition:
    post:
      description: Deletes one or more partitions in a batch operation.
      operationId: BatchDeletePartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchDeletePartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeletePartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeletePartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchDeleteTable:
    post:
      description: "<p>Deletes multiple tables at once.</p> <note> <p>After completing\
        \ this operation, you no longer have access to the table versions and partitions\
        \ that belong to the deleted table. Glue deletes these \"orphaned\" resources\
        \ asynchronously in a timely manner, at the discretion of the service.</p>\
        \ <p>To ensure the immediate deletion of all related resources, before calling\
        \ <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>,\
        \ and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to\
        \ delete any resources that belong to the table.</p> </note>"
      operationId: BatchDeleteTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchDeleteTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchDeleteTableVersion:
    post:
      description: Deletes a specified batch of versions of a table.
      operationId: BatchDeleteTableVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchDeleteTableVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteTableVersionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteTableVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetBlueprints:
    post:
      description: Retrieves information about a list of blueprints.
      operationId: BatchGetBlueprints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetBlueprints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetBlueprintsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetBlueprintsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetCrawlers:
    post:
      description: "Returns a list of resource metadata for a given list of crawler\
        \ names. After calling the <code>ListCrawlers</code> operation, you can call\
        \ this operation to access the data to which you have been granted permissions.\
        \ This operation supports all IAM permissions, including permission conditions\
        \ that uses tags."
      operationId: BatchGetCrawlers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetCrawlers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetCrawlersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetCrawlersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetCustomEntityTypes:
    post:
      description: Retrieves the details for the custom patterns specified by a list
        of names.
      operationId: BatchGetCustomEntityTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetCustomEntityTypes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetCustomEntityTypesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetCustomEntityTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetDataQualityResult:
    post:
      description: Retrieves a list of data quality results for the specified result
        IDs.
      operationId: BatchGetDataQualityResult
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetDataQualityResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetDataQualityResultRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetDataQualityResultResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetDevEndpoints:
    post:
      description: "Returns a list of resource metadata for a given list of development\
        \ endpoint names. After calling the <code>ListDevEndpoints</code> operation,\
        \ you can call this operation to access the data to which you have been granted\
        \ permissions. This operation supports all IAM permissions, including permission\
        \ conditions that uses tags."
      operationId: BatchGetDevEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetDevEndpoints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetDevEndpointsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetDevEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetJobs:
    post:
      description: "Returns a list of resource metadata for a given list of job names.\
        \ After calling the <code>ListJobs</code> operation, you can call this operation\
        \ to access the data to which you have been granted permissions. This operation\
        \ supports all IAM permissions, including permission conditions that uses\
        \ tags. "
      operationId: BatchGetJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetPartition:
    post:
      description: Retrieves partitions in a batch request.
      operationId: BatchGetPartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetPartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetPartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetPartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetTriggers:
    post:
      description: "Returns a list of resource metadata for a given list of trigger\
        \ names. After calling the <code>ListTriggers</code> operation, you can call\
        \ this operation to access the data to which you have been granted permissions.\
        \ This operation supports all IAM permissions, including permission conditions\
        \ that uses tags."
      operationId: BatchGetTriggers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetTriggers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetTriggersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetTriggersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchGetWorkflows:
    post:
      description: "Returns a list of resource metadata for a given list of workflow\
        \ names. After calling the <code>ListWorkflows</code> operation, you can call\
        \ this operation to access the data to which you have been granted permissions.\
        \ This operation supports all IAM permissions, including permission conditions\
        \ that uses tags."
      operationId: BatchGetWorkflows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchGetWorkflows
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetWorkflowsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetWorkflowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchStopJobRun:
    post:
      description: Stops one or more job runs for a specified job definition.
      operationId: BatchStopJobRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchStopJobRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStopJobRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStopJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.BatchUpdatePartition:
    post:
      description: Updates one or more partitions in a batch operation.
      operationId: BatchUpdatePartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.BatchUpdatePartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdatePartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdatePartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CancelDataQualityRuleRecommendationRun:
    post:
      description: Cancels the specified recommendation run that was being used to
        generate rules.
      operationId: CancelDataQualityRuleRecommendationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CancelDataQualityRuleRecommendationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDataQualityRuleRecommendationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDataQualityRuleRecommendationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CancelDataQualityRulesetEvaluationRun:
    post:
      description: Cancels a run where a ruleset is being evaluated against a data
        source.
      operationId: CancelDataQualityRulesetEvaluationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CancelDataQualityRulesetEvaluationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDataQualityRulesetEvaluationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDataQualityRulesetEvaluationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CancelMLTaskRun:
    post:
      description: 'Cancels (stops) a task run. Machine learning task runs are asynchronous
        tasks that Glue runs on your behalf as part of various machine learning workflows.
        You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code>
        with a task run''s parent transform''s <code>TransformID</code> and the task
        run''s <code>TaskRunId</code>. '
      operationId: CancelMLTaskRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CancelMLTaskRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMLTaskRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelMLTaskRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CancelStatement:
    post:
      description: Cancels the statement.
      operationId: CancelStatement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CancelStatement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelStatementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelStatementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalSessionStateException'
          description: IllegalSessionStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CheckSchemaVersionValidity:
    post:
      description: "Validates the supplied schema. This call has no side effects,\
        \ it simply validates using the supplied schema using <code>DataFormat</code>\
        \ as the format. Since it does not take a schema set name, no compatibility\
        \ checks are performed."
      operationId: CheckSchemaVersionValidity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CheckSchemaVersionValidity
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSchemaVersionValidityInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSchemaVersionValidityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateBlueprint:
    post:
      description: Registers a blueprint with Glue.
      operationId: CreateBlueprint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateBlueprint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlueprintRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBlueprintResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateClassifier:
    post:
      description: "Creates a classifier in the user's account. This can be a <code>GrokClassifier</code>,\
        \ an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>,\
        \ depending on which field of the request is present."
      operationId: CreateClassifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateClassifier
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClassifierRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClassifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateConnection:
    post:
      description: Creates a connection definition in the Data Catalog.
      operationId: CreateConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateCrawler:
    post:
      description: "Creates a new crawler with specified targets, role, configuration,\
        \ and optional schedule. At least one crawl target must be specified, in the\
        \ <code>s3Targets</code> field, the <code>jdbcTargets</code> field, or the\
        \ <code>DynamoDBTargets</code> field."
      operationId: CreateCrawler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateCrawler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCrawlerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateCustomEntityType:
    post:
      description: <p>Creates a custom pattern that is used to detect sensitive data
        across the columns and rows of your structured data.</p> <p>Each custom pattern
        you create specifies a regular expression and an optional list of context
        words. If no context words are passed only a regular expression is checked.</p>
      operationId: CreateCustomEntityType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateCustomEntityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomEntityTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomEntityTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateDataQualityRuleset:
    post:
      description: "<p>Creates a data quality ruleset with DQDL rules applied to a\
        \ specified Glue table.</p> <p>You create the ruleset using the Data Quality\
        \ Definition Language (DQDL). For more information, see the Glue developer\
        \ guide.</p>"
      operationId: CreateDataQualityRuleset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateDataQualityRuleset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataQualityRulesetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataQualityRulesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateDatabase:
    post:
      description: Creates a new database in a Data Catalog.
      operationId: CreateDatabase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateDatabase
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederatedResourceAlreadyExistsException'
          description: FederatedResourceAlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateDevEndpoint:
    post:
      description: Creates a new development endpoint.
      operationId: CreateDevEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateDevEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDevEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateJob:
    post:
      description: Creates a new job definition.
      operationId: CreateJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateMLTransform:
    post:
      description: "<p>Creates an Glue machine learning transform. This operation\
        \ creates the transform and all the necessary parameters to train it.</p>\
        \ <p>Call this operation as the first step in the process of using a machine\
        \ learning transform (such as the <code>FindMatches</code> transform) for\
        \ deduplicating data. You can provide an optional <code>Description</code>,\
        \ in addition to the parameters that you want to use for your algorithm.</p>\
        \ <p>You must also specify certain parameters for the tasks that Glue runs\
        \ on your behalf as part of learning from your data and creating a high-quality\
        \ machine learning transform. These parameters include <code>Role</code>,\
        \ and optionally, <code>AllocatedCapacity</code>, <code>Timeout</code>, and\
        \ <code>MaxRetries</code>. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html\"\
        >Jobs</a>.</p>"
      operationId: CreateMLTransform
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateMLTransform
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMLTransformRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMLTransformResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreatePartition:
    post:
      description: Creates a new partition.
      operationId: CreatePartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreatePartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreatePartitionIndex:
    post:
      description: Creates a specified partition index in an existing table.
      operationId: CreatePartitionIndex
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreatePartitionIndex
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartitionIndexRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartitionIndexResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateRegistry:
    post:
      description: Creates a new registry which may be used to hold a collection of
        schemas.
      operationId: CreateRegistry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateRegistry
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateSchema:
    post:
      description: "<p>Creates a new schema set and registers the schema definition.\
        \ Returns an error if the schema set already exists without actually registering\
        \ the version.</p> <p>When the schema set is created, a version checkpoint\
        \ will be set to the first version. Compatibility mode \"DISABLED\" restricts\
        \ any additional schema versions from being added after the first schema version.\
        \ For all other compatibility modes, validation of compatibility settings\
        \ will be applied only from the second version onwards when the <code>RegisterSchemaVersion</code>\
        \ API is used.</p> <p>When this API is called without a <code>RegistryId</code>,\
        \ this will create an entry for a \"default-registry\" in the registry database\
        \ tables, if it is not already present.</p>"
      operationId: CreateSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateScript:
    post:
      description: Transforms a directed acyclic graph (DAG) into code.
      operationId: CreateScript
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateScript
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScriptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScriptResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateSecurityConfiguration:
    post:
      description: "Creates a new security configuration. A security configuration\
        \ is a set of security properties that can be used by Glue. You can use a\
        \ security configuration to encrypt data at rest. For information about using\
        \ security configurations in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html\"\
        >Encrypting Data Written by Crawlers, Jobs, and Development Endpoints</a>."
      operationId: CreateSecurityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateSecurityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecurityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateSession:
    post:
      description: Creates a new session.
      operationId: CreateSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateTable:
    post:
      description: Creates a new table definition in the Data Catalog.
      operationId: CreateTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateTrigger:
    post:
      description: Creates a new trigger.
      operationId: CreateTrigger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateTrigger
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTriggerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTriggerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateUserDefinedFunction:
    post:
      description: Creates a new function definition in the Data Catalog.
      operationId: CreateUserDefinedFunction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateUserDefinedFunction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDefinedFunctionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserDefinedFunctionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.CreateWorkflow:
    post:
      description: Creates a new workflow.
      operationId: CreateWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.CreateWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteBlueprint:
    post:
      description: Deletes an existing blueprint.
      operationId: DeleteBlueprint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteBlueprint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBlueprintRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBlueprintResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteClassifier:
    post:
      description: Removes a classifier from the Data Catalog.
      operationId: DeleteClassifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteClassifier
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClassifierRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClassifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForPartition:
    post:
      description: <p>Delete the partition column statistics of a column.</p> <p>The
        Identity and Access Management (IAM) permission required for this operation
        is <code>DeletePartition</code>.</p>
      operationId: DeleteColumnStatisticsForPartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteColumnStatisticsForPartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteColumnStatisticsForPartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteColumnStatisticsForPartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForTable:
    post:
      description: <p>Retrieves table statistics of columns.</p> <p>The Identity and
        Access Management (IAM) permission required for this operation is <code>DeleteTable</code>.</p>
      operationId: DeleteColumnStatisticsForTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteColumnStatisticsForTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteColumnStatisticsForTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteColumnStatisticsForTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteConnection:
    post:
      description: Deletes a connection from the Data Catalog.
      operationId: DeleteConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteCrawler:
    post:
      description: "Removes a specified crawler from the Glue Data Catalog, unless\
        \ the crawler state is <code>RUNNING</code>."
      operationId: DeleteCrawler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteCrawler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCrawlerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlerRunningException'
          description: CrawlerRunningException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerTransitioningException'
          description: SchedulerTransitioningException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteCustomEntityType:
    post:
      description: Deletes a custom pattern by specifying its name.
      operationId: DeleteCustomEntityType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteCustomEntityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomEntityTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomEntityTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteDataQualityRuleset:
    post:
      description: Deletes a data quality ruleset.
      operationId: DeleteDataQualityRuleset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteDataQualityRuleset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataQualityRulesetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataQualityRulesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteDatabase:
    post:
      description: "<p>Removes a specified database from a Data Catalog.</p> <note>\
        \ <p>After completing this operation, you no longer have access to the tables\
        \ (and all table versions and partitions that might belong to the tables)\
        \ and the user-defined functions in the deleted database. Glue deletes these\
        \ \"orphaned\" resources asynchronously in a timely manner, at the discretion\
        \ of the service.</p> <p>To ensure the immediate deletion of all related resources,\
        \ before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code>\
        \ or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or\
        \ <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>,\
        \ and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete\
        \ any resources that belong to the database.</p> </note>"
      operationId: DeleteDatabase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteDatabase
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatabaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteDevEndpoint:
    post:
      description: Deletes a specified development endpoint.
      operationId: DeleteDevEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteDevEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDevEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDevEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteJob:
    post:
      description: "Deletes a specified job definition. If the job definition is not\
        \ found, no exception is thrown."
      operationId: DeleteJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteMLTransform:
    post:
      description: "Deletes an Glue machine learning transform. Machine learning transforms\
        \ are a special type of transform that use machine learning to learn the details\
        \ of the transformation to be performed by learning from examples provided\
        \ by humans. These transformations are then saved by Glue. If you no longer\
        \ need a transform, you can delete it by calling <code>DeleteMLTransforms</code>.\
        \ However, any Glue jobs that still reference the deleted transform will no\
        \ longer succeed."
      operationId: DeleteMLTransform
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteMLTransform
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMLTransformRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMLTransformResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeletePartition:
    post:
      description: Deletes a specified partition.
      operationId: DeletePartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeletePartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeletePartitionIndex:
    post:
      description: Deletes a specified partition index from an existing table.
      operationId: DeletePartitionIndex
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeletePartitionIndex
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePartitionIndexRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePartitionIndexResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteRegistry:
    post:
      description: "Delete the entire registry including schema and all of its versions.\
        \ To get the status of the delete operation, you can call the <code>GetRegistry</code>\
        \ API after the asynchronous call. Deleting a registry will deactivate all\
        \ online operations for the registry such as the <code>UpdateRegistry</code>,\
        \ <code>CreateSchema</code>, <code>UpdateSchema</code>, and <code>RegisterSchemaVersion</code>\
        \ APIs. "
      operationId: DeleteRegistry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteRegistry
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRegistryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteResourcePolicy:
    post:
      description: Deletes a specified policy.
      operationId: DeleteResourcePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourcePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionCheckFailureException'
          description: ConditionCheckFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteSchema:
    post:
      description: "Deletes the entire schema set, including the schema set and all\
        \ of its versions. To get the status of the delete operation, you can call\
        \ <code>GetSchema</code> API after the asynchronous call. Deleting a registry\
        \ will deactivate all online operations for the schema, such as the <code>GetSchemaByDefinition</code>,\
        \ and <code>RegisterSchemaVersion</code> APIs."
      operationId: DeleteSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSchemaInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteSchemaVersions:
    post:
      description: "<p>Remove versions from the specified schema. A version number\
        \ or range may be supplied. If the compatibility mode forbids deleting of\
        \ a version that is necessary, such as BACKWARDS_FULL, an error is returned.\
        \ Calling the <code>GetSchemaVersions</code> API after this call will list\
        \ the status of the deleted versions.</p> <p>When the range of version numbers\
        \ contain check pointed version, the API will return a 409 conflict and will\
        \ not proceed with the deletion. You have to remove the checkpoint first using\
        \ the <code>DeleteSchemaCheckpoint</code> API before using this API.</p> <p>You\
        \ cannot use the <code>DeleteSchemaVersions</code> API to delete the first\
        \ schema version in the schema set. The first schema version can only be deleted\
        \ by the <code>DeleteSchema</code> API. This operation will also delete the\
        \ attached <code>SchemaVersionMetadata</code> under the schema versions. Hard\
        \ deletes will be enforced on the database.</p> <p>If the compatibility mode\
        \ forbids deleting of a version that is necessary, such as BACKWARDS_FULL,\
        \ an error is returned.</p>"
      operationId: DeleteSchemaVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteSchemaVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSchemaVersionsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteSecurityConfiguration:
    post:
      description: Deletes a specified security configuration.
      operationId: DeleteSecurityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteSecurityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSecurityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteSession:
    post:
      description: Deletes the session.
      operationId: DeleteSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalSessionStateException'
          description: IllegalSessionStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteTable:
    post:
      description: "<p>Removes a table definition from the Data Catalog.</p> <note>\
        \ <p>After completing this operation, you no longer have access to the table\
        \ versions and partitions that belong to the deleted table. Glue deletes these\
        \ \"orphaned\" resources asynchronously in a timely manner, at the discretion\
        \ of the service.</p> <p>To ensure the immediate deletion of all related resources,\
        \ before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code>\
        \ or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code>\
        \ or <code>BatchDeletePartition</code>, to delete any resources that belong\
        \ to the table.</p> </note>"
      operationId: DeleteTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteTableVersion:
    post:
      description: Deletes a specified version of a table.
      operationId: DeleteTableVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteTableVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTableVersionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTableVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteTrigger:
    post:
      description: "Deletes a specified trigger. If the trigger is not found, no exception\
        \ is thrown."
      operationId: DeleteTrigger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteTrigger
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTriggerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTriggerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteUserDefinedFunction:
    post:
      description: Deletes an existing function definition from the Data Catalog.
      operationId: DeleteUserDefinedFunction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteUserDefinedFunction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserDefinedFunctionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserDefinedFunctionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.DeleteWorkflow:
    post:
      description: Deletes a workflow.
      operationId: DeleteWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.DeleteWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetBlueprint:
    post:
      description: Retrieves the details of a blueprint.
      operationId: GetBlueprint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetBlueprint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBlueprintRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlueprintResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetBlueprintRun:
    post:
      description: Retrieves the details of a blueprint run.
      operationId: GetBlueprintRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetBlueprintRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBlueprintRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlueprintRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetBlueprintRuns:
    post:
      description: Retrieves the details of blueprint runs for a specified blueprint.
      operationId: GetBlueprintRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetBlueprintRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBlueprintRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlueprintRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetCatalogImportStatus:
    post:
      description: Retrieves the status of a migration operation.
      operationId: GetCatalogImportStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetCatalogImportStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCatalogImportStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogImportStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetClassifier:
    post:
      description: Retrieve a classifier by name.
      operationId: GetClassifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetClassifier
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClassifierRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClassifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetClassifiers:
    post:
      description: Lists all classifier objects in the Data Catalog.
      operationId: GetClassifiers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetClassifiers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClassifiersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClassifiersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetColumnStatisticsForPartition:
    post:
      description: <p>Retrieves partition statistics of columns.</p> <p>The Identity
        and Access Management (IAM) permission required for this operation is <code>GetPartition</code>.</p>
      operationId: GetColumnStatisticsForPartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetColumnStatisticsForPartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetColumnStatisticsForPartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetColumnStatisticsForPartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetColumnStatisticsForTable:
    post:
      description: <p>Retrieves table statistics of columns.</p> <p>The Identity and
        Access Management (IAM) permission required for this operation is <code>GetTable</code>.</p>
      operationId: GetColumnStatisticsForTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetColumnStatisticsForTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetColumnStatisticsForTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetColumnStatisticsForTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetConnection:
    post:
      description: Retrieves a connection definition from the Data Catalog.
      operationId: GetConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetConnections:
    post:
      description: Retrieves a list of connection definitions from the Data Catalog.
      operationId: GetConnections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetConnections
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetCrawler:
    post:
      description: Retrieves metadata for a specified crawler.
      operationId: GetCrawler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetCrawler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCrawlerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetCrawlerMetrics:
    post:
      description: Retrieves metrics about specified crawlers.
      operationId: GetCrawlerMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetCrawlerMetrics
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCrawlerMetricsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCrawlerMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetCrawlers:
    post:
      description: Retrieves metadata for all crawlers defined in the customer account.
      operationId: GetCrawlers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetCrawlers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCrawlersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCrawlersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetCustomEntityType:
    post:
      description: Retrieves the details of a custom pattern by specifying its name.
      operationId: GetCustomEntityType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetCustomEntityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCustomEntityTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomEntityTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDataCatalogEncryptionSettings:
    post:
      description: Retrieves the security configuration for a specified catalog.
      operationId: GetDataCatalogEncryptionSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDataCatalogEncryptionSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataCatalogEncryptionSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataCatalogEncryptionSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDataQualityResult:
    post:
      description: Retrieves the result of a data quality rule evaluation.
      operationId: GetDataQualityResult
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDataQualityResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataQualityResultRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataQualityResultResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDataQualityRuleRecommendationRun:
    post:
      description: Gets the specified recommendation run that was used to generate
        rules.
      operationId: GetDataQualityRuleRecommendationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDataQualityRuleRecommendationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataQualityRuleRecommendationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataQualityRuleRecommendationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDataQualityRuleset:
    post:
      description: Returns an existing ruleset by identifier or name.
      operationId: GetDataQualityRuleset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDataQualityRuleset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataQualityRulesetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataQualityRulesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDataQualityRulesetEvaluationRun:
    post:
      description: Retrieves a specific run where a ruleset is evaluated against a
        data source.
      operationId: GetDataQualityRulesetEvaluationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDataQualityRulesetEvaluationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataQualityRulesetEvaluationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataQualityRulesetEvaluationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDatabase:
    post:
      description: Retrieves the definition of a specified database.
      operationId: GetDatabase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDatabase
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDatabases:
    post:
      description: Retrieves all databases defined in a given Data Catalog.
      operationId: GetDatabases
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDatabases
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDatabasesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabasesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDataflowGraph:
    post:
      description: 'Transforms a Python script into a directed acyclic graph (DAG). '
      operationId: GetDataflowGraph
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDataflowGraph
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataflowGraphRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataflowGraphResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDevEndpoint:
    post:
      description: "<p>Retrieves information about a specified development endpoint.</p>\
        \ <note> <p>When you create a development endpoint in a virtual private cloud\
        \ (VPC), Glue returns only a private IP address, and the public IP address\
        \ field is not populated. When you create a non-VPC development endpoint,\
        \ Glue returns only a public IP address.</p> </note>"
      operationId: GetDevEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDevEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDevEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetDevEndpoints:
    post:
      description: "<p>Retrieves all the development endpoints in this Amazon Web\
        \ Services account.</p> <note> <p>When you create a development endpoint in\
        \ a virtual private cloud (VPC), Glue returns only a private IP address and\
        \ the public IP address field is not populated. When you create a non-VPC\
        \ development endpoint, Glue returns only a public IP address.</p> </note>"
      operationId: GetDevEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetDevEndpoints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDevEndpointsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetJob:
    post:
      description: Retrieves an existing job definition.
      operationId: GetJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetJobBookmark:
    post:
      description: "<p>Returns information on a job bookmark entry.</p> <p>For more\
        \ information about enabling and using job bookmarks, see:</p> <ul> <li> <p>\
        \ <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-continuations.html\"\
        >Tracking processed data using job bookmarks</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
        >Job parameters used by Glue</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html#aws-glue-api-jobs-job-Job\"\
        >Job structure</a> </p> </li> </ul>"
      operationId: GetJobBookmark
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetJobBookmark
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobBookmarkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobBookmarkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetJobRun:
    post:
      description: Retrieves the metadata for a given job run.
      operationId: GetJobRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetJobRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetJobRuns:
    post:
      description: Retrieves metadata for all runs of a given job definition.
      operationId: GetJobRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetJobRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetJobs:
    post:
      description: Retrieves all current job definitions.
      operationId: GetJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetMLTaskRun:
    post:
      description: Gets details for a specific task run on a machine learning transform.
        Machine learning task runs are asynchronous tasks that Glue runs on your behalf
        as part of various machine learning workflows. You can check the stats of
        any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code>
        and its parent transform's <code>TransformID</code>.
      operationId: GetMLTaskRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetMLTaskRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMLTaskRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMLTaskRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetMLTaskRuns:
    post:
      description: "<p>Gets a list of runs for a machine learning transform. Machine\
        \ learning task runs are asynchronous tasks that Glue runs on your behalf\
        \ as part of various machine learning workflows. You can get a sortable, filterable\
        \ list of machine learning task runs by calling <code>GetMLTaskRuns</code>\
        \ with their parent transform's <code>TransformID</code> and other optional\
        \ parameters as documented in this section.</p> <p>This operation returns\
        \ a list of historic runs and must be paginated.</p>"
      operationId: GetMLTaskRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetMLTaskRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMLTaskRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMLTaskRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetMLTransform:
    post:
      description: Gets an Glue machine learning transform artifact and all its corresponding
        metadata. Machine learning transforms are a special type of transform that
        use machine learning to learn the details of the transformation to be performed
        by learning from examples provided by humans. These transformations are then
        saved by Glue. You can retrieve their metadata by calling <code>GetMLTransform</code>.
      operationId: GetMLTransform
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetMLTransform
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMLTransformRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMLTransformResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetMLTransforms:
    post:
      description: "Gets a sortable, filterable list of existing Glue machine learning\
        \ transforms. Machine learning transforms are a special type of transform\
        \ that use machine learning to learn the details of the transformation to\
        \ be performed by learning from examples provided by humans. These transformations\
        \ are then saved by Glue, and you can retrieve their metadata by calling <code>GetMLTransforms</code>."
      operationId: GetMLTransforms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetMLTransforms
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMLTransformsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMLTransformsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetMapping:
    post:
      description: Creates mappings.
      operationId: GetMapping
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetMapping
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMappingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetPartition:
    post:
      description: Retrieves information about a specified partition.
      operationId: GetPartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetPartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetPartitionIndexes:
    post:
      description: Retrieves the partition indexes associated with a table.
      operationId: GetPartitionIndexes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetPartitionIndexes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPartitionIndexesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartitionIndexesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetPartitions:
    post:
      description: Retrieves information about the partitions in a table.
      operationId: GetPartitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetPartitions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPartitionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetPlan:
    post:
      description: Gets code to perform a specified mapping.
      operationId: GetPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetPlan
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPlanRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlanResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetRegistry:
    post:
      description: Describes the specified registry in detail.
      operationId: GetRegistry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetRegistry
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegistryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetResourcePolicies:
    post:
      description: "<p>Retrieves the resource policies set on individual resources\
        \ by Resource Access Manager during cross-account permission grants. Also\
        \ retrieves the Data Catalog resource policy.</p> <p>If you enabled metadata\
        \ encryption in Data Catalog settings, and you do not have permission on the\
        \ KMS key, the operation can't return the Data Catalog resource policy.</p>"
      operationId: GetResourcePolicies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetResourcePolicies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcePoliciesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetResourcePolicy:
    post:
      description: Retrieves a specified resource policy.
      operationId: GetResourcePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSchema:
    post:
      description: Describes the specified schema in detail.
      operationId: GetSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSchemaInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSchemaByDefinition:
    post:
      description: "Retrieves a schema by the <code>SchemaDefinition</code>. The schema\
        \ definition is sent to the Schema Registry, canonicalized, and hashed. If\
        \ the hash is matched within the scope of the <code>SchemaName</code> or ARN\
        \ (or the default registry, if none is supplied), that schema’s metadata is\
        \ returned. Otherwise, a 404 or NotFound error is returned. Schema versions\
        \ in <code>Deleted</code> statuses will not be included in the results."
      operationId: GetSchemaByDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSchemaByDefinition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSchemaByDefinitionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaByDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSchemaVersion:
    post:
      description: Get the specified schema by its unique ID assigned when a version
        of the schema is created or registered. Schema versions in Deleted status
        will not be included in the results.
      operationId: GetSchemaVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSchemaVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSchemaVersionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSchemaVersionsDiff:
    post:
      description: <p>Fetches the schema version difference in the specified difference
        type between two stored schema versions in the Schema Registry.</p> <p>This
        API allows you to compare two schema versions between two schema definitions
        under the same schema.</p>
      operationId: GetSchemaVersionsDiff
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSchemaVersionsDiff
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSchemaVersionsDiffInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaVersionsDiffResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSecurityConfiguration:
    post:
      description: Retrieves a specified security configuration.
      operationId: GetSecurityConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSecurityConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSecurityConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSecurityConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSecurityConfigurations:
    post:
      description: Retrieves a list of all security configurations.
      operationId: GetSecurityConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSecurityConfigurations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSecurityConfigurationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSecurityConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetSession:
    post:
      description: Retrieves the session.
      operationId: GetSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetStatement:
    post:
      description: Retrieves the statement.
      operationId: GetStatement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetStatement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStatementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalSessionStateException'
          description: IllegalSessionStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTable:
    post:
      description: Retrieves the <code>Table</code> definition in a Data Catalog for
        a specified table.
      operationId: GetTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTableVersion:
    post:
      description: Retrieves a specified version of a table.
      operationId: GetTableVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTableVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTableVersionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTableVersions:
    post:
      description: Retrieves a list of strings that identify available versions of
        a specified table.
      operationId: GetTableVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTableVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTableVersionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTableVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTables:
    post:
      description: Retrieves the definitions of some or all of the tables in a given
        <code>Database</code>.
      operationId: GetTables
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTables
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTablesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTablesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTags:
    post:
      description: Retrieves a list of tags associated with a resource.
      operationId: GetTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTrigger:
    post:
      description: Retrieves the definition of a trigger.
      operationId: GetTrigger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTrigger
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTriggerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTriggerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetTriggers:
    post:
      description: Gets all the triggers associated with a job.
      operationId: GetTriggers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetTriggers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTriggersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTriggersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetUnfilteredPartitionMetadata:
    post:
      description: "<p>Retrieves partition metadata from the Data Catalog that contains\
        \ unfiltered metadata.</p> <p>For IAM authorization, the public IAM action\
        \ associated with this API is <code>glue:GetPartition</code>.</p>"
      operationId: GetUnfilteredPartitionMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetUnfilteredPartitionMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUnfilteredPartitionMetadataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnfilteredPartitionMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTypeMismatchException'
          description: PermissionTypeMismatchException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetUnfilteredPartitionsMetadata:
    post:
      description: "<p>Retrieves partition metadata from the Data Catalog that contains\
        \ unfiltered metadata.</p> <p>For IAM authorization, the public IAM action\
        \ associated with this API is <code>glue:GetPartitions</code>.</p>"
      operationId: GetUnfilteredPartitionsMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetUnfilteredPartitionsMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUnfilteredPartitionsMetadataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnfilteredPartitionsMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTypeMismatchException'
          description: PermissionTypeMismatchException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetUnfilteredTableMetadata:
    post:
      description: "<p>Retrieves table metadata from the Data Catalog that contains\
        \ unfiltered metadata.</p> <p>For IAM authorization, the public IAM action\
        \ associated with this API is <code>glue:GetTable</code>.</p>"
      operationId: GetUnfilteredTableMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetUnfilteredTableMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUnfilteredTableMetadataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnfilteredTableMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTypeMismatchException'
          description: PermissionTypeMismatchException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceException'
          description: FederationSourceException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationSourceRetryableException'
          description: FederationSourceRetryableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetUserDefinedFunction:
    post:
      description: Retrieves a specified function definition from the Data Catalog.
      operationId: GetUserDefinedFunction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetUserDefinedFunction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserDefinedFunctionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDefinedFunctionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetUserDefinedFunctions:
    post:
      description: Retrieves multiple function definitions from the Data Catalog.
      operationId: GetUserDefinedFunctions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetUserDefinedFunctions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserDefinedFunctionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDefinedFunctionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetWorkflow:
    post:
      description: Retrieves resource metadata for a workflow.
      operationId: GetWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetWorkflowRun:
    post:
      description: 'Retrieves the metadata for a given workflow run. '
      operationId: GetWorkflowRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetWorkflowRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkflowRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetWorkflowRunProperties:
    post:
      description: Retrieves the workflow run properties which were set during the
        run.
      operationId: GetWorkflowRunProperties
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetWorkflowRunProperties
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkflowRunPropertiesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowRunPropertiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.GetWorkflowRuns:
    post:
      description: Retrieves metadata for all runs of a given workflow.
      operationId: GetWorkflowRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.GetWorkflowRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkflowRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ImportCatalogToGlue:
    post:
      description: Imports an existing Amazon Athena Data Catalog to Glue.
      operationId: ImportCatalogToGlue
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ImportCatalogToGlue
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportCatalogToGlueRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCatalogToGlueResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListBlueprints:
    post:
      description: Lists all the blueprint names in an account.
      operationId: ListBlueprints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListBlueprints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBlueprintsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlueprintsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListCrawlers:
    post:
      description: "<p>Retrieves the names of all crawler resources in this Amazon\
        \ Web Services account, or the resources with the specified tag. This operation\
        \ allows you to see which resources are available in your account, and their\
        \ names.</p> <p>This operation takes the optional <code>Tags</code> field,\
        \ which you can use as a filter on the response so that tagged resources can\
        \ be retrieved as a group. If you choose to use tags filtering, only resources\
        \ with the tag are retrieved.</p>"
      operationId: ListCrawlers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListCrawlers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCrawlersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCrawlersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListCrawls:
    post:
      description: "<p>Returns all the crawls of a specified crawler. Returns only\
        \ the crawls that have occurred since the launch date of the crawler history\
        \ feature, and only retains up to 12 months of crawls. Older crawls will not\
        \ be returned.</p> <p>You may use this API to:</p> <ul> <li> <p>Retrive all\
        \ the crawls of a specified crawler.</p> </li> <li> <p>Retrieve all the crawls\
        \ of a specified crawler within a limited count.</p> </li> <li> <p>Retrieve\
        \ all the crawls of a specified crawler in a specific time range.</p> </li>\
        \ <li> <p>Retrieve all the crawls of a specified crawler with a particular\
        \ state, crawl ID, or DPU hour value.</p> </li> </ul>"
      operationId: ListCrawls
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListCrawls
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCrawlsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCrawlsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListCustomEntityTypes:
    post:
      description: Lists all the custom patterns that have been created.
      operationId: ListCustomEntityTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListCustomEntityTypes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCustomEntityTypesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomEntityTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListDataQualityResults:
    post:
      description: Returns all data quality execution results for your account.
      operationId: ListDataQualityResults
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListDataQualityResults
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataQualityResultsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataQualityResultsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListDataQualityRuleRecommendationRuns:
    post:
      description: Lists the recommendation runs meeting the filter criteria.
      operationId: ListDataQualityRuleRecommendationRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListDataQualityRuleRecommendationRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataQualityRuleRecommendationRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataQualityRuleRecommendationRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListDataQualityRulesetEvaluationRuns:
    post:
      description: "Lists all the runs meeting the filter criteria, where a ruleset\
        \ is evaluated against a data source."
      operationId: ListDataQualityRulesetEvaluationRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListDataQualityRulesetEvaluationRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataQualityRulesetEvaluationRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataQualityRulesetEvaluationRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListDataQualityRulesets:
    post:
      description: Returns a paginated list of rulesets for the specified list of
        Glue tables.
      operationId: ListDataQualityRulesets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListDataQualityRulesets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataQualityRulesetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataQualityRulesetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListDevEndpoints:
    post:
      description: "<p>Retrieves the names of all <code>DevEndpoint</code> resources\
        \ in this Amazon Web Services account, or the resources with the specified\
        \ tag. This operation allows you to see which resources are available in your\
        \ account, and their names.</p> <p>This operation takes the optional <code>Tags</code>\
        \ field, which you can use as a filter on the response so that tagged resources\
        \ can be retrieved as a group. If you choose to use tags filtering, only resources\
        \ with the tag are retrieved.</p>"
      operationId: ListDevEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListDevEndpoints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevEndpointsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListJobs:
    post:
      description: "<p>Retrieves the names of all job resources in this Amazon Web\
        \ Services account, or the resources with the specified tag. This operation\
        \ allows you to see which resources are available in your account, and their\
        \ names.</p> <p>This operation takes the optional <code>Tags</code> field,\
        \ which you can use as a filter on the response so that tagged resources can\
        \ be retrieved as a group. If you choose to use tags filtering, only resources\
        \ with the tag are retrieved.</p>"
      operationId: ListJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListMLTransforms:
    post:
      description: " Retrieves a sortable, filterable list of existing Glue machine\
        \ learning transforms in this Amazon Web Services account, or the resources\
        \ with the specified tag. This operation takes the optional <code>Tags</code>\
        \ field, which you can use as a filter of the responses so that tagged resources\
        \ can be retrieved as a group. If you choose to use tag filtering, only resources\
        \ with the tags are retrieved. "
      operationId: ListMLTransforms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListMLTransforms
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMLTransformsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMLTransformsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListRegistries:
    post:
      description: "Returns a list of registries that you have created, with minimal\
        \ registry information. Registries in the <code>Deleting</code> status will\
        \ not be included in the results. Empty results will be returned if there\
        \ are no registries available."
      operationId: ListRegistries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListRegistries
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRegistriesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListSchemaVersions:
    post:
      description: "Returns a list of schema versions that you have created, with\
        \ minimal information. Schema versions in Deleted status will not be included\
        \ in the results. Empty results will be returned if there are no schema versions\
        \ available."
      operationId: ListSchemaVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListSchemaVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSchemaVersionsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListSchemas:
    post:
      description: "<p>Returns a list of schemas with minimal details. Schemas in\
        \ Deleting status will not be included in the results. Empty results will\
        \ be returned if there are no schemas available.</p> <p>When the <code>RegistryId</code>\
        \ is not provided, all the schemas across registries will be part of the API\
        \ response.</p>"
      operationId: ListSchemas
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListSchemas
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSchemasInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListSessions:
    post:
      description: Retrieve a list of sessions.
      operationId: ListSessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListSessions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSessionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListStatements:
    post:
      description: Lists statements for the session.
      operationId: ListStatements
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListStatements
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStatementsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStatementsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalSessionStateException'
          description: IllegalSessionStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListTriggers:
    post:
      description: "<p>Retrieves the names of all trigger resources in this Amazon\
        \ Web Services account, or the resources with the specified tag. This operation\
        \ allows you to see which resources are available in your account, and their\
        \ names.</p> <p>This operation takes the optional <code>Tags</code> field,\
        \ which you can use as a filter on the response so that tagged resources can\
        \ be retrieved as a group. If you choose to use tags filtering, only resources\
        \ with the tag are retrieved.</p>"
      operationId: ListTriggers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListTriggers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTriggersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ListWorkflows:
    post:
      description: Lists names of workflows created in the account.
      operationId: ListWorkflows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ListWorkflows
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkflowsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.PutDataCatalogEncryptionSettings:
    post:
      description: "Sets the security configuration for a specified catalog. After\
        \ the configuration has been set, the specified encryption is applied to every\
        \ catalog write thereafter."
      operationId: PutDataCatalogEncryptionSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.PutDataCatalogEncryptionSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataCatalogEncryptionSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataCatalogEncryptionSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.PutResourcePolicy:
    post:
      description: Sets the Data Catalog resource policy for access control.
      operationId: PutResourcePolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.PutResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionCheckFailureException'
          description: ConditionCheckFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.PutSchemaVersionMetadata:
    post:
      description: Puts the metadata key value pair for a specified schema version
        ID. A maximum of 10 key value pairs will be allowed per schema version. They
        can be added over one or more calls.
      operationId: PutSchemaVersionMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.PutSchemaVersionMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSchemaVersionMetadataInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSchemaVersionMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.PutWorkflowRunProperties:
    post:
      description: "Puts the specified workflow run properties for the given workflow\
        \ run. If a property already exists for the specified run, then it overrides\
        \ the value otherwise adds the property to existing properties."
      operationId: PutWorkflowRunProperties
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.PutWorkflowRunProperties
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWorkflowRunPropertiesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutWorkflowRunPropertiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.QuerySchemaVersionMetadata:
    post:
      description: 'Queries for the schema version metadata information. '
      operationId: QuerySchemaVersionMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.QuerySchemaVersionMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySchemaVersionMetadataInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySchemaVersionMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.RegisterSchemaVersion:
    post:
      description: "<p>Adds a new version to the existing schema. Returns an error\
        \ if new version of schema does not meet the compatibility requirements of\
        \ the schema set. This API will not create a new schema set and will return\
        \ a 404 error if the schema set is not already present in the Schema Registry.</p>\
        \ <p>If this is the first schema definition to be registered in the Schema\
        \ Registry, this API will store the schema version and return immediately.\
        \ Otherwise, this call has the potential to run longer than other operations\
        \ due to compatibility modes. You can call the <code>GetSchemaVersion</code>\
        \ API with the <code>SchemaVersionId</code> to check compatibility modes.</p>\
        \ <p>If the same schema definition is already stored in Schema Registry as\
        \ a version, the schema ID of the existing schema is returned to the caller.</p>"
      operationId: RegisterSchemaVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.RegisterSchemaVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSchemaVersionInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterSchemaVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.RemoveSchemaVersionMetadata:
    post:
      description: Removes a key value pair from the schema version metadata for the
        specified schema version ID.
      operationId: RemoveSchemaVersionMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.RemoveSchemaVersionMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveSchemaVersionMetadataInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveSchemaVersionMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ResetJobBookmark:
    post:
      description: "<p>Resets a bookmark entry.</p> <p>For more information about\
        \ enabling and using job bookmarks, see:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-continuations.html\"\
        >Tracking processed data using job bookmarks</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
        >Job parameters used by Glue</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html#aws-glue-api-jobs-job-Job\"\
        >Job structure</a> </p> </li> </ul>"
      operationId: ResetJobBookmark
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ResetJobBookmark
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetJobBookmarkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetJobBookmarkResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.ResumeWorkflowRun:
    post:
      description: Restarts selected nodes of a previous partially completed workflow
        run and resumes the workflow run. The selected nodes and all nodes that are
        downstream from the selected nodes are run.
      operationId: ResumeWorkflowRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.ResumeWorkflowRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeWorkflowRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeWorkflowRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentRunsExceededException'
          description: ConcurrentRunsExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalWorkflowStateException'
          description: IllegalWorkflowStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.RunStatement:
    post:
      description: Executes the statement.
      operationId: RunStatement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.RunStatement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunStatementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunStatementResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalSessionStateException'
          description: IllegalSessionStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.SearchTables:
    post:
      description: "<p>Searches a set of tables based on properties in the table metadata\
        \ as well as on the parent database. You can search against text or filter\
        \ conditions. </p> <p>You can only get tables that you have access to based\
        \ on the security policies defined in Lake Formation. You need at least a\
        \ read-only access to the table for it to be returned. If you do not have\
        \ access to all the columns in the table, these columns will not be searched\
        \ against when returning the list of tables back to you. If you have access\
        \ to the columns but not the data in the columns, those columns and the associated\
        \ metadata for those columns will be included in the search. </p>"
      operationId: SearchTables
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.SearchTables
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTablesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTablesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartBlueprintRun:
    post:
      description: Starts a new run of the specified blueprint.
      operationId: StartBlueprintRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartBlueprintRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartBlueprintRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBlueprintRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalBlueprintStateException'
          description: IllegalBlueprintStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartCrawler:
    post:
      description: "Starts a crawl using the specified crawler, regardless of what\
        \ is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\"\
        >CrawlerRunningException</a>."
      operationId: StartCrawler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartCrawler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCrawlerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlerRunningException'
          description: CrawlerRunningException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartCrawlerSchedule:
    post:
      description: "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>,\
        \ unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>."
      operationId: StartCrawlerSchedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartCrawlerSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCrawlerScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCrawlerScheduleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerRunningException'
          description: SchedulerRunningException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerTransitioningException'
          description: SchedulerTransitioningException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoScheduleException'
          description: NoScheduleException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartDataQualityRuleRecommendationRun:
    post:
      description: Starts a recommendation run that is used to generate rules when
        you don't know what rules to write. Glue Data Quality analyzes the data and
        comes up with recommendations for a potential ruleset. You can then triage
        the ruleset and modify the generated ruleset to your liking.
      operationId: StartDataQualityRuleRecommendationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartDataQualityRuleRecommendationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDataQualityRuleRecommendationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDataQualityRuleRecommendationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartDataQualityRulesetEvaluationRun:
    post:
      description: "Once you have a ruleset definition (either recommended or your\
        \ own), you call this operation to evaluate the ruleset against a data source\
        \ (Glue table). The evaluation computes results which you can retrieve with\
        \ the <code>GetDataQualityResult</code> API."
      operationId: StartDataQualityRulesetEvaluationRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartDataQualityRulesetEvaluationRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDataQualityRulesetEvaluationRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDataQualityRulesetEvaluationRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartExportLabelsTaskRun:
    post:
      description: "Begins an asynchronous task to export all labeled data for a particular\
        \ transform. This task is the only label-related API call that is not part\
        \ of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code>\
        \ when you want to work with all of your existing labels at the same time,\
        \ such as when you want to remove or change labels that were previously submitted\
        \ as truth. This API operation accepts the <code>TransformId</code> whose\
        \ labels you want to export and an Amazon Simple Storage Service (Amazon S3)\
        \ path to export the labels to. The operation returns a <code>TaskRunId</code>.\
        \ You can check on the status of your task run by calling the <code>GetMLTaskRun</code>\
        \ API."
      operationId: StartExportLabelsTaskRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartExportLabelsTaskRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExportLabelsTaskRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExportLabelsTaskRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartImportLabelsTaskRun:
    post:
      description: "<p>Enables you to provide additional labels (examples of truth)\
        \ to be used to teach the machine learning transform and improve its quality.\
        \ This API operation is generally used as part of the active learning workflow\
        \ that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call\
        \ and that ultimately results in improving the quality of your machine learning\
        \ transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code>\
        \ finishes, Glue machine learning will have generated a series of questions\
        \ for humans to answer. (Answering these questions is often called 'labeling'\
        \ in the machine learning workflows). In the case of the <code>FindMatches</code>\
        \ transform, these questions are of the form, “What is the correct way to\
        \ group these rows together into groups composed entirely of matching records?”\
        \ After the labeling process is finished, users upload their answers/labels\
        \ with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code>\
        \ finishes, all future runs of the machine learning transform use the new\
        \ and improved labels and perform a higher-quality transformation.</p> <p>By\
        \ default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns\
        \ from and combines all labels that you upload unless you set <code>Replace</code>\
        \ to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code>\
        \ deletes and forgets all previously uploaded labels and learns only from\
        \ the exact set that you upload. Replacing labels can be helpful if you realize\
        \ that you previously uploaded incorrect labels, and you believe that they\
        \ are having a negative effect on your transform quality.</p> <p>You can check\
        \ on the status of your task run by calling the <code>GetMLTaskRun</code>\
        \ operation. </p>"
      operationId: StartImportLabelsTaskRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartImportLabelsTaskRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartImportLabelsTaskRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartImportLabelsTaskRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartJobRun:
    post:
      description: Starts a job run using a job definition.
      operationId: StartJobRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartJobRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartJobRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentRunsExceededException'
          description: ConcurrentRunsExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartMLEvaluationTaskRun:
    post:
      description: "<p>Starts a task to estimate the quality of the transform. </p>\
        \ <p>When you provide label sets as examples of truth, Glue machine learning\
        \ uses some of those examples to learn from them. The rest of the labels are\
        \ used as a test to estimate quality.</p> <p>Returns a unique identifier for\
        \ the run. You can call <code>GetMLTaskRun</code> to get more information\
        \ about the stats of the <code>EvaluationTaskRun</code>.</p>"
      operationId: StartMLEvaluationTaskRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartMLEvaluationTaskRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMLEvaluationTaskRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMLEvaluationTaskRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentRunsExceededException'
          description: ConcurrentRunsExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLTransformNotReadyException'
          description: MLTransformNotReadyException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartMLLabelingSetGenerationTaskRun:
    post:
      description: "<p>Starts the active learning workflow for your machine learning\
        \ transform to improve the transform's quality by generating label sets and\
        \ adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code>\
        \ finishes, Glue will have generated a \"labeling set\" or a set of questions\
        \ for humans to answer.</p> <p>In the case of the <code>FindMatches</code>\
        \ transform, these questions are of the form, “What is the correct way to\
        \ group these rows together into groups composed entirely of matching records?”\
        \ </p> <p>After the labeling process is finished, you can upload your labels\
        \ with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code>\
        \ finishes, all future runs of the machine learning transform will use the\
        \ new and improved labels and perform a higher-quality transformation.</p>"
      operationId: StartMLLabelingSetGenerationTaskRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartMLLabelingSetGenerationTaskRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMLLabelingSetGenerationTaskRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMLLabelingSetGenerationTaskRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentRunsExceededException'
          description: ConcurrentRunsExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartTrigger:
    post:
      description: Starts an existing trigger. See <a href="https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html">Triggering
        Jobs</a> for information about how different types of trigger are started.
      operationId: StartTrigger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartTrigger
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTriggerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTriggerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentRunsExceededException'
          description: ConcurrentRunsExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StartWorkflowRun:
    post:
      description: Starts a new run of the specified workflow.
      operationId: StartWorkflowRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StartWorkflowRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkflowRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartWorkflowRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentRunsExceededException'
          description: ConcurrentRunsExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StopCrawler:
    post:
      description: "If the specified crawler is running, stops the crawl."
      operationId: StopCrawler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StopCrawler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopCrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopCrawlerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlerNotRunningException'
          description: CrawlerNotRunningException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlerStoppingException'
          description: CrawlerStoppingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StopCrawlerSchedule:
    post:
      description: "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>,\
        \ but does not stop the crawler if it is already running."
      operationId: StopCrawlerSchedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StopCrawlerSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopCrawlerScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopCrawlerScheduleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerNotRunningException'
          description: SchedulerNotRunningException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerTransitioningException'
          description: SchedulerTransitioningException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StopSession:
    post:
      description: Stops the session.
      operationId: StopSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StopSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalSessionStateException'
          description: IllegalSessionStateException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StopTrigger:
    post:
      description: Stops a specified trigger.
      operationId: StopTrigger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StopTrigger
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTriggerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTriggerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.StopWorkflowRun:
    post:
      description: Stops the execution of the specified workflow run.
      operationId: StopWorkflowRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.StopWorkflowRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopWorkflowRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopWorkflowRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalWorkflowStateException'
          description: IllegalWorkflowStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.TagResource:
    post:
      description: "Adds tags to a resource. A tag is a label you can assign to an\
        \ Amazon Web Services resource. In Glue, you can tag only certain resources.\
        \ For information about what resources you can tag, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\"\
        >Amazon Web Services Tags in Glue</a>."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UntagResource:
    post:
      description: Removes tags from a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateBlueprint:
    post:
      description: Updates a registered blueprint.
      operationId: UpdateBlueprint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateBlueprint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlueprintRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBlueprintResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalBlueprintStateException'
          description: IllegalBlueprintStateException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateClassifier:
    post:
      description: "Modifies an existing classifier (a <code>GrokClassifier</code>,\
        \ an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>,\
        \ depending on which field is present)."
      operationId: UpdateClassifier
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateClassifier
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClassifierRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClassifierResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForPartition:
    post:
      description: <p>Creates or updates partition statistics of columns.</p> <p>The
        Identity and Access Management (IAM) permission required for this operation
        is <code>UpdatePartition</code>.</p>
      operationId: UpdateColumnStatisticsForPartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateColumnStatisticsForPartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateColumnStatisticsForPartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateColumnStatisticsForPartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForTable:
    post:
      description: <p>Creates or updates table statistics of columns.</p> <p>The Identity
        and Access Management (IAM) permission required for this operation is <code>UpdateTable</code>.</p>
      operationId: UpdateColumnStatisticsForTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateColumnStatisticsForTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateColumnStatisticsForTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateColumnStatisticsForTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateConnection:
    post:
      description: Updates a connection definition in the Data Catalog.
      operationId: UpdateConnection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateCrawler:
    post:
      description: "Updates a crawler. If a crawler is running, you must stop it using\
        \ <code>StopCrawler</code> before updating it."
      operationId: UpdateCrawler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateCrawler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCrawlerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlerRunningException'
          description: CrawlerRunningException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateCrawlerSchedule:
    post:
      description: 'Updates the schedule of a crawler using a <code>cron</code> expression. '
      operationId: UpdateCrawlerSchedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateCrawlerSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCrawlerScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCrawlerScheduleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
          description: VersionMismatchException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerTransitioningException'
          description: SchedulerTransitioningException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateDataQualityRuleset:
    post:
      description: Updates the specified data quality ruleset.
      operationId: UpdateDataQualityRuleset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateDataQualityRuleset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataQualityRulesetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataQualityRulesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
          description: IdempotentParameterMismatchException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateDatabase:
    post:
      description: Updates an existing database definition in a Data Catalog.
      operationId: UpdateDatabase
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateDatabase
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatabaseResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateDevEndpoint:
    post:
      description: Updates a specified development endpoint.
      operationId: UpdateDevEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateDevEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevEndpointRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateJob:
    post:
      description: Updates an existing job definition. The previous job definition
        is completely overwritten by this information.
      operationId: UpdateJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateJobFromSourceControl:
    post:
      description: <p>Synchronizes a job from the source control repository. This
        operation takes the job artifacts that are located in the remote repository
        and updates the Glue internal stores with these artifacts.</p> <p>This API
        supports optional parameters which take in the repository information.</p>
      operationId: UpdateJobFromSourceControl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateJobFromSourceControl
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobFromSourceControlRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobFromSourceControlResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateMLTransform:
    post:
      description: "<p>Updates an existing machine learning transform. Call this operation\
        \ to tune the algorithm parameters to achieve better results.</p> <p>After\
        \ calling this operation, you can call the <code>StartMLEvaluationTaskRun</code>\
        \ operation to assess how well your new parameters achieved your goals (such\
        \ as improving the quality of your machine learning transform, or making it\
        \ more cost-effective).</p>"
      operationId: UpdateMLTransform
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateMLTransform
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMLTransformRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMLTransformResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdatePartition:
    post:
      description: Updates a partition.
      operationId: UpdatePartition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdatePartition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePartitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateRegistry:
    post:
      description: "Updates an existing registry which is used to hold a collection\
        \ of schemas. The updated properties relate to the registry, and do not modify\
        \ any of the schemas within the registry. "
      operationId: UpdateRegistry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateRegistry
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateSchema:
    post:
      description: "<p>Updates the description, compatibility setting, or version\
        \ checkpoint for a schema set.</p> <p>For updating the compatibility setting,\
        \ the call will not validate compatibility for the entire set of schema versions\
        \ with the new compatibility setting. If the value for <code>Compatibility</code>\
        \ is provided, the <code>VersionNumber</code> (a checkpoint) is also required.\
        \ The API will validate the checkpoint version number for consistency.</p>\
        \ <p>If the value for the <code>VersionNumber</code> (checkpoint) is provided,\
        \ <code>Compatibility</code> is optional and this can be used to set/reset\
        \ a checkpoint for the schema.</p> <p>This update will happen only if the\
        \ schema is in the AVAILABLE state.</p>"
      operationId: UpdateSchema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateSchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchemaInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateSourceControlFromJob:
    post:
      description: <p>Synchronizes a job to the source control repository. This operation
        takes the job artifacts from the Glue internal stores and makes a commit to
        the remote repository that is configured on the job.</p> <p>This API supports
        optional parameters which take in the repository information.</p>
      operationId: UpdateSourceControlFromJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateSourceControlFromJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceControlFromJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSourceControlFromJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateTable:
    post:
      description: Updates a metadata table in the Data Catalog.
      operationId: UpdateTable
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateTable
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTableResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNumberLimitExceededException'
          description: ResourceNumberLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
          description: ResourceNotReadyException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateTrigger:
    post:
      description: Updates a trigger definition.
      operationId: UpdateTrigger
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateTrigger
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTriggerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateUserDefinedFunction:
    post:
      description: Updates an existing function definition in the Data Catalog.
      operationId: UpdateUserDefinedFunction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateUserDefinedFunction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDefinedFunctionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserDefinedFunctionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlueEncryptionException'
          description: GlueEncryptionException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSGlue.UpdateWorkflow:
    post:
      description: Updates an existing workflow.
      operationId: UpdateWorkflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSGlue.UpdateWorkflow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFoundException'
          description: EntityNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTimeoutException'
          description: OperationTimeoutException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchCreatePartitionResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/PartitionErrors'
          - description: The errors encountered when trying to create the requested
              partitions.
      type: object
    BatchCreatePartitionRequest:
      example:
        TableName: ""
        PartitionInputList: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the catalog in which the partition is to be created.\
              \ Currently, this should be the Amazon Web Services account ID."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the metadata database in which the partition
              is to be created.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the metadata table in which the partition is
              to be created.
        PartitionInputList:
          allOf:
          - $ref: '#/components/schemas/PartitionInputList'
          - description: A list of <code>PartitionInput</code> structures that define
              the partitions to be created.
      required:
      - DatabaseName
      - PartitionInputList
      - TableName
      title: BatchCreatePartitionRequest
      type: object
    InvalidInputException: {}
    AlreadyExistsException: {}
    ResourceNumberLimitExceededException: {}
    InternalServiceException: {}
    EntityNotFoundException: {}
    OperationTimeoutException: {}
    GlueEncryptionException: {}
    BatchDeleteConnectionResponse:
      example:
        Succeeded: ""
        Errors: ""
      properties:
        Succeeded:
          allOf:
          - $ref: '#/components/schemas/NameStringList'
          - description: A list of names of the connection definitions that were successfully
              deleted.
        Errors:
          allOf:
          - $ref: '#/components/schemas/ErrorByName'
          - description: A map of the names of connections that were not successfully
              deleted to error details.
      type: object
    BatchDeleteConnectionRequest:
      example:
        ConnectionNameList: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the connections reside.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        ConnectionNameList:
          allOf:
          - $ref: '#/components/schemas/DeleteConnectionNameList'
          - description: A list of names of the connections to delete.
      required:
      - ConnectionNameList
      title: BatchDeleteConnectionRequest
      type: object
    BatchDeletePartitionResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/PartitionErrors'
          - description: The errors encountered when trying to delete the requested
              partitions.
      type: object
    BatchDeletePartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionsToDelete: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partition to be deleted\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database in which the table in question
              resides.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table that contains the partitions to be
              deleted.
        PartitionsToDelete:
          allOf:
          - $ref: '#/components/schemas/BatchDeletePartitionValueList'
          - description: A list of <code>PartitionInput</code> structures that define
              the partitions to be deleted.
      required:
      - DatabaseName
      - PartitionsToDelete
      - TableName
      title: BatchDeletePartitionRequest
      type: object
    BatchDeleteTableResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/TableErrors'
          - description: A list of errors encountered in attempting to delete the
              specified tables.
      type: object
    BatchDeleteTableRequest:
      example:
        DatabaseName: ""
        TablesToDelete: ""
        CatalogId: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the table resides. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the catalog database in which the tables to\
              \ delete reside. For Hive compatibility, this name is entirely lowercase."
        TablesToDelete:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteTableNameList'
          - description: A list of the table to delete.
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction ID at which to delete the table contents.
      required:
      - DatabaseName
      - TablesToDelete
      title: BatchDeleteTableRequest
      type: object
    ResourceNotReadyException: {}
    BatchDeleteTableVersionResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/TableVersionErrors'
          - description: A list of errors encountered while trying to delete the specified
              table versions.
      type: object
    BatchDeleteTableVersionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        VersionIds: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the tables reside. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The database in the catalog in which the table resides.\
              \ For Hive compatibility, this name is entirely lowercase."
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table. For Hive compatibility, this name\
              \ is entirely lowercase."
        VersionIds:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteTableVersionList'
          - description: A list of the IDs of versions to be deleted. A <code>VersionId</code>
              is a string representation of an integer. Each version is incremented
              by 1.
      required:
      - DatabaseName
      - TableName
      - VersionIds
      title: BatchDeleteTableVersionRequest
      type: object
    BatchGetBlueprintsResponse:
      example:
        Blueprints: ""
        MissingBlueprints: ""
      properties:
        Blueprints:
          allOf:
          - $ref: '#/components/schemas/Blueprints'
          - description: Returns a list of blueprint as a <code>Blueprints</code>
              object.
        MissingBlueprints:
          allOf:
          - $ref: '#/components/schemas/BlueprintNames'
          - description: Returns a list of <code>BlueprintNames</code> that were not
              found.
      type: object
    BatchGetBlueprintsRequest:
      example:
        Names: ""
        IncludeBlueprint: ""
        IncludeParameterSpec: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/BatchGetBlueprintNames'
          - description: A list of blueprint names.
        IncludeBlueprint:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether or not to include the blueprint in the
              response.
        IncludeParameterSpec:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "Specifies whether or not to include the parameters, as a\
              \ JSON string, for the blueprint in the response."
      required:
      - Names
      title: BatchGetBlueprintsRequest
      type: object
    BatchGetCrawlersResponse:
      example:
        Crawlers: ""
        CrawlersNotFound: ""
      properties:
        Crawlers:
          allOf:
          - $ref: '#/components/schemas/CrawlerList'
          - description: A list of crawler definitions.
        CrawlersNotFound:
          allOf:
          - $ref: '#/components/schemas/CrawlerNameList'
          - description: A list of names of crawlers that were not found.
      type: object
    BatchGetCrawlersRequest:
      example:
        CrawlerNames: ""
      properties:
        CrawlerNames:
          allOf:
          - $ref: '#/components/schemas/CrawlerNameList'
          - description: "A list of crawler names, which might be the names returned\
              \ from the <code>ListCrawlers</code> operation."
      required:
      - CrawlerNames
      title: BatchGetCrawlersRequest
      type: object
    BatchGetCustomEntityTypesResponse:
      example:
        CustomEntityTypes: ""
        CustomEntityTypesNotFound: ""
      properties:
        CustomEntityTypes:
          allOf:
          - $ref: '#/components/schemas/CustomEntityTypes'
          - description: A list of <code>CustomEntityType</code> objects representing
              the custom patterns that have been created.
        CustomEntityTypesNotFound:
          allOf:
          - $ref: '#/components/schemas/CustomEntityTypeNames'
          - description: A list of the names of custom patterns that were not found.
      type: object
    BatchGetCustomEntityTypesRequest:
      example:
        Names: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/CustomEntityTypeNames'
          - description: A list of names of the custom patterns that you want to retrieve.
      required:
      - Names
      title: BatchGetCustomEntityTypesRequest
      type: object
    BatchGetDataQualityResultResponse:
      example:
        ResultsNotFound: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/DataQualityResultsList'
          - description: A list of <code>DataQualityResult</code> objects representing
              the data quality results.
        ResultsNotFound:
          allOf:
          - $ref: '#/components/schemas/DataQualityResultIds'
          - description: A list of result IDs for which results were not found.
      required:
      - Results
      type: object
    BatchGetDataQualityResultRequest:
      example:
        ResultIds: ""
      properties:
        ResultIds:
          allOf:
          - $ref: '#/components/schemas/DataQualityResultIds'
          - description: A list of unique result IDs for the data quality results.
      required:
      - ResultIds
      title: BatchGetDataQualityResultRequest
      type: object
    BatchGetDevEndpointsResponse:
      example:
        DevEndpointsNotFound: ""
        DevEndpoints: ""
      properties:
        DevEndpoints:
          allOf:
          - $ref: '#/components/schemas/DevEndpointList'
          - description: A list of <code>DevEndpoint</code> definitions.
        DevEndpointsNotFound:
          allOf:
          - $ref: '#/components/schemas/DevEndpointNames'
          - description: A list of <code>DevEndpoints</code> not found.
      type: object
    BatchGetDevEndpointsRequest:
      example:
        DevEndpointNames: ""
      properties:
        DevEndpointNames:
          allOf:
          - $ref: '#/components/schemas/DevEndpointNames'
          - description: "The list of <code>DevEndpoint</code> names, which might\
              \ be the names returned from the <code>ListDevEndpoint</code> operation."
      required:
      - DevEndpointNames
      title: BatchGetDevEndpointsRequest
      type: object
    AccessDeniedException: {}
    BatchGetJobsResponse:
      example:
        Jobs: ""
        JobsNotFound: ""
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/JobList'
          - description: A list of job definitions.
        JobsNotFound:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          - description: A list of names of jobs not found.
      type: object
    BatchGetJobsRequest:
      example:
        JobNames: ""
      properties:
        JobNames:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          - description: "A list of job names, which might be the names returned from\
              \ the <code>ListJobs</code> operation."
      required:
      - JobNames
      title: BatchGetJobsRequest
      type: object
    BatchGetPartitionResponse:
      example:
        Partitions: ""
        UnprocessedKeys: ""
      properties:
        Partitions:
          allOf:
          - $ref: '#/components/schemas/PartitionList'
          - description: A list of the requested partitions.
        UnprocessedKeys:
          allOf:
          - $ref: '#/components/schemas/BatchGetPartitionValueList'
          - description: A list of the partition values in the request for which partitions
              were not returned.
      type: object
    BatchGetPartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        PartitionsToGet: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        PartitionsToGet:
          allOf:
          - $ref: '#/components/schemas/BatchGetPartitionValueList'
          - description: A list of partition values identifying the partitions to
              retrieve.
      required:
      - DatabaseName
      - PartitionsToGet
      - TableName
      title: BatchGetPartitionRequest
      type: object
    InvalidStateException: {}
    FederationSourceException: {}
    FederationSourceRetryableException: {}
    BatchGetTriggersResponse:
      example:
        Triggers: ""
        TriggersNotFound: ""
      properties:
        Triggers:
          allOf:
          - $ref: '#/components/schemas/TriggerList'
          - description: A list of trigger definitions.
        TriggersNotFound:
          allOf:
          - $ref: '#/components/schemas/TriggerNameList'
          - description: A list of names of triggers not found.
      type: object
    BatchGetTriggersRequest:
      example:
        TriggerNames: ""
      properties:
        TriggerNames:
          allOf:
          - $ref: '#/components/schemas/TriggerNameList'
          - description: "A list of trigger names, which may be the names returned\
              \ from the <code>ListTriggers</code> operation."
      required:
      - TriggerNames
      title: BatchGetTriggersRequest
      type: object
    BatchGetWorkflowsResponse:
      example:
        Workflows: ""
        MissingWorkflows: ""
      properties:
        Workflows:
          allOf:
          - $ref: '#/components/schemas/Workflows'
          - description: A list of workflow resource metadata.
        MissingWorkflows:
          allOf:
          - $ref: '#/components/schemas/WorkflowNames'
          - description: A list of names of workflows not found.
      type: object
    BatchGetWorkflowsRequest:
      example:
        Names: ""
        IncludeGraph: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/WorkflowNames'
          - description: "A list of workflow names, which may be the names returned\
              \ from the <code>ListWorkflows</code> operation."
        IncludeGraph:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether to include a graph when returning the workflow
              resource metadata.
      required:
      - Names
      title: BatchGetWorkflowsRequest
      type: object
    BatchStopJobRunResponse:
      example:
        Errors: ""
        SuccessfulSubmissions: ""
      properties:
        SuccessfulSubmissions:
          allOf:
          - $ref: '#/components/schemas/BatchStopJobRunSuccessfulSubmissionList'
          - description: A list of the JobRuns that were successfully submitted for
              stopping.
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchStopJobRunErrorList'
          - description: "A list of the errors that were encountered in trying to\
              \ stop <code>JobRuns</code>, including the <code>JobRunId</code> for\
              \ which each error was encountered and details about the error."
      type: object
    BatchStopJobRunRequest:
      example:
        JobRunIds: ""
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition for which to stop job runs.
        JobRunIds:
          allOf:
          - $ref: '#/components/schemas/BatchStopJobRunJobRunIdList'
          - description: A list of the <code>JobRunIds</code> that should be stopped
              for that job definition.
      required:
      - JobName
      - JobRunIds
      title: BatchStopJobRunRequest
      type: object
    BatchUpdatePartitionResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchUpdatePartitionFailureList'
          - description: The errors encountered when trying to update the requested
              partitions. A list of <code>BatchUpdatePartitionFailureEntry</code>
              objects.
      type: object
    BatchUpdatePartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        Entries: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the catalog in which the partition is to be updated.\
              \ Currently, this should be the Amazon Web Services account ID."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the metadata database in which the partition
              is to be updated.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the metadata table in which the partition is
              to be updated.
        Entries:
          allOf:
          - $ref: '#/components/schemas/BatchUpdatePartitionRequestEntryList'
          - description: A list of up to 100 <code>BatchUpdatePartitionRequestEntry</code>
              objects to update.
      required:
      - DatabaseName
      - Entries
      - TableName
      title: BatchUpdatePartitionRequest
      type: object
    CancelDataQualityRuleRecommendationRunResponse:
      properties: {}
      type: object
    CancelDataQualityRuleRecommendationRunRequest:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
      required:
      - RunId
      title: CancelDataQualityRuleRecommendationRunRequest
      type: object
    CancelDataQualityRulesetEvaluationRunResponse:
      properties: {}
      type: object
    CancelDataQualityRulesetEvaluationRunRequest:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
      required:
      - RunId
      title: CancelDataQualityRulesetEvaluationRunRequest
      type: object
    CancelMLTaskRunResponse:
      example:
        Status: ""
        TaskRunId: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier for the task run.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The status for this run.
      type: object
    CancelMLTaskRunRequest:
      example:
        TaskRunId: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A unique identifier for the task run.
      required:
      - TaskRunId
      - TransformId
      title: CancelMLTaskRunRequest
      type: object
    CancelStatementResponse:
      properties: {}
      type: object
    CancelStatementRequest:
      example:
        RequestOrigin: ""
        Id: ""
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The Session ID of the statement to be cancelled.
        Id:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The ID of the statement to be cancelled.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The origin of the request to cancel the statement.
      required:
      - Id
      - SessionId
      title: CancelStatementRequest
      type: object
    IllegalSessionStateException: {}
    CheckSchemaVersionValidityResponse:
      example:
        Valid: ""
        Error: ""
      properties:
        Valid:
          allOf:
          - $ref: '#/components/schemas/IsVersionValid'
          - description: "Return true, if the schema is valid and false otherwise."
        Error:
          allOf:
          - $ref: '#/components/schemas/SchemaValidationError'
          - description: A validation failure error message.
      type: object
    CheckSchemaVersionValidityInput:
      example:
        SchemaDefinition: ""
        DataFormat: ""
      properties:
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: "The data format of the schema definition. Currently <code>AVRO</code>,\
              \ <code>JSON</code> and <code>PROTOBUF</code> are supported."
        SchemaDefinition:
          allOf:
          - $ref: '#/components/schemas/SchemaDefinitionString'
          - description: The definition of the schema that has to be validated.
      required:
      - DataFormat
      - SchemaDefinition
      title: CheckSchemaVersionValidityInput
      type: object
    CreateBlueprintResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Returns the name of the blueprint that was registered.
      type: object
    CreateBlueprintRequest:
      example:
        Description: ""
        BlueprintLocation: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        Description:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: A description of the blueprint.
        BlueprintLocation:
          allOf:
          - $ref: '#/components/schemas/OrchestrationS3Location'
          - description: Specifies a path in Amazon S3 where the blueprint is published.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags to be applied to this blueprint.
      required:
      - BlueprintLocation
      - Name
      title: CreateBlueprintRequest
      type: object
    CreateClassifierResponse:
      properties: {}
      type: object
    CreateClassifierRequest:
      example:
        XMLClassifier:
          RowTag: ""
          Classification: ""
          Name: ""
        JsonClassifier:
          JsonPath: ""
          Name: ""
        CsvClassifier:
          QuoteSymbol: ""
          ContainsHeader: ""
          Delimiter: ""
          Header: ""
          AllowSingleColumn: ""
          CustomDatatypeConfigured: ""
          DisableValueTrimming: ""
          CustomDatatypes: ""
          Name: ""
        GrokClassifier:
          CustomPatterns: ""
          GrokPattern: ""
          Classification: ""
          Name: ""
      properties:
        GrokClassifier:
          $ref: '#/components/schemas/CreateClassifierRequest_GrokClassifier'
        XMLClassifier:
          $ref: '#/components/schemas/CreateClassifierRequest_XMLClassifier'
        JsonClassifier:
          $ref: '#/components/schemas/CreateClassifierRequest_JsonClassifier'
        CsvClassifier:
          $ref: '#/components/schemas/CreateClassifierRequest_CsvClassifier'
      title: CreateClassifierRequest
      type: object
    CreateConnectionResponse:
      properties: {}
      type: object
    CreateConnectionRequest:
      example:
        ConnectionInput:
          Description: ""
          ConnectionType: ""
          MatchCriteria: ""
          PhysicalConnectionRequirements:
            AvailabilityZone: ""
            SecurityGroupIdList: ""
            SubnetId: ""
          ConnectionProperties: ""
          Name: ""
        CatalogId: ""
        Tags: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which to create the connection.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        ConnectionInput:
          $ref: '#/components/schemas/CreateConnectionRequest_ConnectionInput'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags you assign to the connection.
      required:
      - ConnectionInput
      title: CreateConnectionRequest
      type: object
    CreateCrawlerResponse:
      properties: {}
      type: object
    CreateCrawlerRequest:
      example:
        Classifiers: ""
        Description: ""
        SchemaChangePolicy:
          UpdateBehavior: ""
          DeleteBehavior: ""
        Configuration: ""
        RecrawlPolicy:
          RecrawlBehavior: ""
        DatabaseName: ""
        Targets:
          HudiTargets: ""
          S3Targets: ""
          CatalogTargets: ""
          DeltaTargets: ""
          MongoDBTargets: ""
          JdbcTargets: ""
          DynamoDBTargets: ""
          IcebergTargets: ""
        LineageConfiguration:
          CrawlerLineageSettings: ""
        CrawlerSecurityConfiguration: ""
        Name: ""
        Role: ""
        LakeFormationConfiguration:
          AccountId: ""
          UseLakeFormationCredentials: ""
        Schedule: ""
        TablePrefix: ""
        Tags: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the new crawler.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The IAM role or Amazon Resource Name (ARN) of an IAM role
              used by the new crawler to access customer resources.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          - description: "The Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the new crawler.
        Targets:
          $ref: '#/components/schemas/CreateCrawlerRequest_Targets'
        Schedule:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: "A <code>cron</code> expression used to specify the schedule\
              \ (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>."
        Classifiers:
          allOf:
          - $ref: '#/components/schemas/ClassifierNameList'
          - description: "A list of custom classifiers that the user has registered.\
              \ By default, all built-in classifiers are included in a crawl, but\
              \ these custom classifiers always override the default classifiers for\
              \ a given classification."
        TablePrefix:
          allOf:
          - $ref: '#/components/schemas/TablePrefix'
          - description: The table prefix used for catalog tables that are created.
        SchemaChangePolicy:
          $ref: '#/components/schemas/CreateCrawlerRequest_SchemaChangePolicy'
        RecrawlPolicy:
          $ref: '#/components/schemas/CreateCrawlerRequest_RecrawlPolicy'
        LineageConfiguration:
          $ref: '#/components/schemas/CreateCrawlerRequest_LineageConfiguration'
        LakeFormationConfiguration:
          $ref: '#/components/schemas/CreateCrawlerRequest_LakeFormationConfiguration'
        Configuration:
          allOf:
          - $ref: '#/components/schemas/CrawlerConfiguration'
          - description: "Crawler configuration information. This versioned JSON string\
              \ allows users to specify aspects of a crawler's behavior. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html\"\
              >Setting crawler configuration options</a>."
        CrawlerSecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/CrawlerSecurityConfiguration'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used by this crawler.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "The tags to use with this crawler request. You may use tags\
              \ to limit access to the crawler. For more information about tags in\
              \ Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\"\
              >Amazon Web Services Tags in Glue</a> in the developer guide."
      required:
      - Name
      - Role
      - Targets
      title: CreateCrawlerRequest
      type: object
    CreateCustomEntityTypeResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the custom pattern you created.
      type: object
    CreateCustomEntityTypeRequest:
      example:
        ContextWords: ""
        RegexString: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A name for the custom pattern that allows it to be retrieved
              or deleted later. This name must be unique per Amazon Web Services account.
        RegexString:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A regular expression string that is used for detecting sensitive
              data in a custom pattern.
        ContextWords:
          allOf:
          - $ref: '#/components/schemas/ContextWords'
          - description: <p>A list of context words. If none of these context words
              are found within the vicinity of the regular expression the data will
              not be detected as sensitive data.</p> <p>If no context words are passed
              only a regular expression is checked.</p>
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: A list of tags applied to the custom entity type.
      required:
      - Name
      - RegexString
      title: CreateCustomEntityTypeRequest
      type: object
    IdempotentParameterMismatchException: {}
    CreateDataQualityRulesetResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A unique name for the data quality ruleset.
      type: object
    CreateDataQualityRulesetRequest:
      example:
        Ruleset: ""
        Description: ""
        TargetTable:
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
        ClientToken: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A unique name for the data quality ruleset.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the data quality ruleset.
        Ruleset:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetString'
          - description: "A Data Quality Definition Language (DQDL) ruleset. For more\
              \ information, see the Glue developer guide."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: A list of tags applied to the data quality ruleset.
        TargetTable:
          $ref: '#/components/schemas/CreateDataQualityRulesetRequest_TargetTable'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: Used for idempotency and is recommended to be set to a random
              ID (such as a UUID) to avoid creating or starting multiple instances
              of the same resource.
      required:
      - Name
      - Ruleset
      title: CreateDataQualityRulesetRequest
      type: object
    CreateDatabaseResponse:
      properties: {}
      type: object
    CreateDatabaseRequest:
      example:
        DatabaseInput:
          LocationUri: ""
          CreateTableDefaultPermissions: ""
          Description: ""
          Parameters: ""
          TargetDatabase:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
          FederatedDatabase:
            ConnectionName: ""
            Identifier: ""
          Name: ""
        CatalogId: ""
        Tags: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which to create the database.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        DatabaseInput:
          $ref: '#/components/schemas/CreateDatabaseRequest_DatabaseInput'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags you assign to the database.
      required:
      - DatabaseInput
      title: CreateDatabaseRequest
      type: object
    ConcurrentModificationException: {}
    FederatedResourceAlreadyExistsException: {}
    CreateDevEndpointResponse:
      example:
        Status: ""
        ExtraJarsS3Path: ""
        CreatedTimestamp: ""
        NumberOfNodes: ""
        Arguments: ""
        AvailabilityZone: ""
        SubnetId: ""
        SecurityGroupIds: ""
        RoleArn: ""
        YarnEndpointAddress: ""
        WorkerType: ""
        EndpointName: ""
        VpcId: ""
        GlueVersion: ""
        FailureReason: ""
        ExtraPythonLibsS3Path: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        ZeppelinRemoteSparkInterpreterPort: ""
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name assigned to the new <code>DevEndpoint</code>.
        Status:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current status of the new <code>DevEndpoint</code>.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The security groups assigned to the new <code>DevEndpoint</code>.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The subnet ID assigned to the new <code>DevEndpoint</code>.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the role assigned to the
              new <code>DevEndpoint</code>.
        YarnEndpointAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The address of the YARN endpoint used by this <code>DevEndpoint</code>.
        ZeppelinRemoteSparkInterpreterPort:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The Apache Zeppelin port for the remote Apache Spark interpreter.
        NumberOfNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The number of Glue Data Processing Units (DPUs) allocated
              to this DevEndpoint.
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "The type of predefined worker that is allocated to the development\
              \ endpoint. May be a value of Standard, G.1X, or G.2X."
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>Glue version determines the versions of Apache Spark\
              \ and Python that Glue supports. The Python version indicates the version\
              \ supported for running your ETL scripts on development endpoints. </p>\
              \ <p>For more information about the available Glue versions and corresponding\
              \ Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated to the development endpoint.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Availability Zone where this <code>DevEndpoint</code>
              is located.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.
        ExtraPythonLibsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The paths to one or more Python libraries in an S3 bucket
              that will be loaded in your <code>DevEndpoint</code>.
        ExtraJarsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Path to one or more Java <code>.jar</code> files in an S3
              bucket that will be loaded in your <code>DevEndpoint</code>.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason for a current failure in this <code>DevEndpoint</code>.
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              being used with this <code>DevEndpoint</code>.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The point in time at which this <code>DevEndpoint</code>
              was created.
        Arguments:
          allOf:
          - $ref: '#/components/schemas/MapValue'
          - description: "<p>The map of arguments used to configure this <code>DevEndpoint</code>.</p>\
              \ <p>Valid arguments are:</p> <ul> <li> <p> <code>\"--enable-glue-datacatalog\"\
              : \"\"</code> </p> </li> </ul> <p>You can specify a version of Python\
              \ support for development endpoints by using the <code>Arguments</code>\
              \ parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code>\
              \ APIs. If no arguments are provided, the version defaults to Python\
              \ 2.</p>"
      type: object
    CreateDevEndpointRequest:
      example:
        ExtraJarsS3Path: ""
        PublicKey: ""
        NumberOfNodes: ""
        Arguments: ""
        SubnetId: ""
        PublicKeys: ""
        SecurityGroupIds: ""
        RoleArn: ""
        WorkerType: ""
        EndpointName: ""
        GlueVersion: ""
        ExtraPythonLibsS3Path: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        Tags: ""
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name to be assigned to the new <code>DevEndpoint</code>.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM role for the <code>DevEndpoint</code>.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: Security group IDs for the security groups to be used by
              the new <code>DevEndpoint</code>.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The subnet ID for the new <code>DevEndpoint</code> to use.
        PublicKey:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The public key to be used by this <code>DevEndpoint</code>
              for authentication. This attribute is provided for backward compatibility
              because the recommended attribute to use is public keys.
        PublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeysList'
          - description: "<p>A list of public keys to be used by the development endpoints\
              \ for authentication. The use of this attribute is preferred over a\
              \ single public key because the public keys allow you to have a different\
              \ private key per client.</p> <note> <p>If you previously created an\
              \ endpoint with a public key, you must remove that key to be able to\
              \ set a list of public keys. Call the <code>UpdateDevEndpoint</code>\
              \ API with the public key content in the <code>deletePublicKeys</code>\
              \ attribute, and the list of new keys in the <code>addPublicKeys</code>\
              \ attribute.</p> </note>"
        NumberOfNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The number of Glue Data Processing Units (DPUs) to allocate
              to this <code>DevEndpoint</code>.
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated to the\
              \ development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p>\
              \ <ul> <li> <p>For the <code>Standard</code> worker type, each worker\
              \ provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors\
              \ per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type,\
              \ each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and\
              \ provides 1 executor per worker. We recommend this worker type for\
              \ memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code>\
              \ worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128\
              \ GB disk), and provides 1 executor per worker. We recommend this worker\
              \ type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when\
              \ a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code>\
              \ configuration, the Spark drivers for the development endpoint will\
              \ run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>"
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>Glue version determines the versions of Apache Spark\
              \ and Python that Glue supports. The Python version indicates the version\
              \ supported for running your ETL scripts on development endpoints. </p>\
              \ <p>For more information about the available Glue versions and corresponding\
              \ Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p> <p>Development endpoints\
              \ that are created without specifying a Glue version default to Glue\
              \ 0.9.</p> <p>You can specify a version of Python support for development\
              \ endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code>\
              \ or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided,\
              \ the version defaults to Python 2.</p>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "<p>The number of workers of a defined <code>workerType</code>\
              \ that are allocated to the development endpoint.</p> <p>The maximum\
              \ number of workers you can define are 299 for <code>G.1X</code>, and\
              \ 149 for <code>G.2X</code>. </p>"
        ExtraPythonLibsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "<p>The paths to one or more Python libraries in an Amazon\
              \ S3 bucket that should be loaded in your <code>DevEndpoint</code>.\
              \ Multiple values must be complete paths separated by a comma.</p> <note>\
              \ <p>You can only use pure Python libraries with a <code>DevEndpoint</code>.\
              \ Libraries that rely on C extensions, such as the <a href=\"http://pandas.pydata.org/\"\
              >pandas</a> Python data analysis library, are not yet supported.</p>\
              \ </note>"
        ExtraJarsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The path to one or more Java <code>.jar</code> files in an
              S3 bucket that should be loaded in your <code>DevEndpoint</code>.
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this <code>DevEndpoint</code>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "The tags to use with this DevEndpoint. You may use tags\
              \ to limit access to the DevEndpoint. For more information about tags\
              \ in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\"\
              >Amazon Web Services Tags in Glue</a> in the developer guide."
        Arguments:
          allOf:
          - $ref: '#/components/schemas/MapValue'
          - description: A map of arguments used to configure the <code>DevEndpoint</code>.
      required:
      - EndpointName
      - RoleArn
      title: CreateDevEndpointRequest
      type: object
    ValidationException: {}
    CreateJobResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique name that was provided for this job definition.
      type: object
    CreateJobRequest:
      example:
        Connections:
          Connections: ""
        MaxRetries: ""
        Description: ""
        Timeout: ""
        SourceControlDetails:
          LastCommitId: ""
          Repository: ""
          Owner: ""
          AuthStrategy: ""
          Branch: ""
          AuthToken: ""
          Folder: ""
          Provider: ""
        AllocatedCapacity: ""
        Name: ""
        Role: ""
        DefaultArguments: ""
        NotificationProperty:
          NotifyDelayAfter: ""
        CodeGenConfigurationNodes: ""
        WorkerType: ""
        ExecutionClass: ""
        LogUri: ""
        Command:
          Runtime: ""
          PythonVersion: ""
          ScriptLocation: ""
          Name: ""
        GlueVersion: ""
        ExecutionProperty:
          MaxConcurrentRuns: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        Tags: ""
        NonOverridableArguments: ""
        MaxCapacity: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name you assign to this job definition. It must be unique
              in your account.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: Description of the job being defined.
        LogUri:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: This field is reserved for future use.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: The name or Amazon Resource Name (ARN) of the IAM role associated
              with this job.
        ExecutionProperty:
          $ref: '#/components/schemas/CreateJobRequest_ExecutionProperty'
        Command:
          $ref: '#/components/schemas/CreateJobRequest_Command'
        DefaultArguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "<p>The default arguments for every run of this job, specified\
              \ as name-value pairs.</p> <p>You can specify arguments here that your\
              \ own job-execution script consumes, as well as arguments that Glue\
              \ itself consumes.</p> <p>Job arguments may be logged. Do not pass plaintext\
              \ secrets as arguments. Retrieve secrets from a Glue Connection, Secrets\
              \ Manager or other secret management mechanism if you intend to keep\
              \ them within the Job. </p> <p>For information about how to specify\
              \ and consume your own Job arguments, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html\"\
              >Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For\
              \ information about the arguments you can provide to this field when\
              \ configuring Spark jobs, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
              >Special Parameters Used by Glue</a> topic in the developer guide.</p>\
              \ <p>For information about the arguments you can provide to this field\
              \ when configuring Ray jobs, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-job-parameters.html\"\
              >Using job parameters in Ray jobs</a> in the developer guide.</p>"
        NonOverridableArguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "Arguments for this job that are not overridden when providing\
              \ job arguments in a job run, specified as name-value pairs."
        Connections:
          $ref: '#/components/schemas/CreateJobRequest_Connections'
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          - description: The maximum number of times to retry this job if it fails.
        AllocatedCapacity:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - deprecated: true
            description: "<p>This parameter is deprecated. Use <code>MaxCapacity</code>\
              \ instead.</p> <p>The number of Glue data processing units (DPUs) to\
              \ allocate to this Job. You can allocate a minimum of 2 DPUs; the default\
              \ is 10. A DPU is a relative measure of processing power that consists\
              \ of 4 vCPUs of compute capacity and 16 GB of memory. For more information,\
              \ see the <a href=\"https://aws.amazon.com/glue/pricing/\">Glue pricing\
              \ page</a>.</p>This property is deprecated, use MaxCapacity instead."
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The job timeout in minutes. This is the maximum time that\
              \ a job run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>For Glue version 1.0 or earlier jobs, using the standard\
              \ worker type, the number of Glue data processing units (DPUs) that\
              \ can be allocated when this job runs. A DPU is a relative measure of\
              \ processing power that consists of 4 vCPUs of compute capacity and\
              \ 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              > Glue pricing page</a>.</p> <p>For Glue version 2.0+ jobs, you cannot\
              \ specify a <code>Maximum capacity</code>. Instead, you should specify\
              \ a <code>Worker type</code> and the <code>Number of workers</code>.</p>\
              \ <p>Do not set <code>MaxCapacity</code> if using <code>WorkerType</code>\
              \ and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated\
              \ for <code>MaxCapacity</code> depends on whether you are running a\
              \ Python shell job, an Apache Spark ETL job, or an Apache Spark streaming\
              \ ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>=\"\
              pythonshell\"), you can allocate either 0.0625 or 1 DPU. The default\
              \ is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark\
              \ ETL job (<code>JobCommand.Name</code>=\"glueetl\") or Apache Spark\
              \ streaming ETL job (<code>JobCommand.Name</code>=\"gluestreaming\"\
              ), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This\
              \ job type cannot have a fractional DPU allocation.</p> </li> </ul>"
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "The tags to use with this job. You may use tags to limit\
              \ access to the job. For more information about tags in Glue, see <a\
              \ href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\"\
              >Amazon Web Services Tags in Glue</a> in the developer guide."
        NotificationProperty:
          $ref: '#/components/schemas/CreateJobRequest_NotificationProperty'
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>In Spark jobs, <code>GlueVersion</code> determines the\
              \ versions of Apache Spark and Python that Glue available in a job.\
              \ The Python version indicates the version supported for jobs of type\
              \ Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code>\
              \ or greater. However, the versions of Ray, Python and additional libraries\
              \ available in your Ray job are determined by the <code>Runtime</code>\
              \ parameter of the Job command.</p> <p>For more information about the\
              \ available Glue versions and corresponding Spark and Python versions,\
              \ see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p> <p>Jobs that are created\
              \ without specifying a Glue version default to Glue 0.9.</p>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when a job runs.
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a job runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for\
              \ Spark jobs. Accepts the value Z.2X for Ray jobs.</p> <ul> <li> <p>For\
              \ the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs,\
              \ 16 GB of memory) with 84GB disk (approximately 34GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs,\
              \ 32 GB of memory) with 128GB disk (approximately 77GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs,\
              \ 64 GB of memory) with 256GB disk (approximately 235GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for jobs whose\
              \ workloads contain your most demanding transforms, aggregations, joins,\
              \ and queries. This worker type is available only for Glue version 3.0\
              \ or later Spark ETL jobs in the following Amazon Web Services Regions:\
              \ US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific\
              \ (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central),\
              \ Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p>\
              \ </li> <li> <p>For the <code>G.8X</code> worker type, each worker maps\
              \ to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately\
              \ 487GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for jobs whose workloads contain your most demanding transforms,\
              \ aggregations, joins, and queries. This worker type is available only\
              \ for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web\
              \ Services Regions as supported for the <code>G.4X</code> worker type.</p>\
              \ </li> <li> <p>For the <code>G.025X</code> worker type, each worker\
              \ maps to 0.25 DPU (2 vCPUs, 4 GB of memory) with 84GB disk (approximately\
              \ 34GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for low volume streaming jobs. This worker type is only\
              \ available for Glue version 3.0 streaming jobs.</p> </li> <li> <p>For\
              \ the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs,\
              \ 64 GB of memory) with 128 GB disk (approximately 120GB free), and\
              \ provides up to 8 Ray workers based on the autoscaler.</p> </li> </ul>"
        CodeGenConfigurationNodes:
          allOf:
          - $ref: '#/components/schemas/CodeGenConfigurationNodes'
          - description: The representation of a directed acyclic graph on which both
              the Glue Studio visual component and Glue Studio code generation is
              based.
        ExecutionClass:
          allOf:
          - $ref: '#/components/schemas/ExecutionClass'
          - description: <p>Indicates whether the job is run with a standard or flexible
              execution class. The standard execution-class is ideal for time-sensitive
              workloads that require fast job startup and dedicated resources.</p>
              <p>The flexible execution class is appropriate for time-insensitive
              jobs whose start and completion times may vary. </p> <p>Only jobs with
              Glue version 3.0 and above and command type <code>glueetl</code> will
              be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>.
              The flexible execution class is available for Spark jobs.</p>
        SourceControlDetails:
          $ref: '#/components/schemas/CreateJobRequest_SourceControlDetails'
      required:
      - Command
      - Name
      - Role
      title: CreateJobRequest
      type: object
    CreateMLTransformResponse:
      example:
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A unique identifier that is generated for the transform.
      type: object
    CreateMLTransformRequest:
      example:
        MaxRetries: ""
        Description: ""
        Parameters:
          TransformType: ""
          FindMatchesParameters:
            PrecisionRecallTradeoff: ""
            EnforceProvidedLabels: ""
            PrimaryKeyColumnName: ""
            AccuracyCostTradeoff: ""
        TransformEncryption:
          MlUserDataEncryption:
            KmsKeyId: ""
            MlUserDataEncryptionMode: ""
          TaskRunSecurityConfigurationName: ""
        Timeout: ""
        Name: ""
        Role: ""
        WorkerType: ""
        GlueVersion: ""
        InputRecordTables: ""
        NumberOfWorkers: ""
        Tags: ""
        MaxCapacity: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique name that you give the transform when you create
              it.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the machine learning transform that is being
              defined. The default is an empty string.
        InputRecordTables:
          allOf:
          - $ref: '#/components/schemas/GlueTables'
          - description: A list of Glue table definitions used by the transform.
        Parameters:
          $ref: '#/components/schemas/CreateMLTransformRequest_Parameters'
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: "<p>The name or Amazon Resource Name (ARN) of the IAM role\
              \ with the required permissions. The required permissions include both\
              \ Glue service role permissions to Glue resources, and Amazon S3 permissions\
              \ required by the transform. </p> <ul> <li> <p>This role needs Glue\
              \ service role permissions to allow access to resources in Glue. See\
              \ <a href=\"https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html\"\
              >Attach a Policy to IAM Users That Access Glue</a>.</p> </li> <li> <p>This\
              \ role needs permission to your Amazon Simple Storage Service (Amazon\
              \ S3) sources, targets, temporary directory, scripts, and any libraries\
              \ used by the task run for this transform.</p> </li> </ul>"
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "This value determines which version of Glue this machine\
              \ learning transform is compatible with. Glue 1.0 is recommended for\
              \ most customers. If the value is not set, the Glue compatibility defaults\
              \ to Glue 0.9. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions\"\
              >Glue Versions</a> in the developer guide."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>The number of Glue data processing units (DPUs) that\
              \ are allocated to task runs for this transform. You can allocate from\
              \ 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing\
              \ power that consists of 4 vCPUs of compute capacity and 16 GB of memory.\
              \ For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              >Glue pricing page</a>. </p> <p> <code>MaxCapacity</code> is a mutually\
              \ exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p>\
              \ <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code>\
              \ is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li>\
              \ <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code>\
              \ or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code>\
              \ is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>\
              \ </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code>\
              \ must both be at least 1.</p> </li> </ul> <p>When the <code>WorkerType</code>\
              \ field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code>\
              \ field is set automatically and becomes read-only.</p> <p>When the\
              \ <code>WorkerType</code> field is set to a value other than <code>Standard</code>,\
              \ the <code>MaxCapacity</code> field is set automatically and becomes\
              \ read-only.</p>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul>\
              \ <li> <p>For the <code>Standard</code> worker type, each worker provides\
              \ 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p>\
              \ </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides\
              \ 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p>\
              \ </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides\
              \ 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p>\
              \ </li> </ul> <p> <code>MaxCapacity</code> is a mutually exclusive option\
              \ with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p>\
              \ <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code>\
              \ is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li>\
              \ <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code>\
              \ or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code>\
              \ is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>\
              \ </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code>\
              \ must both be at least 1.</p> </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "<p>The number of workers of a defined <code>workerType</code>\
              \ that are allocated when this task runs.</p> <p>If <code>WorkerType</code>\
              \ is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>"
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout of the task run for this transform in minutes.\
              \ This is the maximum time that a task run for this transform can consume\
              \ resources before it is terminated and enters <code>TIMEOUT</code>\
              \ status. The default is 2,880 minutes (48 hours)."
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The maximum number of times to retry a task for this transform
              after a task run fails.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "The tags to use with this machine learning transform. You\
              \ may use tags to limit access to the machine learning transform. For\
              \ more information about tags in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\"\
              >Amazon Web Services Tags in Glue</a> in the developer guide."
        TransformEncryption:
          $ref: '#/components/schemas/CreateMLTransformRequest_TransformEncryption'
      required:
      - InputRecordTables
      - Name
      - Parameters
      - Role
      title: CreateMLTransformRequest
      type: object
    CreatePartitionResponse:
      properties: {}
      type: object
    CreatePartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionInput:
          Parameters: ""
          LastAnalyzedTime: ""
          Values: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The Amazon Web Services account ID of the catalog in which
              the partition is to be created.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the metadata database in which the partition
              is to be created.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the metadata table in which the partition is
              to be created.
        PartitionInput:
          $ref: '#/components/schemas/CreatePartitionRequest_PartitionInput'
      required:
      - DatabaseName
      - PartitionInput
      - TableName
      title: CreatePartitionRequest
      type: object
    CreatePartitionIndexResponse:
      properties: {}
      type: object
    CreatePartitionIndexRequest:
      example:
        TableName: ""
        PartitionIndex:
          IndexName: ""
          Keys: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog ID where the table resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of a database in which you want to create
              a partition index.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of a table in which you want to create
              a partition index.
        PartitionIndex:
          $ref: '#/components/schemas/CreatePartitionIndexRequest_PartitionIndex'
      required:
      - DatabaseName
      - PartitionIndex
      - TableName
      title: CreatePartitionIndexRequest
      type: object
    CreateRegistryResponse:
      example:
        Description: ""
        RegistryName: ""
        RegistryArn: ""
        Tags: ""
      properties:
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the newly created registry.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the registry.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags for the registry.
      type: object
    CreateRegistryInput:
      example:
        Description: ""
        RegistryName: ""
        Tags: ""
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: "Name of the registry to be created of max length of 255,\
              \ and may only contain letters, numbers, hyphen, underscore, dollar\
              \ sign, or hash mark. No whitespace."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: "A description of the registry. If description is not provided,\
              \ there will not be any default value for this."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "Amazon Web Services tags that contain a key value pair and\
              \ may be searched by console, command line, or API."
      required:
      - RegistryName
      title: CreateRegistryInput
      type: object
    CreateSchemaResponse:
      example:
        Description: ""
        SchemaArn: ""
        SchemaVersionId: ""
        LatestSchemaVersion: ""
        RegistryName: ""
        DataFormat: ""
        SchemaVersionStatus: ""
        RegistryArn: ""
        Compatibility: ""
        SchemaCheckpoint: ""
        SchemaStatus: ""
        SchemaName: ""
        NextSchemaVersion: ""
        Tags: ""
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the schema if specified when created.
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: "The data format of the schema definition. Currently <code>AVRO</code>,\
              \ <code>JSON</code> and <code>PROTOBUF</code> are supported."
        Compatibility:
          allOf:
          - $ref: '#/components/schemas/Compatibility'
          - description: The schema compatibility mode.
        SchemaCheckpoint:
          allOf:
          - $ref: '#/components/schemas/SchemaCheckpointNumber'
          - description: The version number of the checkpoint (the last time the compatibility
              mode was changed).
        LatestSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The latest version of the schema associated with the returned
              schema definition.
        NextSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The next version of the schema associated with the returned
              schema definition.
        SchemaStatus:
          allOf:
          - $ref: '#/components/schemas/SchemaStatus'
          - description: 'The status of the schema. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags for the schema.
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique identifier of the first schema version.
        SchemaVersionStatus:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionStatus'
          - description: The status of the first schema version created.
      type: object
    CreateSchemaInput:
      example:
        SchemaDefinition: ""
        Description: ""
        DataFormat: ""
        RegistryId:
          RegistryName: ""
          RegistryArn: ""
        Compatibility: ""
        SchemaName: ""
        Tags: ""
      properties:
        RegistryId:
          $ref: '#/components/schemas/CreateSchemaInput_RegistryId'
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: "Name of the schema to be created of max length of 255, and\
              \ may only contain letters, numbers, hyphen, underscore, dollar sign,\
              \ or hash mark. No whitespace."
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: "The data format of the schema definition. Currently <code>AVRO</code>,\
              \ <code>JSON</code> and <code>PROTOBUF</code> are supported."
        Compatibility:
          allOf:
          - $ref: '#/components/schemas/Compatibility'
          - description: "<p>The compatibility mode of the schema. The possible values\
              \ are:</p> <ul> <li> <p> <i>NONE</i>: No compatibility mode applies.\
              \ You can use this choice in development scenarios or if you do not\
              \ know the compatibility mode that you want to apply to schemas. Any\
              \ new version added will be accepted without undergoing a compatibility\
              \ check.</p> </li> <li> <p> <i>DISABLED</i>: This compatibility choice\
              \ prevents versioning for a particular schema. You can use this choice\
              \ to prevent future versioning of a schema.</p> </li> <li> <p> <i>BACKWARD</i>:\
              \ This compatibility choice is recommended as it allows data receivers\
              \ to read both the current and one previous schema version. This means\
              \ that for instance, a new schema version cannot drop data fields or\
              \ change the type of these fields, so they can't be read by readers\
              \ using the previous version.</p> </li> <li> <p> <i>BACKWARD_ALL</i>:\
              \ This compatibility choice allows data receivers to read both the current\
              \ and all previous schema versions. You can use this choice when you\
              \ need to delete fields or add optional fields, and check compatibility\
              \ against all previous schema versions. </p> </li> <li> <p> <i>FORWARD</i>:\
              \ This compatibility choice allows data receivers to read both the current\
              \ and one next schema version, but not necessarily later versions. You\
              \ can use this choice when you need to add fields or delete optional\
              \ fields, but only check compatibility against the last schema version.</p>\
              \ </li> <li> <p> <i>FORWARD_ALL</i>: This compatibility choice allows\
              \ data receivers to read written by producers of any new registered\
              \ schema. You can use this choice when you need to add fields or delete\
              \ optional fields, and check compatibility against all previous schema\
              \ versions.</p> </li> <li> <p> <i>FULL</i>: This compatibility choice\
              \ allows data receivers to read data written by producers using the\
              \ previous or next version of the schema, but not necessarily earlier\
              \ or later versions. You can use this choice when you need to add or\
              \ remove optional fields, but only check compatibility against the last\
              \ schema version.</p> </li> <li> <p> <i>FULL_ALL</i>: This compatibility\
              \ choice allows data receivers to read data written by producers using\
              \ all previous schema versions. You can use this choice when you need\
              \ to add or remove optional fields, and check compatibility against\
              \ all previous schema versions.</p> </li> </ul>"
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: "An optional description of the schema. If description is\
              \ not provided, there will not be any automatic default value for this."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "Amazon Web Services tags that contain a key value pair and\
              \ may be searched by console, command line, or API. If specified, follows\
              \ the Amazon Web Services tags-on-create pattern."
        SchemaDefinition:
          allOf:
          - $ref: '#/components/schemas/SchemaDefinitionString'
          - description: The schema definition using the <code>DataFormat</code> setting
              for <code>SchemaName</code>.
      required:
      - DataFormat
      - SchemaName
      title: CreateSchemaInput
      type: object
    CreateScriptResponse:
      example:
        ScalaCode: ""
        PythonScript: ""
      properties:
        PythonScript:
          allOf:
          - $ref: '#/components/schemas/PythonScript'
          - description: The Python script generated from the DAG.
        ScalaCode:
          allOf:
          - $ref: '#/components/schemas/ScalaCode'
          - description: The Scala code generated from the DAG.
      type: object
    CreateScriptRequest:
      example:
        Language: ""
        DagEdges: ""
        DagNodes: ""
      properties:
        DagNodes:
          allOf:
          - $ref: '#/components/schemas/DagNodes'
          - description: A list of the nodes in the DAG.
        DagEdges:
          allOf:
          - $ref: '#/components/schemas/DagEdges'
          - description: A list of the edges in the DAG.
        Language:
          allOf:
          - $ref: '#/components/schemas/Language'
          - description: The programming language of the resulting code from the DAG.
      title: CreateScriptRequest
      type: object
    CreateSecurityConfigurationResponse:
      example:
        CreatedTimestamp: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name assigned to the new security configuration.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The time at which the new security configuration was created.
      type: object
    CreateSecurityConfigurationRequest:
      example:
        EncryptionConfiguration:
          S3Encryption: ""
          CloudWatchEncryption:
            KmsKeyArn: ""
            CloudWatchEncryptionMode: ""
          JobBookmarksEncryption:
            KmsKeyArn: ""
            JobBookmarksEncryptionMode: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name for the new security configuration.
        EncryptionConfiguration:
          $ref: '#/components/schemas/CreateSecurityConfigurationRequest_EncryptionConfiguration'
      required:
      - EncryptionConfiguration
      - Name
      title: CreateSecurityConfigurationRequest
      type: object
    CreateSessionResponse:
      example:
        Session:
          Status: ""
          Connections:
            Connections: ""
          Progress: ""
          Description: ""
          Role: ""
          DefaultArguments: ""
          Command:
            PythonVersion: ""
            Name: ""
          GlueVersion: ""
          Id: ""
          CreatedOn: ""
          SecurityConfiguration: ""
          ErrorMessage: ""
          MaxCapacity: ""
      properties:
        Session:
          $ref: '#/components/schemas/CreateSessionResponse_Session'
      type: object
    CreateSessionRequest:
      description: Request to create a new session.
      example:
        Connections:
          Connections: ""
        Description: ""
        Timeout: ""
        RequestOrigin: ""
        IdleTimeout: ""
        Role: ""
        DefaultArguments: ""
        WorkerType: ""
        Command:
          PythonVersion: ""
          Name: ""
        GlueVersion: ""
        Id: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        Tags: ""
        MaxCapacity: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The ID of the session request. '
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: 'The description of the session. '
        Role:
          allOf:
          - $ref: '#/components/schemas/OrchestrationRoleArn'
          - description: 'The IAM Role ARN '
        Command:
          $ref: '#/components/schemas/CreateSessionRequest_Command'
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: " The number of minutes before session times out. Default\
              \ for Spark ETL jobs is 48 hours (2880 minutes), the maximum session\
              \ lifetime for this job type. Consult the documentation for other job\
              \ types. "
        IdleTimeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: ' The number of minutes when idle before session times out.
              Default for Spark ETL jobs is value of Timeout. Consult the documentation
              for other job types. '
        DefaultArguments:
          allOf:
          - $ref: '#/components/schemas/OrchestrationArgumentsMap'
          - description: 'A map array of key-value pairs. Max is 75 pairs. '
        Connections:
          $ref: '#/components/schemas/CreateSessionRequest_Connections'
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: 'The number of Glue data processing units (DPUs) that can
              be allocated when the job runs. A DPU is a relative measure of processing
              power that consists of 4 vCPUs of compute capacity and 16 GB memory. '
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: 'The number of workers of a defined <code>WorkerType</code>
              to use for the session. '
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a job runs. Accepts a value of G.1X, G.2X, G.4X, or G.8X for Spark\
              \ jobs. Accepts the value Z.2X for Ray notebooks.</p> <ul> <li> <p>For\
              \ the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs,\
              \ 16 GB of memory) with 84GB disk (approximately 34GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs,\
              \ 32 GB of memory) with 128GB disk (approximately 77GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs,\
              \ 64 GB of memory) with 256GB disk (approximately 235GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for jobs whose\
              \ workloads contain your most demanding transforms, aggregations, joins,\
              \ and queries. This worker type is available only for Glue version 3.0\
              \ or later Spark ETL jobs in the following Amazon Web Services Regions:\
              \ US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific\
              \ (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central),\
              \ Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p>\
              \ </li> <li> <p>For the <code>G.8X</code> worker type, each worker maps\
              \ to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately\
              \ 487GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for jobs whose workloads contain your most demanding transforms,\
              \ aggregations, joins, and queries. This worker type is available only\
              \ for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web\
              \ Services Regions as supported for the <code>G.4X</code> worker type.</p>\
              \ </li> <li> <p>For the <code>Z.2X</code> worker type, each worker maps\
              \ to 2 M-DPU (8vCPUs, 64 GB of memory) with 128 GB disk (approximately\
              \ 120GB free), and provides up to 8 Ray workers based on the autoscaler.</p>\
              \ </li> </ul>"
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The name of the SecurityConfiguration structure to be used
              with the session '
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: 'The Glue version determines the versions of Apache Spark
              and Python that Glue supports. The GlueVersion must be greater than
              2.0. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The map of key value pairs (tags) belonging to the session.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: 'The origin of the request. '
      required:
      - Command
      - Id
      - Role
      title: CreateSessionRequest
      type: object
    CreateTableResponse:
      properties: {}
      type: object
    CreateTableRequest:
      example:
        TableInput:
          Owner: ""
          ViewOriginalText: ""
          Description: ""
          TableType: ""
          Parameters: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          Retention: ""
          Name: ""
          ViewExpandedText: ""
          LastAnalyzedTime: ""
          TargetTable:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
            Name: ""
          PartitionKeys: ""
        OpenTableFormatInput:
          IcebergInput:
            MetadataOperation: ""
            Version: ""
        PartitionIndexes: ""
        DatabaseName: ""
        CatalogId: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which to create the <code>Table</code>.\
              \ If none is supplied, the Amazon Web Services account ID is used by\
              \ default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The catalog database in which to create the new table. For\
              \ Hive compatibility, this name is entirely lowercase."
        TableInput:
          $ref: '#/components/schemas/CreateTableRequest_TableInput'
        PartitionIndexes:
          allOf:
          - $ref: '#/components/schemas/PartitionIndexList'
          - description: "A list of partition indexes, <code>PartitionIndex</code>\
              \ structures, to create in the table."
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The ID of the transaction.
        OpenTableFormatInput:
          $ref: '#/components/schemas/CreateTableRequest_OpenTableFormatInput'
      required:
      - DatabaseName
      - TableInput
      title: CreateTableRequest
      type: object
    CreateTriggerResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger.
      type: object
    CreateTriggerRequest:
      example:
        Type: ""
        StartOnCreation: ""
        Description: ""
        Actions: ""
        EventBatchingCondition:
          BatchSize: ""
          BatchWindow: ""
        WorkflowName: ""
        Schedule: ""
        Tags: ""
        Name: ""
        Predicate:
          Logical: ""
          Conditions: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger.
        WorkflowName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow associated with the trigger.
        Type:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: The type of the new trigger.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "<p>A <code>cron</code> expression used to specify the schedule\
              \ (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>.</p> <p>This field is required when the trigger\
              \ type is SCHEDULED.</p>"
        Predicate:
          $ref: '#/components/schemas/CreateTriggerRequest_Predicate'
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          - description: The actions initiated by this trigger when it fires.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the new trigger.
        StartOnCreation:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: Set to <code>true</code> to start <code>SCHEDULED</code>
              and <code>CONDITIONAL</code> triggers when created. True is not supported
              for <code>ON_DEMAND</code> triggers.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "The tags to use with this trigger. You may use tags to limit\
              \ access to the trigger. For more information about tags in Glue, see\
              \ <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\"\
              >Amazon Web Services Tags in Glue</a> in the developer guide. "
        EventBatchingCondition:
          $ref: '#/components/schemas/CreateTriggerRequest_EventBatchingCondition'
      required:
      - Actions
      - Name
      - Type
      title: CreateTriggerRequest
      type: object
    CreateUserDefinedFunctionResponse:
      properties: {}
      type: object
    CreateUserDefinedFunctionRequest:
      example:
        DatabaseName: ""
        FunctionInput:
          FunctionName: ""
          OwnerName: ""
          OwnerType: ""
          ResourceUris: ""
          ClassName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which to create the function.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database in which to create the function.
        FunctionInput:
          $ref: '#/components/schemas/CreateUserDefinedFunctionRequest_FunctionInput'
      required:
      - DatabaseName
      - FunctionInput
      title: CreateUserDefinedFunctionRequest
      type: object
    CreateWorkflowResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow which was provided as part of the
              request.
      type: object
    CreateWorkflowRequest:
      example:
        Description: ""
        DefaultRunProperties: ""
        Tags: ""
        Name: ""
        MaxConcurrentRuns: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name to be assigned to the workflow. It should be unique
              within your account.
        Description:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A description of the workflow.
        DefaultRunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: A collection of properties to be used as part of each execution
              of the workflow.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags to be used with this workflow.
        MaxConcurrentRuns:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "You can use this parameter to prevent unwanted multiple\
              \ updates to data, to control costs, or in some cases, to prevent exceeding\
              \ the maximum number of concurrent runs of any of the component jobs.\
              \ If you leave this parameter blank, there is no limit to the number\
              \ of concurrent workflow runs."
      required:
      - Name
      title: CreateWorkflowRequest
      type: object
    DeleteBlueprintResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Returns the name of the blueprint that was deleted.
      type: object
    DeleteBlueprintRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the blueprint to delete.
      required:
      - Name
      title: DeleteBlueprintRequest
      type: object
    DeleteClassifierResponse:
      properties: {}
      type: object
    DeleteClassifierRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the classifier to remove.
      required:
      - Name
      title: DeleteClassifierRequest
      type: object
    DeleteColumnStatisticsForPartitionResponse:
      properties: {}
      type: object
    DeleteColumnStatisticsForPartitionRequest:
      example:
        TableName: ""
        ColumnName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: A list of partition values identifying the partition.
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the column.
      required:
      - ColumnName
      - DatabaseName
      - PartitionValues
      - TableName
      title: DeleteColumnStatisticsForPartitionRequest
      type: object
    DeleteColumnStatisticsForTableResponse:
      properties: {}
      type: object
    DeleteColumnStatisticsForTableRequest:
      example:
        TableName: ""
        ColumnName: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the column.
      required:
      - ColumnName
      - DatabaseName
      - TableName
      title: DeleteColumnStatisticsForTableRequest
      type: object
    DeleteConnectionResponse:
      properties: {}
      type: object
    DeleteConnectionRequest:
      example:
        ConnectionName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the connection resides.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection to delete.
      required:
      - ConnectionName
      title: DeleteConnectionRequest
      type: object
    DeleteCrawlerResponse:
      properties: {}
      type: object
    DeleteCrawlerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler to remove.
      required:
      - Name
      title: DeleteCrawlerRequest
      type: object
    CrawlerRunningException: {}
    SchedulerTransitioningException: {}
    DeleteCustomEntityTypeResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the custom pattern you deleted.
      type: object
    DeleteCustomEntityTypeRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the custom pattern that you want to delete.
      required:
      - Name
      title: DeleteCustomEntityTypeRequest
      type: object
    DeleteDataQualityRulesetResponse:
      properties: {}
      type: object
    DeleteDataQualityRulesetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A name for the data quality ruleset.
      required:
      - Name
      title: DeleteDataQualityRulesetRequest
      type: object
    DeleteDatabaseResponse:
      properties: {}
      type: object
    DeleteDatabaseRequest:
      example:
        CatalogId: ""
        Name: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the database resides.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database to delete. For Hive compatibility,\
              \ this must be all lowercase."
      required:
      - Name
      title: DeleteDatabaseRequest
      type: object
    DeleteDevEndpointResponse:
      properties: {}
      type: object
    DeleteDevEndpointRequest:
      example:
        EndpointName: ""
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the <code>DevEndpoint</code>.
      required:
      - EndpointName
      title: DeleteDevEndpointRequest
      type: object
    DeleteJobResponse:
      example:
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition that was deleted.
      type: object
    DeleteJobRequest:
      example:
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition to delete.
      required:
      - JobName
      title: DeleteJobRequest
      type: object
    DeleteMLTransformResponse:
      example:
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the transform that was deleted.
      type: object
    DeleteMLTransformRequest:
      example:
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the transform to delete.
      required:
      - TransformId
      title: DeleteMLTransformRequest
      type: object
    DeletePartitionResponse:
      properties: {}
      type: object
    DeletePartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partition to be deleted\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database in which the table in question
              resides.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table that contains the partition to be deleted.
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The values that define the partition.
      required:
      - DatabaseName
      - PartitionValues
      - TableName
      title: DeletePartitionRequest
      type: object
    DeletePartitionIndexResponse:
      properties: {}
      type: object
    DeletePartitionIndexRequest:
      example:
        IndexName: ""
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog ID where the table resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of a database from which you want to delete
              a partition index.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of a table from which you want to delete
              a partition index.
        IndexName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partition index to be deleted.
      required:
      - DatabaseName
      - IndexName
      - TableName
      title: DeletePartitionIndexRequest
      type: object
    ConflictException: {}
    DeleteRegistryResponse:
      example:
        Status: ""
        RegistryName: ""
        RegistryArn: ""
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry being deleted.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the registry being deleted.
        Status:
          allOf:
          - $ref: '#/components/schemas/RegistryStatus'
          - description: The status of the registry. A successful operation will return
              the <code>Deleting</code> status.
      type: object
    DeleteRegistryInput:
      example:
        RegistryId:
          RegistryName: ""
          RegistryArn: ""
      properties:
        RegistryId:
          $ref: '#/components/schemas/DeleteRegistryInput_RegistryId'
      required:
      - RegistryId
      title: DeleteRegistryInput
      type: object
    DeleteResourcePolicyResponse:
      properties: {}
      type: object
    DeleteResourcePolicyRequest:
      example:
        ResourceArn: ""
        PolicyHashCondition: ""
      properties:
        PolicyHashCondition:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The hash value returned when this policy was set.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The ARN of the Glue resource for the resource policy to be
              deleted.
      title: DeleteResourcePolicyRequest
      type: object
    ConditionCheckFailureException: {}
    DeleteSchemaResponse:
      example:
        Status: ""
        SchemaArn: ""
        SchemaName: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema being deleted.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema being deleted.
        Status:
          allOf:
          - $ref: '#/components/schemas/SchemaStatus'
          - description: The status of the schema.
      type: object
    DeleteSchemaInput:
      example:
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/DeleteSchemaInput_SchemaId'
      required:
      - SchemaId
      title: DeleteSchemaInput
      type: object
    DeleteSchemaVersionsResponse:
      example:
        SchemaVersionErrors: ""
      properties:
        SchemaVersionErrors:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionErrorList'
          - description: "A list of <code>SchemaVersionErrorItem</code> objects, each\
              \ containing an error and schema version."
      type: object
    DeleteSchemaVersionsInput:
      example:
        Versions: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/DeleteSchemaInput_SchemaId'
        Versions:
          allOf:
          - $ref: '#/components/schemas/VersionsString'
          - description: "<p>A version range may be supplied which may be of the format:</p>\
              \ <ul> <li> <p>a single version number, 5</p> </li> <li> <p>a range,\
              \ 5-8 : deletes versions 5, 6, 7, 8</p> </li> </ul>"
      required:
      - SchemaId
      - Versions
      title: DeleteSchemaVersionsInput
      type: object
    DeleteSecurityConfigurationResponse:
      properties: {}
      type: object
    DeleteSecurityConfigurationRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the security configuration to delete.
      required:
      - Name
      title: DeleteSecurityConfigurationRequest
      type: object
    DeleteSessionResponse:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Returns the ID of the deleted session.
      type: object
    DeleteSessionRequest:
      example:
        RequestOrigin: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The ID of the session to be deleted.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the origin of the delete session request.
      required:
      - Id
      title: DeleteSessionRequest
      type: object
    DeleteTableResponse:
      properties: {}
      type: object
    DeleteTableRequest:
      example:
        DatabaseName: ""
        CatalogId: ""
        Name: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the table resides. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the catalog database in which the table resides.\
              \ For Hive compatibility, this name is entirely lowercase."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table to be deleted. For Hive compatibility,\
              \ this name is entirely lowercase."
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction ID at which to delete the table contents.
      required:
      - DatabaseName
      - Name
      title: DeleteTableRequest
      type: object
    DeleteTableVersionResponse:
      properties: {}
      type: object
    DeleteTableVersionRequest:
      example:
        VersionId: ""
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the tables reside. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The database in the catalog in which the table resides.\
              \ For Hive compatibility, this name is entirely lowercase."
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table. For Hive compatibility, this name\
              \ is entirely lowercase."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The ID of the table version to be deleted. A <code>VersionID</code>
              is a string representation of an integer. Each version is incremented
              by 1.
      required:
      - DatabaseName
      - TableName
      - VersionId
      title: DeleteTableVersionRequest
      type: object
    DeleteTriggerResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger that was deleted.
      type: object
    DeleteTriggerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger to delete.
      required:
      - Name
      title: DeleteTriggerRequest
      type: object
    DeleteUserDefinedFunctionResponse:
      properties: {}
      type: object
    DeleteUserDefinedFunctionRequest:
      example:
        FunctionName: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the function to be deleted\
              \ is located. If none is supplied, the Amazon Web Services account ID\
              \ is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the function is located.
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the function definition to be deleted.
      required:
      - DatabaseName
      - FunctionName
      title: DeleteUserDefinedFunctionRequest
      type: object
    DeleteWorkflowResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow specified in input.
      type: object
    DeleteWorkflowRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow to be deleted.
      required:
      - Name
      title: DeleteWorkflowRequest
      type: object
    GetBlueprintResponse:
      example:
        Blueprint:
          Status: ""
          Description: ""
          ParameterSpec: ""
          BlueprintServiceLocation: ""
          LastModifiedOn: ""
          CreatedOn: ""
          BlueprintLocation: ""
          LastActiveDefinition:
            Description: ""
            ParameterSpec: ""
            BlueprintServiceLocation: ""
            LastModifiedOn: ""
            BlueprintLocation: ""
          ErrorMessage: ""
          Name: ""
      properties:
        Blueprint:
          $ref: '#/components/schemas/GetBlueprintResponse_Blueprint'
      type: object
    GetBlueprintRequest:
      example:
        IncludeBlueprint: ""
        IncludeParameterSpec: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the blueprint.
        IncludeBlueprint:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether or not to include the blueprint in the
              response.
        IncludeParameterSpec:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether or not to include the parameter specification.
      required:
      - Name
      title: GetBlueprintRequest
      type: object
    GetBlueprintRunResponse:
      example:
        BlueprintRun:
          RollbackErrorMessage: ""
          Parameters: ""
          BlueprintName: ""
          WorkflowName: ""
          State: ""
          RunId: ""
          CompletedOn: ""
          ErrorMessage: ""
          RoleArn: ""
          StartedOn: ""
      properties:
        BlueprintRun:
          $ref: '#/components/schemas/GetBlueprintRunResponse_BlueprintRun'
      type: object
    GetBlueprintRunRequest:
      example:
        BlueprintName: ""
        RunId: ""
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The run ID for the blueprint run you want to retrieve.
      required:
      - BlueprintName
      - RunId
      title: GetBlueprintRunRequest
      type: object
    GetBlueprintRunsResponse:
      example:
        NextToken: ""
        BlueprintRuns: ""
      properties:
        BlueprintRuns:
          allOf:
          - $ref: '#/components/schemas/BlueprintRuns'
          - description: Returns a list of <code>BlueprintRun</code> objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all blueprint runs have been\
              \ returned."
      type: object
    GetBlueprintRunsRequest:
      example:
        BlueprintName: ""
        NextToken: ""
        MaxResults: ""
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the blueprint.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
      required:
      - BlueprintName
      title: GetBlueprintRunsRequest
      type: object
    GetCatalogImportStatusResponse:
      example:
        ImportStatus:
          ImportTime: ""
          ImportCompleted: ""
          ImportedBy: ""
      properties:
        ImportStatus:
          $ref: '#/components/schemas/GetCatalogImportStatusResponse_ImportStatus'
      type: object
    GetCatalogImportStatusRequest:
      example:
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the catalog to migrate. Currently, this should\
              \ be the Amazon Web Services account ID."
      title: GetCatalogImportStatusRequest
      type: object
    GetClassifierResponse:
      example:
        Classifier:
          XMLClassifier:
            RowTag: ""
            Version: ""
            Classification: ""
            CreationTime: ""
            LastUpdated: ""
            Name: ""
          JsonClassifier:
            Version: ""
            CreationTime: ""
            LastUpdated: ""
            JsonPath: ""
            Name: ""
          CsvClassifier:
            QuoteSymbol: ""
            ContainsHeader: ""
            Delimiter: ""
            Header: ""
            AllowSingleColumn: ""
            CustomDatatypeConfigured: ""
            Version: ""
            DisableValueTrimming: ""
            CreationTime: ""
            CustomDatatypes: ""
            LastUpdated: ""
            Name: ""
          GrokClassifier:
            CustomPatterns: ""
            GrokPattern: ""
            Version: ""
            Classification: ""
            CreationTime: ""
            LastUpdated: ""
            Name: ""
      properties:
        Classifier:
          $ref: '#/components/schemas/GetClassifierResponse_Classifier'
      type: object
    GetClassifierRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the classifier to retrieve.
      required:
      - Name
      title: GetClassifierRequest
      type: object
    GetClassifiersResponse:
      example:
        Classifiers: ""
        NextToken: ""
      properties:
        Classifiers:
          allOf:
          - $ref: '#/components/schemas/ClassifierList'
          - description: The requested list of classifier objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: A continuation token.
      type: object
    GetClassifiersRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The size of the list to return (optional).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: An optional continuation token.
      title: GetClassifiersRequest
      type: object
    GetColumnStatisticsForPartitionResponse:
      example:
        Errors: ""
        ColumnStatisticsList: ""
      properties:
        ColumnStatisticsList:
          allOf:
          - $ref: '#/components/schemas/ColumnStatisticsList'
          - description: List of ColumnStatistics that failed to be retrieved.
        Errors:
          allOf:
          - $ref: '#/components/schemas/ColumnErrors'
          - description: Error occurred during retrieving column statistics data.
      type: object
    GetColumnStatisticsForPartitionRequest:
      example:
        TableName: ""
        ColumnNames: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: A list of partition values identifying the partition.
        ColumnNames:
          allOf:
          - $ref: '#/components/schemas/GetColumnNamesList'
          - description: A list of the column names.
      required:
      - ColumnNames
      - DatabaseName
      - PartitionValues
      - TableName
      title: GetColumnStatisticsForPartitionRequest
      type: object
    GetColumnStatisticsForTableResponse:
      example:
        Errors: ""
        ColumnStatisticsList: ""
      properties:
        ColumnStatisticsList:
          allOf:
          - $ref: '#/components/schemas/ColumnStatisticsList'
          - description: List of ColumnStatistics.
        Errors:
          allOf:
          - $ref: '#/components/schemas/ColumnErrors'
          - description: List of ColumnStatistics that failed to be retrieved.
      type: object
    GetColumnStatisticsForTableRequest:
      example:
        TableName: ""
        ColumnNames: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        ColumnNames:
          allOf:
          - $ref: '#/components/schemas/GetColumnNamesList'
          - description: A list of the column names.
      required:
      - ColumnNames
      - DatabaseName
      - TableName
      title: GetColumnStatisticsForTableRequest
      type: object
    GetConnectionResponse:
      example:
        Connection:
          LastUpdatedBy: ""
          Description: ""
          ConnectionType: ""
          MatchCriteria: ""
          PhysicalConnectionRequirements:
            AvailabilityZone: ""
            SecurityGroupIdList: ""
            SubnetId: ""
          ConnectionProperties: ""
          CreationTime: ""
          LastUpdatedTime: ""
          Name: ""
      properties:
        Connection:
          $ref: '#/components/schemas/GetConnectionResponse_Connection'
      type: object
    GetConnectionRequest:
      example:
        HidePassword: ""
        CatalogId: ""
        Name: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the connection resides.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection definition to retrieve.
        HidePassword:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Allows you to retrieve the connection metadata without returning\
              \ the password. For instance, the Glue console uses this flag to retrieve\
              \ the connection, and does not display the password. Set this parameter\
              \ when the caller might not have permission to use the KMS key to decrypt\
              \ the password, but it does have permission to access the rest of the\
              \ connection properties."
      required:
      - Name
      title: GetConnectionRequest
      type: object
    GetConnectionsResponse:
      example:
        ConnectionList: ""
        NextToken: ""
      properties:
        ConnectionList:
          allOf:
          - $ref: '#/components/schemas/ConnectionList'
          - description: A list of requested connection definitions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the list of connections returned\
              \ does not include the last of the filtered connections."
      type: object
    GetConnectionsRequest:
      example:
        NextToken: ""
        Filter:
          ConnectionType: ""
          MatchCriteria: ""
        MaxResults: ""
        HidePassword: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the connections reside.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        Filter:
          $ref: '#/components/schemas/GetConnectionsRequest_Filter'
        HidePassword:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Allows you to retrieve the connection metadata without returning\
              \ the password. For instance, the Glue console uses this flag to retrieve\
              \ the connection, and does not display the password. Set this parameter\
              \ when the caller might not have permission to use the KMS key to decrypt\
              \ the password, but it does have permission to access the rest of the\
              \ connection properties."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of connections to return in one response.
      title: GetConnectionsRequest
      type: object
    GetCrawlerResponse:
      example:
        Crawler:
          Classifiers: ""
          Description: ""
          SchemaChangePolicy:
            UpdateBehavior: ""
            DeleteBehavior: ""
          CrawlElapsedTime: ""
          Configuration: ""
          RecrawlPolicy:
            RecrawlBehavior: ""
          DatabaseName: ""
          Targets:
            HudiTargets: ""
            S3Targets: ""
            CatalogTargets: ""
            DeltaTargets: ""
            MongoDBTargets: ""
            JdbcTargets: ""
            DynamoDBTargets: ""
            IcebergTargets: ""
          LineageConfiguration:
            CrawlerLineageSettings: ""
          CrawlerSecurityConfiguration: ""
          Name: ""
          Role: ""
          LakeFormationConfiguration:
            AccountId: ""
            UseLakeFormationCredentials: ""
          Version: ""
          State: ""
          LastCrawl:
            Status: ""
            LogGroup: ""
            MessagePrefix: ""
            StartTime: ""
            LogStream: ""
            ErrorMessage: ""
          Schedule:
            ScheduleExpression: ""
            State: ""
          CreationTime: ""
          LastUpdated: ""
          TablePrefix: ""
      properties:
        Crawler:
          $ref: '#/components/schemas/GetCrawlerResponse_Crawler'
      type: object
    GetCrawlerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler to retrieve metadata for.
      required:
      - Name
      title: GetCrawlerRequest
      type: object
    GetCrawlerMetricsResponse:
      example:
        NextToken: ""
        CrawlerMetricsList: ""
      properties:
        CrawlerMetricsList:
          allOf:
          - $ref: '#/components/schemas/CrawlerMetricsList'
          - description: A list of metrics for the specified crawler.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the returned list does not contain\
              \ the last metric available."
      type: object
    GetCrawlerMetricsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        CrawlerNameList: ""
      properties:
        CrawlerNameList:
          allOf:
          - $ref: '#/components/schemas/CrawlerNameList'
          - description: A list of the names of crawlers about which to retrieve metrics.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
      title: GetCrawlerMetricsRequest
      type: object
    GetCrawlersResponse:
      example:
        NextToken: ""
        Crawlers: ""
      properties:
        Crawlers:
          allOf:
          - $ref: '#/components/schemas/CrawlerList'
          - description: A list of crawler metadata.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the returned list has not reached\
              \ the end of those defined in this customer account."
      type: object
    GetCrawlersRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The number of crawlers to return on each call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation request."
      title: GetCrawlersRequest
      type: object
    GetCustomEntityTypeResponse:
      example:
        ContextWords: ""
        RegexString: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the custom pattern that you retrieved.
        RegexString:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A regular expression string that is used for detecting sensitive
              data in a custom pattern.
        ContextWords:
          allOf:
          - $ref: '#/components/schemas/ContextWords'
          - description: A list of context words if specified when you created the
              custom pattern. If none of these context words are found within the
              vicinity of the regular expression the data will not be detected as
              sensitive data.
      type: object
    GetCustomEntityTypeRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the custom pattern that you want to retrieve.
      required:
      - Name
      title: GetCustomEntityTypeRequest
      type: object
    GetDataCatalogEncryptionSettingsResponse:
      example:
        DataCatalogEncryptionSettings:
          EncryptionAtRest:
            CatalogEncryptionMode: ""
            SseAwsKmsKeyId: ""
          ConnectionPasswordEncryption:
            ReturnConnectionPasswordEncrypted: ""
            AwsKmsKeyId: ""
      properties:
        DataCatalogEncryptionSettings:
          $ref: '#/components/schemas/GetDataCatalogEncryptionSettingsResponse_DataCatalogEncryptionSettings'
      type: object
    GetDataCatalogEncryptionSettingsRequest:
      example:
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog to retrieve the security configuration\
              \ for. If none is provided, the Amazon Web Services account ID is used\
              \ by default."
      title: GetDataCatalogEncryptionSettingsRequest
      type: object
    GetDataQualityResultResponse:
      example:
        RuleResults: ""
        Score: ""
        RulesetName: ""
        JobRunId: ""
        RulesetEvaluationRunId: ""
        JobName: ""
        EvaluationContext: ""
        CompletedOn: ""
        ResultId: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
        StartedOn: ""
      properties:
        ResultId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A unique result ID for the data quality result.
        Score:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: An aggregate data quality score. Represents the ratio of
              rules that passed to the total number of rules.
        DataSource:
          $ref: '#/components/schemas/GetDataQualityResultResponse_DataSource'
        RulesetName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the ruleset associated with the data quality
              result.
        EvaluationContext:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "In the context of a job in Glue Studio, each node in the\
              \ canvas is typically assigned some sort of name and data quality nodes\
              \ will have names. In the case of multiple nodes, the <code>evaluationContext</code>\
              \ can differentiate the nodes."
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the run for this data quality result
              started.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the run for this data quality result
              was completed.
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The job name associated with the data quality result, if\
              \ any."
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: "The job run ID associated with the data quality result,\
              \ if any."
        RulesetEvaluationRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run ID associated with the ruleset evaluation.
        RuleResults:
          allOf:
          - $ref: '#/components/schemas/DataQualityRuleResults'
          - description: 'A list of <code>DataQualityRuleResult</code> objects representing
              the results for each rule. '
      type: object
    GetDataQualityResultRequest:
      example:
        ResultId: ""
      properties:
        ResultId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A unique result ID for the data quality result.
      required:
      - ResultId
      title: GetDataQualityResultRequest
      type: object
    GetDataQualityRuleRecommendationRunResponse:
      example:
        Status: ""
        RecommendedRuleset: ""
        CreatedRulesetName: ""
        Timeout: ""
        LastModifiedOn: ""
        ErrorString: ""
        CompletedOn: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
        StartedOn: ""
        Role: ""
        ExecutionTime: ""
        RunId: ""
        NumberOfWorkers: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
        DataSource:
          $ref: '#/components/schemas/GetDataQualityRuleRecommendationRunResponse_DataSource'
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: An IAM role supplied to encrypt the results of the run.
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of <code>G.1X</code> workers to be used in the
              run. The default is 5.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout for a run in minutes. This is the maximum time\
              \ that a run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The status for this run.
        ErrorString:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The error strings that are associated with the run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this run started.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp. The last point in time when this data quality
              rule recommendation run was modified.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this run was completed.
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          - description: The amount of time (in seconds) that the run consumed resources.
        RecommendedRuleset:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetString'
          - description: "When a start rule recommendation run completes, it creates\
              \ a recommended ruleset (a set of rules). This member has those rules\
              \ in Data Quality Definition Language (DQDL) format."
        CreatedRulesetName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the ruleset that was created by the run.
      type: object
    GetDataQualityRuleRecommendationRunRequest:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
      required:
      - RunId
      title: GetDataQualityRuleRecommendationRunRequest
      type: object
    GetDataQualityRulesetResponse:
      example:
        RecommendationRunId: ""
        Ruleset: ""
        Description: ""
        TargetTable:
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
        LastModifiedOn: ""
        CreatedOn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the ruleset.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the ruleset.
        Ruleset:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetString'
          - description: "A Data Quality Definition Language (DQDL) ruleset. For more\
              \ information, see the Glue developer guide."
        TargetTable:
          $ref: '#/components/schemas/GetDataQualityRulesetResponse_TargetTable'
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp. The time and date that this data quality ruleset
              was created.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp. The last point in time when this data quality
              ruleset was modified.
        RecommendationRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: "When a ruleset was created from a recommendation run, this\
              \ run ID is generated to link the two together."
      type: object
    GetDataQualityRulesetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the ruleset.
      required:
      - Name
      title: GetDataQualityRulesetRequest
      type: object
    GetDataQualityRulesetEvaluationRunResponse:
      example:
        Status: ""
        AdditionalDataSources: ""
        Timeout: ""
        ResultIds: ""
        LastModifiedOn: ""
        ErrorString: ""
        CompletedOn: ""
        RulesetNames: ""
        AdditionalRunOptions:
          ResultsS3Prefix: ""
          CloudWatchMetricsEnabled: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
        StartedOn: ""
        Role: ""
        ExecutionTime: ""
        RunId: ""
        NumberOfWorkers: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
        DataSource:
          $ref: '#/components/schemas/GetDataQualityRulesetEvaluationRunResponse_DataSource'
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: An IAM role supplied to encrypt the results of the run.
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of <code>G.1X</code> workers to be used in the
              run. The default is 5.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout for a run in minutes. This is the maximum time\
              \ that a run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        AdditionalRunOptions:
          $ref: '#/components/schemas/GetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions'
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The status for this run.
        ErrorString:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The error strings that are associated with the run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this run started.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp. The last point in time when this data quality
              rule recommendation run was modified.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this run was completed.
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          - description: The amount of time (in seconds) that the run consumed resources.
        RulesetNames:
          allOf:
          - $ref: '#/components/schemas/RulesetNames'
          - description: A list of ruleset names for the run.
        ResultIds:
          allOf:
          - $ref: '#/components/schemas/DataQualityResultIdList'
          - description: A list of result IDs for the data quality results for the
              run.
        AdditionalDataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceMap'
          - description: A map of reference strings to additional data sources you
              can specify for an evaluation run.
      type: object
    GetDataQualityRulesetEvaluationRunRequest:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
      required:
      - RunId
      title: GetDataQualityRulesetEvaluationRunRequest
      type: object
    GetDatabaseResponse:
      example:
        Database:
          LocationUri: ""
          CreateTableDefaultPermissions: ""
          Description: ""
          Parameters: ""
          TargetDatabase:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
          CreateTime: ""
          FederatedDatabase:
            ConnectionName: ""
            Identifier: ""
          CatalogId: ""
          Name: ""
      properties:
        Database:
          $ref: '#/components/schemas/GetDatabaseResponse_Database'
      type: object
    GetDatabaseRequest:
      example:
        CatalogId: ""
        Name: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the database resides.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database to retrieve. For Hive compatibility,\
              \ this should be all lowercase."
      required:
      - Name
      title: GetDatabaseRequest
      type: object
    GetDatabasesResponse:
      example:
        DatabaseList: ""
        NextToken: ""
      properties:
        DatabaseList:
          allOf:
          - $ref: '#/components/schemas/DatabaseList'
          - description: A list of <code>Database</code> objects from the specified
              catalog.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
      required:
      - DatabaseList
      type: object
    GetDatabasesRequest:
      example:
        NextToken: ""
        ResourceShareType: ""
        MaxResults: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog from which to retrieve <code>Databases</code>.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CatalogGetterPageSize'
          - description: The maximum number of databases to return in one response.
        ResourceShareType:
          allOf:
          - $ref: '#/components/schemas/ResourceShareType'
          - description: "<p>Allows you to specify that you want to list the databases\
              \ shared with your account. The allowable values are <code>FEDERATED</code>,\
              \ <code>FOREIGN</code> or <code>ALL</code>. </p> <ul> <li> <p>If set\
              \ to <code>FEDERATED</code>, will list the federated databases (referencing\
              \ an external entity) shared with your account.</p> </li> <li> <p>If\
              \ set to <code>FOREIGN</code>, will list the databases shared with your\
              \ account. </p> </li> <li> <p>If set to <code>ALL</code>, will list\
              \ the databases shared with your account, as well as the databases in\
              \ yor local account. </p> </li> </ul>"
      title: GetDatabasesRequest
      type: object
    GetDataflowGraphResponse:
      example:
        DagEdges: ""
        DagNodes: ""
      properties:
        DagNodes:
          allOf:
          - $ref: '#/components/schemas/DagNodes'
          - description: A list of the nodes in the resulting DAG.
        DagEdges:
          allOf:
          - $ref: '#/components/schemas/DagEdges'
          - description: A list of the edges in the resulting DAG.
      type: object
    GetDataflowGraphRequest:
      example:
        PythonScript: ""
      properties:
        PythonScript:
          allOf:
          - $ref: '#/components/schemas/PythonScript'
          - description: The Python script to transform.
      title: GetDataflowGraphRequest
      type: object
    GetDevEndpointResponse:
      example:
        DevEndpoint:
          CreatedTimestamp: ""
          NumberOfNodes: ""
          SubnetId: ""
          PublicAddress: ""
          PublicKeys: ""
          WorkerType: ""
          ExtraPythonLibsS3Path: ""
          LastUpdateStatus: ""
          NumberOfWorkers: ""
          ZeppelinRemoteSparkInterpreterPort: ""
          Status: ""
          ExtraJarsS3Path: ""
          PublicKey: ""
          Arguments: ""
          AvailabilityZone: ""
          LastModifiedTimestamp: ""
          SecurityGroupIds: ""
          RoleArn: ""
          YarnEndpointAddress: ""
          EndpointName: ""
          VpcId: ""
          GlueVersion: ""
          FailureReason: ""
          SecurityConfiguration: ""
          PrivateAddress: ""
      properties:
        DevEndpoint:
          $ref: '#/components/schemas/GetDevEndpointResponse_DevEndpoint'
      type: object
    GetDevEndpointRequest:
      example:
        EndpointName: ""
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Name of the <code>DevEndpoint</code> to retrieve information
              for.
      required:
      - EndpointName
      title: GetDevEndpointRequest
      type: object
    GetDevEndpointsResponse:
      example:
        NextToken: ""
        DevEndpoints: ""
      properties:
        DevEndpoints:
          allOf:
          - $ref: '#/components/schemas/DevEndpointList'
          - description: A list of <code>DevEndpoint</code> definitions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all <code>DevEndpoint</code>\
              \ definitions have yet been returned."
      type: object
    GetDevEndpointsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of information to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation call."
      title: GetDevEndpointsRequest
      type: object
    GetJobResponse:
      example:
        Job:
          Connections:
            Connections: ""
          MaxRetries: ""
          Description: ""
          Timeout: ""
          SourceControlDetails:
            LastCommitId: ""
            Repository: ""
            Owner: ""
            AuthStrategy: ""
            Branch: ""
            AuthToken: ""
            Folder: ""
            Provider: ""
          AllocatedCapacity: ""
          LastModifiedOn: ""
          Name: ""
          Role: ""
          DefaultArguments: ""
          NotificationProperty:
            NotifyDelayAfter: ""
          CodeGenConfigurationNodes: ""
          WorkerType: ""
          ExecutionClass: ""
          LogUri: ""
          Command:
            Runtime: ""
            PythonVersion: ""
            ScriptLocation: ""
            Name: ""
          GlueVersion: ""
          ExecutionProperty:
            MaxConcurrentRuns: ""
          CreatedOn: ""
          SecurityConfiguration: ""
          NumberOfWorkers: ""
          NonOverridableArguments: ""
          MaxCapacity: ""
      properties:
        Job:
          $ref: '#/components/schemas/GetJobResponse_Job'
      type: object
    GetJobRequest:
      example:
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition to retrieve.
      required:
      - JobName
      title: GetJobRequest
      type: object
    GetJobBookmarkResponse:
      example:
        JobBookmarkEntry:
          Attempt: ""
          Version: ""
          JobName: ""
          PreviousRunId: ""
          Run: ""
          JobBookmark: ""
          RunId: ""
      properties:
        JobBookmarkEntry:
          $ref: '#/components/schemas/GetJobBookmarkResponse_JobBookmarkEntry'
      type: object
    GetJobBookmarkRequest:
      example:
        JobName: ""
        RunId: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The name of the job in question.
        RunId:
          allOf:
          - $ref: '#/components/schemas/RunId'
          - description: The unique run identifier associated with this job run.
      required:
      - JobName
      title: GetJobBookmarkRequest
      type: object
    GetJobRunResponse:
      example:
        JobRun:
          PredecessorRuns: ""
          Timeout: ""
          AllocatedCapacity: ""
          PreviousRunId: ""
          JobName: ""
          Arguments: ""
          LastModifiedOn: ""
          CompletedOn: ""
          StartedOn: ""
          ExecutionTime: ""
          NotificationProperty:
            NotifyDelayAfter: ""
          WorkerType: ""
          TriggerName: ""
          ExecutionClass: ""
          Attempt: ""
          GlueVersion: ""
          DPUSeconds: ""
          Id: ""
          SecurityConfiguration: ""
          LogGroupName: ""
          ErrorMessage: ""
          NumberOfWorkers: ""
          JobRunState: ""
          MaxCapacity: ""
      properties:
        JobRun:
          $ref: '#/components/schemas/GetJobRunResponse_JobRun'
      type: object
    GetJobRunRequest:
      example:
        PredecessorsIncluded: ""
        JobName: ""
        RunId: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the job definition being run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the job run.
        PredecessorsIncluded:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: True if a list of predecessor runs should be returned.
      required:
      - JobName
      - RunId
      title: GetJobRunRequest
      type: object
    GetJobRunsResponse:
      example:
        NextToken: ""
        JobRuns: ""
      properties:
        JobRuns:
          allOf:
          - $ref: '#/components/schemas/JobRunList'
          - description: A list of job-run metadata objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all requested job runs have\
              \ been returned."
      type: object
    GetJobRunsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition for which to retrieve all
              job runs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of the response.
      required:
      - JobName
      title: GetJobRunsRequest
      type: object
    GetJobsResponse:
      example:
        NextToken: ""
        Jobs: ""
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/JobList'
          - description: A list of job definitions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all job definitions have yet\
              \ been returned."
      type: object
    GetJobsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of the response.
      title: GetJobsRequest
      type: object
    GetMLTaskRunResponse:
      example:
        Status: ""
        ExecutionTime: ""
        TaskRunId: ""
        LastModifiedOn: ""
        LogGroupName: ""
        Properties:
          ExportLabelsTaskRunProperties:
            OutputS3Path: ""
          FindMatchesTaskRunProperties:
            JobRunId: ""
            JobName: ""
            JobId: ""
          TaskType: ""
          LabelingSetGenerationTaskRunProperties:
            OutputS3Path: ""
          ImportLabelsTaskRunProperties:
            Replace: ""
            InputS3Path: ""
        ErrorString: ""
        CompletedOn: ""
        TransformId: ""
        StartedOn: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the task run.
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The status for this task run.
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The names of the log groups that are associated with the
              task run.
        Properties:
          $ref: '#/components/schemas/GetMLTaskRunResponse_Properties'
        ErrorString:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The error strings that are associated with the task run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this task run started.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this task run was last modified.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this task run was completed.
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          - description: The amount of time (in seconds) that the task run consumed
              resources.
      type: object
    GetMLTaskRunRequest:
      example:
        TaskRunId: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the task run.
      required:
      - TaskRunId
      - TransformId
      title: GetMLTaskRunRequest
      type: object
    GetMLTaskRunsResponse:
      example:
        NextToken: ""
        TaskRuns: ""
      properties:
        TaskRuns:
          allOf:
          - $ref: '#/components/schemas/TaskRunList'
          - description: A list of task runs that are associated with the transform.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      type: object
    GetMLTaskRunsRequest:
      example:
        NextToken: ""
        Filter:
          Status: ""
          TaskRunType: ""
          StartedAfter: ""
          StartedBefore: ""
        MaxResults: ""
        Sort:
          SortDirection: ""
          Column: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token for pagination of the results. The default is empty.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results to return. '
        Filter:
          $ref: '#/components/schemas/GetMLTaskRunsRequest_Filter'
        Sort:
          $ref: '#/components/schemas/GetMLTaskRunsRequest_Sort'
      required:
      - TransformId
      title: GetMLTaskRunsRequest
      type: object
    GetMLTransformResponse:
      example:
        Status: ""
        MaxRetries: ""
        Description: ""
        Parameters:
          TransformType: ""
          FindMatchesParameters:
            PrecisionRecallTradeoff: ""
            EnforceProvidedLabels: ""
            PrimaryKeyColumnName: ""
            AccuracyCostTradeoff: ""
        TransformEncryption:
          MlUserDataEncryption:
            KmsKeyId: ""
            MlUserDataEncryptionMode: ""
          TaskRunSecurityConfigurationName: ""
        Timeout: ""
        Schema: ""
        LabelCount: ""
        LastModifiedOn: ""
        EvaluationMetrics:
          FindMatchesMetrics:
            AreaUnderPRCurve: ""
            ConfusionMatrix:
              NumFalsePositives: ""
              NumTruePositives: ""
              NumFalseNegatives: ""
              NumTrueNegatives: ""
            Precision: ""
            Recall: ""
            ColumnImportances: ""
            F1: ""
          TransformType: ""
        Name: ""
        Role: ""
        WorkerType: ""
        GlueVersion: ""
        CreatedOn: ""
        TransformId: ""
        InputRecordTables: ""
        NumberOfWorkers: ""
        MaxCapacity: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: "The unique identifier of the transform, generated at the\
              \ time that the transform was created."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique name given to the transform when it was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the transform.
        Status:
          allOf:
          - $ref: '#/components/schemas/TransformStatusType'
          - description: "The last known status of the transform (to indicate whether\
              \ it can be used or not). One of \"NOT_READY\", \"READY\", or \"DELETING\"\
              ."
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the transform was created.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the transform was last modified.
        InputRecordTables:
          allOf:
          - $ref: '#/components/schemas/GlueTables'
          - description: A list of Glue table definitions used by the transform.
        Parameters:
          $ref: '#/components/schemas/GetMLTransformResponse_Parameters'
        EvaluationMetrics:
          $ref: '#/components/schemas/GetMLTransformResponse_EvaluationMetrics'
        LabelCount:
          allOf:
          - $ref: '#/components/schemas/LabelCount'
          - description: The number of labels available for this transform.
        Schema:
          allOf:
          - $ref: '#/components/schemas/TransformSchema'
          - description: "The <code>Map&lt;Column, Type&gt;</code> object that represents\
              \ the schema that this transform accepts. Has an upper bound of 100\
              \ columns."
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: The name or Amazon Resource Name (ARN) of the IAM role with
              the required permissions.
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "This value determines which version of Glue this machine\
              \ learning transform is compatible with. Glue 1.0 is recommended for\
              \ most customers. If the value is not set, the Glue compatibility defaults\
              \ to Glue 0.9. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions\"\
              >Glue Versions</a> in the developer guide."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>The number of Glue data processing units (DPUs) that\
              \ are allocated to task runs for this transform. You can allocate from\
              \ 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing\
              \ power that consists of 4 vCPUs of compute capacity and 16 GB of memory.\
              \ For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              >Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field\
              \ is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code>\
              \ field is set automatically and becomes read-only.</p>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul>\
              \ <li> <p>For the <code>Standard</code> worker type, each worker provides\
              \ 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p>\
              \ </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides\
              \ 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p>\
              \ </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides\
              \ 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p>\
              \ </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when this task runs.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout for a task run for this transform in minutes.\
              \ This is the maximum time that a task run for this transform can consume\
              \ resources before it is terminated and enters <code>TIMEOUT</code>\
              \ status. The default is 2,880 minutes (48 hours)."
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The maximum number of times to retry a task for this transform
              after a task run fails.
        TransformEncryption:
          $ref: '#/components/schemas/CreateMLTransformRequest_TransformEncryption'
      type: object
    GetMLTransformRequest:
      example:
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: "The unique identifier of the transform, generated at the\
              \ time that the transform was created."
      required:
      - TransformId
      title: GetMLTransformRequest
      type: object
    GetMLTransformsResponse:
      example:
        NextToken: ""
        Transforms: ""
      properties:
        Transforms:
          allOf:
          - $ref: '#/components/schemas/TransformList'
          - description: A list of machine learning transforms.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      required:
      - Transforms
      type: object
    GetMLTransformsRequest:
      example:
        NextToken: ""
        Filter:
          Status: ""
          GlueVersion: ""
          CreatedAfter: ""
          Schema: ""
          LastModifiedAfter: ""
          CreatedBefore: ""
          TransformType: ""
          LastModifiedBefore: ""
          Name: ""
        MaxResults: ""
        Sort:
          SortDirection: ""
          Column: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A paginated token to offset the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
        Filter:
          $ref: '#/components/schemas/GetMLTransformsRequest_Filter'
        Sort:
          $ref: '#/components/schemas/GetMLTransformsRequest_Sort'
      title: GetMLTransformsRequest
      type: object
    GetMappingResponse:
      example:
        Mapping: ""
      properties:
        Mapping:
          allOf:
          - $ref: '#/components/schemas/MappingList'
          - description: A list of mappings to the specified targets.
      required:
      - Mapping
      type: object
    GetMappingRequest:
      example:
        Sinks: ""
        Source:
          TableName: ""
          DatabaseName: ""
        Location:
          S3: ""
          Jdbc: ""
          DynamoDB: ""
      properties:
        Source:
          $ref: '#/components/schemas/GetMappingRequest_Source'
        Sinks:
          allOf:
          - $ref: '#/components/schemas/CatalogEntries'
          - description: A list of target tables.
        Location:
          $ref: '#/components/schemas/GetMappingRequest_Location'
      required:
      - Source
      title: GetMappingRequest
      type: object
    GetPartitionResponse:
      example:
        Partition:
          TableName: ""
          Parameters: ""
          LastAnalyzedTime: ""
          Values: ""
          DatabaseName: ""
          CreationTime: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          CatalogId: ""
      properties:
        Partition:
          $ref: '#/components/schemas/GetPartitionResponse_Partition'
      type: object
    GetPartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partition in question\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partition resides.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partition's table.
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The values that define the partition.
      required:
      - DatabaseName
      - PartitionValues
      - TableName
      title: GetPartitionRequest
      type: object
    GetPartitionIndexesResponse:
      example:
        PartitionIndexDescriptorList: ""
        NextToken: ""
      properties:
        PartitionIndexDescriptorList:
          allOf:
          - $ref: '#/components/schemas/PartitionIndexDescriptorList'
          - description: A list of index descriptors.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, present if the current list segment\
              \ is not the last."
      type: object
    GetPartitionIndexesRequest:
      example:
        TableName: ""
        NextToken: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog ID where the table resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of a database from which you want to retrieve
              partition indexes.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of a table for which you want to retrieve
              the partition indexes.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, included if this is a continuation\
              \ call."
      required:
      - DatabaseName
      - TableName
      title: GetPartitionIndexesRequest
      type: object
    GetPartitionsResponse:
      example:
        Partitions: ""
        NextToken: ""
      properties:
        Partitions:
          allOf:
          - $ref: '#/components/schemas/PartitionList'
          - description: A list of requested partitions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the returned list of partitions\
              \ does not include the last one."
      type: object
    GetPartitionsRequest:
      example:
        TableName: ""
        ExcludeColumnSchema: ""
        NextToken: ""
        QueryAsOfTime: ""
        Expression: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
        Segment:
          SegmentNumber: ""
          TotalSegments: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        Expression:
          allOf:
          - $ref: '#/components/schemas/PredicateString'
          - description: "<p>An expression that filters the partitions to be returned.</p>\
              \ <p>The expression uses SQL syntax similar to the SQL <code>WHERE</code>\
              \ filter clause. The SQL statement parser <a href=\"http://jsqlparser.sourceforge.net/home.php\"\
              >JSQLParser</a> parses the expression. </p> <p> <i>Operators</i>: The\
              \ following are the operators that you can use in the <code>Expression</code>\
              \ API call:</p> <dl> <dt>=</dt> <dd> <p>Checks whether the values of\
              \ the two operands are equal; if yes, then the condition becomes true.</p>\
              \ <p>Example: Assume 'variable a' holds 10 and 'variable b' holds 20.\
              \ </p> <p>(a = b) is not true.</p> </dd> <dt>&lt; &gt;</dt> <dd> <p>Checks\
              \ whether the values of two operands are equal; if the values are not\
              \ equal, then the condition becomes true.</p> <p>Example: (a &lt; &gt;\
              \ b) is true.</p> </dd> <dt>&gt;</dt> <dd> <p>Checks whether the value\
              \ of the left operand is greater than the value of the right operand;\
              \ if yes, then the condition becomes true.</p> <p>Example: (a &gt; b)\
              \ is not true.</p> </dd> <dt>&lt;</dt> <dd> <p>Checks whether the value\
              \ of the left operand is less than the value of the right operand; if\
              \ yes, then the condition becomes true.</p> <p>Example: (a &lt; b) is\
              \ true.</p> </dd> <dt>&gt;=</dt> <dd> <p>Checks whether the value of\
              \ the left operand is greater than or equal to the value of the right\
              \ operand; if yes, then the condition becomes true.</p> <p>Example:\
              \ (a &gt;= b) is not true.</p> </dd> <dt>&lt;=</dt> <dd> <p>Checks whether\
              \ the value of the left operand is less than or equal to the value of\
              \ the right operand; if yes, then the condition becomes true.</p> <p>Example:\
              \ (a &lt;= b) is true.</p> </dd> <dt>AND, OR, IN, BETWEEN, LIKE, NOT,\
              \ IS NULL</dt> <dd> <p>Logical operators.</p> </dd> </dl> <p> <i>Supported\
              \ Partition Key Types</i>: The following are the supported partition\
              \ keys.</p> <ul> <li> <p> <code>string</code> </p> </li> <li> <p> <code>date</code>\
              \ </p> </li> <li> <p> <code>timestamp</code> </p> </li> <li> <p> <code>int</code>\
              \ </p> </li> <li> <p> <code>bigint</code> </p> </li> <li> <p> <code>long</code>\
              \ </p> </li> <li> <p> <code>tinyint</code> </p> </li> <li> <p> <code>smallint</code>\
              \ </p> </li> <li> <p> <code>decimal</code> </p> </li> </ul> <p>If an\
              \ type is encountered that is not valid, an exception is thrown. </p>\
              \ <p>The following list shows the valid operators on each type. When\
              \ you define a crawler, the <code>partitionKey</code> type is created\
              \ as a <code>STRING</code>, to be compatible with the catalog partitions.\
              \ </p> <p> <i>Sample API Call</i>: </p>"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ these partitions."
        Segment:
          $ref: '#/components/schemas/GetPartitionsRequest_Segment'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of partitions to return in a single response.
        ExcludeColumnSchema:
          allOf:
          - $ref: '#/components/schemas/BooleanNullable'
          - description: "When true, specifies not returning the partition column\
              \ schema. Useful when you are interested only in other partition attributes\
              \ such as partition values or location. This approach avoids the problem\
              \ of a large response by not returning duplicate data."
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction ID at which to read the partition contents.
        QueryAsOfTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time as of when to read the partition contents. If not\
              \ set, the most recent transaction commit time will be used. Cannot\
              \ be specified along with <code>TransactionId</code>."
      required:
      - DatabaseName
      - TableName
      title: GetPartitionsRequest
      type: object
    GetPlanResponse:
      example:
        ScalaCode: ""
        PythonScript: ""
      properties:
        PythonScript:
          allOf:
          - $ref: '#/components/schemas/PythonScript'
          - description: A Python script to perform the mapping.
        ScalaCode:
          allOf:
          - $ref: '#/components/schemas/ScalaCode'
          - description: The Scala code to perform the mapping.
      type: object
    GetPlanRequest:
      example:
        Sinks: ""
        Language: ""
        Mapping: ""
        AdditionalPlanOptionsMap: ""
        Source:
          TableName: ""
          DatabaseName: ""
        Location:
          S3: ""
          Jdbc: ""
          DynamoDB: ""
      properties:
        Mapping:
          allOf:
          - $ref: '#/components/schemas/MappingList'
          - description: The list of mappings from a source table to target tables.
        Source:
          $ref: '#/components/schemas/GetPlanRequest_Source'
        Sinks:
          allOf:
          - $ref: '#/components/schemas/CatalogEntries'
          - description: The target tables.
        Location:
          $ref: '#/components/schemas/GetPlanRequest_Location'
        Language:
          allOf:
          - $ref: '#/components/schemas/Language'
          - description: The programming language of the code to perform the mapping.
        AdditionalPlanOptionsMap:
          allOf:
          - $ref: '#/components/schemas/AdditionalPlanOptionsMap'
          - description: "<p>A map to hold additional optional key-value parameters.</p>\
              \ <p>Currently, these key-value pairs are supported:</p> <ul> <li> <p>\
              \ <code>inferSchema</code>\_ — \_Specifies whether to set <code>inferSchema</code>\
              \ to true or false for the default script generated by an Glue job.\
              \ For example, to set <code>inferSchema</code> to true, pass the following\
              \ key value pair:</p> <p> <code>--additional-plan-options-map '{\"inferSchema\"\
              :\"true\"}'</code> </p> </li> </ul>"
      required:
      - Mapping
      - Source
      title: GetPlanRequest
      type: object
    GetRegistryResponse:
      example:
        Status: ""
        Description: ""
        CreatedTime: ""
        RegistryName: ""
        UpdatedTime: ""
        RegistryArn: ""
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the registry.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the registry.
        Status:
          allOf:
          - $ref: '#/components/schemas/RegistryStatus'
          - description: The status of the registry.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The date and time the registry was created.
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdatedTimestamp'
          - description: The date and time the registry was updated.
      type: object
    GetRegistryInput:
      example:
        RegistryId:
          RegistryName: ""
          RegistryArn: ""
      properties:
        RegistryId:
          $ref: '#/components/schemas/DeleteRegistryInput_RegistryId'
      required:
      - RegistryId
      title: GetRegistryInput
      type: object
    GetResourcePoliciesResponse:
      example:
        GetResourcePoliciesResponseList: ""
        NextToken: ""
      properties:
        GetResourcePoliciesResponseList:
          allOf:
          - $ref: '#/components/schemas/GetResourcePoliciesResponseList'
          - description: A list of the individual resource policies and the account-level
              resource policy.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the returned list does not contain\
              \ the last resource policy available."
      type: object
    GetResourcePoliciesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
      title: GetResourcePoliciesRequest
      type: object
    GetResourcePolicyResponse:
      example:
        PolicyHash: ""
        CreateTime: ""
        UpdateTime: ""
        PolicyInJson: ""
      properties:
        PolicyInJson:
          allOf:
          - $ref: '#/components/schemas/PolicyJsonString'
          - description: "Contains the requested policy document, in JSON format."
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: Contains the hash value associated with this policy.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which the policy was created.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which the policy was last updated.
      type: object
    GetResourcePolicyRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: "The ARN of the Glue resource for which to retrieve the resource\
              \ policy. If not supplied, the Data Catalog resource policy is returned.\
              \ Use <code>GetResourcePolicies</code> to view all existing resource\
              \ policies. For more information see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/glue-specifying-resource-arns.html\"\
              >Specifying Glue Resource ARNs</a>. "
      title: GetResourcePolicyRequest
      type: object
    GetSchemaResponse:
      example:
        Description: ""
        CreatedTime: ""
        SchemaArn: ""
        LatestSchemaVersion: ""
        RegistryName: ""
        DataFormat: ""
        UpdatedTime: ""
        RegistryArn: ""
        Compatibility: ""
        SchemaCheckpoint: ""
        SchemaStatus: ""
        SchemaName: ""
        NextSchemaVersion: ""
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of schema if specified when created
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: "The data format of the schema definition. Currently <code>AVRO</code>,\
              \ <code>JSON</code> and <code>PROTOBUF</code> are supported."
        Compatibility:
          allOf:
          - $ref: '#/components/schemas/Compatibility'
          - description: The compatibility mode of the schema.
        SchemaCheckpoint:
          allOf:
          - $ref: '#/components/schemas/SchemaCheckpointNumber'
          - description: The version number of the checkpoint (the last time the compatibility
              mode was changed).
        LatestSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The latest version of the schema associated with the returned
              schema definition.
        NextSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The next version of the schema associated with the returned
              schema definition.
        SchemaStatus:
          allOf:
          - $ref: '#/components/schemas/SchemaStatus'
          - description: The status of the schema.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The date and time the schema was created.
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdatedTimestamp'
          - description: The date and time the schema was updated.
      type: object
    GetSchemaInput:
      example:
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaInput_SchemaId'
      required:
      - SchemaId
      title: GetSchemaInput
      type: object
    GetSchemaByDefinitionResponse:
      example:
        Status: ""
        SchemaVersionId: ""
        CreatedTime: ""
        DataFormat: ""
        SchemaArn: ""
      properties:
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The schema ID of the schema version.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: "The data format of the schema definition. Currently <code>AVRO</code>,\
              \ <code>JSON</code> and <code>PROTOBUF</code> are supported."
        Status:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionStatus'
          - description: The status of the schema version.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The date and time the schema was created.
      type: object
    GetSchemaByDefinitionInput:
      example:
        SchemaDefinition: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaByDefinitionInput_SchemaId'
        SchemaDefinition:
          allOf:
          - $ref: '#/components/schemas/SchemaDefinitionString'
          - description: The definition of the schema for which schema details are
              required.
      required:
      - SchemaDefinition
      - SchemaId
      title: GetSchemaByDefinitionInput
      type: object
    GetSchemaVersionResponse:
      example:
        Status: ""
        SchemaVersionId: ""
        SchemaDefinition: ""
        CreatedTime: ""
        DataFormat: ""
        SchemaArn: ""
        VersionNumber: ""
      properties:
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The <code>SchemaVersionId</code> of the schema version.
        SchemaDefinition:
          allOf:
          - $ref: '#/components/schemas/SchemaDefinitionString'
          - description: The schema definition for the schema ID.
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: "The data format of the schema definition. Currently <code>AVRO</code>,\
              \ <code>JSON</code> and <code>PROTOBUF</code> are supported."
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
        Status:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionStatus'
          - description: 'The status of the schema version. '
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The date and time the schema version was created.
      type: object
    GetSchemaVersionInput:
      example:
        SchemaVersionId: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        SchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaInput_SchemaId'
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The <code>SchemaVersionId</code> of the schema version. This
              field is required for fetching by schema ID. Either this or the <code>SchemaId</code>
              wrapper has to be provided.
        SchemaVersionNumber:
          $ref: '#/components/schemas/GetSchemaVersionInput_SchemaVersionNumber'
      title: GetSchemaVersionInput
      type: object
    GetSchemaVersionsDiffResponse:
      example:
        Diff: ""
      properties:
        Diff:
          allOf:
          - $ref: '#/components/schemas/SchemaDefinitionDiff'
          - description: The difference between schemas as a string in JsonPatch format.
      type: object
    GetSchemaVersionsDiffInput:
      example:
        SecondSchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        FirstSchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
        SchemaDiffType: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaByDefinitionInput_SchemaId'
        FirstSchemaVersionNumber:
          $ref: '#/components/schemas/GetSchemaVersionsDiffInput_FirstSchemaVersionNumber'
        SecondSchemaVersionNumber:
          $ref: '#/components/schemas/GetSchemaVersionsDiffInput_SecondSchemaVersionNumber'
        SchemaDiffType:
          allOf:
          - $ref: '#/components/schemas/SchemaDiffType'
          - description: "Refers to <code>SYNTAX_DIFF</code>, which is the currently\
              \ supported diff type."
      required:
      - FirstSchemaVersionNumber
      - SchemaDiffType
      - SchemaId
      - SecondSchemaVersionNumber
      title: GetSchemaVersionsDiffInput
      type: object
    GetSecurityConfigurationResponse:
      example:
        SecurityConfiguration:
          CreatedTimeStamp: ""
          EncryptionConfiguration:
            S3Encryption: ""
            CloudWatchEncryption:
              KmsKeyArn: ""
              CloudWatchEncryptionMode: ""
            JobBookmarksEncryption:
              KmsKeyArn: ""
              JobBookmarksEncryptionMode: ""
          Name: ""
      properties:
        SecurityConfiguration:
          $ref: '#/components/schemas/GetSecurityConfigurationResponse_SecurityConfiguration'
      type: object
    GetSecurityConfigurationRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the security configuration to retrieve.
      required:
      - Name
      title: GetSecurityConfigurationRequest
      type: object
    GetSecurityConfigurationsResponse:
      example:
        NextToken: ""
        SecurityConfigurations: ""
      properties:
        SecurityConfigurations:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigurationList'
          - description: A list of security configurations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if there are more security configurations\
              \ to return."
      type: object
    GetSecurityConfigurationsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation call."
      title: GetSecurityConfigurationsRequest
      type: object
    GetSessionResponse:
      example:
        Session:
          Status: ""
          Connections:
            Connections: ""
          Progress: ""
          Description: ""
          Role: ""
          DefaultArguments: ""
          Command:
            PythonVersion: ""
            Name: ""
          GlueVersion: ""
          Id: ""
          CreatedOn: ""
          SecurityConfiguration: ""
          ErrorMessage: ""
          MaxCapacity: ""
      properties:
        Session:
          $ref: '#/components/schemas/GetSessionResponse_Session'
      type: object
    GetSessionRequest:
      example:
        RequestOrigin: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: 'The ID of the session. '
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: 'The origin of the request. '
      required:
      - Id
      title: GetSessionRequest
      type: object
    GetStatementResponse:
      example:
        Statement:
          Progress: ""
          State: ""
          Output:
            Status: ""
            ErrorName: ""
            ExecutionCount: ""
            ErrorValue: ""
            Data:
              TextPlain: ""
            Traceback: ""
          Id: ""
          CompletedOn: ""
          Code: ""
          StartedOn: ""
      properties:
        Statement:
          $ref: '#/components/schemas/GetStatementResponse_Statement'
      type: object
    GetStatementRequest:
      example:
        RequestOrigin: ""
        Id: ""
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The Session ID of the statement.
        Id:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The Id of the statement.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The origin of the request.
      required:
      - Id
      - SessionId
      title: GetStatementRequest
      type: object
    GetTableResponse:
      example:
        Table:
          VersionId: ""
          Owner: ""
          ViewOriginalText: ""
          Description: ""
          TableType: ""
          Parameters: ""
          CreatedBy: ""
          CreateTime: ""
          DatabaseName: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          Retention: ""
          IsRegisteredWithLakeFormation: ""
          CatalogId: ""
          FederatedTable:
            ConnectionName: ""
            Identifier: ""
            DatabaseIdentifier: ""
          Name: ""
          ViewExpandedText: ""
          LastAnalyzedTime: ""
          UpdateTime: ""
          TargetTable:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
            Name: ""
          PartitionKeys: ""
      properties:
        Table:
          $ref: '#/components/schemas/GetTableResponse_Table'
      type: object
    GetTableRequest:
      example:
        QueryAsOfTime: ""
        DatabaseName: ""
        CatalogId: ""
        Name: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the table resides. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database in the catalog in which the table\
              \ resides. For Hive compatibility, this name is entirely lowercase."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table for which to retrieve the definition.\
              \ For Hive compatibility, this name is entirely lowercase."
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: 'The transaction ID at which to read the table contents. '
        QueryAsOfTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time as of when to read the table contents. If not set,\
              \ the most recent transaction commit time will be used. Cannot be specified\
              \ along with <code>TransactionId</code>."
      required:
      - DatabaseName
      - Name
      title: GetTableRequest
      type: object
    GetTableVersionResponse:
      example:
        TableVersion:
          VersionId: ""
          Table:
            VersionId: ""
            Owner: ""
            ViewOriginalText: ""
            Description: ""
            TableType: ""
            Parameters: ""
            CreatedBy: ""
            CreateTime: ""
            DatabaseName: ""
            StorageDescriptor:
              StoredAsSubDirectories: ""
              Parameters: ""
              BucketColumns: ""
              NumberOfBuckets: ""
              AdditionalLocations: ""
              OutputFormat: ""
              Columns: ""
              SerdeInfo:
                Parameters: ""
                SerializationLibrary: ""
                Name: ""
              SortColumns: ""
              Compressed: ""
              SchemaReference:
                SchemaVersionId: ""
                SchemaId:
                  RegistryName: ""
                  SchemaArn: ""
                  SchemaName: ""
                SchemaVersionNumber: ""
              SkewedInfo:
                SkewedColumnNames: ""
                SkewedColumnValues: ""
                SkewedColumnValueLocationMaps: ""
              InputFormat: ""
              Location: ""
            LastAccessTime: ""
            Retention: ""
            IsRegisteredWithLakeFormation: ""
            CatalogId: ""
            FederatedTable:
              ConnectionName: ""
              Identifier: ""
              DatabaseIdentifier: ""
            Name: ""
            ViewExpandedText: ""
            LastAnalyzedTime: ""
            UpdateTime: ""
            TargetTable:
              DatabaseName: ""
              Region: ""
              CatalogId: ""
              Name: ""
            PartitionKeys: ""
      properties:
        TableVersion:
          $ref: '#/components/schemas/GetTableVersionResponse_TableVersion'
      type: object
    GetTableVersionRequest:
      example:
        VersionId: ""
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the tables reside. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The database in the catalog in which the table resides.\
              \ For Hive compatibility, this name is entirely lowercase."
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table. For Hive compatibility, this name\
              \ is entirely lowercase."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: 'The ID value of the table version to be retrieved. A <code>VersionID</code>
              is a string representation of an integer. Each version is incremented
              by 1. '
      required:
      - DatabaseName
      - TableName
      title: GetTableVersionRequest
      type: object
    GetTableVersionsResponse:
      example:
        NextToken: ""
        TableVersions: ""
      properties:
        TableVersions:
          allOf:
          - $ref: '#/components/schemas/GetTableVersionsList'
          - description: A list of strings identifying available versions of the specified
              table.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the list of available versions\
              \ does not include the last one."
      type: object
    GetTableVersionsRequest:
      example:
        TableName: ""
        NextToken: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the tables reside. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The database in the catalog in which the table resides.\
              \ For Hive compatibility, this name is entirely lowercase."
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table. For Hive compatibility, this name\
              \ is entirely lowercase."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CatalogGetterPageSize'
          - description: The maximum number of table versions to return in one response.
      required:
      - DatabaseName
      - TableName
      title: GetTableVersionsRequest
      type: object
    GetTablesResponse:
      example:
        NextToken: ""
        TableList: ""
      properties:
        TableList:
          allOf:
          - $ref: '#/components/schemas/TableList'
          - description: A list of the requested <code>Table</code> objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, present if the current list segment\
              \ is not the last."
      type: object
    GetTablesRequest:
      example:
        NextToken: ""
        QueryAsOfTime: ""
        Expression: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the tables reside. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The database in the catalog whose tables to list. For Hive\
              \ compatibility, this name is entirely lowercase."
        Expression:
          allOf:
          - $ref: '#/components/schemas/FilterString'
          - description: "A regular expression pattern. If present, only those tables\
              \ whose names match the pattern are returned."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, included if this is a continuation\
              \ call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CatalogGetterPageSize'
          - description: The maximum number of tables to return in a single response.
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: The transaction ID at which to read the table contents.
        QueryAsOfTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time as of when to read the table contents. If not set,\
              \ the most recent transaction commit time will be used. Cannot be specified\
              \ along with <code>TransactionId</code>."
      required:
      - DatabaseName
      title: GetTablesRequest
      type: object
    GetTagsResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The requested tags.
      type: object
    GetTagsRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource for which
              to retrieve tags.
      required:
      - ResourceArn
      title: GetTagsRequest
      type: object
    GetTriggerResponse:
      example:
        Trigger:
          Type: ""
          Description: ""
          Actions: ""
          EventBatchingCondition:
            BatchSize: ""
            BatchWindow: ""
          WorkflowName: ""
          State: ""
          Schedule: ""
          Id: ""
          Name: ""
          Predicate:
            Logical: ""
            Conditions: ""
      properties:
        Trigger:
          $ref: '#/components/schemas/GetTriggerResponse_Trigger'
      type: object
    GetTriggerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger to retrieve.
      required:
      - Name
      title: GetTriggerRequest
      type: object
    GetTriggersResponse:
      example:
        NextToken: ""
        Triggers: ""
      properties:
        Triggers:
          allOf:
          - $ref: '#/components/schemas/TriggerList'
          - description: A list of triggers for the specified job.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all the requested triggers\
              \ have yet been returned."
      type: object
    GetTriggersRequest:
      example:
        NextToken: ""
        DependentJobName: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation call."
        DependentJobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the job to retrieve triggers for. The trigger\
              \ that can start this job is returned, and if there is no such trigger,\
              \ all triggers are returned."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of the response.
      title: GetTriggersRequest
      type: object
    GetUnfilteredPartitionMetadataResponse:
      example:
        Partition:
          TableName: ""
          Parameters: ""
          LastAnalyzedTime: ""
          Values: ""
          DatabaseName: ""
          CreationTime: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          CatalogId: ""
        AuthorizedColumns: ""
        IsRegisteredWithLakeFormation: ""
      properties:
        Partition:
          $ref: '#/components/schemas/GetUnfilteredPartitionMetadataResponse_Partition'
        AuthorizedColumns:
          allOf:
          - $ref: '#/components/schemas/NameStringList'
          - description: A list of column names that the user has been granted access
              to.
        IsRegisteredWithLakeFormation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean value that indicates whether the partition location
              is registered with Lake Formation.
      type: object
    GetUnfilteredPartitionMetadataRequest:
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValues: ""
        AuditContext:
          RequestedColumns: ""
          AdditionalAuditContext: ""
          AllColumnsRequested: ""
        SupportedPermissionTypes: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog ID where the partition resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: (Required) Specifies the name of a database that contains
              the partition.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: (Required) Specifies the name of a table that contains the
              partition.
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: (Required) A list of partition key values.
        AuditContext:
          $ref: '#/components/schemas/GetUnfilteredPartitionMetadataRequest_AuditContext'
        SupportedPermissionTypes:
          allOf:
          - $ref: '#/components/schemas/PermissionTypeList'
          - description: '(Required) A list of supported permission types. '
      required:
      - CatalogId
      - DatabaseName
      - PartitionValues
      - SupportedPermissionTypes
      - TableName
      title: GetUnfilteredPartitionMetadataRequest
      type: object
    PermissionTypeMismatchException: {}
    GetUnfilteredPartitionsMetadataResponse:
      example:
        NextToken: ""
        UnfilteredPartitions: ""
      properties:
        UnfilteredPartitions:
          allOf:
          - $ref: '#/components/schemas/UnfilteredPartitionList'
          - description: A list of requested partitions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the returned list of partitions\
              \ does not include the last one."
      type: object
    GetUnfilteredPartitionsMetadataRequest:
      example:
        TableName: ""
        NextToken: ""
        Expression: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
        AuditContext:
          RequestedColumns: ""
          AdditionalAuditContext: ""
          AllColumnsRequested: ""
        SupportedPermissionTypes: ""
        Segment:
          SegmentNumber: ""
          TotalSegments: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is provided, the AWS account ID is used by default. "
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table that contains the partition.
        Expression:
          allOf:
          - $ref: '#/components/schemas/PredicateString'
          - description: "<p>An expression that filters the partitions to be returned.</p>\
              \ <p>The expression uses SQL syntax similar to the SQL <code>WHERE</code>\
              \ filter clause. The SQL statement parser <a href=\"http://jsqlparser.sourceforge.net/home.php\"\
              >JSQLParser</a> parses the expression. </p> <p> <i>Operators</i>: The\
              \ following are the operators that you can use in the <code>Expression</code>\
              \ API call:</p> <dl> <dt>=</dt> <dd> <p>Checks whether the values of\
              \ the two operands are equal; if yes, then the condition becomes true.</p>\
              \ <p>Example: Assume 'variable a' holds 10 and 'variable b' holds 20.\
              \ </p> <p>(a = b) is not true.</p> </dd> <dt>&lt; &gt;</dt> <dd> <p>Checks\
              \ whether the values of two operands are equal; if the values are not\
              \ equal, then the condition becomes true.</p> <p>Example: (a &lt; &gt;\
              \ b) is true.</p> </dd> <dt>&gt;</dt> <dd> <p>Checks whether the value\
              \ of the left operand is greater than the value of the right operand;\
              \ if yes, then the condition becomes true.</p> <p>Example: (a &gt; b)\
              \ is not true.</p> </dd> <dt>&lt;</dt> <dd> <p>Checks whether the value\
              \ of the left operand is less than the value of the right operand; if\
              \ yes, then the condition becomes true.</p> <p>Example: (a &lt; b) is\
              \ true.</p> </dd> <dt>&gt;=</dt> <dd> <p>Checks whether the value of\
              \ the left operand is greater than or equal to the value of the right\
              \ operand; if yes, then the condition becomes true.</p> <p>Example:\
              \ (a &gt;= b) is not true.</p> </dd> <dt>&lt;=</dt> <dd> <p>Checks whether\
              \ the value of the left operand is less than or equal to the value of\
              \ the right operand; if yes, then the condition becomes true.</p> <p>Example:\
              \ (a &lt;= b) is true.</p> </dd> <dt>AND, OR, IN, BETWEEN, LIKE, NOT,\
              \ IS NULL</dt> <dd> <p>Logical operators.</p> </dd> </dl> <p> <i>Supported\
              \ Partition Key Types</i>: The following are the supported partition\
              \ keys.</p> <ul> <li> <p> <code>string</code> </p> </li> <li> <p> <code>date</code>\
              \ </p> </li> <li> <p> <code>timestamp</code> </p> </li> <li> <p> <code>int</code>\
              \ </p> </li> <li> <p> <code>bigint</code> </p> </li> <li> <p> <code>long</code>\
              \ </p> </li> <li> <p> <code>tinyint</code> </p> </li> <li> <p> <code>smallint</code>\
              \ </p> </li> <li> <p> <code>decimal</code> </p> </li> </ul> <p>If an\
              \ type is encountered that is not valid, an exception is thrown. </p>"
        AuditContext:
          $ref: '#/components/schemas/GetUnfilteredPartitionMetadataRequest_AuditContext'
        SupportedPermissionTypes:
          allOf:
          - $ref: '#/components/schemas/PermissionTypeList'
          - description: 'A list of supported permission types. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is not the first call to retrieve\
              \ these partitions."
        Segment:
          $ref: '#/components/schemas/GetPartitionsRequest_Segment'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of partitions to return in a single response.
      required:
      - CatalogId
      - DatabaseName
      - SupportedPermissionTypes
      - TableName
      title: GetUnfilteredPartitionsMetadataRequest
      type: object
    GetUnfilteredTableMetadataResponse:
      example:
        CellFilters: ""
        Table:
          VersionId: ""
          Owner: ""
          ViewOriginalText: ""
          Description: ""
          TableType: ""
          Parameters: ""
          CreatedBy: ""
          CreateTime: ""
          DatabaseName: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          Retention: ""
          IsRegisteredWithLakeFormation: ""
          CatalogId: ""
          FederatedTable:
            ConnectionName: ""
            Identifier: ""
            DatabaseIdentifier: ""
          Name: ""
          ViewExpandedText: ""
          LastAnalyzedTime: ""
          UpdateTime: ""
          TargetTable:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
            Name: ""
          PartitionKeys: ""
        AuthorizedColumns: ""
        IsRegisteredWithLakeFormation: ""
      properties:
        Table:
          $ref: '#/components/schemas/GetUnfilteredTableMetadataResponse_Table'
        AuthorizedColumns:
          allOf:
          - $ref: '#/components/schemas/NameStringList'
          - description: A list of column names that the user has been granted access
              to.
        IsRegisteredWithLakeFormation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean value that indicates whether the partition location
              is registered with Lake Formation.
        CellFilters:
          allOf:
          - $ref: '#/components/schemas/ColumnRowFilterList'
          - description: A list of column row filters.
      type: object
    GetUnfilteredTableMetadataRequest:
      example:
        DatabaseName: ""
        CatalogId: ""
        AuditContext:
          RequestedColumns: ""
          AdditionalAuditContext: ""
          AllColumnsRequested: ""
        SupportedPermissionTypes: ""
        Name: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The catalog ID where the table resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: (Required) Specifies the name of a database that contains
              the table.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: (Required) Specifies the name of a table for which you are
              requesting metadata.
        AuditContext:
          $ref: '#/components/schemas/GetUnfilteredPartitionMetadataRequest_AuditContext'
        SupportedPermissionTypes:
          allOf:
          - $ref: '#/components/schemas/PermissionTypeList'
          - description: '(Required) A list of supported permission types. '
      required:
      - CatalogId
      - DatabaseName
      - Name
      - SupportedPermissionTypes
      title: GetUnfilteredTableMetadataRequest
      type: object
    GetUserDefinedFunctionResponse:
      example:
        UserDefinedFunction:
          FunctionName: ""
          OwnerName: ""
          OwnerType: ""
          CreateTime: ""
          ResourceUris: ""
          DatabaseName: ""
          ClassName: ""
          CatalogId: ""
      properties:
        UserDefinedFunction:
          $ref: '#/components/schemas/GetUserDefinedFunctionResponse_UserDefinedFunction'
      type: object
    GetUserDefinedFunctionRequest:
      example:
        FunctionName: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the function to be retrieved\
              \ is located. If none is provided, the Amazon Web Services account ID\
              \ is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the function is located.
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the function.
      required:
      - DatabaseName
      - FunctionName
      title: GetUserDefinedFunctionRequest
      type: object
    GetUserDefinedFunctionsResponse:
      example:
        NextToken: ""
        UserDefinedFunctions: ""
      properties:
        UserDefinedFunctions:
          allOf:
          - $ref: '#/components/schemas/UserDefinedFunctionList'
          - description: A list of requested function definitions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the list of functions returned\
              \ does not include the last requested function."
      type: object
    GetUserDefinedFunctionsRequest:
      example:
        Pattern: ""
        NextToken: ""
        MaxResults: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the functions to be retrieved\
              \ are located. If none is provided, the Amazon Web Services account\
              \ ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the catalog database where the functions are\
              \ located. If none is provided, functions from all the databases across\
              \ the catalog will be returned."
        Pattern:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: An optional function-name pattern string that filters the
              function definitions returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CatalogGetterPageSize'
          - description: The maximum number of functions to return in one response.
      required:
      - Pattern
      title: GetUserDefinedFunctionsRequest
      type: object
    GetWorkflowResponse:
      example:
        Workflow:
          Description: ""
          Graph:
            Edges: ""
            Nodes: ""
          BlueprintDetails:
            BlueprintName: ""
            RunId: ""
          DefaultRunProperties: ""
          LastModifiedOn: ""
          CreatedOn: ""
          Name: ""
          LastRun:
            Status: ""
            Graph:
              Edges: ""
              Nodes: ""
            StartingEventBatchCondition:
              BatchSize: ""
              BatchWindow: ""
            PreviousRunId: ""
            CompletedOn: ""
            ErrorMessage: ""
            Statistics:
              RunningActions: ""
              ErroredActions: ""
              TotalActions: ""
              FailedActions: ""
              StoppedActions: ""
              WaitingActions: ""
              TimeoutActions: ""
              SucceededActions: ""
            WorkflowRunId: ""
            WorkflowRunProperties: ""
            Name: ""
            StartedOn: ""
          MaxConcurrentRuns: ""
      properties:
        Workflow:
          $ref: '#/components/schemas/GetWorkflowResponse_Workflow'
      type: object
    GetWorkflowRequest:
      example:
        IncludeGraph: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow to retrieve.
        IncludeGraph:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether to include a graph when returning the workflow
              resource metadata.
      required:
      - Name
      title: GetWorkflowRequest
      type: object
    GetWorkflowRunResponse:
      example:
        Run:
          Status: ""
          Graph:
            Edges: ""
            Nodes: ""
          StartingEventBatchCondition:
            BatchSize: ""
            BatchWindow: ""
          PreviousRunId: ""
          CompletedOn: ""
          ErrorMessage: ""
          Statistics:
            RunningActions: ""
            ErroredActions: ""
            TotalActions: ""
            FailedActions: ""
            StoppedActions: ""
            WaitingActions: ""
            TimeoutActions: ""
            SucceededActions: ""
          WorkflowRunId: ""
          WorkflowRunProperties: ""
          Name: ""
          StartedOn: ""
      properties:
        Run:
          $ref: '#/components/schemas/GetWorkflowRunResponse_Run'
      type: object
    GetWorkflowRunRequest:
      example:
        IncludeGraph: ""
        RunId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow being run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the workflow run.
        IncludeGraph:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether to include the workflow graph in response
              or not.
      required:
      - Name
      - RunId
      title: GetWorkflowRunRequest
      type: object
    GetWorkflowRunPropertiesResponse:
      example:
        RunProperties: ""
      properties:
        RunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: The workflow run properties which were set during the specified
              run.
      type: object
    GetWorkflowRunPropertiesRequest:
      example:
        RunId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow which was run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the workflow run whose run properties should be
              returned.
      required:
      - Name
      - RunId
      title: GetWorkflowRunPropertiesRequest
      type: object
    GetWorkflowRunsResponse:
      example:
        NextToken: ""
        Runs: ""
      properties:
        Runs:
          allOf:
          - $ref: '#/components/schemas/WorkflowRuns'
          - description: A list of workflow run metadata objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all requested workflow runs\
              \ have been returned."
      type: object
    GetWorkflowRunsRequest:
      example:
        IncludeGraph: ""
        NextToken: ""
        MaxResults: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow whose metadata of runs should be returned.
        IncludeGraph:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether to include the workflow graph in response
              or not.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The maximum size of the response.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of workflow runs to be included in the
              response.
      required:
      - Name
      title: GetWorkflowRunsRequest
      type: object
    ImportCatalogToGlueResponse:
      properties: {}
      type: object
    ImportCatalogToGlueRequest:
      example:
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the catalog to import. Currently, this should\
              \ be the Amazon Web Services account ID."
      title: ImportCatalogToGlueRequest
      type: object
    ListBlueprintsResponse:
      example:
        Blueprints: ""
        NextToken: ""
      properties:
        Blueprints:
          allOf:
          - $ref: '#/components/schemas/BlueprintNames'
          - description: List of names of blueprints in the account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all blueprint names have been\
              \ returned."
      type: object
    ListBlueprintsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Filters the list by an Amazon Web Services resource tag.
      title: ListBlueprintsRequest
      type: object
    ListCrawlersResponse:
      example:
        NextToken: ""
        CrawlerNames: ""
      properties:
        CrawlerNames:
          allOf:
          - $ref: '#/components/schemas/CrawlerNameList'
          - description: "The names of all crawlers in the account, or the crawlers\
              \ with the specified tags."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if the returned list does not contain\
              \ the last metric available."
      type: object
    ListCrawlersRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Tags: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation request."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Specifies to return only these tagged resources.
      title: ListCrawlersRequest
      type: object
    ListCrawlsResponse:
      example:
        NextToken: ""
        Crawls: ""
      properties:
        Crawls:
          allOf:
          - $ref: '#/components/schemas/CrawlerHistoryList'
          - description: A list of <code>CrawlerHistory</code> objects representing
              the crawl runs that meet your criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
      type: object
    ListCrawlsRequest:
      example:
        CrawlerName: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler whose runs you want to retrieve.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: "The maximum number of results to return. The default is\
              \ 20, and maximum is 100."
        Filters:
          allOf:
          - $ref: '#/components/schemas/CrawlsFilterList'
          - description: Filters the crawls by the criteria you specify in a list
              of <code>CrawlsFilter</code> objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, if this is a continuation call."
      required:
      - CrawlerName
      title: ListCrawlsRequest
      type: object
    ListCustomEntityTypesResponse:
      example:
        NextToken: ""
        CustomEntityTypes: ""
      properties:
        CustomEntityTypes:
          allOf:
          - $ref: '#/components/schemas/CustomEntityTypes'
          - description: A list of <code>CustomEntityType</code> objects representing
              custom patterns.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      type: object
    ListCustomEntityTypesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A paginated token to offset the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: A list of key-value pair tags.
      title: ListCustomEntityTypesRequest
      type: object
    ListDataQualityResultsResponse:
      example:
        NextToken: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/DataQualityResultDescriptionList'
          - description: A list of <code>DataQualityResultDescription</code> objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      required:
      - Results
      type: object
    ListDataQualityResultsRequest:
      example:
        NextToken: ""
        Filter:
          JobRunId: ""
          StartedAfter: ""
          JobName: ""
          StartedBefore: ""
          DataSource:
            GlueTable:
              ConnectionName: ""
              TableName: ""
              DatabaseName: ""
              CatalogId: ""
              AdditionalOptions: ""
        MaxResults: ""
      properties:
        Filter:
          $ref: '#/components/schemas/ListDataQualityResultsRequest_Filter'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A paginated token to offset the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
      title: ListDataQualityResultsRequest
      type: object
    ListDataQualityRuleRecommendationRunsResponse:
      example:
        NextToken: ""
        Runs: ""
      properties:
        Runs:
          allOf:
          - $ref: '#/components/schemas/DataQualityRuleRecommendationRunList'
          - description: A list of <code>DataQualityRuleRecommendationRunDescription</code>
              objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      type: object
    ListDataQualityRuleRecommendationRunsRequest:
      example:
        NextToken: ""
        Filter:
          StartedAfter: ""
          StartedBefore: ""
          DataSource:
            GlueTable:
              ConnectionName: ""
              TableName: ""
              DatabaseName: ""
              CatalogId: ""
              AdditionalOptions: ""
        MaxResults: ""
      properties:
        Filter:
          $ref: '#/components/schemas/ListDataQualityRuleRecommendationRunsRequest_Filter'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A paginated token to offset the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
      title: ListDataQualityRuleRecommendationRunsRequest
      type: object
    ListDataQualityRulesetEvaluationRunsResponse:
      example:
        NextToken: ""
        Runs: ""
      properties:
        Runs:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetEvaluationRunList'
          - description: A list of <code>DataQualityRulesetEvaluationRunDescription</code>
              objects representing data quality ruleset runs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      type: object
    ListDataQualityRulesetEvaluationRunsRequest:
      example:
        NextToken: ""
        Filter:
          StartedAfter: ""
          StartedBefore: ""
          DataSource:
            GlueTable:
              ConnectionName: ""
              TableName: ""
              DatabaseName: ""
              CatalogId: ""
              AdditionalOptions: ""
        MaxResults: ""
      properties:
        Filter:
          $ref: '#/components/schemas/ListDataQualityRulesetEvaluationRunsRequest_Filter'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A paginated token to offset the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
      title: ListDataQualityRulesetEvaluationRunsRequest
      type: object
    ListDataQualityRulesetsResponse:
      example:
        Rulesets: ""
        NextToken: ""
      properties:
        Rulesets:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetList'
          - description: A paginated list of rulesets for the specified list of Glue
              tables.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A pagination token, if more results are available."
      type: object
    ListDataQualityRulesetsRequest:
      example:
        NextToken: ""
        Filter:
          Description: ""
          CreatedAfter: ""
          LastModifiedAfter: ""
          TargetTable:
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
          CreatedBefore: ""
          LastModifiedBefore: ""
          Name: ""
        MaxResults: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A paginated token to offset the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of results to return.
        Filter:
          $ref: '#/components/schemas/ListDataQualityRulesetsRequest_Filter'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: A list of key-value pair tags.
      title: ListDataQualityRulesetsRequest
      type: object
    ListDevEndpointsResponse:
      example:
        NextToken: ""
        DevEndpointNames: ""
      properties:
        DevEndpointNames:
          allOf:
          - $ref: '#/components/schemas/DevEndpointNameList'
          - description: "The names of all the <code>DevEndpoint</code>s in the account,\
              \ or the <code>DevEndpoint</code>s with the specified tags."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if the returned list does not contain\
              \ the last metric available."
      type: object
    ListDevEndpointsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Specifies to return only these tagged resources.
      title: ListDevEndpointsRequest
      type: object
    ListJobsResponse:
      example:
        NextToken: ""
        JobNames: ""
      properties:
        JobNames:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          - description: "The names of all jobs in the account, or the jobs with the\
              \ specified tags."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if the returned list does not contain\
              \ the last metric available."
      type: object
    ListJobsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Specifies to return only these tagged resources.
      title: ListJobsRequest
      type: object
    ListMLTransformsResponse:
      example:
        NextToken: ""
        TransformIds: ""
      properties:
        TransformIds:
          allOf:
          - $ref: '#/components/schemas/TransformIdList'
          - description: "The identifiers of all the machine learning transforms in\
              \ the account, or the machine learning transforms with the specified\
              \ tags."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A continuation token, if the returned list does not contain\
              \ the last metric available."
      required:
      - TransformIds
      type: object
    ListMLTransformsRequest:
      example:
        NextToken: ""
        Filter:
          Status: ""
          GlueVersion: ""
          CreatedAfter: ""
          Schema: ""
          LastModifiedAfter: ""
          CreatedBefore: ""
          TransformType: ""
          LastModifiedBefore: ""
          Name: ""
        MaxResults: ""
        Sort:
          SortDirection: ""
          Column: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        Filter:
          $ref: '#/components/schemas/ListMLTransformsRequest_Filter'
        Sort:
          $ref: '#/components/schemas/ListMLTransformsRequest_Sort'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Specifies to return only these tagged resources.
      title: ListMLTransformsRequest
      type: object
    ListRegistriesResponse:
      example:
        NextToken: ""
        Registries: ""
      properties:
        Registries:
          allOf:
          - $ref: '#/components/schemas/RegistryListDefinition'
          - description: An array of <code>RegistryDetailedListItem</code> objects
              containing minimal details of each registry.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
      type: object
    ListRegistriesInput:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsNumber'
          - description: "Maximum number of results required per page. If the value\
              \ is not supplied, this will be defaulted to 25 per page."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token, if this is a continuation call."
      title: ListRegistriesInput
      type: object
    ListSchemaVersionsResponse:
      example:
        NextToken: ""
        Schemas: ""
      properties:
        Schemas:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionList'
          - description: An array of <code>SchemaVersionList</code> objects containing
              details of each schema version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
      type: object
    ListSchemaVersionsInput:
      example:
        NextToken: ""
        MaxResults: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaInput_SchemaId'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsNumber'
          - description: "Maximum number of results required per page. If the value\
              \ is not supplied, this will be defaulted to 25 per page."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token, if this is a continuation call."
      required:
      - SchemaId
      title: ListSchemaVersionsInput
      type: object
    ListSchemasResponse:
      example:
        NextToken: ""
        Schemas: ""
      properties:
        Schemas:
          allOf:
          - $ref: '#/components/schemas/SchemaListDefinition'
          - description: An array of <code>SchemaListItem</code> objects containing
              details of each schema.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
      type: object
    ListSchemasInput:
      example:
        NextToken: ""
        MaxResults: ""
        RegistryId:
          RegistryName: ""
          RegistryArn: ""
      properties:
        RegistryId:
          $ref: '#/components/schemas/ListSchemasInput_RegistryId'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsNumber'
          - description: "Maximum number of results required per page. If the value\
              \ is not supplied, this will be defaulted to 25 per page."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token, if this is a continuation call."
      title: ListSchemasInput
      type: object
    ListSessionsResponse:
      example:
        NextToken: ""
        Sessions: ""
        Ids: ""
      properties:
        Ids:
          allOf:
          - $ref: '#/components/schemas/SessionIdList'
          - description: 'Returns the ID of the session. '
        Sessions:
          allOf:
          - $ref: '#/components/schemas/SessionList'
          - description: 'Returns the session object. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/OrchestrationToken'
          - description: "The token for the next set of results, or null if there\
              \ are no more result. "
      type: object
    ListSessionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        RequestOrigin: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/OrchestrationToken'
          - description: "The token for the next set of results, or null if there\
              \ are no more result. "
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results. '
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: 'Tags belonging to the session. '
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: 'The origin of the request. '
      title: ListSessionsRequest
      type: object
    ListStatementsResponse:
      example:
        NextToken: ""
        Statements: ""
      properties:
        Statements:
          allOf:
          - $ref: '#/components/schemas/StatementList'
          - description: Returns the list of statements.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/OrchestrationToken'
          - description: "A continuation token, if not all statements have yet been\
              \ returned."
      type: object
    ListStatementsRequest:
      example:
        NextToken: ""
        RequestOrigin: ""
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The Session ID of the statements.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The origin of the request to list statements.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/OrchestrationToken'
          - description: "A continuation token, if this is a continuation call."
      required:
      - SessionId
      title: ListStatementsRequest
      type: object
    ListTriggersResponse:
      example:
        NextToken: ""
        TriggerNames: ""
      properties:
        TriggerNames:
          allOf:
          - $ref: '#/components/schemas/TriggerNameList'
          - description: "The names of all triggers in the account, or the triggers\
              \ with the specified tags."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if the returned list does not contain\
              \ the last metric available."
      type: object
    ListTriggersRequest:
      example:
        NextToken: ""
        DependentJobName: ""
        MaxResults: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation request."
        DependentJobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: " The name of the job for which to retrieve triggers. The\
              \ trigger that can start this job is returned. If there is no such trigger,\
              \ all triggers are returned."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Specifies to return only these tagged resources.
      title: ListTriggersRequest
      type: object
    ListWorkflowsResponse:
      example:
        NextToken: ""
        Workflows: ""
      properties:
        Workflows:
          allOf:
          - $ref: '#/components/schemas/WorkflowNames'
          - description: List of names of workflows in the account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if not all workflow names have been\
              \ returned."
      type: object
    ListWorkflowsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A continuation token, if this is a continuation request."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum size of a list to return.
      title: ListWorkflowsRequest
      type: object
    PutDataCatalogEncryptionSettingsResponse:
      properties: {}
      type: object
    PutDataCatalogEncryptionSettingsRequest:
      example:
        DataCatalogEncryptionSettings:
          EncryptionAtRest:
            CatalogEncryptionMode: ""
            SseAwsKmsKeyId: ""
          ConnectionPasswordEncryption:
            ReturnConnectionPasswordEncrypted: ""
            AwsKmsKeyId: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog to set the security configuration\
              \ for. If none is provided, the Amazon Web Services account ID is used\
              \ by default."
        DataCatalogEncryptionSettings:
          $ref: '#/components/schemas/PutDataCatalogEncryptionSettingsRequest_DataCatalogEncryptionSettings'
      required:
      - DataCatalogEncryptionSettings
      title: PutDataCatalogEncryptionSettingsRequest
      type: object
    PutResourcePolicyResponse:
      example:
        PolicyHash: ""
      properties:
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A hash of the policy that has just been set. This must be
              included in a subsequent call that overwrites or updates this policy.
      type: object
    PutResourcePolicyRequest:
      example:
        ResourceArn: ""
        PolicyHashCondition: ""
        EnableHybrid: ""
        PolicyInJson: ""
        PolicyExistsCondition: ""
      properties:
        PolicyInJson:
          allOf:
          - $ref: '#/components/schemas/PolicyJsonString'
          - description: "Contains the policy document to set, in JSON format."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: Do not use. For internal use only.
        PolicyHashCondition:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The hash value returned when the previous policy was set
              using <code>PutResourcePolicy</code>. Its purpose is to prevent concurrent
              modifications of a policy. Do not use this parameter if no previous
              policy has been set.
        PolicyExistsCondition:
          allOf:
          - $ref: '#/components/schemas/ExistCondition'
          - description: "A value of <code>MUST_EXIST</code> is used to update a policy.\
              \ A value of <code>NOT_EXIST</code> is used to create a new policy.\
              \ If a value of <code>NONE</code> or a null value is used, the call\
              \ does not depend on the existence of a policy."
        EnableHybrid:
          allOf:
          - $ref: '#/components/schemas/EnableHybridValues'
          - description: "<p>If <code>'TRUE'</code>, indicates that you are using\
              \ both methods to grant cross-account access to Data Catalog resources:</p>\
              \ <ul> <li> <p>By directly updating the resource policy with <code>PutResourePolicy</code>\
              \ </p> </li> <li> <p>By using the <b>Grant permissions</b> command on\
              \ the Amazon Web Services Management Console.</p> </li> </ul> <p>Must\
              \ be set to <code>'TRUE'</code> if you have already used the Management\
              \ Console to grant cross-account access, otherwise the call fails. Default\
              \ is 'FALSE'.</p>"
      required:
      - PolicyInJson
      title: PutResourcePolicyRequest
      type: object
    PutSchemaVersionMetadataResponse:
      example:
        MetadataValue: ""
        SchemaVersionId: ""
        LatestVersion: ""
        RegistryName: ""
        MetadataKey: ""
        SchemaArn: ""
        SchemaName: ""
        VersionNumber: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) for the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name for the schema.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name for the registry.
        LatestVersion:
          allOf:
          - $ref: '#/components/schemas/LatestSchemaVersionBoolean'
          - description: The latest version of the schema.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique version ID of the schema version.
        MetadataKey:
          allOf:
          - $ref: '#/components/schemas/MetadataKeyString'
          - description: The metadata key.
        MetadataValue:
          allOf:
          - $ref: '#/components/schemas/MetadataValueString'
          - description: The value of the metadata key.
      type: object
    PutSchemaVersionMetadataInput:
      example:
        SchemaVersionId: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        MetadataKeyValue:
          MetadataValue: ""
          MetadataKey: ""
        SchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/PutSchemaVersionMetadataInput_SchemaId'
        SchemaVersionNumber:
          $ref: '#/components/schemas/GetSchemaVersionInput_SchemaVersionNumber'
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique version ID of the schema version.
        MetadataKeyValue:
          $ref: '#/components/schemas/PutSchemaVersionMetadataInput_MetadataKeyValue'
      required:
      - MetadataKeyValue
      title: PutSchemaVersionMetadataInput
      type: object
    PutWorkflowRunPropertiesResponse:
      properties: {}
      type: object
    PutWorkflowRunPropertiesRequest:
      example:
        RunProperties: ""
        RunId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow which was run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the workflow run for which the run properties should
              be updated.
        RunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: The properties to put for the specified run.
      required:
      - Name
      - RunId
      - RunProperties
      title: PutWorkflowRunPropertiesRequest
      type: object
    QuerySchemaVersionMetadataResponse:
      example:
        SchemaVersionId: ""
        NextToken: ""
        MetadataInfoMap: ""
      properties:
        MetadataInfoMap:
          allOf:
          - $ref: '#/components/schemas/MetadataInfoMap'
          - description: A map of a metadata key and associated values.
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique version ID of the schema version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token for paginating the returned list of\
              \ tokens, returned if the current segment of the list is not the last."
      type: object
    QuerySchemaVersionMetadataInput:
      example:
        MetadataList: ""
        SchemaVersionId: ""
        NextToken: ""
        MaxResults: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        SchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/QuerySchemaVersionMetadataInput_SchemaId'
        SchemaVersionNumber:
          $ref: '#/components/schemas/GetSchemaVersionInput_SchemaVersionNumber'
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique version ID of the schema version.
        MetadataList:
          allOf:
          - $ref: '#/components/schemas/MetadataList'
          - description: "Search key-value pairs for metadata, if they are not provided\
              \ all the metadata information will be fetched."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/QuerySchemaVersionMetadataMaxResults'
          - description: "Maximum number of results required per page. If the value\
              \ is not supplied, this will be defaulted to 25 per page."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryTokenString'
          - description: "A continuation token, if this is a continuation call."
      title: QuerySchemaVersionMetadataInput
      type: object
    RegisterSchemaVersionResponse:
      example:
        Status: ""
        SchemaVersionId: ""
        VersionNumber: ""
      properties:
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique ID that represents the version of this schema.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: "The version of this schema (for sync flow only, in case\
              \ this is the first version)."
        Status:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionStatus'
          - description: The status of the schema version.
      type: object
    RegisterSchemaVersionInput:
      example:
        SchemaDefinition: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaInput_SchemaId'
        SchemaDefinition:
          allOf:
          - $ref: '#/components/schemas/SchemaDefinitionString'
          - description: The schema definition using the <code>DataFormat</code> setting
              for the <code>SchemaName</code>.
      required:
      - SchemaDefinition
      - SchemaId
      title: RegisterSchemaVersionInput
      type: object
    RemoveSchemaVersionMetadataResponse:
      example:
        MetadataValue: ""
        SchemaVersionId: ""
        LatestVersion: ""
        RegistryName: ""
        MetadataKey: ""
        SchemaArn: ""
        SchemaName: ""
        VersionNumber: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry.
        LatestVersion:
          allOf:
          - $ref: '#/components/schemas/LatestSchemaVersionBoolean'
          - description: The latest version of the schema.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The version ID for the schema version.
        MetadataKey:
          allOf:
          - $ref: '#/components/schemas/MetadataKeyString'
          - description: The metadata key.
        MetadataValue:
          allOf:
          - $ref: '#/components/schemas/MetadataValueString'
          - description: The value of the metadata key.
      type: object
    RemoveSchemaVersionMetadataInput:
      example:
        SchemaVersionId: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        MetadataKeyValue:
          MetadataValue: ""
          MetadataKey: ""
        SchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/QuerySchemaVersionMetadataInput_SchemaId'
        SchemaVersionNumber:
          $ref: '#/components/schemas/GetSchemaVersionInput_SchemaVersionNumber'
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique version ID of the schema version.
        MetadataKeyValue:
          $ref: '#/components/schemas/RemoveSchemaVersionMetadataInput_MetadataKeyValue'
      required:
      - MetadataKeyValue
      title: RemoveSchemaVersionMetadataInput
      type: object
    ResetJobBookmarkResponse:
      example:
        JobBookmarkEntry:
          Attempt: ""
          Version: ""
          JobName: ""
          PreviousRunId: ""
          Run: ""
          JobBookmark: ""
          RunId: ""
      properties:
        JobBookmarkEntry:
          $ref: '#/components/schemas/ResetJobBookmarkResponse_JobBookmarkEntry'
      type: object
    ResetJobBookmarkRequest:
      example:
        JobName: ""
        RunId: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The name of the job in question.
        RunId:
          allOf:
          - $ref: '#/components/schemas/RunId'
          - description: The unique run identifier associated with this job run.
      required:
      - JobName
      title: ResetJobBookmarkRequest
      type: object
    ResumeWorkflowRunResponse:
      example:
        NodeIds: ""
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The new ID assigned to the resumed workflow run. Each resume
              of a workflow run will have a new run ID.
        NodeIds:
          allOf:
          - $ref: '#/components/schemas/NodeIdList'
          - description: A list of the node IDs for the nodes that were actually restarted.
      type: object
    ResumeWorkflowRunRequest:
      example:
        NodeIds: ""
        RunId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow to resume.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the workflow run to resume.
        NodeIds:
          allOf:
          - $ref: '#/components/schemas/NodeIdList'
          - description: A list of the node IDs for the nodes you want to restart.
              The nodes that are to be restarted must have a run attempt in the original
              run.
      required:
      - Name
      - NodeIds
      - RunId
      title: ResumeWorkflowRunRequest
      type: object
    ConcurrentRunsExceededException: {}
    IllegalWorkflowStateException: {}
    RunStatementResponse:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Returns the Id of the statement that was run.
      type: object
    RunStatementRequest:
      example:
        RequestOrigin: ""
        SessionId: ""
        Code: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The Session Id of the statement to be run.
        Code:
          allOf:
          - $ref: '#/components/schemas/OrchestrationStatementCodeString'
          - description: The statement code to be run.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The origin of the request.
      required:
      - Code
      - SessionId
      title: RunStatementRequest
      type: object
    SearchTablesResponse:
      example:
        NextToken: ""
        TableList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, present if the current list segment\
              \ is not the last."
        TableList:
          allOf:
          - $ref: '#/components/schemas/TableList'
          - description: A list of the requested <code>Table</code> objects. The <code>SearchTables</code>
              response returns only the tables that you have access to.
      type: object
    SearchTablesRequest:
      example:
        SortCriteria: ""
        Filters: ""
        NextToken: ""
        ResourceShareType: ""
        MaxResults: ""
        CatalogId: ""
        SearchText: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "A unique identifier, consisting of <code> <i>account_id</i>\
              \ </code>."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: "A continuation token, included if this is a continuation\
              \ call."
        Filters:
          allOf:
          - $ref: '#/components/schemas/SearchPropertyPredicates'
          - description: "<p>A list of key-value pairs, and a comparator used to filter\
              \ the search results. Returns all entities matching the predicate.</p>\
              \ <p>The <code>Comparator</code> member of the <code>PropertyPredicate</code>\
              \ struct is used only for time fields, and can be omitted for other\
              \ field types. Also, when comparing string values, such as when <code>Key=Name</code>,\
              \ a fuzzy match algorithm is used. The <code>Key</code> field (for example,\
              \ the value of the <code>Name</code> field) is split on certain punctuation\
              \ characters, for example, -, :, #, etc. into tokens. Then each token\
              \ is exact-match compared with the <code>Value</code> member of <code>PropertyPredicate</code>.\
              \ For example, if <code>Key=Name</code> and <code>Value=link</code>,\
              \ tables named <code>customer-link</code> and <code>xx-link-yy</code>\
              \ are returned, but <code>xxlinkyy</code> is not returned.</p>"
        SearchText:
          allOf:
          - $ref: '#/components/schemas/ValueString'
          - description: <p>A string used for a text search.</p> <p>Specifying a value
              in quotes filters based on an exact match to the value.</p>
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          - description: "A list of criteria for sorting the results by a field name,\
              \ in an ascending or descending order."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: The maximum number of tables to return in a single response.
        ResourceShareType:
          allOf:
          - $ref: '#/components/schemas/ResourceShareType'
          - description: "<p>Allows you to specify that you want to search the tables\
              \ shared with your account. The allowable values are <code>FOREIGN</code>\
              \ or <code>ALL</code>. </p> <ul> <li> <p>If set to <code>FOREIGN</code>,\
              \ will search the tables shared with your account. </p> </li> <li> <p>If\
              \ set to <code>ALL</code>, will search the tables shared with your account,\
              \ as well as the tables in yor local account. </p> </li> </ul>"
      title: SearchTablesRequest
      type: object
    StartBlueprintRunResponse:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The run ID for this blueprint run.
      type: object
    StartBlueprintRunRequest:
      example:
        Parameters: ""
        BlueprintName: ""
        RoleArn: ""
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/BlueprintParameters'
          - description: Specifies the parameters as a <code>BlueprintParameters</code>
              object.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/OrchestrationIAMRoleArn'
          - description: Specifies the IAM role used to create the workflow.
      required:
      - BlueprintName
      - RoleArn
      title: StartBlueprintRunRequest
      type: object
    IllegalBlueprintStateException: {}
    StartCrawlerResponse:
      properties: {}
      type: object
    StartCrawlerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the crawler to start.
      required:
      - Name
      title: StartCrawlerRequest
      type: object
    StartCrawlerScheduleResponse:
      properties: {}
      type: object
    StartCrawlerScheduleRequest:
      example:
        CrawlerName: ""
      properties:
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the crawler to schedule.
      required:
      - CrawlerName
      title: StartCrawlerScheduleRequest
      type: object
    SchedulerRunningException: {}
    NoScheduleException: {}
    StartDataQualityRuleRecommendationRunResponse:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
      type: object
    StartDataQualityRuleRecommendationRunRequest:
      example:
        Role: ""
        CreatedRulesetName: ""
        Timeout: ""
        ClientToken: ""
        NumberOfWorkers: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
      properties:
        DataSource:
          $ref: '#/components/schemas/StartDataQualityRuleRecommendationRunRequest_DataSource'
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: An IAM role supplied to encrypt the results of the run.
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of <code>G.1X</code> workers to be used in the
              run. The default is 5.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout for a run in minutes. This is the maximum time\
              \ that a run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        CreatedRulesetName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A name for the ruleset.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: Used for idempotency and is recommended to be set to a random
              ID (such as a UUID) to avoid creating or starting multiple instances
              of the same resource.
      required:
      - DataSource
      - Role
      title: StartDataQualityRuleRecommendationRunRequest
      type: object
    StartDataQualityRulesetEvaluationRunResponse:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
      type: object
    StartDataQualityRulesetEvaluationRunRequest:
      example:
        Role: ""
        AdditionalDataSources: ""
        Timeout: ""
        ClientToken: ""
        NumberOfWorkers: ""
        RulesetNames: ""
        AdditionalRunOptions:
          ResultsS3Prefix: ""
          CloudWatchMetricsEnabled: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
      properties:
        DataSource:
          $ref: '#/components/schemas/StartDataQualityRuleRecommendationRunRequest_DataSource'
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: An IAM role supplied to encrypt the results of the run.
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of <code>G.1X</code> workers to be used in the
              run. The default is 5.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout for a run in minutes. This is the maximum time\
              \ that a run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: Used for idempotency and is recommended to be set to a random
              ID (such as a UUID) to avoid creating or starting multiple instances
              of the same resource.
        AdditionalRunOptions:
          $ref: '#/components/schemas/GetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions'
        RulesetNames:
          allOf:
          - $ref: '#/components/schemas/RulesetNames'
          - description: A list of ruleset names.
        AdditionalDataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceMap'
          - description: A map of reference strings to additional data sources you
              can specify for an evaluation run.
      required:
      - DataSource
      - Role
      - RulesetNames
      title: StartDataQualityRulesetEvaluationRunRequest
      type: object
    StartExportLabelsTaskRunResponse:
      example:
        TaskRunId: ""
      properties:
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier for the task run.
      type: object
    StartExportLabelsTaskRunRequest:
      example:
        OutputS3Path: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        OutputS3Path:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon S3 path where you export the labels.
      required:
      - OutputS3Path
      - TransformId
      title: StartExportLabelsTaskRunRequest
      type: object
    StartImportLabelsTaskRunResponse:
      example:
        TaskRunId: ""
      properties:
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier for the task run.
      type: object
    StartImportLabelsTaskRunRequest:
      example:
        ReplaceAllLabels: ""
        InputS3Path: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        InputS3Path:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon Simple Storage Service (Amazon S3) path from where
              you import the labels.
        ReplaceAllLabels:
          allOf:
          - $ref: '#/components/schemas/ReplaceBoolean'
          - description: Indicates whether to overwrite your existing labels.
      required:
      - InputS3Path
      - TransformId
      title: StartImportLabelsTaskRunRequest
      type: object
    StartJobRunResponse:
      example:
        JobRunId: ""
      properties:
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID assigned to this job run.
      type: object
    StartJobRunRequest:
      example:
        NotificationProperty:
          NotifyDelayAfter: ""
        WorkerType: ""
        ExecutionClass: ""
        JobRunId: ""
        Timeout: ""
        AllocatedCapacity: ""
        JobName: ""
        Arguments: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        MaxCapacity: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition to use.
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of a previous <code>JobRun</code> to retry.
        Arguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "<p>The job arguments associated with this run. For this\
              \ job run, they replace the default arguments set in the job definition\
              \ itself.</p> <p>You can specify arguments here that your own job-execution\
              \ script consumes, as well as arguments that Glue itself consumes.</p>\
              \ <p>Job arguments may be logged. Do not pass plaintext secrets as arguments.\
              \ Retrieve secrets from a Glue Connection, Secrets Manager or other\
              \ secret management mechanism if you intend to keep them within the\
              \ Job. </p> <p>For information about how to specify and consume your\
              \ own Job arguments, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html\"\
              >Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For\
              \ information about the arguments you can provide to this field when\
              \ configuring Spark jobs, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
              >Special Parameters Used by Glue</a> topic in the developer guide.</p>\
              \ <p>For information about the arguments you can provide to this field\
              \ when configuring Ray jobs, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-job-parameters.html\"\
              >Using job parameters in Ray jobs</a> in the developer guide.</p>"
        AllocatedCapacity:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - deprecated: true
            description: "<p>This field is deprecated. Use <code>MaxCapacity</code>\
              \ instead.</p> <p>The number of Glue data processing units (DPUs) to\
              \ allocate to this JobRun. You can allocate a minimum of 2 DPUs; the\
              \ default is 10. A DPU is a relative measure of processing power that\
              \ consists of 4 vCPUs of compute capacity and 16 GB of memory. For more\
              \ information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              >Glue pricing page</a>.</p>This property is deprecated, use MaxCapacity\
              \ instead."
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "<p>The <code>JobRun</code> timeout in minutes. This is the\
              \ maximum time that a job run can consume resources before it is terminated\
              \ and enters <code>TIMEOUT</code> status. This value overrides the timeout\
              \ value set in the parent job.</p> <p>Streaming jobs do not have a timeout.\
              \ The default for non-streaming jobs is 2,880 minutes (48 hours).</p>"
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>For Glue version 1.0 or earlier jobs, using the standard\
              \ worker type, the number of Glue data processing units (DPUs) that\
              \ can be allocated when this job runs. A DPU is a relative measure of\
              \ processing power that consists of 4 vCPUs of compute capacity and\
              \ 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              > Glue pricing page</a>.</p> <p>For Glue version 2.0+ jobs, you cannot\
              \ specify a <code>Maximum capacity</code>. Instead, you should specify\
              \ a <code>Worker type</code> and the <code>Number of workers</code>.</p>\
              \ <p>Do not set <code>MaxCapacity</code> if using <code>WorkerType</code>\
              \ and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated\
              \ for <code>MaxCapacity</code> depends on whether you are running a\
              \ Python shell job, an Apache Spark ETL job, or an Apache Spark streaming\
              \ ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>=\"\
              pythonshell\"), you can allocate either 0.0625 or 1 DPU. The default\
              \ is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark\
              \ ETL job (<code>JobCommand.Name</code>=\"glueetl\") or Apache Spark\
              \ streaming ETL job (<code>JobCommand.Name</code>=\"gluestreaming\"\
              ), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This\
              \ job type cannot have a fractional DPU allocation.</p> </li> </ul>"
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this job run.
        NotificationProperty:
          $ref: '#/components/schemas/StartJobRunRequest_NotificationProperty'
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a job runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for\
              \ Spark jobs. Accepts the value Z.2X for Ray jobs.</p> <ul> <li> <p>For\
              \ the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs,\
              \ 16 GB of memory) with 84GB disk (approximately 34GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs,\
              \ 32 GB of memory) with 128GB disk (approximately 77GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs,\
              \ 64 GB of memory) with 256GB disk (approximately 235GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for jobs whose\
              \ workloads contain your most demanding transforms, aggregations, joins,\
              \ and queries. This worker type is available only for Glue version 3.0\
              \ or later Spark ETL jobs in the following Amazon Web Services Regions:\
              \ US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific\
              \ (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central),\
              \ Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p>\
              \ </li> <li> <p>For the <code>G.8X</code> worker type, each worker maps\
              \ to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately\
              \ 487GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for jobs whose workloads contain your most demanding transforms,\
              \ aggregations, joins, and queries. This worker type is available only\
              \ for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web\
              \ Services Regions as supported for the <code>G.4X</code> worker type.</p>\
              \ </li> <li> <p>For the <code>G.025X</code> worker type, each worker\
              \ maps to 0.25 DPU (2 vCPUs, 4 GB of memory) with 84GB disk (approximately\
              \ 34GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for low volume streaming jobs. This worker type is only\
              \ available for Glue version 3.0 streaming jobs.</p> </li> <li> <p>For\
              \ the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs,\
              \ 64 GB of memory) with 128 GB disk (approximately 120GB free), and\
              \ provides up to 8 Ray workers based on the autoscaler.</p> </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when a job runs.
        ExecutionClass:
          allOf:
          - $ref: '#/components/schemas/ExecutionClass'
          - description: <p>Indicates whether the job is run with a standard or flexible
              execution class. The standard execution-class is ideal for time-sensitive
              workloads that require fast job startup and dedicated resources.</p>
              <p>The flexible execution class is appropriate for time-insensitive
              jobs whose start and completion times may vary. </p> <p>Only jobs with
              Glue version 3.0 and above and command type <code>glueetl</code> will
              be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>.
              The flexible execution class is available for Spark jobs.</p>
      required:
      - JobName
      title: StartJobRunRequest
      type: object
    StartMLEvaluationTaskRunResponse:
      example:
        TaskRunId: ""
      properties:
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier associated with this run.
      type: object
    StartMLEvaluationTaskRunRequest:
      example:
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
      required:
      - TransformId
      title: StartMLEvaluationTaskRunRequest
      type: object
    MLTransformNotReadyException: {}
    StartMLLabelingSetGenerationTaskRunResponse:
      example:
        TaskRunId: ""
      properties:
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier that is associated with this task
              run.
      type: object
    StartMLLabelingSetGenerationTaskRunRequest:
      example:
        OutputS3Path: ""
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier of the machine learning transform.
        OutputS3Path:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon Simple Storage Service (Amazon S3) path where
              you generate the labeling set.
      required:
      - OutputS3Path
      - TransformId
      title: StartMLLabelingSetGenerationTaskRunRequest
      type: object
    StartTriggerResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger that was started.
      type: object
    StartTriggerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger to start.
      required:
      - Name
      title: StartTriggerRequest
      type: object
    StartWorkflowRunResponse:
      example:
        RunId: ""
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: An Id for the new run.
      type: object
    StartWorkflowRunRequest:
      example:
        RunProperties: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow to start.
        RunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: The workflow run properties for the new workflow run.
      required:
      - Name
      title: StartWorkflowRunRequest
      type: object
    StopCrawlerResponse:
      properties: {}
      type: object
    StopCrawlerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the crawler to stop.
      required:
      - Name
      title: StopCrawlerRequest
      type: object
    CrawlerNotRunningException: {}
    CrawlerStoppingException: {}
    StopCrawlerScheduleResponse:
      properties: {}
      type: object
    StopCrawlerScheduleRequest:
      example:
        CrawlerName: ""
      properties:
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the crawler whose schedule state to set.
      required:
      - CrawlerName
      title: StopCrawlerScheduleRequest
      type: object
    SchedulerNotRunningException: {}
    StopSessionResponse:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Returns the Id of the stopped session.
      type: object
    StopSessionRequest:
      example:
        RequestOrigin: ""
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The ID of the session to be stopped.
        RequestOrigin:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The origin of the request.
      required:
      - Id
      title: StopSessionRequest
      type: object
    StopTriggerResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger that was stopped.
      type: object
    StopTriggerRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger to stop.
      required:
      - Name
      title: StopTriggerRequest
      type: object
    StopWorkflowRunResponse:
      properties: {}
      type: object
    StopWorkflowRunRequest:
      example:
        RunId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow to stop.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the workflow run to stop.
      required:
      - Name
      - RunId
      title: StopWorkflowRunRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        TagsToAdd: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: "The ARN of the Glue resource to which to add the tags. For\
              \ more information about Glue resource ARNs, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html#aws-glue-api-regex-aws-glue-arn-id\"\
              >Glue ARN string pattern</a>."
        TagsToAdd:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tags to add to this resource.
      required:
      - ResourceArn
      - TagsToAdd
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagsToRemove: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource from which
              to remove the tags.
        TagsToRemove:
          allOf:
          - $ref: '#/components/schemas/TagKeysList'
          - description: Tags to remove from this resource.
      required:
      - ResourceArn
      - TagsToRemove
      title: UntagResourceRequest
      type: object
    UpdateBlueprintResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Returns the name of the blueprint that was updated.
      type: object
    UpdateBlueprintRequest:
      example:
        Description: ""
        BlueprintLocation: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        Description:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: A description of the blueprint.
        BlueprintLocation:
          allOf:
          - $ref: '#/components/schemas/OrchestrationS3Location'
          - description: Specifies a path in Amazon S3 where the blueprint is published.
      required:
      - BlueprintLocation
      - Name
      title: UpdateBlueprintRequest
      type: object
    UpdateClassifierResponse:
      properties: {}
      type: object
    UpdateClassifierRequest:
      example:
        XMLClassifier:
          RowTag: ""
          Classification: ""
          Name: ""
        JsonClassifier:
          JsonPath: ""
          Name: ""
        CsvClassifier:
          QuoteSymbol: ""
          ContainsHeader: ""
          Delimiter: ""
          Header: ""
          AllowSingleColumn: ""
          CustomDatatypeConfigured: ""
          DisableValueTrimming: ""
          CustomDatatypes: ""
          Name: ""
        GrokClassifier:
          CustomPatterns: ""
          GrokPattern: ""
          Classification: ""
          Name: ""
      properties:
        GrokClassifier:
          $ref: '#/components/schemas/UpdateClassifierRequest_GrokClassifier'
        XMLClassifier:
          $ref: '#/components/schemas/UpdateClassifierRequest_XMLClassifier'
        JsonClassifier:
          $ref: '#/components/schemas/UpdateClassifierRequest_JsonClassifier'
        CsvClassifier:
          $ref: '#/components/schemas/UpdateClassifierRequest_CsvClassifier'
      title: UpdateClassifierRequest
      type: object
    VersionMismatchException: {}
    UpdateColumnStatisticsForPartitionResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/ColumnStatisticsErrors'
          - description: Error occurred during updating column statistics data.
      type: object
    UpdateColumnStatisticsForPartitionRequest:
      example:
        TableName: ""
        ColumnStatisticsList: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValues: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: A list of partition values identifying the partition.
        ColumnStatisticsList:
          allOf:
          - $ref: '#/components/schemas/UpdateColumnStatisticsList'
          - description: A list of the column statistics.
      required:
      - ColumnStatisticsList
      - DatabaseName
      - PartitionValues
      - TableName
      title: UpdateColumnStatisticsForPartitionRequest
      type: object
    UpdateColumnStatisticsForTableResponse:
      example:
        Errors: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/ColumnStatisticsErrors'
          - description: List of ColumnStatisticsErrors.
      type: object
    UpdateColumnStatisticsForTableRequest:
      example:
        TableName: ""
        ColumnStatisticsList: ""
        DatabaseName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partitions in question\
              \ reside. If none is supplied, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the partitions reside.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partitions' table.
        ColumnStatisticsList:
          allOf:
          - $ref: '#/components/schemas/UpdateColumnStatisticsList'
          - description: A list of the column statistics.
      required:
      - ColumnStatisticsList
      - DatabaseName
      - TableName
      title: UpdateColumnStatisticsForTableRequest
      type: object
    UpdateConnectionResponse:
      properties: {}
      type: object
    UpdateConnectionRequest:
      example:
        ConnectionInput:
          Description: ""
          ConnectionType: ""
          MatchCriteria: ""
          PhysicalConnectionRequirements:
            AvailabilityZone: ""
            SecurityGroupIdList: ""
            SubnetId: ""
          ConnectionProperties: ""
          Name: ""
        CatalogId: ""
        Name: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the connection resides.\
              \ If none is provided, the Amazon Web Services account ID is used by\
              \ default."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection definition to update.
        ConnectionInput:
          $ref: '#/components/schemas/UpdateConnectionRequest_ConnectionInput'
      required:
      - ConnectionInput
      - Name
      title: UpdateConnectionRequest
      type: object
    UpdateCrawlerResponse:
      properties: {}
      type: object
    UpdateCrawlerRequest:
      example:
        Classifiers: ""
        Description: ""
        SchemaChangePolicy:
          UpdateBehavior: ""
          DeleteBehavior: ""
        Configuration: ""
        RecrawlPolicy:
          RecrawlBehavior: ""
        DatabaseName: ""
        Targets:
          HudiTargets: ""
          S3Targets: ""
          CatalogTargets: ""
          DeltaTargets: ""
          MongoDBTargets: ""
          JdbcTargets: ""
          DynamoDBTargets: ""
          IcebergTargets: ""
        LineageConfiguration:
          CrawlerLineageSettings: ""
        CrawlerSecurityConfiguration: ""
        Name: ""
        Role: ""
        LakeFormationConfiguration:
          AccountId: ""
          UseLakeFormationCredentials: ""
        Schedule: ""
        TablePrefix: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the new crawler.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The IAM role or Amazon Resource Name (ARN) of an IAM role
              that is used by the new crawler to access customer resources.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          - description: "The Glue database where results are stored, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionStringRemovable'
          - description: A description of the new crawler.
        Targets:
          $ref: '#/components/schemas/UpdateCrawlerRequest_Targets'
        Schedule:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: "A <code>cron</code> expression used to specify the schedule\
              \ (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>."
        Classifiers:
          allOf:
          - $ref: '#/components/schemas/ClassifierNameList'
          - description: "A list of custom classifiers that the user has registered.\
              \ By default, all built-in classifiers are included in a crawl, but\
              \ these custom classifiers always override the default classifiers for\
              \ a given classification."
        TablePrefix:
          allOf:
          - $ref: '#/components/schemas/TablePrefix'
          - description: The table prefix used for catalog tables that are created.
        SchemaChangePolicy:
          $ref: '#/components/schemas/CreateCrawlerRequest_SchemaChangePolicy'
        RecrawlPolicy:
          $ref: '#/components/schemas/CreateCrawlerRequest_RecrawlPolicy'
        LineageConfiguration:
          $ref: '#/components/schemas/CreateCrawlerRequest_LineageConfiguration'
        LakeFormationConfiguration:
          $ref: '#/components/schemas/CreateCrawlerRequest_LakeFormationConfiguration'
        Configuration:
          allOf:
          - $ref: '#/components/schemas/CrawlerConfiguration'
          - description: "Crawler configuration information. This versioned JSON string\
              \ allows users to specify aspects of a crawler's behavior. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html\"\
              >Setting crawler configuration options</a>."
        CrawlerSecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/CrawlerSecurityConfiguration'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used by this crawler.
      required:
      - Name
      title: UpdateCrawlerRequest
      type: object
    UpdateCrawlerScheduleResponse:
      properties: {}
      type: object
    UpdateCrawlerScheduleRequest:
      example:
        CrawlerName: ""
        Schedule: ""
      properties:
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler whose schedule to update.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: "The updated <code>cron</code> expression used to specify\
              \ the schedule (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>."
      required:
      - CrawlerName
      title: UpdateCrawlerScheduleRequest
      type: object
    UpdateDataQualityRulesetResponse:
      example:
        Ruleset: ""
        Description: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the data quality ruleset.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the ruleset.
        Ruleset:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetString'
          - description: "A Data Quality Definition Language (DQDL) ruleset. For more\
              \ information, see the Glue developer guide."
      type: object
    UpdateDataQualityRulesetRequest:
      example:
        Ruleset: ""
        Description: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the data quality ruleset.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the ruleset.
        Ruleset:
          allOf:
          - $ref: '#/components/schemas/DataQualityRulesetString'
          - description: "A Data Quality Definition Language (DQDL) ruleset. For more\
              \ information, see the Glue developer guide."
      required:
      - Name
      title: UpdateDataQualityRulesetRequest
      type: object
    UpdateDatabaseResponse:
      properties: {}
      type: object
    UpdateDatabaseRequest:
      example:
        DatabaseInput:
          LocationUri: ""
          CreateTableDefaultPermissions: ""
          Description: ""
          Parameters: ""
          TargetDatabase:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
          FederatedDatabase:
            ConnectionName: ""
            Identifier: ""
          Name: ""
        CatalogId: ""
        Name: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog in which the metadata database\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database to update in the catalog. For Hive\
              \ compatibility, this is folded to lowercase."
        DatabaseInput:
          $ref: '#/components/schemas/UpdateDatabaseRequest_DatabaseInput'
      required:
      - DatabaseInput
      - Name
      title: UpdateDatabaseRequest
      type: object
    UpdateDevEndpointResponse:
      properties: {}
      type: object
    UpdateDevEndpointRequest:
      example:
        EndpointName: ""
        DeletePublicKeys: ""
        DeleteArguments: ""
        PublicKey: ""
        UpdateEtlLibraries: ""
        AddArguments: ""
        AddPublicKeys: ""
        CustomLibraries:
          ExtraJarsS3Path: ""
          ExtraPythonLibsS3Path: ""
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the <code>DevEndpoint</code> to be updated.
        PublicKey:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The public key for the <code>DevEndpoint</code> to use.
        AddPublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeysList'
          - description: The list of public keys for the <code>DevEndpoint</code>
              to use.
        DeletePublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeysList'
          - description: The list of public keys to be deleted from the <code>DevEndpoint</code>.
        CustomLibraries:
          $ref: '#/components/schemas/UpdateDevEndpointRequest_CustomLibraries'
        UpdateEtlLibraries:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: " <code>True</code> if the list of custom libraries to be\
              \ loaded in the development endpoint needs to be updated, or <code>False</code>\
              \ if otherwise."
        DeleteArguments:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The list of argument keys to be deleted from the map of arguments
              used to configure the <code>DevEndpoint</code>.
        AddArguments:
          allOf:
          - $ref: '#/components/schemas/MapValue'
          - description: "<p>The map of arguments to add the map of arguments used\
              \ to configure the <code>DevEndpoint</code>.</p> <p>Valid arguments\
              \ are:</p> <ul> <li> <p> <code>\"--enable-glue-datacatalog\": \"\"</code>\
              \ </p> </li> </ul> <p>You can specify a version of Python support for\
              \ development endpoints by using the <code>Arguments</code> parameter\
              \ in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code>\
              \ APIs. If no arguments are provided, the version defaults to Python\
              \ 2.</p>"
      required:
      - EndpointName
      title: UpdateDevEndpointRequest
      type: object
    UpdateJobResponse:
      example:
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Returns the name of the updated job definition.
      type: object
    UpdateJobRequest:
      example:
        JobUpdate:
          Connections:
            Connections: ""
          MaxRetries: ""
          Description: ""
          Timeout: ""
          SourceControlDetails:
            LastCommitId: ""
            Repository: ""
            Owner: ""
            AuthStrategy: ""
            Branch: ""
            AuthToken: ""
            Folder: ""
            Provider: ""
          AllocatedCapacity: ""
          Role: ""
          DefaultArguments: ""
          NotificationProperty:
            NotifyDelayAfter: ""
          CodeGenConfigurationNodes: ""
          WorkerType: ""
          ExecutionClass: ""
          LogUri: ""
          Command:
            Runtime: ""
            PythonVersion: ""
            ScriptLocation: ""
            Name: ""
          GlueVersion: ""
          ExecutionProperty:
            MaxConcurrentRuns: ""
          SecurityConfiguration: ""
          NumberOfWorkers: ""
          NonOverridableArguments: ""
          MaxCapacity: ""
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition to update.
        JobUpdate:
          $ref: '#/components/schemas/UpdateJobRequest_JobUpdate'
      required:
      - JobName
      - JobUpdate
      title: UpdateJobRequest
      type: object
    UpdateJobFromSourceControlResponse:
      example:
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the Glue job.
      type: object
    UpdateJobFromSourceControlRequest:
      example:
        AuthStrategy: ""
        CommitId: ""
        JobName: ""
        AuthToken: ""
        RepositoryName: ""
        BranchName: ""
        Folder: ""
        RepositoryOwner: ""
        Provider: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the Glue job to be synchronized to or from the
              remote repository.
        Provider:
          allOf:
          - $ref: '#/components/schemas/SourceControlProvider'
          - description: The provider for the remote repository.
        RepositoryName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the remote repository that contains the job artifacts.
        RepositoryOwner:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The owner of the remote repository that contains the job
              artifacts.
        BranchName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: An optional branch in the remote repository.
        Folder:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: An optional folder in the remote repository.
        CommitId:
          allOf:
          - $ref: '#/components/schemas/CommitIdString'
          - description: A commit ID for a commit in the remote repository.
        AuthStrategy:
          allOf:
          - $ref: '#/components/schemas/SourceControlAuthStrategy'
          - description: "The type of authentication, which can be an authentication\
              \ token stored in Amazon Web Services Secrets Manager, or a personal\
              \ access token."
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/AuthTokenString'
          - description: The value of the authorization token.
      title: UpdateJobFromSourceControlRequest
      type: object
    UpdateMLTransformResponse:
      example:
        TransformId: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier for the transform that was updated.
      type: object
    UpdateMLTransformRequest:
      example:
        Role: ""
        MaxRetries: ""
        WorkerType: ""
        Description: ""
        Parameters:
          TransformType: ""
          FindMatchesParameters:
            PrecisionRecallTradeoff: ""
            EnforceProvidedLabels: ""
            PrimaryKeyColumnName: ""
            AccuracyCostTradeoff: ""
        Timeout: ""
        GlueVersion: ""
        TransformId: ""
        NumberOfWorkers: ""
        Name: ""
        MaxCapacity: ""
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A unique identifier that was generated when the transform
              was created.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique name that you gave the transform when you created
              it.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the transform. The default is an empty string.
        Parameters:
          $ref: '#/components/schemas/UpdateMLTransformRequest_Parameters'
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: The name or Amazon Resource Name (ARN) of the IAM role with
              the required permissions.
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "This value determines which version of Glue this machine\
              \ learning transform is compatible with. Glue 1.0 is recommended for\
              \ most customers. If the value is not set, the Glue compatibility defaults\
              \ to Glue 0.9. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions\"\
              >Glue Versions</a> in the developer guide."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>The number of Glue data processing units (DPUs) that\
              \ are allocated to task runs for this transform. You can allocate from\
              \ 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing\
              \ power that consists of 4 vCPUs of compute capacity and 16 GB of memory.\
              \ For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              >Glue pricing page</a>. </p> <p>When the <code>WorkerType</code> field\
              \ is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code>\
              \ field is set automatically and becomes read-only.</p>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ this task runs. Accepts a value of Standard, G.1X, or G.2X.</p> <ul>\
              \ <li> <p>For the <code>Standard</code> worker type, each worker provides\
              \ 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p>\
              \ </li> <li> <p>For the <code>G.1X</code> worker type, each worker provides\
              \ 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p>\
              \ </li> <li> <p>For the <code>G.2X</code> worker type, each worker provides\
              \ 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p>\
              \ </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when this task runs.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The timeout for a task run for this transform in minutes.\
              \ This is the maximum time that a task run for this transform can consume\
              \ resources before it is terminated and enters <code>TIMEOUT</code>\
              \ status. The default is 2,880 minutes (48 hours)."
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The maximum number of times to retry a task for this transform
              after a task run fails.
      required:
      - TransformId
      title: UpdateMLTransformRequest
      type: object
    UpdatePartitionResponse:
      properties: {}
      type: object
    UpdatePartitionRequest:
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        PartitionValueList: ""
        PartitionInput:
          Parameters: ""
          LastAnalyzedTime: ""
          Values: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the partition to be updated\
              \ resides. If none is provided, the Amazon Web Services account ID is\
              \ used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database in which the table in question
              resides.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table in which the partition to be updated
              is located.
        PartitionValueList:
          allOf:
          - $ref: '#/components/schemas/BoundedPartitionValueList'
          - description: List of partition key values that define the partition to
              update.
        PartitionInput:
          $ref: '#/components/schemas/UpdatePartitionRequest_PartitionInput'
      required:
      - DatabaseName
      - PartitionInput
      - PartitionValueList
      - TableName
      title: UpdatePartitionRequest
      type: object
    UpdateRegistryResponse:
      example:
        RegistryName: ""
        RegistryArn: ""
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the updated registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource name (ARN) of the updated registry.
      type: object
    UpdateRegistryInput:
      example:
        Description: ""
        RegistryId:
          RegistryName: ""
          RegistryArn: ""
      properties:
        RegistryId:
          $ref: '#/components/schemas/DeleteRegistryInput_RegistryId'
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: "A description of the registry. If description is not provided,\
              \ this field will not be updated."
      required:
      - Description
      - RegistryId
      title: UpdateRegistryInput
      type: object
    UpdateSchemaResponse:
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry that contains the schema.
      type: object
    UpdateSchemaInput:
      example:
        Description: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        SchemaVersionNumber:
          LatestVersion: ""
          VersionNumber: ""
        Compatibility: ""
      properties:
        SchemaId:
          $ref: '#/components/schemas/GetSchemaByDefinitionInput_SchemaId'
        SchemaVersionNumber:
          $ref: '#/components/schemas/UpdateSchemaInput_SchemaVersionNumber'
        Compatibility:
          allOf:
          - $ref: '#/components/schemas/Compatibility'
          - description: The new compatibility setting for the schema.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The new description for the schema.
      required:
      - SchemaId
      title: UpdateSchemaInput
      type: object
    UpdateSourceControlFromJobResponse:
      example:
        JobName: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the Glue job.
      type: object
    UpdateSourceControlFromJobRequest:
      example:
        AuthStrategy: ""
        CommitId: ""
        JobName: ""
        AuthToken: ""
        RepositoryName: ""
        BranchName: ""
        Folder: ""
        RepositoryOwner: ""
        Provider: ""
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the Glue job to be synchronized to or from the
              remote repository.
        Provider:
          allOf:
          - $ref: '#/components/schemas/SourceControlProvider'
          - description: The provider for the remote repository.
        RepositoryName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the remote repository that contains the job artifacts.
        RepositoryOwner:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The owner of the remote repository that contains the job
              artifacts.
        BranchName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: An optional branch in the remote repository.
        Folder:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: An optional folder in the remote repository.
        CommitId:
          allOf:
          - $ref: '#/components/schemas/CommitIdString'
          - description: A commit ID for a commit in the remote repository.
        AuthStrategy:
          allOf:
          - $ref: '#/components/schemas/SourceControlAuthStrategy'
          - description: "The type of authentication, which can be an authentication\
              \ token stored in Amazon Web Services Secrets Manager, or a personal\
              \ access token."
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/AuthTokenString'
          - description: The value of the authorization token.
      title: UpdateSourceControlFromJobRequest
      type: object
    UpdateTableResponse:
      properties: {}
      type: object
    UpdateTableRequest:
      example:
        VersionId: ""
        TableInput:
          Owner: ""
          ViewOriginalText: ""
          Description: ""
          TableType: ""
          Parameters: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          Retention: ""
          Name: ""
          ViewExpandedText: ""
          LastAnalyzedTime: ""
          TargetTable:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
            Name: ""
          PartitionKeys: ""
        DatabaseName: ""
        CatalogId: ""
        SkipArchive: ""
        TransactionId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the table resides. If none\
              \ is provided, the Amazon Web Services account ID is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the catalog database in which the table resides.\
              \ For Hive compatibility, this name is entirely lowercase."
        TableInput:
          $ref: '#/components/schemas/UpdateTableRequest_TableInput'
        SkipArchive:
          allOf:
          - $ref: '#/components/schemas/BooleanNullable'
          - description: "By default, <code>UpdateTable</code> always creates an archived\
              \ version of the table before updating it. However, if <code>skipArchive</code>\
              \ is set to true, <code>UpdateTable</code> does not create the archived\
              \ version."
        TransactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdString'
          - description: 'The transaction ID at which to update the table contents. '
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: 'The version ID at which to update the table contents. '
      required:
      - DatabaseName
      - TableInput
      title: UpdateTableRequest
      type: object
    UpdateTriggerResponse:
      example:
        Trigger:
          Type: ""
          Description: ""
          Actions: ""
          EventBatchingCondition:
            BatchSize: ""
            BatchWindow: ""
          WorkflowName: ""
          State: ""
          Schedule: ""
          Id: ""
          Name: ""
          Predicate:
            Logical: ""
            Conditions: ""
      properties:
        Trigger:
          $ref: '#/components/schemas/UpdateTriggerResponse_Trigger'
      type: object
    UpdateTriggerRequest:
      example:
        Name: ""
        TriggerUpdate:
          Description: ""
          Actions: ""
          EventBatchingCondition:
            BatchSize: ""
            BatchWindow: ""
          Schedule: ""
          Name: ""
          Predicate:
            Logical: ""
            Conditions: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger to update.
        TriggerUpdate:
          $ref: '#/components/schemas/UpdateTriggerRequest_TriggerUpdate'
      required:
      - Name
      - TriggerUpdate
      title: UpdateTriggerRequest
      type: object
    UpdateUserDefinedFunctionResponse:
      properties: {}
      type: object
    UpdateUserDefinedFunctionRequest:
      example:
        FunctionName: ""
        DatabaseName: ""
        FunctionInput:
          FunctionName: ""
          OwnerName: ""
          OwnerType: ""
          ResourceUris: ""
          ClassName: ""
        CatalogId: ""
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: "The ID of the Data Catalog where the function to be updated\
              \ is located. If none is provided, the Amazon Web Services account ID\
              \ is used by default."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database where the function to be
              updated is located.
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the function.
        FunctionInput:
          $ref: '#/components/schemas/UpdateUserDefinedFunctionRequest_FunctionInput'
      required:
      - DatabaseName
      - FunctionInput
      - FunctionName
      title: UpdateUserDefinedFunctionRequest
      type: object
    UpdateWorkflowResponse:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow which was specified in input.
      type: object
    UpdateWorkflowRequest:
      example:
        Description: ""
        DefaultRunProperties: ""
        Name: ""
        MaxConcurrentRuns: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow to be updated.
        Description:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The description of the workflow.
        DefaultRunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: A collection of properties to be used as part of each execution
              of the workflow.
        MaxConcurrentRuns:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "You can use this parameter to prevent unwanted multiple\
              \ updates to data, to control costs, or in some cases, to prevent exceeding\
              \ the maximum number of concurrent runs of any of the component jobs.\
              \ If you leave this parameter blank, there is no limit to the number\
              \ of concurrent workflow runs."
      required:
      - Name
      title: UpdateWorkflowRequest
      type: object
    AccountId:
      maxLength: 12
      minLength: 0
      type: string
    NameString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    GenericMap:
      additionalProperties:
        $ref: '#/components/schemas/GenericString'
      type: object
    Timeout:
      minimum: 1
      type: integer
    NotificationProperty:
      description: Specifies configuration properties of a notification.
      properties:
        NotifyDelayAfter:
          allOf:
          - $ref: '#/components/schemas/NotifyDelayAfter'
          - description: "After a job run starts, the number of minutes to wait before\
              \ sending a job run delay notification."
      type: object
    Action:
      description: Defines an action to be initiated by a trigger.
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of a job to be run.
        Arguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "<p>The job arguments used when this trigger fires. For this\
              \ job run, they replace the default arguments set in the job definition\
              \ itself.</p> <p>You can specify arguments here that your own job-execution\
              \ script consumes, as well as arguments that Glue itself consumes.</p>\
              \ <p>For information about how to specify and consume your own Job arguments,\
              \ see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html\"\
              >Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For\
              \ information about the key-value pairs that Glue consumes to set up\
              \ your job, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
              >Special Parameters Used by Glue</a> topic in the developer guide.</p>"
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The <code>JobRun</code> timeout in minutes. This is the\
              \ maximum time that a job run can consume resources before it is terminated\
              \ and enters <code>TIMEOUT</code> status. The default is 2,880 minutes\
              \ (48 hours). This overrides the timeout value set in the parent job."
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this action.
        NotificationProperty:
          $ref: '#/components/schemas/StartJobRunRequest_NotificationProperty'
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler to be used with this action.
      type: object
    ActionList:
      items:
        $ref: '#/components/schemas/Action'
      type: array
    AdditionalOptionKeys:
      enum:
      - performanceTuning.caching
      type: string
    EnclosedInStringProperty:
      type: string
      x-pattern: "\\([\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF]\\\
        |[^\\S\\r\\n\"']\\)*"
    AdditionalOptions:
      additionalProperties:
        $ref: '#/components/schemas/EnclosedInStringProperty'
      type: object
    GenericString:
      type: string
    AdditionalPlanOptionsMap:
      additionalProperties:
        $ref: '#/components/schemas/GenericString'
      type: object
    AggFunction:
      enum:
      - avg
      - countDistinct
      - count
      - first
      - last
      - kurtosis
      - max
      - min
      - skewness
      - stddev_samp
      - stddev_pop
      - sum
      - sumDistinct
      - var_samp
      - var_pop
      type: string
    NodeName:
      type: string
      x-pattern: "\\([\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF]\\\
        |[^\\r\\n]\\)*"
    OneInput:
      items:
        $ref: '#/components/schemas/NodeId'
      maxItems: 1
      minItems: 1
      type: array
    GlueStudioPathList:
      items:
        $ref: '#/components/schemas/EnclosedInStringProperties'
      type: array
    AggregateOperations:
      items:
        $ref: '#/components/schemas/AggregateOperation'
      maxItems: 30
      minItems: 1
      type: array
    Aggregate:
      description: Specifies a transform that groups rows by chosen fields and computes
        the aggregated value by specified function.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: Specifies the fields and rows to use as inputs for the aggregate
              transform.
        Groups:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies the fields to group by.
        Aggs:
          allOf:
          - $ref: '#/components/schemas/AggregateOperations'
          - description: 'Specifies the aggregate functions to be performed on specified
              fields. '
      required:
      - Aggs
      - Groups
      - Inputs
      - Name
      type: object
    EnclosedInStringProperties:
      items:
        $ref: '#/components/schemas/EnclosedInStringProperty'
      type: array
    AggregateOperation:
      description: Specifies the set of parameters needed to perform aggregation in
        the aggregate transform.
      properties:
        Column:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: Specifies the column on the data set on which the aggregation
              function will be applied.
        AggFunc:
          allOf:
          - $ref: '#/components/schemas/AggFunction'
          - description: "<p>Specifies the aggregation function to apply.</p> <p>Possible\
              \ aggregation functions include: avg countDistinct, count, first, last,\
              \ kurtosis, max, min, skewness, stddev_samp, stddev_pop, sum, sumDistinct,\
              \ var_samp, var_pop</p>"
      required:
      - AggFunc
      - Column
      type: object
    AmazonRedshiftAdvancedOption:
      description: Specifies an optional value when connecting to the Redshift cluster.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The key for the additional connection option.
        Value:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The value for the additional connection option.
      type: object
    AmazonRedshiftAdvancedOptions:
      items:
        $ref: '#/components/schemas/AmazonRedshiftAdvancedOption'
      type: array
    GenericLimitedString:
      pattern: "[A-Za-z0-9_-]*"
      type: string
    Option:
      description: Specifies an option value.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the value of the option.
        Label:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the label of the option.
        Description:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the description of the option.
      type: object
    BooleanValue:
      type: boolean
    OptionList:
      items:
        $ref: '#/components/schemas/Option'
      type: array
    AmazonRedshiftNodeData:
      description: Specifies an Amazon Redshift node.
      properties:
        AccessType:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The access type for the Redshift connection. Can be a direct
              connection or catalog connections.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The source type to specify whether a specific table is the
              source or a custom query.
        Connection:
          $ref: '#/components/schemas/AmazonRedshiftNodeData_Connection'
        Schema:
          $ref: '#/components/schemas/AmazonRedshiftNodeData_Schema'
        Table:
          $ref: '#/components/schemas/AmazonRedshiftNodeData_Table'
        CatalogDatabase:
          $ref: '#/components/schemas/AmazonRedshiftNodeData_CatalogDatabase'
        CatalogTable:
          $ref: '#/components/schemas/AmazonRedshiftNodeData_CatalogTable'
        CatalogRedshiftSchema:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Redshift schema name when working with a data catalog.
        CatalogRedshiftTable:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The database table to read from.
        TempDir:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon S3 path where temporary data can be staged when
              copying out of the database.
        IamRole:
          $ref: '#/components/schemas/AmazonRedshiftNodeData_IamRole'
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AmazonRedshiftAdvancedOptions'
          - description: Optional values when connecting to the Redshift cluster.
        SampleQuery:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The SQL used to fetch the data from a Redshift sources when
              the SourceType is 'query'.
        PreAction:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The SQL used before a MERGE or APPEND with upsert is run.
        PostAction:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The SQL used before a MERGE or APPEND with upsert is run.
        Action:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies how writing to a Redshift cluser will occur.
        TablePrefix:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: Specifies the prefix to a table.
        Upsert:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: The action used on Redshift sinks when doing an APPEND.
        MergeAction:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The action used when to detemine how a MERGE in a Redshift
              sink will be handled.
        MergeWhenMatched:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The action used when to detemine how a MERGE in a Redshift
              sink will be handled when an existing record matches a new record.
        MergeWhenNotMatched:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The action used when to detemine how a MERGE in a Redshift
              sink will be handled when an existing record doesn't match a new record.
        MergeClause:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The SQL used in a custom merge to deal with matching records.
        CrawlerConnection:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies the name of the connection that is associated with
              the catalog table used.
        TableSchema:
          allOf:
          - $ref: '#/components/schemas/OptionList'
          - description: The array of schema output for a given node.
        StagingTable:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the temporary staging table that is used when
              doing a MERGE or APPEND with upsert.
        SelectedColumns:
          allOf:
          - $ref: '#/components/schemas/OptionList'
          - description: The list of column names used to determine a matching record
              when doing a MERGE or APPEND with upsert.
      type: object
    AmazonRedshiftSource:
      description: Specifies an Amazon Redshift source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Amazon Redshift source.
        Data:
          $ref: '#/components/schemas/AmazonRedshiftSource_Data'
      type: object
    AmazonRedshiftTarget:
      description: Specifies an Amazon Redshift target.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Amazon Redshift target.
        Data:
          $ref: '#/components/schemas/AmazonRedshiftTarget_Data'
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
      type: object
    Mappings:
      items:
        $ref: '#/components/schemas/Mapping'
      type: array
    ApplyMapping:
      description: "Specifies a transform that maps data property keys in the data\
        \ source to data property keys in the data target. You can rename keys, modify\
        \ the data types for keys, and choose which keys to drop from the dataset."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Mapping:
          allOf:
          - $ref: '#/components/schemas/Mappings'
          - description: Specifies the mapping of data property keys in the data source
              to data property keys in the data target.
      required:
      - Inputs
      - Mapping
      - Name
      type: object
    EnclosedInStringPropertyWithQuote:
      type: string
      x-pattern: "\\([\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF]\\\
        |[^\\S\\r\\n]\\)*"
    GlueSchemas:
      items:
        $ref: '#/components/schemas/GlueSchema'
      type: array
    AthenaConnectorSource:
      description: Specifies a connector to an Amazon Athena data source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the connection that is associated with the connector.
        ConnectorName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of a connector that assists with accessing the data
              store in Glue Studio.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The type of connection, such as marketplace.athena or custom.athena,\
              \ designating a connection to an Amazon Athena data store."
        ConnectionTable:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringPropertyWithQuote'
          - description: The name of the table in the data source.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The name of the Cloudwatch log group to read from. For example,\
              \ <code>/aws-glue/jobs/output</code>."
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the custom Athena source.
      required:
      - ConnectionName
      - ConnectionType
      - ConnectorName
      - Name
      - SchemaName
      type: object
    AttemptCount:
      type: integer
    ColumnNameString:
      maxLength: 1024
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    AuditColumnNamesList:
      items:
        $ref: '#/components/schemas/ColumnNameString'
      type: array
    AuditContextString:
      maxLength: 2048
      minLength: 0
      type: string
    NullableBoolean:
      type: boolean
    AuditContext:
      description: A structure containing the Lake Formation audit context.
      properties:
        AdditionalAuditContext:
          allOf:
          - $ref: '#/components/schemas/AuditContextString'
          - description: A string containing the additional audit context information.
        RequestedColumns:
          allOf:
          - $ref: '#/components/schemas/AuditColumnNamesList'
          - description: The requested columns for audit.
        AllColumnsRequested:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: All columns request for audit.
      type: object
    AuthTokenString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    BackfillErrorCode:
      enum:
      - ENCRYPTED_PARTITION_ERROR
      - INTERNAL_ERROR
      - INVALID_PARTITION_TYPE_DATA_ERROR
      - MISSING_PARTITION_VALUE_ERROR
      - UNSUPPORTED_PARTITION_CHARACTER_ERROR
      type: string
    BackfillErroredPartitionsList:
      items:
        $ref: '#/components/schemas/PartitionValueList'
      type: array
    BackfillError:
      description: "<p>A list of errors that can occur when registering partition\
        \ indexes for an existing table.</p> <p>These errors give the details about\
        \ why an index registration failed and provide a limited number of partitions\
        \ in the response, so that you can fix the partitions at fault and try registering\
        \ the index again. The most common set of errors that can occur are categorized\
        \ as follows:</p> <ul> <li> <p>EncryptedPartitionError: The partitions are\
        \ encrypted.</p> </li> <li> <p>InvalidPartitionTypeDataError: The partition\
        \ value doesn't match the data type for that partition column.</p> </li> <li>\
        \ <p>MissingPartitionValueError: The partitions are encrypted.</p> </li> <li>\
        \ <p>UnsupportedPartitionCharacterError: Characters inside the partition value\
        \ are not supported. For example: U+0000 , U+0001, U+0002.</p> </li> <li>\
        \ <p>InternalError: Any error which does not belong to other error codes.</p>\
        \ </li> </ul>"
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/BackfillErrorCode'
          - description: The error code for an error that occurred when registering
              partition indexes for an existing table.
        Partitions:
          allOf:
          - $ref: '#/components/schemas/BackfillErroredPartitionsList'
          - description: A list of a limited number of partitions in the response.
      type: object
    PartitionValueList:
      description: Contains a list of values defining partitions.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The list of values.
      required:
      - Values
      type: object
    BackfillErrors:
      items:
        $ref: '#/components/schemas/BackfillError'
      type: array
    BasicCatalogTarget:
      description: Specifies a target that uses a Glue Data Catalog table.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of your data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database that contains the table you want to use as the
              target. This database must already exist in the Data Catalog.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The table that defines the schema of your output data. This
              table must already exist in the Data Catalog.
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    CatalogIdString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    PartitionInputList:
      items:
        $ref: '#/components/schemas/PartitionInput'
      maxItems: 100
      minItems: 0
      type: array
    PartitionErrors:
      items:
        $ref: '#/components/schemas/PartitionError'
      type: array
    DeleteConnectionNameList:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 25
      minItems: 0
      type: array
    NameStringList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    ErrorByName:
      additionalProperties:
        $ref: '#/components/schemas/ErrorDetail'
      type: object
    BatchDeletePartitionValueList:
      items:
        $ref: '#/components/schemas/PartitionValueList'
      maxItems: 25
      minItems: 0
      type: array
    BatchDeleteTableNameList:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 100
      minItems: 0
      type: array
    TransactionIdString:
      maxLength: 255
      minLength: 1
      pattern: "[\\p{L}\\p{N}\\p{P}]*"
      type: string
    TableErrors:
      items:
        $ref: '#/components/schemas/TableError'
      type: array
    VersionString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    BatchDeleteTableVersionList:
      items:
        $ref: '#/components/schemas/VersionString'
      maxItems: 100
      minItems: 0
      type: array
    TableVersionErrors:
      items:
        $ref: '#/components/schemas/TableVersionError'
      type: array
    OrchestrationNameString:
      maxLength: 128
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    BatchGetBlueprintNames:
      items:
        $ref: '#/components/schemas/OrchestrationNameString'
      maxItems: 25
      minItems: 1
      type: array
    Blueprints:
      items:
        $ref: '#/components/schemas/Blueprint'
      type: array
    BlueprintNames:
      items:
        $ref: '#/components/schemas/OrchestrationNameString'
      type: array
    CrawlerNameList:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 100
      minItems: 0
      type: array
    CrawlerList:
      items:
        $ref: '#/components/schemas/Crawler'
      type: array
    CustomEntityTypeNames:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 50
      minItems: 1
      type: array
    CustomEntityTypes:
      items:
        $ref: '#/components/schemas/CustomEntityType'
      type: array
    DataQualityResultIds:
      items:
        $ref: '#/components/schemas/HashString'
      maxItems: 100
      minItems: 1
      type: array
    DataQualityResultsList:
      items:
        $ref: '#/components/schemas/DataQualityResult'
      type: array
    DevEndpointNames:
      items:
        $ref: '#/components/schemas/GenericString'
      maxItems: 25
      minItems: 1
      type: array
    DevEndpointList:
      items:
        $ref: '#/components/schemas/DevEndpoint'
      type: array
    JobNameList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    JobList:
      items:
        $ref: '#/components/schemas/Job'
      type: array
    BatchGetPartitionValueList:
      items:
        $ref: '#/components/schemas/PartitionValueList'
      maxItems: 1000
      minItems: 0
      type: array
    PartitionList:
      items:
        $ref: '#/components/schemas/Partition'
      type: array
    TriggerNameList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    TriggerList:
      items:
        $ref: '#/components/schemas/Trigger'
      type: array
    WorkflowNames:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 25
      minItems: 1
      type: array
    Workflows:
      items:
        $ref: '#/components/schemas/Workflow'
      maxItems: 25
      minItems: 1
      type: array
    BatchSize:
      maximum: 100
      minimum: 1
      type: integer
    IdString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    ErrorDetail:
      description: Contains details about an error.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The code associated with this error.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A message describing the error.
      type: object
    BatchStopJobRunError:
      description: Records an error that occurred when attempting to stop a specified
        job run.
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition that is used in the job run
              in question.
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The <code>JobRunId</code> of the job run in question.
        ErrorDetail:
          $ref: '#/components/schemas/BatchStopJobRunError_ErrorDetail'
      type: object
    BatchStopJobRunErrorList:
      items:
        $ref: '#/components/schemas/BatchStopJobRunError'
      type: array
    BatchStopJobRunJobRunIdList:
      items:
        $ref: '#/components/schemas/IdString'
      maxItems: 25
      minItems: 1
      type: array
    BatchStopJobRunSuccessfulSubmissionList:
      items:
        $ref: '#/components/schemas/BatchStopJobRunSuccessfulSubmission'
      type: array
    BatchStopJobRunSuccessfulSubmission:
      description: Records a successful request to stop a specified <code>JobRun</code>.
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition used in the job run that was
              stopped.
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The <code>JobRunId</code> of the job run that was stopped.
      type: object
    BoundedPartitionValueList:
      items:
        $ref: '#/components/schemas/ValueString'
      maxItems: 100
      minItems: 0
      type: array
    BatchUpdatePartitionFailureEntry:
      description: Contains information about a batch update partition error.
      properties:
        PartitionValueList:
          allOf:
          - $ref: '#/components/schemas/BoundedPartitionValueList'
          - description: A list of values defining the partitions.
        ErrorDetail:
          $ref: '#/components/schemas/BatchUpdatePartitionFailureEntry_ErrorDetail'
      type: object
    BatchUpdatePartitionFailureList:
      items:
        $ref: '#/components/schemas/BatchUpdatePartitionFailureEntry'
      type: array
    BatchUpdatePartitionRequestEntryList:
      items:
        $ref: '#/components/schemas/BatchUpdatePartitionRequestEntry'
      maxItems: 100
      minItems: 1
      type: array
    PartitionInput:
      description: The structure used to create and update a partition.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: "<p>The values of the partition. Although this parameter\
              \ is not required by the SDK, you must specify this parameter for a\
              \ valid input.</p> <p>The values for the keys for the new partition\
              \ must be passed as an array of String objects that must be ordered\
              \ in the same order as the partition keys appearing in the Amazon S3\
              \ prefix. Otherwise Glue will add the values to the wrong keys.</p>"
        LastAccessTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time at which the partition was accessed.
        StorageDescriptor:
          $ref: '#/components/schemas/PartitionInput_StorageDescriptor'
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define partition parameters.
        LastAnalyzedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time at which column statistics were computed for
              this partition.
      type: object
    BatchUpdatePartitionRequestEntry:
      description: A structure that contains the values and structure used to update
        a partition.
      properties:
        PartitionValueList:
          allOf:
          - $ref: '#/components/schemas/BoundedPartitionValueList'
          - description: A list of values defining the partitions.
        PartitionInput:
          $ref: '#/components/schemas/BatchUpdatePartitionRequestEntry_PartitionInput'
      required:
      - PartitionInput
      - PartitionValueList
      type: object
    BatchWindow:
      maximum: 900
      minimum: 1
      type: integer
    NonNegativeLong:
      minimum: 0
      type: integer
    NonNegativeDouble:
      format: double
      minimum: 0
      type: number
    BinaryColumnStatisticsData:
      description: Defines column statistics supported for bit sequence data values.
      properties:
        MaximumLength:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The size of the longest bit sequence in the column.
        AverageLength:
          allOf:
          - $ref: '#/components/schemas/NonNegativeDouble'
          - description: The average bit sequence length in the column.
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
      required:
      - AverageLength
      - MaximumLength
      - NumberOfNulls
      type: object
    Blob:
      type: string
    Generic512CharString:
      maxLength: 512
      minLength: 1
      type: string
    TimestampValue:
      format: date-time
      type: string
    BlueprintParameterSpec:
      maxLength: 131072
      minLength: 1
      type: string
    BlueprintStatus:
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - FAILED
      type: string
    ErrorString:
      type: string
    LastActiveDefinition:
      description: "When there are multiple versions of a blueprint and the latest\
        \ version has some errors, this attribute indicates the last successful blueprint\
        \ definition that is available with the service."
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: The description of the blueprint.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time the blueprint was last modified.
        ParameterSpec:
          allOf:
          - $ref: '#/components/schemas/BlueprintParameterSpec'
          - description: A JSON string specifying the parameters for the blueprint.
        BlueprintLocation:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies a path in Amazon S3 where the blueprint is published
              by the Glue developer.
        BlueprintServiceLocation:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies a path in Amazon S3 where the blueprint is copied
              when you create or update the blueprint.
      type: object
    Blueprint:
      description: The details of a blueprint.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        Description:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: The description of the blueprint.
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time the blueprint was registered.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time the blueprint was last modified.
        ParameterSpec:
          allOf:
          - $ref: '#/components/schemas/BlueprintParameterSpec'
          - description: A JSON string that indicates the list of parameter specifications
              for the blueprint.
        BlueprintLocation:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies the path in Amazon S3 where the blueprint is published.
        BlueprintServiceLocation:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies a path in Amazon S3 where the blueprint is copied
              when you call <code>CreateBlueprint/UpdateBlueprint</code> to register
              the blueprint in Glue.
        Status:
          allOf:
          - $ref: '#/components/schemas/BlueprintStatus'
          - description: <p>The status of the blueprint registration.</p> <ul> <li>
              <p>Creating — The blueprint registration is in progress.</p> </li> <li>
              <p>Active — The blueprint has been successfully registered.</p> </li>
              <li> <p>Updating — An update to the blueprint registration is in progress.</p>
              </li> <li> <p>Failed — The blueprint registration failed.</p> </li>
              </ul>
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorString'
          - description: An error message.
        LastActiveDefinition:
          $ref: '#/components/schemas/Blueprint_LastActiveDefinition'
      type: object
    BlueprintDetails:
      description: The details of a blueprint.
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The run ID for this blueprint.
      type: object
    BlueprintParameters:
      maxLength: 131072
      minLength: 1
      type: string
    BlueprintRunState:
      enum:
      - RUNNING
      - SUCCEEDED
      - FAILED
      - ROLLING_BACK
      type: string
    MessageString:
      type: string
    OrchestrationIAMRoleArn:
      maxLength: 1024
      minLength: 1
      pattern: "arn:aws[^:]*:iam::[0-9]*:role/.+"
      type: string
    BlueprintRun:
      description: The details of a blueprint run.
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/OrchestrationNameString'
          - description: The name of the blueprint.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The run ID for this blueprint run.
        WorkflowName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of a workflow that is created as a result of a\
              \ successful blueprint run. If a blueprint run has an error, there will\
              \ not be a workflow created."
        State:
          allOf:
          - $ref: '#/components/schemas/BlueprintRunState'
          - description: <p>The state of the blueprint run. Possible values are:</p>
              <ul> <li> <p>Running — The blueprint run is in progress.</p> </li> <li>
              <p>Succeeded — The blueprint run completed successfully.</p> </li> <li>
              <p>Failed — The blueprint run failed and rollback is complete.</p> </li>
              <li> <p>Rolling Back — The blueprint run failed and rollback is in progress.</p>
              </li> </ul>
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time that the blueprint run started.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time that the blueprint run completed.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/MessageString'
          - description: Indicates any errors that are seen while running the blueprint.
        RollbackErrorMessage:
          allOf:
          - $ref: '#/components/schemas/MessageString'
          - description: "If there are any errors while creating the entities of a\
              \ workflow, we try to roll back the created entities until that point\
              \ and delete them. This attribute indicates the errors seen while trying\
              \ to delete the entities that are created."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/BlueprintParameters'
          - description: The blueprint parameters as a string. You will have to provide
              a value for each key that is required from the parameter spec that is
              defined in the <code>Blueprint$ParameterSpec</code>.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/OrchestrationIAMRoleArn'
          - description: The role ARN. This role will be assumed by the Glue service
              and will be used to create the workflow and other entities of a workflow.
      type: object
    BlueprintRuns:
      items:
        $ref: '#/components/schemas/BlueprintRun'
      type: array
    Boolean:
      type: boolean
    BooleanColumnStatisticsData:
      description: Defines column statistics supported for Boolean data columns.
      properties:
        NumberOfTrues:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of true values in the column.
        NumberOfFalses:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of false values in the column.
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
      required:
      - NumberOfFalses
      - NumberOfNulls
      - NumberOfTrues
      type: object
    BooleanNullable:
      type: boolean
    ValueString:
      maxLength: 1024
      type: string
    BoxedBoolean:
      type: boolean
    BoxedDoubleFraction:
      format: double
      maximum: 1
      minimum: 0
      type: number
    BoxedLong:
      type: integer
    BoxedNonNegativeInt:
      minimum: 0
      type: integer
    BoxedNonNegativeLong:
      minimum: 0
      type: integer
    BoxedPositiveInt:
      minimum: 0
      type: integer
    HashString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    TaskStatusType:
      enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      - SUCCEEDED
      - FAILED
      - TIMEOUT
      type: string
    IntegerValue:
      type: integer
    CatalogDeltaSource:
      description: Specifies a Delta Lake data source that is registered in the Glue
        Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Delta Lake data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
        AdditionalDeltaOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the Delta Lake source.
      required:
      - Database
      - Name
      - Table
      type: object
    CatalogEncryptionMode:
      enum:
      - DISABLED
      - SSE-KMS
      type: string
    CatalogEntry:
      description: Specifies a table definition in the Glue Data Catalog.
      properties:
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The database in which the table metadata resides.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table in question.
      required:
      - DatabaseName
      - TableName
      type: object
    CatalogEntries:
      items:
        $ref: '#/components/schemas/CatalogEntry'
      type: array
    CatalogGetterPageSize:
      maximum: 100
      minimum: 1
      type: integer
    CatalogHudiSource:
      description: Specifies a Hudi data source that is registered in the Glue Data
        Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Hudi data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
        AdditionalHudiOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the Hudi source.
      required:
      - Database
      - Name
      - Table
      type: object
    Timestamp:
      format: date-time
      type: string
    CatalogImportStatus:
      description: A structure containing migration status information.
      properties:
        ImportCompleted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " <code>True</code> if the migration has completed, or <code>False</code>\
              \ otherwise."
        ImportTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the migration was started.
        ImportedBy:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the person who initiated the migration.
      type: object
    KafkaStreamingSourceOptions:
      description: Additional options for streaming.
      properties:
        BootstrapServers:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "A list of bootstrap server URLs, for example, as <code>b-1.vpc-test-2.o4q88o.c6.kafka.us-east-1.amazonaws.com:9094</code>.\
              \ This option must be specified in the API call or defined in the table\
              \ metadata in the Data Catalog."
        SecurityProtocol:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The protocol used to communicate with brokers. The possible
              values are <code>"SSL"</code> or <code>"PLAINTEXT"</code>.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the connection.
        TopicName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The topic name as specified in Apache Kafka. You must specify\
              \ at least one of <code>\"topicName\"</code>, <code>\"assign\"</code>\
              \ or <code>\"subscribePattern\"</code>."
        Assign:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The specific <code>TopicPartitions</code> to consume. You\
              \ must specify at least one of <code>\"topicName\"</code>, <code>\"\
              assign\"</code> or <code>\"subscribePattern\"</code>."
        SubscribePattern:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "A Java regex string that identifies the topic list to subscribe\
              \ to. You must specify at least one of <code>\"topicName\"</code>, <code>\"\
              assign\"</code> or <code>\"subscribePattern\"</code>."
        Classification:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: An optional classification.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the delimiter character.
        StartingOffsets:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The starting position in the Kafka topic to read data from.
              The possible values are <code>"earliest"</code> or <code>"latest"</code>.
              The default value is <code>"latest"</code>.
        EndingOffsets:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The end point when a batch query is ended. Possible values
              are either <code>"latest"</code> or a JSON string that specifies an
              ending offset for each <code>TopicPartition</code>.
        PollTimeoutMs:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The timeout in milliseconds to poll data from Kafka in Spark
              job executors. The default value is <code>512</code>.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: The number of times to retry before failing to fetch Kafka
              offsets. The default value is <code>3</code>.
        RetryIntervalMs:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The time in milliseconds to wait before retrying to fetch
              Kafka offsets. The default value is <code>10</code>.
        MaxOffsetsPerTrigger:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: "The rate limit on the maximum number of offsets that are\
              \ processed per trigger interval. The specified total number of offsets\
              \ is proportionally split across <code>topicPartitions</code> of different\
              \ volumes. The default value is null, which means that the consumer\
              \ reads all offsets until the known latest offset."
        MinPartitions:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "The desired minimum number of partitions to read from Kafka.\
              \ The default value is null, which means that the number of spark partitions\
              \ is equal to the number of Kafka partitions."
        IncludeHeaders:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "Whether to include the Kafka headers. When the option is\
              \ set to \"true\", the data output will contain an additional column\
              \ named \"glue_streaming_kafka_headers\" with type <code>Array[Struct(key:\
              \ String, value: String)]</code>. The default value is \"false\". This\
              \ option is available in Glue version 3.0 or later only."
        AddRecordTimestamp:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "When this option is set to 'true', the data output will\
              \ contain an additional column named \"__src_timestamp\" that indicates\
              \ the time when the corresponding record received by the topic. The\
              \ default value is 'false'. This option is supported in Glue version\
              \ 4.0 or later."
        EmitConsumerLagMetrics:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "When this option is set to 'true', for each batch, it will\
              \ emit the metrics for the duration between the oldest record received\
              \ by the topic and the time it arrives in Glue to CloudWatch. The metric's\
              \ name is \"glue.driver.streaming.maxConsumerLagInMs\". The default\
              \ value is 'false'. This option is supported in Glue version 4.0 or\
              \ later."
        StartingTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: "<p>The timestamp of the record in the Kafka topic to start\
              \ reading data from. The possible values are a timestamp string in UTC\
              \ format of the pattern <code>yyyy-mm-ddTHH:MM:SSZ</code> (where Z represents\
              \ a UTC timezone offset with a +/-. For example: \"2023-04-04T08:00:00+08:00\"\
              ). </p> <p>Only one of <code>StartingTimestamp</code> or <code>StartingOffsets</code>\
              \ must be set.</p>"
      type: object
    StreamingDataPreviewOptions:
      description: Specifies options related to data preview for viewing a sample
        of your data.
      properties:
        PollingTime:
          allOf:
          - $ref: '#/components/schemas/PollingTime'
          - description: The polling time in milliseconds.
        RecordPollingLimit:
          allOf:
          - $ref: '#/components/schemas/PositiveLong'
          - description: The limit to the number of records polled.
      type: object
    CatalogKafkaSource:
      description: Specifies an Apache Kafka data store in the Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        WindowSize:
          allOf:
          - $ref: '#/components/schemas/BoxedPositiveInt'
          - description: The amount of time to spend processing each micro batch.
        DetectSchema:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether to automatically determine the schema from the incoming
              data.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        StreamingOptions:
          $ref: '#/components/schemas/CatalogKafkaSource_StreamingOptions'
        DataPreviewOptions:
          $ref: '#/components/schemas/CatalogKafkaSource_DataPreviewOptions'
      required:
      - Database
      - Name
      - Table
      type: object
    KinesisStreamingSourceOptions:
      description: Additional options for the Amazon Kinesis streaming data source.
      properties:
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The URL of the Kinesis endpoint.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the Kinesis data stream.
        Classification:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: An optional classification.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the delimiter character.
        StartingPosition:
          allOf:
          - $ref: '#/components/schemas/StartingPosition'
          - description: "<p>The starting position in the Kinesis data stream to read\
              \ data from. The possible values are <code>\"latest\"</code>, <code>\"\
              trim_horizon\"</code>, <code>\"earliest\"</code>, or a timestamp string\
              \ in UTC format in the pattern <code>yyyy-mm-ddTHH:MM:SSZ</code> (where\
              \ <code>Z</code> represents a UTC timezone offset with a +/-. For example:\
              \ \"2023-04-04T08:00:00-04:00\"). The default value is <code>\"latest\"\
              </code>.</p> <p>Note: Using a value that is a timestamp string in UTC\
              \ format for \"startingPosition\" is supported only for Glue version\
              \ 4.0 or later.</p>"
        MaxFetchTimeInMs:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: "The maximum time spent in the job executor to fetch a record\
              \ from the Kinesis data stream per shard, specified in milliseconds\
              \ (ms). The default value is <code>1000</code>."
        MaxFetchRecordsPerShard:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The maximum number of records to fetch per shard in the Kinesis
              data stream. The default value is <code>100000</code>.
        MaxRecordPerRead:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The maximum number of records to fetch from the Kinesis data
              stream in each getRecords operation. The default value is <code>10000</code>.
        AddIdleTimeBetweenReads:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Adds a time delay between two consecutive getRecords operations.
              The default value is <code>"False"</code>. This option is only configurable
              for Glue version 2.0 and above.
        IdleTimeBetweenReadsInMs:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: "The minimum time delay between two consecutive getRecords\
              \ operations, specified in ms. The default value is <code>1000</code>.\
              \ This option is only configurable for Glue version 2.0 and above."
        DescribeShardInterval:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The minimum time interval between two ListShards API calls
              for your script to consider resharding. The default value is <code>1s</code>.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: The maximum number of retries for Kinesis Data Streams API
              requests. The default value is <code>3</code>.
        RetryIntervalMs:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The cool-off time period (specified in ms) before retrying
              the Kinesis Data Streams API call. The default value is <code>1000</code>.
        MaxRetryIntervalMs:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The maximum cool-off time period (specified in ms) between
              two retries of a Kinesis Data Streams API call. The default value is
              <code>10000</code>.
        AvoidEmptyBatches:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Avoids creating an empty microbatch job by checking for unread
              data in the Kinesis data stream before the batch is started. The default
              value is <code>"False"</code>.
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon Resource Name (ARN) of the Kinesis data stream.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon Resource Name (ARN) of the role to assume using
              AWS Security Token Service (AWS STS). This role must have permissions
              for describe or read record operations for the Kinesis data stream.
              You must use this parameter when accessing a data stream in a different
              account. Used in conjunction with <code>"awsSTSSessionName"</code>.
        RoleSessionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: An identifier for the session assuming the role using AWS
              STS. You must use this parameter when accessing a data stream in a different
              account. Used in conjunction with <code>"awsSTSRoleARN"</code>.
        AddRecordTimestamp:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "When this option is set to 'true', the data output will\
              \ contain an additional column named \"__src_timestamp\" that indicates\
              \ the time when the corresponding record received by the stream. The\
              \ default value is 'false'. This option is supported in Glue version\
              \ 4.0 or later."
        EmitConsumerLagMetrics:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "When this option is set to 'true', for each batch, it will\
              \ emit the metrics for the duration between the oldest record received\
              \ by the stream and the time it arrives in Glue to CloudWatch. The metric's\
              \ name is \"glue.driver.streaming.maxConsumerLagInMs\". The default\
              \ value is 'false'. This option is supported in Glue version 4.0 or\
              \ later."
        StartingTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601DateTime'
          - description: "The timestamp of the record in the Kinesis data stream to\
              \ start reading data from. The possible values are a timestamp string\
              \ in UTC format of the pattern <code>yyyy-mm-ddTHH:MM:SSZ</code> (where\
              \ Z represents a UTC timezone offset with a +/-. For example: \"2023-04-04T08:00:00+08:00\"\
              ). "
      type: object
    CatalogKinesisSource:
      description: Specifies a Kinesis data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        WindowSize:
          allOf:
          - $ref: '#/components/schemas/BoxedPositiveInt'
          - description: The amount of time to spend processing each micro batch.
        DetectSchema:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether to automatically determine the schema from the incoming
              data.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        StreamingOptions:
          $ref: '#/components/schemas/CatalogKinesisSource_StreamingOptions'
        DataPreviewOptions:
          $ref: '#/components/schemas/CatalogKinesisSource_DataPreviewOptions'
      required:
      - Database
      - Name
      - Table
      type: object
    UpdateCatalogBehavior:
      enum:
      - UPDATE_IN_DATABASE
      - LOG
      type: string
    CatalogSchemaChangePolicy:
      description: A policy that specifies update behavior for the crawler.
      properties:
        EnableUpdateCatalog:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether to use the specified update behavior when the crawler
              finds a changed schema.
        UpdateBehavior:
          allOf:
          - $ref: '#/components/schemas/UpdateCatalogBehavior'
          - description: The update behavior when the crawler finds a changed schema.
      type: object
    CatalogSource:
      description: Specifies a data store in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    CatalogTablesList:
      items:
        $ref: '#/components/schemas/NameString'
      minItems: 1
      type: array
    ConnectionName:
      type: string
    EventQueueArn:
      type: string
    CatalogTarget:
      description: Specifies an Glue Data Catalog target.
      properties:
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the database to be synchronized.
        Tables:
          allOf:
          - $ref: '#/components/schemas/CatalogTablesList'
          - description: A list of the tables to be synchronized.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection for an Amazon S3-backed Data Catalog
              table to be a target of the crawl when using a <code>Catalog</code>
              connection type paired with a <code>NETWORK</code> Connection type.
        EventQueueArn:
          allOf:
          - $ref: '#/components/schemas/EventQueueArn'
          - description: "A valid Amazon SQS ARN. For example, <code>arn:aws:sqs:region:account:sqs</code>."
        DlqEventQueueArn:
          allOf:
          - $ref: '#/components/schemas/EventQueueArn'
          - description: "A valid Amazon dead-letter SQS ARN. For example, <code>arn:aws:sqs:region:account:deadLetterQueue</code>."
      required:
      - DatabaseName
      - Tables
      type: object
    CatalogTargetList:
      items:
        $ref: '#/components/schemas/CatalogTarget'
      type: array
    DataFormat:
      enum:
      - AVRO
      - JSON
      - PROTOBUF
      type: string
    SchemaDefinitionString:
      maxLength: 170000
      minLength: 1
      pattern: .*\S.*
      type: string
    IsVersionValid:
      type: boolean
    SchemaValidationError:
      maxLength: 5000
      minLength: 1
      type: string
    Classification:
      type: string
    GrokClassifier:
      description: A classifier that uses <code>grok</code> patterns.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        Classification:
          allOf:
          - $ref: '#/components/schemas/Classification'
          - description: "An identifier of the data format that the classifier matches,\
              \ such as Twitter, JSON, Omniture logs, and so on."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was registered.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was last updated.
        Version:
          allOf:
          - $ref: '#/components/schemas/VersionId'
          - description: The version of this classifier.
        GrokPattern:
          allOf:
          - $ref: '#/components/schemas/GrokPattern'
          - description: "The grok pattern applied to a data store by this classifier.\
              \ For more information, see built-in patterns in <a href=\"https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html\"\
              >Writing Custom Classifiers</a>."
        CustomPatterns:
          allOf:
          - $ref: '#/components/schemas/CustomPatterns'
          - description: "Optional custom grok patterns defined by this classifier.\
              \ For more information, see custom patterns in <a href=\"https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html\"\
              >Writing Custom Classifiers</a>."
      required:
      - Classification
      - GrokPattern
      - Name
      type: object
    XMLClassifier:
      description: A classifier for <code>XML</code> content.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        Classification:
          allOf:
          - $ref: '#/components/schemas/Classification'
          - description: An identifier of the data format that the classifier matches.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was registered.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was last updated.
        Version:
          allOf:
          - $ref: '#/components/schemas/VersionId'
          - description: The version of this classifier.
        RowTag:
          allOf:
          - $ref: '#/components/schemas/RowTag'
          - description: "The XML tag designating the element that contains each record\
              \ in an XML document being parsed. This can't identify a self-closing\
              \ element (closed by <code>/&gt;</code>). An empty row element that\
              \ contains only attributes can be parsed as long as it ends with a closing\
              \ tag (for example, <code>&lt;row item_a=\"A\" item_b=\"B\"&gt;&lt;/row&gt;</code>\
              \ is okay, but <code>&lt;row item_a=\"A\" item_b=\"B\" /&gt;</code>\
              \ is not)."
      required:
      - Classification
      - Name
      type: object
    JsonClassifier:
      description: A classifier for <code>JSON</code> content.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was registered.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was last updated.
        Version:
          allOf:
          - $ref: '#/components/schemas/VersionId'
          - description: The version of this classifier.
        JsonPath:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "A <code>JsonPath</code> string defining the JSON data for\
              \ the classifier to classify. Glue supports a subset of JsonPath, as\
              \ described in <a href=\"https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json\"\
              >Writing JsonPath Custom Classifiers</a>."
      required:
      - JsonPath
      - Name
      type: object
    CsvClassifier:
      description: A classifier for custom <code>CSV</code> content.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was registered.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this classifier was last updated.
        Version:
          allOf:
          - $ref: '#/components/schemas/VersionId'
          - description: The version of this classifier.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/CsvColumnDelimiter'
          - description: A custom symbol to denote what separates each column entry
              in the row.
        QuoteSymbol:
          allOf:
          - $ref: '#/components/schemas/CsvQuoteSymbol'
          - description: A custom symbol to denote what combines content into a single
              column value. It must be different from the column delimiter.
        ContainsHeader:
          allOf:
          - $ref: '#/components/schemas/CsvHeaderOption'
          - description: Indicates whether the CSV file contains a header.
        Header:
          allOf:
          - $ref: '#/components/schemas/CsvHeader'
          - description: A list of strings representing column names.
        DisableValueTrimming:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies not to trim values before identifying the type
              of column values. The default value is <code>true</code>.
        AllowSingleColumn:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Enables the processing of files that contain only one column.
        CustomDatatypeConfigured:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Enables the custom datatype to be configured.
        CustomDatatypes:
          allOf:
          - $ref: '#/components/schemas/CustomDatatypes'
          - description: "A list of custom datatypes including \"BINARY\", \"BOOLEAN\"\
              , \"DATE\", \"DECIMAL\", \"DOUBLE\", \"FLOAT\", \"INT\", \"LONG\", \"\
              SHORT\", \"STRING\", \"TIMESTAMP\"."
      required:
      - Name
      type: object
    Classifier:
      description: "<p>Classifiers are triggered during a crawl task. A classifier\
        \ checks whether a given file is in a format it can handle. If it is, the\
        \ classifier creates a schema in the form of a <code>StructType</code> object\
        \ that matches that data format.</p> <p>You can use the standard classifiers\
        \ that Glue provides, or you can write your own classifiers to best categorize\
        \ your data sources and specify the appropriate schemas to use for them. A\
        \ classifier can be a <code>grok</code> classifier, an <code>XML</code> classifier,\
        \ a <code>JSON</code> classifier, or a custom <code>CSV</code> classifier,\
        \ as specified in one of the fields in the <code>Classifier</code> object.</p>"
      properties:
        GrokClassifier:
          $ref: '#/components/schemas/Classifier_GrokClassifier'
        XMLClassifier:
          $ref: '#/components/schemas/Classifier_XMLClassifier'
        JsonClassifier:
          $ref: '#/components/schemas/Classifier_JsonClassifier'
        CsvClassifier:
          $ref: '#/components/schemas/Classifier_CsvClassifier'
      type: object
    ClassifierList:
      items:
        $ref: '#/components/schemas/Classifier'
      type: array
    ClassifierNameList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    CloudWatchEncryptionMode:
      enum:
      - DISABLED
      - SSE-KMS
      type: string
    KmsKeyArn:
      pattern: arn:aws:kms:.*
      type: string
    CloudWatchEncryption:
      description: Specifies how Amazon CloudWatch data should be encrypted.
      properties:
        CloudWatchEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/CloudWatchEncryptionMode'
          - description: The encryption mode to use for CloudWatch data.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the KMS key to be used
              to encrypt the data.
      type: object
    CodeGenArgName:
      type: string
    CodeGenArgValue:
      type: string
    JDBCConnectorSource:
      description: Specifies a connector to a JDBC data source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the connection that is associated with the connector.
        ConnectorName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of a connector that assists with accessing the data
              store in Glue Studio.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The type of connection, such as marketplace.jdbc or custom.jdbc,\
              \ designating a connection to a JDBC data store."
        AdditionalOptions:
          $ref: '#/components/schemas/JDBCConnectorSource_AdditionalOptions'
        ConnectionTable:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringPropertyWithQuote'
          - description: The name of the table in the data source.
        Query:
          allOf:
          - $ref: '#/components/schemas/SqlQuery'
          - description: "The table or SQL query to get the data from. You can specify\
              \ either <code>ConnectionTable</code> or <code>query</code>, but not\
              \ both."
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the custom JDBC source.
      required:
      - ConnectionName
      - ConnectionType
      - ConnectorName
      - Name
      type: object
    SparkConnectorSource:
      description: Specifies a connector to an Apache Spark data source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the connection that is associated with the connector.
        ConnectorName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of a connector that assists with accessing the data
              store in Glue Studio.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The type of connection, such as marketplace.spark or custom.spark,\
              \ designating a connection to an Apache Spark data store."
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Additional connection options for the connector.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies data schema for the custom spark source.
      required:
      - ConnectionName
      - ConnectionType
      - ConnectorName
      - Name
      type: object
    RedshiftSource:
      description: Specifies an Amazon Redshift data store.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Amazon Redshift data store.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database table to read from.
        RedshiftTmpDir:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon S3 path where temporary data can be staged when
              copying out of the database.
        TmpDirIAMRole:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The IAM role with permissions.
      required:
      - Database
      - Name
      - Table
      type: object
    S3CatalogSource:
      description: Specifies an Amazon S3 data store in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database table to read from.
        PartitionPredicate:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Partitions satisfying this predicate are deleted. Files within
              the retention period in these partitions are not deleted. Set to <code>""</code>
              – empty by default.
        AdditionalOptions:
          $ref: '#/components/schemas/S3CatalogSource_AdditionalOptions'
      required:
      - Database
      - Name
      - Table
      type: object
    S3CsvSource:
      description: Specifies a command-separated value (CSV) data store stored in
        Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        Paths:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A list of the Amazon S3 paths to read from.
        CompressionType:
          allOf:
          - $ref: '#/components/schemas/CompressionType'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: "A string containing a JSON list of Unix-style glob patterns\
              \ to exclude. For example, \"[\\\"**.pdf\\\"]\" excludes all PDF files. "
        GroupSize:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The target group size in bytes. The default is computed\
              \ based on the input data size and the size of your cluster. When there\
              \ are fewer than 50,000 input files, <code>\"groupFiles\"</code> must\
              \ be set to <code>\"inPartition\"</code> for this to take effect."
        GroupFiles:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "Grouping files is turned on by default when the input contains\
              \ more than 50,000 files. To turn on grouping with fewer than 50,000\
              \ files, set this parameter to \"inPartition\". To disable grouping\
              \ when there are more than 50,000 files, set this parameter to <code>\"\
              none\"</code>."
        Recurse:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "If set to true, recursively reads files in all subdirectories\
              \ under the specified paths."
        MaxBand:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "This option controls the duration in milliseconds after\
              \ which the s3 listing is likely to be consistent. Files with modification\
              \ timestamps falling within the last maxBand milliseconds are tracked\
              \ specially when using JobBookmarks to account for Amazon S3 eventual\
              \ consistency. Most users don't need to set this option. The default\
              \ is 900000 milliseconds, or 15 minutes."
        MaxFilesInBand:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "This option specifies the maximum number of files to save\
              \ from the last maxBand seconds. If this number is exceeded, extra files\
              \ are skipped and only processed in the next job run."
        AdditionalOptions:
          $ref: '#/components/schemas/S3CsvSource_AdditionalOptions'
        Separator:
          allOf:
          - $ref: '#/components/schemas/Separator'
          - description: "Specifies the delimiter character. The default is a comma:\
              \ \",\", but any other character can be specified."
        Escaper:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringPropertyWithQuote'
          - description: "Specifies a character to use for escaping. This option is\
              \ used only when reading CSV files. The default value is <code>none</code>.\
              \ If enabled, the character which immediately follows is used as-is,\
              \ except for a small set of well-known escapes (<code>\\n</code>, <code>\\\
              r</code>, <code>\\t</code>, and <code>\\0</code>)."
        QuoteChar:
          allOf:
          - $ref: '#/components/schemas/QuoteChar'
          - description: "Specifies the character to use for quoting. The default\
              \ is a double quote: <code>'\"'</code>. Set this to <code>-1</code>\
              \ to turn off quoting entirely."
        Multiline:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "A Boolean value that specifies whether a single record can\
              \ span multiple lines. This can occur when a field contains a quoted\
              \ new-line character. You must set this option to True if any record\
              \ spans multiple lines. The default value is <code>False</code>, which\
              \ allows for more aggressive file-splitting during parsing."
        WithHeader:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: A Boolean value that specifies whether to treat the first
              line as a header. The default value is <code>False</code>.
        WriteHeader:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: 'A Boolean value that specifies whether to write the header
              to output. The default value is <code>True</code>. '
        SkipFirst:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: A Boolean value that specifies whether to skip the first
              data line. The default value is <code>False</code>.
        OptimizePerformance:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: A Boolean value that specifies whether to use the advanced
              SIMD CSV reader along with Apache Arrow based columnar memory formats.
              Only available in Glue version 3.0.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the S3 CSV source.
      required:
      - Name
      - Paths
      - QuoteChar
      - Separator
      type: object
    S3JsonSource:
      description: Specifies a JSON data store stored in Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        Paths:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A list of the Amazon S3 paths to read from.
        CompressionType:
          allOf:
          - $ref: '#/components/schemas/CompressionType'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: "A string containing a JSON list of Unix-style glob patterns\
              \ to exclude. For example, \"[\\\"**.pdf\\\"]\" excludes all PDF files. "
        GroupSize:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The target group size in bytes. The default is computed\
              \ based on the input data size and the size of your cluster. When there\
              \ are fewer than 50,000 input files, <code>\"groupFiles\"</code> must\
              \ be set to <code>\"inPartition\"</code> for this to take effect."
        GroupFiles:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "Grouping files is turned on by default when the input contains\
              \ more than 50,000 files. To turn on grouping with fewer than 50,000\
              \ files, set this parameter to \"inPartition\". To disable grouping\
              \ when there are more than 50,000 files, set this parameter to <code>\"\
              none\"</code>."
        Recurse:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "If set to true, recursively reads files in all subdirectories\
              \ under the specified paths."
        MaxBand:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "This option controls the duration in milliseconds after\
              \ which the s3 listing is likely to be consistent. Files with modification\
              \ timestamps falling within the last maxBand milliseconds are tracked\
              \ specially when using JobBookmarks to account for Amazon S3 eventual\
              \ consistency. Most users don't need to set this option. The default\
              \ is 900000 milliseconds, or 15 minutes."
        MaxFilesInBand:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "This option specifies the maximum number of files to save\
              \ from the last maxBand seconds. If this number is exceeded, extra files\
              \ are skipped and only processed in the next job run."
        AdditionalOptions:
          $ref: '#/components/schemas/S3CsvSource_AdditionalOptions'
        JsonPath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: A JsonPath string defining the JSON data.
        Multiline:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "A Boolean value that specifies whether a single record can\
              \ span multiple lines. This can occur when a field contains a quoted\
              \ new-line character. You must set this option to True if any record\
              \ spans multiple lines. The default value is <code>False</code>, which\
              \ allows for more aggressive file-splitting during parsing."
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the S3 JSON source.
      required:
      - Name
      - Paths
      type: object
    S3ParquetSource:
      description: Specifies an Apache Parquet data store stored in Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        Paths:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A list of the Amazon S3 paths to read from.
        CompressionType:
          allOf:
          - $ref: '#/components/schemas/ParquetCompressionType'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: "A string containing a JSON list of Unix-style glob patterns\
              \ to exclude. For example, \"[\\\"**.pdf\\\"]\" excludes all PDF files. "
        GroupSize:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The target group size in bytes. The default is computed\
              \ based on the input data size and the size of your cluster. When there\
              \ are fewer than 50,000 input files, <code>\"groupFiles\"</code> must\
              \ be set to <code>\"inPartition\"</code> for this to take effect."
        GroupFiles:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "Grouping files is turned on by default when the input contains\
              \ more than 50,000 files. To turn on grouping with fewer than 50,000\
              \ files, set this parameter to \"inPartition\". To disable grouping\
              \ when there are more than 50,000 files, set this parameter to <code>\"\
              none\"</code>."
        Recurse:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "If set to true, recursively reads files in all subdirectories\
              \ under the specified paths."
        MaxBand:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "This option controls the duration in milliseconds after\
              \ which the s3 listing is likely to be consistent. Files with modification\
              \ timestamps falling within the last maxBand milliseconds are tracked\
              \ specially when using JobBookmarks to account for Amazon S3 eventual\
              \ consistency. Most users don't need to set this option. The default\
              \ is 900000 milliseconds, or 15 minutes."
        MaxFilesInBand:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeInt'
          - description: "This option specifies the maximum number of files to save\
              \ from the last maxBand seconds. If this number is exceeded, extra files\
              \ are skipped and only processed in the next job run."
        AdditionalOptions:
          $ref: '#/components/schemas/S3CsvSource_AdditionalOptions'
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the S3 Parquet source.
      required:
      - Name
      - Paths
      type: object
    RelationalCatalogSource:
      description: Specifies a Relational database data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    DynamoDBCatalogSource:
      description: Specifies a DynamoDB data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    JDBCConnectorTarget:
      description: Specifies a data target that writes to Amazon S3 in Apache Parquet
        columnar storage.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the connection that is associated with the connector.
        ConnectionTable:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringPropertyWithQuote'
          - description: The name of the table in the data target.
        ConnectorName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of a connector that will be used.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The type of connection, such as marketplace.jdbc or custom.jdbc,\
              \ designating a connection to a JDBC data target."
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Additional connection options for the connector.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the JDBC target.
      required:
      - ConnectionName
      - ConnectionTable
      - ConnectionType
      - ConnectorName
      - Inputs
      - Name
      type: object
    SparkConnectorTarget:
      description: Specifies a target that uses an Apache Spark connector.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of a connection for an Apache Spark connector.
        ConnectorName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of an Apache Spark connector.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The type of connection, such as marketplace.spark or custom.spark,\
              \ designating a connection to an Apache Spark data store."
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Additional connection options for the connector.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the custom spark target.
      required:
      - ConnectionName
      - ConnectionType
      - ConnectorName
      - Inputs
      - Name
      type: object
    RedshiftTarget:
      description: Specifies a target that uses Amazon Redshift.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
        RedshiftTmpDir:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon S3 path where temporary data can be staged when
              copying out of the database.
        TmpDirIAMRole:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The IAM role with permissions.
        UpsertRedshiftOptions:
          $ref: '#/components/schemas/RedshiftTarget_UpsertRedshiftOptions'
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    S3CatalogTarget:
      description: Specifies a data target that writes to Amazon S3 using the Glue
        Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3CatalogTarget_SchemaChangePolicy'
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    S3GlueParquetTarget:
      description: Specifies a data target that writes to Amazon S3 in Apache Parquet
        columnar storage.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Path:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: A single Amazon S3 path to write to.
        Compression:
          allOf:
          - $ref: '#/components/schemas/ParquetCompressionType'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3GlueParquetTarget_SchemaChangePolicy'
      required:
      - Inputs
      - Name
      - Path
      type: object
    S3DirectTarget:
      description: Specifies a data target that writes to Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Path:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: A single Amazon S3 path to write to.
        Compression:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        Format:
          allOf:
          - $ref: '#/components/schemas/TargetFormat'
          - description: Specifies the data output format for the target.
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3GlueParquetTarget_SchemaChangePolicy'
      required:
      - Format
      - Inputs
      - Name
      - Path
      type: object
    SelectFields:
      description: Specifies a transform that chooses the data property keys that
        you want to keep.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Paths:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: A JSON path to a variable in the data structure.
      required:
      - Inputs
      - Name
      - Paths
      type: object
    DropFields:
      description: Specifies a transform that chooses the data property keys that
        you want to drop.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Paths:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: A JSON path to a variable in the data structure.
      required:
      - Inputs
      - Name
      - Paths
      type: object
    RenameField:
      description: Specifies a transform that renames a single data property key.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A JSON path to a variable in the data structure for the source
              data.
        TargetPath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A JSON path to a variable in the data structure for the target
              data.
      required:
      - Inputs
      - Name
      - SourcePath
      - TargetPath
      type: object
    Spigot:
      description: Specifies a transform that writes samples of the data to an Amazon
        S3 bucket.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Path:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: A path in Amazon S3 where the transform will write a subset
              of records from the dataset to a JSON file in an Amazon S3 bucket.
        Topk:
          allOf:
          - $ref: '#/components/schemas/Topk'
          - description: Specifies a number of records to write starting from the
              beginning of the dataset.
        Prob:
          allOf:
          - $ref: '#/components/schemas/Prob'
          - description: The probability (a decimal value with a maximum value of
              1) of picking any given record. A value of 1 indicates that each row
              read from the dataset should be included in the sample output.
      required:
      - Inputs
      - Name
      - Path
      type: object
    Join:
      description: "Specifies a transform that joins two datasets into one dataset\
        \ using a comparison phrase on the specified data property keys. You can use\
        \ inner, outer, left, right, left semi, and left anti joins."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/TwoInputs'
          - description: The data inputs identified by their node names.
        JoinType:
          allOf:
          - $ref: '#/components/schemas/JoinType'
          - description: Specifies the type of join to be performed on the datasets.
        Columns:
          allOf:
          - $ref: '#/components/schemas/JoinColumns'
          - description: A list of the two columns to be joined.
      required:
      - Columns
      - Inputs
      - JoinType
      - Name
      type: object
    SplitFields:
      description: "Specifies a transform that splits data property keys into two\
        \ <code>DynamicFrames</code>. The output is a collection of <code>DynamicFrames</code>:\
        \ one with selected data property keys, and one with the remaining data property\
        \ keys."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Paths:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: A JSON path to a variable in the data structure.
      required:
      - Inputs
      - Name
      - Paths
      type: object
    SelectFromCollection:
      description: 'Specifies a transform that chooses one <code>DynamicFrame</code>
        from a collection of <code>DynamicFrames</code>. The output is the selected
        <code>DynamicFrame</code> '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Index:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInt'
          - description: The index for the DynamicFrame to be selected.
      required:
      - Index
      - Inputs
      - Name
      type: object
    FillMissingValues:
      description: Specifies a transform that locates records in the dataset that
        have missing values and adds a new field with a value determined by imputation.
        The input data set is used to train the machine learning model that determines
        what the missing value should be.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        ImputedPath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: A JSON path to a variable in the data structure for the dataset
              that is imputed.
        FilledPath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: A JSON path to a variable in the data structure for the dataset
              that is filled.
      required:
      - ImputedPath
      - Inputs
      - Name
      type: object
    Filter:
      description: "Specifies a transform that splits a dataset into two, based on\
        \ a filter condition."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        LogicalOperator:
          allOf:
          - $ref: '#/components/schemas/FilterLogicalOperator'
          - description: The operator used to filter rows by comparing the key value
              to a specified value.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterExpressions'
          - description: Specifies a filter expression.
      required:
      - Filters
      - Inputs
      - LogicalOperator
      - Name
      type: object
    CustomCode:
      description: Specifies a transform that uses custom code you provide to perform
        the data transformation. The output is a collection of DynamicFrames.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/ManyInputs'
          - description: The data inputs identified by their node names.
        Code:
          allOf:
          - $ref: '#/components/schemas/ExtendedString'
          - description: The custom code that is used to perform the data transformation.
        ClassName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name defined for the custom code node class.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the custom code transform.
      required:
      - ClassName
      - Code
      - Inputs
      - Name
      type: object
    SparkSQL:
      description: Specifies a transform where you enter a SQL query using Spark SQL
        syntax to transform the data. The output is a single <code>DynamicFrame</code>.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/ManyInputs'
          - description: The data inputs identified by their node names. You can associate
              a table name with each input node to use in the SQL query. The name
              you choose must meet the Spark SQL naming restrictions.
        SqlQuery:
          allOf:
          - $ref: '#/components/schemas/SqlQuery'
          - description: A SQL query that must use Spark SQL syntax and return a single
              data set.
        SqlAliases:
          allOf:
          - $ref: '#/components/schemas/SqlAliases'
          - description: "<p>A list of aliases. An alias allows you to specify what\
              \ name to use in the SQL for a given input. For example, you have a\
              \ datasource named \"MyDataSource\". If you specify <code>From</code>\
              \ as MyDataSource, and <code>Alias</code> as SqlName, then in your SQL\
              \ you can do:</p> <p> <code>select * from SqlName</code> </p> <p>and\
              \ that gets data from MyDataSource.</p>"
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the SparkSQL transform.
      required:
      - Inputs
      - Name
      - SqlAliases
      - SqlQuery
      type: object
    DirectKinesisSource:
      description: Specifies a direct Amazon Kinesis data source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        WindowSize:
          allOf:
          - $ref: '#/components/schemas/BoxedPositiveInt'
          - description: The amount of time to spend processing each micro batch.
        DetectSchema:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether to automatically determine the schema from the incoming
              data.
        StreamingOptions:
          $ref: '#/components/schemas/CatalogKinesisSource_StreamingOptions'
        DataPreviewOptions:
          $ref: '#/components/schemas/CatalogKinesisSource_DataPreviewOptions'
      required:
      - Name
      type: object
    DirectKafkaSource:
      description: Specifies an Apache Kafka data store.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        StreamingOptions:
          $ref: '#/components/schemas/CatalogKafkaSource_StreamingOptions'
        WindowSize:
          allOf:
          - $ref: '#/components/schemas/BoxedPositiveInt'
          - description: The amount of time to spend processing each micro batch.
        DetectSchema:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether to automatically determine the schema from the incoming
              data.
        DataPreviewOptions:
          $ref: '#/components/schemas/CatalogKafkaSource_DataPreviewOptions'
      required:
      - Name
      type: object
    DropNullFields:
      description: "Specifies a transform that removes columns from the dataset if\
        \ all values in the column are 'null'. By default, Glue Studio will recognize\
        \ null objects, but some values such as empty strings, strings that are \"\
        null\", -1 integers or other placeholders such as zeros, are not automatically\
        \ recognized as nulls."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        NullCheckBoxList:
          $ref: '#/components/schemas/DropNullFields_NullCheckBoxList'
        NullTextList:
          allOf:
          - $ref: '#/components/schemas/NullValueFields'
          - description: <p>A structure that specifies a list of NullValueField structures
              that represent a custom null value such as zero or other value being
              used as a null placeholder unique to the dataset.</p> <p>The <code>DropNullFields</code>
              transform removes custom null values only if both the value of the null
              placeholder and the datatype match the data.</p>
      required:
      - Inputs
      - Name
      type: object
    Merge:
      description: 'Specifies a transform that merges a <code>DynamicFrame</code>
        with a staging <code>DynamicFrame</code> based on the specified primary keys
        to identify records. Duplicate records (records with the same primary keys)
        are not de-duplicated. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/TwoInputs'
          - description: The data inputs identified by their node names.
        Source:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          - description: The source <code>DynamicFrame</code> that will be merged
              with a staging <code>DynamicFrame</code>.
        PrimaryKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: The list of primary key fields to match records from the
              source and staging dynamic frames.
      required:
      - Inputs
      - Name
      - PrimaryKeys
      - Source
      type: object
    Union:
      description: Specifies a transform that combines the rows from two or more datasets
        into a single result.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/TwoInputs'
          - description: The node ID inputs to the transform.
        UnionType:
          allOf:
          - $ref: '#/components/schemas/UnionType'
          - description: <p>Indicates the type of Union transform. </p> <p>Specify
              <code>ALL</code> to join all rows from data sources to the resulting
              DynamicFrame. The resulting union does not remove duplicate rows.</p>
              <p>Specify <code>DISTINCT</code> to remove duplicate rows in the resulting
              DynamicFrame.</p>
      required:
      - Inputs
      - Name
      - UnionType
      type: object
    PIIDetection:
      description: "Specifies a transform that identifies, removes or masks PII data."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The node ID inputs to the transform.
        PiiType:
          allOf:
          - $ref: '#/components/schemas/PiiType'
          - description: 'Indicates the type of PIIDetection transform. '
        EntityTypesToDetect:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: "<p>Indicates the types of entities the PIIDetection transform\
              \ will identify as PII data. </p> <p> PII type entities include: PERSON_NAME,\
              \ DATE, USA_SNN, EMAIL, USA_ITIN, USA_PASSPORT_NUMBER, PHONE_NUMBER,\
              \ BANK_ACCOUNT, IP_ADDRESS, MAC_ADDRESS, USA_CPT_CODE, USA_HCPCS_CODE,\
              \ USA_NATIONAL_DRUG_CODE, USA_MEDICARE_BENEFICIARY_IDENTIFIER, USA_HEALTH_INSURANCE_CLAIM_NUMBER,CREDIT_CARD,USA_NATIONAL_PROVIDER_IDENTIFIER,USA_DEA_NUMBER,USA_DRIVING_LICENSE\
              \ </p>"
        OutputColumnName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: 'Indicates the output column name that will contain any entity
              type detected in that row. '
        SampleFraction:
          allOf:
          - $ref: '#/components/schemas/BoxedDoubleFraction'
          - description: 'Indicates the fraction of the data to sample when scanning
              for PII entities. '
        ThresholdFraction:
          allOf:
          - $ref: '#/components/schemas/BoxedDoubleFraction'
          - description: 'Indicates the fraction of the data that must be met in order
              for a column to be identified as PII data. '
        MaskValue:
          allOf:
          - $ref: '#/components/schemas/MaskValue'
          - description: 'Indicates the value that will replace the detected entity. '
      required:
      - EntityTypesToDetect
      - Inputs
      - Name
      - PiiType
      type: object
    DropDuplicates:
      description: 'Specifies a transform that removes rows of repeating data from
        a data set. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the transform node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The data inputs identified by their node names.
        Columns:
          allOf:
          - $ref: '#/components/schemas/LimitedPathList'
          - description: The name of the columns to be merged or removed if repeating.
      required:
      - Inputs
      - Name
      type: object
    GovernedCatalogTarget:
      description: Specifies a data target that writes to Amazon S3 using the Glue
        Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        SchemaChangePolicy:
          $ref: '#/components/schemas/GovernedCatalogTarget_SchemaChangePolicy'
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    GovernedCatalogSource:
      description: Specifies the data store in the governed Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data store.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database table to read from.
        PartitionPredicate:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Partitions satisfying this predicate are deleted. Files within
              the retention period in these partitions are not deleted. Set to <code>""</code>
              – empty by default.
        AdditionalOptions:
          $ref: '#/components/schemas/S3CatalogSource_AdditionalOptions'
      required:
      - Database
      - Name
      - Table
      type: object
    MicrosoftSQLServerCatalogSource:
      description: Specifies a Microsoft SQL server data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    MySQLCatalogSource:
      description: Specifies a MySQL data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    OracleSQLCatalogSource:
      description: Specifies an Oracle data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    PostgreSQLCatalogSource:
      description: Specifies a PostgresSQL data source in the Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
      required:
      - Database
      - Name
      - Table
      type: object
    MicrosoftSQLServerCatalogTarget:
      description: Specifies a target that uses Microsoft SQL.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    MySQLCatalogTarget:
      description: Specifies a target that uses MySQL.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    OracleSQLCatalogTarget:
      description: Specifies a target that uses Oracle SQL.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    PostgreSQLCatalogTarget:
      description: Specifies a target that uses Postgres SQL.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    DynamicTransform:
      description: Specifies the set of parameters needed to perform the dynamic transform.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the name of the dynamic transform.
        TransformName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the name of the dynamic transform as it appears
              in the Glue Studio visual editor.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: Specifies the inputs for the dynamic transform that are required.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/TransformConfigParameterList'
          - description: Specifies the parameters of the dynamic transform.
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the name of the function of the dynamic transform.
        Path:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the path of the dynamic transform source and config
              files.
        Version:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: This field is not used and will be deprecated in future release.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the dynamic transform.
      required:
      - FunctionName
      - Inputs
      - Name
      - Path
      - TransformName
      type: object
    EvaluateDataQuality:
      description: Specifies your data quality evaluation criteria.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data quality evaluation.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The inputs of your data quality evaluation.
        Ruleset:
          allOf:
          - $ref: '#/components/schemas/DQDLString'
          - description: The ruleset for your data quality evaluation.
        Output:
          allOf:
          - $ref: '#/components/schemas/DQTransformOutput'
          - description: The output of your data quality evaluation.
        PublishingOptions:
          $ref: '#/components/schemas/EvaluateDataQuality_PublishingOptions'
        StopJobOnFailureOptions:
          $ref: '#/components/schemas/EvaluateDataQuality_StopJobOnFailureOptions'
      required:
      - Inputs
      - Name
      - Ruleset
      type: object
    S3CatalogHudiSource:
      description: Specifies a Hudi data source that is registered in the Glue Data
        Catalog. The Hudi data source must be stored in Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Hudi data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
        AdditionalHudiOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the Hudi source.
      required:
      - Database
      - Name
      - Table
      type: object
    S3HudiSource:
      description: Specifies a Hudi data source stored in Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Hudi source.
        Paths:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A list of the Amazon S3 paths to read from.
        AdditionalHudiOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options.
        AdditionalOptions:
          $ref: '#/components/schemas/S3HudiSource_AdditionalOptions'
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the Hudi source.
      required:
      - Name
      - Paths
      type: object
    S3HudiCatalogTarget:
      description: Specifies a target that writes to a Hudi data source in the Glue
        Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options for the connector.
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3CatalogTarget_SchemaChangePolicy'
      required:
      - AdditionalOptions
      - Database
      - Inputs
      - Name
      - Table
      type: object
    S3HudiDirectTarget:
      description: Specifies a target that writes to a Hudi data source in Amazon
        S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        Path:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon S3 path of your Hudi data source to write to.
        Compression:
          allOf:
          - $ref: '#/components/schemas/HudiTargetCompressionType'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Format:
          allOf:
          - $ref: '#/components/schemas/TargetFormat'
          - description: Specifies the data output format for the target.
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options for the connector.
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3GlueParquetTarget_SchemaChangePolicy'
      required:
      - AdditionalOptions
      - Compression
      - Format
      - Inputs
      - Name
      - Path
      type: object
    DirectJDBCSource:
      description: Specifies the direct JDBC source connection.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the JDBC source connection.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The database of the JDBC source connection.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The table of the JDBC source connection.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The connection name of the JDBC source.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/JDBCConnectionType'
          - description: The connection type of the JDBC source.
        RedshiftTmpDir:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The temp directory of the JDBC Redshift source.
      required:
      - ConnectionName
      - ConnectionType
      - Database
      - Name
      - Table
      type: object
    S3CatalogDeltaSource:
      description: Specifies a Delta Lake data source that is registered in the Glue
        Data Catalog. The data source must be stored in Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Delta Lake data source.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to read from.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to read from.
        AdditionalDeltaOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options.
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the Delta Lake source.
      required:
      - Database
      - Name
      - Table
      type: object
    S3DeltaSource:
      description: Specifies a Delta Lake data source stored in Amazon S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Delta Lake source.
        Paths:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: A list of the Amazon S3 paths to read from.
        AdditionalDeltaOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options.
        AdditionalOptions:
          $ref: '#/components/schemas/S3HudiSource_AdditionalOptions'
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies the data schema for the Delta Lake source.
      required:
      - Name
      - Paths
      type: object
    S3DeltaCatalogTarget:
      description: Specifies a target that writes to a Delta Lake data source in the
        Glue Data Catalog.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the table in the database to write to.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the database to write to.
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options for the connector.
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3CatalogTarget_SchemaChangePolicy'
      required:
      - Database
      - Inputs
      - Name
      - Table
      type: object
    S3DeltaDirectTarget:
      description: Specifies a target that writes to a Delta Lake data source in Amazon
        S3.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data target.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: Specifies native partitioning using a sequence of keys.
        Path:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon S3 path of your Delta Lake data source to write
              to.
        Compression:
          allOf:
          - $ref: '#/components/schemas/DeltaTargetCompressionType'
          - description: Specifies how the data is compressed. This is generally not
              necessary if the data has a standard file extension. Possible values
              are <code>"gzip"</code> and <code>"bzip"</code>).
        Format:
          allOf:
          - $ref: '#/components/schemas/TargetFormat'
          - description: Specifies the data output format for the target.
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: Specifies additional connection options for the connector.
        SchemaChangePolicy:
          $ref: '#/components/schemas/S3GlueParquetTarget_SchemaChangePolicy'
      required:
      - Compression
      - Format
      - Inputs
      - Name
      - Path
      type: object
    EvaluateDataQualityMultiFrame:
      description: Specifies your data quality evaluation criteria.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the data quality evaluation.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/ManyInputs'
          - description: The inputs of your data quality evaluation. The first input
              in this list is the primary data source.
        AdditionalDataSources:
          allOf:
          - $ref: '#/components/schemas/DQDLAliases'
          - description: The aliases of all data sources except primary.
        Ruleset:
          allOf:
          - $ref: '#/components/schemas/DQDLString'
          - description: The ruleset for your data quality evaluation.
        PublishingOptions:
          $ref: '#/components/schemas/EvaluateDataQuality_PublishingOptions'
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/DQAdditionalOptions'
          - description: Options to configure runtime behavior of the transform.
        StopJobOnFailureOptions:
          $ref: '#/components/schemas/EvaluateDataQuality_StopJobOnFailureOptions'
      required:
      - Inputs
      - Name
      - Ruleset
      type: object
    Recipe:
      description: A Glue Studio node that uses a Glue DataBrew recipe in Glue jobs.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Glue Studio node.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: "The nodes that are inputs to the recipe node, identified\
              \ by id."
        RecipeReference:
          $ref: '#/components/schemas/Recipe_RecipeReference'
      required:
      - Inputs
      - Name
      - RecipeReference
      type: object
    SnowflakeSource:
      description: Specifies a Snowflake data source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Snowflake data source.
        Data:
          $ref: '#/components/schemas/SnowflakeSource_Data'
        OutputSchemas:
          allOf:
          - $ref: '#/components/schemas/GlueSchemas'
          - description: Specifies user-defined schemas for your output data.
      required:
      - Data
      - Name
      type: object
    SnowflakeTarget:
      description: Specifies a Snowflake target.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          - description: The name of the Snowflake target.
        Data:
          $ref: '#/components/schemas/SnowflakeTarget_Data'
        Inputs:
          allOf:
          - $ref: '#/components/schemas/OneInput'
          - description: The nodes that are inputs to the data target.
      required:
      - Data
      - Name
      type: object
    CodeGenConfigurationNode:
      description: ' <code>CodeGenConfigurationNode</code> enumerates all valid Node
        types. One and only one of its member variables can be populated.'
      properties:
        AthenaConnectorSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_AthenaConnectorSource'
        JDBCConnectorSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_JDBCConnectorSource'
        SparkConnectorSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SparkConnectorSource'
        CatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CatalogSource'
        RedshiftSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_RedshiftSource'
        S3CatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3CatalogSource'
        S3CsvSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3CsvSource'
        S3JsonSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3JsonSource'
        S3ParquetSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3ParquetSource'
        RelationalCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_RelationalCatalogSource'
        DynamoDBCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DynamoDBCatalogSource'
        JDBCConnectorTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_JDBCConnectorTarget'
        SparkConnectorTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SparkConnectorTarget'
        CatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CatalogTarget'
        RedshiftTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_RedshiftTarget'
        S3CatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3CatalogTarget'
        S3GlueParquetTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3GlueParquetTarget'
        S3DirectTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3DirectTarget'
        ApplyMapping:
          $ref: '#/components/schemas/CodeGenConfigurationNode_ApplyMapping'
        SelectFields:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SelectFields'
        DropFields:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DropFields'
        RenameField:
          $ref: '#/components/schemas/CodeGenConfigurationNode_RenameField'
        Spigot:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Spigot'
        Join:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Join'
        SplitFields:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SplitFields'
        SelectFromCollection:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SelectFromCollection'
        FillMissingValues:
          $ref: '#/components/schemas/CodeGenConfigurationNode_FillMissingValues'
        Filter:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Filter'
        CustomCode:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CustomCode'
        SparkSQL:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SparkSQL'
        DirectKinesisSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DirectKinesisSource'
        DirectKafkaSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DirectKafkaSource'
        CatalogKinesisSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CatalogKinesisSource'
        CatalogKafkaSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CatalogKafkaSource'
        DropNullFields:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DropNullFields'
        Merge:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Merge'
        Union:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Union'
        PIIDetection:
          $ref: '#/components/schemas/CodeGenConfigurationNode_PIIDetection'
        Aggregate:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Aggregate'
        DropDuplicates:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DropDuplicates'
        GovernedCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_GovernedCatalogTarget'
        GovernedCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_GovernedCatalogSource'
        MicrosoftSQLServerCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_MicrosoftSQLServerCatalogSource'
        MySQLCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_MySQLCatalogSource'
        OracleSQLCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_OracleSQLCatalogSource'
        PostgreSQLCatalogSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_PostgreSQLCatalogSource'
        MicrosoftSQLServerCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_MicrosoftSQLServerCatalogTarget'
        MySQLCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_MySQLCatalogTarget'
        OracleSQLCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_OracleSQLCatalogTarget'
        PostgreSQLCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_PostgreSQLCatalogTarget'
        DynamicTransform:
          $ref: '#/components/schemas/CodeGenConfigurationNode_DynamicTransform'
        EvaluateDataQuality:
          $ref: '#/components/schemas/CodeGenConfigurationNode_EvaluateDataQuality'
        S3CatalogHudiSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3CatalogHudiSource'
        CatalogHudiSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CatalogHudiSource'
        S3HudiSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3HudiSource'
        S3HudiCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3HudiCatalogTarget'
        S3HudiDirectTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3HudiDirectTarget'
        DirectJDBCSource:
          $ref: '#/components/schemas/DirectJDBCSource'
        S3CatalogDeltaSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3CatalogDeltaSource'
        CatalogDeltaSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_CatalogDeltaSource'
        S3DeltaSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3DeltaSource'
        S3DeltaCatalogTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3DeltaCatalogTarget'
        S3DeltaDirectTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_S3DeltaDirectTarget'
        AmazonRedshiftSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_AmazonRedshiftSource'
        AmazonRedshiftTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_AmazonRedshiftTarget'
        EvaluateDataQualityMultiFrame:
          $ref: '#/components/schemas/CodeGenConfigurationNode_EvaluateDataQualityMultiFrame'
        Recipe:
          $ref: '#/components/schemas/CodeGenConfigurationNode_Recipe'
        SnowflakeSource:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SnowflakeSource'
        SnowflakeTarget:
          $ref: '#/components/schemas/CodeGenConfigurationNode_SnowflakeTarget'
      type: object
    CodeGenConfigurationNodes:
      additionalProperties:
        $ref: '#/components/schemas/CodeGenConfigurationNode'
      type: object
    CodeGenIdentifier:
      maxLength: 255
      minLength: 1
      pattern: "[A-Za-z_][A-Za-z0-9_]*"
      type: string
    CodeGenEdge:
      description: Represents a directional edge in a directed acyclic graph (DAG).
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/CodeGenIdentifier'
          - description: The ID of the node at which the edge starts.
        Target:
          allOf:
          - $ref: '#/components/schemas/CodeGenIdentifier'
          - description: The ID of the node at which the edge ends.
        TargetParameter:
          allOf:
          - $ref: '#/components/schemas/CodeGenArgName'
          - description: The target of the edge.
      required:
      - Source
      - Target
      type: object
    CodeGenNodeType:
      type: string
    CodeGenNodeArgs:
      items:
        $ref: '#/components/schemas/CodeGenNodeArg'
      maxItems: 50
      minItems: 0
      type: array
    Integer:
      type: integer
    CodeGenNode:
      description: Represents a node in a directed acyclic graph (DAG)
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/CodeGenIdentifier'
          - description: A node identifier that is unique within the node's graph.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/CodeGenNodeType'
          - description: The type of node that this is.
        Args:
          allOf:
          - $ref: '#/components/schemas/CodeGenNodeArgs'
          - description: "Properties of the node, in the form of name-value pairs."
        LineNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The line number of the node.
      required:
      - Args
      - Id
      - NodeType
      type: object
    CodeGenNodeArg:
      description: An argument or property of a node.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CodeGenArgName'
          - description: The name of the argument or property.
        Value:
          allOf:
          - $ref: '#/components/schemas/CodeGenArgValue'
          - description: The value of the argument or property.
        Param:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: True if the value is used as a parameter.
      required:
      - Name
      - Value
      type: object
    ColumnTypeString:
      maxLength: 131072
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    CommentString:
      maxLength: 255
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    ParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/ParametersMapValue'
      type: object
    Column:
      description: A column in a <code>Table</code>.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>Column</code>.
        Type:
          allOf:
          - $ref: '#/components/schemas/ColumnTypeString'
          - description: The data type of the <code>Column</code>.
        Comment:
          allOf:
          - $ref: '#/components/schemas/CommentString'
          - description: A free-form text comment.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define properties associated with the
              column.
      required:
      - Name
      type: object
    ColumnError:
      description: Encapsulates a column name that failed and the reason for failure.
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the column that failed.
        Error:
          $ref: '#/components/schemas/ColumnError_Error'
      type: object
    ColumnErrors:
      items:
        $ref: '#/components/schemas/ColumnError'
      type: array
    GenericBoundedDouble:
      format: double
      maximum: 1
      minimum: 0
      type: number
    ColumnImportance:
      description: "<p>A structure containing the column name and column importance\
        \ score for a column. </p> <p>Column importance helps you understand how columns\
        \ contribute to your model, by identifying which columns in your records are\
        \ more important than others.</p>"
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of a column.
        Importance:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "The column importance score for the column, as a decimal."
      type: object
    ColumnImportanceList:
      items:
        $ref: '#/components/schemas/ColumnImportance'
      maxItems: 100
      minItems: 0
      type: array
    ColumnList:
      items:
        $ref: '#/components/schemas/Column'
      type: array
    PredicateString:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    ColumnRowFilter:
      description: A filter that uses both column-level and row-level filtering.
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A string containing the name of the column.
        RowFilterExpression:
          allOf:
          - $ref: '#/components/schemas/PredicateString'
          - description: A string containing the row-level filter expression.
      type: object
    ColumnRowFilterList:
      items:
        $ref: '#/components/schemas/ColumnRowFilter'
      type: array
    TypeString:
      maxLength: 20000
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    ColumnStatisticsData:
      description: Contains the individual types of column statistics data. Only one
        data object should be set and indicated by the <code>Type</code> attribute.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ColumnStatisticsType'
          - description: The type of column statistics data.
        BooleanColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_BooleanColumnStatisticsData'
        DateColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_DateColumnStatisticsData'
        DecimalColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_DecimalColumnStatisticsData'
        DoubleColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_DoubleColumnStatisticsData'
        LongColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_LongColumnStatisticsData'
        StringColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_StringColumnStatisticsData'
        BinaryColumnStatisticsData:
          $ref: '#/components/schemas/ColumnStatisticsData_BinaryColumnStatisticsData'
      required:
      - Type
      type: object
    ColumnStatistics:
      description: Represents the generated column-level statistics for a table or
        partition.
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of column which statistics belong to.
        ColumnType:
          allOf:
          - $ref: '#/components/schemas/TypeString'
          - description: The data type of the column.
        AnalyzedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when column statistics were generated.
        StatisticsData:
          $ref: '#/components/schemas/ColumnStatistics_StatisticsData'
      required:
      - AnalyzedTime
      - ColumnName
      - ColumnType
      - StatisticsData
      type: object
    ColumnStatisticsType:
      enum:
      - BOOLEAN
      - DATE
      - DECIMAL
      - DOUBLE
      - LONG
      - STRING
      - BINARY
      type: string
    DateColumnStatisticsData:
      description: Defines column statistics supported for timestamp data columns.
      properties:
        MinimumValue:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The lowest value in the column.
        MaximumValue:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The highest value in the column.
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
        NumberOfDistinctValues:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of distinct values in a column.
      required:
      - NumberOfDistinctValues
      - NumberOfNulls
      type: object
    DecimalColumnStatisticsData:
      description: Defines column statistics supported for fixed-point number data
        columns.
      properties:
        MinimumValue:
          $ref: '#/components/schemas/DecimalColumnStatisticsData_MinimumValue'
        MaximumValue:
          $ref: '#/components/schemas/DecimalColumnStatisticsData_MaximumValue'
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
        NumberOfDistinctValues:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of distinct values in a column.
      required:
      - NumberOfDistinctValues
      - NumberOfNulls
      type: object
    DoubleColumnStatisticsData:
      description: Defines column statistics supported for floating-point number data
        columns.
      properties:
        MinimumValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The lowest value in the column.
        MaximumValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The highest value in the column.
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
        NumberOfDistinctValues:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of distinct values in a column.
      required:
      - NumberOfDistinctValues
      - NumberOfNulls
      type: object
    LongColumnStatisticsData:
      description: Defines column statistics supported for integer data columns.
      properties:
        MinimumValue:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The lowest value in the column.
        MaximumValue:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The highest value in the column.
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
        NumberOfDistinctValues:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of distinct values in a column.
      required:
      - NumberOfDistinctValues
      - NumberOfNulls
      type: object
    StringColumnStatisticsData:
      description: Defines column statistics supported for character sequence data
        values.
      properties:
        MaximumLength:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The size of the longest string in the column.
        AverageLength:
          allOf:
          - $ref: '#/components/schemas/NonNegativeDouble'
          - description: The average string length in the column.
        NumberOfNulls:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of null values in the column.
        NumberOfDistinctValues:
          allOf:
          - $ref: '#/components/schemas/NonNegativeLong'
          - description: The number of distinct values in a column.
      required:
      - AverageLength
      - MaximumLength
      - NumberOfDistinctValues
      - NumberOfNulls
      type: object
    ColumnStatisticsError:
      description: Encapsulates a <code>ColumnStatistics</code> object that failed
        and the reason for failure.
      properties:
        ColumnStatistics:
          $ref: '#/components/schemas/ColumnStatisticsError_ColumnStatistics'
        Error:
          $ref: '#/components/schemas/ColumnError_Error'
      type: object
    ColumnStatisticsErrors:
      items:
        $ref: '#/components/schemas/ColumnStatisticsError'
      type: array
    ColumnStatisticsList:
      items:
        $ref: '#/components/schemas/ColumnStatistics'
      type: array
    ColumnValuesString:
      type: string
    ColumnValueStringList:
      items:
        $ref: '#/components/schemas/ColumnValuesString'
      type: array
    CommitIdString:
      maxLength: 40
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    Comparator:
      enum:
      - EQUALS
      - GREATER_THAN
      - LESS_THAN
      - GREATER_THAN_EQUALS
      - LESS_THAN_EQUALS
      type: string
    Compatibility:
      enum:
      - NONE
      - DISABLED
      - BACKWARD
      - BACKWARD_ALL
      - FORWARD
      - FORWARD_ALL
      - FULL
      - FULL_ALL
      type: string
    CompressionType:
      enum:
      - gzip
      - bzip2
      type: string
    LogicalOperator:
      enum:
      - EQUALS
      type: string
    JobRunState:
      enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      - SUCCEEDED
      - FAILED
      - TIMEOUT
      - ERROR
      - WAITING
      type: string
    CrawlState:
      enum:
      - RUNNING
      - CANCELLING
      - CANCELLED
      - SUCCEEDED
      - FAILED
      - ERROR
      type: string
    Condition:
      description: Defines a condition under which a trigger fires.
      properties:
        LogicalOperator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          - description: A logical operator.
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the job whose <code>JobRuns</code> this condition\
              \ applies to, and on which this trigger waits."
        State:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          - description: "The condition state. Currently, the only job states that\
              \ a trigger can listen for are <code>SUCCEEDED</code>, <code>STOPPED</code>,\
              \ <code>FAILED</code>, and <code>TIMEOUT</code>. The only crawler states\
              \ that a trigger can listen for are <code>SUCCEEDED</code>, <code>FAILED</code>,\
              \ and <code>CANCELLED</code>."
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler to which this condition applies.
        CrawlState:
          allOf:
          - $ref: '#/components/schemas/CrawlState'
          - description: The state of the crawler to which this condition applies.
      type: object
    ConditionList:
      items:
        $ref: '#/components/schemas/Condition'
      type: array
    RecordsCount:
      type: integer
    ConfusionMatrix:
      description: "<p>The confusion matrix shows you what your transform is predicting\
        \ accurately and what types of errors it is making.</p> <p>For more information,\
        \ see <a href=\"https://en.wikipedia.org/wiki/Confusion_matrix\">Confusion\
        \ matrix</a> in Wikipedia.</p>"
      properties:
        NumTruePositives:
          allOf:
          - $ref: '#/components/schemas/RecordsCount'
          - description: "The number of matches in the data that the transform correctly\
              \ found, in the confusion matrix for your transform."
        NumFalsePositives:
          allOf:
          - $ref: '#/components/schemas/RecordsCount'
          - description: "The number of nonmatches in the data that the transform\
              \ incorrectly classified as a match, in the confusion matrix for your\
              \ transform."
        NumTrueNegatives:
          allOf:
          - $ref: '#/components/schemas/RecordsCount'
          - description: "The number of nonmatches in the data that the transform\
              \ correctly rejected, in the confusion matrix for your transform."
        NumFalseNegatives:
          allOf:
          - $ref: '#/components/schemas/RecordsCount'
          - description: "The number of matches in the data that the transform didn't\
              \ find, in the confusion matrix for your transform."
      type: object
    DescriptionString:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    ConnectionType:
      enum:
      - JDBC
      - SFTP
      - MONGODB
      - KAFKA
      - NETWORK
      - MARKETPLACE
      - CUSTOM
      type: string
    MatchCriteria:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 10
      minItems: 0
      type: array
    ConnectionProperties:
      additionalProperties:
        $ref: '#/components/schemas/ValueString'
      maxProperties: 100
      minProperties: 0
      type: object
    PhysicalConnectionRequirements:
      description: Specifies the physical requirements for a connection.
      properties:
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The subnet ID used by the connection.
        SecurityGroupIdList:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          - description: The security group ID list used by the connection.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The connection's Availability Zone. This field is redundant\
              \ because the specified subnet implies the Availability Zone to be used.\
              \ Currently the field must be populated, but it will be deprecated in\
              \ the future."
      type: object
    Connection:
      description: Defines a connection to a data source.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The description of the connection.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/ConnectionType'
          - description: "The type of the connection. Currently, SFTP is not supported."
        MatchCriteria:
          allOf:
          - $ref: '#/components/schemas/MatchCriteria'
          - description: A list of criteria that can be used in selecting this connection.
        ConnectionProperties:
          allOf:
          - $ref: '#/components/schemas/ConnectionProperties'
          - description: "<p>These key-value pairs define parameters for the connection:</p>\
              \ <ul> <li> <p> <code>HOST</code> - The host URI: either the fully qualified\
              \ domain name (FQDN) or the IPv4 address of the database host.</p> </li>\
              \ <li> <p> <code>PORT</code> - The port number, between 1024 and 65535,\
              \ of the port on which the database host is listening for database connections.</p>\
              \ </li> <li> <p> <code>USER_NAME</code> - The name under which to log\
              \ in to the database. The value string for <code>USER_NAME</code> is\
              \ \"<code>USERNAME</code>\".</p> </li> <li> <p> <code>PASSWORD</code>\
              \ - A password, if one is used, for the user name.</p> </li> <li> <p>\
              \ <code>ENCRYPTED_PASSWORD</code> - When you enable connection password\
              \ protection by setting <code>ConnectionPasswordEncryption</code> in\
              \ the Data Catalog encryption settings, this field stores the encrypted\
              \ password.</p> </li> <li> <p> <code>JDBC_DRIVER_JAR_URI</code> - The\
              \ Amazon Simple Storage Service (Amazon S3) path of the JAR file that\
              \ contains the JDBC driver to use.</p> </li> <li> <p> <code>JDBC_DRIVER_CLASS_NAME</code>\
              \ - The class name of the JDBC driver to use.</p> </li> <li> <p> <code>JDBC_ENGINE</code>\
              \ - The name of the JDBC engine to use.</p> </li> <li> <p> <code>JDBC_ENGINE_VERSION</code>\
              \ - The version of the JDBC engine to use.</p> </li> <li> <p> <code>CONFIG_FILES</code>\
              \ - (Reserved for future use.)</p> </li> <li> <p> <code>INSTANCE_ID</code>\
              \ - The instance ID to use.</p> </li> <li> <p> <code>JDBC_CONNECTION_URL</code>\
              \ - The URL for connecting to a JDBC data source.</p> </li> <li> <p>\
              \ <code>JDBC_ENFORCE_SSL</code> - A Boolean string (true, false) specifying\
              \ whether Secure Sockets Layer (SSL) with hostname matching is enforced\
              \ for the JDBC connection on the client. The default is false.</p> </li>\
              \ <li> <p> <code>CUSTOM_JDBC_CERT</code> - An Amazon S3 location specifying\
              \ the customer's root certificate. Glue uses this root certificate to\
              \ validate the customer’s certificate when connecting to the customer\
              \ database. Glue only handles X.509 certificates. The certificate provided\
              \ must be DER-encoded and supplied in Base64 encoding PEM format.</p>\
              \ </li> <li> <p> <code>SKIP_CUSTOM_JDBC_CERT_VALIDATION</code> - By\
              \ default, this is <code>false</code>. Glue validates the Signature\
              \ algorithm and Subject Public Key Algorithm for the customer certificate.\
              \ The only permitted algorithms for the Signature algorithm are SHA256withRSA,\
              \ SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm,\
              \ the key length must be at least 2048. You can set the value of this\
              \ property to <code>true</code> to skip Glue’s validation of the customer\
              \ certificate.</p> </li> <li> <p> <code>CUSTOM_JDBC_CERT_STRING</code>\
              \ - A custom JDBC certificate string which is used for domain match\
              \ or distinguished name match to prevent a man-in-the-middle attack.\
              \ In Oracle database, this is used as the <code>SSL_SERVER_CERT_DN</code>;\
              \ in Microsoft SQL Server, this is used as the <code>hostNameInCertificate</code>.</p>\
              \ </li> <li> <p> <code>CONNECTION_URL</code> - The URL for connecting\
              \ to a general (non-JDBC) data source.</p> </li> <li> <p> <code>SECRET_ID</code>\
              \ - The secret ID used for the secret manager of credentials.</p> </li>\
              \ <li> <p> <code>CONNECTOR_URL</code> - The connector URL for a MARKETPLACE\
              \ or CUSTOM connection.</p> </li> <li> <p> <code>CONNECTOR_TYPE</code>\
              \ - The connector type for a MARKETPLACE or CUSTOM connection.</p> </li>\
              \ <li> <p> <code>CONNECTOR_CLASS_NAME</code> - The connector class name\
              \ for a MARKETPLACE or CUSTOM connection.</p> </li> <li> <p> <code>KAFKA_BOOTSTRAP_SERVERS</code>\
              \ - A comma-separated list of host and port pairs that are the addresses\
              \ of the Apache Kafka brokers in a Kafka cluster to which a Kafka client\
              \ will connect to and bootstrap itself.</p> </li> <li> <p> <code>KAFKA_SSL_ENABLED</code>\
              \ - Whether to enable or disable SSL on an Apache Kafka connection.\
              \ Default value is \"true\".</p> </li> <li> <p> <code>KAFKA_CUSTOM_CERT</code>\
              \ - The Amazon S3 URL for the private CA cert file (.pem format). The\
              \ default is an empty string.</p> </li> <li> <p> <code>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</code>\
              \ - Whether to skip the validation of the CA cert file or not. Glue\
              \ validates for three algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA.\
              \ Default value is \"false\".</p> </li> <li> <p> <code>KAFKA_CLIENT_KEYSTORE</code>\
              \ - The Amazon S3 location of the client keystore file for Kafka client\
              \ side authentication (Optional).</p> </li> <li> <p> <code>KAFKA_CLIENT_KEYSTORE_PASSWORD</code>\
              \ - The password to access the provided keystore (Optional).</p> </li>\
              \ <li> <p> <code>KAFKA_CLIENT_KEY_PASSWORD</code> - A keystore can consist\
              \ of multiple keys, so this is the password to access the client key\
              \ to be used with the Kafka server side key (Optional).</p> </li> <li>\
              \ <p> <code>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</code> - The encrypted\
              \ version of the Kafka client keystore password (if the user has the\
              \ Glue encrypt passwords setting selected).</p> </li> <li> <p> <code>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</code>\
              \ - The encrypted version of the Kafka client key password (if the user\
              \ has the Glue encrypt passwords setting selected).</p> </li> <li> <p>\
              \ <code>KAFKA_SASL_MECHANISM</code> - <code>\"SCRAM-SHA-512\"</code>,\
              \ <code>\"GSSAPI\"</code>, or <code>\"AWS_MSK_IAM\"</code>. These are\
              \ the supported <a href=\"https://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml\"\
              >SASL Mechanisms</a>.</p> </li> <li> <p> <code>KAFKA_SASL_SCRAM_USERNAME</code>\
              \ - A plaintext username used to authenticate with the \"SCRAM-SHA-512\"\
              \ mechanism.</p> </li> <li> <p> <code>KAFKA_SASL_SCRAM_PASSWORD</code>\
              \ - A plaintext password used to authenticate with the \"SCRAM-SHA-512\"\
              \ mechanism.</p> </li> <li> <p> <code>ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD</code>\
              \ - The encrypted version of the Kafka SASL SCRAM password (if the user\
              \ has the Glue encrypt passwords setting selected).</p> </li> <li> <p>\
              \ <code>KAFKA_SASL_SCRAM_SECRETS_ARN</code> - The Amazon Resource Name\
              \ of a secret in Amazon Web Services Secrets Manager.</p> </li> <li>\
              \ <p> <code>KAFKA_SASL_GSSAPI_KEYTAB</code> - The S3 location of a Kerberos\
              \ <code>keytab</code> file. A keytab stores long-term keys for one or\
              \ more principals. For more information, see <a href=\"https://web.mit.edu/kerberos/krb5-latest/doc/basic/keytab_def.html\"\
              >MIT Kerberos Documentation: Keytab</a>.</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_KRB5_CONF</code>\
              \ - The S3 location of a Kerberos <code>krb5.conf</code> file. A krb5.conf\
              \ stores Kerberos configuration information, such as the location of\
              \ the KDC server. For more information, see <a href=\"https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html\"\
              >MIT Kerberos Documentation: krb5.conf</a>.</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_SERVICE</code>\
              \ - The Kerberos service name, as set with <code>sasl.kerberos.service.name</code>\
              \ in your <a href=\"https://kafka.apache.org/documentation/#brokerconfigs_sasl.kerberos.service.name\"\
              >Kafka Configuration</a>.</p> </li> <li> <p> <code>KAFKA_SASL_GSSAPI_PRINCIPAL</code>\
              \ - The name of the Kerberos princial used by Glue. For more information,\
              \ see <a href=\"https://kafka.apache.org/documentation/#security_sasl_kerberos_clientconfig\"\
              >Kafka Documentation: Configuring Kafka Brokers</a>.</p> </li> </ul>"
        PhysicalConnectionRequirements:
          $ref: '#/components/schemas/Connection_PhysicalConnectionRequirements'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that this connection definition was created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time that this connection definition was updated.
        LastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The user, group, or role that last updated this connection\
              \ definition."
      type: object
    ConnectionInput:
      description: A structure that is used to specify a connection to create or update.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection. Connection will not function
              as expected without a name.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The description of the connection.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/ConnectionType'
          - description: "<p>The type of the connection. Currently, these types are\
              \ supported:</p> <ul> <li> <p> <code>JDBC</code> - Designates a connection\
              \ to a database through Java Database Connectivity (JDBC).</p> <p> <code>JDBC</code>\
              \ Connections use the following ConnectionParameters.</p> <ul> <li>\
              \ <p>Required: All of (<code>HOST</code>, <code>PORT</code>, <code>JDBC_ENGINE</code>)\
              \ or <code>JDBC_CONNECTION_URL</code>.</p> </li> <li> <p>Required: All\
              \ of (<code>USERNAME</code>, <code>PASSWORD</code>) or <code>SECRET_ID</code>.</p>\
              \ </li> <li> <p>Optional: <code>JDBC_ENFORCE_SSL</code>, <code>CUSTOM_JDBC_CERT</code>,\
              \ <code>CUSTOM_JDBC_CERT_STRING</code>, <code>SKIP_CUSTOM_JDBC_CERT_VALIDATION</code>.\
              \ These parameters are used to configure SSL with JDBC.</p> </li> </ul>\
              \ </li> <li> <p> <code>KAFKA</code> - Designates a connection to an\
              \ Apache Kafka streaming platform.</p> <p> <code>KAFKA</code> Connections\
              \ use the following ConnectionParameters.</p> <ul> <li> <p>Required:\
              \ <code>KAFKA_BOOTSTRAP_SERVERS</code>.</p> </li> <li> <p>Optional:\
              \ <code>KAFKA_SSL_ENABLED</code>, <code>KAFKA_CUSTOM_CERT</code>, <code>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</code>.\
              \ These parameters are used to configure SSL with <code>KAFKA</code>.</p>\
              \ </li> <li> <p>Optional: <code>KAFKA_CLIENT_KEYSTORE</code>, <code>KAFKA_CLIENT_KEYSTORE_PASSWORD</code>,\
              \ <code>KAFKA_CLIENT_KEY_PASSWORD</code>, <code>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</code>,\
              \ <code>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</code>. These parameters\
              \ are used to configure TLS client configuration with SSL in <code>KAFKA</code>.</p>\
              \ </li> <li> <p>Optional: <code>KAFKA_SASL_MECHANISM</code>. Can be\
              \ specified as <code>SCRAM-SHA-512</code>, <code>GSSAPI</code>, or <code>AWS_MSK_IAM</code>.</p>\
              \ </li> <li> <p>Optional: <code>KAFKA_SASL_SCRAM_USERNAME</code>, <code>KAFKA_SASL_SCRAM_PASSWORD</code>,\
              \ <code>ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD</code>. These parameters\
              \ are used to configure SASL/SCRAM-SHA-512 authentication with <code>KAFKA</code>.</p>\
              \ </li> <li> <p>Optional: <code>KAFKA_SASL_GSSAPI_KEYTAB</code>, <code>KAFKA_SASL_GSSAPI_KRB5_CONF</code>,\
              \ <code>KAFKA_SASL_GSSAPI_SERVICE</code>, <code>KAFKA_SASL_GSSAPI_PRINCIPAL</code>.\
              \ These parameters are used to configure SASL/GSSAPI authentication\
              \ with <code>KAFKA</code>.</p> </li> </ul> </li> <li> <p> <code>MONGODB</code>\
              \ - Designates a connection to a MongoDB document database.</p> <p>\
              \ <code>MONGODB</code> Connections use the following ConnectionParameters.</p>\
              \ <ul> <li> <p>Required: <code>CONNECTION_URL</code>.</p> </li> <li>\
              \ <p>Required: All of (<code>USERNAME</code>, <code>PASSWORD</code>)\
              \ or <code>SECRET_ID</code>.</p> </li> </ul> </li> <li> <p> <code>NETWORK</code>\
              \ - Designates a network connection to a data source within an Amazon\
              \ Virtual Private Cloud environment (Amazon VPC).</p> <p> <code>NETWORK</code>\
              \ Connections do not require ConnectionParameters. Instead, provide\
              \ a PhysicalConnectionRequirements.</p> </li> <li> <p> <code>MARKETPLACE</code>\
              \ - Uses configuration settings contained in a connector purchased from\
              \ Amazon Web Services Marketplace to read from and write to data stores\
              \ that are not natively supported by Glue.</p> <p> <code>MARKETPLACE</code>\
              \ Connections use the following ConnectionParameters.</p> <ul> <li>\
              \ <p>Required: <code>CONNECTOR_TYPE</code>, <code>CONNECTOR_URL</code>,\
              \ <code>CONNECTOR_CLASS_NAME</code>, <code>CONNECTION_URL</code>.</p>\
              \ </li> <li> <p>Required for <code>JDBC</code> <code>CONNECTOR_TYPE</code>\
              \ connections: All of (<code>USERNAME</code>, <code>PASSWORD</code>)\
              \ or <code>SECRET_ID</code>.</p> </li> </ul> </li> <li> <p> <code>CUSTOM</code>\
              \ - Uses configuration settings contained in a custom connector to read\
              \ from and write to data stores that are not natively supported by Glue.</p>\
              \ </li> </ul> <p> <code>SFTP</code> is not supported.</p> <p>For more\
              \ information about how optional ConnectionProperties are used to configure\
              \ features in Glue, consult <a href=\"https://docs.aws.amazon.com/glue/latest/dg/connection-defining.html\"\
              >Glue connection properties</a>.</p> <p>For more information about how\
              \ optional ConnectionProperties are used to configure features in Glue\
              \ Studio, consult <a href=\"https://docs.aws.amazon.com/glue/latest/ug/connectors-chapter.html\"\
              >Using connectors and connections</a>.</p>"
        MatchCriteria:
          allOf:
          - $ref: '#/components/schemas/MatchCriteria'
          - description: A list of criteria that can be used in selecting this connection.
        ConnectionProperties:
          allOf:
          - $ref: '#/components/schemas/ConnectionProperties'
          - description: These key-value pairs define parameters for the connection.
        PhysicalConnectionRequirements:
          $ref: '#/components/schemas/ConnectionInput_PhysicalConnectionRequirements'
      required:
      - ConnectionProperties
      - ConnectionType
      - Name
      type: object
    ConnectionList:
      items:
        $ref: '#/components/schemas/Connection'
      type: array
    ConnectionPasswordEncryption:
      description: "<p>The data structure used by the Data Catalog to encrypt the\
        \ password as part of <code>CreateConnection</code> or <code>UpdateConnection</code>\
        \ and store it in the <code>ENCRYPTED_PASSWORD</code> field in the connection\
        \ properties. You can enable catalog encryption or only password encryption.</p>\
        \ <p>When a <code>CreationConnection</code> request arrives containing a password,\
        \ the Data Catalog first encrypts the password using your KMS key. It then\
        \ encrypts the whole connection object again if catalog encryption is also\
        \ enabled.</p> <p>This encryption requires that you set KMS key permissions\
        \ to enable or restrict access on the password key according to your security\
        \ requirements. For example, you might want only administrators to have decrypt\
        \ permission on the password key.</p>"
      properties:
        ReturnConnectionPasswordEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When the <code>ReturnConnectionPasswordEncrypted</code>\
              \ flag is set to \"true\", passwords remain encrypted in the responses\
              \ of <code>GetConnection</code> and <code>GetConnections</code>. This\
              \ encryption takes effect independently from catalog encryption. "
        AwsKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "<p>An KMS key that is used to encrypt the connection password.\
              \ </p> <p>If connection password protection is enabled, the caller of\
              \ <code>CreateConnection</code> and <code>UpdateConnection</code> needs\
              \ at least <code>kms:Encrypt</code> permission on the specified KMS\
              \ key, to encrypt passwords before storing them in the Data Catalog.\
              \ </p> <p>You can set the decrypt permission to enable or restrict access\
              \ on the password key according to your security requirements.</p>"
      required:
      - ReturnConnectionPasswordEncrypted
      type: object
    ConnectionPropertyKey:
      enum:
      - HOST
      - PORT
      - USERNAME
      - PASSWORD
      - ENCRYPTED_PASSWORD
      - JDBC_DRIVER_JAR_URI
      - JDBC_DRIVER_CLASS_NAME
      - JDBC_ENGINE
      - JDBC_ENGINE_VERSION
      - CONFIG_FILES
      - INSTANCE_ID
      - JDBC_CONNECTION_URL
      - JDBC_ENFORCE_SSL
      - CUSTOM_JDBC_CERT
      - SKIP_CUSTOM_JDBC_CERT_VALIDATION
      - CUSTOM_JDBC_CERT_STRING
      - CONNECTION_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - KAFKA_SSL_ENABLED
      - KAFKA_CUSTOM_CERT
      - KAFKA_SKIP_CUSTOM_CERT_VALIDATION
      - KAFKA_CLIENT_KEYSTORE
      - KAFKA_CLIENT_KEYSTORE_PASSWORD
      - KAFKA_CLIENT_KEY_PASSWORD
      - ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD
      - ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD
      - SECRET_ID
      - CONNECTOR_URL
      - CONNECTOR_TYPE
      - CONNECTOR_CLASS_NAME
      - KAFKA_SASL_MECHANISM
      - KAFKA_SASL_SCRAM_USERNAME
      - KAFKA_SASL_SCRAM_PASSWORD
      - KAFKA_SASL_SCRAM_SECRETS_ARN
      - ENCRYPTED_KAFKA_SASL_SCRAM_PASSWORD
      - KAFKA_SASL_GSSAPI_KEYTAB
      - KAFKA_SASL_GSSAPI_KRB5_CONF
      - KAFKA_SASL_GSSAPI_SERVICE
      - KAFKA_SASL_GSSAPI_PRINCIPAL
      type: string
    OrchestrationStringList:
      items:
        $ref: '#/components/schemas/GenericString'
      type: array
    ConnectionsList:
      description: Specifies the connections used by a job.
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/OrchestrationStringList'
          - description: A list of connections used by the job.
      type: object
    ContextWords:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 20
      minItems: 1
      type: array
    LogGroup:
      maxLength: 512
      minLength: 1
      pattern: "[\\.\\-_/#A-Za-z0-9]+"
      type: string
    LogStream:
      maxLength: 512
      minLength: 1
      pattern: "[^:*]*"
      type: string
    Crawl:
      description: The details of a crawl in the workflow.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/CrawlState'
          - description: The state of the crawler.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time on which the crawl started.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time on which the crawl completed.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The error message associated with the crawl.
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/LogGroup'
          - description: The log group associated with the crawl.
        LogStream:
          allOf:
          - $ref: '#/components/schemas/LogStream'
          - description: The log stream associated with the crawl.
      type: object
    CrawlId:
      type: string
    CrawlList:
      items:
        $ref: '#/components/schemas/Crawl'
      type: array
    Role:
      type: string
    CrawlerTargets:
      description: Specifies data stores to crawl.
      properties:
        S3Targets:
          allOf:
          - $ref: '#/components/schemas/S3TargetList'
          - description: Specifies Amazon Simple Storage Service (Amazon S3) targets.
        JdbcTargets:
          allOf:
          - $ref: '#/components/schemas/JdbcTargetList'
          - description: Specifies JDBC targets.
        MongoDBTargets:
          allOf:
          - $ref: '#/components/schemas/MongoDBTargetList'
          - description: Specifies Amazon DocumentDB or MongoDB targets.
        DynamoDBTargets:
          allOf:
          - $ref: '#/components/schemas/DynamoDBTargetList'
          - description: Specifies Amazon DynamoDB targets.
        CatalogTargets:
          allOf:
          - $ref: '#/components/schemas/CatalogTargetList'
          - description: Specifies Glue Data Catalog targets.
        DeltaTargets:
          allOf:
          - $ref: '#/components/schemas/DeltaTargetList'
          - description: Specifies Delta data store targets.
        IcebergTargets:
          allOf:
          - $ref: '#/components/schemas/IcebergTargetList'
          - description: Specifies Apache Iceberg data store targets.
        HudiTargets:
          allOf:
          - $ref: '#/components/schemas/HudiTargetList'
          - description: Specifies Apache Hudi data store targets.
      type: object
    DatabaseName:
      type: string
    RecrawlPolicy:
      description: "When crawling an Amazon S3 data source after the first crawl is\
        \ complete, specifies whether to crawl the entire dataset again or to crawl\
        \ only folders that were added since the last crawler run. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/incremental-crawls.html\"\
        >Incremental Crawls in Glue</a> in the developer guide."
      properties:
        RecrawlBehavior:
          allOf:
          - $ref: '#/components/schemas/RecrawlBehavior'
          - description: <p>Specifies whether to crawl the entire dataset again or
              to crawl only folders that were added since the last crawler run.</p>
              <p>A value of <code>CRAWL_EVERYTHING</code> specifies crawling the entire
              dataset again.</p> <p>A value of <code>CRAWL_NEW_FOLDERS_ONLY</code>
              specifies crawling only folders that were added since the last crawler
              run.</p> <p>A value of <code>CRAWL_EVENT_MODE</code> specifies crawling
              only the changes identified by Amazon S3 events.</p>
      type: object
    SchemaChangePolicy:
      description: A policy that specifies update and deletion behaviors for the crawler.
      properties:
        UpdateBehavior:
          allOf:
          - $ref: '#/components/schemas/UpdateBehavior'
          - description: The update behavior when the crawler finds a changed schema.
        DeleteBehavior:
          allOf:
          - $ref: '#/components/schemas/DeleteBehavior'
          - description: The deletion behavior when the crawler finds a deleted object.
      type: object
    LineageConfiguration:
      description: Specifies data lineage configuration settings for the crawler.
      properties:
        CrawlerLineageSettings:
          allOf:
          - $ref: '#/components/schemas/CrawlerLineageSettings'
          - description: "<p>Specifies whether data lineage is enabled for the crawler.\
              \ Valid values are:</p> <ul> <li> <p>ENABLE: enables data lineage for\
              \ the crawler</p> </li> <li> <p>DISABLE: disables data lineage for the\
              \ crawler</p> </li> </ul>"
      type: object
    CrawlerState:
      enum:
      - READY
      - RUNNING
      - STOPPING
      type: string
    TablePrefix:
      maxLength: 128
      minLength: 0
      type: string
    Schedule:
      description: A scheduling object using a <code>cron</code> statement to schedule
        an event.
      properties:
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: "A <code>cron</code> expression used to specify the schedule\
              \ (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>."
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleState'
          - description: The state of the schedule.
      type: object
    MillisecondsCount:
      type: integer
    LastCrawlInfo:
      description: Status and error information about the most recent crawl.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/LastCrawlStatus'
          - description: Status of the last crawl.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: "If an error occurred, the error information about the last\
              \ crawl."
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/LogGroup'
          - description: The log group for the last crawl.
        LogStream:
          allOf:
          - $ref: '#/components/schemas/LogStream'
          - description: The log stream for the last crawl.
        MessagePrefix:
          allOf:
          - $ref: '#/components/schemas/MessagePrefix'
          - description: The prefix for a message about this crawl.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the crawl started.
      type: object
    VersionId:
      type: integer
    CrawlerConfiguration:
      type: string
    CrawlerSecurityConfiguration:
      maxLength: 128
      minLength: 0
      type: string
    LakeFormationConfiguration:
      description: Specifies Lake Formation configuration settings for the crawler.
      properties:
        UseLakeFormationCredentials:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether to use Lake Formation credentials for the
              crawler instead of the IAM role credentials.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "Required for cross account crawls. For same account crawls\
              \ as the target data, this can be left as null."
      type: object
    Crawler:
      description: "Specifies a crawler program that examines a data source and uses\
        \ classifiers to try to determine its schema. If successful, the crawler records\
        \ metadata concerning the data source in the Glue Data Catalog."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: "The Amazon Resource Name (ARN) of an IAM role that's used\
              \ to access customer resources, such as Amazon Simple Storage Service\
              \ (Amazon S3) data."
        Targets:
          $ref: '#/components/schemas/Crawler_Targets'
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          - description: The name of the database in which the crawler's output is
              stored.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the crawler.
        Classifiers:
          allOf:
          - $ref: '#/components/schemas/ClassifierNameList'
          - description: A list of UTF-8 strings that specify the custom classifiers
              that are associated with the crawler.
        RecrawlPolicy:
          $ref: '#/components/schemas/CreateCrawlerRequest_RecrawlPolicy'
        SchemaChangePolicy:
          $ref: '#/components/schemas/Crawler_SchemaChangePolicy'
        LineageConfiguration:
          $ref: '#/components/schemas/Crawler_LineageConfiguration'
        State:
          allOf:
          - $ref: '#/components/schemas/CrawlerState'
          - description: "Indicates whether the crawler is running, or whether a run\
              \ is pending."
        TablePrefix:
          allOf:
          - $ref: '#/components/schemas/TablePrefix'
          - description: The prefix added to the names of tables that are created.
        Schedule:
          $ref: '#/components/schemas/Crawler_Schedule'
        CrawlElapsedTime:
          allOf:
          - $ref: '#/components/schemas/MillisecondsCount'
          - description: "If the crawler is running, contains the total time elapsed\
              \ since the last crawl began."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the crawler was created.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the crawler was last updated.
        LastCrawl:
          $ref: '#/components/schemas/Crawler_LastCrawl'
        Version:
          allOf:
          - $ref: '#/components/schemas/VersionId'
          - description: The version of the crawler.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/CrawlerConfiguration'
          - description: "Crawler configuration information. This versioned JSON string\
              \ allows users to specify aspects of a crawler's behavior. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html\"\
              >Setting crawler configuration options</a>."
        CrawlerSecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/CrawlerSecurityConfiguration'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used by this crawler.
        LakeFormationConfiguration:
          $ref: '#/components/schemas/Crawler_LakeFormationConfiguration'
      type: object
    CrawlerHistoryState:
      enum:
      - RUNNING
      - COMPLETED
      - FAILED
      - STOPPED
      type: string
    MessagePrefix:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    CrawlerHistory:
      description: Contains the information for a run of a crawler.
      properties:
        CrawlId:
          allOf:
          - $ref: '#/components/schemas/CrawlId'
          - description: A UUID identifier for each crawl.
        State:
          allOf:
          - $ref: '#/components/schemas/CrawlerHistoryState'
          - description: The state of the crawl.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time on which the crawl started.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time on which the crawl ended.
        Summary:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "A run summary for the specific crawl in JSON. Contains the\
              \ catalog tables and partitions that were added, updated, or deleted."
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: "If an error occurred, the error message associated with\
              \ the crawl."
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/LogGroup'
          - description: The log group associated with the crawl.
        LogStream:
          allOf:
          - $ref: '#/components/schemas/LogStream'
          - description: The log stream associated with the crawl.
        MessagePrefix:
          allOf:
          - $ref: '#/components/schemas/MessagePrefix'
          - description: The prefix for a CloudWatch message about this crawl.
        DPUHour:
          allOf:
          - $ref: '#/components/schemas/NonNegativeDouble'
          - description: The number of data processing units (DPU) used in hours for
              the crawl.
      type: object
    CrawlerHistoryList:
      items:
        $ref: '#/components/schemas/CrawlerHistory'
      type: array
    CrawlerLineageSettings:
      enum:
      - ENABLE
      - DISABLE
      type: string
    NonNegativeInteger:
      minimum: 0
      type: integer
    CrawlerMetrics:
      description: Metrics for a specified crawler.
      properties:
        CrawlerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the crawler.
        TimeLeftSeconds:
          allOf:
          - $ref: '#/components/schemas/NonNegativeDouble'
          - description: The estimated time left to complete a running crawl.
        StillEstimating:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: True if the crawler is still estimating how long it will
              take to complete this run.
        LastRuntimeSeconds:
          allOf:
          - $ref: '#/components/schemas/NonNegativeDouble'
          - description: "The duration of the crawler's most recent run, in seconds."
        MedianRuntimeSeconds:
          allOf:
          - $ref: '#/components/schemas/NonNegativeDouble'
          - description: "The median duration of this crawler's runs, in seconds."
        TablesCreated:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of tables created by this crawler.
        TablesUpdated:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of tables updated by this crawler.
        TablesDeleted:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The number of tables deleted by this crawler.
      type: object
    CrawlerMetricsList:
      items:
        $ref: '#/components/schemas/CrawlerMetrics'
      type: array
    CrawlerNodeDetails:
      description: The details of a Crawler node present in the workflow.
      properties:
        Crawls:
          allOf:
          - $ref: '#/components/schemas/CrawlList'
          - description: A list of crawls represented by the crawl node.
      type: object
    S3TargetList:
      items:
        $ref: '#/components/schemas/S3Target'
      type: array
    JdbcTargetList:
      items:
        $ref: '#/components/schemas/JdbcTarget'
      type: array
    MongoDBTargetList:
      items:
        $ref: '#/components/schemas/MongoDBTarget'
      type: array
    DynamoDBTargetList:
      items:
        $ref: '#/components/schemas/DynamoDBTarget'
      type: array
    DeltaTargetList:
      items:
        $ref: '#/components/schemas/DeltaTarget'
      type: array
    IcebergTargetList:
      items:
        $ref: '#/components/schemas/IcebergTarget'
      type: array
    HudiTargetList:
      items:
        $ref: '#/components/schemas/HudiTarget'
      type: array
    FieldName:
      enum:
      - CRAWL_ID
      - STATE
      - START_TIME
      - END_TIME
      - DPU_HOUR
      type: string
    FilterOperator:
      enum:
      - GT
      - GE
      - LT
      - LE
      - EQ
      - NE
      type: string
    CrawlsFilter:
      description: "A list of fields, comparators and value that you can use to filter\
        \ the crawler runs for a specified crawler."
      properties:
        FieldName:
          allOf:
          - $ref: '#/components/schemas/FieldName'
          - description: "<p>A key used to filter the crawler runs for a specified\
              \ crawler. Valid values for each of the field names are:</p> <ul> <li>\
              \ <p> <code>CRAWL_ID</code>: A string representing the UUID identifier\
              \ for a crawl.</p> </li> <li> <p> <code>STATE</code>: A string representing\
              \ the state of the crawl.</p> </li> <li> <p> <code>START_TIME</code>\
              \ and <code>END_TIME</code>: The epoch timestamp in milliseconds.</p>\
              \ </li> <li> <p> <code>DPU_HOUR</code>: The number of data processing\
              \ unit (DPU) hours used for the crawl.</p> </li> </ul>"
        FilterOperator:
          allOf:
          - $ref: '#/components/schemas/FilterOperator'
          - description: "<p>A defined comparator that operates on the value. The\
              \ available operators are:</p> <ul> <li> <p> <code>GT</code>: Greater\
              \ than.</p> </li> <li> <p> <code>GE</code>: Greater than or equal to.</p>\
              \ </li> <li> <p> <code>LT</code>: Less than.</p> </li> <li> <p> <code>LE</code>:\
              \ Less than or equal to.</p> </li> <li> <p> <code>EQ</code>: Equal to.</p>\
              \ </li> <li> <p> <code>NE</code>: Not equal to.</p> </li> </ul>"
        FieldValue:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: 'The value provided for comparison on the crawl field. '
      type: object
    CrawlsFilterList:
      items:
        $ref: '#/components/schemas/CrawlsFilter'
      type: array
    OrchestrationS3Location:
      maxLength: 8192
      minLength: 1
      pattern: "^s3://([^/]+)/([^/]+/)*([^/]+)$"
      type: string
    TagsMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    CreateGrokClassifierRequest:
      description: Specifies a <code>grok</code> classifier for <code>CreateClassifier</code>
        to create.
      properties:
        Classification:
          allOf:
          - $ref: '#/components/schemas/Classification'
          - description: "An identifier of the data format that the classifier matches,\
              \ such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and\
              \ so on."
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the new classifier.
        GrokPattern:
          allOf:
          - $ref: '#/components/schemas/GrokPattern'
          - description: The grok pattern used by this classifier.
        CustomPatterns:
          allOf:
          - $ref: '#/components/schemas/CustomPatterns'
          - description: Optional custom grok patterns used by this classifier.
      required:
      - Classification
      - GrokPattern
      - Name
      type: object
    CreateXMLClassifierRequest:
      description: Specifies an XML classifier for <code>CreateClassifier</code> to
        create.
      properties:
        Classification:
          allOf:
          - $ref: '#/components/schemas/Classification'
          - description: An identifier of the data format that the classifier matches.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        RowTag:
          allOf:
          - $ref: '#/components/schemas/RowTag'
          - description: "The XML tag designating the element that contains each record\
              \ in an XML document being parsed. This can't identify a self-closing\
              \ element (closed by <code>/&gt;</code>). An empty row element that\
              \ contains only attributes can be parsed as long as it ends with a closing\
              \ tag (for example, <code>&lt;row item_a=\"A\" item_b=\"B\"&gt;&lt;/row&gt;</code>\
              \ is okay, but <code>&lt;row item_a=\"A\" item_b=\"B\" /&gt;</code>\
              \ is not)."
      required:
      - Classification
      - Name
      type: object
    CreateJsonClassifierRequest:
      description: Specifies a JSON classifier for <code>CreateClassifier</code> to
        create.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        JsonPath:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "A <code>JsonPath</code> string defining the JSON data for\
              \ the classifier to classify. Glue supports a subset of JsonPath, as\
              \ described in <a href=\"https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json\"\
              >Writing JsonPath Custom Classifiers</a>."
      required:
      - JsonPath
      - Name
      type: object
    CreateCsvClassifierRequest:
      description: Specifies a custom CSV classifier for <code>CreateClassifier</code>
        to create.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/CsvColumnDelimiter'
          - description: A custom symbol to denote what separates each column entry
              in the row.
        QuoteSymbol:
          allOf:
          - $ref: '#/components/schemas/CsvQuoteSymbol'
          - description: A custom symbol to denote what combines content into a single
              column value. Must be different from the column delimiter.
        ContainsHeader:
          allOf:
          - $ref: '#/components/schemas/CsvHeaderOption'
          - description: Indicates whether the CSV file contains a header.
        Header:
          allOf:
          - $ref: '#/components/schemas/CsvHeader'
          - description: A list of strings representing column names.
        DisableValueTrimming:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies not to trim values before identifying the type
              of column values. The default value is true.
        AllowSingleColumn:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Enables the processing of files that contain only one column.
        CustomDatatypeConfigured:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Enables the configuration of custom datatypes.
        CustomDatatypes:
          allOf:
          - $ref: '#/components/schemas/CustomDatatypes'
          - description: Creates a list of supported custom datatypes.
      required:
      - Name
      type: object
    CronExpression:
      type: string
    CsvColumnDelimiter:
      maxLength: 1
      minLength: 1
      pattern: "[^\\r\\n]"
      type: string
    CsvQuoteSymbol:
      maxLength: 1
      minLength: 1
      pattern: "[^\\r\\n]"
      type: string
    CsvHeaderOption:
      enum:
      - UNKNOWN
      - PRESENT
      - ABSENT
      type: string
    CsvHeader:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    CustomDatatypes:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    DataQualityRulesetString:
      maxLength: 65536
      minLength: 1
      type: string
    DataQualityTargetTable:
      description: An object representing an Glue table.
      properties:
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the Glue table.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the database where the Glue table exists.
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The catalog id where the Glue table exists.
      required:
      - DatabaseName
      - TableName
      type: object
    DatabaseInput:
      description: The structure used to create or update a database.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database. For Hive compatibility, this is\
              \ folded to lowercase when it is stored."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the database.
        LocationUri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: "The location of the database (for example, an HDFS path). "
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: <p>These key-value pairs define parameters and properties
              of the database.</p> <p>These key-value pairs define parameters and
              properties of the database.</p>
        CreateTableDefaultPermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalPermissionsList'
          - description: Creates a set of default permissions on the table for principals.
              Used by Lake Formation. Not used in the normal course of Glue operations.
        TargetDatabase:
          $ref: '#/components/schemas/DatabaseInput_TargetDatabase'
        FederatedDatabase:
          $ref: '#/components/schemas/DatabaseInput_FederatedDatabase'
      required:
      - Name
      type: object
    RoleArn:
      pattern: "arn:aws:iam::\\d{12}:role/.*"
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/GenericString'
      type: array
    PublicKeysList:
      items:
        $ref: '#/components/schemas/GenericString'
      maxItems: 5
      type: array
    WorkerType:
      enum:
      - Standard
      - G.1X
      - G.2X
      - G.025X
      - G.4X
      - G.8X
      - Z.2X
      type: string
    GlueVersionString:
      maxLength: 255
      minLength: 1
      pattern: ^\w+\.\w+$
      type: string
    NullableInteger:
      type: integer
    MapValue:
      additionalProperties:
        $ref: '#/components/schemas/GenericString'
      maxProperties: 100
      minProperties: 0
      type: object
    GrokPattern:
      maxLength: 2048
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        t]*"
    CustomPatterns:
      maxLength: 16000
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    UriString:
      type: string
    RoleString:
      type: string
    ExecutionProperty:
      description: An execution property of a job.
      properties:
        MaxConcurrentRuns:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrentRuns'
          - description: The maximum number of concurrent runs allowed for the job.
              The default is 1. An error is returned when this threshold is reached.
              The maximum value you can specify is controlled by a service limit.
      type: object
    JobCommand:
      description: Specifies code that runs when a job is run.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The name of the job command. For an Apache Spark ETL job,\
              \ this must be <code>glueetl</code>. For a Python shell job, it must\
              \ be <code>pythonshell</code>. For an Apache Spark streaming ETL job,\
              \ this must be <code>gluestreaming</code>. For a Ray job, this must\
              \ be <code>glueray</code>."
        ScriptLocation:
          allOf:
          - $ref: '#/components/schemas/ScriptLocationString'
          - description: Specifies the Amazon Simple Storage Service (Amazon S3) path
              to a script that runs a job.
        PythonVersion:
          allOf:
          - $ref: '#/components/schemas/PythonVersionString'
          - description: The Python version being used to run a Python shell job.
              Allowed values are 2 or 3.
        Runtime:
          allOf:
          - $ref: '#/components/schemas/RuntimeNameString'
          - description: "In Ray jobs, Runtime is used to specify the versions of\
              \ Ray, Python and additional libraries available in your environment.\
              \ This field is not used in other job types. For supported runtime environment\
              \ values, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-runtimes.html\"\
              >Working with Ray jobs</a> in the Glue Developer Guide."
      type: object
    MaxRetries:
      type: integer
    NullableDouble:
      format: double
      type: number
    ExecutionClass:
      enum:
      - FLEX
      - STANDARD
      maxLength: 16
      type: string
    SourceControlDetails:
      description: "The details for a source control configuration for a job, allowing\
        \ synchronization of job artifacts to or from a remote repository."
      properties:
        Provider:
          allOf:
          - $ref: '#/components/schemas/SourceControlProvider'
          - description: The provider for the remote repository.
        Repository:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: The name of the remote repository that contains the job artifacts.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: The owner of the remote repository that contains the job
              artifacts.
        Branch:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: An optional branch in the remote repository.
        Folder:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: An optional folder in the remote repository.
        LastCommitId:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: The last commit ID for a commit in the remote repository.
        AuthStrategy:
          allOf:
          - $ref: '#/components/schemas/SourceControlAuthStrategy'
          - description: "The type of authentication, which can be an authentication\
              \ token stored in Amazon Web Services Secrets Manager, or a personal\
              \ access token."
        AuthToken:
          allOf:
          - $ref: '#/components/schemas/Generic512CharString'
          - description: The value of an authorization token.
      type: object
    JsonPath:
      type: string
    GlueTables:
      items:
        $ref: '#/components/schemas/GlueTable'
      maxItems: 10
      minItems: 0
      type: array
    TransformParameters:
      description: The algorithm-specific parameters that are associated with the
        machine learning transform.
      properties:
        TransformType:
          allOf:
          - $ref: '#/components/schemas/TransformType'
          - description: "<p>The type of machine learning transform.</p> <p>For information\
              \ about the types of machine learning transforms, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html\"\
              >Creating Machine Learning Transforms</a>.</p>"
        FindMatchesParameters:
          $ref: '#/components/schemas/TransformParameters_FindMatchesParameters'
      required:
      - TransformType
      type: object
    TransformEncryption:
      description: "<p>The encryption-at-rest settings of the transform that apply\
        \ to accessing user data. Machine learning transforms can access user data\
        \ encrypted in Amazon S3 using KMS.</p> <p>Additionally, imported labels and\
        \ trained transforms can now be encrypted using a customer provided KMS key.</p>"
      properties:
        MlUserDataEncryption:
          $ref: '#/components/schemas/TransformEncryption_MlUserDataEncryption'
        TaskRunSecurityConfigurationName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the security configuration.
      type: object
    PartitionIndex:
      description: A structure for a partition index.
      properties:
        Keys:
          allOf:
          - $ref: '#/components/schemas/KeyList'
          - description: The keys for the partition index.
        IndexName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partition index.
      required:
      - IndexName
      - Keys
      type: object
    SchemaRegistryNameString:
      maxLength: 255
      minLength: 1
      pattern: "[a-zA-Z0-9-_$#.]+"
      type: string
    GlueResourceArn:
      maxLength: 10240
      minLength: 1
      pattern: arn:(aws|aws-us-gov|aws-cn):glue:.*
      type: string
    RegistryId:
      description: A wrapper structure that may contain the registry name and Amazon
        Resource Name (ARN).
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: 'Name of the registry. Used only for lookup. One of <code>RegistryArn</code>
              or <code>RegistryName</code> has to be provided. '
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: Arn of the registry to be updated. One of <code>RegistryArn</code>
              or <code>RegistryName</code> has to be provided.
      type: object
    SchemaCheckpointNumber:
      maximum: 100000
      minimum: 1
      type: integer
    VersionLongNumber:
      maximum: 100000
      minimum: 1
      type: integer
    SchemaStatus:
      enum:
      - AVAILABLE
      - PENDING
      - DELETING
      type: string
    SchemaVersionIdString:
      maxLength: 36
      minLength: 36
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    SchemaVersionStatus:
      enum:
      - AVAILABLE
      - PENDING
      - FAILURE
      - DELETING
      type: string
    DagNodes:
      items:
        $ref: '#/components/schemas/CodeGenNode'
      type: array
    DagEdges:
      items:
        $ref: '#/components/schemas/CodeGenEdge'
      type: array
    Language:
      enum:
      - PYTHON
      - SCALA
      type: string
    PythonScript:
      type: string
    ScalaCode:
      type: string
    EncryptionConfiguration:
      description: Specifies an encryption configuration.
      properties:
        S3Encryption:
          allOf:
          - $ref: '#/components/schemas/S3EncryptionList'
          - description: The encryption configuration for Amazon Simple Storage Service
              (Amazon S3) data.
        CloudWatchEncryption:
          $ref: '#/components/schemas/EncryptionConfiguration_CloudWatchEncryption'
        JobBookmarksEncryption:
          $ref: '#/components/schemas/EncryptionConfiguration_JobBookmarksEncryption'
      type: object
    OrchestrationRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws[^:]*:iam::[0-9]*:role/.+"
      type: string
    SessionCommand:
      description: The <code>SessionCommand</code> that runs the job.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Specifies the name of the SessionCommand. Can be 'glueetl'
              or 'gluestreaming'.
        PythonVersion:
          allOf:
          - $ref: '#/components/schemas/PythonVersionString'
          - description: Specifies the Python version. The Python version indicates
              the version supported for jobs of type Spark.
      type: object
    OrchestrationArgumentsMap:
      additionalProperties:
        $ref: '#/components/schemas/OrchestrationArgumentsValue'
      maxProperties: 75
      minProperties: 0
      type: object
    Session:
      description: The period in which a remote Spark runtime environment is running.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The ID of the session.
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The time and date when the session was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          - description: 'The session status. '
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The error message displayed during the session.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The description of the session.
        Role:
          allOf:
          - $ref: '#/components/schemas/OrchestrationRoleArn'
          - description: The name or Amazon Resource Name (ARN) of the IAM role associated
              with the Session.
        Command:
          $ref: '#/components/schemas/Session_Command'
        DefaultArguments:
          allOf:
          - $ref: '#/components/schemas/OrchestrationArgumentsMap'
          - description: 'A map array of key-value pairs. Max is 75 pairs. '
        Connections:
          $ref: '#/components/schemas/Session_Connections'
        Progress:
          allOf:
          - $ref: '#/components/schemas/DoubleValue'
          - description: The code execution progress of the session.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: 'The number of Glue data processing units (DPUs) that can
              be allocated when the job runs. A DPU is a relative measure of processing
              power that consists of 4 vCPUs of compute capacity and 16 GB memory. '
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the SecurityConfiguration structure to be used
              with the session.
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: The Glue version determines the versions of Apache Spark
              and Python that Glue supports. The GlueVersion must be greater than
              2.0.
      type: object
    TableInput:
      description: A structure used to define a table.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The table name. For Hive compatibility, this is folded to\
              \ lowercase when it is stored."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the table.
        Owner:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The table owner. Included for Apache Hive compatibility.
              Not used in the normal course of Glue operations.
        LastAccessTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time that the table was accessed.
        LastAnalyzedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time that column statistics were computed for this
              table.
        Retention:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The retention time for this table.
        StorageDescriptor:
          $ref: '#/components/schemas/TableInput_StorageDescriptor'
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/ColumnList'
          - description: "<p>A list of columns by which the table is partitioned.\
              \ Only primitive types are supported as partition keys.</p> <p>When\
              \ you create a table used by Amazon Athena, and you do not specify any\
              \ <code>partitionKeys</code>, you must at least set the value of <code>partitionKeys</code>\
              \ to an empty list. For example:</p> <p> <code>\"PartitionKeys\": []</code>\
              \ </p>"
        ViewOriginalText:
          allOf:
          - $ref: '#/components/schemas/ViewTextString'
          - description: "Included for Apache Hive compatibility. Not used in the\
              \ normal course of Glue operations. If the table is a <code>VIRTUAL_VIEW</code>,\
              \ certain Athena configuration encoded in base64."
        ViewExpandedText:
          allOf:
          - $ref: '#/components/schemas/ViewTextString'
          - description: Included for Apache Hive compatibility. Not used in the normal
              course of Glue operations.
        TableType:
          allOf:
          - $ref: '#/components/schemas/TableTypeString'
          - description: "<p>The type of this table. Glue will create tables with\
              \ the <code>EXTERNAL_TABLE</code> type. Other services, such as Athena,\
              \ may create tables with additional table types. </p> <p>Glue related\
              \ table types:</p> <dl> <dt>EXTERNAL_TABLE</dt> <dd> <p>Hive compatible\
              \ attribute - indicates a non-Hive managed table.</p> </dd> <dt>GOVERNED</dt>\
              \ <dd> <p>Used by Lake Formation. The Glue Data Catalog understands\
              \ <code>GOVERNED</code>.</p> </dd> </dl>"
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define properties associated with the
              table.
        TargetTable:
          $ref: '#/components/schemas/TableInput_TargetTable'
      required:
      - Name
      type: object
    PartitionIndexList:
      items:
        $ref: '#/components/schemas/PartitionIndex'
      maxItems: 3
      type: array
    OpenTableFormatInput:
      description: A structure representing an open format table.
      properties:
        IcebergInput:
          $ref: '#/components/schemas/OpenTableFormatInput_IcebergInput'
      type: object
    TriggerType:
      enum:
      - SCHEDULED
      - CONDITIONAL
      - ON_DEMAND
      - EVENT
      type: string
    Predicate:
      description: "Defines the predicate of the trigger, which determines when it\
        \ fires."
      properties:
        Logical:
          allOf:
          - $ref: '#/components/schemas/Logical'
          - description: "An optional field if only one condition is listed. If multiple\
              \ conditions are listed, then this field is required."
        Conditions:
          allOf:
          - $ref: '#/components/schemas/ConditionList'
          - description: A list of the conditions that determine when the trigger
              will fire.
      type: object
    EventBatchingCondition:
      description: Batch condition that must be met (specified number of events received
        or batch time window expired) before EventBridge event trigger fires.
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/BatchSize'
          - description: Number of events that must be received from Amazon EventBridge
              before EventBridge event trigger fires.
        BatchWindow:
          allOf:
          - $ref: '#/components/schemas/BatchWindow'
          - description: Window of time in seconds after which EventBridge event trigger
              fires. Window starts when first event is received.
      required:
      - BatchSize
      type: object
    UserDefinedFunctionInput:
      description: A structure used to create or update a user-defined function.
      properties:
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the function.
        ClassName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The Java class that contains the function code.
        OwnerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The owner of the function.
        OwnerType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: The owner type.
        ResourceUris:
          allOf:
          - $ref: '#/components/schemas/ResourceUriList'
          - description: The resource URIs for the function.
      type: object
    WorkflowRunProperties:
      additionalProperties:
        $ref: '#/components/schemas/GenericString'
      type: object
    RowTag:
      type: string
    CreatedTimestamp:
      type: string
    ManyInputs:
      items:
        $ref: '#/components/schemas/NodeId'
      minItems: 1
      type: array
    ExtendedString:
      pattern: "[\\s\\S]*"
      type: string
    CustomEntityType:
      description: An object representing a custom pattern for detecting sensitive
        data across the columns and rows of your structured data.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A name for the custom pattern that allows it to be retrieved
              or deleted later. This name must be unique per Amazon Web Services account.
        RegexString:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A regular expression string that is used for detecting sensitive
              data in a custom pattern.
        ContextWords:
          allOf:
          - $ref: '#/components/schemas/ContextWords'
          - description: <p>A list of context words. If none of these context words
              are found within the vicinity of the regular expression the data will
              not be detected as sensitive data.</p> <p>If no context words are passed
              only a regular expression is checked.</p>
      required:
      - Name
      - RegexString
      type: object
    DQAdditionalOptions:
      additionalProperties:
        $ref: '#/components/schemas/GenericString'
      type: object
    DQDLAliases:
      additionalProperties:
        $ref: '#/components/schemas/EnclosedInStringProperty'
      type: object
    DQDLString:
      maxLength: 65536
      minLength: 1
      pattern: "([\\u0020-\\u007E\\r\\s\\n])*"
      type: string
    DQResultsPublishingOptions:
      description: Options to configure how your data quality evaluation results are
        published.
      properties:
        EvaluationContext:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The context of the evaluation.
        ResultsS3Prefix:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The Amazon S3 prefix prepended to the results.
        CloudWatchMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Enable metrics for your data quality results.
        ResultsPublishingEnabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Enable publishing for your data quality results.
      type: object
    DQStopJobOnFailureTiming:
      enum:
      - Immediate
      - AfterDataLoad
      type: string
    DQStopJobOnFailureOptions:
      description: Options to configure how your job will stop if your data quality
        evaluation fails.
      properties:
        StopJobOnFailureTiming:
          allOf:
          - $ref: '#/components/schemas/DQStopJobOnFailureTiming'
          - description: When to stop job if your data quality evaluation fails. Options
              are Immediate or AfterDataLoad.
      type: object
    DQTransformOutput:
      enum:
      - PrimaryInput
      - EvaluationResults
      type: string
    EncryptionAtRest:
      description: Specifies the encryption-at-rest configuration for the Data Catalog.
      properties:
        CatalogEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/CatalogEncryptionMode'
          - description: The encryption-at-rest mode for encrypting Data Catalog data.
        SseAwsKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The ID of the KMS key to use for encryption at rest.
      required:
      - CatalogEncryptionMode
      type: object
    DataCatalogEncryptionSettings:
      description: Contains configuration information for maintaining Data Catalog
        security.
      properties:
        EncryptionAtRest:
          $ref: '#/components/schemas/DataCatalogEncryptionSettings_EncryptionAtRest'
        ConnectionPasswordEncryption:
          $ref: '#/components/schemas/DataCatalogEncryptionSettings_ConnectionPasswordEncryption'
      type: object
    DataLakePrincipalString:
      maxLength: 255
      minLength: 1
      type: string
    DataLakePrincipal:
      description: The Lake Formation principal.
      properties:
        DataLakePrincipalIdentifier:
          allOf:
          - $ref: '#/components/schemas/DataLakePrincipalString'
          - description: An identifier for the Lake Formation principal.
      type: object
    DataQualityEvaluationRunAdditionalRunOptions:
      description: Additional run options you can specify for an evaluation run.
      properties:
        CloudWatchMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Whether or not to enable CloudWatch metrics.
        ResultsS3Prefix:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: Prefix for Amazon S3 to store results.
      type: object
    DataSource:
      description: A data source (an Glue table) for which you want data quality results.
      properties:
        GlueTable:
          $ref: '#/components/schemas/DataSource_GlueTable'
      required:
      - GlueTable
      type: object
    DataQualityRuleResults:
      items:
        $ref: '#/components/schemas/DataQualityRuleResult'
      maxItems: 2000
      minItems: 1
      type: array
    DataQualityResult:
      description: Describes a data quality result.
      properties:
        ResultId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: A unique result ID for the data quality result.
        Score:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: An aggregate data quality score. Represents the ratio of
              rules that passed to the total number of rules.
        DataSource:
          $ref: '#/components/schemas/GetDataQualityResultResponse_DataSource'
        RulesetName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the ruleset associated with the data quality
              result.
        EvaluationContext:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "In the context of a job in Glue Studio, each node in the\
              \ canvas is typically assigned some sort of name and data quality nodes\
              \ will have names. In the case of multiple nodes, the <code>evaluationContext</code>\
              \ can differentiate the nodes."
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this data quality run started.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this data quality run completed.
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The job name associated with the data quality result, if\
              \ any."
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: "The job run ID associated with the data quality result,\
              \ if any."
        RulesetEvaluationRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run ID for the ruleset evaluation for this data
              quality result.
        RuleResults:
          allOf:
          - $ref: '#/components/schemas/DataQualityRuleResults'
          - description: 'A list of <code>DataQualityRuleResult</code> objects representing
              the results for each rule. '
      type: object
    DataQualityResultDescription:
      description: Describes a data quality result.
      properties:
        ResultId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique result ID for this data quality result.
        DataSource:
          $ref: '#/components/schemas/DataQualityResultDescription_DataSource'
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The job name associated with the data quality result.
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The job run ID associated with the data quality result.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the run started for this data quality result.
      type: object
    DataQualityResultDescriptionList:
      items:
        $ref: '#/components/schemas/DataQualityResultDescription'
      type: array
    DataQualityResultFilterCriteria:
      description: Criteria used to return data quality results.
      properties:
        DataSource:
          $ref: '#/components/schemas/DataQualityResultFilterCriteria_DataSource'
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Filter results by the specified job name.
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: Filter results by the specified job run ID.
        StartedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter results by runs that started after this time.
        StartedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter results by runs that started before this time.
      type: object
    DataQualityResultIdList:
      items:
        $ref: '#/components/schemas/HashString'
      maxItems: 10
      minItems: 1
      type: array
    DataQualityRuleRecommendationRunDescription:
      description: Describes the result of a data quality rule recommendation run.
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The status for this run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when this run started.
        DataSource:
          $ref: '#/components/schemas/DataQualityRuleRecommendationRunDescription_DataSource'
      type: object
    DataQualityRuleRecommendationRunFilter:
      description: A filter for listing data quality recommendation runs.
      properties:
        DataSource:
          $ref: '#/components/schemas/DataQualityRuleRecommendationRunFilter_DataSource'
        StartedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter based on time for results started before provided
              time.
        StartedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter based on time for results started after provided time.
      required:
      - DataSource
      type: object
    DataQualityRuleRecommendationRunList:
      items:
        $ref: '#/components/schemas/DataQualityRuleRecommendationRunDescription'
      type: array
    DataQualityRuleResultStatus:
      enum:
      - PASS
      - FAIL
      - ERROR
      type: string
    EvaluatedMetricsMap:
      additionalProperties:
        $ref: '#/components/schemas/NullableDouble'
      type: object
    DataQualityRuleResult:
      description: Describes the result of the evaluation of a data quality rule.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the data quality rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the data quality rule.
        EvaluationMessage:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: An evaluation message.
        Result:
          allOf:
          - $ref: '#/components/schemas/DataQualityRuleResultStatus'
          - description: A pass or fail status for the rule.
        EvaluatedMetrics:
          allOf:
          - $ref: '#/components/schemas/EvaluatedMetricsMap'
          - description: A map of metrics associated with the evaluation of the rule.
      type: object
    DataQualityRulesetEvaluationRunDescription:
      description: Describes the result of a data quality ruleset evaluation run.
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique run identifier associated with this run.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The status for this run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the run started.
        DataSource:
          $ref: '#/components/schemas/DataQualityRulesetEvaluationRunDescription_DataSource'
      type: object
    DataQualityRulesetEvaluationRunFilter:
      description: The filter criteria.
      properties:
        DataSource:
          $ref: '#/components/schemas/DataQualityRulesetEvaluationRunFilter_DataSource'
        StartedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter results by runs that started before this time.
        StartedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter results by runs that started after this time.
      required:
      - DataSource
      type: object
    DataQualityRulesetEvaluationRunList:
      items:
        $ref: '#/components/schemas/DataQualityRulesetEvaluationRunDescription'
      type: array
    DataQualityRulesetFilterCriteria:
      description: The criteria used to filter data quality rulesets.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the ruleset filter criteria.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The description of the ruleset filter criteria.
        CreatedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on rulesets created before this date.
        CreatedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on rulesets created after this date.
        LastModifiedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on rulesets last modified before this date.
        LastModifiedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on rulesets last modified after this date.
        TargetTable:
          $ref: '#/components/schemas/GetDataQualityRulesetResponse_TargetTable'
      type: object
    DataQualityRulesetListDetails:
      description: Describes a data quality ruleset returned by <code>GetDataQualityRuleset</code>.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the data quality ruleset.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the data quality ruleset.
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the data quality ruleset was created.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the data quality ruleset was last modified.
        TargetTable:
          $ref: '#/components/schemas/DataQualityRulesetListDetails_TargetTable'
        RecommendationRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: "When a ruleset was created from a recommendation run, this\
              \ run ID is generated to link the two together."
        RuleCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of rules in the ruleset.
      type: object
    DataQualityRulesetList:
      items:
        $ref: '#/components/schemas/DataQualityRulesetListDetails'
      type: array
    GlueTable:
      description: The database and table in the Glue Data Catalog that is used for
        input or output data.
      properties:
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A database name in the Glue Data Catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A table name in the Glue Data Catalog.
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A unique identifier for the Glue Data Catalog.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection to the Glue Data Catalog.
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/GlueTableAdditionalOptions'
          - description: "<p>Additional options for the table. Currently there are\
              \ two keys supported:</p> <ul> <li> <p> <code>pushDownPredicate</code>:\
              \ to filter on partitions without having to list and read all the files\
              \ in your dataset.</p> </li> <li> <p> <code>catalogPartitionPredicate</code>:\
              \ to use server-side partition pruning using partition indexes in the\
              \ Glue Data Catalog.</p> </li> </ul>"
      required:
      - DatabaseName
      - TableName
      type: object
    DataSourceMap:
      additionalProperties:
        $ref: '#/components/schemas/DataSource'
      type: object
    URI:
      maxLength: 1024
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    PrincipalPermissionsList:
      items:
        $ref: '#/components/schemas/PrincipalPermissions'
      type: array
    DatabaseIdentifier:
      description: A structure that describes a target database for resource linking.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the Data Catalog in which the database resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database.
        Region:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Region of the target database.
      type: object
    FederatedDatabase:
      description: A database that points to an entity outside the Glue Data Catalog.
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/FederationIdentifier'
          - description: A unique identifier for the federated database.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection to the external metastore.
      type: object
    Database:
      description: The <code>Database</code> object represents a logical grouping
        of tables that might reside in a Hive metastore or an RDBMS.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database. For Hive compatibility, this is\
              \ folded to lowercase when it is stored."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the database.
        LocationUri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: "The location of the database (for example, an HDFS path)."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define parameters and properties of
              the database.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the metadata database was created in the
              catalog.
        CreateTableDefaultPermissions:
          allOf:
          - $ref: '#/components/schemas/PrincipalPermissionsList'
          - description: Creates a set of default permissions on the table for principals.
              Used by Lake Formation. Not used in the normal course of Glue operations.
        TargetDatabase:
          $ref: '#/components/schemas/DatabaseInput_TargetDatabase'
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the Data Catalog in which the database resides.
        FederatedDatabase:
          $ref: '#/components/schemas/DatabaseInput_FederatedDatabase'
      required:
      - Name
      type: object
    DatabaseList:
      items:
        $ref: '#/components/schemas/Database'
      type: array
    Datatype:
      description: A structure representing the datatype of the value.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: The datatype of the value.
        Label:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: A label assigned to the datatype.
      required:
      - Id
      - Label
      type: object
    DecimalNumber:
      description: Contains a numeric value in decimal format.
      properties:
        UnscaledValue:
          allOf:
          - $ref: '#/components/schemas/Blob'
          - description: The unscaled numeric value.
        Scale:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The scale that determines where the decimal point falls in
              the unscaled value.
      required:
      - Scale
      - UnscaledValue
      type: object
    DeleteBehavior:
      enum:
      - LOG
      - DELETE_FROM_DATABASE
      - DEPRECATE_IN_DATABASE
      type: string
    ValueStringList:
      items:
        $ref: '#/components/schemas/ValueString'
      type: array
    RegistryStatus:
      enum:
      - AVAILABLE
      - DELETING
      type: string
    SchemaId:
      description: The unique ID of the schema in the Glue schema registry.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code>
              or <code>SchemaName</code> has to be provided.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema. One of <code>SchemaArn</code> or
              <code>SchemaName</code> has to be provided.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema registry that contains the schema.
      type: object
    VersionsString:
      maxLength: 100000
      minLength: 1
      pattern: "[1-9][0-9]*|[1-9][0-9]*-[1-9][0-9]*"
      type: string
    SchemaVersionErrorList:
      items:
        $ref: '#/components/schemas/SchemaVersionErrorItem'
      type: array
    PathList:
      items:
        $ref: '#/components/schemas/Path'
      type: array
    DeltaTarget:
      description: Specifies a Delta data store to crawl one or more Delta tables.
      properties:
        DeltaTables:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: A list of the Amazon S3 paths to the Delta tables.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to use to connect to the Delta
              table target.
        WriteManifest:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies whether to write the manifest files to the Delta
              table path.
        CreateNativeDeltaTable:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "Specifies whether the crawler will create native tables,\
              \ to allow integration with query engines that support querying of the\
              \ Delta transaction log directly."
      type: object
    DeltaTargetCompressionType:
      enum:
      - uncompressed
      - snappy
      type: string
    DescriptionStringRemovable:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    DevEndpoint:
      description: "A development endpoint where a developer can remotely debug extract,\
        \ transform, and load (ETL) scripts."
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the <code>DevEndpoint</code>.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role used in this
              <code>DevEndpoint</code>.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: A list of security group identifiers used in this <code>DevEndpoint</code>.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The subnet ID for this <code>DevEndpoint</code>.
        YarnEndpointAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The YARN endpoint address used by this <code>DevEndpoint</code>.
        PrivateAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A private IP address to access the <code>DevEndpoint</code>
              within a VPC if the <code>DevEndpoint</code> is created within one.
              The <code>PrivateAddress</code> field is present only when you create
              the <code>DevEndpoint</code> within your VPC.
        ZeppelinRemoteSparkInterpreterPort:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The Apache Zeppelin port for the remote Apache Spark interpreter.
        PublicAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The public IP address used by this <code>DevEndpoint</code>.
              The <code>PublicAddress</code> field is present only when you create
              a non-virtual private cloud (VPC) <code>DevEndpoint</code>.
        Status:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The current status of this <code>DevEndpoint</code>.
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated to the\
              \ development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p>\
              \ <ul> <li> <p>For the <code>Standard</code> worker type, each worker\
              \ provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors\
              \ per worker.</p> </li> <li> <p>For the <code>G.1X</code> worker type,\
              \ each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and\
              \ provides 1 executor per worker. We recommend this worker type for\
              \ memory-intensive jobs.</p> </li> <li> <p>For the <code>G.2X</code>\
              \ worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128\
              \ GB disk), and provides 1 executor per worker. We recommend this worker\
              \ type for memory-intensive jobs.</p> </li> </ul> <p>Known issue: when\
              \ a development endpoint is created with the <code>G.2X</code> <code>WorkerType</code>\
              \ configuration, the Spark drivers for the development endpoint will\
              \ run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>"
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>Glue version determines the versions of Apache Spark\
              \ and Python that Glue supports. The Python version indicates the version\
              \ supported for running your ETL scripts on development endpoints. </p>\
              \ <p>For more information about the available Glue versions and corresponding\
              \ Spark and Python versions, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p> <p>Development endpoints\
              \ that are created without specifying a Glue version default to Glue\
              \ 0.9.</p> <p>You can specify a version of Python support for development\
              \ endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code>\
              \ or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided,\
              \ the version defaults to Python 2.</p>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "<p>The number of workers of a defined <code>workerType</code>\
              \ that are allocated to the development endpoint.</p> <p>The maximum\
              \ number of workers you can define are 299 for <code>G.1X</code>, and\
              \ 149 for <code>G.2X</code>. </p>"
        NumberOfNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The number of Glue Data Processing Units (DPUs) allocated
              to this <code>DevEndpoint</code>.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The Amazon Web Services Availability Zone where this <code>DevEndpoint</code>
              is located.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.
        ExtraPythonLibsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "<p>The paths to one or more Python libraries in an Amazon\
              \ S3 bucket that should be loaded in your <code>DevEndpoint</code>.\
              \ Multiple values must be complete paths separated by a comma.</p> <note>\
              \ <p>You can only use pure Python libraries with a <code>DevEndpoint</code>.\
              \ Libraries that rely on C extensions, such as the <a href=\"http://pandas.pydata.org/\"\
              >pandas</a> Python data analysis library, are not currently supported.</p>\
              \ </note>"
        ExtraJarsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: <p>The path to one or more Java <code>.jar</code> files in
              an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p>
              <note> <p>You can only use pure Java/Scala libraries with a <code>DevEndpoint</code>.</p>
              </note>
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The reason for a current failure in this <code>DevEndpoint</code>.
        LastUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The status of the last update.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The point in time at which this DevEndpoint was created.
        LastModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The point in time at which this <code>DevEndpoint</code>
              was last modified.
        PublicKey:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The public key to be used by this <code>DevEndpoint</code>
              for authentication. This attribute is provided for backward compatibility
              because the recommended attribute to use is public keys.
        PublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeysList'
          - description: "<p>A list of public keys to be used by the <code>DevEndpoints</code>\
              \ for authentication. Using this attribute is preferred over a single\
              \ public key because the public keys allow you to have a different private\
              \ key per client.</p> <note> <p>If you previously created an endpoint\
              \ with a public key, you must remove that key to be able to set a list\
              \ of public keys. Call the <code>UpdateDevEndpoint</code> API operation\
              \ with the public key content in the <code>deletePublicKeys</code> attribute,\
              \ and the list of new keys in the <code>addPublicKeys</code> attribute.</p>\
              \ </note>"
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this <code>DevEndpoint</code>.
        Arguments:
          allOf:
          - $ref: '#/components/schemas/MapValue'
          - description: "<p>A map of arguments used to configure the <code>DevEndpoint</code>.</p>\
              \ <p>Valid arguments are:</p> <ul> <li> <p> <code>\"--enable-glue-datacatalog\"\
              : \"\"</code> </p> </li> </ul> <p>You can specify a version of Python\
              \ support for development endpoints by using the <code>Arguments</code>\
              \ parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code>\
              \ APIs. If no arguments are provided, the version defaults to Python\
              \ 2.</p>"
      type: object
    DevEndpointCustomLibraries:
      description: Custom libraries to be loaded into a development endpoint.
      properties:
        ExtraPythonLibsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "<p>The paths to one or more Python libraries in an Amazon\
              \ Simple Storage Service (Amazon S3) bucket that should be loaded in\
              \ your <code>DevEndpoint</code>. Multiple values must be complete paths\
              \ separated by a comma.</p> <note> <p>You can only use pure Python libraries\
              \ with a <code>DevEndpoint</code>. Libraries that rely on C extensions,\
              \ such as the <a href=\"http://pandas.pydata.org/\">pandas</a> Python\
              \ data analysis library, are not currently supported.</p> </note>"
        ExtraJarsS3Path:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: <p>The path to one or more Java <code>.jar</code> files in
              an S3 bucket that should be loaded in your <code>DevEndpoint</code>.</p>
              <note> <p>You can only use pure Java/Scala libraries with a <code>DevEndpoint</code>.</p>
              </note>
      type: object
    DevEndpointNameList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    JDBCConnectionType:
      enum:
      - sqlserver
      - mysql
      - oracle
      - postgresql
      - redshift
      type: string
    DirectSchemaChangePolicy:
      description: A policy that specifies update behavior for the crawler.
      properties:
        EnableUpdateCatalog:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether to use the specified update behavior when the crawler
              finds a changed schema.
        UpdateBehavior:
          allOf:
          - $ref: '#/components/schemas/UpdateCatalogBehavior'
          - description: The update behavior when the crawler finds a changed schema.
        Table:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the table in the database that the schema change
              policy applies to.
        Database:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the database that the schema change policy applies
              to.
      type: object
    Double:
      format: double
      type: number
    DoubleValue:
      format: double
      type: number
    LimitedPathList:
      items:
        $ref: '#/components/schemas/LimitedStringList'
      type: array
    NullCheckBoxList:
      description: Represents whether certain values are recognized as null values
        for removal.
      properties:
        IsEmpty:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Specifies that an empty string is considered as a null value.
        IsNullString:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Specifies that a value spelling out the word 'null' is considered
              as a null value.
        IsNegOne:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Specifies that an integer value of -1 is considered as a
              null value.
      type: object
    NullValueFields:
      items:
        $ref: '#/components/schemas/NullValueField'
      maxItems: 50
      minItems: 0
      type: array
    TransformConfigParameterList:
      items:
        $ref: '#/components/schemas/TransformConfigParameter'
      type: array
    Path:
      type: string
    DynamoDBTarget:
      description: Specifies an Amazon DynamoDB table to crawl.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The name of the DynamoDB table to crawl.
        scanAll:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "<p>Indicates whether to scan all the records, or to sample\
              \ rows from the table. Scanning all the records can take a long time\
              \ when the table is not a high throughput table.</p> <p>A value of <code>true</code>\
              \ means to scan all records, while a value of <code>false</code> means\
              \ to sample the records. If no value is specified, the value defaults\
              \ to <code>true</code>.</p>"
        scanRate:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>The percentage of the configured read capacity units\
              \ to use by the Glue crawler. Read capacity units is a term defined\
              \ by DynamoDB, and is a numeric value that acts as rate limiter for\
              \ the number of reads that can be performed on that table per second.</p>\
              \ <p>The valid values are null or a value between 0.1 to 1.5. A null\
              \ value is used when user does not provide a value, and defaults to\
              \ 0.5 of the configured Read Capacity Unit (for provisioned tables),\
              \ or 0.25 of the max configured Read Capacity Unit (for tables using\
              \ on-demand mode).</p>"
      type: object
    Edge:
      description: An edge represents a directed connection between two Glue components
        that are part of the workflow the edge belongs to.
      properties:
        SourceId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique of the node within the workflow where the edge
              starts.
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique of the node within the workflow where the edge
              ends.
      type: object
    EdgeList:
      items:
        $ref: '#/components/schemas/Edge'
      type: array
    JdbcMetadataEntry:
      enum:
      - COMMENTS
      - RAWTYPES
      type: string
    EnableAdditionalMetadata:
      items:
        $ref: '#/components/schemas/JdbcMetadataEntry'
      type: array
    EnableHybridValues:
      enum:
      - "TRUE"
      - "FALSE"
      type: string
    EnclosedInStringPropertiesMinOne:
      items:
        $ref: '#/components/schemas/EnclosedInStringProperty'
      type: array
    S3EncryptionList:
      items:
        $ref: '#/components/schemas/S3Encryption'
      type: array
    JobBookmarksEncryption:
      description: Specifies how job bookmark data should be encrypted.
      properties:
        JobBookmarksEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/JobBookmarksEncryptionMode'
          - description: The encryption mode to use for job bookmarks data.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the KMS key to be used
              to encrypt the data.
      type: object
    ErrorCodeString:
      type: string
    ErrorMessageString:
      type: string
    ErrorDetails:
      description: An object containing error details.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCodeString'
          - description: The error code for an error.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessageString'
          - description: The error message for an error.
      type: object
    TransformType:
      enum:
      - FIND_MATCHES
      type: string
    FindMatchesMetrics:
      description: "The evaluation metrics for the find matches algorithm. The quality\
        \ of your machine learning transform is measured by getting your transform\
        \ to predict some matches and comparing the results to known matches from\
        \ the same dataset. The quality metrics are based on a subset of your data,\
        \ so they are not precise."
      properties:
        AreaUnderPRCurve:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "<p>The area under the precision/recall curve (AUPRC) is\
              \ a single number measuring the overall quality of the transform, that\
              \ is independent of the choice made for precision vs. recall. Higher\
              \ values indicate that you have a more attractive precision vs. recall\
              \ tradeoff.</p> <p>For more information, see <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\"\
              >Precision and recall</a> in Wikipedia.</p>"
        Precision:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "<p>The precision metric indicates when often your transform\
              \ is correct when it predicts a match. Specifically, it measures how\
              \ well the transform finds true positives from the total true positives\
              \ possible.</p> <p>For more information, see <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\"\
              >Precision and recall</a> in Wikipedia.</p>"
        Recall:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "<p>The recall metric indicates that for an actual match,\
              \ how often your transform predicts the match. Specifically, it measures\
              \ how well the transform finds true positives from the total records\
              \ in the source data.</p> <p>For more information, see <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\"\
              >Precision and recall</a> in Wikipedia.</p>"
        F1:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "<p>The maximum F1 metric indicates the transform's accuracy\
              \ between 0 and 1, where 1 is the best accuracy.</p> <p>For more information,\
              \ see <a href=\"https://en.wikipedia.org/wiki/F1_score\">F1 score</a>\
              \ in Wikipedia.</p>"
        ConfusionMatrix:
          $ref: '#/components/schemas/FindMatchesMetrics_ConfusionMatrix'
        ColumnImportances:
          allOf:
          - $ref: '#/components/schemas/ColumnImportanceList'
          - description: "A list of <code>ColumnImportance</code> structures containing\
              \ column importance metrics, sorted in order of descending importance."
      type: object
    EvaluationMetrics:
      description: Evaluation metrics provide an estimate of the quality of your machine
        learning transform.
      properties:
        TransformType:
          allOf:
          - $ref: '#/components/schemas/TransformType'
          - description: The type of machine learning transform.
        FindMatchesMetrics:
          $ref: '#/components/schemas/EvaluationMetrics_FindMatchesMetrics'
      required:
      - TransformType
      type: object
    MaxConcurrentRuns:
      type: integer
    ExecutionTime:
      type: integer
    ExistCondition:
      enum:
      - MUST_EXIST
      - NOT_EXIST
      - NONE
      type: string
    ExportLabelsTaskRunProperties:
      description: Specifies configuration properties for an exporting labels task
        run.
      properties:
        OutputS3Path:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon Simple Storage Service (Amazon S3) path where
              you will export the labels.
      type: object
    FederationIdentifier:
      maxLength: 512
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    FederatedTable:
      description: A table that points to an entity outside the Glue Data Catalog.
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/FederationIdentifier'
          - description: A unique identifier for the federated table.
        DatabaseIdentifier:
          allOf:
          - $ref: '#/components/schemas/FederationIdentifier'
          - description: A unique identifier for the federated database.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the connection to the external metastore.
      type: object
    FieldType:
      type: string
    FilterLogicalOperator:
      enum:
      - AND
      - OR
      type: string
    FilterExpressions:
      items:
        $ref: '#/components/schemas/FilterExpression'
      type: array
    FilterOperation:
      enum:
      - EQ
      - LT
      - GT
      - LTE
      - GTE
      - REGEX
      - ISNULL
      type: string
    FilterValues:
      items:
        $ref: '#/components/schemas/FilterValue'
      type: array
    FilterExpression:
      description: Specifies a filter expression.
      properties:
        Operation:
          allOf:
          - $ref: '#/components/schemas/FilterOperation'
          - description: The type of operation to perform in the expression.
        Negated:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Whether the expression is to be negated.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: A list of filter values.
      required:
      - Operation
      - Values
      type: object
    FilterString:
      maxLength: 2048
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    FilterValueType:
      enum:
      - COLUMNEXTRACTED
      - CONSTANT
      type: string
    FilterValue:
      description: 'Represents a single entry in the list of values for a <code>FilterExpression</code>. '
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/FilterValueType'
          - description: The type of filter value.
        Value:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: The value to be associated.
      required:
      - Type
      - Value
      type: object
    FindMatchesParameters:
      description: The parameters to configure the find matches transform.
      properties:
        PrimaryKeyColumnName:
          allOf:
          - $ref: '#/components/schemas/ColumnNameString'
          - description: The name of a column that uniquely identifies rows in the
              source table. Used to help identify matching records.
        PrecisionRecallTradeoff:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "<p>The value selected when tuning your transform for a balance\
              \ between precision and recall. A value of 0.5 means no preference;\
              \ a value of 1.0 means a bias purely for precision, and a value of 0.0\
              \ means a bias for recall. Because this is a tradeoff, choosing values\
              \ close to 1.0 means very low recall, and choosing values close to 0.0\
              \ results in very low precision.</p> <p>The precision metric indicates\
              \ how often your model is correct when it predicts a match. </p> <p>The\
              \ recall metric indicates that for an actual match, how often your model\
              \ predicts the match.</p>"
        AccuracyCostTradeoff:
          allOf:
          - $ref: '#/components/schemas/GenericBoundedDouble'
          - description: "<p>The value that is selected when tuning your transform\
              \ for a balance between accuracy and cost. A value of 0.5 means that\
              \ the system balances accuracy and cost concerns. A value of 1.0 means\
              \ a bias purely for accuracy, which typically results in a higher cost,\
              \ sometimes substantially higher. A value of 0.0 means a bias purely\
              \ for cost, which results in a less accurate <code>FindMatches</code>\
              \ transform, sometimes with unacceptable accuracy.</p> <p>Accuracy measures\
              \ how well the transform finds true positives and true negatives. Increasing\
              \ accuracy requires more machine resources and cost. But it also results\
              \ in increased recall. </p> <p>Cost measures how many compute resources,\
              \ and thus money, are consumed to run the transform.</p>"
        EnforceProvidedLabels:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "<p>The value to switch on or off to force the output to\
              \ match the provided labels from users. If the value is <code>True</code>,\
              \ the <code>find matches</code> transform forces the output to match\
              \ the provided labels. The results override the normal conflation results.\
              \ If the value is <code>False</code>, the <code>find matches</code>\
              \ transform does not ensure all the labels provided are respected, and\
              \ the results rely on the trained model.</p> <p>Note that setting this\
              \ value to true may increase the conflation execution time.</p>"
      type: object
    FindMatchesTaskRunProperties:
      description: Specifies configuration properties for a Find Matches task run.
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The job ID for the Find Matches task run.
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name assigned to the job for the Find Matches task run.
        JobRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The job run ID for the Find Matches task run.
      type: object
    FormatString:
      maxLength: 128
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    PageSize:
      maximum: 1000
      minimum: 1
      type: integer
    Token:
      type: string
    GetColumnNamesList:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 100
      minItems: 0
      type: array
    GetConnectionsFilter:
      description: Filters the connection definitions that are returned by the <code>GetConnections</code>
        API operation.
      properties:
        MatchCriteria:
          allOf:
          - $ref: '#/components/schemas/MatchCriteria'
          - description: A criteria string that must match the criteria recorded in
              the connection definition for that connection definition to be returned.
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/ConnectionType'
          - description: "The type of connections to return. Currently, SFTP is not\
              \ supported."
      type: object
    RulesetNames:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 10
      minItems: 1
      type: array
    ResourceShareType:
      enum:
      - FOREIGN
      - ALL
      - FEDERATED
      type: string
    JobName:
      type: string
    RunId:
      type: string
    JobBookmarkEntry:
      description: Defines a point that a job can resume processing.
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The name of the job in question.
        Version:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The version of the job.
        Run:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The run ID number.
        Attempt:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The attempt ID number.
        PreviousRunId:
          allOf:
          - $ref: '#/components/schemas/RunId'
          - description: The unique run identifier associated with the previous job
              run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/RunId'
          - description: The run ID number.
        JobBookmark:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: The bookmark itself.
      type: object
    Job:
      description: Specifies a job definition.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name you assign to this job definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the job.
        LogUri:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: This field is reserved for future use.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: The name or Amazon Resource Name (ARN) of the IAM role associated
              with this job.
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The time and date that this job definition was created.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The last point in time when this job definition was modified.
        ExecutionProperty:
          $ref: '#/components/schemas/CreateJobRequest_ExecutionProperty'
        Command:
          $ref: '#/components/schemas/CreateJobRequest_Command'
        DefaultArguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "<p>The default arguments for every run of this job, specified\
              \ as name-value pairs.</p> <p>You can specify arguments here that your\
              \ own job-execution script consumes, as well as arguments that Glue\
              \ itself consumes.</p> <p>Job arguments may be logged. Do not pass plaintext\
              \ secrets as arguments. Retrieve secrets from a Glue Connection, Secrets\
              \ Manager or other secret management mechanism if you intend to keep\
              \ them within the Job. </p> <p>For information about how to specify\
              \ and consume your own Job arguments, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html\"\
              >Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For\
              \ information about the arguments you can provide to this field when\
              \ configuring Spark jobs, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
              >Special Parameters Used by Glue</a> topic in the developer guide.</p>\
              \ <p>For information about the arguments you can provide to this field\
              \ when configuring Ray jobs, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-job-parameters.html\"\
              >Using job parameters in Ray jobs</a> in the developer guide.</p>"
        NonOverridableArguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "Arguments for this job that are not overridden when providing\
              \ job arguments in a job run, specified as name-value pairs."
        Connections:
          $ref: '#/components/schemas/CreateJobRequest_Connections'
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          - description: The maximum number of times to retry this job after a JobRun
              fails.
        AllocatedCapacity:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - deprecated: true
            description: "<p>This field is deprecated. Use <code>MaxCapacity</code>\
              \ instead.</p> <p>The number of Glue data processing units (DPUs) allocated\
              \ to runs of this job. You can allocate a minimum of 2 DPUs; the default\
              \ is 10. A DPU is a relative measure of processing power that consists\
              \ of 4 vCPUs of compute capacity and 16 GB of memory. For more information,\
              \ see the <a href=\"https://aws.amazon.com/glue/pricing/\">Glue pricing\
              \ page</a>.</p> <p/>This property is deprecated, use MaxCapacity instead."
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The job timeout in minutes. This is the maximum time that\
              \ a job run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>For Glue version 1.0 or earlier jobs, using the standard\
              \ worker type, the number of Glue data processing units (DPUs) that\
              \ can be allocated when this job runs. A DPU is a relative measure of\
              \ processing power that consists of 4 vCPUs of compute capacity and\
              \ 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              > Glue pricing page</a>.</p> <p>For Glue version 2.0 or later jobs,\
              \ you cannot specify a <code>Maximum capacity</code>. Instead, you should\
              \ specify a <code>Worker type</code> and the <code>Number of workers</code>.</p>\
              \ <p>Do not set <code>MaxCapacity</code> if using <code>WorkerType</code>\
              \ and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated\
              \ for <code>MaxCapacity</code> depends on whether you are running a\
              \ Python shell job, an Apache Spark ETL job, or an Apache Spark streaming\
              \ ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>=\"\
              pythonshell\"), you can allocate either 0.0625 or 1 DPU. The default\
              \ is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark\
              \ ETL job (<code>JobCommand.Name</code>=\"glueetl\") or Apache Spark\
              \ streaming ETL job (<code>JobCommand.Name</code>=\"gluestreaming\"\
              ), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This\
              \ job type cannot have a fractional DPU allocation.</p> </li> </ul>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a job runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for\
              \ Spark jobs. Accepts the value Z.2X for Ray jobs.</p> <ul> <li> <p>For\
              \ the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs,\
              \ 16 GB of memory) with 84GB disk (approximately 34GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs,\
              \ 32 GB of memory) with 128GB disk (approximately 77GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs,\
              \ 64 GB of memory) with 256GB disk (approximately 235GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for jobs whose\
              \ workloads contain your most demanding transforms, aggregations, joins,\
              \ and queries. This worker type is available only for Glue version 3.0\
              \ or later Spark ETL jobs in the following Amazon Web Services Regions:\
              \ US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific\
              \ (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central),\
              \ Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p>\
              \ </li> <li> <p>For the <code>G.8X</code> worker type, each worker maps\
              \ to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately\
              \ 487GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for jobs whose workloads contain your most demanding transforms,\
              \ aggregations, joins, and queries. This worker type is available only\
              \ for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web\
              \ Services Regions as supported for the <code>G.4X</code> worker type.</p>\
              \ </li> <li> <p>For the <code>G.025X</code> worker type, each worker\
              \ maps to 0.25 DPU (2 vCPUs, 4 GB of memory) with 84GB disk (approximately\
              \ 34GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for low volume streaming jobs. This worker type is only\
              \ available for Glue version 3.0 streaming jobs.</p> </li> <li> <p>For\
              \ the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs,\
              \ 64 GB of memory) with 128 GB disk (approximately 120GB free), and\
              \ provides up to 8 Ray workers based on the autoscaler.</p> </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when a job runs.
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this job.
        NotificationProperty:
          $ref: '#/components/schemas/CreateJobRequest_NotificationProperty'
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>In Spark jobs, <code>GlueVersion</code> determines the\
              \ versions of Apache Spark and Python that Glue available in a job.\
              \ The Python version indicates the version supported for jobs of type\
              \ Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code>\
              \ or greater. However, the versions of Ray, Python and additional libraries\
              \ available in your Ray job are determined by the <code>Runtime</code>\
              \ parameter of the Job command.</p> <p>For more information about the\
              \ available Glue versions and corresponding Spark and Python versions,\
              \ see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p> <p>Jobs that are created\
              \ without specifying a Glue version default to Glue 0.9.</p>"
        CodeGenConfigurationNodes:
          allOf:
          - $ref: '#/components/schemas/CodeGenConfigurationNodes'
          - description: The representation of a directed acyclic graph on which both
              the Glue Studio visual component and Glue Studio code generation is
              based.
        ExecutionClass:
          allOf:
          - $ref: '#/components/schemas/ExecutionClass'
          - description: <p>Indicates whether the job is run with a standard or flexible
              execution class. The standard execution class is ideal for time-sensitive
              workloads that require fast job startup and dedicated resources.</p>
              <p>The flexible execution class is appropriate for time-insensitive
              jobs whose start and completion times may vary. </p> <p>Only jobs with
              Glue version 3.0 and above and command type <code>glueetl</code> will
              be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>.
              The flexible execution class is available for Spark jobs.</p>
        SourceControlDetails:
          $ref: '#/components/schemas/CreateJobRequest_SourceControlDetails'
      type: object
    JobRun:
      description: Contains information about a job run.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of this job run.
        Attempt:
          allOf:
          - $ref: '#/components/schemas/AttemptCount'
          - description: The number of the attempt to run this job.
        PreviousRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: "The ID of the previous run of this job. For example, the\
              \ <code>JobRunId</code> specified in the <code>StartJobRun</code> action."
        TriggerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger that started this job run.
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition being used in this run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time at which this job run was started.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The last time that this job run was modified.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time that this job run completed.
        JobRunState:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          - description: "The current state of the job run. For more information about\
              \ the statuses of jobs that have terminated abnormally, see <a href=\"\
              https://docs.aws.amazon.com/glue/latest/dg/job-run-statuses.html\">Glue\
              \ Job Run Statuses</a>."
        Arguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "<p>The job arguments associated with this run. For this\
              \ job run, they replace the default arguments set in the job definition\
              \ itself.</p> <p>You can specify arguments here that your own job-execution\
              \ script consumes, as well as arguments that Glue itself consumes.</p>\
              \ <p>Job arguments may be logged. Do not pass plaintext secrets as arguments.\
              \ Retrieve secrets from a Glue Connection, Secrets Manager or other\
              \ secret management mechanism if you intend to keep them within the\
              \ Job. </p> <p>For information about how to specify and consume your\
              \ own Job arguments, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html\"\
              >Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For\
              \ information about the arguments you can provide to this field when\
              \ configuring Spark jobs, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
              >Special Parameters Used by Glue</a> topic in the developer guide.</p>\
              \ <p>For information about the arguments you can provide to this field\
              \ when configuring Ray jobs, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-job-parameters.html\"\
              >Using job parameters in Ray jobs</a> in the developer guide.</p>"
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorString'
          - description: An error message associated with this job run.
        PredecessorRuns:
          allOf:
          - $ref: '#/components/schemas/PredecessorList'
          - description: A list of predecessors to this job run.
        AllocatedCapacity:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - deprecated: true
            description: "<p>This field is deprecated. Use <code>MaxCapacity</code>\
              \ instead.</p> <p>The number of Glue data processing units (DPUs) allocated\
              \ to this JobRun. From 2 to 100 DPUs can be allocated; the default is\
              \ 10. A DPU is a relative measure of processing power that consists\
              \ of 4 vCPUs of compute capacity and 16 GB of memory. For more information,\
              \ see the <a href=\"https://aws.amazon.com/glue/pricing/\">Glue pricing\
              \ page</a>.</p>This property is deprecated, use MaxCapacity instead."
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          - description: The amount of time (in seconds) that the job run consumed
              resources.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "<p>The <code>JobRun</code> timeout in minutes. This is the\
              \ maximum time that a job run can consume resources before it is terminated\
              \ and enters <code>TIMEOUT</code> status. This value overrides the timeout\
              \ value set in the parent job.</p> <p>Streaming jobs do not have a timeout.\
              \ The default for non-streaming jobs is 2,880 minutes (48 hours).</p>"
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>For Glue version 1.0 or earlier jobs, using the standard\
              \ worker type, the number of Glue data processing units (DPUs) that\
              \ can be allocated when this job runs. A DPU is a relative measure of\
              \ processing power that consists of 4 vCPUs of compute capacity and\
              \ 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              > Glue pricing page</a>.</p> <p>For Glue version 2.0+ jobs, you cannot\
              \ specify a <code>Maximum capacity</code>. Instead, you should specify\
              \ a <code>Worker type</code> and the <code>Number of workers</code>.</p>\
              \ <p>Do not set <code>MaxCapacity</code> if using <code>WorkerType</code>\
              \ and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated\
              \ for <code>MaxCapacity</code> depends on whether you are running a\
              \ Python shell job, an Apache Spark ETL job, or an Apache Spark streaming\
              \ ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>=\"\
              pythonshell\"), you can allocate either 0.0625 or 1 DPU. The default\
              \ is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark\
              \ ETL job (<code>JobCommand.Name</code>=\"glueetl\") or Apache Spark\
              \ streaming ETL job (<code>JobCommand.Name</code>=\"gluestreaming\"\
              ), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This\
              \ job type cannot have a fractional DPU allocation.</p> </li> </ul>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a job runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for\
              \ Spark jobs. Accepts the value Z.2X for Ray jobs.</p> <ul> <li> <p>For\
              \ the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs,\
              \ 16 GB of memory) with 84GB disk (approximately 34GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs,\
              \ 32 GB of memory) with 128GB disk (approximately 77GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs,\
              \ 64 GB of memory) with 256GB disk (approximately 235GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for jobs whose\
              \ workloads contain your most demanding transforms, aggregations, joins,\
              \ and queries. This worker type is available only for Glue version 3.0\
              \ or later Spark ETL jobs in the following Amazon Web Services Regions:\
              \ US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific\
              \ (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central),\
              \ Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p>\
              \ </li> <li> <p>For the <code>G.8X</code> worker type, each worker maps\
              \ to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately\
              \ 487GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for jobs whose workloads contain your most demanding transforms,\
              \ aggregations, joins, and queries. This worker type is available only\
              \ for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web\
              \ Services Regions as supported for the <code>G.4X</code> worker type.</p>\
              \ </li> <li> <p>For the <code>G.025X</code> worker type, each worker\
              \ maps to 0.25 DPU (2 vCPUs, 4 GB of memory) with 84GB disk (approximately\
              \ 34GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for low volume streaming jobs. This worker type is only\
              \ available for Glue version 3.0 streaming jobs.</p> </li> <li> <p>For\
              \ the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs,\
              \ 64 GB of memory) with 128 GB disk (approximately 120GB free), and\
              \ provides up to 8 Ray workers based on the autoscaler.</p> </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when a job runs.
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this job run.
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The name of the log group for secure logging that can be\
              \ server-side encrypted in Amazon CloudWatch using KMS. This name can\
              \ be <code>/aws-glue/jobs/</code>, in which case the default encryption\
              \ is <code>NONE</code>. If you add a role name and <code>SecurityConfiguration</code>\
              \ name (in other words, <code>/aws-glue/jobs-yourRoleName-yourSecurityConfigurationName/</code>),\
              \ then that security configuration is used to encrypt the log group."
        NotificationProperty:
          $ref: '#/components/schemas/StartJobRunRequest_NotificationProperty'
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>In Spark jobs, <code>GlueVersion</code> determines the\
              \ versions of Apache Spark and Python that Glue available in a job.\
              \ The Python version indicates the version supported for jobs of type\
              \ Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code>\
              \ or greater. However, the versions of Ray, Python and additional libraries\
              \ available in your Ray job are determined by the <code>Runtime</code>\
              \ parameter of the Job command.</p> <p>For more information about the\
              \ available Glue versions and corresponding Spark and Python versions,\
              \ see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p> <p>Jobs that are created\
              \ without specifying a Glue version default to Glue 0.9.</p>"
        DPUSeconds:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "This field populates only for Auto Scaling job runs, and\
              \ represents the total time each executor ran during the lifecycle of\
              \ a job run in seconds, multiplied by a DPU factor (1 for <code>G.1X</code>,\
              \ 2 for <code>G.2X</code>, or 0.25 for <code>G.025X</code> workers).\
              \ This value may be different than the <code>executionEngineRuntime</code>\
              \ * <code>MaxCapacity</code> as in the case of Auto Scaling jobs, as\
              \ the number of executors running at a given time may be less than the\
              \ <code>MaxCapacity</code>. Therefore, it is possible that the value\
              \ of <code>DPUSeconds</code> is less than <code>executionEngineRuntime</code>\
              \ * <code>MaxCapacity</code>."
        ExecutionClass:
          allOf:
          - $ref: '#/components/schemas/ExecutionClass'
          - description: <p>Indicates whether the job is run with a standard or flexible
              execution class. The standard execution-class is ideal for time-sensitive
              workloads that require fast job startup and dedicated resources.</p>
              <p>The flexible execution class is appropriate for time-insensitive
              jobs whose start and completion times may vary. </p> <p>Only jobs with
              Glue version 3.0 and above and command type <code>glueetl</code> will
              be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>.
              The flexible execution class is available for Spark jobs.</p>
      type: object
    JobRunList:
      items:
        $ref: '#/components/schemas/JobRun'
      type: array
    TaskRunProperties:
      description: The configuration properties for the task run.
      properties:
        TaskType:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          - description: The type of task run.
        ImportLabelsTaskRunProperties:
          $ref: '#/components/schemas/TaskRunProperties_ImportLabelsTaskRunProperties'
        ExportLabelsTaskRunProperties:
          $ref: '#/components/schemas/TaskRunProperties_ExportLabelsTaskRunProperties'
        LabelingSetGenerationTaskRunProperties:
          $ref: '#/components/schemas/TaskRunProperties_LabelingSetGenerationTaskRunProperties'
        FindMatchesTaskRunProperties:
          $ref: '#/components/schemas/TaskRunProperties_FindMatchesTaskRunProperties'
      type: object
    PaginationToken:
      type: string
    TaskRunFilterCriteria:
      description: The criteria that are used to filter the task runs for the machine
        learning transform.
      properties:
        TaskRunType:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          - description: The type of task run.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The current status of the task run.
        StartedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on task runs started before this date.
        StartedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on task runs started after this date.
      type: object
    TaskRunSortCriteria:
      description: The sorting criteria that are used to sort the list of task runs
        for the machine learning transform.
      properties:
        Column:
          allOf:
          - $ref: '#/components/schemas/TaskRunSortColumnType'
          - description: The column to be used to sort the list of task runs for the
              machine learning transform.
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/SortDirectionType'
          - description: The sort direction to be used to sort the list of task runs
              for the machine learning transform.
      required:
      - Column
      - SortDirection
      type: object
    TaskRunList:
      items:
        $ref: '#/components/schemas/TaskRun'
      type: array
    TransformStatusType:
      enum:
      - NOT_READY
      - READY
      - DELETING
      type: string
    LabelCount:
      type: integer
    TransformSchema:
      items:
        $ref: '#/components/schemas/SchemaColumn'
      maxItems: 100
      type: array
    TransformFilterCriteria:
      description: The criteria used to filter the machine learning transforms.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A unique transform name that is used to filter the machine
              learning transforms.
        TransformType:
          allOf:
          - $ref: '#/components/schemas/TransformType'
          - description: The type of machine learning transform that is used to filter
              the machine learning transforms.
        Status:
          allOf:
          - $ref: '#/components/schemas/TransformStatusType'
          - description: "Filters the list of machine learning transforms by the last\
              \ known status of the transforms (to indicate whether a transform can\
              \ be used or not). One of \"NOT_READY\", \"READY\", or \"DELETING\"."
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "This value determines which version of Glue this machine\
              \ learning transform is compatible with. Glue 1.0 is recommended for\
              \ most customers. If the value is not set, the Glue compatibility defaults\
              \ to Glue 0.9. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions\"\
              >Glue Versions</a> in the developer guide."
        CreatedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time and date before which the transforms were created.
        CreatedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time and date after which the transforms were created.
        LastModifiedBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on transforms last modified before this date.
        LastModifiedAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter on transforms last modified after this date.
        Schema:
          allOf:
          - $ref: '#/components/schemas/TransformSchema'
          - description: "Filters on datasets with a specific schema. The <code>Map&lt;Column,\
              \ Type&gt;</code> object is an array of key-value pairs representing\
              \ the schema this transform accepts, where <code>Column</code> is the\
              \ name of a column, and <code>Type</code> is the type of the data such\
              \ as an integer or string. Has an upper bound of 100 columns."
      type: object
    TransformSortCriteria:
      description: The sorting criteria that are associated with the machine learning
        transform.
      properties:
        Column:
          allOf:
          - $ref: '#/components/schemas/TransformSortColumnType'
          - description: The column to be used in the sorting criteria that are associated
              with the machine learning transform.
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/SortDirectionType'
          - description: The sort direction to be used in the sorting criteria that
              are associated with the machine learning transform.
      required:
      - Column
      - SortDirection
      type: object
    TransformList:
      items:
        $ref: '#/components/schemas/MLTransform'
      type: array
    Location:
      description: The location of resources.
      properties:
        Jdbc:
          allOf:
          - $ref: '#/components/schemas/CodeGenNodeArgs'
          - description: A JDBC location.
        S3:
          allOf:
          - $ref: '#/components/schemas/CodeGenNodeArgs'
          - description: An Amazon Simple Storage Service (Amazon S3) location.
        DynamoDB:
          allOf:
          - $ref: '#/components/schemas/CodeGenNodeArgs'
          - description: An Amazon DynamoDB table location.
      type: object
    MappingList:
      items:
        $ref: '#/components/schemas/MappingEntry'
      type: array
    PartitionIndexDescriptorList:
      items:
        $ref: '#/components/schemas/PartitionIndexDescriptor'
      type: array
    Partition:
      description: Represents a slice of table data.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The values of the partition.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database in which to create the partition.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the database table in which to create the partition.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the partition was created.
        LastAccessTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time at which the partition was accessed.
        StorageDescriptor:
          $ref: '#/components/schemas/PartitionInput_StorageDescriptor'
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define partition parameters.
        LastAnalyzedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time at which column statistics were computed for
              this partition.
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the Data Catalog in which the partition resides.
      type: object
    Segment:
      description: "Defines a non-overlapping region of a table's partitions, allowing\
        \ multiple requests to be run in parallel."
      properties:
        SegmentNumber:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: "The zero-based index number of the segment. For example,\
              \ if the total number of segments is 4, <code>SegmentNumber</code> values\
              \ range from 0 through 3."
        TotalSegments:
          allOf:
          - $ref: '#/components/schemas/TotalSegmentsInteger'
          - description: The total number of segments.
      required:
      - SegmentNumber
      - TotalSegments
      type: object
    UpdatedTimestamp:
      type: string
    GetResourcePoliciesResponseList:
      items:
        $ref: '#/components/schemas/GluePolicy'
      type: array
    GluePolicy:
      description: A structure for returning a resource policy.
      properties:
        PolicyInJson:
          allOf:
          - $ref: '#/components/schemas/PolicyJsonString'
          - description: "Contains the requested policy document, in JSON format."
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: Contains the hash value associated with this policy.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which the policy was created.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time at which the policy was last updated.
      type: object
    PolicyJsonString:
      minLength: 2
      type: string
    SchemaVersionNumber:
      description: A structure containing the schema version information.
      properties:
        LatestVersion:
          allOf:
          - $ref: '#/components/schemas/LatestSchemaVersionBoolean'
          - description: The latest version available for the schema.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
      type: object
    SchemaDiffType:
      enum:
      - SYNTAX_DIFF
      type: string
    SchemaDefinitionDiff:
      maxLength: 340000
      minLength: 1
      pattern: .*\S.*
      type: string
    SecurityConfiguration:
      description: Specifies a security configuration.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the security configuration.
        CreatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The time at which this security configuration was created.
        EncryptionConfiguration:
          $ref: '#/components/schemas/SecurityConfiguration_EncryptionConfiguration'
      type: object
    SecurityConfigurationList:
      items:
        $ref: '#/components/schemas/SecurityConfiguration'
      type: array
    Statement:
      description: The statement or request for a particular action to occur in a
        session.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The ID of the statement.
        Code:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The execution code of the statement.
        State:
          allOf:
          - $ref: '#/components/schemas/StatementState'
          - description: The state while request is actioned.
        Output:
          $ref: '#/components/schemas/Statement_Output'
        Progress:
          allOf:
          - $ref: '#/components/schemas/DoubleValue'
          - description: The code execution progress.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/LongValue'
          - description: The unix time and date that the job definition was started.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/LongValue'
          - description: The unix time and date that the job definition was completed.
      type: object
    Table:
      description: Represents a collection of related data organized in columns and
        rows.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The table name. For Hive compatibility, this must be entirely\
              \ lowercase."
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the database where the table metadata resides.\
              \ For Hive compatibility, this must be all lowercase."
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the table.
        Owner:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The owner of the table.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the table definition was created in the Data
              Catalog.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time that the table was updated.
        LastAccessTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The last time that the table was accessed. This is usually\
              \ taken from HDFS, and might not be reliable."
        LastAnalyzedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time that column statistics were computed for this
              table.
        Retention:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          - description: The retention time for this table.
        StorageDescriptor:
          $ref: '#/components/schemas/TableInput_StorageDescriptor'
        PartitionKeys:
          allOf:
          - $ref: '#/components/schemas/ColumnList'
          - description: "<p>A list of columns by which the table is partitioned.\
              \ Only primitive types are supported as partition keys.</p> <p>When\
              \ you create a table used by Amazon Athena, and you do not specify any\
              \ <code>partitionKeys</code>, you must at least set the value of <code>partitionKeys</code>\
              \ to an empty list. For example:</p> <p> <code>\"PartitionKeys\": []</code>\
              \ </p>"
        ViewOriginalText:
          allOf:
          - $ref: '#/components/schemas/ViewTextString'
          - description: "Included for Apache Hive compatibility. Not used in the\
              \ normal course of Glue operations. If the table is a <code>VIRTUAL_VIEW</code>,\
              \ certain Athena configuration encoded in base64."
        ViewExpandedText:
          allOf:
          - $ref: '#/components/schemas/ViewTextString'
          - description: Included for Apache Hive compatibility. Not used in the normal
              course of Glue operations.
        TableType:
          allOf:
          - $ref: '#/components/schemas/TableTypeString'
          - description: "<p>The type of this table. Glue will create tables with\
              \ the <code>EXTERNAL_TABLE</code> type. Other services, such as Athena,\
              \ may create tables with additional table types. </p> <p>Glue related\
              \ table types:</p> <dl> <dt>EXTERNAL_TABLE</dt> <dd> <p>Hive compatible\
              \ attribute - indicates a non-Hive managed table.</p> </dd> <dt>GOVERNED</dt>\
              \ <dd> <p>Used by Lake Formation. The Glue Data Catalog understands\
              \ <code>GOVERNED</code>.</p> </dd> </dl>"
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define properties associated with the
              table.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The person or entity who created the table.
        IsRegisteredWithLakeFormation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the table has been registered with Lake
              Formation.
        TargetTable:
          $ref: '#/components/schemas/TableInput_TargetTable'
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the Data Catalog in which the table resides.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The ID of the table version.
        FederatedTable:
          $ref: '#/components/schemas/Table_FederatedTable'
      required:
      - Name
      type: object
    TableVersion:
      description: Specifies a version of a table.
      properties:
        Table:
          $ref: '#/components/schemas/TableVersion_Table'
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The ID value that identifies this table version. A <code>VersionId</code>
              is a string representation of an integer. Each version is incremented
              by 1.
      type: object
    GetTableVersionsList:
      items:
        $ref: '#/components/schemas/TableVersion'
      type: array
    TableList:
      items:
        $ref: '#/components/schemas/Table'
      type: array
    Trigger:
      description: Information about a specific trigger.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the trigger.
        WorkflowName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow associated with the trigger.
        Id:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: Reserved for future use.
        Type:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: The type of trigger that this is.
        State:
          allOf:
          - $ref: '#/components/schemas/TriggerState'
          - description: The current state of the trigger.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of this trigger.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A <code>cron</code> expression used to specify the schedule\
              \ (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>."
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          - description: The actions initiated by this trigger.
        Predicate:
          $ref: '#/components/schemas/Trigger_Predicate'
        EventBatchingCondition:
          $ref: '#/components/schemas/CreateTriggerRequest_EventBatchingCondition'
      type: object
    PermissionTypeList:
      items:
        $ref: '#/components/schemas/PermissionType'
      maxItems: 255
      minItems: 1
      type: array
    UnfilteredPartitionList:
      items:
        $ref: '#/components/schemas/UnfilteredPartition'
      type: array
    UserDefinedFunction:
      description: Represents the equivalent of a Hive user-defined function (<code>UDF</code>)
        definition.
      properties:
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the function.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database that contains the function.
        ClassName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The Java class that contains the function code.
        OwnerName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The owner of the function.
        OwnerType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: The owner type.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the function was created.
        ResourceUris:
          allOf:
          - $ref: '#/components/schemas/ResourceUriList'
          - description: The resource URIs for the function.
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the Data Catalog in which the function resides.
      type: object
    UserDefinedFunctionList:
      items:
        $ref: '#/components/schemas/UserDefinedFunction'
      type: array
    Workflow:
      description: A workflow is a collection of multiple dependent Glue jobs and
        crawlers that are run to complete a complex ETL task. A workflow manages the
        execution and monitoring of all its jobs and crawlers.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the workflow.
        Description:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A description of the workflow.
        DefaultRunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: A collection of properties to be used as part of each execution
              of the workflow. The run properties are made available to each job in
              the workflow. A job can modify the properties for the next jobs in the
              flow.
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time when the workflow was created.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time when the workflow was last modified.
        LastRun:
          $ref: '#/components/schemas/Workflow_LastRun'
        Graph:
          $ref: '#/components/schemas/Workflow_Graph'
        MaxConcurrentRuns:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "You can use this parameter to prevent unwanted multiple\
              \ updates to data, to control costs, or in some cases, to prevent exceeding\
              \ the maximum number of concurrent runs of any of the component jobs.\
              \ If you leave this parameter blank, there is no limit to the number\
              \ of concurrent workflow runs."
        BlueprintDetails:
          $ref: '#/components/schemas/Workflow_BlueprintDetails'
      type: object
    WorkflowRun:
      description: A workflow run is an execution of a workflow providing all the
        runtime information.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the workflow that was run.
        WorkflowRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of this workflow run.
        PreviousRunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The ID of the previous workflow run.
        WorkflowRunProperties:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunProperties'
          - description: The workflow run properties which were set during the run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time when the workflow run was started.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/TimestampValue'
          - description: The date and time when the workflow run completed.
        Status:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunStatus'
          - description: The status of the workflow run.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorString'
          - description: "This error message describes any error that may have occurred\
              \ in starting the workflow run. Currently the only error message is\
              \ \"Concurrent runs exceeded for workflow: <code>foo</code>.\""
        Statistics:
          $ref: '#/components/schemas/WorkflowRun_Statistics'
        Graph:
          $ref: '#/components/schemas/Workflow_Graph'
        StartingEventBatchCondition:
          $ref: '#/components/schemas/WorkflowRun_StartingEventBatchCondition'
      type: object
    WorkflowRuns:
      items:
        $ref: '#/components/schemas/WorkflowRun'
      maxItems: 1000
      minItems: 1
      type: array
    GlueRecordType:
      enum:
      - DATE
      - STRING
      - TIMESTAMP
      - INT
      - FLOAT
      - LONG
      - BIGDECIMAL
      - BYTE
      - SHORT
      - DOUBLE
      type: string
    GlueStudioSchemaColumnList:
      items:
        $ref: '#/components/schemas/GlueStudioSchemaColumn'
      type: array
    GlueSchema:
      description: Specifies a user-defined schema when a schema cannot be determined
        by Glue.
      properties:
        Columns:
          allOf:
          - $ref: '#/components/schemas/GlueStudioSchemaColumnList'
          - description: Specifies the column definitions that make up a Glue schema.
      type: object
    GlueStudioColumnNameString:
      maxLength: 1024
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    GlueStudioSchemaColumn:
      description: Specifies a single column in a Glue schema definition.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GlueStudioColumnNameString'
          - description: The name of the column in the Glue Studio schema.
        Type:
          allOf:
          - $ref: '#/components/schemas/ColumnTypeString'
          - description: The hive type for this column in the Glue Studio schema.
      required:
      - Name
      type: object
    GlueTableAdditionalOptions:
      additionalProperties:
        $ref: '#/components/schemas/DescriptionString'
      maxProperties: 10
      minProperties: 1
      type: object
    S3SourceAdditionalOptions:
      description: Specifies additional connection options for the Amazon S3 data
        store.
      properties:
        BoundedSize:
          allOf:
          - $ref: '#/components/schemas/BoxedLong'
          - description: Sets the upper limit for the target size of the dataset in
              bytes that will be processed.
        BoundedFiles:
          allOf:
          - $ref: '#/components/schemas/BoxedLong'
          - description: Sets the upper limit for the target number of files that
              will be processed.
      type: object
    HudiTarget:
      description: Specifies an Apache Hudi data source.
      properties:
        Paths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: "<p>An array of Amazon S3 location strings for Hudi, each\
              \ indicating the root folder with which the metadata files for a Hudi\
              \ table resides. The Hudi folder may be located in a child folder of\
              \ the root folder.</p> <p>The crawler will scan all folders underneath\
              \ a path for a Hudi folder.</p>"
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: "The name of the connection to use to connect to the Hudi\
              \ target. If your Hudi files are stored in buckets that require VPC\
              \ authorization, you can set their connection properties here."
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: "A list of glob patterns used to exclude from the crawl.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html\"\
              >Catalog Tables with a Crawler</a>."
        MaximumTraversalDepth:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The maximum depth of Amazon S3 paths that the crawler can
              traverse to discover the Hudi metadata folder in your Amazon S3 path.
              Used to limit the crawler run time.
      type: object
    HudiTargetCompressionType:
      enum:
      - gzip
      - lzo
      - uncompressed
      - snappy
      type: string
    MetadataOperation:
      enum:
      - CREATE
      type: string
    IcebergInput:
      description: A structure that defines an Apache Iceberg metadata table to create
        in the catalog.
      properties:
        MetadataOperation:
          allOf:
          - $ref: '#/components/schemas/MetadataOperation'
          - description: A required metadata operation. Can only be set to <code>CREATE</code>.
        Version:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The table version for the Iceberg table. Defaults to 2.
      required:
      - MetadataOperation
      type: object
    IcebergTarget:
      description: Specifies an Apache Iceberg data source where Iceberg tables are
        stored in Amazon S3.
      properties:
        Paths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: One or more Amazon S3 paths that contains Iceberg metadata
              folders as <code>s3://bucket/prefix</code>.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to use to connect to the Iceberg
              target.
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: "A list of glob patterns used to exclude from the crawl.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html\"\
              >Catalog Tables with a Crawler</a>."
        MaximumTraversalDepth:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The maximum depth of Amazon S3 paths that the crawler can
              traverse to discover the Iceberg metadata folder in your Amazon S3 path.
              Used to limit the crawler run time.
      type: object
    ReplaceBoolean:
      type: boolean
    ImportLabelsTaskRunProperties:
      description: Specifies configuration properties for an importing labels task
        run.
      properties:
        InputS3Path:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon Simple Storage Service (Amazon S3) path from where
              you will import the labels.
        Replace:
          allOf:
          - $ref: '#/components/schemas/ReplaceBoolean'
          - description: Indicates whether to overwrite your existing labels.
      type: object
    IntegerFlag:
      maximum: 1
      minimum: 0
      type: integer
    Iso8601DateTime:
      format: date-time
      type: string
    JDBCDataTypeMapping:
      additionalProperties:
        $ref: '#/components/schemas/GlueRecordType'
      type: object
    JDBCConnectorOptions:
      description: Additional connection options for the connector.
      properties:
        FilterPredicate:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "<p>Extra condition clause to filter data from source. For\
              \ example:</p> <p> <code>BillingCity='Mountain View'</code> </p> <p>When\
              \ using a query instead of a table name, you should validate that the\
              \ query works with the specified <code>filterPredicate</code>.</p>"
        PartitionColumn:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "The name of an integer column that is used for partitioning.\
              \ This option works only when it's included with <code>lowerBound</code>,\
              \ <code>upperBound</code>, and <code>numPartitions</code>. This option\
              \ works the same way as in the Spark SQL JDBC reader."
        LowerBound:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The minimum value of <code>partitionColumn</code> that is
              used to decide partition stride.
        UpperBound:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: The maximum value of <code>partitionColumn</code> that is
              used to decide partition stride.
        NumPartitions:
          allOf:
          - $ref: '#/components/schemas/BoxedNonNegativeLong'
          - description: "The number of partitions. This value, along with <code>lowerBound</code>\
              \ (inclusive) and <code>upperBound</code> (exclusive), form partition\
              \ strides for generated <code>WHERE</code> clause expressions that are\
              \ used to split the <code>partitionColumn</code>."
        JobBookmarkKeys:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: The name of the job bookmark keys on which to sort.
        JobBookmarkKeysSortOrder:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies an ascending or descending sort order.
        DataTypeMapping:
          allOf:
          - $ref: '#/components/schemas/JDBCDataTypeMapping'
          - description: "Custom data type mapping that builds a mapping from a JDBC\
              \ data type to an Glue data type. For example, the option <code>\"dataTypeMapping\"\
              :{\"FLOAT\":\"STRING\"}</code> maps data fields of JDBC type <code>FLOAT</code>\
              \ into the Java <code>String</code> type by calling the <code>ResultSet.getString()</code>\
              \ method of the driver, and uses it to build the Glue record. The <code>ResultSet</code>\
              \ object is implemented by each driver, so the behavior is specific\
              \ to the driver you use. Refer to the documentation for your JDBC driver\
              \ to understand how the driver performs the conversions."
      type: object
    SqlQuery:
      type: string
      x-pattern: "\\([\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\\
        s]\\)*"
    JDBCDataType:
      enum:
      - ARRAY
      - BIGINT
      - BINARY
      - BIT
      - BLOB
      - BOOLEAN
      - CHAR
      - CLOB
      - DATALINK
      - DATE
      - DECIMAL
      - DISTINCT
      - DOUBLE
      - FLOAT
      - INTEGER
      - JAVA_OBJECT
      - LONGNVARCHAR
      - LONGVARBINARY
      - LONGVARCHAR
      - NCHAR
      - NCLOB
      - "NULL"
      - NUMERIC
      - NVARCHAR
      - OTHER
      - REAL
      - REF
      - REF_CURSOR
      - ROWID
      - SMALLINT
      - SQLXML
      - STRUCT
      - TIME
      - TIME_WITH_TIMEZONE
      - TIMESTAMP
      - TIMESTAMP_WITH_TIMEZONE
      - TINYINT
      - VARBINARY
      - VARCHAR
      type: string
    JdbcTarget:
      description: Specifies a JDBC data store to crawl.
      properties:
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to use to connect to the JDBC
              target.
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The path of the JDBC target.
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: "A list of glob patterns used to exclude from the crawl.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html\"\
              >Catalog Tables with a Crawler</a>."
        EnableAdditionalMetadata:
          allOf:
          - $ref: '#/components/schemas/EnableAdditionalMetadata'
          - description: "<p>Specify a value of <code>RAWTYPES</code> or <code>COMMENTS</code>\
              \ to enable additional metadata in table responses. <code>RAWTYPES</code>\
              \ provides the native-level datatype. <code>COMMENTS</code> provides\
              \ comments associated with a column or table in the database.</p> <p>If\
              \ you do not need additional metadata, keep the field empty.</p>"
      type: object
    JsonValue:
      type: string
    JobBookmarksEncryptionMode:
      enum:
      - DISABLED
      - CSE-KMS
      type: string
    ScriptLocationString:
      maxLength: 400000
      type: string
    PythonVersionString:
      pattern: "^([2-3]|3[.]9)$"
      type: string
    RuntimeNameString:
      maxLength: 64
      pattern: .*
      type: string
    JobNodeDetails:
      description: The details of a Job node present in the workflow.
      properties:
        JobRuns:
          allOf:
          - $ref: '#/components/schemas/JobRunList'
          - description: The information for the job runs represented by the job node.
      type: object
    PredecessorList:
      items:
        $ref: '#/components/schemas/Predecessor'
      type: array
    JobUpdate:
      description: Specifies information used to update an existing job definition.
        The previous job definition is completely overwritten by this information.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: Description of the job being defined.
        LogUri:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: This field is reserved for future use.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: The name or Amazon Resource Name (ARN) of the IAM role associated
              with this job (required).
        ExecutionProperty:
          $ref: '#/components/schemas/CreateJobRequest_ExecutionProperty'
        Command:
          $ref: '#/components/schemas/JobUpdate_Command'
        DefaultArguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "<p>The default arguments for every run of this job, specified\
              \ as name-value pairs.</p> <p>You can specify arguments here that your\
              \ own job-execution script consumes, as well as arguments that Glue\
              \ itself consumes.</p> <p>Job arguments may be logged. Do not pass plaintext\
              \ secrets as arguments. Retrieve secrets from a Glue Connection, Secrets\
              \ Manager or other secret management mechanism if you intend to keep\
              \ them within the Job. </p> <p>For information about how to specify\
              \ and consume your own Job arguments, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html\"\
              >Calling Glue APIs in Python</a> topic in the developer guide.</p> <p>For\
              \ information about the arguments you can provide to this field when\
              \ configuring Spark jobs, see the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\"\
              >Special Parameters Used by Glue</a> topic in the developer guide.</p>\
              \ <p>For information about the arguments you can provide to this field\
              \ when configuring Ray jobs, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-job-parameters.html\"\
              >Using job parameters in Ray jobs</a> in the developer guide.</p>"
        NonOverridableArguments:
          allOf:
          - $ref: '#/components/schemas/GenericMap'
          - description: "Arguments for this job that are not overridden when providing\
              \ job arguments in a job run, specified as name-value pairs."
        Connections:
          $ref: '#/components/schemas/CreateJobRequest_Connections'
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          - description: The maximum number of times to retry this job if it fails.
        AllocatedCapacity:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - deprecated: true
            description: "<p>This field is deprecated. Use <code>MaxCapacity</code>\
              \ instead.</p> <p>The number of Glue data processing units (DPUs) to\
              \ allocate to this job. You can allocate a minimum of 2 DPUs; the default\
              \ is 10. A DPU is a relative measure of processing power that consists\
              \ of 4 vCPUs of compute capacity and 16 GB of memory. For more information,\
              \ see the <a href=\"https://aws.amazon.com/glue/pricing/\">Glue pricing\
              \ page</a>.</p>This property is deprecated, use MaxCapacity instead."
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: "The job timeout in minutes. This is the maximum time that\
              \ a job run can consume resources before it is terminated and enters\
              \ <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours)."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>For Glue version 1.0 or earlier jobs, using the standard\
              \ worker type, the number of Glue data processing units (DPUs) that\
              \ can be allocated when this job runs. A DPU is a relative measure of\
              \ processing power that consists of 4 vCPUs of compute capacity and\
              \ 16 GB of memory. For more information, see the <a href=\"https://aws.amazon.com/glue/pricing/\"\
              > Glue pricing page</a>.</p> <p>For Glue version 2.0+ jobs, you cannot\
              \ specify a <code>Maximum capacity</code>. Instead, you should specify\
              \ a <code>Worker type</code> and the <code>Number of workers</code>.</p>\
              \ <p>Do not set <code>MaxCapacity</code> if using <code>WorkerType</code>\
              \ and <code>NumberOfWorkers</code>.</p> <p>The value that can be allocated\
              \ for <code>MaxCapacity</code> depends on whether you are running a\
              \ Python shell job, an Apache Spark ETL job, or an Apache Spark streaming\
              \ ETL job:</p> <ul> <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>=\"\
              pythonshell\"), you can allocate either 0.0625 or 1 DPU. The default\
              \ is 0.0625 DPU.</p> </li> <li> <p>When you specify an Apache Spark\
              \ ETL job (<code>JobCommand.Name</code>=\"glueetl\") or Apache Spark\
              \ streaming ETL job (<code>JobCommand.Name</code>=\"gluestreaming\"\
              ), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This\
              \ job type cannot have a fractional DPU allocation.</p> </li> </ul>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a job runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for\
              \ Spark jobs. Accepts the value Z.2X for Ray jobs.</p> <ul> <li> <p>For\
              \ the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs,\
              \ 16 GB of memory) with 84GB disk (approximately 34GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs,\
              \ 32 GB of memory) with 128GB disk (approximately 77GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for workloads\
              \ such as data transforms, joins, and queries, to offers a scalable\
              \ and cost effective way to run most jobs.</p> </li> <li> <p>For the\
              \ <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs,\
              \ 64 GB of memory) with 256GB disk (approximately 235GB free), and provides\
              \ 1 executor per worker. We recommend this worker type for jobs whose\
              \ workloads contain your most demanding transforms, aggregations, joins,\
              \ and queries. This worker type is available only for Glue version 3.0\
              \ or later Spark ETL jobs in the following Amazon Web Services Regions:\
              \ US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific\
              \ (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central),\
              \ Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p>\
              \ </li> <li> <p>For the <code>G.8X</code> worker type, each worker maps\
              \ to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately\
              \ 487GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for jobs whose workloads contain your most demanding transforms,\
              \ aggregations, joins, and queries. This worker type is available only\
              \ for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web\
              \ Services Regions as supported for the <code>G.4X</code> worker type.</p>\
              \ </li> <li> <p>For the <code>G.025X</code> worker type, each worker\
              \ maps to 0.25 DPU (2 vCPUs, 4 GB of memory) with 84GB disk (approximately\
              \ 34GB free), and provides 1 executor per worker. We recommend this\
              \ worker type for low volume streaming jobs. This worker type is only\
              \ available for Glue version 3.0 streaming jobs.</p> </li> <li> <p>For\
              \ the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs,\
              \ 64 GB of memory) with 128 GB disk (approximately 120GB free), and\
              \ provides up to 8 Ray workers based on the autoscaler.</p> </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of workers of a defined <code>workerType</code>
              that are allocated when a job runs.
        SecurityConfiguration:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>SecurityConfiguration</code> structure
              to be used with this job.
        NotificationProperty:
          $ref: '#/components/schemas/JobUpdate_NotificationProperty'
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "<p>In Spark jobs, <code>GlueVersion</code> determines the\
              \ versions of Apache Spark and Python that Glue available in a job.\
              \ The Python version indicates the version supported for jobs of type\
              \ Spark. </p> <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code>\
              \ or greater. However, the versions of Ray, Python and additional libraries\
              \ available in your Ray job are determined by the <code>Runtime</code>\
              \ parameter of the Job command.</p> <p>For more information about the\
              \ available Glue versions and corresponding Spark and Python versions,\
              \ see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-job.html\"\
              >Glue version</a> in the developer guide.</p> <p>Jobs that are created\
              \ without specifying a Glue version default to Glue 0.9.</p>"
        CodeGenConfigurationNodes:
          allOf:
          - $ref: '#/components/schemas/CodeGenConfigurationNodes'
          - description: The representation of a directed acyclic graph on which both
              the Glue Studio visual component and Glue Studio code generation is
              based.
        ExecutionClass:
          allOf:
          - $ref: '#/components/schemas/ExecutionClass'
          - description: <p>Indicates whether the job is run with a standard or flexible
              execution class. The standard execution-class is ideal for time-sensitive
              workloads that require fast job startup and dedicated resources.</p>
              <p>The flexible execution class is appropriate for time-insensitive
              jobs whose start and completion times may vary. </p> <p>Only jobs with
              Glue version 3.0 and above and command type <code>glueetl</code> will
              be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>.
              The flexible execution class is available for Spark jobs.</p>
        SourceControlDetails:
          $ref: '#/components/schemas/CreateJobRequest_SourceControlDetails'
      type: object
    TwoInputs:
      items:
        $ref: '#/components/schemas/NodeId'
      maxItems: 2
      minItems: 2
      type: array
    JoinType:
      enum:
      - equijoin
      - left
      - right
      - outer
      - leftsemi
      - leftanti
      type: string
    JoinColumns:
      items:
        $ref: '#/components/schemas/JoinColumn'
      maxItems: 2
      minItems: 2
      type: array
    JoinColumn:
      description: Specifies a column to be joined.
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The column to be joined.
        Keys:
          allOf:
          - $ref: '#/components/schemas/GlueStudioPathList'
          - description: The key of the column to be joined.
      required:
      - From
      - Keys
      type: object
    KeyList:
      items:
        $ref: '#/components/schemas/NameString'
      minItems: 1
      type: array
    KeySchemaElement:
      description: A partition key pair consisting of a name and a type.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of a partition key.
        Type:
          allOf:
          - $ref: '#/components/schemas/ColumnTypeString'
          - description: The type of a partition key.
      required:
      - Name
      - Type
      type: object
    KeySchemaElementList:
      items:
        $ref: '#/components/schemas/KeySchemaElement'
      minItems: 1
      type: array
    KeyString:
      maxLength: 255
      minLength: 1
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
    StartingPosition:
      enum:
      - latest
      - trim_horizon
      - earliest
      - timestamp
      type: string
    LabelingSetGenerationTaskRunProperties:
      description: Specifies configuration properties for a labeling set generation
        task run.
      properties:
        OutputS3Path:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon Simple Storage Service (Amazon S3) path where
              you will generate the labeling set.
      type: object
    LastCrawlStatus:
      enum:
      - SUCCEEDED
      - CANCELLED
      - FAILED
      type: string
    LatestSchemaVersionBoolean:
      type: boolean
    LimitedStringList:
      items:
        $ref: '#/components/schemas/GenericLimitedString'
      type: array
    TransformIdList:
      items:
        $ref: '#/components/schemas/HashString'
      type: array
    MaxResultsNumber:
      maximum: 100
      minimum: 1
      type: integer
    SchemaRegistryTokenString:
      type: string
    RegistryListDefinition:
      items:
        $ref: '#/components/schemas/RegistryListItem'
      type: array
    SchemaVersionList:
      items:
        $ref: '#/components/schemas/SchemaVersionListItem'
      type: array
    SchemaListDefinition:
      items:
        $ref: '#/components/schemas/SchemaListItem'
      type: array
    OrchestrationToken:
      maxLength: 400000
      type: string
    SessionIdList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    SessionList:
      items:
        $ref: '#/components/schemas/Session'
      type: array
    StatementList:
      items:
        $ref: '#/components/schemas/Statement'
      type: array
    LocationMap:
      additionalProperties:
        $ref: '#/components/schemas/ColumnValuesString'
      type: object
    LocationString:
      maxLength: 2056
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    LocationStringList:
      items:
        $ref: '#/components/schemas/LocationString'
      type: array
    Logical:
      enum:
      - AND
      - ANY
      type: string
    Long:
      type: integer
    LongValue:
      type: integer
    MLTransform:
      description: A structure for a machine learning transform.
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique transform ID that is generated for the machine
              learning transform. The ID is guaranteed to be unique and does not change.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: A user-defined name for the machine learning transform. Names
              are not guaranteed unique and can be changed at any time.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: "A user-defined, long-form description text for the machine\
              \ learning transform. Descriptions are not guaranteed to be unique and\
              \ can be changed at any time."
        Status:
          allOf:
          - $ref: '#/components/schemas/TransformStatusType'
          - description: The current status of the machine learning transform.
        CreatedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp. The time and date that this machine learning
              transform was created.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp. The last point in time when this machine learning
              transform was modified.
        InputRecordTables:
          allOf:
          - $ref: '#/components/schemas/GlueTables'
          - description: A list of Glue table definitions used by the transform.
        Parameters:
          $ref: '#/components/schemas/MLTransform_Parameters'
        EvaluationMetrics:
          $ref: '#/components/schemas/MLTransform_EvaluationMetrics'
        LabelCount:
          allOf:
          - $ref: '#/components/schemas/LabelCount'
          - description: "A count identifier for the labeling files generated by Glue\
              \ for this transform. As you create a better transform, you can iteratively\
              \ download, label, and upload the labeling file."
        Schema:
          allOf:
          - $ref: '#/components/schemas/TransformSchema'
          - description: A map of key-value pairs representing the columns and data
              types that this transform can run against. Has an upper bound of 100
              columns.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleString'
          - description: "<p>The name or Amazon Resource Name (ARN) of the IAM role\
              \ with the required permissions. The required permissions include both\
              \ Glue service role permissions to Glue resources, and Amazon S3 permissions\
              \ required by the transform. </p> <ul> <li> <p>This role needs Glue\
              \ service role permissions to allow access to resources in Glue. See\
              \ <a href=\"https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html\"\
              >Attach a Policy to IAM Users That Access Glue</a>.</p> </li> <li> <p>This\
              \ role needs permission to your Amazon Simple Storage Service (Amazon\
              \ S3) sources, targets, temporary directory, scripts, and any libraries\
              \ used by the task run for this transform.</p> </li> </ul>"
        GlueVersion:
          allOf:
          - $ref: '#/components/schemas/GlueVersionString'
          - description: "This value determines which version of Glue this machine\
              \ learning transform is compatible with. Glue 1.0 is recommended for\
              \ most customers. If the value is not set, the Glue compatibility defaults\
              \ to Glue 0.9. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions\"\
              >Glue Versions</a> in the developer guide."
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "<p>The number of Glue data processing units (DPUs) that\
              \ are allocated to task runs for this transform. You can allocate from\
              \ 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing\
              \ power that consists of 4 vCPUs of compute capacity and 16 GB of memory.\
              \ For more information, see the <a href=\"http://aws.amazon.com/glue/pricing/\"\
              >Glue pricing page</a>. </p> <p> <code>MaxCapacity</code> is a mutually\
              \ exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p>\
              \ <ul> <li> <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code>\
              \ is set, then <code>MaxCapacity</code> cannot be set.</p> </li> <li>\
              \ <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code>\
              \ or <code>WorkerType</code> can be set.</p> </li> <li> <p>If <code>WorkerType</code>\
              \ is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>\
              \ </li> <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code>\
              \ must both be at least 1.</p> </li> </ul> <p>When the <code>WorkerType</code>\
              \ field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code>\
              \ field is set automatically and becomes read-only.</p>"
        WorkerType:
          allOf:
          - $ref: '#/components/schemas/WorkerType'
          - description: "<p>The type of predefined worker that is allocated when\
              \ a task of this transform runs. Accepts a value of Standard, G.1X,\
              \ or G.2X.</p> <ul> <li> <p>For the <code>Standard</code> worker type,\
              \ each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and\
              \ 2 executors per worker.</p> </li> <li> <p>For the <code>G.1X</code>\
              \ worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB\
              \ disk, and 1 executor per worker.</p> </li> <li> <p>For the <code>G.2X</code>\
              \ worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB\
              \ disk, and 1 executor per worker.</p> </li> </ul> <p> <code>MaxCapacity</code>\
              \ is a mutually exclusive option with <code>NumberOfWorkers</code> and\
              \ <code>WorkerType</code>.</p> <ul> <li> <p>If either <code>NumberOfWorkers</code>\
              \ or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot\
              \ be set.</p> </li> <li> <p>If <code>MaxCapacity</code> is set then\
              \ neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can\
              \ be set.</p> </li> <li> <p>If <code>WorkerType</code> is set, then\
              \ <code>NumberOfWorkers</code> is required (and vice versa).</p> </li>\
              \ <li> <p> <code>MaxCapacity</code> and <code>NumberOfWorkers</code>\
              \ must both be at least 1.</p> </li> </ul>"
        NumberOfWorkers:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "<p>The number of workers of a defined <code>workerType</code>\
              \ that are allocated when a task of the transform runs.</p> <p>If <code>WorkerType</code>\
              \ is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>"
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          - description: The timeout in minutes of the machine learning transform.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The maximum number of times to retry after an <code>MLTaskRun</code>
              of the machine learning transform fails.
        TransformEncryption:
          $ref: '#/components/schemas/CreateMLTransformRequest_TransformEncryption'
      type: object
    MLUserDataEncryptionModeString:
      enum:
      - DISABLED
      - SSE-KMS
      type: string
    MLUserDataEncryption:
      description: The encryption-at-rest settings of the transform that apply to
        accessing user data.
      properties:
        MlUserDataEncryptionMode:
          allOf:
          - $ref: '#/components/schemas/MLUserDataEncryptionModeString'
          - description: "<p>The encryption mode applied to user data. Valid values\
              \ are:</p> <ul> <li> <p>DISABLED: encryption is disabled</p> </li> <li>\
              \ <p>SSEKMS: use of server-side encryption with Key Management Service\
              \ (SSE-KMS) for user data stored in Amazon S3.</p> </li> </ul>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The ID for the customer-provided KMS key.
      required:
      - MlUserDataEncryptionMode
      type: object
    NodeId:
      pattern: "[A-Za-z0-9_-]*"
      type: string
    Mapping:
      description: Specifies the mapping of data property keys.
      properties:
        ToKey:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "After the apply mapping, what the name of the column should\
              \ be. Can be the same as <code>FromPath</code>."
        FromPath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: The table or column to be modified.
        FromType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The type of the data to be modified.
        ToType:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The data type that the data is to be modified to.
        Dropped:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: "If true, then the column is removed."
        Children:
          allOf:
          - $ref: '#/components/schemas/Mappings'
          - description: "<p>Only applicable to nested data structures. If you want\
              \ to change the parent structure, but also one of its children, you\
              \ can fill out this data strucutre. It is also <code>Mapping</code>,\
              \ but its <code>FromPath</code> will be the parent's <code>FromPath</code>\
              \ plus the <code>FromPath</code> from this structure.</p> <p>For the\
              \ children part, suppose you have the structure:</p> <p> <code>{ \"\
              FromPath\": \"OuterStructure\", \"ToKey\": \"OuterStructure\", \"ToType\"\
              : \"Struct\", \"Dropped\": false, \"Chidlren\": [{ \"FromPath\": \"\
              inner\", \"ToKey\": \"inner\", \"ToType\": \"Double\", \"Dropped\":\
              \ false, }] }</code> </p> <p>You can specify a <code>Mapping</code>\
              \ that looks like:</p> <p> <code>{ \"FromPath\": \"OuterStructure\"\
              , \"ToKey\": \"OuterStructure\", \"ToType\": \"Struct\", \"Dropped\"\
              : false, \"Chidlren\": [{ \"FromPath\": \"inner\", \"ToKey\": \"inner\"\
              , \"ToType\": \"Double\", \"Dropped\": false, }] }</code> </p>"
      type: object
    TableName:
      type: string
    SchemaPathString:
      type: string
    MappingEntry:
      description: Defines a mapping.
      properties:
        SourceTable:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The name of the source table.
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/SchemaPathString'
          - description: The source path.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          - description: The source type.
        TargetTable:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The target table.
        TargetPath:
          allOf:
          - $ref: '#/components/schemas/SchemaPathString'
          - description: The target path.
        TargetType:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          - description: The target type.
      type: object
    MaskValue:
      maxLength: 256
      minLength: 0
      pattern: "[*A-Za-z0-9_-]*"
      type: string
    MetadataValueString:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9+-=._./@]+"
      type: string
    OtherMetadataValueList:
      items:
        $ref: '#/components/schemas/OtherMetadataValueListItem'
      type: array
    MetadataInfo:
      description: A structure containing metadata information for a schema version.
      properties:
        MetadataValue:
          allOf:
          - $ref: '#/components/schemas/MetadataValueString'
          - description: The metadata key’s corresponding value.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The time at which the entry was created.
        OtherMetadataValueList:
          allOf:
          - $ref: '#/components/schemas/OtherMetadataValueList'
          - description: Other metadata belonging to the same metadata key.
      type: object
    MetadataInfoMap:
      additionalProperties:
        $ref: '#/components/schemas/MetadataInfo'
      type: object
    MetadataKeyString:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9+-=._./@]+"
      type: string
    MetadataKeyValuePair:
      description: A structure containing a key value pair for metadata.
      properties:
        MetadataKey:
          allOf:
          - $ref: '#/components/schemas/MetadataKeyString'
          - description: A metadata key.
        MetadataValue:
          allOf:
          - $ref: '#/components/schemas/MetadataValueString'
          - description: A metadata key’s corresponding value.
      type: object
    MetadataList:
      items:
        $ref: '#/components/schemas/MetadataKeyValuePair'
      type: array
    MongoDBTarget:
      description: Specifies an Amazon DocumentDB or MongoDB data store to crawl.
      properties:
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to use to connect to the Amazon
              DocumentDB or MongoDB target.
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The path of the Amazon DocumentDB or MongoDB target (database/collection).
        ScanAll:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "<p>Indicates whether to scan all the records, or to sample\
              \ rows from the table. Scanning all the records can take a long time\
              \ when the table is not a high throughput table.</p> <p>A value of <code>true</code>\
              \ means to scan all records, while a value of <code>false</code> means\
              \ to sample the records. If no value is specified, the value defaults\
              \ to <code>true</code>.</p>"
      type: object
    NodeType:
      enum:
      - CRAWLER
      - JOB
      - TRIGGER
      type: string
    TriggerNodeDetails:
      description: The details of a Trigger node present in the workflow.
      properties:
        Trigger:
          $ref: '#/components/schemas/TriggerNodeDetails_Trigger'
      type: object
    Node:
      description: "A node represents an Glue component (trigger, crawler, or job)\
        \ on a workflow graph."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NodeType'
          - description: The type of Glue component represented by the node.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the Glue component represented by the node.
        UniqueId:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The unique Id assigned to the node within the workflow.
        TriggerDetails:
          $ref: '#/components/schemas/Node_TriggerDetails'
        JobDetails:
          $ref: '#/components/schemas/Node_JobDetails'
        CrawlerDetails:
          $ref: '#/components/schemas/Node_CrawlerDetails'
      type: object
    NodeIdList:
      items:
        $ref: '#/components/schemas/NameString'
      type: array
    NodeList:
      items:
        $ref: '#/components/schemas/Node'
      type: array
    NonNegativeInt:
      minimum: 0
      type: integer
    NotifyDelayAfter:
      minimum: 1
      type: integer
    NullValueField:
      description: Represents a custom null value such as a zeros or other value being
        used as a null placeholder unique to the dataset.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The value of the null placeholder.
        Datatype:
          $ref: '#/components/schemas/NullValueField_Datatype'
      required:
      - Datatype
      - Value
      type: object
    OrchestrationArgumentsValue:
      maxLength: 4096
      minLength: 0
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\\
        n\\t]*"
    OrchestrationStatementCodeString:
      maxLength: 68000
      type: string
    Order:
      description: Specifies the sort order of a sorted column.
      properties:
        Column:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the column.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/IntegerFlag'
          - description: "Indicates that the column is sorted in ascending order (<code>==\
              \ 1</code>), or in descending order (<code>==0</code>)."
      required:
      - Column
      - SortOrder
      type: object
    OrderList:
      items:
        $ref: '#/components/schemas/Order'
      type: array
    OtherMetadataValueListItem:
      description: A structure containing other metadata for a schema version belonging
        to the same metadata key.
      properties:
        MetadataValue:
          allOf:
          - $ref: '#/components/schemas/MetadataValueString'
          - description: The metadata key’s corresponding value for the other metadata
              belonging to the same metadata key.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The time at which the entry was created.
      type: object
    PiiType:
      enum:
      - RowAudit
      - RowMasking
      - ColumnAudit
      - ColumnMasking
      type: string
    ParamType:
      enum:
      - str
      - int
      - float
      - complex
      - bool
      - list
      - "null"
      type: string
    ParametersMapValue:
      maxLength: 512000
      type: string
    ParquetCompressionType:
      enum:
      - snappy
      - lzo
      - gzip
      - uncompressed
      - none
      type: string
    StorageDescriptor:
      description: Describes the physical storage of table data.
      properties:
        Columns:
          allOf:
          - $ref: '#/components/schemas/ColumnList'
          - description: A list of the <code>Columns</code> in the table.
        Location:
          allOf:
          - $ref: '#/components/schemas/LocationString'
          - description: "The physical location of the table. By default, this takes\
              \ the form of the warehouse location, followed by the database location\
              \ in the warehouse, followed by the table name."
        AdditionalLocations:
          allOf:
          - $ref: '#/components/schemas/LocationStringList'
          - description: A list of locations that point to the path where a Delta
              table is located.
        InputFormat:
          allOf:
          - $ref: '#/components/schemas/FormatString'
          - description: "The input format: <code>SequenceFileInputFormat</code> (binary),\
              \ or <code>TextInputFormat</code>, or a custom format."
        OutputFormat:
          allOf:
          - $ref: '#/components/schemas/FormatString'
          - description: "The output format: <code>SequenceFileOutputFormat</code>\
              \ (binary), or <code>IgnoreKeyTextOutputFormat</code>, or a custom format."
        Compressed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " <code>True</code> if the data in the table is compressed,\
              \ or <code>False</code> if not."
        NumberOfBuckets:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Must be specified if the table contains any dimension columns.
        SerdeInfo:
          $ref: '#/components/schemas/StorageDescriptor_SerdeInfo'
        BucketColumns:
          allOf:
          - $ref: '#/components/schemas/NameStringList'
          - description: "A list of reducer grouping columns, clustering columns,\
              \ and bucketing columns in the table."
        SortColumns:
          allOf:
          - $ref: '#/components/schemas/OrderList'
          - description: A list specifying the sort order of each bucket in the table.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: The user-supplied properties in key-value form.
        SkewedInfo:
          $ref: '#/components/schemas/StorageDescriptor_SkewedInfo'
        StoredAsSubDirectories:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " <code>True</code> if the table data is stored in subdirectories,\
              \ or <code>False</code> if not."
        SchemaReference:
          $ref: '#/components/schemas/StorageDescriptor_SchemaReference'
      type: object
    PartitionError:
      description: Contains information about a partition error.
      properties:
        PartitionValues:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          - description: The values that define the partition.
        ErrorDetail:
          $ref: '#/components/schemas/PartitionError_ErrorDetail'
      type: object
    PartitionIndexStatus:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      type: string
    PartitionIndexDescriptor:
      description: A descriptor for a partition index in a table.
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the partition index.
        Keys:
          allOf:
          - $ref: '#/components/schemas/KeySchemaElementList'
          - description: "A list of one or more keys, as <code>KeySchemaElement</code>\
              \ structures, for the partition index."
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/PartitionIndexStatus'
          - description: "<p>The status of the partition index. </p> <p>The possible\
              \ statuses are:</p> <ul> <li> <p>CREATING: The index is being created.\
              \ When an index is in a CREATING state, the index or its table cannot\
              \ be deleted.</p> </li> <li> <p>ACTIVE: The index creation succeeds.</p>\
              \ </li> <li> <p>FAILED: The index creation fails. </p> </li> <li> <p>DELETING:\
              \ The index is deleted from the list of indexes.</p> </li> </ul>"
        BackfillErrors:
          allOf:
          - $ref: '#/components/schemas/BackfillErrors'
          - description: A list of errors that can occur when registering partition
              indexes for an existing table.
      required:
      - IndexName
      - IndexStatus
      - Keys
      type: object
    Permission:
      enum:
      - ALL
      - SELECT
      - ALTER
      - DROP
      - DELETE
      - INSERT
      - CREATE_DATABASE
      - CREATE_TABLE
      - DATA_LOCATION_ACCESS
      type: string
    PermissionList:
      items:
        $ref: '#/components/schemas/Permission'
      type: array
    PermissionType:
      enum:
      - COLUMN_PERMISSION
      - CELL_FILTER_PERMISSION
      - NESTED_PERMISSION
      - NESTED_CELL_PERMISSION
      type: string
    SecurityGroupIdList:
      items:
        $ref: '#/components/schemas/NameString'
      maxItems: 50
      minItems: 0
      type: array
    PollingTime:
      minimum: 10
      type: integer
    PositiveLong:
      minimum: 1
      type: integer
    Predecessor:
      description: A job run that was used in the predicate of a conditional trigger
        that triggered this job run.
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the job definition used by the predecessor job
              run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/IdString'
          - description: The job-run ID of the predecessor job run.
      type: object
    PrincipalPermissions:
      description: Permissions granted to a principal.
      properties:
        Principal:
          $ref: '#/components/schemas/PrincipalPermissions_Principal'
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionList'
          - description: The permissions that are granted to the principal.
      type: object
    PrincipalType:
      enum:
      - USER
      - ROLE
      - GROUP
      type: string
    Prob:
      format: double
      maximum: 1
      minimum: 0
      type: number
    PropertyPredicate:
      description: Defines a property predicate.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ValueString'
          - description: The key of the property.
        Value:
          allOf:
          - $ref: '#/components/schemas/ValueString'
          - description: The value of the property.
        Comparator:
          allOf:
          - $ref: '#/components/schemas/Comparator'
          - description: The comparator used to compare this property to others.
      type: object
    QuerySchemaVersionMetadataMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    QuoteChar:
      enum:
      - quote
      - quillemet
      - single_quote
      - disabled
      type: string
    RecipeReference:
      description: A reference to a Glue DataBrew recipe.
      properties:
        RecipeArn:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The ARN of the DataBrew recipe.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          - description: The RecipeVersion of the DataBrew recipe.
      required:
      - RecipeArn
      - RecipeVersion
      type: object
    RecipeVersion:
      maxLength: 16
      minLength: 1
      type: string
    RecrawlBehavior:
      enum:
      - CRAWL_EVERYTHING
      - CRAWL_NEW_FOLDERS_ONLY
      - CRAWL_EVENT_MODE
      type: string
    UpsertRedshiftTargetOptions:
      description: The options to configure an upsert operation when writing to a
        Redshift target .
      properties:
        TableLocation:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The physical location of the Redshift table.
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: The name of the connection to use to write to Redshift.
        UpsertKeys:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringPropertiesMinOne'
          - description: The keys used to determine whether to perform an update or
              insert.
      type: object
    RegistryListItem:
      description: A structure containing the details for a registry.
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the registry.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of the registry.
        Status:
          allOf:
          - $ref: '#/components/schemas/RegistryStatus'
          - description: The status of the registry.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The data the registry was created.
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdatedTimestamp'
          - description: The date the registry was updated.
      type: object
    ResourceType:
      enum:
      - JAR
      - FILE
      - ARCHIVE
      type: string
    ResourceUri:
      description: The URIs for function resources.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The type of the resource.
        Uri:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: The URI for accessing the resource.
      type: object
    ResourceUriList:
      items:
        $ref: '#/components/schemas/ResourceUri'
      maxItems: 1000
      minItems: 0
      type: array
    S3DirectSourceAdditionalOptions:
      description: Specifies additional connection options for the Amazon S3 data
        store.
      properties:
        BoundedSize:
          allOf:
          - $ref: '#/components/schemas/BoxedLong'
          - description: Sets the upper limit for the target size of the dataset in
              bytes that will be processed.
        BoundedFiles:
          allOf:
          - $ref: '#/components/schemas/BoxedLong'
          - description: Sets the upper limit for the target number of files that
              will be processed.
        EnableSamplePath:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Sets option to enable a sample path.
        SamplePath:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: "If enabled, specifies the sample path."
      type: object
    Separator:
      enum:
      - comma
      - ctrla
      - pipe
      - semicolon
      - tab
      type: string
    TargetFormat:
      enum:
      - json
      - csv
      - avro
      - orc
      - parquet
      - hudi
      - delta
      type: string
    S3EncryptionMode:
      enum:
      - DISABLED
      - SSE-KMS
      - SSE-S3
      type: string
    S3Encryption:
      description: Specifies how Amazon Simple Storage Service (Amazon S3) data should
        be encrypted.
      properties:
        S3EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/S3EncryptionMode'
          - description: The encryption mode to use for Amazon S3 data.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The Amazon Resource Name (ARN) of the KMS key to be used
              to encrypt the data.
      type: object
    S3Target:
      description: Specifies a data store in Amazon Simple Storage Service (Amazon
        S3).
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          - description: The path to the Amazon S3 target.
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/PathList'
          - description: "A list of glob patterns used to exclude from the crawl.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/add-crawler.html\"\
              >Catalog Tables with a Crawler</a>."
        ConnectionName:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of a connection which allows a job or crawler to
              access data in Amazon S3 within an Amazon Virtual Private Cloud environment
              (Amazon VPC).
        SampleSize:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "Sets the number of files in each leaf folder to be crawled\
              \ when crawling sample files in a dataset. If not set, all the files\
              \ are crawled. A valid value is an integer between 1 and 249."
        EventQueueArn:
          allOf:
          - $ref: '#/components/schemas/EventQueueArn'
          - description: "A valid Amazon SQS ARN. For example, <code>arn:aws:sqs:region:account:sqs</code>."
        DlqEventQueueArn:
          allOf:
          - $ref: '#/components/schemas/EventQueueArn'
          - description: "A valid Amazon dead-letter SQS ARN. For example, <code>arn:aws:sqs:region:account:deadLetterQueue</code>."
      type: object
    ScheduleState:
      enum:
      - SCHEDULED
      - NOT_SCHEDULED
      - TRANSITIONING
      type: string
    UpdateBehavior:
      enum:
      - LOG
      - UPDATE_IN_DATABASE
      type: string
    SchemaColumn:
      description: A key-value pair representing a column and data type that this
        transform can run against. The <code>Schema</code> parameter of the <code>MLTransform</code>
        may contain up to 100 of these structures.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ColumnNameString'
          - description: The name of the column.
        DataType:
          allOf:
          - $ref: '#/components/schemas/ColumnTypeString'
          - description: The type of data in the column.
      type: object
    SchemaListItem:
      description: An object that contains minimal details for a schema.
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: the name of the registry where the schema resides.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/SchemaRegistryNameString'
          - description: The name of the schema.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) for the schema.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description for the schema.
        SchemaStatus:
          allOf:
          - $ref: '#/components/schemas/SchemaStatus'
          - description: The status of the schema.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The date and time that a schema was created.
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdatedTimestamp'
          - description: The date and time that a schema was updated.
      type: object
    SchemaReference:
      description: An object that references a schema stored in the Glue Schema Registry.
      properties:
        SchemaId:
          $ref: '#/components/schemas/SchemaReference_SchemaId'
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique ID assigned to a version of the schema. Either
              this or the <code>SchemaId</code> has to be provided.
        SchemaVersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
      type: object
    SchemaVersionErrorItem:
      description: An object that contains the error details for an operation on a
        schema version.
      properties:
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
        ErrorDetails:
          $ref: '#/components/schemas/SchemaVersionErrorItem_ErrorDetails'
      type: object
    SchemaVersionListItem:
      description: An object containing the details about a schema version.
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/GlueResourceArn'
          - description: The Amazon Resource Name (ARN) of the schema.
        SchemaVersionId:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionIdString'
          - description: The unique identifier of the schema version.
        VersionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionLongNumber'
          - description: The version number of the schema.
        Status:
          allOf:
          - $ref: '#/components/schemas/SchemaVersionStatus'
          - description: The status of the schema version.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          - description: The date and time the schema version was created.
      type: object
    SearchPropertyPredicates:
      items:
        $ref: '#/components/schemas/PropertyPredicate'
      type: array
    SortCriteria:
      items:
        $ref: '#/components/schemas/SortCriterion'
      maxItems: 1
      minItems: 0
      type: array
    TotalSegmentsInteger:
      maximum: 10
      minimum: 1
      type: integer
    SerDeInfo:
      description: Information about a serialization/deserialization program (SerDe)
        that serves as an extractor and loader.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Name of the SerDe.
        SerializationLibrary:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Usually the class that implements the SerDe. An example is
              <code>org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe</code>.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersMap'
          - description: These key-value pairs define initialization parameters for
              the SerDe.
      type: object
    SessionStatus:
      enum:
      - PROVISIONING
      - READY
      - FAILED
      - TIMEOUT
      - STOPPING
      - STOPPED
      type: string
    SkewedInfo:
      description: Specifies skewed values in a table. Skewed values are those that
        occur with very high frequency.
      properties:
        SkewedColumnNames:
          allOf:
          - $ref: '#/components/schemas/NameStringList'
          - description: A list of names of columns that contain skewed values.
        SkewedColumnValues:
          allOf:
          - $ref: '#/components/schemas/ColumnValueStringList'
          - description: A list of values that appear so frequently as to be considered
              skewed.
        SkewedColumnValueLocationMaps:
          allOf:
          - $ref: '#/components/schemas/LocationMap'
          - description: A mapping of skewed values to the columns that contain them.
      type: object
    SnowflakeNodeData:
      description: Specifies configuration for Snowflake nodes in Glue Studio.
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: "Specifies how retrieved data is specified. Valid values:\
              \ <code>\"table\"</code>, <code> \"query\"</code>."
        Connection:
          $ref: '#/components/schemas/SnowflakeNodeData_Connection'
        Schema:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies a Snowflake database schema for your node to use.
        Table:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies a Snowflake table for your node to use.
        Database:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: Specifies a Snowflake database for your node to use.
        TempDir:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Not currently used.
        IamRole:
          $ref: '#/components/schemas/SnowflakeNodeData_IamRole'
        AdditionalOptions:
          allOf:
          - $ref: '#/components/schemas/AdditionalOptions'
          - description: "Specifies additional options passed to the Snowflake connector.\
              \ If options are specified elsewhere in this node, this will take precedence."
        SampleQuery:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A SQL string used to retrieve data with the <code>query</code>
              sourcetype.
        PreAction:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A SQL string run before the Snowflake connector performs
              its standard actions.
        PostAction:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A SQL string run after the Snowflake connector performs its
              standard actions.
        Action:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "Specifies what action to take when writing to a table with\
              \ preexisting data. Valid values: <code> append</code>, <code>merge</code>,\
              \ <code>truncate</code>, <code>drop</code>."
        Upsert:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: "Used when Action is <code>append</code>. Specifies the resolution\
              \ behavior when a row already exists. If true, preexisting rows will\
              \ be updated. If false, those rows will be inserted."
        MergeAction:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: "Specifies a merge action. Valid values: <code>simple</code>,\
              \ <code>custom</code>. If simple, merge behavior is defined by <code>MergeWhenMatched</code>\
              \ and <code> MergeWhenNotMatched</code>. If custom, defined by <code>MergeClause</code>."
        MergeWhenMatched:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: "Specifies how to resolve records that match preexisting\
              \ data when merging. Valid values: <code> update</code>, <code>delete</code>."
        MergeWhenNotMatched:
          allOf:
          - $ref: '#/components/schemas/GenericLimitedString'
          - description: "Specifies how to process records that do not match preexisting\
              \ data when merging. Valid values: <code>insert</code>, <code>none</code>."
        MergeClause:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: A SQL statement that specifies a custom merge behavior.
        StagingTable:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The name of a staging table used when performing <code>merge</code>\
              \ or upsert <code>append</code> actions. Data is written to this table,\
              \ then moved to <code>table</code> by a generated postaction."
        SelectedColumns:
          allOf:
          - $ref: '#/components/schemas/OptionList'
          - description: "Specifies the columns combined to identify a record when\
              \ detecting matches for merges and upserts. A list of structures with\
              \ <code>value</code>, <code>label</code> and <code> description</code>\
              \ keys. Each structure describes a column."
        AutoPushdown:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          - description: "Specifies whether automatic query pushdown is enabled. If\
              \ pushdown is enabled, then when a query is run on Spark, if part of\
              \ the query can be \"pushed down\" to the Snowflake server, it is pushed\
              \ down. This improves performance of some queries."
        TableSchema:
          allOf:
          - $ref: '#/components/schemas/OptionList'
          - description: "Manually defines the target schema for the node. A list\
              \ of structures with <code>value</code> , <code>label</code> and <code>description</code>\
              \ keys. Each structure defines a column."
      type: object
    Sort:
      enum:
      - ASC
      - DESC
      type: string
    SortCriterion:
      description: Specifies a field to sort by and a sort order.
      properties:
        FieldName:
          allOf:
          - $ref: '#/components/schemas/ValueString'
          - description: The name of the field on which to sort.
        Sort:
          allOf:
          - $ref: '#/components/schemas/Sort'
          - description: An ascending or descending sort.
      type: object
    SortDirectionType:
      enum:
      - DESCENDING
      - ASCENDING
      type: string
    SourceControlAuthStrategy:
      enum:
      - PERSONAL_ACCESS_TOKEN
      - AWS_SECRETS_MANAGER
      type: string
    SourceControlProvider:
      enum:
      - GITHUB
      - AWS_CODE_COMMIT
      type: string
    SqlAliases:
      items:
        $ref: '#/components/schemas/SqlAlias'
      type: array
    Topk:
      maximum: 100
      minimum: 0
      type: integer
    SqlAlias:
      description: 'Represents a single entry in the list of values for <code>SqlAliases</code>. '
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          - description: "A table, or a column in a table."
        Alias:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringPropertyWithQuote'
          - description: "A temporary name given to a table, or a column in a table."
      required:
      - Alias
      - From
      type: object
    StartingEventBatchCondition:
      description: "The batch condition that started the workflow run. Either the\
        \ number of events in the batch size arrived, in which case the BatchSize\
        \ member is non-zero, or the batch window expired, in which case the BatchWindow\
        \ member is non-zero."
      properties:
        BatchSize:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Number of events in the batch.
        BatchWindow:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Duration of the batch window in seconds.
      type: object
    StatementState:
      enum:
      - WAITING
      - RUNNING
      - AVAILABLE
      - CANCELLING
      - CANCELLED
      - ERROR
      type: string
    StatementOutput:
      description: The code execution output in JSON format.
      properties:
        Data:
          $ref: '#/components/schemas/StatementOutput_Data'
        ExecutionCount:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: The execution count of the output.
        Status:
          allOf:
          - $ref: '#/components/schemas/StatementState'
          - description: The status of the code execution output.
        ErrorName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The name of the error in the output.
        ErrorValue:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The error value of the output.
        Traceback:
          allOf:
          - $ref: '#/components/schemas/OrchestrationStringList'
          - description: The traceback of the output.
      type: object
    StatementOutputData:
      description: The code execution output in JSON format.
      properties:
        TextPlain:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The code execution output in text format.
      type: object
    ViewTextString:
      maxLength: 409600
      type: string
    TableTypeString:
      maxLength: 255
      type: string
    TableIdentifier:
      description: A structure that describes a target table for resource linking.
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogIdString'
          - description: The ID of the Data Catalog in which the table resides.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the catalog database that contains the target
              table.
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the target table.
        Region:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Region of the target table.
      type: object
    TableError:
      description: An error record for table operations.
      properties:
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: "The name of the table. For Hive compatibility, this must\
              \ be entirely lowercase."
        ErrorDetail:
          $ref: '#/components/schemas/TableError_ErrorDetail'
      type: object
    TableVersionError:
      description: An error record for table-version operations.
      properties:
        TableName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the table in question.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          - description: The ID value of the version in question. A <code>VersionID</code>
              is a string representation of an integer. Each version is incremented
              by 1.
        ErrorDetail:
          $ref: '#/components/schemas/TableError_ErrorDetail'
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagKeysList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TaskRun:
      description: The sampling parameters that are associated with the machine learning
        transform.
      properties:
        TransformId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier for the transform.
        TaskRunId:
          allOf:
          - $ref: '#/components/schemas/HashString'
          - description: The unique identifier for this task run.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskStatusType'
          - description: The current status of the requested task run.
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "The names of the log group for secure logging, associated\
              \ with this task run."
        Properties:
          $ref: '#/components/schemas/TaskRun_Properties'
        ErrorString:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The list of error strings associated with this task run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that this task run started.
        LastModifiedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last point in time that the requested task run was updated.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last point in time that the requested task run was completed.
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          - description: The amount of time (in seconds) that the task run consumed
              resources.
      type: object
    TaskType:
      enum:
      - EVALUATION
      - LABELING_SET_GENERATION
      - IMPORT_LABELS
      - EXPORT_LABELS
      - FIND_MATCHES
      type: string
    TaskRunSortColumnType:
      enum:
      - TASK_RUN_TYPE
      - STATUS
      - STARTED
      type: string
    TransformConfigParameter:
      description: Specifies the parameters in the config file of the dynamic transform.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the name of the parameter in the config file of
              the dynamic transform.
        Type:
          allOf:
          - $ref: '#/components/schemas/ParamType'
          - description: Specifies the parameter type in the config file of the dynamic
              transform.
        ValidationRule:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the validation rule in the config file of the dynamic
              transform.
        ValidationMessage:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperty'
          - description: Specifies the validation message in the config file of the
              dynamic transform.
        Value:
          allOf:
          - $ref: '#/components/schemas/EnclosedInStringProperties'
          - description: Specifies the value of the parameter in the config file of
              the dynamic transform.
        ListType:
          allOf:
          - $ref: '#/components/schemas/ParamType'
          - description: Specifies the list type of the parameter in the config file
              of the dynamic transform.
        IsOptional:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          - description: Specifies whether the parameter is optional or not in the
              config file of the dynamic transform.
      required:
      - Name
      - Type
      type: object
    TransformSortColumnType:
      enum:
      - NAME
      - TRANSFORM_TYPE
      - STATUS
      - CREATED
      - LAST_MODIFIED
      type: string
    TriggerState:
      enum:
      - CREATING
      - CREATED
      - ACTIVATING
      - ACTIVATED
      - DEACTIVATING
      - DEACTIVATED
      - DELETING
      - UPDATING
      type: string
    TriggerUpdate:
      description: A structure used to provide information used to update a trigger.
        This object updates the previous trigger definition by overwriting it completely.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: Reserved for future use.
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: A description of this trigger.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: "A <code>cron</code> expression used to specify the schedule\
              \ (see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html\"\
              >Time-Based Schedules for Jobs and Crawlers</a>. For example, to run\
              \ something every day at 12:15 UTC, you would specify: <code>cron(15\
              \ 12 * * ? *)</code>."
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          - description: The actions initiated by this trigger.
        Predicate:
          $ref: '#/components/schemas/Trigger_Predicate'
        EventBatchingCondition:
          $ref: '#/components/schemas/CreateTriggerRequest_EventBatchingCondition'
      type: object
    UnfilteredPartition:
      description: A partition that contains unfiltered metadata.
      properties:
        Partition:
          $ref: '#/components/schemas/UnfilteredPartition_Partition'
        AuthorizedColumns:
          allOf:
          - $ref: '#/components/schemas/NameStringList'
          - description: The list of columns the user has permissions to access.
        IsRegisteredWithLakeFormation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean value indicating that the partition location is
              registered with Lake Formation.
      type: object
    UnionType:
      enum:
      - ALL
      - DISTINCT
      type: string
    UpdateGrokClassifierRequest:
      description: Specifies a grok classifier to update when passed to <code>UpdateClassifier</code>.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the <code>GrokClassifier</code>.
        Classification:
          allOf:
          - $ref: '#/components/schemas/Classification'
          - description: "An identifier of the data format that the classifier matches,\
              \ such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and\
              \ so on."
        GrokPattern:
          allOf:
          - $ref: '#/components/schemas/GrokPattern'
          - description: The grok pattern used by this classifier.
        CustomPatterns:
          allOf:
          - $ref: '#/components/schemas/CustomPatterns'
          - description: Optional custom grok patterns used by this classifier.
      required:
      - Name
      type: object
    UpdateXMLClassifierRequest:
      description: Specifies an XML classifier to be updated.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        Classification:
          allOf:
          - $ref: '#/components/schemas/Classification'
          - description: An identifier of the data format that the classifier matches.
        RowTag:
          allOf:
          - $ref: '#/components/schemas/RowTag'
          - description: "The XML tag designating the element that contains each record\
              \ in an XML document being parsed. This cannot identify a self-closing\
              \ element (closed by <code>/&gt;</code>). An empty row element that\
              \ contains only attributes can be parsed as long as it ends with a closing\
              \ tag (for example, <code>&lt;row item_a=\"A\" item_b=\"B\"&gt;&lt;/row&gt;</code>\
              \ is okay, but <code>&lt;row item_a=\"A\" item_b=\"B\" /&gt;</code>\
              \ is not)."
      required:
      - Name
      type: object
    UpdateJsonClassifierRequest:
      description: Specifies a JSON classifier to be updated.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        JsonPath:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "A <code>JsonPath</code> string defining the JSON data for\
              \ the classifier to classify. Glue supports a subset of JsonPath, as\
              \ described in <a href=\"https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json\"\
              >Writing JsonPath Custom Classifiers</a>."
      required:
      - Name
      type: object
    UpdateCsvClassifierRequest:
      description: Specifies a custom CSV classifier to be updated.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          - description: The name of the classifier.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/CsvColumnDelimiter'
          - description: A custom symbol to denote what separates each column entry
              in the row.
        QuoteSymbol:
          allOf:
          - $ref: '#/components/schemas/CsvQuoteSymbol'
          - description: A custom symbol to denote what combines content into a single
              column value. It must be different from the column delimiter.
        ContainsHeader:
          allOf:
          - $ref: '#/components/schemas/CsvHeaderOption'
          - description: Indicates whether the CSV file contains a header.
        Header:
          allOf:
          - $ref: '#/components/schemas/CsvHeader'
          - description: A list of strings representing column names.
        DisableValueTrimming:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies not to trim values before identifying the type
              of column values. The default value is true.
        AllowSingleColumn:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Enables the processing of files that contain only one column.
        CustomDatatypeConfigured:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Specifies the configuration of custom datatypes.
        CustomDatatypes:
          allOf:
          - $ref: '#/components/schemas/CustomDatatypes'
          - description: Specifies a list of supported custom datatypes.
      required:
      - Name
      type: object
    UpdateColumnStatisticsList:
      items:
        $ref: '#/components/schemas/ColumnStatistics'
      maxItems: 25
      minItems: 0
      type: array
    WorkflowGraph:
      description: A workflow graph represents the complete workflow containing all
        the Glue components present in the workflow and all the directed connections
        between them.
      properties:
        Nodes:
          allOf:
          - $ref: '#/components/schemas/NodeList'
          - description: A list of the the Glue components belong to the workflow
              represented as nodes.
        Edges:
          allOf:
          - $ref: '#/components/schemas/EdgeList'
          - description: A list of all the directed connections between the nodes
              belonging to the workflow.
      type: object
    WorkflowRunStatus:
      enum:
      - RUNNING
      - COMPLETED
      - STOPPING
      - STOPPED
      - ERROR
      type: string
    WorkflowRunStatistics:
      description: Workflow run statistics provides statistics about the workflow
        run.
      properties:
        TotalActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Total number of Actions in the workflow run.
        TimeoutActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Total number of Actions that timed out.
        FailedActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Total number of Actions that have failed.
        StoppedActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Total number of Actions that have stopped.
        SucceededActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Total number of Actions that have succeeded.
        RunningActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Total number Actions in running state.
        ErroredActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Indicates the count of job runs in the ERROR state in the
              workflow run.
        WaitingActions:
          allOf:
          - $ref: '#/components/schemas/IntegerValue'
          - description: Indicates the count of job runs in WAITING state in the workflow
              run.
      type: object
    CreateClassifierRequest_GrokClassifier:
      allOf:
      - $ref: '#/components/schemas/CreateGrokClassifierRequest'
      - description: A <code>GrokClassifier</code> object specifying the classifier
          to create.
      example:
        CustomPatterns: ""
        GrokPattern: ""
        Classification: ""
        Name: ""
    CreateClassifierRequest_XMLClassifier:
      allOf:
      - $ref: '#/components/schemas/CreateXMLClassifierRequest'
      - description: An <code>XMLClassifier</code> object specifying the classifier
          to create.
      example:
        RowTag: ""
        Classification: ""
        Name: ""
    CreateClassifierRequest_JsonClassifier:
      allOf:
      - $ref: '#/components/schemas/CreateJsonClassifierRequest'
      - description: A <code>JsonClassifier</code> object specifying the classifier
          to create.
      example:
        JsonPath: ""
        Name: ""
    CreateClassifierRequest_CsvClassifier:
      allOf:
      - $ref: '#/components/schemas/CreateCsvClassifierRequest'
      - description: A <code>CsvClassifier</code> object specifying the classifier
          to create.
      example:
        QuoteSymbol: ""
        ContainsHeader: ""
        Delimiter: ""
        Header: ""
        AllowSingleColumn: ""
        CustomDatatypeConfigured: ""
        DisableValueTrimming: ""
        CustomDatatypes: ""
        Name: ""
    CreateConnectionRequest_ConnectionInput:
      allOf:
      - $ref: '#/components/schemas/ConnectionInput'
      - description: A <code>ConnectionInput</code> object defining the connection
          to create.
      example:
        Description: ""
        ConnectionType: ""
        MatchCriteria: ""
        PhysicalConnectionRequirements:
          AvailabilityZone: ""
          SecurityGroupIdList: ""
          SubnetId: ""
        ConnectionProperties: ""
        Name: ""
    CreateCrawlerRequest_Targets:
      allOf:
      - $ref: '#/components/schemas/CrawlerTargets'
      - description: A list of collection of targets to crawl.
      example:
        HudiTargets: ""
        S3Targets: ""
        CatalogTargets: ""
        DeltaTargets: ""
        MongoDBTargets: ""
        JdbcTargets: ""
        DynamoDBTargets: ""
        IcebergTargets: ""
    CreateCrawlerRequest_SchemaChangePolicy:
      allOf:
      - $ref: '#/components/schemas/SchemaChangePolicy'
      - description: The policy for the crawler's update and deletion behavior.
      example:
        UpdateBehavior: ""
        DeleteBehavior: ""
    CreateCrawlerRequest_RecrawlPolicy:
      allOf:
      - $ref: '#/components/schemas/RecrawlPolicy'
      - description: "A policy that specifies whether to crawl the entire dataset\
          \ again, or to crawl only folders that were added since the last crawler\
          \ run."
      example:
        RecrawlBehavior: ""
    CreateCrawlerRequest_LineageConfiguration:
      allOf:
      - $ref: '#/components/schemas/LineageConfiguration'
      - description: Specifies data lineage configuration settings for the crawler.
      example:
        CrawlerLineageSettings: ""
    CreateCrawlerRequest_LakeFormationConfiguration:
      allOf:
      - $ref: '#/components/schemas/LakeFormationConfiguration'
      - description: Specifies Lake Formation configuration settings for the crawler.
      example:
        AccountId: ""
        UseLakeFormationCredentials: ""
    CreateDataQualityRulesetRequest_TargetTable:
      allOf:
      - $ref: '#/components/schemas/DataQualityTargetTable'
      - description: A target table associated with the data quality ruleset.
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
    CreateDatabaseRequest_DatabaseInput:
      allOf:
      - $ref: '#/components/schemas/DatabaseInput'
      - description: The metadata for the database.
      example:
        LocationUri: ""
        CreateTableDefaultPermissions: ""
        Description: ""
        Parameters: ""
        TargetDatabase:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
        FederatedDatabase:
          ConnectionName: ""
          Identifier: ""
        Name: ""
    CreateJobRequest_ExecutionProperty:
      allOf:
      - $ref: '#/components/schemas/ExecutionProperty'
      - description: An <code>ExecutionProperty</code> specifying the maximum number
          of concurrent runs allowed for this job.
      example:
        MaxConcurrentRuns: ""
    CreateJobRequest_Command:
      allOf:
      - $ref: '#/components/schemas/JobCommand'
      - description: The <code>JobCommand</code> that runs this job.
      example:
        Runtime: ""
        PythonVersion: ""
        ScriptLocation: ""
        Name: ""
    CreateJobRequest_Connections:
      allOf:
      - $ref: '#/components/schemas/ConnectionsList'
      - description: The connections used for this job.
      example:
        Connections: ""
    CreateJobRequest_NotificationProperty:
      allOf:
      - $ref: '#/components/schemas/NotificationProperty'
      - description: Specifies configuration properties of a job notification.
      example:
        NotifyDelayAfter: ""
    CreateJobRequest_SourceControlDetails:
      allOf:
      - $ref: '#/components/schemas/SourceControlDetails'
      - description: "The details for a source control configuration for a job, allowing\
          \ synchronization of job artifacts to or from a remote repository."
      example:
        LastCommitId: ""
        Repository: ""
        Owner: ""
        AuthStrategy: ""
        Branch: ""
        AuthToken: ""
        Folder: ""
        Provider: ""
    CreateMLTransformRequest_Parameters:
      allOf:
      - $ref: '#/components/schemas/TransformParameters'
      - description: The algorithmic parameters that are specific to the transform
          type used. Conditionally dependent on the transform type.
      example:
        TransformType: ""
        FindMatchesParameters:
          PrecisionRecallTradeoff: ""
          EnforceProvidedLabels: ""
          PrimaryKeyColumnName: ""
          AccuracyCostTradeoff: ""
    CreateMLTransformRequest_TransformEncryption:
      allOf:
      - $ref: '#/components/schemas/TransformEncryption'
      - description: The encryption-at-rest settings of the transform that apply to
          accessing user data. Machine learning transforms can access user data encrypted
          in Amazon S3 using KMS.
      example:
        MlUserDataEncryption:
          KmsKeyId: ""
          MlUserDataEncryptionMode: ""
        TaskRunSecurityConfigurationName: ""
    CreatePartitionRequest_PartitionInput:
      allOf:
      - $ref: '#/components/schemas/PartitionInput'
      - description: A <code>PartitionInput</code> structure defining the partition
          to be created.
      example:
        Parameters: ""
        LastAnalyzedTime: ""
        Values: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
    CreatePartitionIndexRequest_PartitionIndex:
      allOf:
      - $ref: '#/components/schemas/PartitionIndex'
      - description: Specifies a <code>PartitionIndex</code> structure to create a
          partition index in an existing table.
      example:
        IndexName: ""
        Keys: ""
    CreateSchemaInput_RegistryId:
      allOf:
      - $ref: '#/components/schemas/RegistryId'
      - description: " This is a wrapper shape to contain the registry identity fields.\
          \ If this is not provided, the default registry will be used. The ARN format\
          \ for the same will be: <code>arn:aws:glue:us-east-2:&lt;customer id&gt;:registry/default-registry:random-5-letter-id</code>."
      example:
        RegistryName: ""
        RegistryArn: ""
    CreateSecurityConfigurationRequest_EncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfiguration'
      - description: The encryption configuration for the new security configuration.
      example:
        S3Encryption: ""
        CloudWatchEncryption:
          KmsKeyArn: ""
          CloudWatchEncryptionMode: ""
        JobBookmarksEncryption:
          KmsKeyArn: ""
          JobBookmarksEncryptionMode: ""
    CreateSessionResponse_Session:
      allOf:
      - $ref: '#/components/schemas/Session'
      - description: Returns the session object in the response.
      example:
        Status: ""
        Connections:
          Connections: ""
        Progress: ""
        Description: ""
        Role: ""
        DefaultArguments: ""
        Command:
          PythonVersion: ""
          Name: ""
        GlueVersion: ""
        Id: ""
        CreatedOn: ""
        SecurityConfiguration: ""
        ErrorMessage: ""
        MaxCapacity: ""
    CreateSessionRequest_Command:
      allOf:
      - $ref: '#/components/schemas/SessionCommand'
      - description: 'The <code>SessionCommand</code> that runs the job. '
      example:
        PythonVersion: ""
        Name: ""
    CreateSessionRequest_Connections:
      allOf:
      - $ref: '#/components/schemas/ConnectionsList'
      - description: 'The number of connections to use for the session. '
      example:
        Connections: ""
    CreateTableRequest_TableInput:
      allOf:
      - $ref: '#/components/schemas/TableInput'
      - description: The <code>TableInput</code> object that defines the metadata
          table to create in the catalog.
      example:
        Owner: ""
        ViewOriginalText: ""
        Description: ""
        TableType: ""
        Parameters: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        Retention: ""
        Name: ""
        ViewExpandedText: ""
        LastAnalyzedTime: ""
        TargetTable:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
          Name: ""
        PartitionKeys: ""
    CreateTableRequest_OpenTableFormatInput:
      allOf:
      - $ref: '#/components/schemas/OpenTableFormatInput'
      - description: Specifies an <code>OpenTableFormatInput</code> structure when
          creating an open format table.
      example:
        IcebergInput:
          MetadataOperation: ""
          Version: ""
    CreateTriggerRequest_Predicate:
      allOf:
      - $ref: '#/components/schemas/Predicate'
      - description: <p>A predicate to specify when the new trigger should fire.</p>
          <p>This field is required when the trigger type is <code>CONDITIONAL</code>.</p>
      example:
        Logical: ""
        Conditions: ""
    CreateTriggerRequest_EventBatchingCondition:
      allOf:
      - $ref: '#/components/schemas/EventBatchingCondition'
      - description: Batch condition that must be met (specified number of events
          received or batch time window expired) before EventBridge event trigger
          fires.
      example:
        BatchSize: ""
        BatchWindow: ""
    CreateUserDefinedFunctionRequest_FunctionInput:
      allOf:
      - $ref: '#/components/schemas/UserDefinedFunctionInput'
      - description: A <code>FunctionInput</code> object that defines the function
          to create in the Data Catalog.
      example:
        FunctionName: ""
        OwnerName: ""
        OwnerType: ""
        ResourceUris: ""
        ClassName: ""
    DeleteRegistryInput_RegistryId:
      allOf:
      - $ref: '#/components/schemas/RegistryId'
      - description: This is a wrapper structure that may contain the registry name
          and Amazon Resource Name (ARN).
      example:
        RegistryName: ""
        RegistryArn: ""
    DeleteSchemaInput_SchemaId:
      allOf:
      - $ref: '#/components/schemas/SchemaId'
      - description: This is a wrapper structure that may contain the schema name
          and Amazon Resource Name (ARN).
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
    GetBlueprintResponse_Blueprint:
      allOf:
      - $ref: '#/components/schemas/Blueprint'
      - description: Returns a <code>Blueprint</code> object.
      example:
        Status: ""
        Description: ""
        ParameterSpec: ""
        BlueprintServiceLocation: ""
        LastModifiedOn: ""
        CreatedOn: ""
        BlueprintLocation: ""
        LastActiveDefinition:
          Description: ""
          ParameterSpec: ""
          BlueprintServiceLocation: ""
          LastModifiedOn: ""
          BlueprintLocation: ""
        ErrorMessage: ""
        Name: ""
    GetBlueprintRunResponse_BlueprintRun:
      allOf:
      - $ref: '#/components/schemas/BlueprintRun'
      - description: Returns a <code>BlueprintRun</code> object.
      example:
        RollbackErrorMessage: ""
        Parameters: ""
        BlueprintName: ""
        WorkflowName: ""
        State: ""
        RunId: ""
        CompletedOn: ""
        ErrorMessage: ""
        RoleArn: ""
        StartedOn: ""
    GetCatalogImportStatusResponse_ImportStatus:
      allOf:
      - $ref: '#/components/schemas/CatalogImportStatus'
      - description: The status of the specified catalog migration.
      example:
        ImportTime: ""
        ImportCompleted: ""
        ImportedBy: ""
    GetClassifierResponse_Classifier:
      allOf:
      - $ref: '#/components/schemas/Classifier'
      - description: The requested classifier.
      example:
        XMLClassifier:
          RowTag: ""
          Version: ""
          Classification: ""
          CreationTime: ""
          LastUpdated: ""
          Name: ""
        JsonClassifier:
          Version: ""
          CreationTime: ""
          LastUpdated: ""
          JsonPath: ""
          Name: ""
        CsvClassifier:
          QuoteSymbol: ""
          ContainsHeader: ""
          Delimiter: ""
          Header: ""
          AllowSingleColumn: ""
          CustomDatatypeConfigured: ""
          Version: ""
          DisableValueTrimming: ""
          CreationTime: ""
          CustomDatatypes: ""
          LastUpdated: ""
          Name: ""
        GrokClassifier:
          CustomPatterns: ""
          GrokPattern: ""
          Version: ""
          Classification: ""
          CreationTime: ""
          LastUpdated: ""
          Name: ""
    GetConnectionResponse_Connection:
      allOf:
      - $ref: '#/components/schemas/Connection'
      - description: The requested connection definition.
      example:
        LastUpdatedBy: ""
        Description: ""
        ConnectionType: ""
        MatchCriteria: ""
        PhysicalConnectionRequirements:
          AvailabilityZone: ""
          SecurityGroupIdList: ""
          SubnetId: ""
        ConnectionProperties: ""
        CreationTime: ""
        LastUpdatedTime: ""
        Name: ""
    GetConnectionsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/GetConnectionsFilter'
      - description: A filter that controls which connections are returned.
      example:
        ConnectionType: ""
        MatchCriteria: ""
    GetCrawlerResponse_Crawler:
      allOf:
      - $ref: '#/components/schemas/Crawler'
      - description: The metadata for the specified crawler.
      example:
        Classifiers: ""
        Description: ""
        SchemaChangePolicy:
          UpdateBehavior: ""
          DeleteBehavior: ""
        CrawlElapsedTime: ""
        Configuration: ""
        RecrawlPolicy:
          RecrawlBehavior: ""
        DatabaseName: ""
        Targets:
          HudiTargets: ""
          S3Targets: ""
          CatalogTargets: ""
          DeltaTargets: ""
          MongoDBTargets: ""
          JdbcTargets: ""
          DynamoDBTargets: ""
          IcebergTargets: ""
        LineageConfiguration:
          CrawlerLineageSettings: ""
        CrawlerSecurityConfiguration: ""
        Name: ""
        Role: ""
        LakeFormationConfiguration:
          AccountId: ""
          UseLakeFormationCredentials: ""
        Version: ""
        State: ""
        LastCrawl:
          Status: ""
          LogGroup: ""
          MessagePrefix: ""
          StartTime: ""
          LogStream: ""
          ErrorMessage: ""
        Schedule:
          ScheduleExpression: ""
          State: ""
        CreationTime: ""
        LastUpdated: ""
        TablePrefix: ""
    GetDataCatalogEncryptionSettingsResponse_DataCatalogEncryptionSettings:
      allOf:
      - $ref: '#/components/schemas/DataCatalogEncryptionSettings'
      - description: The requested security configuration.
      example:
        EncryptionAtRest:
          CatalogEncryptionMode: ""
          SseAwsKmsKeyId: ""
        ConnectionPasswordEncryption:
          ReturnConnectionPasswordEncrypted: ""
          AwsKmsKeyId: ""
    GetDataQualityResultResponse_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: "The table associated with the data quality result, if any."
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    GetDataQualityRuleRecommendationRunResponse_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The data source (an Glue table) associated with this run.
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    GetDataQualityRulesetResponse_TargetTable:
      allOf:
      - $ref: '#/components/schemas/DataQualityTargetTable'
      - description: The name and database name of the target table.
      example:
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
    GetDataQualityRulesetEvaluationRunResponse_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The data source (an Glue table) associated with this evaluation
          run.
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    GetDataQualityRulesetEvaluationRunResponse_AdditionalRunOptions:
      allOf:
      - $ref: '#/components/schemas/DataQualityEvaluationRunAdditionalRunOptions'
      - description: Additional run options you can specify for an evaluation run.
      example:
        ResultsS3Prefix: ""
        CloudWatchMetricsEnabled: ""
    GetDatabaseResponse_Database:
      allOf:
      - $ref: '#/components/schemas/Database'
      - description: The definition of the specified database in the Data Catalog.
      example:
        LocationUri: ""
        CreateTableDefaultPermissions: ""
        Description: ""
        Parameters: ""
        TargetDatabase:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
        CreateTime: ""
        FederatedDatabase:
          ConnectionName: ""
          Identifier: ""
        CatalogId: ""
        Name: ""
    GetDevEndpointResponse_DevEndpoint:
      allOf:
      - $ref: '#/components/schemas/DevEndpoint'
      - description: A <code>DevEndpoint</code> definition.
      example:
        CreatedTimestamp: ""
        NumberOfNodes: ""
        SubnetId: ""
        PublicAddress: ""
        PublicKeys: ""
        WorkerType: ""
        ExtraPythonLibsS3Path: ""
        LastUpdateStatus: ""
        NumberOfWorkers: ""
        ZeppelinRemoteSparkInterpreterPort: ""
        Status: ""
        ExtraJarsS3Path: ""
        PublicKey: ""
        Arguments: ""
        AvailabilityZone: ""
        LastModifiedTimestamp: ""
        SecurityGroupIds: ""
        RoleArn: ""
        YarnEndpointAddress: ""
        EndpointName: ""
        VpcId: ""
        GlueVersion: ""
        FailureReason: ""
        SecurityConfiguration: ""
        PrivateAddress: ""
    GetJobResponse_Job:
      allOf:
      - $ref: '#/components/schemas/Job'
      - description: The requested job definition.
      example:
        Connections:
          Connections: ""
        MaxRetries: ""
        Description: ""
        Timeout: ""
        SourceControlDetails:
          LastCommitId: ""
          Repository: ""
          Owner: ""
          AuthStrategy: ""
          Branch: ""
          AuthToken: ""
          Folder: ""
          Provider: ""
        AllocatedCapacity: ""
        LastModifiedOn: ""
        Name: ""
        Role: ""
        DefaultArguments: ""
        NotificationProperty:
          NotifyDelayAfter: ""
        CodeGenConfigurationNodes: ""
        WorkerType: ""
        ExecutionClass: ""
        LogUri: ""
        Command:
          Runtime: ""
          PythonVersion: ""
          ScriptLocation: ""
          Name: ""
        GlueVersion: ""
        ExecutionProperty:
          MaxConcurrentRuns: ""
        CreatedOn: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        NonOverridableArguments: ""
        MaxCapacity: ""
    GetJobBookmarkResponse_JobBookmarkEntry:
      allOf:
      - $ref: '#/components/schemas/JobBookmarkEntry'
      - description: A structure that defines a point that a job can resume processing.
      example:
        Attempt: ""
        Version: ""
        JobName: ""
        PreviousRunId: ""
        Run: ""
        JobBookmark: ""
        RunId: ""
    GetJobRunResponse_JobRun:
      allOf:
      - $ref: '#/components/schemas/JobRun'
      - description: The requested job-run metadata.
      example:
        PredecessorRuns: ""
        Timeout: ""
        AllocatedCapacity: ""
        PreviousRunId: ""
        JobName: ""
        Arguments: ""
        LastModifiedOn: ""
        CompletedOn: ""
        StartedOn: ""
        ExecutionTime: ""
        NotificationProperty:
          NotifyDelayAfter: ""
        WorkerType: ""
        TriggerName: ""
        ExecutionClass: ""
        Attempt: ""
        GlueVersion: ""
        DPUSeconds: ""
        Id: ""
        SecurityConfiguration: ""
        LogGroupName: ""
        ErrorMessage: ""
        NumberOfWorkers: ""
        JobRunState: ""
        MaxCapacity: ""
    GetMLTaskRunResponse_Properties:
      allOf:
      - $ref: '#/components/schemas/TaskRunProperties'
      - description: The list of properties that are associated with the task run.
      example:
        ExportLabelsTaskRunProperties:
          OutputS3Path: ""
        FindMatchesTaskRunProperties:
          JobRunId: ""
          JobName: ""
          JobId: ""
        TaskType: ""
        LabelingSetGenerationTaskRunProperties:
          OutputS3Path: ""
        ImportLabelsTaskRunProperties:
          Replace: ""
          InputS3Path: ""
    GetMLTaskRunsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/TaskRunFilterCriteria'
      - description: "The filter criteria, in the <code>TaskRunFilterCriteria</code>\
          \ structure, for the task run."
      example:
        Status: ""
        TaskRunType: ""
        StartedAfter: ""
        StartedBefore: ""
    GetMLTaskRunsRequest_Sort:
      allOf:
      - $ref: '#/components/schemas/TaskRunSortCriteria'
      - description: "The sorting criteria, in the <code>TaskRunSortCriteria</code>\
          \ structure, for the task run."
      example:
        SortDirection: ""
        Column: ""
    GetMLTransformResponse_Parameters:
      allOf:
      - $ref: '#/components/schemas/TransformParameters'
      - description: The configuration parameters that are specific to the algorithm
          used.
      example:
        TransformType: ""
        FindMatchesParameters:
          PrecisionRecallTradeoff: ""
          EnforceProvidedLabels: ""
          PrimaryKeyColumnName: ""
          AccuracyCostTradeoff: ""
    GetMLTransformResponse_EvaluationMetrics:
      allOf:
      - $ref: '#/components/schemas/EvaluationMetrics'
      - description: The latest evaluation metrics.
      example:
        FindMatchesMetrics:
          AreaUnderPRCurve: ""
          ConfusionMatrix:
            NumFalsePositives: ""
            NumTruePositives: ""
            NumFalseNegatives: ""
            NumTrueNegatives: ""
          Precision: ""
          Recall: ""
          ColumnImportances: ""
          F1: ""
        TransformType: ""
    GetMLTransformsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/TransformFilterCriteria'
      - description: The filter transformation criteria.
      example:
        Status: ""
        GlueVersion: ""
        CreatedAfter: ""
        Schema: ""
        LastModifiedAfter: ""
        CreatedBefore: ""
        TransformType: ""
        LastModifiedBefore: ""
        Name: ""
    GetMLTransformsRequest_Sort:
      allOf:
      - $ref: '#/components/schemas/TransformSortCriteria'
      - description: The sorting criteria.
      example:
        SortDirection: ""
        Column: ""
    GetMappingRequest_Source:
      allOf:
      - $ref: '#/components/schemas/CatalogEntry'
      - description: Specifies the source table.
      example:
        TableName: ""
        DatabaseName: ""
    GetMappingRequest_Location:
      allOf:
      - $ref: '#/components/schemas/Location'
      - description: Parameters for the mapping.
      example:
        S3: ""
        Jdbc: ""
        DynamoDB: ""
    GetPartitionResponse_Partition:
      allOf:
      - $ref: '#/components/schemas/Partition'
      - description: "The requested information, in the form of a <code>Partition</code>\
          \ object."
      example:
        TableName: ""
        Parameters: ""
        LastAnalyzedTime: ""
        Values: ""
        DatabaseName: ""
        CreationTime: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        CatalogId: ""
    GetPartitionsRequest_Segment:
      allOf:
      - $ref: '#/components/schemas/Segment'
      - description: The segment of the table's partitions to scan in this request.
      example:
        SegmentNumber: ""
        TotalSegments: ""
    GetPlanRequest_Source:
      allOf:
      - $ref: '#/components/schemas/CatalogEntry'
      - description: The source table.
      example:
        TableName: ""
        DatabaseName: ""
    GetPlanRequest_Location:
      allOf:
      - $ref: '#/components/schemas/Location'
      - description: The parameters for the mapping.
      example:
        S3: ""
        Jdbc: ""
        DynamoDB: ""
    GetSchemaInput_SchemaId:
      allOf:
      - $ref: '#/components/schemas/SchemaId'
      - description: "<p>This is a wrapper structure to contain schema identity fields.\
          \ The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon\
          \ Resource Name (ARN) of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code>\
          \ and <code>RegistryName</code> has to be provided.</p> </li> <li> <p>SchemaId$SchemaName:\
          \ The name of the schema. Either <code>SchemaArn</code> or <code>SchemaName</code>\
          \ and <code>RegistryName</code> has to be provided.</p> </li> </ul>"
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
    GetSchemaByDefinitionInput_SchemaId:
      allOf:
      - $ref: '#/components/schemas/SchemaId'
      - description: "<p>This is a wrapper structure to contain schema identity fields.\
          \ The structure contains:</p> <ul> <li> <p>SchemaId$SchemaArn: The Amazon\
          \ Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>\
          \ has to be provided.</p> </li> <li> <p>SchemaId$SchemaName: The name of\
          \ the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has\
          \ to be provided.</p> </li> </ul>"
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
    GetSchemaVersionInput_SchemaVersionNumber:
      allOf:
      - $ref: '#/components/schemas/SchemaVersionNumber'
      - description: The version number of the schema.
      example:
        LatestVersion: ""
        VersionNumber: ""
    GetSchemaVersionsDiffInput_FirstSchemaVersionNumber:
      allOf:
      - $ref: '#/components/schemas/SchemaVersionNumber'
      - description: The first of the two schema versions to be compared.
      example:
        LatestVersion: ""
        VersionNumber: ""
    GetSchemaVersionsDiffInput_SecondSchemaVersionNumber:
      allOf:
      - $ref: '#/components/schemas/SchemaVersionNumber'
      - description: The second of the two schema versions to be compared.
      example:
        LatestVersion: ""
        VersionNumber: ""
    GetSecurityConfigurationResponse_SecurityConfiguration:
      allOf:
      - $ref: '#/components/schemas/SecurityConfiguration'
      - description: The requested security configuration.
      example:
        CreatedTimeStamp: ""
        EncryptionConfiguration:
          S3Encryption: ""
          CloudWatchEncryption:
            KmsKeyArn: ""
            CloudWatchEncryptionMode: ""
          JobBookmarksEncryption:
            KmsKeyArn: ""
            JobBookmarksEncryptionMode: ""
        Name: ""
    GetSessionResponse_Session:
      allOf:
      - $ref: '#/components/schemas/Session'
      - description: The session object is returned in the response.
      example:
        Status: ""
        Connections:
          Connections: ""
        Progress: ""
        Description: ""
        Role: ""
        DefaultArguments: ""
        Command:
          PythonVersion: ""
          Name: ""
        GlueVersion: ""
        Id: ""
        CreatedOn: ""
        SecurityConfiguration: ""
        ErrorMessage: ""
        MaxCapacity: ""
    GetStatementResponse_Statement:
      allOf:
      - $ref: '#/components/schemas/Statement'
      - description: Returns the statement.
      example:
        Progress: ""
        State: ""
        Output:
          Status: ""
          ErrorName: ""
          ExecutionCount: ""
          ErrorValue: ""
          Data:
            TextPlain: ""
          Traceback: ""
        Id: ""
        CompletedOn: ""
        Code: ""
        StartedOn: ""
    GetTableResponse_Table:
      allOf:
      - $ref: '#/components/schemas/Table'
      - description: The <code>Table</code> object that defines the specified table.
      example:
        VersionId: ""
        Owner: ""
        ViewOriginalText: ""
        Description: ""
        TableType: ""
        Parameters: ""
        CreatedBy: ""
        CreateTime: ""
        DatabaseName: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        Retention: ""
        IsRegisteredWithLakeFormation: ""
        CatalogId: ""
        FederatedTable:
          ConnectionName: ""
          Identifier: ""
          DatabaseIdentifier: ""
        Name: ""
        ViewExpandedText: ""
        LastAnalyzedTime: ""
        UpdateTime: ""
        TargetTable:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
          Name: ""
        PartitionKeys: ""
    GetTableVersionResponse_TableVersion:
      allOf:
      - $ref: '#/components/schemas/TableVersion'
      - description: The requested table version.
      example:
        VersionId: ""
        Table:
          VersionId: ""
          Owner: ""
          ViewOriginalText: ""
          Description: ""
          TableType: ""
          Parameters: ""
          CreatedBy: ""
          CreateTime: ""
          DatabaseName: ""
          StorageDescriptor:
            StoredAsSubDirectories: ""
            Parameters: ""
            BucketColumns: ""
            NumberOfBuckets: ""
            AdditionalLocations: ""
            OutputFormat: ""
            Columns: ""
            SerdeInfo:
              Parameters: ""
              SerializationLibrary: ""
              Name: ""
            SortColumns: ""
            Compressed: ""
            SchemaReference:
              SchemaVersionId: ""
              SchemaId:
                RegistryName: ""
                SchemaArn: ""
                SchemaName: ""
              SchemaVersionNumber: ""
            SkewedInfo:
              SkewedColumnNames: ""
              SkewedColumnValues: ""
              SkewedColumnValueLocationMaps: ""
            InputFormat: ""
            Location: ""
          LastAccessTime: ""
          Retention: ""
          IsRegisteredWithLakeFormation: ""
          CatalogId: ""
          FederatedTable:
            ConnectionName: ""
            Identifier: ""
            DatabaseIdentifier: ""
          Name: ""
          ViewExpandedText: ""
          LastAnalyzedTime: ""
          UpdateTime: ""
          TargetTable:
            DatabaseName: ""
            Region: ""
            CatalogId: ""
            Name: ""
          PartitionKeys: ""
    GetTriggerResponse_Trigger:
      allOf:
      - $ref: '#/components/schemas/Trigger'
      - description: The requested trigger definition.
      example:
        Type: ""
        Description: ""
        Actions: ""
        EventBatchingCondition:
          BatchSize: ""
          BatchWindow: ""
        WorkflowName: ""
        State: ""
        Schedule: ""
        Id: ""
        Name: ""
        Predicate:
          Logical: ""
          Conditions: ""
    GetUnfilteredPartitionMetadataResponse_Partition:
      allOf:
      - $ref: '#/components/schemas/Partition'
      - description: A Partition object containing the partition metadata.
      example:
        TableName: ""
        Parameters: ""
        LastAnalyzedTime: ""
        Values: ""
        DatabaseName: ""
        CreationTime: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        CatalogId: ""
    GetUnfilteredPartitionMetadataRequest_AuditContext:
      allOf:
      - $ref: '#/components/schemas/AuditContext'
      - description: A structure containing Lake Formation audit context information.
      example:
        RequestedColumns: ""
        AdditionalAuditContext: ""
        AllColumnsRequested: ""
    GetUnfilteredTableMetadataResponse_Table:
      allOf:
      - $ref: '#/components/schemas/Table'
      - description: A Table object containing the table metadata.
      example:
        VersionId: ""
        Owner: ""
        ViewOriginalText: ""
        Description: ""
        TableType: ""
        Parameters: ""
        CreatedBy: ""
        CreateTime: ""
        DatabaseName: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        Retention: ""
        IsRegisteredWithLakeFormation: ""
        CatalogId: ""
        FederatedTable:
          ConnectionName: ""
          Identifier: ""
          DatabaseIdentifier: ""
        Name: ""
        ViewExpandedText: ""
        LastAnalyzedTime: ""
        UpdateTime: ""
        TargetTable:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
          Name: ""
        PartitionKeys: ""
    GetUserDefinedFunctionResponse_UserDefinedFunction:
      allOf:
      - $ref: '#/components/schemas/UserDefinedFunction'
      - description: The requested function definition.
      example:
        FunctionName: ""
        OwnerName: ""
        OwnerType: ""
        CreateTime: ""
        ResourceUris: ""
        DatabaseName: ""
        ClassName: ""
        CatalogId: ""
    GetWorkflowResponse_Workflow:
      allOf:
      - $ref: '#/components/schemas/Workflow'
      - description: The resource metadata for the workflow.
      example:
        Description: ""
        Graph:
          Edges: ""
          Nodes: ""
        BlueprintDetails:
          BlueprintName: ""
          RunId: ""
        DefaultRunProperties: ""
        LastModifiedOn: ""
        CreatedOn: ""
        Name: ""
        LastRun:
          Status: ""
          Graph:
            Edges: ""
            Nodes: ""
          StartingEventBatchCondition:
            BatchSize: ""
            BatchWindow: ""
          PreviousRunId: ""
          CompletedOn: ""
          ErrorMessage: ""
          Statistics:
            RunningActions: ""
            ErroredActions: ""
            TotalActions: ""
            FailedActions: ""
            StoppedActions: ""
            WaitingActions: ""
            TimeoutActions: ""
            SucceededActions: ""
          WorkflowRunId: ""
          WorkflowRunProperties: ""
          Name: ""
          StartedOn: ""
        MaxConcurrentRuns: ""
    GetWorkflowRunResponse_Run:
      allOf:
      - $ref: '#/components/schemas/WorkflowRun'
      - description: The requested workflow run metadata.
      example:
        Status: ""
        Graph:
          Edges: ""
          Nodes: ""
        StartingEventBatchCondition:
          BatchSize: ""
          BatchWindow: ""
        PreviousRunId: ""
        CompletedOn: ""
        ErrorMessage: ""
        Statistics:
          RunningActions: ""
          ErroredActions: ""
          TotalActions: ""
          FailedActions: ""
          StoppedActions: ""
          WaitingActions: ""
          TimeoutActions: ""
          SucceededActions: ""
        WorkflowRunId: ""
        WorkflowRunProperties: ""
        Name: ""
        StartedOn: ""
    ListDataQualityResultsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/DataQualityResultFilterCriteria'
      - description: The filter criteria.
      example:
        JobRunId: ""
        StartedAfter: ""
        JobName: ""
        StartedBefore: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
    ListDataQualityRuleRecommendationRunsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/DataQualityRuleRecommendationRunFilter'
      - description: The filter criteria.
      example:
        StartedAfter: ""
        StartedBefore: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
    ListDataQualityRulesetEvaluationRunsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/DataQualityRulesetEvaluationRunFilter'
      - description: The filter criteria.
      example:
        StartedAfter: ""
        StartedBefore: ""
        DataSource:
          GlueTable:
            ConnectionName: ""
            TableName: ""
            DatabaseName: ""
            CatalogId: ""
            AdditionalOptions: ""
    ListDataQualityRulesetsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/DataQualityRulesetFilterCriteria'
      - description: 'The filter criteria. '
      example:
        Description: ""
        CreatedAfter: ""
        LastModifiedAfter: ""
        TargetTable:
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
        CreatedBefore: ""
        LastModifiedBefore: ""
        Name: ""
    ListMLTransformsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/TransformFilterCriteria'
      - description: A <code>TransformFilterCriteria</code> used to filter the machine
          learning transforms.
      example:
        Status: ""
        GlueVersion: ""
        CreatedAfter: ""
        Schema: ""
        LastModifiedAfter: ""
        CreatedBefore: ""
        TransformType: ""
        LastModifiedBefore: ""
        Name: ""
    ListMLTransformsRequest_Sort:
      allOf:
      - $ref: '#/components/schemas/TransformSortCriteria'
      - description: A <code>TransformSortCriteria</code> used to sort the machine
          learning transforms.
      example:
        SortDirection: ""
        Column: ""
    ListSchemasInput_RegistryId:
      allOf:
      - $ref: '#/components/schemas/RegistryId'
      - description: A wrapper structure that may contain the registry name and Amazon
          Resource Name (ARN).
      example:
        RegistryName: ""
        RegistryArn: ""
    PutDataCatalogEncryptionSettingsRequest_DataCatalogEncryptionSettings:
      allOf:
      - $ref: '#/components/schemas/DataCatalogEncryptionSettings'
      - description: The security configuration to set.
      example:
        EncryptionAtRest:
          CatalogEncryptionMode: ""
          SseAwsKmsKeyId: ""
        ConnectionPasswordEncryption:
          ReturnConnectionPasswordEncrypted: ""
          AwsKmsKeyId: ""
    PutSchemaVersionMetadataInput_SchemaId:
      allOf:
      - $ref: '#/components/schemas/SchemaId'
      - description: The unique ID for the schema.
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
    PutSchemaVersionMetadataInput_MetadataKeyValue:
      allOf:
      - $ref: '#/components/schemas/MetadataKeyValuePair'
      - description: The metadata key's corresponding value.
      example:
        MetadataValue: ""
        MetadataKey: ""
    QuerySchemaVersionMetadataInput_SchemaId:
      allOf:
      - $ref: '#/components/schemas/SchemaId'
      - description: A wrapper structure that may contain the schema name and Amazon
          Resource Name (ARN).
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
    RemoveSchemaVersionMetadataInput_MetadataKeyValue:
      allOf:
      - $ref: '#/components/schemas/MetadataKeyValuePair'
      - description: The value of the metadata key.
      example:
        MetadataValue: ""
        MetadataKey: ""
    ResetJobBookmarkResponse_JobBookmarkEntry:
      allOf:
      - $ref: '#/components/schemas/JobBookmarkEntry'
      - description: The reset bookmark entry.
      example:
        Attempt: ""
        Version: ""
        JobName: ""
        PreviousRunId: ""
        Run: ""
        JobBookmark: ""
        RunId: ""
    StartDataQualityRuleRecommendationRunRequest_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The data source (Glue table) associated with this run.
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    StartJobRunRequest_NotificationProperty:
      allOf:
      - $ref: '#/components/schemas/NotificationProperty'
      - description: Specifies configuration properties of a job run notification.
      example:
        NotifyDelayAfter: ""
    UpdateClassifierRequest_GrokClassifier:
      allOf:
      - $ref: '#/components/schemas/UpdateGrokClassifierRequest'
      - description: A <code>GrokClassifier</code> object with updated fields.
      example:
        CustomPatterns: ""
        GrokPattern: ""
        Classification: ""
        Name: ""
    UpdateClassifierRequest_XMLClassifier:
      allOf:
      - $ref: '#/components/schemas/UpdateXMLClassifierRequest'
      - description: An <code>XMLClassifier</code> object with updated fields.
      example:
        RowTag: ""
        Classification: ""
        Name: ""
    UpdateClassifierRequest_JsonClassifier:
      allOf:
      - $ref: '#/components/schemas/UpdateJsonClassifierRequest'
      - description: A <code>JsonClassifier</code> object with updated fields.
      example:
        JsonPath: ""
        Name: ""
    UpdateClassifierRequest_CsvClassifier:
      allOf:
      - $ref: '#/components/schemas/UpdateCsvClassifierRequest'
      - description: A <code>CsvClassifier</code> object with updated fields.
      example:
        QuoteSymbol: ""
        ContainsHeader: ""
        Delimiter: ""
        Header: ""
        AllowSingleColumn: ""
        CustomDatatypeConfigured: ""
        DisableValueTrimming: ""
        CustomDatatypes: ""
        Name: ""
    UpdateConnectionRequest_ConnectionInput:
      allOf:
      - $ref: '#/components/schemas/ConnectionInput'
      - description: A <code>ConnectionInput</code> object that redefines the connection
          in question.
      example:
        Description: ""
        ConnectionType: ""
        MatchCriteria: ""
        PhysicalConnectionRequirements:
          AvailabilityZone: ""
          SecurityGroupIdList: ""
          SubnetId: ""
        ConnectionProperties: ""
        Name: ""
    UpdateCrawlerRequest_Targets:
      allOf:
      - $ref: '#/components/schemas/CrawlerTargets'
      - description: A list of targets to crawl.
      example:
        HudiTargets: ""
        S3Targets: ""
        CatalogTargets: ""
        DeltaTargets: ""
        MongoDBTargets: ""
        JdbcTargets: ""
        DynamoDBTargets: ""
        IcebergTargets: ""
    UpdateDatabaseRequest_DatabaseInput:
      allOf:
      - $ref: '#/components/schemas/DatabaseInput'
      - description: A <code>DatabaseInput</code> object specifying the new definition
          of the metadata database in the catalog.
      example:
        LocationUri: ""
        CreateTableDefaultPermissions: ""
        Description: ""
        Parameters: ""
        TargetDatabase:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
        FederatedDatabase:
          ConnectionName: ""
          Identifier: ""
        Name: ""
    UpdateDevEndpointRequest_CustomLibraries:
      allOf:
      - $ref: '#/components/schemas/DevEndpointCustomLibraries'
      - description: Custom Python or Java libraries to be loaded in the <code>DevEndpoint</code>.
      example:
        ExtraJarsS3Path: ""
        ExtraPythonLibsS3Path: ""
    UpdateJobRequest_JobUpdate:
      allOf:
      - $ref: '#/components/schemas/JobUpdate'
      - description: Specifies the values with which to update the job definition.
          Unspecified configuration is removed or reset to default values.
      example:
        Connections:
          Connections: ""
        MaxRetries: ""
        Description: ""
        Timeout: ""
        SourceControlDetails:
          LastCommitId: ""
          Repository: ""
          Owner: ""
          AuthStrategy: ""
          Branch: ""
          AuthToken: ""
          Folder: ""
          Provider: ""
        AllocatedCapacity: ""
        Role: ""
        DefaultArguments: ""
        NotificationProperty:
          NotifyDelayAfter: ""
        CodeGenConfigurationNodes: ""
        WorkerType: ""
        ExecutionClass: ""
        LogUri: ""
        Command:
          Runtime: ""
          PythonVersion: ""
          ScriptLocation: ""
          Name: ""
        GlueVersion: ""
        ExecutionProperty:
          MaxConcurrentRuns: ""
        SecurityConfiguration: ""
        NumberOfWorkers: ""
        NonOverridableArguments: ""
        MaxCapacity: ""
    UpdateMLTransformRequest_Parameters:
      allOf:
      - $ref: '#/components/schemas/TransformParameters'
      - description: The configuration parameters that are specific to the transform
          type (algorithm) used. Conditionally dependent on the transform type.
      example:
        TransformType: ""
        FindMatchesParameters:
          PrecisionRecallTradeoff: ""
          EnforceProvidedLabels: ""
          PrimaryKeyColumnName: ""
          AccuracyCostTradeoff: ""
    UpdatePartitionRequest_PartitionInput:
      allOf:
      - $ref: '#/components/schemas/PartitionInput'
      - description: "<p>The new partition object to update the partition to.</p>\
          \ <p>The <code>Values</code> property can't be changed. If you want to change\
          \ the partition key values for a partition, delete and recreate the partition.</p>"
      example:
        Parameters: ""
        LastAnalyzedTime: ""
        Values: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
    UpdateSchemaInput_SchemaVersionNumber:
      allOf:
      - $ref: '#/components/schemas/SchemaVersionNumber'
      - description: Version number required for check pointing. One of <code>VersionNumber</code>
          or <code>Compatibility</code> has to be provided.
      example:
        LatestVersion: ""
        VersionNumber: ""
    UpdateTableRequest_TableInput:
      allOf:
      - $ref: '#/components/schemas/TableInput'
      - description: An updated <code>TableInput</code> object to define the metadata
          table in the catalog.
      example:
        Owner: ""
        ViewOriginalText: ""
        Description: ""
        TableType: ""
        Parameters: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        Retention: ""
        Name: ""
        ViewExpandedText: ""
        LastAnalyzedTime: ""
        TargetTable:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
          Name: ""
        PartitionKeys: ""
    UpdateTriggerResponse_Trigger:
      allOf:
      - $ref: '#/components/schemas/Trigger'
      - description: The resulting trigger definition.
      example:
        Type: ""
        Description: ""
        Actions: ""
        EventBatchingCondition:
          BatchSize: ""
          BatchWindow: ""
        WorkflowName: ""
        State: ""
        Schedule: ""
        Id: ""
        Name: ""
        Predicate:
          Logical: ""
          Conditions: ""
    UpdateTriggerRequest_TriggerUpdate:
      allOf:
      - $ref: '#/components/schemas/TriggerUpdate'
      - description: The new values with which to update the trigger.
      example:
        Description: ""
        Actions: ""
        EventBatchingCondition:
          BatchSize: ""
          BatchWindow: ""
        Schedule: ""
        Name: ""
        Predicate:
          Logical: ""
          Conditions: ""
    UpdateUserDefinedFunctionRequest_FunctionInput:
      allOf:
      - $ref: '#/components/schemas/UserDefinedFunctionInput'
      - description: A <code>FunctionInput</code> object that redefines the function
          in the Data Catalog.
      example:
        FunctionName: ""
        OwnerName: ""
        OwnerType: ""
        ResourceUris: ""
        ClassName: ""
    AmazonRedshiftNodeData_Connection:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: The Glue connection to the Redshift cluster.
    AmazonRedshiftNodeData_Schema:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: The Redshift schema name when working with a direct connection.
    AmazonRedshiftNodeData_Table:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: The Redshift table name when working with a direct connection.
    AmazonRedshiftNodeData_CatalogDatabase:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: The name of the Glue Data Catalog database when working with
          a data catalog.
    AmazonRedshiftNodeData_CatalogTable:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: The Glue Data Catalog table name when working with a data catalog.
    AmazonRedshiftNodeData_IamRole:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: Optional. The role name use when connection to S3. The IAM role
          ill default to the role on the job when left blank.
    AmazonRedshiftSource_Data:
      allOf:
      - $ref: '#/components/schemas/AmazonRedshiftNodeData'
      - description: Specifies the data of the Amazon Reshift source node.
    AmazonRedshiftTarget_Data:
      allOf:
      - $ref: '#/components/schemas/AmazonRedshiftNodeData'
      - description: Specifies the data of the Amazon Redshift target node.
    BatchStopJobRunError_ErrorDetail:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: Specifies details about the error that was encountered.
    BatchUpdatePartitionFailureEntry_ErrorDetail:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: The details about the batch update partition error.
    PartitionInput_StorageDescriptor:
      allOf:
      - $ref: '#/components/schemas/StorageDescriptor'
      - description: Provides information about the physical location where the partition
          is stored.
      example:
        StoredAsSubDirectories: ""
        Parameters: ""
        BucketColumns: ""
        NumberOfBuckets: ""
        AdditionalLocations: ""
        OutputFormat: ""
        Columns: ""
        SerdeInfo:
          Parameters: ""
          SerializationLibrary: ""
          Name: ""
        SortColumns: ""
        Compressed: ""
        SchemaReference:
          SchemaVersionId: ""
          SchemaId:
            RegistryName: ""
            SchemaArn: ""
            SchemaName: ""
          SchemaVersionNumber: ""
        SkewedInfo:
          SkewedColumnNames: ""
          SkewedColumnValues: ""
          SkewedColumnValueLocationMaps: ""
        InputFormat: ""
        Location: ""
    BatchUpdatePartitionRequestEntry_PartitionInput:
      allOf:
      - $ref: '#/components/schemas/PartitionInput'
      - description: The structure used to update a partition.
    Blueprint_LastActiveDefinition:
      allOf:
      - $ref: '#/components/schemas/LastActiveDefinition'
      - description: "When there are multiple versions of a blueprint and the latest\
          \ version has some errors, this attribute indicates the last successful\
          \ blueprint definition that is available with the service."
      example:
        Description: ""
        ParameterSpec: ""
        BlueprintServiceLocation: ""
        LastModifiedOn: ""
        BlueprintLocation: ""
    CatalogKafkaSource_StreamingOptions:
      allOf:
      - $ref: '#/components/schemas/KafkaStreamingSourceOptions'
      - description: Specifies the streaming options.
    CatalogKafkaSource_DataPreviewOptions:
      allOf:
      - $ref: '#/components/schemas/StreamingDataPreviewOptions'
      - description: Specifies options related to data preview for viewing a sample
          of your data.
    CatalogKinesisSource_StreamingOptions:
      allOf:
      - $ref: '#/components/schemas/KinesisStreamingSourceOptions'
      - description: Additional options for the Kinesis streaming data source.
    CatalogKinesisSource_DataPreviewOptions:
      allOf:
      - $ref: '#/components/schemas/StreamingDataPreviewOptions'
      - description: Additional options for data preview.
    Classifier_GrokClassifier:
      allOf:
      - $ref: '#/components/schemas/GrokClassifier'
      - description: A classifier that uses <code>grok</code>.
      example:
        CustomPatterns: ""
        GrokPattern: ""
        Version: ""
        Classification: ""
        CreationTime: ""
        LastUpdated: ""
        Name: ""
    Classifier_XMLClassifier:
      allOf:
      - $ref: '#/components/schemas/XMLClassifier'
      - description: A classifier for XML content.
      example:
        RowTag: ""
        Version: ""
        Classification: ""
        CreationTime: ""
        LastUpdated: ""
        Name: ""
    Classifier_JsonClassifier:
      allOf:
      - $ref: '#/components/schemas/JsonClassifier'
      - description: A classifier for JSON content.
      example:
        Version: ""
        CreationTime: ""
        LastUpdated: ""
        JsonPath: ""
        Name: ""
    Classifier_CsvClassifier:
      allOf:
      - $ref: '#/components/schemas/CsvClassifier'
      - description: A classifier for comma-separated values (CSV).
      example:
        QuoteSymbol: ""
        ContainsHeader: ""
        Delimiter: ""
        Header: ""
        AllowSingleColumn: ""
        CustomDatatypeConfigured: ""
        Version: ""
        DisableValueTrimming: ""
        CreationTime: ""
        CustomDatatypes: ""
        LastUpdated: ""
        Name: ""
    JDBCConnectorSource_AdditionalOptions:
      allOf:
      - $ref: '#/components/schemas/JDBCConnectorOptions'
      - description: Additional connection options for the connector.
    S3CatalogSource_AdditionalOptions:
      allOf:
      - $ref: '#/components/schemas/S3SourceAdditionalOptions'
      - description: Specifies additional connection options.
    S3CsvSource_AdditionalOptions:
      allOf:
      - $ref: '#/components/schemas/S3DirectSourceAdditionalOptions'
      - description: Specifies additional connection options.
    RedshiftTarget_UpsertRedshiftOptions:
      allOf:
      - $ref: '#/components/schemas/UpsertRedshiftTargetOptions'
      - description: The set of options to configure an upsert operation when writing
          to a Redshift target.
    S3CatalogTarget_SchemaChangePolicy:
      allOf:
      - $ref: '#/components/schemas/CatalogSchemaChangePolicy'
      - description: A policy that specifies update behavior for the crawler.
    S3GlueParquetTarget_SchemaChangePolicy:
      allOf:
      - $ref: '#/components/schemas/DirectSchemaChangePolicy'
      - description: A policy that specifies update behavior for the crawler.
    DropNullFields_NullCheckBoxList:
      allOf:
      - $ref: '#/components/schemas/NullCheckBoxList'
      - description: A structure that represents whether certain values are recognized
          as null values for removal.
    GovernedCatalogTarget_SchemaChangePolicy:
      allOf:
      - $ref: '#/components/schemas/CatalogSchemaChangePolicy'
      - description: A policy that specifies update behavior for the governed catalog.
    EvaluateDataQuality_PublishingOptions:
      allOf:
      - $ref: '#/components/schemas/DQResultsPublishingOptions'
      - description: Options to configure how your results are published.
    EvaluateDataQuality_StopJobOnFailureOptions:
      allOf:
      - $ref: '#/components/schemas/DQStopJobOnFailureOptions'
      - description: Options to configure how your job will stop if your data quality
          evaluation fails.
    S3HudiSource_AdditionalOptions:
      allOf:
      - $ref: '#/components/schemas/S3DirectSourceAdditionalOptions'
      - description: Specifies additional options for the connector.
    Recipe_RecipeReference:
      allOf:
      - $ref: '#/components/schemas/RecipeReference'
      - description: A reference to the DataBrew recipe used by the node.
    SnowflakeSource_Data:
      allOf:
      - $ref: '#/components/schemas/SnowflakeNodeData'
      - description: Configuration for the Snowflake data source.
    SnowflakeTarget_Data:
      allOf:
      - $ref: '#/components/schemas/SnowflakeNodeData'
      - description: Specifies the data of the Snowflake target node.
    CodeGenConfigurationNode_AthenaConnectorSource:
      allOf:
      - $ref: '#/components/schemas/AthenaConnectorSource'
      - description: Specifies a connector to an Amazon Athena data source.
    CodeGenConfigurationNode_JDBCConnectorSource:
      allOf:
      - $ref: '#/components/schemas/JDBCConnectorSource'
      - description: Specifies a connector to a JDBC data source.
    CodeGenConfigurationNode_SparkConnectorSource:
      allOf:
      - $ref: '#/components/schemas/SparkConnectorSource'
      - description: Specifies a connector to an Apache Spark data source.
    CodeGenConfigurationNode_CatalogSource:
      allOf:
      - $ref: '#/components/schemas/CatalogSource'
      - description: Specifies a data store in the Glue Data Catalog.
    CodeGenConfigurationNode_RedshiftSource:
      allOf:
      - $ref: '#/components/schemas/RedshiftSource'
      - description: Specifies an Amazon Redshift data store.
    CodeGenConfigurationNode_S3CatalogSource:
      allOf:
      - $ref: '#/components/schemas/S3CatalogSource'
      - description: Specifies an Amazon S3 data store in the Glue Data Catalog.
    CodeGenConfigurationNode_S3CsvSource:
      allOf:
      - $ref: '#/components/schemas/S3CsvSource'
      - description: Specifies a command-separated value (CSV) data store stored in
          Amazon S3.
    CodeGenConfigurationNode_S3JsonSource:
      allOf:
      - $ref: '#/components/schemas/S3JsonSource'
      - description: Specifies a JSON data store stored in Amazon S3.
    CodeGenConfigurationNode_S3ParquetSource:
      allOf:
      - $ref: '#/components/schemas/S3ParquetSource'
      - description: Specifies an Apache Parquet data store stored in Amazon S3.
    CodeGenConfigurationNode_RelationalCatalogSource:
      allOf:
      - $ref: '#/components/schemas/RelationalCatalogSource'
      - description: Specifies a relational catalog data store in the Glue Data Catalog.
    CodeGenConfigurationNode_DynamoDBCatalogSource:
      allOf:
      - $ref: '#/components/schemas/DynamoDBCatalogSource'
      - description: Specifies a DynamoDBC Catalog data store in the Glue Data Catalog.
    CodeGenConfigurationNode_JDBCConnectorTarget:
      allOf:
      - $ref: '#/components/schemas/JDBCConnectorTarget'
      - description: Specifies a data target that writes to Amazon S3 in Apache Parquet
          columnar storage.
    CodeGenConfigurationNode_SparkConnectorTarget:
      allOf:
      - $ref: '#/components/schemas/SparkConnectorTarget'
      - description: Specifies a target that uses an Apache Spark connector.
    CodeGenConfigurationNode_CatalogTarget:
      allOf:
      - $ref: '#/components/schemas/BasicCatalogTarget'
      - description: Specifies a target that uses a Glue Data Catalog table.
    CodeGenConfigurationNode_RedshiftTarget:
      allOf:
      - $ref: '#/components/schemas/RedshiftTarget'
      - description: Specifies a target that uses Amazon Redshift.
    CodeGenConfigurationNode_S3CatalogTarget:
      allOf:
      - $ref: '#/components/schemas/S3CatalogTarget'
      - description: Specifies a data target that writes to Amazon S3 using the Glue
          Data Catalog.
    CodeGenConfigurationNode_S3GlueParquetTarget:
      allOf:
      - $ref: '#/components/schemas/S3GlueParquetTarget'
      - description: Specifies a data target that writes to Amazon S3 in Apache Parquet
          columnar storage.
    CodeGenConfigurationNode_S3DirectTarget:
      allOf:
      - $ref: '#/components/schemas/S3DirectTarget'
      - description: Specifies a data target that writes to Amazon S3.
    CodeGenConfigurationNode_ApplyMapping:
      allOf:
      - $ref: '#/components/schemas/ApplyMapping'
      - description: "Specifies a transform that maps data property keys in the data\
          \ source to data property keys in the data target. You can rename keys,\
          \ modify the data types for keys, and choose which keys to drop from the\
          \ dataset."
    CodeGenConfigurationNode_SelectFields:
      allOf:
      - $ref: '#/components/schemas/SelectFields'
      - description: Specifies a transform that chooses the data property keys that
          you want to keep.
    CodeGenConfigurationNode_DropFields:
      allOf:
      - $ref: '#/components/schemas/DropFields'
      - description: Specifies a transform that chooses the data property keys that
          you want to drop.
    CodeGenConfigurationNode_RenameField:
      allOf:
      - $ref: '#/components/schemas/RenameField'
      - description: Specifies a transform that renames a single data property key.
    CodeGenConfigurationNode_Spigot:
      allOf:
      - $ref: '#/components/schemas/Spigot'
      - description: Specifies a transform that writes samples of the data to an Amazon
          S3 bucket.
    CodeGenConfigurationNode_Join:
      allOf:
      - $ref: '#/components/schemas/Join'
      - description: "Specifies a transform that joins two datasets into one dataset\
          \ using a comparison phrase on the specified data property keys. You can\
          \ use inner, outer, left, right, left semi, and left anti joins."
    CodeGenConfigurationNode_SplitFields:
      allOf:
      - $ref: '#/components/schemas/SplitFields'
      - description: "Specifies a transform that splits data property keys into two\
          \ <code>DynamicFrames</code>. The output is a collection of <code>DynamicFrames</code>:\
          \ one with selected data property keys, and one with the remaining data\
          \ property keys."
    CodeGenConfigurationNode_SelectFromCollection:
      allOf:
      - $ref: '#/components/schemas/SelectFromCollection'
      - description: 'Specifies a transform that chooses one <code>DynamicFrame</code>
          from a collection of <code>DynamicFrames</code>. The output is the selected
          <code>DynamicFrame</code> '
    CodeGenConfigurationNode_FillMissingValues:
      allOf:
      - $ref: '#/components/schemas/FillMissingValues'
      - description: Specifies a transform that locates records in the dataset that
          have missing values and adds a new field with a value determined by imputation.
          The input data set is used to train the machine learning model that determines
          what the missing value should be.
    CodeGenConfigurationNode_Filter:
      allOf:
      - $ref: '#/components/schemas/Filter'
      - description: "Specifies a transform that splits a dataset into two, based\
          \ on a filter condition."
    CodeGenConfigurationNode_CustomCode:
      allOf:
      - $ref: '#/components/schemas/CustomCode'
      - description: Specifies a transform that uses custom code you provide to perform
          the data transformation. The output is a collection of DynamicFrames.
    CodeGenConfigurationNode_SparkSQL:
      allOf:
      - $ref: '#/components/schemas/SparkSQL'
      - description: Specifies a transform where you enter a SQL query using Spark
          SQL syntax to transform the data. The output is a single <code>DynamicFrame</code>.
    CodeGenConfigurationNode_DirectKinesisSource:
      allOf:
      - $ref: '#/components/schemas/DirectKinesisSource'
      - description: Specifies a direct Amazon Kinesis data source.
    CodeGenConfigurationNode_DirectKafkaSource:
      allOf:
      - $ref: '#/components/schemas/DirectKafkaSource'
      - description: Specifies an Apache Kafka data store.
    CodeGenConfigurationNode_CatalogKinesisSource:
      allOf:
      - $ref: '#/components/schemas/CatalogKinesisSource'
      - description: Specifies a Kinesis data source in the Glue Data Catalog.
    CodeGenConfigurationNode_CatalogKafkaSource:
      allOf:
      - $ref: '#/components/schemas/CatalogKafkaSource'
      - description: Specifies an Apache Kafka data store in the Data Catalog.
    CodeGenConfigurationNode_DropNullFields:
      allOf:
      - $ref: '#/components/schemas/DropNullFields'
      - description: "Specifies a transform that removes columns from the dataset\
          \ if all values in the column are 'null'. By default, Glue Studio will recognize\
          \ null objects, but some values such as empty strings, strings that are\
          \ \"null\", -1 integers or other placeholders such as zeros, are not automatically\
          \ recognized as nulls."
    CodeGenConfigurationNode_Merge:
      allOf:
      - $ref: '#/components/schemas/Merge'
      - description: 'Specifies a transform that merges a <code>DynamicFrame</code>
          with a staging <code>DynamicFrame</code> based on the specified primary
          keys to identify records. Duplicate records (records with the same primary
          keys) are not de-duplicated. '
    CodeGenConfigurationNode_Union:
      allOf:
      - $ref: '#/components/schemas/Union'
      - description: Specifies a transform that combines the rows from two or more
          datasets into a single result.
    CodeGenConfigurationNode_PIIDetection:
      allOf:
      - $ref: '#/components/schemas/PIIDetection'
      - description: "Specifies a transform that identifies, removes or masks PII\
          \ data."
    CodeGenConfigurationNode_Aggregate:
      allOf:
      - $ref: '#/components/schemas/Aggregate'
      - description: Specifies a transform that groups rows by chosen fields and computes
          the aggregated value by specified function.
    CodeGenConfigurationNode_DropDuplicates:
      allOf:
      - $ref: '#/components/schemas/DropDuplicates'
      - description: Specifies a transform that removes rows of repeating data from
          a data set.
    CodeGenConfigurationNode_GovernedCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/GovernedCatalogTarget'
      - description: Specifies a data target that writes to a goverened catalog.
    CodeGenConfigurationNode_GovernedCatalogSource:
      allOf:
      - $ref: '#/components/schemas/GovernedCatalogSource'
      - description: Specifies a data source in a goverened Data Catalog.
    CodeGenConfigurationNode_MicrosoftSQLServerCatalogSource:
      allOf:
      - $ref: '#/components/schemas/MicrosoftSQLServerCatalogSource'
      - description: Specifies a Microsoft SQL server data source in the Glue Data
          Catalog.
    CodeGenConfigurationNode_MySQLCatalogSource:
      allOf:
      - $ref: '#/components/schemas/MySQLCatalogSource'
      - description: Specifies a MySQL data source in the Glue Data Catalog.
    CodeGenConfigurationNode_OracleSQLCatalogSource:
      allOf:
      - $ref: '#/components/schemas/OracleSQLCatalogSource'
      - description: Specifies an Oracle data source in the Glue Data Catalog.
    CodeGenConfigurationNode_PostgreSQLCatalogSource:
      allOf:
      - $ref: '#/components/schemas/PostgreSQLCatalogSource'
      - description: Specifies a PostgresSQL data source in the Glue Data Catalog.
    CodeGenConfigurationNode_MicrosoftSQLServerCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/MicrosoftSQLServerCatalogTarget'
      - description: Specifies a target that uses Microsoft SQL.
    CodeGenConfigurationNode_MySQLCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/MySQLCatalogTarget'
      - description: Specifies a target that uses MySQL.
    CodeGenConfigurationNode_OracleSQLCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/OracleSQLCatalogTarget'
      - description: Specifies a target that uses Oracle SQL.
    CodeGenConfigurationNode_PostgreSQLCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/PostgreSQLCatalogTarget'
      - description: Specifies a target that uses Postgres SQL.
    CodeGenConfigurationNode_DynamicTransform:
      allOf:
      - $ref: '#/components/schemas/DynamicTransform'
      - description: Specifies a custom visual transform created by a user.
    CodeGenConfigurationNode_EvaluateDataQuality:
      allOf:
      - $ref: '#/components/schemas/EvaluateDataQuality'
      - description: Specifies your data quality evaluation criteria.
    CodeGenConfigurationNode_S3CatalogHudiSource:
      allOf:
      - $ref: '#/components/schemas/S3CatalogHudiSource'
      - description: Specifies a Hudi data source that is registered in the Glue Data
          Catalog. The data source must be stored in Amazon S3.
    CodeGenConfigurationNode_CatalogHudiSource:
      allOf:
      - $ref: '#/components/schemas/CatalogHudiSource'
      - description: Specifies a Hudi data source that is registered in the Glue Data
          Catalog.
    CodeGenConfigurationNode_S3HudiSource:
      allOf:
      - $ref: '#/components/schemas/S3HudiSource'
      - description: Specifies a Hudi data source stored in Amazon S3.
    CodeGenConfigurationNode_S3HudiCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/S3HudiCatalogTarget'
      - description: Specifies a target that writes to a Hudi data source in the Glue
          Data Catalog.
    CodeGenConfigurationNode_S3HudiDirectTarget:
      allOf:
      - $ref: '#/components/schemas/S3HudiDirectTarget'
      - description: Specifies a target that writes to a Hudi data source in Amazon
          S3.
    CodeGenConfigurationNode_S3CatalogDeltaSource:
      allOf:
      - $ref: '#/components/schemas/S3CatalogDeltaSource'
      - description: Specifies a Delta Lake data source that is registered in the
          Glue Data Catalog. The data source must be stored in Amazon S3.
    CodeGenConfigurationNode_CatalogDeltaSource:
      allOf:
      - $ref: '#/components/schemas/CatalogDeltaSource'
      - description: Specifies a Delta Lake data source that is registered in the
          Glue Data Catalog.
    CodeGenConfigurationNode_S3DeltaSource:
      allOf:
      - $ref: '#/components/schemas/S3DeltaSource'
      - description: Specifies a Delta Lake data source stored in Amazon S3.
    CodeGenConfigurationNode_S3DeltaCatalogTarget:
      allOf:
      - $ref: '#/components/schemas/S3DeltaCatalogTarget'
      - description: Specifies a target that writes to a Delta Lake data source in
          the Glue Data Catalog.
    CodeGenConfigurationNode_S3DeltaDirectTarget:
      allOf:
      - $ref: '#/components/schemas/S3DeltaDirectTarget'
      - description: Specifies a target that writes to a Delta Lake data source in
          Amazon S3.
    CodeGenConfigurationNode_AmazonRedshiftSource:
      allOf:
      - $ref: '#/components/schemas/AmazonRedshiftSource'
      - description: Specifies a target that writes to a data source in Amazon Redshift.
    CodeGenConfigurationNode_AmazonRedshiftTarget:
      allOf:
      - $ref: '#/components/schemas/AmazonRedshiftTarget'
      - description: Specifies a target that writes to a data target in Amazon Redshift.
    CodeGenConfigurationNode_EvaluateDataQualityMultiFrame:
      allOf:
      - $ref: '#/components/schemas/EvaluateDataQualityMultiFrame'
      - description: Specifies your data quality evaluation criteria. Allows multiple
          input data and returns a collection of Dynamic Frames.
    CodeGenConfigurationNode_Recipe:
      allOf:
      - $ref: '#/components/schemas/Recipe'
      - description: Specifies a Glue DataBrew recipe node.
    CodeGenConfigurationNode_SnowflakeSource:
      allOf:
      - $ref: '#/components/schemas/SnowflakeSource'
      - description: Specifies a Snowflake data source.
    CodeGenConfigurationNode_SnowflakeTarget:
      allOf:
      - $ref: '#/components/schemas/SnowflakeTarget'
      - description: Specifies a target that writes to a Snowflake data source.
    ColumnError_Error:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: An error message with the reason for the failure of an operation.
    ColumnStatisticsData_BooleanColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/BooleanColumnStatisticsData'
      - description: Boolean column statistics data.
    ColumnStatisticsData_DateColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/DateColumnStatisticsData'
      - description: Date column statistics data.
    ColumnStatisticsData_DecimalColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/DecimalColumnStatisticsData'
      - description: " Decimal column statistics data. UnscaledValues within are Base64-encoded\
          \ binary objects storing big-endian, two's complement representations of\
          \ the decimal's unscaled value. "
    ColumnStatisticsData_DoubleColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/DoubleColumnStatisticsData'
      - description: Double column statistics data.
    ColumnStatisticsData_LongColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/LongColumnStatisticsData'
      - description: Long column statistics data.
    ColumnStatisticsData_StringColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/StringColumnStatisticsData'
      - description: String column statistics data.
    ColumnStatisticsData_BinaryColumnStatisticsData:
      allOf:
      - $ref: '#/components/schemas/BinaryColumnStatisticsData'
      - description: Binary column statistics data.
    ColumnStatistics_StatisticsData:
      allOf:
      - $ref: '#/components/schemas/ColumnStatisticsData'
      - description: A <code>ColumnStatisticData</code> object that contains the statistics
          data values.
    DecimalColumnStatisticsData_MinimumValue:
      allOf:
      - $ref: '#/components/schemas/DecimalNumber'
      - description: The lowest value in the column.
    DecimalColumnStatisticsData_MaximumValue:
      allOf:
      - $ref: '#/components/schemas/DecimalNumber'
      - description: The highest value in the column.
    ColumnStatisticsError_ColumnStatistics:
      allOf:
      - $ref: '#/components/schemas/ColumnStatistics'
      - description: The <code>ColumnStatistics</code> of the column.
    Connection_PhysicalConnectionRequirements:
      allOf:
      - $ref: '#/components/schemas/PhysicalConnectionRequirements'
      - description: "A map of physical connection requirements, such as virtual private\
          \ cloud (VPC) and <code>SecurityGroup</code>, that are needed to make this\
          \ connection successfully."
      example:
        AvailabilityZone: ""
        SecurityGroupIdList: ""
        SubnetId: ""
    ConnectionInput_PhysicalConnectionRequirements:
      allOf:
      - $ref: '#/components/schemas/PhysicalConnectionRequirements'
      - description: "A map of physical connection requirements, such as virtual private\
          \ cloud (VPC) and <code>SecurityGroup</code>, that are needed to successfully\
          \ make this connection."
      example:
        AvailabilityZone: ""
        SecurityGroupIdList: ""
        SubnetId: ""
    Crawler_Targets:
      allOf:
      - $ref: '#/components/schemas/CrawlerTargets'
      - description: A collection of targets to crawl.
      example:
        HudiTargets: ""
        S3Targets: ""
        CatalogTargets: ""
        DeltaTargets: ""
        MongoDBTargets: ""
        JdbcTargets: ""
        DynamoDBTargets: ""
        IcebergTargets: ""
    Crawler_SchemaChangePolicy:
      allOf:
      - $ref: '#/components/schemas/SchemaChangePolicy'
      - description: The policy that specifies update and delete behaviors for the
          crawler.
      example:
        UpdateBehavior: ""
        DeleteBehavior: ""
    Crawler_LineageConfiguration:
      allOf:
      - $ref: '#/components/schemas/LineageConfiguration'
      - description: A configuration that specifies whether data lineage is enabled
          for the crawler.
      example:
        CrawlerLineageSettings: ""
    Crawler_Schedule:
      allOf:
      - $ref: '#/components/schemas/Schedule'
      - description: "For scheduled crawlers, the schedule when the crawler runs."
      example:
        ScheduleExpression: ""
        State: ""
    Crawler_LastCrawl:
      allOf:
      - $ref: '#/components/schemas/LastCrawlInfo'
      - description: "The status of the last crawl, and potentially error information\
          \ if an error occurred."
      example:
        Status: ""
        LogGroup: ""
        MessagePrefix: ""
        StartTime: ""
        LogStream: ""
        ErrorMessage: ""
    Crawler_LakeFormationConfiguration:
      allOf:
      - $ref: '#/components/schemas/LakeFormationConfiguration'
      - description: Specifies whether the crawler should use Lake Formation credentials
          for the crawler instead of the IAM role credentials.
      example:
        AccountId: ""
        UseLakeFormationCredentials: ""
    DatabaseInput_TargetDatabase:
      allOf:
      - $ref: '#/components/schemas/DatabaseIdentifier'
      - description: A <code>DatabaseIdentifier</code> structure that describes a
          target database for resource linking.
      example:
        DatabaseName: ""
        Region: ""
        CatalogId: ""
    DatabaseInput_FederatedDatabase:
      allOf:
      - $ref: '#/components/schemas/FederatedDatabase'
      - description: A <code>FederatedDatabase</code> structure that references an
          entity outside the Glue Data Catalog.
      example:
        ConnectionName: ""
        Identifier: ""
    TransformParameters_FindMatchesParameters:
      allOf:
      - $ref: '#/components/schemas/FindMatchesParameters'
      - description: The parameters for the find matches algorithm.
      example:
        PrecisionRecallTradeoff: ""
        EnforceProvidedLabels: ""
        PrimaryKeyColumnName: ""
        AccuracyCostTradeoff: ""
    TransformEncryption_MlUserDataEncryption:
      allOf:
      - $ref: '#/components/schemas/MLUserDataEncryption'
      - description: An <code>MLUserDataEncryption</code> object containing the encryption
          mode and customer-provided KMS key ID.
      example:
        KmsKeyId: ""
        MlUserDataEncryptionMode: ""
    EncryptionConfiguration_CloudWatchEncryption:
      allOf:
      - $ref: '#/components/schemas/CloudWatchEncryption'
      - description: The encryption configuration for Amazon CloudWatch.
      example:
        KmsKeyArn: ""
        CloudWatchEncryptionMode: ""
    EncryptionConfiguration_JobBookmarksEncryption:
      allOf:
      - $ref: '#/components/schemas/JobBookmarksEncryption'
      - description: The encryption configuration for job bookmarks.
      example:
        KmsKeyArn: ""
        JobBookmarksEncryptionMode: ""
    Session_Command:
      allOf:
      - $ref: '#/components/schemas/SessionCommand'
      - description: The command object.See SessionCommand.
      example:
        PythonVersion: ""
        Name: ""
    Session_Connections:
      allOf:
      - $ref: '#/components/schemas/ConnectionsList'
      - description: The number of connections used for the session.
      example:
        Connections: ""
    TableInput_StorageDescriptor:
      allOf:
      - $ref: '#/components/schemas/StorageDescriptor'
      - description: A storage descriptor containing information about the physical
          storage of this table.
      example:
        StoredAsSubDirectories: ""
        Parameters: ""
        BucketColumns: ""
        NumberOfBuckets: ""
        AdditionalLocations: ""
        OutputFormat: ""
        Columns: ""
        SerdeInfo:
          Parameters: ""
          SerializationLibrary: ""
          Name: ""
        SortColumns: ""
        Compressed: ""
        SchemaReference:
          SchemaVersionId: ""
          SchemaId:
            RegistryName: ""
            SchemaArn: ""
            SchemaName: ""
          SchemaVersionNumber: ""
        SkewedInfo:
          SkewedColumnNames: ""
          SkewedColumnValues: ""
          SkewedColumnValueLocationMaps: ""
        InputFormat: ""
        Location: ""
    TableInput_TargetTable:
      allOf:
      - $ref: '#/components/schemas/TableIdentifier'
      - description: A <code>TableIdentifier</code> structure that describes a target
          table for resource linking.
      example:
        DatabaseName: ""
        Region: ""
        CatalogId: ""
        Name: ""
    OpenTableFormatInput_IcebergInput:
      allOf:
      - $ref: '#/components/schemas/IcebergInput'
      - description: Specifies an <code>IcebergInput</code> structure that defines
          an Apache Iceberg metadata table.
      example:
        MetadataOperation: ""
        Version: ""
    DataCatalogEncryptionSettings_EncryptionAtRest:
      allOf:
      - $ref: '#/components/schemas/EncryptionAtRest'
      - description: Specifies the encryption-at-rest configuration for the Data Catalog.
      example:
        CatalogEncryptionMode: ""
        SseAwsKmsKeyId: ""
    DataCatalogEncryptionSettings_ConnectionPasswordEncryption:
      allOf:
      - $ref: '#/components/schemas/ConnectionPasswordEncryption'
      - description: "When connection password protection is enabled, the Data Catalog\
          \ uses a customer-provided key to encrypt the password as part of <code>CreateConnection</code>\
          \ or <code>UpdateConnection</code> and store it in the <code>ENCRYPTED_PASSWORD</code>\
          \ field in the connection properties. You can enable catalog encryption\
          \ or only password encryption."
      example:
        ReturnConnectionPasswordEncrypted: ""
        AwsKmsKeyId: ""
    DataSource_GlueTable:
      allOf:
      - $ref: '#/components/schemas/GlueTable'
      - description: An Glue table.
      example:
        ConnectionName: ""
        TableName: ""
        DatabaseName: ""
        CatalogId: ""
        AdditionalOptions: ""
    DataQualityResultDescription_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The table name associated with the data quality result.
    DataQualityResultFilterCriteria_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: "Filter results by the specified data source. For example, retrieving\
          \ all results for an Glue table."
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    DataQualityRuleRecommendationRunDescription_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The data source (Glue table) associated with the recommendation
          run.
    DataQualityRuleRecommendationRunFilter_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: Filter based on a specified data source (Glue table).
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    DataQualityRulesetEvaluationRunDescription_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The data source (an Glue table) associated with the run.
    DataQualityRulesetEvaluationRunFilter_DataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: Filter based on a data source (an Glue table) associated with
          the run.
      example:
        GlueTable:
          ConnectionName: ""
          TableName: ""
          DatabaseName: ""
          CatalogId: ""
          AdditionalOptions: ""
    DataQualityRulesetListDetails_TargetTable:
      allOf:
      - $ref: '#/components/schemas/DataQualityTargetTable'
      - description: An object representing an Glue table.
    FindMatchesMetrics_ConfusionMatrix:
      allOf:
      - $ref: '#/components/schemas/ConfusionMatrix'
      - description: "<p>The confusion matrix shows you what your transform is predicting\
          \ accurately and what types of errors it is making.</p> <p>For more information,\
          \ see <a href=\"https://en.wikipedia.org/wiki/Confusion_matrix\">Confusion\
          \ matrix</a> in Wikipedia.</p>"
      example:
        NumFalsePositives: ""
        NumTruePositives: ""
        NumFalseNegatives: ""
        NumTrueNegatives: ""
    EvaluationMetrics_FindMatchesMetrics:
      allOf:
      - $ref: '#/components/schemas/FindMatchesMetrics'
      - description: The evaluation metrics for the find matches algorithm.
      example:
        AreaUnderPRCurve: ""
        ConfusionMatrix:
          NumFalsePositives: ""
          NumTruePositives: ""
          NumFalseNegatives: ""
          NumTrueNegatives: ""
        Precision: ""
        Recall: ""
        ColumnImportances: ""
        F1: ""
    TaskRunProperties_ImportLabelsTaskRunProperties:
      allOf:
      - $ref: '#/components/schemas/ImportLabelsTaskRunProperties'
      - description: The configuration properties for an importing labels task run.
      example:
        Replace: ""
        InputS3Path: ""
    TaskRunProperties_ExportLabelsTaskRunProperties:
      allOf:
      - $ref: '#/components/schemas/ExportLabelsTaskRunProperties'
      - description: The configuration properties for an exporting labels task run.
      example:
        OutputS3Path: ""
    TaskRunProperties_LabelingSetGenerationTaskRunProperties:
      allOf:
      - $ref: '#/components/schemas/LabelingSetGenerationTaskRunProperties'
      - description: The configuration properties for a labeling set generation task
          run.
      example:
        OutputS3Path: ""
    TaskRunProperties_FindMatchesTaskRunProperties:
      allOf:
      - $ref: '#/components/schemas/FindMatchesTaskRunProperties'
      - description: The configuration properties for a find matches task run.
      example:
        JobRunId: ""
        JobName: ""
        JobId: ""
    SecurityConfiguration_EncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfiguration'
      - description: The encryption configuration associated with this security configuration.
      example:
        S3Encryption: ""
        CloudWatchEncryption:
          KmsKeyArn: ""
          CloudWatchEncryptionMode: ""
        JobBookmarksEncryption:
          KmsKeyArn: ""
          JobBookmarksEncryptionMode: ""
    Statement_Output:
      allOf:
      - $ref: '#/components/schemas/StatementOutput'
      - description: The output in JSON.
      example:
        Status: ""
        ErrorName: ""
        ExecutionCount: ""
        ErrorValue: ""
        Data:
          TextPlain: ""
        Traceback: ""
    Table_FederatedTable:
      allOf:
      - $ref: '#/components/schemas/FederatedTable'
      - description: A <code>FederatedTable</code> structure that references an entity
          outside the Glue Data Catalog.
      example:
        ConnectionName: ""
        Identifier: ""
        DatabaseIdentifier: ""
    TableVersion_Table:
      allOf:
      - $ref: '#/components/schemas/Table'
      - description: The table in question.
      example:
        VersionId: ""
        Owner: ""
        ViewOriginalText: ""
        Description: ""
        TableType: ""
        Parameters: ""
        CreatedBy: ""
        CreateTime: ""
        DatabaseName: ""
        StorageDescriptor:
          StoredAsSubDirectories: ""
          Parameters: ""
          BucketColumns: ""
          NumberOfBuckets: ""
          AdditionalLocations: ""
          OutputFormat: ""
          Columns: ""
          SerdeInfo:
            Parameters: ""
            SerializationLibrary: ""
            Name: ""
          SortColumns: ""
          Compressed: ""
          SchemaReference:
            SchemaVersionId: ""
            SchemaId:
              RegistryName: ""
              SchemaArn: ""
              SchemaName: ""
            SchemaVersionNumber: ""
          SkewedInfo:
            SkewedColumnNames: ""
            SkewedColumnValues: ""
            SkewedColumnValueLocationMaps: ""
          InputFormat: ""
          Location: ""
        LastAccessTime: ""
        Retention: ""
        IsRegisteredWithLakeFormation: ""
        CatalogId: ""
        FederatedTable:
          ConnectionName: ""
          Identifier: ""
          DatabaseIdentifier: ""
        Name: ""
        ViewExpandedText: ""
        LastAnalyzedTime: ""
        UpdateTime: ""
        TargetTable:
          DatabaseName: ""
          Region: ""
          CatalogId: ""
          Name: ""
        PartitionKeys: ""
    Trigger_Predicate:
      allOf:
      - $ref: '#/components/schemas/Predicate'
      - description: "The predicate of this trigger, which defines when it will fire."
      example:
        Logical: ""
        Conditions: ""
    Workflow_LastRun:
      allOf:
      - $ref: '#/components/schemas/WorkflowRun'
      - description: The information about the last execution of the workflow.
      example:
        Status: ""
        Graph:
          Edges: ""
          Nodes: ""
        StartingEventBatchCondition:
          BatchSize: ""
          BatchWindow: ""
        PreviousRunId: ""
        CompletedOn: ""
        ErrorMessage: ""
        Statistics:
          RunningActions: ""
          ErroredActions: ""
          TotalActions: ""
          FailedActions: ""
          StoppedActions: ""
          WaitingActions: ""
          TimeoutActions: ""
          SucceededActions: ""
        WorkflowRunId: ""
        WorkflowRunProperties: ""
        Name: ""
        StartedOn: ""
    Workflow_Graph:
      allOf:
      - $ref: '#/components/schemas/WorkflowGraph'
      - description: The graph representing all the Glue components that belong to
          the workflow as nodes and directed connections between them as edges.
      example:
        Edges: ""
        Nodes: ""
    Workflow_BlueprintDetails:
      allOf:
      - $ref: '#/components/schemas/BlueprintDetails'
      - description: This structure indicates the details of the blueprint that this
          particular workflow is created from.
      example:
        BlueprintName: ""
        RunId: ""
    WorkflowRun_Statistics:
      allOf:
      - $ref: '#/components/schemas/WorkflowRunStatistics'
      - description: The statistics of the run.
      example:
        RunningActions: ""
        ErroredActions: ""
        TotalActions: ""
        FailedActions: ""
        StoppedActions: ""
        WaitingActions: ""
        TimeoutActions: ""
        SucceededActions: ""
    WorkflowRun_StartingEventBatchCondition:
      allOf:
      - $ref: '#/components/schemas/StartingEventBatchCondition'
      - description: The batch condition that started the workflow run.
      example:
        BatchSize: ""
        BatchWindow: ""
    JobUpdate_Command:
      allOf:
      - $ref: '#/components/schemas/JobCommand'
      - description: The <code>JobCommand</code> that runs this job (required).
      example:
        Runtime: ""
        PythonVersion: ""
        ScriptLocation: ""
        Name: ""
    JobUpdate_NotificationProperty:
      allOf:
      - $ref: '#/components/schemas/NotificationProperty'
      - description: Specifies the configuration properties of a job notification.
      example:
        NotifyDelayAfter: ""
    MLTransform_Parameters:
      allOf:
      - $ref: '#/components/schemas/TransformParameters'
      - description: "A <code>TransformParameters</code> object. You can use parameters\
          \ to tune (customize) the behavior of the machine learning transform by\
          \ specifying what data it learns from and your preference on various tradeoffs\
          \ (such as precious vs. recall, or accuracy vs. cost)."
    MLTransform_EvaluationMetrics:
      allOf:
      - $ref: '#/components/schemas/EvaluationMetrics'
      - description: An <code>EvaluationMetrics</code> object. Evaluation metrics
          provide an estimate of the quality of your machine learning transform.
    TriggerNodeDetails_Trigger:
      allOf:
      - $ref: '#/components/schemas/Trigger'
      - description: The information of the trigger represented by the trigger node.
    Node_TriggerDetails:
      allOf:
      - $ref: '#/components/schemas/TriggerNodeDetails'
      - description: Details of the Trigger when the node represents a Trigger.
    Node_JobDetails:
      allOf:
      - $ref: '#/components/schemas/JobNodeDetails'
      - description: Details of the Job when the node represents a Job.
    Node_CrawlerDetails:
      allOf:
      - $ref: '#/components/schemas/CrawlerNodeDetails'
      - description: Details of the crawler when the node represents a crawler.
    NullValueField_Datatype:
      allOf:
      - $ref: '#/components/schemas/Datatype'
      - description: The datatype of the value.
    StorageDescriptor_SerdeInfo:
      allOf:
      - $ref: '#/components/schemas/SerDeInfo'
      - description: The serialization/deserialization (SerDe) information.
      example:
        Parameters: ""
        SerializationLibrary: ""
        Name: ""
    StorageDescriptor_SkewedInfo:
      allOf:
      - $ref: '#/components/schemas/SkewedInfo'
      - description: The information about values that appear frequently in a column
          (skewed values).
      example:
        SkewedColumnNames: ""
        SkewedColumnValues: ""
        SkewedColumnValueLocationMaps: ""
    StorageDescriptor_SchemaReference:
      allOf:
      - $ref: '#/components/schemas/SchemaReference'
      - description: "<p>An object that references a schema stored in the Glue Schema\
          \ Registry.</p> <p>When creating a table, you can pass an empty list of\
          \ columns for the schema, and instead use a schema reference.</p>"
      example:
        SchemaVersionId: ""
        SchemaId:
          RegistryName: ""
          SchemaArn: ""
          SchemaName: ""
        SchemaVersionNumber: ""
    PartitionError_ErrorDetail:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: The details about the partition error.
    PrincipalPermissions_Principal:
      allOf:
      - $ref: '#/components/schemas/DataLakePrincipal'
      - description: The principal who is granted permissions.
    SchemaReference_SchemaId:
      allOf:
      - $ref: '#/components/schemas/SchemaId'
      - description: A structure that contains schema identity fields. Either this
          or the <code>SchemaVersionId</code> has to be provided.
      example:
        RegistryName: ""
        SchemaArn: ""
        SchemaName: ""
    SchemaVersionErrorItem_ErrorDetails:
      allOf:
      - $ref: '#/components/schemas/ErrorDetails'
      - description: The details of the error for the schema version.
    SnowflakeNodeData_Connection:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: Specifies a Glue Data Catalog Connection to a Snowflake endpoint.
    SnowflakeNodeData_IamRole:
      allOf:
      - $ref: '#/components/schemas/Option'
      - description: Not currently used.
    StatementOutput_Data:
      allOf:
      - $ref: '#/components/schemas/StatementOutputData'
      - description: The code execution output.
      example:
        TextPlain: ""
    TableError_ErrorDetail:
      allOf:
      - $ref: '#/components/schemas/ErrorDetail'
      - description: The details about the error.
    TaskRun_Properties:
      allOf:
      - $ref: '#/components/schemas/TaskRunProperties'
      - description: Specifies configuration properties associated with this task
          run.
    UnfilteredPartition_Partition:
      allOf:
      - $ref: '#/components/schemas/Partition'
      - description: The partition object.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

