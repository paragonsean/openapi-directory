/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonChimeSdkMessaging);
  }
}(this, function(expect, AmazonChimeSdkMessaging) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateChannelRequest', function() {
    it('should create an instance of CreateChannelRequest', function() {
      // uncomment below and update the code to test CreateChannelRequest
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be.a(AmazonChimeSdkMessaging.CreateChannelRequest);
    });

    it('should have the property appInstanceArn (base name: "AppInstanceArn")', function() {
      // uncomment below and update the code to test the property appInstanceArn
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "Mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property privacy (base name: "Privacy")', function() {
      // uncomment below and update the code to test the property privacy
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "Metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientRequestToken (base name: "ClientRequestToken")', function() {
      // uncomment below and update the code to test the property clientRequestToken
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property channelId (base name: "ChannelId")', function() {
      // uncomment below and update the code to test the property channelId
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property memberArns (base name: "MemberArns")', function() {
      // uncomment below and update the code to test the property memberArns
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property moderatorArns (base name: "ModeratorArns")', function() {
      // uncomment below and update the code to test the property moderatorArns
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property elasticChannelConfiguration (base name: "ElasticChannelConfiguration")', function() {
      // uncomment below and update the code to test the property elasticChannelConfiguration
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

    it('should have the property expirationSettings (base name: "ExpirationSettings")', function() {
      // uncomment below and update the code to test the property expirationSettings
      //var instance = new AmazonChimeSdkMessaging.CreateChannelRequest();
      //expect(instance).to.be();
    });

  });

}));
