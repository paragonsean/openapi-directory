# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_channel_memberships_invited_by import BatchChannelMembershipsInvitedBy
from openapi_server.models.channel_membership_member import ChannelMembershipMember
from openapi_server.models.channel_membership_type import ChannelMembershipType
from openapi_server import util


class ChannelMembership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invited_by: BatchChannelMembershipsInvitedBy=None, type: ChannelMembershipType=None, member: ChannelMembershipMember=None, channel_arn: str=None, created_timestamp: datetime=None, last_updated_timestamp: datetime=None, sub_channel_id: str=None):
        """ChannelMembership - a model defined in OpenAPI

        :param invited_by: The invited_by of this ChannelMembership.
        :param type: The type of this ChannelMembership.
        :param member: The member of this ChannelMembership.
        :param channel_arn: The channel_arn of this ChannelMembership.
        :param created_timestamp: The created_timestamp of this ChannelMembership.
        :param last_updated_timestamp: The last_updated_timestamp of this ChannelMembership.
        :param sub_channel_id: The sub_channel_id of this ChannelMembership.
        """
        self.openapi_types = {
            'invited_by': BatchChannelMembershipsInvitedBy,
            'type': ChannelMembershipType,
            'member': ChannelMembershipMember,
            'channel_arn': str,
            'created_timestamp': datetime,
            'last_updated_timestamp': datetime,
            'sub_channel_id': str
        }

        self.attribute_map = {
            'invited_by': 'InvitedBy',
            'type': 'Type',
            'member': 'Member',
            'channel_arn': 'ChannelArn',
            'created_timestamp': 'CreatedTimestamp',
            'last_updated_timestamp': 'LastUpdatedTimestamp',
            'sub_channel_id': 'SubChannelId'
        }

        self._invited_by = invited_by
        self._type = type
        self._member = member
        self._channel_arn = channel_arn
        self._created_timestamp = created_timestamp
        self._last_updated_timestamp = last_updated_timestamp
        self._sub_channel_id = sub_channel_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelMembership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelMembership of this ChannelMembership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invited_by(self):
        """Gets the invited_by of this ChannelMembership.


        :return: The invited_by of this ChannelMembership.
        :rtype: BatchChannelMembershipsInvitedBy
        """
        return self._invited_by

    @invited_by.setter
    def invited_by(self, invited_by):
        """Sets the invited_by of this ChannelMembership.


        :param invited_by: The invited_by of this ChannelMembership.
        :type invited_by: BatchChannelMembershipsInvitedBy
        """

        self._invited_by = invited_by

    @property
    def type(self):
        """Gets the type of this ChannelMembership.


        :return: The type of this ChannelMembership.
        :rtype: ChannelMembershipType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ChannelMembership.


        :param type: The type of this ChannelMembership.
        :type type: ChannelMembershipType
        """

        self._type = type

    @property
    def member(self):
        """Gets the member of this ChannelMembership.


        :return: The member of this ChannelMembership.
        :rtype: ChannelMembershipMember
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this ChannelMembership.


        :param member: The member of this ChannelMembership.
        :type member: ChannelMembershipMember
        """

        self._member = member

    @property
    def channel_arn(self):
        """Gets the channel_arn of this ChannelMembership.


        :return: The channel_arn of this ChannelMembership.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this ChannelMembership.


        :param channel_arn: The channel_arn of this ChannelMembership.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this ChannelMembership.


        :return: The created_timestamp of this ChannelMembership.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this ChannelMembership.


        :param created_timestamp: The created_timestamp of this ChannelMembership.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this ChannelMembership.


        :return: The last_updated_timestamp of this ChannelMembership.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this ChannelMembership.


        :param last_updated_timestamp: The last_updated_timestamp of this ChannelMembership.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp

    @property
    def sub_channel_id(self):
        """Gets the sub_channel_id of this ChannelMembership.


        :return: The sub_channel_id of this ChannelMembership.
        :rtype: str
        """
        return self._sub_channel_id

    @sub_channel_id.setter
    def sub_channel_id(self, sub_channel_id):
        """Sets the sub_channel_id of this ChannelMembership.


        :param sub_channel_id: The sub_channel_id of this ChannelMembership.
        :type sub_channel_id: str
        """

        self._sub_channel_id = sub_channel_id
