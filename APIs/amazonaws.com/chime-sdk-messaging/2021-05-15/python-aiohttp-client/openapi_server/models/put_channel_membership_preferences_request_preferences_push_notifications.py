# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allow_notifications import AllowNotifications
from openapi_server import util


class PutChannelMembershipPreferencesRequestPreferencesPushNotifications(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_notifications: AllowNotifications=None, filter_rule: str=None):
        """PutChannelMembershipPreferencesRequestPreferencesPushNotifications - a model defined in OpenAPI

        :param allow_notifications: The allow_notifications of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        :param filter_rule: The filter_rule of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        """
        self.openapi_types = {
            'allow_notifications': AllowNotifications,
            'filter_rule': str
        }

        self.attribute_map = {
            'allow_notifications': 'AllowNotifications',
            'filter_rule': 'FilterRule'
        }

        self._allow_notifications = allow_notifications
        self._filter_rule = filter_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutChannelMembershipPreferencesRequestPreferencesPushNotifications':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutChannelMembershipPreferences_request_Preferences_PushNotifications of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_notifications(self):
        """Gets the allow_notifications of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.


        :return: The allow_notifications of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        :rtype: AllowNotifications
        """
        return self._allow_notifications

    @allow_notifications.setter
    def allow_notifications(self, allow_notifications):
        """Sets the allow_notifications of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.


        :param allow_notifications: The allow_notifications of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        :type allow_notifications: AllowNotifications
        """
        if allow_notifications is None:
            raise ValueError("Invalid value for `allow_notifications`, must not be `None`")

        self._allow_notifications = allow_notifications

    @property
    def filter_rule(self):
        """Gets the filter_rule of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.


        :return: The filter_rule of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        :rtype: str
        """
        return self._filter_rule

    @filter_rule.setter
    def filter_rule(self, filter_rule):
        """Sets the filter_rule of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.


        :param filter_rule: The filter_rule of this PutChannelMembershipPreferencesRequestPreferencesPushNotifications.
        :type filter_rule: str
        """

        self._filter_rule = filter_rule
