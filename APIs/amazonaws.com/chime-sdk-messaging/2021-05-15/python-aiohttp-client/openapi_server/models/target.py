# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Target(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, member_arn: str=None):
        """Target - a model defined in OpenAPI

        :param member_arn: The member_arn of this Target.
        """
        self.openapi_types = {
            'member_arn': str
        }

        self.attribute_map = {
            'member_arn': 'MemberArn'
        }

        self._member_arn = member_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Target':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Target of this Target.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_arn(self):
        """Gets the member_arn of this Target.


        :return: The member_arn of this Target.
        :rtype: str
        """
        return self._member_arn

    @member_arn.setter
    def member_arn(self, member_arn):
        """Sets the member_arn of this Target.


        :param member_arn: The member_arn of this Target.
        :type member_arn: str
        """

        self._member_arn = member_arn
