# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetMessagingStreamingConfigurationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, streaming_configurations: List=None):
        """GetMessagingStreamingConfigurationsResponse - a model defined in OpenAPI

        :param streaming_configurations: The streaming_configurations of this GetMessagingStreamingConfigurationsResponse.
        """
        self.openapi_types = {
            'streaming_configurations': List
        }

        self.attribute_map = {
            'streaming_configurations': 'StreamingConfigurations'
        }

        self._streaming_configurations = streaming_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMessagingStreamingConfigurationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMessagingStreamingConfigurationsResponse of this GetMessagingStreamingConfigurationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def streaming_configurations(self):
        """Gets the streaming_configurations of this GetMessagingStreamingConfigurationsResponse.


        :return: The streaming_configurations of this GetMessagingStreamingConfigurationsResponse.
        :rtype: List
        """
        return self._streaming_configurations

    @streaming_configurations.setter
    def streaming_configurations(self, streaming_configurations):
        """Sets the streaming_configurations of this GetMessagingStreamingConfigurationsResponse.


        :param streaming_configurations: The streaming_configurations of this GetMessagingStreamingConfigurationsResponse.
        :type streaming_configurations: List
        """

        self._streaming_configurations = streaming_configurations
