# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubChannelSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sub_channel_id: str=None, membership_count: int=None):
        """SubChannelSummary - a model defined in OpenAPI

        :param sub_channel_id: The sub_channel_id of this SubChannelSummary.
        :param membership_count: The membership_count of this SubChannelSummary.
        """
        self.openapi_types = {
            'sub_channel_id': str,
            'membership_count': int
        }

        self.attribute_map = {
            'sub_channel_id': 'SubChannelId',
            'membership_count': 'MembershipCount'
        }

        self._sub_channel_id = sub_channel_id
        self._membership_count = membership_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubChannelSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubChannelSummary of this SubChannelSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sub_channel_id(self):
        """Gets the sub_channel_id of this SubChannelSummary.


        :return: The sub_channel_id of this SubChannelSummary.
        :rtype: str
        """
        return self._sub_channel_id

    @sub_channel_id.setter
    def sub_channel_id(self, sub_channel_id):
        """Sets the sub_channel_id of this SubChannelSummary.


        :param sub_channel_id: The sub_channel_id of this SubChannelSummary.
        :type sub_channel_id: str
        """

        self._sub_channel_id = sub_channel_id

    @property
    def membership_count(self):
        """Gets the membership_count of this SubChannelSummary.


        :return: The membership_count of this SubChannelSummary.
        :rtype: int
        """
        return self._membership_count

    @membership_count.setter
    def membership_count(self, membership_count):
        """Sets the membership_count of this SubChannelSummary.


        :param membership_count: The membership_count of this SubChannelSummary.
        :type membership_count: int
        """

        self._membership_count = membership_count
