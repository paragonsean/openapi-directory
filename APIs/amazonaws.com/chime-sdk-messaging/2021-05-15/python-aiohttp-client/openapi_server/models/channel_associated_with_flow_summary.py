# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_mode import ChannelMode
from openapi_server.models.channel_privacy import ChannelPrivacy
from openapi_server import util


class ChannelAssociatedWithFlowSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, channel_arn: str=None, mode: ChannelMode=None, privacy: ChannelPrivacy=None, metadata: str=None):
        """ChannelAssociatedWithFlowSummary - a model defined in OpenAPI

        :param name: The name of this ChannelAssociatedWithFlowSummary.
        :param channel_arn: The channel_arn of this ChannelAssociatedWithFlowSummary.
        :param mode: The mode of this ChannelAssociatedWithFlowSummary.
        :param privacy: The privacy of this ChannelAssociatedWithFlowSummary.
        :param metadata: The metadata of this ChannelAssociatedWithFlowSummary.
        """
        self.openapi_types = {
            'name': str,
            'channel_arn': str,
            'mode': ChannelMode,
            'privacy': ChannelPrivacy,
            'metadata': str
        }

        self.attribute_map = {
            'name': 'Name',
            'channel_arn': 'ChannelArn',
            'mode': 'Mode',
            'privacy': 'Privacy',
            'metadata': 'Metadata'
        }

        self._name = name
        self._channel_arn = channel_arn
        self._mode = mode
        self._privacy = privacy
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelAssociatedWithFlowSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelAssociatedWithFlowSummary of this ChannelAssociatedWithFlowSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ChannelAssociatedWithFlowSummary.


        :return: The name of this ChannelAssociatedWithFlowSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ChannelAssociatedWithFlowSummary.


        :param name: The name of this ChannelAssociatedWithFlowSummary.
        :type name: str
        """

        self._name = name

    @property
    def channel_arn(self):
        """Gets the channel_arn of this ChannelAssociatedWithFlowSummary.


        :return: The channel_arn of this ChannelAssociatedWithFlowSummary.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this ChannelAssociatedWithFlowSummary.


        :param channel_arn: The channel_arn of this ChannelAssociatedWithFlowSummary.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn

    @property
    def mode(self):
        """Gets the mode of this ChannelAssociatedWithFlowSummary.


        :return: The mode of this ChannelAssociatedWithFlowSummary.
        :rtype: ChannelMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this ChannelAssociatedWithFlowSummary.


        :param mode: The mode of this ChannelAssociatedWithFlowSummary.
        :type mode: ChannelMode
        """

        self._mode = mode

    @property
    def privacy(self):
        """Gets the privacy of this ChannelAssociatedWithFlowSummary.


        :return: The privacy of this ChannelAssociatedWithFlowSummary.
        :rtype: ChannelPrivacy
        """
        return self._privacy

    @privacy.setter
    def privacy(self, privacy):
        """Sets the privacy of this ChannelAssociatedWithFlowSummary.


        :param privacy: The privacy of this ChannelAssociatedWithFlowSummary.
        :type privacy: ChannelPrivacy
        """

        self._privacy = privacy

    @property
    def metadata(self):
        """Gets the metadata of this ChannelAssociatedWithFlowSummary.


        :return: The metadata of this ChannelAssociatedWithFlowSummary.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ChannelAssociatedWithFlowSummary.


        :param metadata: The metadata of this ChannelAssociatedWithFlowSummary.
        :type metadata: str
        """

        self._metadata = metadata
