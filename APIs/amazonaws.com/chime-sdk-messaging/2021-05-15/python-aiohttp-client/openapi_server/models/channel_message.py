# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_message_persistence_type import ChannelMessagePersistenceType
from openapi_server.models.channel_message_sender import ChannelMessageSender
from openapi_server.models.channel_message_type import ChannelMessageType
from openapi_server.models.send_channel_message_response_status import SendChannelMessageResponseStatus
from openapi_server import util


class ChannelMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_arn: str=None, message_id: str=None, content: str=None, metadata: str=None, type: ChannelMessageType=None, created_timestamp: datetime=None, last_edited_timestamp: datetime=None, last_updated_timestamp: datetime=None, sender: ChannelMessageSender=None, redacted: bool=None, persistence: ChannelMessagePersistenceType=None, status: SendChannelMessageResponseStatus=None, message_attributes: Dict=None, sub_channel_id: str=None, content_type: str=None, target: List=None):
        """ChannelMessage - a model defined in OpenAPI

        :param channel_arn: The channel_arn of this ChannelMessage.
        :param message_id: The message_id of this ChannelMessage.
        :param content: The content of this ChannelMessage.
        :param metadata: The metadata of this ChannelMessage.
        :param type: The type of this ChannelMessage.
        :param created_timestamp: The created_timestamp of this ChannelMessage.
        :param last_edited_timestamp: The last_edited_timestamp of this ChannelMessage.
        :param last_updated_timestamp: The last_updated_timestamp of this ChannelMessage.
        :param sender: The sender of this ChannelMessage.
        :param redacted: The redacted of this ChannelMessage.
        :param persistence: The persistence of this ChannelMessage.
        :param status: The status of this ChannelMessage.
        :param message_attributes: The message_attributes of this ChannelMessage.
        :param sub_channel_id: The sub_channel_id of this ChannelMessage.
        :param content_type: The content_type of this ChannelMessage.
        :param target: The target of this ChannelMessage.
        """
        self.openapi_types = {
            'channel_arn': str,
            'message_id': str,
            'content': str,
            'metadata': str,
            'type': ChannelMessageType,
            'created_timestamp': datetime,
            'last_edited_timestamp': datetime,
            'last_updated_timestamp': datetime,
            'sender': ChannelMessageSender,
            'redacted': bool,
            'persistence': ChannelMessagePersistenceType,
            'status': SendChannelMessageResponseStatus,
            'message_attributes': Dict,
            'sub_channel_id': str,
            'content_type': str,
            'target': List
        }

        self.attribute_map = {
            'channel_arn': 'ChannelArn',
            'message_id': 'MessageId',
            'content': 'Content',
            'metadata': 'Metadata',
            'type': 'Type',
            'created_timestamp': 'CreatedTimestamp',
            'last_edited_timestamp': 'LastEditedTimestamp',
            'last_updated_timestamp': 'LastUpdatedTimestamp',
            'sender': 'Sender',
            'redacted': 'Redacted',
            'persistence': 'Persistence',
            'status': 'Status',
            'message_attributes': 'MessageAttributes',
            'sub_channel_id': 'SubChannelId',
            'content_type': 'ContentType',
            'target': 'Target'
        }

        self._channel_arn = channel_arn
        self._message_id = message_id
        self._content = content
        self._metadata = metadata
        self._type = type
        self._created_timestamp = created_timestamp
        self._last_edited_timestamp = last_edited_timestamp
        self._last_updated_timestamp = last_updated_timestamp
        self._sender = sender
        self._redacted = redacted
        self._persistence = persistence
        self._status = status
        self._message_attributes = message_attributes
        self._sub_channel_id = sub_channel_id
        self._content_type = content_type
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelMessage of this ChannelMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_arn(self):
        """Gets the channel_arn of this ChannelMessage.


        :return: The channel_arn of this ChannelMessage.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this ChannelMessage.


        :param channel_arn: The channel_arn of this ChannelMessage.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn

    @property
    def message_id(self):
        """Gets the message_id of this ChannelMessage.


        :return: The message_id of this ChannelMessage.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this ChannelMessage.


        :param message_id: The message_id of this ChannelMessage.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def content(self):
        """Gets the content of this ChannelMessage.


        :return: The content of this ChannelMessage.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ChannelMessage.


        :param content: The content of this ChannelMessage.
        :type content: str
        """

        self._content = content

    @property
    def metadata(self):
        """Gets the metadata of this ChannelMessage.


        :return: The metadata of this ChannelMessage.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ChannelMessage.


        :param metadata: The metadata of this ChannelMessage.
        :type metadata: str
        """

        self._metadata = metadata

    @property
    def type(self):
        """Gets the type of this ChannelMessage.


        :return: The type of this ChannelMessage.
        :rtype: ChannelMessageType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ChannelMessage.


        :param type: The type of this ChannelMessage.
        :type type: ChannelMessageType
        """

        self._type = type

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this ChannelMessage.


        :return: The created_timestamp of this ChannelMessage.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this ChannelMessage.


        :param created_timestamp: The created_timestamp of this ChannelMessage.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def last_edited_timestamp(self):
        """Gets the last_edited_timestamp of this ChannelMessage.


        :return: The last_edited_timestamp of this ChannelMessage.
        :rtype: datetime
        """
        return self._last_edited_timestamp

    @last_edited_timestamp.setter
    def last_edited_timestamp(self, last_edited_timestamp):
        """Sets the last_edited_timestamp of this ChannelMessage.


        :param last_edited_timestamp: The last_edited_timestamp of this ChannelMessage.
        :type last_edited_timestamp: datetime
        """

        self._last_edited_timestamp = last_edited_timestamp

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this ChannelMessage.


        :return: The last_updated_timestamp of this ChannelMessage.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this ChannelMessage.


        :param last_updated_timestamp: The last_updated_timestamp of this ChannelMessage.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp

    @property
    def sender(self):
        """Gets the sender of this ChannelMessage.


        :return: The sender of this ChannelMessage.
        :rtype: ChannelMessageSender
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this ChannelMessage.


        :param sender: The sender of this ChannelMessage.
        :type sender: ChannelMessageSender
        """

        self._sender = sender

    @property
    def redacted(self):
        """Gets the redacted of this ChannelMessage.


        :return: The redacted of this ChannelMessage.
        :rtype: bool
        """
        return self._redacted

    @redacted.setter
    def redacted(self, redacted):
        """Sets the redacted of this ChannelMessage.


        :param redacted: The redacted of this ChannelMessage.
        :type redacted: bool
        """

        self._redacted = redacted

    @property
    def persistence(self):
        """Gets the persistence of this ChannelMessage.


        :return: The persistence of this ChannelMessage.
        :rtype: ChannelMessagePersistenceType
        """
        return self._persistence

    @persistence.setter
    def persistence(self, persistence):
        """Sets the persistence of this ChannelMessage.


        :param persistence: The persistence of this ChannelMessage.
        :type persistence: ChannelMessagePersistenceType
        """

        self._persistence = persistence

    @property
    def status(self):
        """Gets the status of this ChannelMessage.


        :return: The status of this ChannelMessage.
        :rtype: SendChannelMessageResponseStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ChannelMessage.


        :param status: The status of this ChannelMessage.
        :type status: SendChannelMessageResponseStatus
        """

        self._status = status

    @property
    def message_attributes(self):
        """Gets the message_attributes of this ChannelMessage.


        :return: The message_attributes of this ChannelMessage.
        :rtype: Dict
        """
        return self._message_attributes

    @message_attributes.setter
    def message_attributes(self, message_attributes):
        """Sets the message_attributes of this ChannelMessage.


        :param message_attributes: The message_attributes of this ChannelMessage.
        :type message_attributes: Dict
        """

        self._message_attributes = message_attributes

    @property
    def sub_channel_id(self):
        """Gets the sub_channel_id of this ChannelMessage.


        :return: The sub_channel_id of this ChannelMessage.
        :rtype: str
        """
        return self._sub_channel_id

    @sub_channel_id.setter
    def sub_channel_id(self, sub_channel_id):
        """Sets the sub_channel_id of this ChannelMessage.


        :param sub_channel_id: The sub_channel_id of this ChannelMessage.
        :type sub_channel_id: str
        """

        self._sub_channel_id = sub_channel_id

    @property
    def content_type(self):
        """Gets the content_type of this ChannelMessage.


        :return: The content_type of this ChannelMessage.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ChannelMessage.


        :param content_type: The content_type of this ChannelMessage.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def target(self):
        """Gets the target of this ChannelMessage.


        :return: The target of this ChannelMessage.
        :rtype: List
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this ChannelMessage.


        :param target: The target of this ChannelMessage.
        :type target: List
        """

        self._target = target
