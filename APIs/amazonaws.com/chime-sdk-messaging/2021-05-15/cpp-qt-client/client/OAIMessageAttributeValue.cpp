/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessageAttributeValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessageAttributeValue::OAIMessageAttributeValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessageAttributeValue::OAIMessageAttributeValue() {
    this->initializeModel();
}

OAIMessageAttributeValue::~OAIMessageAttributeValue() {}

void OAIMessageAttributeValue::initializeModel() {

    m_string_values_isSet = false;
    m_string_values_isValid = false;
}

void OAIMessageAttributeValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessageAttributeValue::fromJsonObject(QJsonObject json) {

    m_string_values_isValid = ::OpenAPI::fromJsonValue(m_string_values, json[QString("StringValues")]);
    m_string_values_isSet = !json[QString("StringValues")].isNull() && m_string_values_isValid;
}

QString OAIMessageAttributeValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessageAttributeValue::asJsonObject() const {
    QJsonObject obj;
    if (m_string_values.isSet()) {
        obj.insert(QString("StringValues"), ::OpenAPI::toJsonValue(m_string_values));
    }
    return obj;
}

QList OAIMessageAttributeValue::getStringValues() const {
    return m_string_values;
}
void OAIMessageAttributeValue::setStringValues(const QList &string_values) {
    m_string_values = string_values;
    m_string_values_isSet = true;
}

bool OAIMessageAttributeValue::is_string_values_Set() const{
    return m_string_values_isSet;
}

bool OAIMessageAttributeValue::is_string_values_Valid() const{
    return m_string_values_isValid;
}

bool OAIMessageAttributeValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_string_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessageAttributeValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
