/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchChannelsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchChannelsRequest::OAISearchChannelsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchChannelsRequest::OAISearchChannelsRequest() {
    this->initializeModel();
}

OAISearchChannelsRequest::~OAISearchChannelsRequest() {}

void OAISearchChannelsRequest::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;
}

void OAISearchChannelsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchChannelsRequest::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("Fields")]);
    m_fields_isSet = !json[QString("Fields")].isNull() && m_fields_isValid;
}

QString OAISearchChannelsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchChannelsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_fields.isSet()) {
        obj.insert(QString("Fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    return obj;
}

QList OAISearchChannelsRequest::getFields() const {
    return m_fields;
}
void OAISearchChannelsRequest::setFields(const QList &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAISearchChannelsRequest::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAISearchChannelsRequest::is_fields_Valid() const{
    return m_fields_isValid;
}

bool OAISearchChannelsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchChannelsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fields_isValid && true;
}

} // namespace OpenAPI
