/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelMode::OAIChannelMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelMode::OAIChannelMode() {
    this->initializeModel();
}

OAIChannelMode::~OAIChannelMode() {}

void OAIChannelMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChannelMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChannelMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UNRESTRICTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMode::UNRESTRICTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RESTRICTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMode::RESTRICTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChannelMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChannelMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChannelMode::UNRESTRICTED:
            val = "UNRESTRICTED";
            break;
        case eOAIChannelMode::RESTRICTED:
            val = "RESTRICTED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChannelMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChannelMode::eOAIChannelMode OAIChannelMode::getValue() const {
    return m_value;
}

void OAIChannelMode::setValue(const OAIChannelMode::eOAIChannelMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChannelMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIChannelMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
