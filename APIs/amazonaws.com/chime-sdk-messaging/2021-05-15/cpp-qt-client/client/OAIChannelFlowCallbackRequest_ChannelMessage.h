/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelFlowCallbackRequest_ChannelMessage.h
 *
 * 
 */

#ifndef OAIChannelFlowCallbackRequest_ChannelMessage_H
#define OAIChannelFlowCallbackRequest_ChannelMessage_H

#include <QJsonObject>

#include "OAIChannelFlowCallback_request_ChannelMessage_PushNotification.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannelFlowCallback_request_ChannelMessage_PushNotification;

class OAIChannelFlowCallbackRequest_ChannelMessage : public OAIObject {
public:
    OAIChannelFlowCallbackRequest_ChannelMessage();
    OAIChannelFlowCallbackRequest_ChannelMessage(QString json);
    ~OAIChannelFlowCallbackRequest_ChannelMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIChannelFlowCallback_request_ChannelMessage_PushNotification getPushNotification() const;
    void setPushNotification(const OAIChannelFlowCallback_request_ChannelMessage_PushNotification &push_notification);
    bool is_push_notification_Set() const;
    bool is_push_notification_Valid() const;

    QMap getMessageAttributes() const;
    void setMessageAttributes(const QMap &message_attributes);
    bool is_message_attributes_Set() const;
    bool is_message_attributes_Valid() const;

    QString getSubChannelId() const;
    void setSubChannelId(const QString &sub_channel_id);
    bool is_sub_channel_id_Set() const;
    bool is_sub_channel_id_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIChannelFlowCallback_request_ChannelMessage_PushNotification m_push_notification;
    bool m_push_notification_isSet;
    bool m_push_notification_isValid;

    QMap m_message_attributes;
    bool m_message_attributes_isSet;
    bool m_message_attributes_isValid;

    QString m_sub_channel_id;
    bool m_sub_channel_id_isSet;
    bool m_sub_channel_id_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelFlowCallbackRequest_ChannelMessage)

#endif // OAIChannelFlowCallbackRequest_ChannelMessage_H
