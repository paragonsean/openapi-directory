/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelMessageSummary.h
 *
 * Summary of the messages in a &lt;code&gt;Channel&lt;/code&gt;.
 */

#ifndef OAIChannelMessageSummary_H
#define OAIChannelMessageSummary_H

#include <QJsonObject>

#include "OAIChannelMessageSummary_Status.h"
#include "OAIChannelMessageType.h"
#include "OAIChannelMessage_Sender.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannelMessage_Sender;
class OAIChannelMessageSummary_Status;

class OAIChannelMessageSummary : public OAIObject {
public:
    OAIChannelMessageSummary();
    OAIChannelMessageSummary(QString json);
    ~OAIChannelMessageSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIChannelMessageType getType() const;
    void setType(const OAIChannelMessageType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getLastUpdatedTimestamp() const;
    void setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp);
    bool is_last_updated_timestamp_Set() const;
    bool is_last_updated_timestamp_Valid() const;

    QDateTime getLastEditedTimestamp() const;
    void setLastEditedTimestamp(const QDateTime &last_edited_timestamp);
    bool is_last_edited_timestamp_Set() const;
    bool is_last_edited_timestamp_Valid() const;

    OAIChannelMessage_Sender getSender() const;
    void setSender(const OAIChannelMessage_Sender &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    bool getRedacted() const;
    void setRedacted(const bool &redacted);
    bool is_redacted_Set() const;
    bool is_redacted_Valid() const;

    OAIChannelMessageSummary_Status getStatus() const;
    void setStatus(const OAIChannelMessageSummary_Status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QMap getMessageAttributes() const;
    void setMessageAttributes(const QMap &message_attributes);
    bool is_message_attributes_Set() const;
    bool is_message_attributes_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QList getTarget() const;
    void setTarget(const QList &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIChannelMessageType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_last_updated_timestamp;
    bool m_last_updated_timestamp_isSet;
    bool m_last_updated_timestamp_isValid;

    QDateTime m_last_edited_timestamp;
    bool m_last_edited_timestamp_isSet;
    bool m_last_edited_timestamp_isValid;

    OAIChannelMessage_Sender m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;

    bool m_redacted;
    bool m_redacted_isSet;
    bool m_redacted_isValid;

    OAIChannelMessageSummary_Status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QMap m_message_attributes;
    bool m_message_attributes_isSet;
    bool m_message_attributes_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QList m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelMessageSummary)

#endif // OAIChannelMessageSummary_H
