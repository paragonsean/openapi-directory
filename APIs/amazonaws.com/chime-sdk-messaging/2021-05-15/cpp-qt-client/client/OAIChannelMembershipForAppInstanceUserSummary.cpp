/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelMembershipForAppInstanceUserSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelMembershipForAppInstanceUserSummary::OAIChannelMembershipForAppInstanceUserSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelMembershipForAppInstanceUserSummary::OAIChannelMembershipForAppInstanceUserSummary() {
    this->initializeModel();
}

OAIChannelMembershipForAppInstanceUserSummary::~OAIChannelMembershipForAppInstanceUserSummary() {}

void OAIChannelMembershipForAppInstanceUserSummary::initializeModel() {

    m_channel_summary_isSet = false;
    m_channel_summary_isValid = false;

    m_app_instance_user_membership_summary_isSet = false;
    m_app_instance_user_membership_summary_isValid = false;
}

void OAIChannelMembershipForAppInstanceUserSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelMembershipForAppInstanceUserSummary::fromJsonObject(QJsonObject json) {

    m_channel_summary_isValid = ::OpenAPI::fromJsonValue(m_channel_summary, json[QString("ChannelSummary")]);
    m_channel_summary_isSet = !json[QString("ChannelSummary")].isNull() && m_channel_summary_isValid;

    m_app_instance_user_membership_summary_isValid = ::OpenAPI::fromJsonValue(m_app_instance_user_membership_summary, json[QString("AppInstanceUserMembershipSummary")]);
    m_app_instance_user_membership_summary_isSet = !json[QString("AppInstanceUserMembershipSummary")].isNull() && m_app_instance_user_membership_summary_isValid;
}

QString OAIChannelMembershipForAppInstanceUserSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelMembershipForAppInstanceUserSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_summary.isSet()) {
        obj.insert(QString("ChannelSummary"), ::OpenAPI::toJsonValue(m_channel_summary));
    }
    if (m_app_instance_user_membership_summary.isSet()) {
        obj.insert(QString("AppInstanceUserMembershipSummary"), ::OpenAPI::toJsonValue(m_app_instance_user_membership_summary));
    }
    return obj;
}

OAIChannelMembershipForAppInstanceUserSummary_ChannelSummary OAIChannelMembershipForAppInstanceUserSummary::getChannelSummary() const {
    return m_channel_summary;
}
void OAIChannelMembershipForAppInstanceUserSummary::setChannelSummary(const OAIChannelMembershipForAppInstanceUserSummary_ChannelSummary &channel_summary) {
    m_channel_summary = channel_summary;
    m_channel_summary_isSet = true;
}

bool OAIChannelMembershipForAppInstanceUserSummary::is_channel_summary_Set() const{
    return m_channel_summary_isSet;
}

bool OAIChannelMembershipForAppInstanceUserSummary::is_channel_summary_Valid() const{
    return m_channel_summary_isValid;
}

OAIChannelMembershipForAppInstanceUserSummary_AppInstanceUserMembershipSummary OAIChannelMembershipForAppInstanceUserSummary::getAppInstanceUserMembershipSummary() const {
    return m_app_instance_user_membership_summary;
}
void OAIChannelMembershipForAppInstanceUserSummary::setAppInstanceUserMembershipSummary(const OAIChannelMembershipForAppInstanceUserSummary_AppInstanceUserMembershipSummary &app_instance_user_membership_summary) {
    m_app_instance_user_membership_summary = app_instance_user_membership_summary;
    m_app_instance_user_membership_summary_isSet = true;
}

bool OAIChannelMembershipForAppInstanceUserSummary::is_app_instance_user_membership_summary_Set() const{
    return m_app_instance_user_membership_summary_isSet;
}

bool OAIChannelMembershipForAppInstanceUserSummary::is_app_instance_user_membership_summary_Valid() const{
    return m_app_instance_user_membership_summary_isValid;
}

bool OAIChannelMembershipForAppInstanceUserSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_instance_user_membership_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelMembershipForAppInstanceUserSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
