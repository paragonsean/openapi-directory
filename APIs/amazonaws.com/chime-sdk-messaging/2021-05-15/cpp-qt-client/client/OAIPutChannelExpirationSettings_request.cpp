/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutChannelExpirationSettings_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutChannelExpirationSettings_request::OAIPutChannelExpirationSettings_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutChannelExpirationSettings_request::OAIPutChannelExpirationSettings_request() {
    this->initializeModel();
}

OAIPutChannelExpirationSettings_request::~OAIPutChannelExpirationSettings_request() {}

void OAIPutChannelExpirationSettings_request::initializeModel() {

    m_expiration_settings_isSet = false;
    m_expiration_settings_isValid = false;
}

void OAIPutChannelExpirationSettings_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutChannelExpirationSettings_request::fromJsonObject(QJsonObject json) {

    m_expiration_settings_isValid = ::OpenAPI::fromJsonValue(m_expiration_settings, json[QString("ExpirationSettings")]);
    m_expiration_settings_isSet = !json[QString("ExpirationSettings")].isNull() && m_expiration_settings_isValid;
}

QString OAIPutChannelExpirationSettings_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutChannelExpirationSettings_request::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_settings.isSet()) {
        obj.insert(QString("ExpirationSettings"), ::OpenAPI::toJsonValue(m_expiration_settings));
    }
    return obj;
}

OAICreateChannel_request_ExpirationSettings OAIPutChannelExpirationSettings_request::getExpirationSettings() const {
    return m_expiration_settings;
}
void OAIPutChannelExpirationSettings_request::setExpirationSettings(const OAICreateChannel_request_ExpirationSettings &expiration_settings) {
    m_expiration_settings = expiration_settings;
    m_expiration_settings_isSet = true;
}

bool OAIPutChannelExpirationSettings_request::is_expiration_settings_Set() const{
    return m_expiration_settings_isSet;
}

bool OAIPutChannelExpirationSettings_request::is_expiration_settings_Valid() const{
    return m_expiration_settings_isValid;
}

bool OAIPutChannelExpirationSettings_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutChannelExpirationSettings_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
