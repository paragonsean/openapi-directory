/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchFieldOperator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchFieldOperator::OAISearchFieldOperator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchFieldOperator::OAISearchFieldOperator() {
    this->initializeModel();
}

OAISearchFieldOperator::~OAISearchFieldOperator() {}

void OAISearchFieldOperator::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISearchFieldOperator::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISearchFieldOperator::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EQUALS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchFieldOperator::EQUALS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INCLUDES", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchFieldOperator::INCLUDES;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISearchFieldOperator::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISearchFieldOperator::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISearchFieldOperator::EQUALS:
            val = "EQUALS";
            break;
        case eOAISearchFieldOperator::INCLUDES:
            val = "INCLUDES";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISearchFieldOperator::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISearchFieldOperator::eOAISearchFieldOperator OAISearchFieldOperator::getValue() const {
    return m_value;
}

void OAISearchFieldOperator::setValue(const OAISearchFieldOperator::eOAISearchFieldOperator& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISearchFieldOperator::isSet() const {
    
    return m_value_isSet;
}

bool OAISearchFieldOperator::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
