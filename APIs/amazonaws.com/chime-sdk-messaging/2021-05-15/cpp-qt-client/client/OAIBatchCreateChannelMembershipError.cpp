/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchCreateChannelMembershipError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchCreateChannelMembershipError::OAIBatchCreateChannelMembershipError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchCreateChannelMembershipError::OAIBatchCreateChannelMembershipError() {
    this->initializeModel();
}

OAIBatchCreateChannelMembershipError::~OAIBatchCreateChannelMembershipError() {}

void OAIBatchCreateChannelMembershipError::initializeModel() {

    m_member_arn_isSet = false;
    m_member_arn_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;
}

void OAIBatchCreateChannelMembershipError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchCreateChannelMembershipError::fromJsonObject(QJsonObject json) {

    m_member_arn_isValid = ::OpenAPI::fromJsonValue(m_member_arn, json[QString("MemberArn")]);
    m_member_arn_isSet = !json[QString("MemberArn")].isNull() && m_member_arn_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("ErrorCode")]);
    m_error_code_isSet = !json[QString("ErrorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("ErrorMessage")]);
    m_error_message_isSet = !json[QString("ErrorMessage")].isNull() && m_error_message_isValid;
}

QString OAIBatchCreateChannelMembershipError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchCreateChannelMembershipError::asJsonObject() const {
    QJsonObject obj;
    if (m_member_arn_isSet) {
        obj.insert(QString("MemberArn"), ::OpenAPI::toJsonValue(m_member_arn));
    }
    if (m_error_code.isSet()) {
        obj.insert(QString("ErrorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("ErrorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    return obj;
}

QString OAIBatchCreateChannelMembershipError::getMemberArn() const {
    return m_member_arn;
}
void OAIBatchCreateChannelMembershipError::setMemberArn(const QString &member_arn) {
    m_member_arn = member_arn;
    m_member_arn_isSet = true;
}

bool OAIBatchCreateChannelMembershipError::is_member_arn_Set() const{
    return m_member_arn_isSet;
}

bool OAIBatchCreateChannelMembershipError::is_member_arn_Valid() const{
    return m_member_arn_isValid;
}

OAIErrorCode OAIBatchCreateChannelMembershipError::getErrorCode() const {
    return m_error_code;
}
void OAIBatchCreateChannelMembershipError::setErrorCode(const OAIErrorCode &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIBatchCreateChannelMembershipError::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIBatchCreateChannelMembershipError::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIBatchCreateChannelMembershipError::getErrorMessage() const {
    return m_error_message;
}
void OAIBatchCreateChannelMembershipError::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIBatchCreateChannelMembershipError::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIBatchCreateChannelMembershipError::is_error_message_Valid() const{
    return m_error_message_isValid;
}

bool OAIBatchCreateChannelMembershipError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchCreateChannelMembershipError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
