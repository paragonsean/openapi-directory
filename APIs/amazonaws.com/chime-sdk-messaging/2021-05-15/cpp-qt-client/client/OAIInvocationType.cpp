/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvocationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvocationType::OAIInvocationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvocationType::OAIInvocationType() {
    this->initializeModel();
}

OAIInvocationType::~OAIInvocationType() {}

void OAIInvocationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInvocationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInvocationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ASYNC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvocationType::ASYNC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInvocationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInvocationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInvocationType::ASYNC:
            val = "ASYNC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInvocationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInvocationType::eOAIInvocationType OAIInvocationType::getValue() const {
    return m_value;
}

void OAIInvocationType::setValue(const OAIInvocationType::eOAIInvocationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInvocationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIInvocationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
