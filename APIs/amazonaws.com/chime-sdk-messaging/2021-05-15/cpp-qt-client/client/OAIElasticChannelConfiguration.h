/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElasticChannelConfiguration.h
 *
 * The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million members.
 */

#ifndef OAIElasticChannelConfiguration_H
#define OAIElasticChannelConfiguration_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElasticChannelConfiguration : public OAIObject {
public:
    OAIElasticChannelConfiguration();
    OAIElasticChannelConfiguration(QString json);
    ~OAIElasticChannelConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaximumSubChannels() const;
    void setMaximumSubChannels(const qint32 &maximum_sub_channels);
    bool is_maximum_sub_channels_Set() const;
    bool is_maximum_sub_channels_Valid() const;

    qint32 getTargetMembershipsPerSubChannel() const;
    void setTargetMembershipsPerSubChannel(const qint32 &target_memberships_per_sub_channel);
    bool is_target_memberships_per_sub_channel_Set() const;
    bool is_target_memberships_per_sub_channel_Valid() const;

    qint32 getMinimumMembershipPercentage() const;
    void setMinimumMembershipPercentage(const qint32 &minimum_membership_percentage);
    bool is_minimum_membership_percentage_Set() const;
    bool is_minimum_membership_percentage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_maximum_sub_channels;
    bool m_maximum_sub_channels_isSet;
    bool m_maximum_sub_channels_isValid;

    qint32 m_target_memberships_per_sub_channel;
    bool m_target_memberships_per_sub_channel_isSet;
    bool m_target_memberships_per_sub_channel_isValid;

    qint32 m_minimum_membership_percentage;
    bool m_minimum_membership_percentage_isSet;
    bool m_minimum_membership_percentage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElasticChannelConfiguration)

#endif // OAIElasticChannelConfiguration_H
