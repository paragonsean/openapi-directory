/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateChannelFlowRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateChannelFlowRequest::OAIUpdateChannelFlowRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateChannelFlowRequest::OAIUpdateChannelFlowRequest() {
    this->initializeModel();
}

OAIUpdateChannelFlowRequest::~OAIUpdateChannelFlowRequest() {}

void OAIUpdateChannelFlowRequest::initializeModel() {

    m_processors_isSet = false;
    m_processors_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIUpdateChannelFlowRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateChannelFlowRequest::fromJsonObject(QJsonObject json) {

    m_processors_isValid = ::OpenAPI::fromJsonValue(m_processors, json[QString("Processors")]);
    m_processors_isSet = !json[QString("Processors")].isNull() && m_processors_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIUpdateChannelFlowRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateChannelFlowRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_processors.isSet()) {
        obj.insert(QString("Processors"), ::OpenAPI::toJsonValue(m_processors));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList OAIUpdateChannelFlowRequest::getProcessors() const {
    return m_processors;
}
void OAIUpdateChannelFlowRequest::setProcessors(const QList &processors) {
    m_processors = processors;
    m_processors_isSet = true;
}

bool OAIUpdateChannelFlowRequest::is_processors_Set() const{
    return m_processors_isSet;
}

bool OAIUpdateChannelFlowRequest::is_processors_Valid() const{
    return m_processors_isValid;
}

QString OAIUpdateChannelFlowRequest::getName() const {
    return m_name;
}
void OAIUpdateChannelFlowRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateChannelFlowRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateChannelFlowRequest::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIUpdateChannelFlowRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_processors.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateChannelFlowRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_processors_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
