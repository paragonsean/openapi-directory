/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelPrivacy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelPrivacy::OAIChannelPrivacy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelPrivacy::OAIChannelPrivacy() {
    this->initializeModel();
}

OAIChannelPrivacy::~OAIChannelPrivacy() {}

void OAIChannelPrivacy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChannelPrivacy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChannelPrivacy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PUBLIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelPrivacy::PUBLIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRIVATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelPrivacy::PRIVATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChannelPrivacy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChannelPrivacy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChannelPrivacy::PUBLIC:
            val = "PUBLIC";
            break;
        case eOAIChannelPrivacy::PRIVATE:
            val = "PRIVATE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChannelPrivacy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChannelPrivacy::eOAIChannelPrivacy OAIChannelPrivacy::getValue() const {
    return m_value;
}

void OAIChannelPrivacy::setValue(const OAIChannelPrivacy::eOAIChannelPrivacy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChannelPrivacy::isSet() const {
    
    return m_value_isSet;
}

bool OAIChannelPrivacy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
