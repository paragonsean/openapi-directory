/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProcessorConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProcessorConfiguration::OAIProcessorConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProcessorConfiguration::OAIProcessorConfiguration() {
    this->initializeModel();
}

OAIProcessorConfiguration::~OAIProcessorConfiguration() {}

void OAIProcessorConfiguration::initializeModel() {

    m_lambda_isSet = false;
    m_lambda_isValid = false;
}

void OAIProcessorConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProcessorConfiguration::fromJsonObject(QJsonObject json) {

    m_lambda_isValid = ::OpenAPI::fromJsonValue(m_lambda, json[QString("Lambda")]);
    m_lambda_isSet = !json[QString("Lambda")].isNull() && m_lambda_isValid;
}

QString OAIProcessorConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProcessorConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_lambda.isSet()) {
        obj.insert(QString("Lambda"), ::OpenAPI::toJsonValue(m_lambda));
    }
    return obj;
}

OAIProcessorConfiguration_Lambda OAIProcessorConfiguration::getLambda() const {
    return m_lambda;
}
void OAIProcessorConfiguration::setLambda(const OAIProcessorConfiguration_Lambda &lambda) {
    m_lambda = lambda;
    m_lambda_isSet = true;
}

bool OAIProcessorConfiguration::is_lambda_Set() const{
    return m_lambda_isSet;
}

bool OAIProcessorConfiguration::is_lambda_Valid() const{
    return m_lambda_isValid;
}

bool OAIProcessorConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lambda.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProcessorConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_lambda_isValid && true;
}

} // namespace OpenAPI
