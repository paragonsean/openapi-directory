/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListChannelMembershipsForAppInstanceUserResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListChannelMembershipsForAppInstanceUserResponse::OAIListChannelMembershipsForAppInstanceUserResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListChannelMembershipsForAppInstanceUserResponse::OAIListChannelMembershipsForAppInstanceUserResponse() {
    this->initializeModel();
}

OAIListChannelMembershipsForAppInstanceUserResponse::~OAIListChannelMembershipsForAppInstanceUserResponse() {}

void OAIListChannelMembershipsForAppInstanceUserResponse::initializeModel() {

    m_channel_memberships_isSet = false;
    m_channel_memberships_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListChannelMembershipsForAppInstanceUserResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListChannelMembershipsForAppInstanceUserResponse::fromJsonObject(QJsonObject json) {

    m_channel_memberships_isValid = ::OpenAPI::fromJsonValue(m_channel_memberships, json[QString("ChannelMemberships")]);
    m_channel_memberships_isSet = !json[QString("ChannelMemberships")].isNull() && m_channel_memberships_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListChannelMembershipsForAppInstanceUserResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListChannelMembershipsForAppInstanceUserResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_memberships.isSet()) {
        obj.insert(QString("ChannelMemberships"), ::OpenAPI::toJsonValue(m_channel_memberships));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListChannelMembershipsForAppInstanceUserResponse::getChannelMemberships() const {
    return m_channel_memberships;
}
void OAIListChannelMembershipsForAppInstanceUserResponse::setChannelMemberships(const QList &channel_memberships) {
    m_channel_memberships = channel_memberships;
    m_channel_memberships_isSet = true;
}

bool OAIListChannelMembershipsForAppInstanceUserResponse::is_channel_memberships_Set() const{
    return m_channel_memberships_isSet;
}

bool OAIListChannelMembershipsForAppInstanceUserResponse::is_channel_memberships_Valid() const{
    return m_channel_memberships_isValid;
}

QString OAIListChannelMembershipsForAppInstanceUserResponse::getNextToken() const {
    return m_next_token;
}
void OAIListChannelMembershipsForAppInstanceUserResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListChannelMembershipsForAppInstanceUserResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListChannelMembershipsForAppInstanceUserResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListChannelMembershipsForAppInstanceUserResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_memberships.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListChannelMembershipsForAppInstanceUserResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
