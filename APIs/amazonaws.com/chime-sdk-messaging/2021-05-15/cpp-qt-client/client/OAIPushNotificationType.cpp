/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPushNotificationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPushNotificationType::OAIPushNotificationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPushNotificationType::OAIPushNotificationType() {
    this->initializeModel();
}

OAIPushNotificationType::~OAIPushNotificationType() {}

void OAIPushNotificationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPushNotificationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPushNotificationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEFAULT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPushNotificationType::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VOIP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPushNotificationType::VOIP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPushNotificationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPushNotificationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPushNotificationType::DEFAULT:
            val = "DEFAULT";
            break;
        case eOAIPushNotificationType::VOIP:
            val = "VOIP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPushNotificationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPushNotificationType::eOAIPushNotificationType OAIPushNotificationType::getValue() const {
    return m_value;
}

void OAIPushNotificationType::setValue(const OAIPushNotificationType::eOAIPushNotificationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPushNotificationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPushNotificationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
