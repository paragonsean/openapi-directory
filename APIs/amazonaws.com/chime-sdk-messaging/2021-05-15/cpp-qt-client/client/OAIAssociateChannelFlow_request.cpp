/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateChannelFlow_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateChannelFlow_request::OAIAssociateChannelFlow_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateChannelFlow_request::OAIAssociateChannelFlow_request() {
    this->initializeModel();
}

OAIAssociateChannelFlow_request::~OAIAssociateChannelFlow_request() {}

void OAIAssociateChannelFlow_request::initializeModel() {

    m_channel_flow_arn_isSet = false;
    m_channel_flow_arn_isValid = false;
}

void OAIAssociateChannelFlow_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateChannelFlow_request::fromJsonObject(QJsonObject json) {

    m_channel_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_flow_arn, json[QString("ChannelFlowArn")]);
    m_channel_flow_arn_isSet = !json[QString("ChannelFlowArn")].isNull() && m_channel_flow_arn_isValid;
}

QString OAIAssociateChannelFlow_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateChannelFlow_request::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_flow_arn_isSet) {
        obj.insert(QString("ChannelFlowArn"), ::OpenAPI::toJsonValue(m_channel_flow_arn));
    }
    return obj;
}

QString OAIAssociateChannelFlow_request::getChannelFlowArn() const {
    return m_channel_flow_arn;
}
void OAIAssociateChannelFlow_request::setChannelFlowArn(const QString &channel_flow_arn) {
    m_channel_flow_arn = channel_flow_arn;
    m_channel_flow_arn_isSet = true;
}

bool OAIAssociateChannelFlow_request::is_channel_flow_arn_Set() const{
    return m_channel_flow_arn_isSet;
}

bool OAIAssociateChannelFlow_request::is_channel_flow_arn_Valid() const{
    return m_channel_flow_arn_isValid;
}

bool OAIAssociateChannelFlow_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateChannelFlow_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_channel_flow_arn_isValid && true;
}

} // namespace OpenAPI
