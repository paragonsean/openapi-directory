/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateChannelFlowResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateChannelFlowResponse::OAICreateChannelFlowResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateChannelFlowResponse::OAICreateChannelFlowResponse() {
    this->initializeModel();
}

OAICreateChannelFlowResponse::~OAICreateChannelFlowResponse() {}

void OAICreateChannelFlowResponse::initializeModel() {

    m_channel_flow_arn_isSet = false;
    m_channel_flow_arn_isValid = false;
}

void OAICreateChannelFlowResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateChannelFlowResponse::fromJsonObject(QJsonObject json) {

    m_channel_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_flow_arn, json[QString("ChannelFlowArn")]);
    m_channel_flow_arn_isSet = !json[QString("ChannelFlowArn")].isNull() && m_channel_flow_arn_isValid;
}

QString OAICreateChannelFlowResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateChannelFlowResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_flow_arn_isSet) {
        obj.insert(QString("ChannelFlowArn"), ::OpenAPI::toJsonValue(m_channel_flow_arn));
    }
    return obj;
}

QString OAICreateChannelFlowResponse::getChannelFlowArn() const {
    return m_channel_flow_arn;
}
void OAICreateChannelFlowResponse::setChannelFlowArn(const QString &channel_flow_arn) {
    m_channel_flow_arn = channel_flow_arn;
    m_channel_flow_arn_isSet = true;
}

bool OAICreateChannelFlowResponse::is_channel_flow_arn_Set() const{
    return m_channel_flow_arn_isSet;
}

bool OAICreateChannelFlowResponse::is_channel_flow_arn_Valid() const{
    return m_channel_flow_arn_isValid;
}

bool OAICreateChannelFlowResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateChannelFlowResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
