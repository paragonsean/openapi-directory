/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFallbackAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFallbackAction::OAIFallbackAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFallbackAction::OAIFallbackAction() {
    this->initializeModel();
}

OAIFallbackAction::~OAIFallbackAction() {}

void OAIFallbackAction::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFallbackAction::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFallbackAction::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CONTINUE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFallbackAction::CONTINUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ABORT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFallbackAction::ABORT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFallbackAction::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFallbackAction::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFallbackAction::CONTINUE:
            val = "CONTINUE";
            break;
        case eOAIFallbackAction::ABORT:
            val = "ABORT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFallbackAction::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFallbackAction::eOAIFallbackAction OAIFallbackAction::getValue() const {
    return m_value;
}

void OAIFallbackAction::setValue(const OAIFallbackAction::eOAIFallbackAction& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFallbackAction::isSet() const {
    
    return m_value_isSet;
}

bool OAIFallbackAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
