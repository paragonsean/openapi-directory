/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelFlowSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelFlowSummary::OAIChannelFlowSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelFlowSummary::OAIChannelFlowSummary() {
    this->initializeModel();
}

OAIChannelFlowSummary::~OAIChannelFlowSummary() {}

void OAIChannelFlowSummary::initializeModel() {

    m_channel_flow_arn_isSet = false;
    m_channel_flow_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_processors_isSet = false;
    m_processors_isValid = false;
}

void OAIChannelFlowSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelFlowSummary::fromJsonObject(QJsonObject json) {

    m_channel_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_flow_arn, json[QString("ChannelFlowArn")]);
    m_channel_flow_arn_isSet = !json[QString("ChannelFlowArn")].isNull() && m_channel_flow_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_processors_isValid = ::OpenAPI::fromJsonValue(m_processors, json[QString("Processors")]);
    m_processors_isSet = !json[QString("Processors")].isNull() && m_processors_isValid;
}

QString OAIChannelFlowSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelFlowSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_flow_arn_isSet) {
        obj.insert(QString("ChannelFlowArn"), ::OpenAPI::toJsonValue(m_channel_flow_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_processors.isSet()) {
        obj.insert(QString("Processors"), ::OpenAPI::toJsonValue(m_processors));
    }
    return obj;
}

QString OAIChannelFlowSummary::getChannelFlowArn() const {
    return m_channel_flow_arn;
}
void OAIChannelFlowSummary::setChannelFlowArn(const QString &channel_flow_arn) {
    m_channel_flow_arn = channel_flow_arn;
    m_channel_flow_arn_isSet = true;
}

bool OAIChannelFlowSummary::is_channel_flow_arn_Set() const{
    return m_channel_flow_arn_isSet;
}

bool OAIChannelFlowSummary::is_channel_flow_arn_Valid() const{
    return m_channel_flow_arn_isValid;
}

QString OAIChannelFlowSummary::getName() const {
    return m_name;
}
void OAIChannelFlowSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChannelFlowSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChannelFlowSummary::is_name_Valid() const{
    return m_name_isValid;
}

QList OAIChannelFlowSummary::getProcessors() const {
    return m_processors;
}
void OAIChannelFlowSummary::setProcessors(const QList &processors) {
    m_processors = processors;
    m_processors_isSet = true;
}

bool OAIChannelFlowSummary::is_processors_Set() const{
    return m_processors_isSet;
}

bool OAIChannelFlowSummary::is_processors_Valid() const{
    return m_processors_isValid;
}

bool OAIChannelFlowSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_processors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelFlowSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
