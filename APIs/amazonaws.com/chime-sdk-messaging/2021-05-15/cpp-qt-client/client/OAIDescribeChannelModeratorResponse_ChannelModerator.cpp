/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeChannelModeratorResponse_ChannelModerator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeChannelModeratorResponse_ChannelModerator::OAIDescribeChannelModeratorResponse_ChannelModerator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeChannelModeratorResponse_ChannelModerator::OAIDescribeChannelModeratorResponse_ChannelModerator() {
    this->initializeModel();
}

OAIDescribeChannelModeratorResponse_ChannelModerator::~OAIDescribeChannelModeratorResponse_ChannelModerator() {}

void OAIDescribeChannelModeratorResponse_ChannelModerator::initializeModel() {

    m_moderator_isSet = false;
    m_moderator_isValid = false;

    m_channel_arn_isSet = false;
    m_channel_arn_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;
}

void OAIDescribeChannelModeratorResponse_ChannelModerator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeChannelModeratorResponse_ChannelModerator::fromJsonObject(QJsonObject json) {

    m_moderator_isValid = ::OpenAPI::fromJsonValue(m_moderator, json[QString("Moderator")]);
    m_moderator_isSet = !json[QString("Moderator")].isNull() && m_moderator_isValid;

    m_channel_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_arn, json[QString("ChannelArn")]);
    m_channel_arn_isSet = !json[QString("ChannelArn")].isNull() && m_channel_arn_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;
}

QString OAIDescribeChannelModeratorResponse_ChannelModerator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeChannelModeratorResponse_ChannelModerator::asJsonObject() const {
    QJsonObject obj;
    if (m_moderator.isSet()) {
        obj.insert(QString("Moderator"), ::OpenAPI::toJsonValue(m_moderator));
    }
    if (m_channel_arn_isSet) {
        obj.insert(QString("ChannelArn"), ::OpenAPI::toJsonValue(m_channel_arn));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    return obj;
}

OAIChannelModerator_Moderator OAIDescribeChannelModeratorResponse_ChannelModerator::getModerator() const {
    return m_moderator;
}
void OAIDescribeChannelModeratorResponse_ChannelModerator::setModerator(const OAIChannelModerator_Moderator &moderator) {
    m_moderator = moderator;
    m_moderator_isSet = true;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_moderator_Set() const{
    return m_moderator_isSet;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_moderator_Valid() const{
    return m_moderator_isValid;
}

QString OAIDescribeChannelModeratorResponse_ChannelModerator::getChannelArn() const {
    return m_channel_arn;
}
void OAIDescribeChannelModeratorResponse_ChannelModerator::setChannelArn(const QString &channel_arn) {
    m_channel_arn = channel_arn;
    m_channel_arn_isSet = true;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_channel_arn_Set() const{
    return m_channel_arn_isSet;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_channel_arn_Valid() const{
    return m_channel_arn_isValid;
}

QDateTime OAIDescribeChannelModeratorResponse_ChannelModerator::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIDescribeChannelModeratorResponse_ChannelModerator::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

OAIChannelModerator_CreatedBy OAIDescribeChannelModeratorResponse_ChannelModerator::getCreatedBy() const {
    return m_created_by;
}
void OAIDescribeChannelModeratorResponse_ChannelModerator::setCreatedBy(const OAIChannelModerator_CreatedBy &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::is_created_by_Valid() const{
    return m_created_by_isValid;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_moderator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeChannelModeratorResponse_ChannelModerator::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
