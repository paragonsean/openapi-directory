/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelFlowCallbackResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelFlowCallbackResponse::OAIChannelFlowCallbackResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelFlowCallbackResponse::OAIChannelFlowCallbackResponse() {
    this->initializeModel();
}

OAIChannelFlowCallbackResponse::~OAIChannelFlowCallbackResponse() {}

void OAIChannelFlowCallbackResponse::initializeModel() {

    m_channel_arn_isSet = false;
    m_channel_arn_isValid = false;

    m_callback_id_isSet = false;
    m_callback_id_isValid = false;
}

void OAIChannelFlowCallbackResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelFlowCallbackResponse::fromJsonObject(QJsonObject json) {

    m_channel_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_arn, json[QString("ChannelArn")]);
    m_channel_arn_isSet = !json[QString("ChannelArn")].isNull() && m_channel_arn_isValid;

    m_callback_id_isValid = ::OpenAPI::fromJsonValue(m_callback_id, json[QString("CallbackId")]);
    m_callback_id_isSet = !json[QString("CallbackId")].isNull() && m_callback_id_isValid;
}

QString OAIChannelFlowCallbackResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelFlowCallbackResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_arn_isSet) {
        obj.insert(QString("ChannelArn"), ::OpenAPI::toJsonValue(m_channel_arn));
    }
    if (m_callback_id_isSet) {
        obj.insert(QString("CallbackId"), ::OpenAPI::toJsonValue(m_callback_id));
    }
    return obj;
}

QString OAIChannelFlowCallbackResponse::getChannelArn() const {
    return m_channel_arn;
}
void OAIChannelFlowCallbackResponse::setChannelArn(const QString &channel_arn) {
    m_channel_arn = channel_arn;
    m_channel_arn_isSet = true;
}

bool OAIChannelFlowCallbackResponse::is_channel_arn_Set() const{
    return m_channel_arn_isSet;
}

bool OAIChannelFlowCallbackResponse::is_channel_arn_Valid() const{
    return m_channel_arn_isValid;
}

QString OAIChannelFlowCallbackResponse::getCallbackId() const {
    return m_callback_id;
}
void OAIChannelFlowCallbackResponse::setCallbackId(const QString &callback_id) {
    m_callback_id = callback_id;
    m_callback_id_isSet = true;
}

bool OAIChannelFlowCallbackResponse::is_callback_id_Set() const{
    return m_callback_id_isSet;
}

bool OAIChannelFlowCallbackResponse::is_callback_id_Valid() const{
    return m_callback_id_isValid;
}

bool OAIChannelFlowCallbackResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_callback_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelFlowCallbackResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
