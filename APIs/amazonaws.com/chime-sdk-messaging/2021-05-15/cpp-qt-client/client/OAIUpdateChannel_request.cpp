/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateChannel_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateChannel_request::OAIUpdateChannel_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateChannel_request::OAIUpdateChannel_request() {
    this->initializeModel();
}

OAIUpdateChannel_request::~OAIUpdateChannel_request() {}

void OAIUpdateChannel_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_mode_isSet = false;
    m_mode_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIUpdateChannel_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateChannel_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("Mode")]);
    m_mode_isSet = !json[QString("Mode")].isNull() && m_mode_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("Metadata")]);
    m_metadata_isSet = !json[QString("Metadata")].isNull() && m_metadata_isValid;
}

QString OAIUpdateChannel_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateChannel_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_mode_isSet) {
        obj.insert(QString("Mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("Metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

QString OAIUpdateChannel_request::getName() const {
    return m_name;
}
void OAIUpdateChannel_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateChannel_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateChannel_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateChannel_request::getMode() const {
    return m_mode;
}
void OAIUpdateChannel_request::setMode(const QString &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAIUpdateChannel_request::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAIUpdateChannel_request::is_mode_Valid() const{
    return m_mode_isValid;
}

QString OAIUpdateChannel_request::getMetadata() const {
    return m_metadata;
}
void OAIUpdateChannel_request::setMetadata(const QString &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIUpdateChannel_request::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIUpdateChannel_request::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIUpdateChannel_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateChannel_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
