/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeChannelFlowResponse_ChannelFlow.h
 *
 * 
 */

#ifndef OAIDescribeChannelFlowResponse_ChannelFlow_H
#define OAIDescribeChannelFlowResponse_ChannelFlow_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeChannelFlowResponse_ChannelFlow : public OAIObject {
public:
    OAIDescribeChannelFlowResponse_ChannelFlow();
    OAIDescribeChannelFlowResponse_ChannelFlow(QString json);
    ~OAIDescribeChannelFlowResponse_ChannelFlow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChannelFlowArn() const;
    void setChannelFlowArn(const QString &channel_flow_arn);
    bool is_channel_flow_arn_Set() const;
    bool is_channel_flow_arn_Valid() const;

    QList getProcessors() const;
    void setProcessors(const QList &processors);
    bool is_processors_Set() const;
    bool is_processors_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getLastUpdatedTimestamp() const;
    void setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp);
    bool is_last_updated_timestamp_Set() const;
    bool is_last_updated_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_channel_flow_arn;
    bool m_channel_flow_arn_isSet;
    bool m_channel_flow_arn_isValid;

    QList m_processors;
    bool m_processors_isSet;
    bool m_processors_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_last_updated_timestamp;
    bool m_last_updated_timestamp_isSet;
    bool m_last_updated_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeChannelFlowResponse_ChannelFlow)

#endif // OAIDescribeChannelFlowResponse_ChannelFlow_H
