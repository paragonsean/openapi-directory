/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelMembershipSummary_Member.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelMembershipSummary_Member::OAIChannelMembershipSummary_Member(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelMembershipSummary_Member::OAIChannelMembershipSummary_Member() {
    this->initializeModel();
}

OAIChannelMembershipSummary_Member::~OAIChannelMembershipSummary_Member() {}

void OAIChannelMembershipSummary_Member::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIChannelMembershipSummary_Member::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelMembershipSummary_Member::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIChannelMembershipSummary_Member::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelMembershipSummary_Member::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIChannelMembershipSummary_Member::getArn() const {
    return m_arn;
}
void OAIChannelMembershipSummary_Member::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIChannelMembershipSummary_Member::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIChannelMembershipSummary_Member::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIChannelMembershipSummary_Member::getName() const {
    return m_name;
}
void OAIChannelMembershipSummary_Member::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChannelMembershipSummary_Member::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChannelMembershipSummary_Member::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIChannelMembershipSummary_Member::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelMembershipSummary_Member::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
