/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchChannels_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchChannels_request::OAISearchChannels_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchChannels_request::OAISearchChannels_request() {
    this->initializeModel();
}

OAISearchChannels_request::~OAISearchChannels_request() {}

void OAISearchChannels_request::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;
}

void OAISearchChannels_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchChannels_request::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("Fields")]);
    m_fields_isSet = !json[QString("Fields")].isNull() && m_fields_isValid;
}

QString OAISearchChannels_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchChannels_request::asJsonObject() const {
    QJsonObject obj;
    if (m_fields.size() > 0) {
        obj.insert(QString("Fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    return obj;
}

QList<OAISearchField> OAISearchChannels_request::getFields() const {
    return m_fields;
}
void OAISearchChannels_request::setFields(const QList<OAISearchField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAISearchChannels_request::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAISearchChannels_request::is_fields_Valid() const{
    return m_fields_isValid;
}

bool OAISearchChannels_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchChannels_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fields_isValid && true;
}

} // namespace OpenAPI
