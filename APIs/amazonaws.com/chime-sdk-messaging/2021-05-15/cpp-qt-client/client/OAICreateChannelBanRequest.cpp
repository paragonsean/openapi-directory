/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateChannelBanRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateChannelBanRequest::OAICreateChannelBanRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateChannelBanRequest::OAICreateChannelBanRequest() {
    this->initializeModel();
}

OAICreateChannelBanRequest::~OAICreateChannelBanRequest() {}

void OAICreateChannelBanRequest::initializeModel() {

    m_member_arn_isSet = false;
    m_member_arn_isValid = false;
}

void OAICreateChannelBanRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateChannelBanRequest::fromJsonObject(QJsonObject json) {

    m_member_arn_isValid = ::OpenAPI::fromJsonValue(m_member_arn, json[QString("MemberArn")]);
    m_member_arn_isSet = !json[QString("MemberArn")].isNull() && m_member_arn_isValid;
}

QString OAICreateChannelBanRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateChannelBanRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_member_arn_isSet) {
        obj.insert(QString("MemberArn"), ::OpenAPI::toJsonValue(m_member_arn));
    }
    return obj;
}

QString OAICreateChannelBanRequest::getMemberArn() const {
    return m_member_arn;
}
void OAICreateChannelBanRequest::setMemberArn(const QString &member_arn) {
    m_member_arn = member_arn;
    m_member_arn_isSet = true;
}

bool OAICreateChannelBanRequest::is_member_arn_Set() const{
    return m_member_arn_isSet;
}

bool OAICreateChannelBanRequest::is_member_arn_Valid() const{
    return m_member_arn_isValid;
}

bool OAICreateChannelBanRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateChannelBanRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_member_arn_isValid && true;
}

} // namespace OpenAPI
