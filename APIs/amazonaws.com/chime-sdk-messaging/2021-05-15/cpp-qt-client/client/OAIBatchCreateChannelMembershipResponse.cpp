/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchCreateChannelMembershipResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchCreateChannelMembershipResponse::OAIBatchCreateChannelMembershipResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchCreateChannelMembershipResponse::OAIBatchCreateChannelMembershipResponse() {
    this->initializeModel();
}

OAIBatchCreateChannelMembershipResponse::~OAIBatchCreateChannelMembershipResponse() {}

void OAIBatchCreateChannelMembershipResponse::initializeModel() {

    m_batch_channel_memberships_isSet = false;
    m_batch_channel_memberships_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;
}

void OAIBatchCreateChannelMembershipResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchCreateChannelMembershipResponse::fromJsonObject(QJsonObject json) {

    m_batch_channel_memberships_isValid = ::OpenAPI::fromJsonValue(m_batch_channel_memberships, json[QString("BatchChannelMemberships")]);
    m_batch_channel_memberships_isSet = !json[QString("BatchChannelMemberships")].isNull() && m_batch_channel_memberships_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("Errors")]);
    m_errors_isSet = !json[QString("Errors")].isNull() && m_errors_isValid;
}

QString OAIBatchCreateChannelMembershipResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchCreateChannelMembershipResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_channel_memberships.isSet()) {
        obj.insert(QString("BatchChannelMemberships"), ::OpenAPI::toJsonValue(m_batch_channel_memberships));
    }
    if (m_errors.isSet()) {
        obj.insert(QString("Errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    return obj;
}

OAIBatchCreateChannelMembershipResponse_BatchChannelMemberships OAIBatchCreateChannelMembershipResponse::getBatchChannelMemberships() const {
    return m_batch_channel_memberships;
}
void OAIBatchCreateChannelMembershipResponse::setBatchChannelMemberships(const OAIBatchCreateChannelMembershipResponse_BatchChannelMemberships &batch_channel_memberships) {
    m_batch_channel_memberships = batch_channel_memberships;
    m_batch_channel_memberships_isSet = true;
}

bool OAIBatchCreateChannelMembershipResponse::is_batch_channel_memberships_Set() const{
    return m_batch_channel_memberships_isSet;
}

bool OAIBatchCreateChannelMembershipResponse::is_batch_channel_memberships_Valid() const{
    return m_batch_channel_memberships_isValid;
}

QList OAIBatchCreateChannelMembershipResponse::getErrors() const {
    return m_errors;
}
void OAIBatchCreateChannelMembershipResponse::setErrors(const QList &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIBatchCreateChannelMembershipResponse::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIBatchCreateChannelMembershipResponse::is_errors_Valid() const{
    return m_errors_isValid;
}

bool OAIBatchCreateChannelMembershipResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_channel_memberships.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchCreateChannelMembershipResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
