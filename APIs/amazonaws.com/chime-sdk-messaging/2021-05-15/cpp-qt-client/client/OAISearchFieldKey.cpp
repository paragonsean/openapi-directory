/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchFieldKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchFieldKey::OAISearchFieldKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchFieldKey::OAISearchFieldKey() {
    this->initializeModel();
}

OAISearchFieldKey::~OAISearchFieldKey() {}

void OAISearchFieldKey::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISearchFieldKey::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISearchFieldKey::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MEMBERS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISearchFieldKey::MEMBERS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISearchFieldKey::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISearchFieldKey::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISearchFieldKey::MEMBERS:
            val = "MEMBERS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISearchFieldKey::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISearchFieldKey::eOAISearchFieldKey OAISearchFieldKey::getValue() const {
    return m_value;
}

void OAISearchFieldKey::setValue(const OAISearchFieldKey::eOAISearchFieldKey& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISearchFieldKey::isSet() const {
    
    return m_value_isSet;
}

bool OAISearchFieldKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
