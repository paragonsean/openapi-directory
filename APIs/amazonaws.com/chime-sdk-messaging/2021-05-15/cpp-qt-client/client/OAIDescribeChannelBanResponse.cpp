/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeChannelBanResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeChannelBanResponse::OAIDescribeChannelBanResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeChannelBanResponse::OAIDescribeChannelBanResponse() {
    this->initializeModel();
}

OAIDescribeChannelBanResponse::~OAIDescribeChannelBanResponse() {}

void OAIDescribeChannelBanResponse::initializeModel() {

    m_channel_ban_isSet = false;
    m_channel_ban_isValid = false;
}

void OAIDescribeChannelBanResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeChannelBanResponse::fromJsonObject(QJsonObject json) {

    m_channel_ban_isValid = ::OpenAPI::fromJsonValue(m_channel_ban, json[QString("ChannelBan")]);
    m_channel_ban_isSet = !json[QString("ChannelBan")].isNull() && m_channel_ban_isValid;
}

QString OAIDescribeChannelBanResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeChannelBanResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_ban.isSet()) {
        obj.insert(QString("ChannelBan"), ::OpenAPI::toJsonValue(m_channel_ban));
    }
    return obj;
}

OAIDescribeChannelBanResponse_ChannelBan OAIDescribeChannelBanResponse::getChannelBan() const {
    return m_channel_ban;
}
void OAIDescribeChannelBanResponse::setChannelBan(const OAIDescribeChannelBanResponse_ChannelBan &channel_ban) {
    m_channel_ban = channel_ban;
    m_channel_ban_isSet = true;
}

bool OAIDescribeChannelBanResponse::is_channel_ban_Set() const{
    return m_channel_ban_isSet;
}

bool OAIDescribeChannelBanResponse::is_channel_ban_Valid() const{
    return m_channel_ban_isValid;
}

bool OAIDescribeChannelBanResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_ban.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeChannelBanResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
