/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelMessagePersistenceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelMessagePersistenceType::OAIChannelMessagePersistenceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelMessagePersistenceType::OAIChannelMessagePersistenceType() {
    this->initializeModel();
}

OAIChannelMessagePersistenceType::~OAIChannelMessagePersistenceType() {}

void OAIChannelMessagePersistenceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChannelMessagePersistenceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChannelMessagePersistenceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PERSISTENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMessagePersistenceType::PERSISTENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NON_PERSISTENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelMessagePersistenceType::NON_PERSISTENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChannelMessagePersistenceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChannelMessagePersistenceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChannelMessagePersistenceType::PERSISTENT:
            val = "PERSISTENT";
            break;
        case eOAIChannelMessagePersistenceType::NON_PERSISTENT:
            val = "NON_PERSISTENT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChannelMessagePersistenceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChannelMessagePersistenceType::eOAIChannelMessagePersistenceType OAIChannelMessagePersistenceType::getValue() const {
    return m_value;
}

void OAIChannelMessagePersistenceType::setValue(const OAIChannelMessagePersistenceType::eOAIChannelMessagePersistenceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChannelMessagePersistenceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIChannelMessagePersistenceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
