/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateChannelFlowRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateChannelFlowRequest::OAIAssociateChannelFlowRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateChannelFlowRequest::OAIAssociateChannelFlowRequest() {
    this->initializeModel();
}

OAIAssociateChannelFlowRequest::~OAIAssociateChannelFlowRequest() {}

void OAIAssociateChannelFlowRequest::initializeModel() {

    m_channel_flow_arn_isSet = false;
    m_channel_flow_arn_isValid = false;
}

void OAIAssociateChannelFlowRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateChannelFlowRequest::fromJsonObject(QJsonObject json) {

    m_channel_flow_arn_isValid = ::OpenAPI::fromJsonValue(m_channel_flow_arn, json[QString("ChannelFlowArn")]);
    m_channel_flow_arn_isSet = !json[QString("ChannelFlowArn")].isNull() && m_channel_flow_arn_isValid;
}

QString OAIAssociateChannelFlowRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateChannelFlowRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_flow_arn_isSet) {
        obj.insert(QString("ChannelFlowArn"), ::OpenAPI::toJsonValue(m_channel_flow_arn));
    }
    return obj;
}

QString OAIAssociateChannelFlowRequest::getChannelFlowArn() const {
    return m_channel_flow_arn;
}
void OAIAssociateChannelFlowRequest::setChannelFlowArn(const QString &channel_flow_arn) {
    m_channel_flow_arn = channel_flow_arn;
    m_channel_flow_arn_isSet = true;
}

bool OAIAssociateChannelFlowRequest::is_channel_flow_arn_Set() const{
    return m_channel_flow_arn_isSet;
}

bool OAIAssociateChannelFlowRequest::is_channel_flow_arn_Valid() const{
    return m_channel_flow_arn_isValid;
}

bool OAIAssociateChannelFlowRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_flow_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateChannelFlowRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_channel_flow_arn_isValid && true;
}

} // namespace OpenAPI
