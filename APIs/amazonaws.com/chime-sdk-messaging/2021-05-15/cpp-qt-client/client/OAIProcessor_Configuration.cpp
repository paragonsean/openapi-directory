/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProcessor_Configuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProcessor_Configuration::OAIProcessor_Configuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProcessor_Configuration::OAIProcessor_Configuration() {
    this->initializeModel();
}

OAIProcessor_Configuration::~OAIProcessor_Configuration() {}

void OAIProcessor_Configuration::initializeModel() {

    m_lambda_isSet = false;
    m_lambda_isValid = false;
}

void OAIProcessor_Configuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProcessor_Configuration::fromJsonObject(QJsonObject json) {

    m_lambda_isValid = ::OpenAPI::fromJsonValue(m_lambda, json[QString("Lambda")]);
    m_lambda_isSet = !json[QString("Lambda")].isNull() && m_lambda_isValid;
}

QString OAIProcessor_Configuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProcessor_Configuration::asJsonObject() const {
    QJsonObject obj;
    if (m_lambda.isSet()) {
        obj.insert(QString("Lambda"), ::OpenAPI::toJsonValue(m_lambda));
    }
    return obj;
}

OAIProcessorConfiguration_Lambda OAIProcessor_Configuration::getLambda() const {
    return m_lambda;
}
void OAIProcessor_Configuration::setLambda(const OAIProcessorConfiguration_Lambda &lambda) {
    m_lambda = lambda;
    m_lambda_isSet = true;
}

bool OAIProcessor_Configuration::is_lambda_Set() const{
    return m_lambda_isSet;
}

bool OAIProcessor_Configuration::is_lambda_Valid() const{
    return m_lambda_isValid;
}

bool OAIProcessor_Configuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lambda.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProcessor_Configuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_lambda_isValid && true;
}

} // namespace OpenAPI
