/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessagingSessionEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessagingSessionEndpoint::OAIMessagingSessionEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessagingSessionEndpoint::OAIMessagingSessionEndpoint() {
    this->initializeModel();
}

OAIMessagingSessionEndpoint::~OAIMessagingSessionEndpoint() {}

void OAIMessagingSessionEndpoint::initializeModel() {

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIMessagingSessionEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessagingSessionEndpoint::fromJsonObject(QJsonObject json) {

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("Url")]);
    m_url_isSet = !json[QString("Url")].isNull() && m_url_isValid;
}

QString OAIMessagingSessionEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessagingSessionEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_url_isSet) {
        obj.insert(QString("Url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIMessagingSessionEndpoint::getUrl() const {
    return m_url;
}
void OAIMessagingSessionEndpoint::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIMessagingSessionEndpoint::is_url_Set() const{
    return m_url_isSet;
}

bool OAIMessagingSessionEndpoint::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIMessagingSessionEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessagingSessionEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
