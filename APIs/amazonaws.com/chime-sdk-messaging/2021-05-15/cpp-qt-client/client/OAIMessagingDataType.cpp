/**
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessagingDataType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessagingDataType::OAIMessagingDataType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessagingDataType::OAIMessagingDataType() {
    this->initializeModel();
}

OAIMessagingDataType::~OAIMessagingDataType() {}

void OAIMessagingDataType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMessagingDataType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMessagingDataType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Channel", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessagingDataType::CHANNEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ChannelMessage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMessagingDataType::CHANNELMESSAGE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMessagingDataType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMessagingDataType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMessagingDataType::CHANNEL:
            val = "Channel";
            break;
        case eOAIMessagingDataType::CHANNELMESSAGE:
            val = "ChannelMessage";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMessagingDataType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMessagingDataType::eOAIMessagingDataType OAIMessagingDataType::getValue() const {
    return m_value;
}

void OAIMessagingDataType::setValue(const OAIMessagingDataType::eOAIMessagingDataType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMessagingDataType::isSet() const {
    
    return m_value_isSet;
}

bool OAIMessagingDataType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
